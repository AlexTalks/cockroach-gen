// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) geoFigure() geopb.Shape {
	return u.val.(geopb.Shape)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:642
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10417

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 27,
	-2, 1128,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 73,
	199, 955,
	216, 955,
	231, 250,
	324, 250,
	333, 757,
	361, 250,
	370, 757,
	410, 757,
	434, 250,
	459, 757,
	-2, 0,
	-1, 78,
	231, 254,
	-2, 0,
	-1, 79,
	118, 1128,
	205, 1128,
	444, 1128,
	445, 1128,
	-2, 0,
	-1, 91,
	131, 1102,
	148, 1102,
	161, 1102,
	213, 1102,
	243, 1102,
	285, 1102,
	295, 1102,
	439, 1102,
	-2, 1073,
	-1, 123,
	138, 666,
	230, 666,
	327, 646,
	379, 646,
	427, 666,
	-2, 0,
	-1, 124,
	4, 1130,
	21, 1130,
	22, 1130,
	23, 1130,
	24, 1130,
	25, 1130,
	27, 1130,
	28, 1130,
	34, 1130,
	39, 1130,
	40, 1130,
	41, 1130,
	42, 1130,
	43, 1130,
	44, 1130,
	45, 1130,
	46, 1130,
	47, 1130,
	48, 1130,
	49, 1130,
	50, 1130,
	51, 1130,
	53, 1130,
	54, 1130,
	55, 1130,
	56, 1130,
	57, 1130,
	58, 1130,
	59, 1130,
	62, 1130,
	63, 1130,
	64, 1130,
	65, 1130,
	67, 1130,
	68, 1130,
	69, 1130,
	73, 1130,
	74, 1130,
	75, 1130,
	76, 1130,
	77, 1130,
	78, 1130,
	79, 1130,
	82, 1130,
	83, 1130,
	84, 1130,
	85, 1130,
	87, 1130,
	89, 1130,
	90, 1130,
	91, 1130,
	93, 1130,
	95, 1130,
	96, 1130,
	104, 1130,
	105, 1130,
	106, 1130,
	107, 1130,
	108, 1130,
	109, 1130,
	110, 1130,
	111, 1130,
	113, 1130,
	114, 1130,
	115, 1130,
	117, 1130,
	118, 1130,
	120, 1130,
	123, 1130,
	124, 1130,
	125, 1130,
	127, 1130,
	129, 1130,
	130, 1130,
	132, 1130,
	133, 1130,
	134, 1130,
	135, 1130,
	136, 1130,
	137, 1130,
	138, 1130,
	139, 1130,
	140, 1130,
	141, 1130,
	142, 1130,
	143, 1130,
	144, 1130,
	145, 1130,
	147, 1130,
	153, 1130,
	154, 1130,
	155, 1130,
	156, 1130,
	157, 1130,
	158, 1130,
	160, 1130,
	162, 1130,
	166, 1130,
	167, 1130,
	168, 1130,
	169, 1130,
	170, 1130,
	171, 1130,
	173, 1130,
	174, 1130,
	176, 1130,
	177, 1130,
	179, 1130,
	180, 1130,
	181, 1130,
	182, 1130,
	183, 1130,
	184, 1130,
	185, 1130,
	186, 1130,
	187, 1130,
	189, 1130,
	190, 1130,
	192, 1130,
	193, 1130,
	194, 1130,
	195, 1130,
	196, 1130,
	199, 1130,
	200, 1130,
	201, 1130,
	202, 1130,
	205, 1130,
	206, 1130,
	207, 1130,
	208, 1130,
	209, 1130,
	210, 1130,
	211, 1130,
	212, 1130,
	214, 1130,
	216, 1130,
	218, 1130,
	220, 1130,
	221, 1130,
	222, 1130,
	224, 1130,
	225, 1130,
	228, 1130,
	229, 1130,
	230, 1130,
	231, 1130,
	232, 1130,
	234, 1130,
	235, 1130,
	237, 1130,
	238, 1130,
	240, 1130,
	241, 1130,
	244, 1130,
	245, 1130,
	246, 1130,
	249, 1130,
	250, 1130,
	251, 1130,
	252, 1130,
	254, 1130,
	255, 1130,
	256, 1130,
	257, 1130,
	258, 1130,
	259, 1130,
	260, 1130,
	261, 1130,
	262, 1130,
	263, 1130,
	264, 1130,
	265, 1130,
	266, 1130,
	268, 1130,
	269, 1130,
	270, 1130,
	271, 1130,
	272, 1130,
	274, 1130,
	276, 1130,
	278, 1130,
	280, 1130,
	281, 1130,
	282, 1130,
	283, 1130,
	284, 1130,
	286, 1130,
	287, 1130,
	288, 1130,
	290, 1130,
	291, 1130,
	292, 1130,
	293, 1130,
	296, 1130,
	297, 1130,
	298, 1130,
	300, 1130,
	302, 1130,
	303, 1130,
	304, 1130,
	305, 1130,
	306, 1130,
	307, 1130,
	308, 1130,
	309, 1130,
	310, 1130,
	311, 1130,
	313, 1130,
	314, 1130,
	315, 1130,
	316, 1130,
	317, 1130,
	318, 1130,
	319, 1130,
	320, 1130,
	321, 1130,
	323, 1130,
	325, 1130,
	326, 1130,
	327, 1130,
	328, 1130,
	329, 1130,
	330, 1130,
	331, 1130,
	332, 1130,
	333, 1130,
	334, 1130,
	336, 1130,
	337, 1130,
	338, 1130,
	339, 1130,
	340, 1130,
	341, 1130,
	343, 1130,
	344, 1130,
	345, 1130,
	346, 1130,
	347, 1130,
	348, 1130,
	349, 1130,
	350, 1130,
	352, 1130,
	354, 1130,
	355, 1130,
	356, 1130,
	357, 1130,
	358, 1130,
	359, 1130,
	361, 1130,
	362, 1130,
	363, 1130,
	364, 1130,
	365, 1130,
	366, 1130,
	367, 1130,
	368, 1130,
	370, 1130,
	371, 1130,
	372, 1130,
	373, 1130,
	374, 1130,
	375, 1130,
	376, 1130,
	377, 1130,
	378, 1130,
	379, 1130,
	381, 1130,
	382, 1130,
	383, 1130,
	384, 1130,
	385, 1130,
	387, 1130,
	388, 1130,
	389, 1130,
	390, 1130,
	391, 1130,
	393, 1130,
	394, 1130,
	395, 1130,
	396, 1130,
	397, 1130,
	398, 1130,
	399, 1130,
	400, 1130,
	401, 1130,
	402, 1130,
	403, 1130,
	404, 1130,
	405, 1130,
	407, 1130,
	408, 1130,
	409, 1130,
	411, 1130,
	412, 1130,
	413, 1130,
	414, 1130,
	415, 1130,
	416, 1130,
	417, 1130,
	419, 1130,
	420, 1130,
	421, 1130,
	422, 1130,
	423, 1130,
	425, 1130,
	427, 1130,
	428, 1130,
	429, 1130,
	430, 1130,
	431, 1130,
	433, 1130,
	434, 1130,
	435, 1130,
	437, 1130,
	438, 1130,
	441, 1130,
	442, 1130,
	443, 1130,
	444, 1130,
	445, 1130,
	446, 1130,
	447, 1130,
	449, 1130,
	451, 1130,
	452, 1130,
	453, 1130,
	454, 1130,
	455, 1130,
	456, 1130,
	457, 1130,
	459, 1130,
	460, 1130,
	461, 1130,
	466, 1130,
	467, 1130,
	468, 1130,
	469, 1130,
	470, 1130,
	471, 1130,
	-2, 0,
	-1, 125,
	1, 1007,
	220, 1007,
	323, 1007,
	331, 1007,
	474, 1007,
	497, 1007,
	-2, 0,
	-1, 127,
	1, 1007,
	497, 1007,
	-2, 0,
	-1, 128,
	1, 1007,
	497, 1007,
	-2, 0,
	-1, 129,
	1, 1007,
	424, 1007,
	497, 1007,
	-2, 0,
	-1, 154,
	131, 1101,
	148, 1101,
	161, 1101,
	213, 1101,
	243, 1101,
	285, 1101,
	295, 1101,
	439, 1101,
	-2, 1076,
	-1, 187,
	4, 1137,
	5, 1137,
	6, 1137,
	7, 1137,
	8, 1137,
	9, 1137,
	10, 1137,
	21, 1137,
	22, 1137,
	23, 1137,
	24, 1137,
	25, 1137,
	27, 1137,
	28, 1137,
	34, 1137,
	35, 1137,
	39, 1137,
	40, 1137,
	41, 1137,
	42, 1137,
	43, 1137,
	44, 1137,
	45, 1137,
	46, 1137,
	47, 1137,
	48, 1137,
	49, 1137,
	50, 1137,
	51, 1137,
	53, 1137,
	54, 1137,
	55, 1137,
	56, 1137,
	57, 1137,
	58, 1137,
	59, 1137,
	60, 1137,
	61, 1137,
	62, 1137,
	63, 1137,
	64, 1137,
	65, 1137,
	67, 1137,
	68, 1137,
	69, 1137,
	71, 1137,
	73, 1137,
	74, 1137,
	75, 1137,
	76, 1137,
	77, 1137,
	78, 1137,
	79, 1137,
	82, 1137,
	83, 1137,
	84, 1137,
	85, 1137,
	87, 1137,
	89, 1137,
	90, 1137,
	91, 1137,
	93, 1137,
	94, 1137,
	95, 1137,
	96, 1137,
	97, 1137,
	98, 1137,
	99, 1137,
	100, 1137,
	101, 1137,
	102, 1137,
	103, 1137,
	104, 1137,
	105, 1137,
	106, 1137,
	107, 1137,
	108, 1137,
	109, 1137,
	110, 1137,
	111, 1137,
	112, 1137,
	113, 1137,
	114, 1137,
	115, 1137,
	117, 1137,
	118, 1137,
	120, 1137,
	123, 1137,
	124, 1137,
	125, 1137,
	127, 1137,
	129, 1137,
	130, 1137,
	132, 1137,
	133, 1137,
	134, 1137,
	135, 1137,
	136, 1137,
	137, 1137,
	138, 1137,
	139, 1137,
	140, 1137,
	141, 1137,
	142, 1137,
	143, 1137,
	144, 1137,
	145, 1137,
	146, 1137,
	147, 1137,
	153, 1137,
	154, 1137,
	155, 1137,
	156, 1137,
	157, 1137,
	158, 1137,
	160, 1137,
	162, 1137,
	165, 1137,
	166, 1137,
	167, 1137,
	168, 1137,
	169, 1137,
	170, 1137,
	171, 1137,
	173, 1137,
	174, 1137,
	176, 1137,
	177, 1137,
	179, 1137,
	180, 1137,
	181, 1137,
	182, 1137,
	183, 1137,
	184, 1137,
	185, 1137,
	186, 1137,
	187, 1137,
	188, 1137,
	189, 1137,
	190, 1137,
	192, 1137,
	193, 1137,
	194, 1137,
	195, 1137,
	196, 1137,
	199, 1137,
	200, 1137,
	201, 1137,
	202, 1137,
	204, 1137,
	205, 1137,
	206, 1137,
	207, 1137,
	208, 1137,
	209, 1137,
	210, 1137,
	211, 1137,
	212, 1137,
	214, 1137,
	216, 1137,
	217, 1137,
	218, 1137,
	219, 1137,
	220, 1137,
	221, 1137,
	222, 1137,
	223, 1137,
	224, 1137,
	225, 1137,
	228, 1137,
	229, 1137,
	230, 1137,
	231, 1137,
	232, 1137,
	234, 1137,
	235, 1137,
	237, 1137,
	238, 1137,
	239, 1137,
	240, 1137,
	241, 1137,
	242, 1137,
	244, 1137,
	245, 1137,
	246, 1137,
	247, 1137,
	248, 1137,
	249, 1137,
	250, 1137,
	251, 1137,
	252, 1137,
	254, 1137,
	255, 1137,
	256, 1137,
	257, 1137,
	258, 1137,
	259, 1137,
	260, 1137,
	261, 1137,
	262, 1137,
	263, 1137,
	264, 1137,
	265, 1137,
	266, 1137,
	267, 1137,
	268, 1137,
	269, 1137,
	270, 1137,
	271, 1137,
	272, 1137,
	273, 1137,
	274, 1137,
	275, 1137,
	276, 1137,
	277, 1137,
	278, 1137,
	279, 1137,
	280, 1137,
	281, 1137,
	282, 1137,
	283, 1137,
	284, 1137,
	286, 1137,
	287, 1137,
	288, 1137,
	291, 1137,
	292, 1137,
	293, 1137,
	296, 1137,
	297, 1137,
	298, 1137,
	299, 1137,
	300, 1137,
	301, 1137,
	302, 1137,
	303, 1137,
	304, 1137,
	305, 1137,
	306, 1137,
	307, 1137,
	308, 1137,
	309, 1137,
	310, 1137,
	311, 1137,
	313, 1137,
	314, 1137,
	315, 1137,
	316, 1137,
	317, 1137,
	318, 1137,
	319, 1137,
	320, 1137,
	321, 1137,
	323, 1137,
	325, 1137,
	326, 1137,
	327, 1137,
	328, 1137,
	329, 1137,
	330, 1137,
	331, 1137,
	332, 1137,
	333, 1137,
	334, 1137,
	336, 1137,
	337, 1137,
	338, 1137,
	339, 1137,
	340, 1137,
	341, 1137,
	343, 1137,
	344, 1137,
	345, 1137,
	346, 1137,
	347, 1137,
	348, 1137,
	349, 1137,
	350, 1137,
	352, 1137,
	353, 1137,
	354, 1137,
	355, 1137,
	356, 1137,
	357, 1137,
	358, 1137,
	359, 1137,
	361, 1137,
	362, 1137,
	363, 1137,
	364, 1137,
	365, 1137,
	366, 1137,
	367, 1137,
	368, 1137,
	370, 1137,
	371, 1137,
	372, 1137,
	373, 1137,
	374, 1137,
	375, 1137,
	376, 1137,
	377, 1137,
	378, 1137,
	379, 1137,
	380, 1137,
	381, 1137,
	382, 1137,
	383, 1137,
	384, 1137,
	385, 1137,
	386, 1137,
	387, 1137,
	388, 1137,
	389, 1137,
	390, 1137,
	391, 1137,
	393, 1137,
	394, 1137,
	395, 1137,
	396, 1137,
	397, 1137,
	398, 1137,
	399, 1137,
	400, 1137,
	401, 1137,
	402, 1137,
	403, 1137,
	404, 1137,
	405, 1137,
	407, 1137,
	408, 1137,
	409, 1137,
	411, 1137,
	412, 1137,
	413, 1137,
	414, 1137,
	415, 1137,
	416, 1137,
	417, 1137,
	419, 1137,
	420, 1137,
	421, 1137,
	422, 1137,
	423, 1137,
	425, 1137,
	427, 1137,
	428, 1137,
	429, 1137,
	430, 1137,
	431, 1137,
	432, 1137,
	433, 1137,
	434, 1137,
	435, 1137,
	437, 1137,
	438, 1137,
	440, 1137,
	441, 1137,
	442, 1137,
	443, 1137,
	444, 1137,
	445, 1137,
	446, 1137,
	447, 1137,
	448, 1137,
	449, 1137,
	451, 1137,
	452, 1137,
	453, 1137,
	454, 1137,
	455, 1137,
	456, 1137,
	457, 1137,
	459, 1137,
	460, 1137,
	461, 1137,
	466, 1137,
	467, 1137,
	468, 1137,
	469, 1137,
	470, 1137,
	471, 1137,
	472, 1137,
	478, 1137,
	485, 1137,
	486, 1137,
	487, 1137,
	494, 1137,
	498, 1137,
	-2, 0,
	-1, 595,
	164, 1861,
	424, 1861,
	477, 1861,
	496, 1861,
	-2, 0,
	-1, 596,
	164, 1950,
	424, 1950,
	477, 1950,
	496, 1950,
	-2, 0,
	-1, 597,
	164, 1849,
	424, 1849,
	477, 1849,
	496, 1849,
	-2, 0,
	-1, 599,
	164, 2051,
	424, 2051,
	477, 2051,
	496, 2051,
	-2, 0,
	-1, 601,
	164, 2082,
	424, 2082,
	477, 2082,
	496, 2082,
	-2, 0,
	-1, 608,
	164, 1965,
	424, 1965,
	477, 1965,
	496, 1965,
	-2, 504,
	-1, 636,
	496, 1803,
	499, 1803,
	-2, 719,
	-1, 637,
	496, 1805,
	499, 1805,
	-2, 720,
	-1, 638,
	496, 1804,
	499, 1804,
	-2, 721,
	-1, 639,
	499, 1740,
	-2, 722,
	-1, 681,
	459, 935,
	-2, 758,
	-1, 720,
	4, 953,
	21, 953,
	22, 953,
	23, 953,
	24, 953,
	25, 953,
	27, 953,
	28, 953,
	34, 953,
	39, 953,
	40, 953,
	41, 953,
	42, 953,
	43, 953,
	44, 953,
	45, 953,
	46, 953,
	47, 953,
	48, 953,
	49, 953,
	50, 953,
	51, 953,
	53, 953,
	54, 953,
	55, 953,
	56, 953,
	57, 953,
	58, 953,
	59, 953,
	62, 953,
	63, 953,
	64, 953,
	65, 953,
	67, 953,
	68, 953,
	69, 953,
	73, 953,
	74, 953,
	75, 953,
	76, 953,
	77, 953,
	78, 953,
	79, 953,
	82, 953,
	83, 953,
	84, 953,
	85, 953,
	87, 953,
	89, 953,
	90, 953,
	91, 953,
	93, 953,
	95, 953,
	96, 953,
	104, 953,
	105, 953,
	106, 953,
	107, 953,
	108, 953,
	109, 953,
	110, 953,
	111, 953,
	113, 953,
	114, 953,
	115, 953,
	117, 953,
	118, 953,
	120, 953,
	123, 953,
	124, 953,
	125, 953,
	127, 953,
	129, 953,
	130, 953,
	132, 953,
	133, 953,
	134, 953,
	135, 953,
	136, 953,
	137, 953,
	138, 953,
	139, 953,
	140, 953,
	141, 953,
	142, 953,
	143, 953,
	144, 953,
	145, 953,
	147, 953,
	153, 953,
	154, 953,
	155, 953,
	156, 953,
	157, 953,
	158, 953,
	160, 953,
	162, 953,
	166, 953,
	167, 953,
	168, 953,
	169, 953,
	170, 953,
	171, 953,
	173, 953,
	174, 953,
	176, 953,
	177, 953,
	179, 953,
	180, 953,
	181, 953,
	182, 953,
	183, 953,
	184, 953,
	185, 953,
	186, 953,
	187, 953,
	189, 953,
	190, 953,
	192, 953,
	193, 953,
	194, 953,
	195, 953,
	196, 953,
	199, 953,
	200, 953,
	201, 953,
	202, 953,
	205, 953,
	206, 953,
	207, 953,
	208, 953,
	209, 953,
	210, 953,
	211, 953,
	212, 953,
	214, 953,
	216, 953,
	218, 953,
	220, 953,
	221, 953,
	222, 953,
	224, 953,
	225, 953,
	228, 953,
	229, 953,
	230, 953,
	231, 953,
	232, 953,
	234, 953,
	235, 953,
	237, 953,
	238, 953,
	240, 953,
	241, 953,
	244, 953,
	245, 953,
	246, 953,
	249, 953,
	250, 953,
	251, 953,
	252, 953,
	254, 953,
	255, 953,
	256, 953,
	257, 953,
	258, 953,
	259, 953,
	260, 953,
	261, 953,
	262, 953,
	263, 953,
	264, 953,
	265, 953,
	266, 953,
	268, 953,
	269, 953,
	270, 953,
	271, 953,
	272, 953,
	274, 953,
	276, 953,
	278, 953,
	280, 953,
	281, 953,
	282, 953,
	283, 953,
	284, 953,
	286, 953,
	287, 953,
	288, 953,
	291, 953,
	292, 953,
	293, 953,
	296, 953,
	297, 953,
	298, 953,
	300, 953,
	302, 953,
	303, 953,
	304, 953,
	305, 953,
	306, 953,
	307, 953,
	308, 953,
	309, 953,
	310, 953,
	311, 953,
	313, 953,
	314, 953,
	315, 953,
	316, 953,
	317, 953,
	318, 953,
	319, 953,
	320, 953,
	321, 953,
	323, 953,
	325, 953,
	326, 953,
	327, 953,
	328, 953,
	329, 953,
	330, 953,
	331, 953,
	332, 953,
	333, 953,
	334, 953,
	336, 953,
	337, 953,
	338, 953,
	339, 953,
	340, 953,
	341, 953,
	343, 953,
	344, 953,
	345, 953,
	346, 953,
	347, 953,
	348, 953,
	349, 953,
	350, 953,
	352, 953,
	354, 953,
	355, 953,
	356, 953,
	357, 953,
	358, 953,
	359, 953,
	361, 953,
	362, 953,
	363, 953,
	364, 953,
	365, 953,
	366, 953,
	367, 953,
	368, 953,
	370, 953,
	371, 953,
	372, 953,
	373, 953,
	374, 953,
	375, 953,
	376, 953,
	377, 953,
	378, 953,
	379, 953,
	381, 953,
	382, 953,
	383, 953,
	384, 953,
	385, 953,
	387, 953,
	388, 953,
	389, 953,
	390, 953,
	391, 953,
	393, 953,
	394, 953,
	395, 953,
	396, 953,
	397, 953,
	398, 953,
	399, 953,
	400, 953,
	401, 953,
	402, 953,
	403, 953,
	404, 953,
	405, 953,
	407, 953,
	408, 953,
	409, 953,
	411, 953,
	412, 953,
	413, 953,
	414, 953,
	415, 953,
	416, 953,
	417, 953,
	419, 953,
	420, 953,
	421, 953,
	422, 953,
	423, 953,
	425, 953,
	427, 953,
	428, 953,
	429, 953,
	430, 953,
	431, 953,
	433, 953,
	434, 953,
	435, 953,
	437, 953,
	438, 953,
	441, 953,
	442, 953,
	443, 953,
	444, 953,
	445, 953,
	446, 953,
	447, 953,
	449, 953,
	451, 953,
	452, 953,
	453, 953,
	454, 953,
	455, 953,
	456, 953,
	457, 953,
	459, 953,
	460, 953,
	461, 953,
	466, 953,
	467, 953,
	468, 953,
	469, 953,
	470, 953,
	471, 953,
	-2, 0,
	-1, 784,
	327, 647,
	379, 647,
	-2, 0,
	-1, 785,
	327, 646,
	379, 646,
	-2, 594,
	-1, 789,
	1, 676,
	493, 676,
	495, 676,
	497, 676,
	-2, 0,
	-1, 790,
	1, 718,
	161, 718,
	493, 718,
	495, 718,
	497, 718,
	-2, 0,
	-1, 798,
	1, 650,
	493, 650,
	495, 650,
	497, 650,
	-2, 0,
	-1, 801,
	1, 676,
	493, 676,
	495, 676,
	497, 676,
	-2, 0,
	-1, 802,
	1, 678,
	493, 678,
	495, 678,
	497, 678,
	-2, 0,
	-1, 803,
	1, 681,
	493, 681,
	495, 681,
	497, 681,
	-2, 0,
	-1, 808,
	1, 697,
	493, 697,
	495, 697,
	497, 697,
	-2, 0,
	-1, 809,
	1, 699,
	493, 699,
	495, 699,
	497, 699,
	-2, 0,
	-1, 852,
	148, 1139,
	161, 1139,
	243, 1139,
	285, 1139,
	-2, 1080,
	-1, 865,
	148, 1138,
	161, 1138,
	243, 1138,
	285, 1138,
	-2, 1077,
	-1, 889,
	496, 1802,
	-2, 512,
	-1, 917,
	494, 1794,
	-2, 1785,
	-1, 924,
	5, 1296,
	-2, 1837,
	-1, 925,
	5, 1297,
	-2, 1843,
	-1, 926,
	5, 1298,
	-2, 1842,
	-1, 927,
	5, 1299,
	-2, 2079,
	-1, 928,
	5, 1300,
	-2, 1967,
	-1, 929,
	5, 1301,
	-2, 2043,
	-1, 930,
	5, 1302,
	-2, 2045,
	-1, 931,
	5, 1303,
	-2, 2058,
	-1, 932,
	5, 1304,
	-2, 2046,
	-1, 933,
	5, 1305,
	-2, 2047,
	-1, 934,
	5, 1306,
	-2, 1836,
	-1, 935,
	5, 1307,
	-2, 2096,
	-1, 936,
	5, 1308,
	-2, 1923,
	-1, 937,
	5, 1309,
	-2, 1979,
	-1, 938,
	5, 1310,
	-2, 1981,
	-1, 939,
	5, 1311,
	-2, 1927,
	-1, 940,
	5, 1312,
	494, 1812,
	-2, 1803,
	-1, 946,
	494, 1813,
	-2, 1804,
	-1, 948,
	5, 1316,
	-2, 2131,
	-1, 949,
	5, 1317,
	-2, 2132,
	-1, 950,
	5, 1318,
	-2, 1926,
	-1, 951,
	5, 1319,
	-2, 2146,
	-1, 952,
	5, 1320,
	-2, 1928,
	-1, 953,
	5, 1321,
	-2, 1929,
	-1, 954,
	5, 1322,
	-2, 1930,
	-1, 955,
	5, 1323,
	-2, 2111,
	-1, 956,
	5, 1324,
	-2, 2144,
	-1, 957,
	5, 1325,
	-2, 1901,
	-1, 958,
	5, 1326,
	-2, 1902,
	-1, 959,
	5, 1340,
	-2, 2123,
	-1, 961,
	5, 1315,
	-2, 2119,
	-1, 962,
	5, 1315,
	-2, 2118,
	-1, 963,
	5, 1315,
	-2, 2137,
	-1, 964,
	5, 1332,
	-2, 2113,
	-1, 965,
	5, 1333,
	-2, 1838,
	-1, 966,
	5, 1343,
	-2, 2112,
	-1, 967,
	5, 1345,
	-2, 2155,
	-1, 969,
	5, 1356,
	-2, 1872,
	-1, 970,
	5, 1367,
	-2, 2148,
	-1, 971,
	5, 1359,
	-2, 2149,
	-1, 972,
	5, 1367,
	-2, 2150,
	-1, 973,
	5, 1363,
	-2, 2151,
	-1, 974,
	5, 1284,
	-2, 2124,
	-1, 975,
	5, 1285,
	-2, 2125,
	-1, 976,
	5, 1267,
	-2, 1936,
	-1, 977,
	5, 1268,
	-2, 1937,
	-1, 978,
	496, 1800,
	-2, 1784,
	-1, 979,
	494, 2176,
	-2, 1801,
	-1, 1001,
	5, 1351,
	-2, 2070,
	-1, 1019,
	5, 1350,
	-2, 2156,
	-1, 1029,
	5, 1352,
	460, 1352,
	-2, 2114,
	-1, 1030,
	5, 1353,
	460, 1353,
	-2, 2115,
	-1, 1067,
	494, 1812,
	-2, 1803,
	-1, 1095,
	164, 2082,
	424, 2082,
	477, 2082,
	496, 2082,
	-2, 0,
	-1, 1098,
	1, 490,
	497, 490,
	-2, 1015,
	-1, 1223,
	343, 1780,
	487, 1780,
	-2, 1778,
	-1, 1235,
	498, 1780,
	-2, 1781,
	-1, 1236,
	1, 932,
	493, 932,
	495, 932,
	497, 932,
	-2, 1126,
	-1, 1284,
	333, 757,
	459, 757,
	-2, 249,
	-1, 1307,
	1, 932,
	493, 932,
	495, 932,
	497, 932,
	-2, 1126,
	-1, 1313,
	4, 953,
	21, 953,
	22, 953,
	23, 953,
	24, 953,
	25, 953,
	27, 953,
	28, 953,
	34, 953,
	39, 953,
	40, 953,
	41, 953,
	42, 953,
	43, 953,
	44, 953,
	45, 953,
	46, 953,
	47, 953,
	48, 953,
	49, 953,
	50, 953,
	51, 953,
	53, 953,
	54, 953,
	55, 953,
	56, 953,
	57, 953,
	58, 953,
	59, 953,
	62, 953,
	63, 953,
	64, 953,
	65, 953,
	67, 953,
	68, 953,
	69, 953,
	73, 953,
	74, 953,
	75, 953,
	76, 953,
	77, 953,
	78, 953,
	79, 953,
	82, 953,
	83, 953,
	84, 953,
	85, 953,
	87, 953,
	89, 953,
	90, 953,
	91, 953,
	93, 953,
	95, 953,
	96, 953,
	104, 953,
	105, 953,
	106, 953,
	107, 953,
	108, 953,
	109, 953,
	110, 953,
	111, 953,
	113, 953,
	114, 953,
	115, 953,
	117, 953,
	118, 953,
	120, 953,
	123, 953,
	124, 953,
	125, 953,
	127, 953,
	129, 953,
	130, 953,
	132, 953,
	133, 953,
	134, 953,
	135, 953,
	136, 953,
	137, 953,
	138, 953,
	139, 953,
	140, 953,
	141, 953,
	142, 953,
	143, 953,
	144, 953,
	145, 953,
	153, 953,
	154, 953,
	155, 953,
	156, 953,
	157, 953,
	158, 953,
	160, 953,
	162, 953,
	166, 953,
	167, 953,
	168, 953,
	169, 953,
	170, 953,
	171, 953,
	173, 953,
	174, 953,
	176, 953,
	177, 953,
	179, 953,
	180, 953,
	181, 953,
	182, 953,
	183, 953,
	184, 953,
	185, 953,
	186, 953,
	187, 953,
	189, 953,
	190, 953,
	192, 953,
	193, 953,
	194, 953,
	195, 953,
	196, 953,
	200, 953,
	201, 953,
	202, 953,
	205, 953,
	206, 953,
	207, 953,
	208, 953,
	209, 953,
	210, 953,
	211, 953,
	212, 953,
	214, 953,
	216, 953,
	218, 953,
	220, 953,
	221, 953,
	222, 953,
	224, 953,
	225, 953,
	228, 953,
	229, 953,
	230, 953,
	231, 953,
	232, 953,
	234, 953,
	235, 953,
	237, 953,
	238, 953,
	240, 953,
	241, 953,
	244, 953,
	245, 953,
	246, 953,
	249, 953,
	250, 953,
	251, 953,
	252, 953,
	254, 953,
	255, 953,
	256, 953,
	257, 953,
	258, 953,
	259, 953,
	260, 953,
	261, 953,
	262, 953,
	263, 953,
	264, 953,
	265, 953,
	266, 953,
	268, 953,
	269, 953,
	270, 953,
	271, 953,
	272, 953,
	274, 953,
	278, 953,
	280, 953,
	281, 953,
	282, 953,
	283, 953,
	284, 953,
	286, 953,
	287, 953,
	288, 953,
	289, 953,
	291, 953,
	292, 953,
	293, 953,
	296, 953,
	297, 953,
	298, 953,
	300, 953,
	302, 953,
	303, 953,
	304, 953,
	305, 953,
	306, 953,
	307, 953,
	308, 953,
	309, 953,
	310, 953,
	311, 953,
	313, 953,
	314, 953,
	315, 953,
	316, 953,
	317, 953,
	318, 953,
	319, 953,
	320, 953,
	321, 953,
	323, 953,
	325, 953,
	326, 953,
	327, 953,
	328, 953,
	329, 953,
	330, 953,
	331, 953,
	332, 953,
	333, 953,
	334, 953,
	336, 953,
	337, 953,
	338, 953,
	339, 953,
	340, 953,
	341, 953,
	343, 953,
	344, 953,
	345, 953,
	346, 953,
	347, 953,
	348, 953,
	349, 953,
	350, 953,
	352, 953,
	354, 953,
	355, 953,
	356, 953,
	357, 953,
	358, 953,
	359, 953,
	361, 953,
	362, 953,
	363, 953,
	364, 953,
	365, 953,
	366, 953,
	367, 953,
	368, 953,
	370, 953,
	371, 953,
	372, 953,
	373, 953,
	374, 953,
	375, 953,
	376, 953,
	377, 953,
	378, 953,
	379, 953,
	381, 953,
	382, 953,
	383, 953,
	384, 953,
	385, 953,
	387, 953,
	388, 953,
	389, 953,
	390, 953,
	391, 953,
	393, 953,
	394, 953,
	395, 953,
	396, 953,
	397, 953,
	398, 953,
	399, 953,
	400, 953,
	401, 953,
	402, 953,
	403, 953,
	404, 953,
	405, 953,
	407, 953,
	408, 953,
	409, 953,
	411, 953,
	412, 953,
	413, 953,
	414, 953,
	415, 953,
	416, 953,
	417, 953,
	419, 953,
	420, 953,
	421, 953,
	422, 953,
	423, 953,
	425, 953,
	427, 953,
	428, 953,
	429, 953,
	430, 953,
	431, 953,
	433, 953,
	434, 953,
	435, 953,
	437, 953,
	438, 953,
	441, 953,
	442, 953,
	443, 953,
	444, 953,
	445, 953,
	446, 953,
	447, 953,
	449, 953,
	451, 953,
	452, 953,
	453, 953,
	454, 953,
	455, 953,
	456, 953,
	457, 953,
	459, 953,
	460, 953,
	461, 953,
	466, 953,
	467, 953,
	468, 953,
	469, 953,
	470, 953,
	471, 953,
	-2, 0,
	-1, 1375,
	1, 365,
	493, 365,
	495, 365,
	497, 365,
	-2, 1100,
	-1, 1378,
	4, 2154,
	11, 2154,
	12, 2154,
	14, 2154,
	15, 2154,
	16, 2154,
	17, 2154,
	18, 2154,
	19, 2154,
	21, 2154,
	22, 2154,
	23, 2154,
	24, 2154,
	25, 2154,
	27, 2154,
	28, 2154,
	31, 2154,
	32, 2154,
	34, 2154,
	36, 2154,
	39, 2154,
	40, 2154,
	41, 2154,
	42, 2154,
	43, 2154,
	44, 2154,
	45, 2154,
	46, 2154,
	47, 2154,
	48, 2154,
	49, 2154,
	50, 2154,
	51, 2154,
	53, 2154,
	54, 2154,
	55, 2154,
	56, 2154,
	57, 2154,
	58, 2154,
	59, 2154,
	62, 2154,
	63, 2154,
	64, 2154,
	65, 2154,
	67, 2154,
	68, 2154,
	69, 2154,
	70, 2154,
	73, 2154,
	74, 2154,
	75, 2154,
	76, 2154,
	77, 2154,
	78, 2154,
	79, 2154,
	80, 2154,
	82, 2154,
	83, 2154,
	84, 2154,
	85, 2154,
	87, 2154,
	88, 2154,
	89, 2154,
	90, 2154,
	91, 2154,
	93, 2154,
	94, 2154,
	95, 2154,
	96, 2154,
	104, 2154,
	105, 2154,
	106, 2154,
	107, 2154,
	108, 2154,
	109, 2154,
	110, 2154,
	111, 2154,
	113, 2154,
	114, 2154,
	115, 2154,
	117, 2154,
	118, 2154,
	120, 2154,
	123, 2154,
	124, 2154,
	125, 2154,
	127, 2154,
	129, 2154,
	130, 2154,
	132, 2154,
	133, 2154,
	134, 2154,
	135, 2154,
	136, 2154,
	137, 2154,
	138, 2154,
	139, 2154,
	140, 2154,
	141, 2154,
	142, 2154,
	143, 2154,
	144, 2154,
	145, 2154,
	149, 2154,
	150, 2154,
	151, 2154,
	152, 2154,
	153, 2154,
	154, 2154,
	155, 2154,
	156, 2154,
	157, 2154,
	158, 2154,
	159, 2154,
	160, 2154,
	162, 2154,
	165, 2154,
	166, 2154,
	167, 2154,
	168, 2154,
	169, 2154,
	170, 2154,
	171, 2154,
	173, 2154,
	174, 2154,
	176, 2154,
	177, 2154,
	179, 2154,
	180, 2154,
	181, 2154,
	182, 2154,
	183, 2154,
	184, 2154,
	185, 2154,
	186, 2154,
	187, 2154,
	188, 2154,
	189, 2154,
	190, 2154,
	191, 2154,
	192, 2154,
	193, 2154,
	194, 2154,
	195, 2154,
	196, 2154,
	197, 2154,
	198, 2154,
	200, 2154,
	201, 2154,
	202, 2154,
	204, 2154,
	205, 2154,
	206, 2154,
	207, 2154,
	208, 2154,
	209, 2154,
	210, 2154,
	211, 2154,
	212, 2154,
	214, 2154,
	216, 2154,
	217, 2154,
	218, 2154,
	219, 2154,
	220, 2154,
	221, 2154,
	222, 2154,
	223, 2154,
	224, 2154,
	225, 2154,
	226, 2154,
	227, 2154,
	228, 2154,
	229, 2154,
	230, 2154,
	231, 2154,
	232, 2154,
	234, 2154,
	235, 2154,
	237, 2154,
	238, 2154,
	239, 2154,
	240, 2154,
	241, 2154,
	242, 2154,
	244, 2154,
	245, 2154,
	246, 2154,
	249, 2154,
	250, 2154,
	251, 2154,
	252, 2154,
	253, 2154,
	254, 2154,
	255, 2154,
	256, 2154,
	257, 2154,
	258, 2154,
	259, 2154,
	260, 2154,
	261, 2154,
	262, 2154,
	263, 2154,
	264, 2154,
	265, 2154,
	266, 2154,
	267, 2154,
	268, 2154,
	269, 2154,
	270, 2154,
	271, 2154,
	272, 2154,
	274, 2154,
	277, 2154,
	278, 2154,
	280, 2154,
	281, 2154,
	282, 2154,
	283, 2154,
	284, 2154,
	286, 2154,
	287, 2154,
	288, 2154,
	291, 2154,
	292, 2154,
	293, 2154,
	294, 2154,
	296, 2154,
	297, 2154,
	298, 2154,
	300, 2154,
	302, 2154,
	303, 2154,
	304, 2154,
	305, 2154,
	306, 2154,
	307, 2154,
	308, 2154,
	309, 2154,
	310, 2154,
	311, 2154,
	313, 2154,
	314, 2154,
	315, 2154,
	316, 2154,
	317, 2154,
	318, 2154,
	319, 2154,
	320, 2154,
	321, 2154,
	323, 2154,
	325, 2154,
	326, 2154,
	327, 2154,
	328, 2154,
	329, 2154,
	330, 2154,
	331, 2154,
	332, 2154,
	333, 2154,
	334, 2154,
	336, 2154,
	337, 2154,
	338, 2154,
	339, 2154,
	340, 2154,
	341, 2154,
	342, 2154,
	343, 2154,
	344, 2154,
	345, 2154,
	346, 2154,
	347, 2154,
	348, 2154,
	349, 2154,
	350, 2154,
	352, 2154,
	353, 2154,
	354, 2154,
	355, 2154,
	356, 2154,
	357, 2154,
	358, 2154,
	359, 2154,
	360, 2154,
	361, 2154,
	362, 2154,
	363, 2154,
	364, 2154,
	365, 2154,
	366, 2154,
	367, 2154,
	368, 2154,
	370, 2154,
	371, 2154,
	372, 2154,
	373, 2154,
	374, 2154,
	375, 2154,
	376, 2154,
	377, 2154,
	378, 2154,
	379, 2154,
	381, 2154,
	382, 2154,
	383, 2154,
	384, 2154,
	385, 2154,
	386, 2154,
	387, 2154,
	388, 2154,
	389, 2154,
	390, 2154,
	391, 2154,
	393, 2154,
	394, 2154,
	395, 2154,
	396, 2154,
	397, 2154,
	398, 2154,
	399, 2154,
	400, 2154,
	401, 2154,
	402, 2154,
	403, 2154,
	404, 2154,
	405, 2154,
	407, 2154,
	408, 2154,
	409, 2154,
	411, 2154,
	412, 2154,
	413, 2154,
	414, 2154,
	415, 2154,
	416, 2154,
	417, 2154,
	419, 2154,
	420, 2154,
	421, 2154,
	422, 2154,
	423, 2154,
	425, 2154,
	427, 2154,
	428, 2154,
	429, 2154,
	430, 2154,
	431, 2154,
	433, 2154,
	434, 2154,
	435, 2154,
	437, 2154,
	438, 2154,
	441, 2154,
	442, 2154,
	443, 2154,
	444, 2154,
	445, 2154,
	446, 2154,
	447, 2154,
	449, 2154,
	451, 2154,
	452, 2154,
	453, 2154,
	454, 2154,
	455, 2154,
	456, 2154,
	457, 2154,
	459, 2154,
	460, 2154,
	461, 2154,
	466, 2154,
	467, 2154,
	468, 2154,
	469, 2154,
	470, 2154,
	471, 2154,
	472, 2154,
	473, 2154,
	475, 2154,
	476, 2154,
	477, 2154,
	478, 2154,
	479, 2154,
	480, 2154,
	482, 2154,
	483, 2154,
	484, 2154,
	485, 2154,
	486, 2154,
	487, 2154,
	488, 2154,
	489, 2154,
	490, 2154,
	492, 2154,
	495, 2154,
	496, 2154,
	498, 2154,
	499, 2154,
	-2, 0,
	-1, 1383,
	164, 2051,
	424, 2051,
	477, 2051,
	496, 2051,
	-2, 0,
	-1, 1415,
	327, 647,
	379, 647,
	-2, 0,
	-1, 1439,
	1, 642,
	493, 642,
	495, 642,
	497, 642,
	-2, 0,
	-1, 1440,
	1, 667,
	493, 667,
	495, 667,
	497, 667,
	-2, 0,
	-1, 1441,
	1, 649,
	493, 649,
	495, 649,
	497, 649,
	-2, 0,
	-1, 1443,
	1, 653,
	493, 653,
	495, 653,
	497, 653,
	-2, 0,
	-1, 1470,
	1, 2103,
	493, 2103,
	495, 2103,
	496, 2103,
	497, 2103,
	-2, 695,
	-1, 1471,
	1, 2048,
	493, 2048,
	495, 2048,
	496, 2048,
	497, 2048,
	-2, 696,
	-1, 1486,
	1, 1010,
	497, 1010,
	-2, 1015,
	-1, 1489,
	148, 1138,
	161, 1138,
	243, 1138,
	285, 1138,
	-2, 1081,
	-1, 1583,
	131, 1102,
	148, 1102,
	161, 1102,
	213, 1102,
	243, 1102,
	285, 1102,
	295, 1102,
	439, 1102,
	-2, 1526,
	-1, 1642,
	495, 1674,
	-2, 0,
	-1, 1676,
	131, 1102,
	148, 1102,
	161, 1102,
	213, 1102,
	243, 1102,
	285, 1102,
	295, 1102,
	439, 1102,
	-2, 1217,
	-1, 1737,
	494, 1355,
	-2, 1343,
	-1, 1783,
	1, 492,
	497, 492,
	-2, 1015,
	-1, 1985,
	1, 644,
	493, 644,
	495, 644,
	497, 644,
	-2, 0,
	-1, 1986,
	1, 669,
	493, 669,
	495, 669,
	497, 669,
	-2, 0,
	-1, 2058,
	358, 1163,
	359, 1163,
	-2, 1388,
	-1, 2089,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1406,
	-1, 2090,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1407,
	-1, 2091,
	88, 0,
	226, 0,
	227, 0,
	479, 0,
	480, 0,
	-2, 1408,
	-1, 2092,
	88, 0,
	226, 0,
	227, 0,
	479, 0,
	480, 0,
	-2, 1409,
	-1, 2093,
	88, 0,
	226, 0,
	227, 0,
	479, 0,
	480, 0,
	-2, 1410,
	-1, 2094,
	88, 0,
	226, 0,
	227, 0,
	479, 0,
	480, 0,
	-2, 1411,
	-1, 2095,
	88, 0,
	226, 0,
	227, 0,
	479, 0,
	480, 0,
	-2, 1412,
	-1, 2096,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1413,
	-1, 2108,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1425,
	-1, 2109,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1426,
	-1, 2110,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1427,
	-1, 2113,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1432,
	-1, 2119,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1436,
	-1, 2121,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1444,
	-1, 2122,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1445,
	-1, 2123,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1446,
	-1, 2124,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1447,
	-1, 2236,
	5, 1312,
	164, 1685,
	494, 1812,
	-2, 1803,
	-1, 2237,
	164, 1686,
	-2, 2107,
	-1, 2238,
	164, 1687,
	-2, 1964,
	-1, 2239,
	164, 1688,
	-2, 1873,
	-1, 2240,
	164, 1689,
	-2, 1914,
	-1, 2241,
	164, 1690,
	-2, 1959,
	-1, 2242,
	164, 1691,
	-2, 2042,
	-1, 2243,
	164, 1692,
	-2, 1509,
	-1, 2312,
	1, 1218,
	2, 1218,
	94, 1218,
	131, 1218,
	148, 1218,
	161, 1218,
	165, 1218,
	175, 1218,
	178, 1218,
	204, 1218,
	213, 1218,
	223, 1218,
	239, 1218,
	243, 1218,
	267, 1218,
	285, 1218,
	289, 1218,
	295, 1218,
	351, 1218,
	353, 1218,
	439, 1218,
	450, 1218,
	463, 1218,
	464, 1218,
	465, 1218,
	474, 1218,
	493, 1218,
	495, 1218,
	497, 1218,
	499, 1218,
	-2, 1217,
	-1, 2325,
	494, 1786,
	-2, 1798,
	-1, 2347,
	494, 1354,
	-2, 1344,
	-1, 2449,
	1, 932,
	493, 932,
	495, 932,
	497, 932,
	-2, 1126,
	-1, 2603,
	290, 1166,
	-2, 2145,
	-1, 2604,
	290, 1167,
	-2, 2031,
	-1, 2608,
	358, 1751,
	359, 1751,
	-2, 1507,
	-1, 2609,
	358, 1755,
	359, 1755,
	-2, 1508,
	-1, 2610,
	358, 1752,
	359, 1752,
	-2, 1507,
	-1, 2611,
	358, 1756,
	359, 1756,
	-2, 1508,
	-1, 2624,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1434,
	-1, 2625,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1438,
	-1, 2631,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1440,
	-1, 2824,
	220, 1015,
	323, 1015,
	331, 1015,
	474, 1015,
	-2, 489,
	-1, 2923,
	1, 932,
	493, 932,
	495, 932,
	497, 932,
	-2, 1126,
	-1, 3013,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1442,
	-1, 3020,
	217, 0,
	219, 0,
	277, 0,
	-2, 1461,
	-1, 3086,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1490,
	-1, 3087,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1491,
	-1, 3088,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1492,
	-1, 3092,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1496,
	-1, 3093,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1497,
	-1, 3094,
	14, 0,
	15, 0,
	16, 0,
	475, 0,
	476, 0,
	477, 0,
	-2, 1498,
	-1, 3138,
	494, 1787,
	-2, 1799,
	-1, 3231,
	496, 2259,
	-2, 1059,
	-1, 3282,
	217, 0,
	219, 0,
	277, 0,
	-2, 1462,
	-1, 3285,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1465,
	-1, 3286,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1467,
	-1, 3456,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1466,
	-1, 3457,
	17, 0,
	18, 0,
	19, 0,
	44, 0,
	188, 0,
	191, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 1468,
	-1, 3467,
	217, 0,
	-2, 1499,
	-1, 3594,
	217, 0,
	-2, 1500,
	-1, 3728,
	44, 0,
	188, 0,
	242, 0,
	386, 0,
	472, 0,
	478, 0,
	-2, 2110,
}

const sqlPrivate = 57344

const sqlLast = 87871

var sqlAct = [...]int{

	946, 3496, 3526, 3861, 3630, 3390, 3615, 3727, 3738, 3827,
	3704, 3265, 2755, 3694, 2909, 3691, 3675, 3499, 2268, 3739,
	3159, 3740, 3781, 2503, 3533, 3485, 1068, 3052, 3414, 2756,
	3598, 2076, 1370, 3223, 3419, 3726, 3445, 890, 1875, 3346,
	2938, 3403, 219, 3563, 219, 219, 2379, 219, 219, 219,
	219, 219, 1710, 2136, 219, 1239, 3542, 2933, 1498, 219,
	3424, 3005, 875, 866, 3160, 638, 2905, 2438, 2931, 606,
	3204, 2536, 3471, 2492, 2478, 968, 1127, 2617, 2475, 1682,
	1949, 219, 1834, 2778, 2466, 638, 2841, 2770, 2538, 1220,
	1060, 2535, 3264, 2741, 2798, 2546, 2489, 945, 3319, 2504,
	730, 2487, 2527, 1871, 1423, 2529, 1870, 1255, 2759, 2381,
	2305, 3109, 2073, 2178, 1843, 1651, 1611, 3599, 901, 2652,
	2149, 2302, 2601, 1591, 2069, 1947, 2761, 4, 885, 874,
	147, 1228, 3527, 1300, 2440, 2304, 2450, 2545, 1859, 1866,
	2476, 1819, 942, 1874, 1111, 2307, 1938, 2286, 2265, 1821,
	1225, 2169, 1652, 1486, 2133, 2057, 1354, 2740, 2804, 1809,
	2038, 2040, 2907, 1241, 1391, 1376, 1364, 1051, 2497, 1305,
	1100, 2371, 1904, 639, 1711, 574, 1373, 2539, 1054, 213,
	1959, 2172, 219, 219, 2294, 2415, 1033, 2150, 212, 560,
	640, 2276, 1661, 582, 2195, 2232, 1499, 90, 1574, 2039,
	1500, 154, 590, 1903, 1050, 1606, 634, 724, 1671, 147,
	2041, 1390, 211, 1374, 1924, 155, 1328, 706, 600, 1668,
	1252, 681, 1833, 40, 585, 577, 2062, 2416, 902, 1056,
	39, 37, 28, 1031, 26, 24, 1505, 779, 796, 1485,
	1310, 3123, 2648, 3124, 643, 2948, 1940, 3879, 3865, 1940,
	1940, 2285, 2285, 646, 3864, 3843, 2757, 870, 2285, 3361,
	1513, 1514, 3841, 3837, 643, 3764, 3361, 1880, 3762, 3765,
	3760, 2822, 2285, 646, 2285, 865, 3757, 2661, 3754, 944,
	3758, 1544, 3755, 2662, 2278, 3749, 3724, 1063, 1516, 1880,
	1880, 741, 2947, 3723, 3722, 3719, 1582, 1880, 1952, 1952,
	1108, 1513, 1514, 1085, 1546, 1547, 1548, 1556, 1557, 1558,
	3718, 3713, 2336, 3711, 1952, 3361, 1048, 3361, 870, 1515,
	3689, 1549, 1544, 2285, 3361, 3113, 3669, 1034, 1034, 1516,
	2340, 3663, 3662, 3657, 1562, 2285, 2285, 3361, 3656, 3650,
	3596, 3577, 3361, 1880, 2340, 1880, 1880, 1108, 3574, 853,
	2713, 2714, 3361, 3535, 871, 3516, 3670, 3536, 3515, 1880,
	1515, 3507, 1880, 852, 3506, 1880, 3580, 3477, 3361, 3458,
	1535, 1880, 1967, 2340, 3113, 1513, 1514, 3443, 1532, 3432,
	3388, 1952, 3379, 2962, 2285, 3360, 2285, 2277, 3284, 3361,
	3239, 860, 2340, 3233, 2978, 3202, 1544, 2978, 3133, 3203,
	3131, 3116, 3134, 1516, 3132, 2285, 3036, 3032, 1521, 2977,
	1880, 2285, 1952, 2978, 2969, 2754, 1035, 2752, 2970, 2285,
	2751, 2285, 2705, 2690, 2285, 1080, 2285, 2691, 2688, 79,
	3380, 2680, 2689, 2663, 1515, 2681, 1037, 2285, 1038, 1538,
	1539, 1540, 1541, 1880, 2525, 187, 1543, 1545, 1955, 1521,
	2524, 2452, 2355, 2339, 1955, 1952, 2285, 2340, 2334, 2327,
	2284, 2285, 2285, 1880, 2285, 2970, 1954, 2429, 2370, 1062,
	1955, 1789, 1939, 2962, 2472, 35, 2616, 1273, 1553, 1442,
	1879, 1563, 2368, 1647, 1251, 3188, 189, 1543, 1545, 1838,
	3008, 2986, 1669, 1869, 2949, 1425, 2321, 2320, 2719, 2319,
	1081, 2318, 1536, 2317, 1039, 1036, 859, 1559, 858, 1560,
	1267, 857, 856, 2950, 1582, 855, 1530, 1531, 851, 850,
	3745, 849, 2651, 1521, 848, 847, 2581, 1261, 187, 846,
	845, 188, 1551, 844, 843, 842, 1941, 841, 840, 1941,
	1941, 181, 839, 1536, 838, 777, 776, 775, 774, 182,
	773, 772, 771, 770, 725, 769, 768, 767, 766, 765,
	764, 1543, 1545, 763, 762, 219, 761, 1561, 760, 189,
	156, 759, 758, 3583, 757, 756, 755, 1513, 1514, 63,
	2947, 728, 727, 754, 1550, 753, 752, 751, 2500, 750,
	739, 738, 2729, 219, 64, 697, 658, 657, 1544, 649,
	219, 648, 647, 620, 3335, 1516, 1081, 612, 611, 1537,
	68, 610, 594, 209, 188, 208, 207, 1536, 206, 2277,
	205, 204, 203, 219, 1130, 219, 219, 219, 1130, 219,
	1244, 202, 1542, 201, 1244, 200, 1515, 199, 1081, 198,
	1104, 197, 219, 219, 73, 196, 195, 2713, 2714, 194,
	1537, 193, 192, 156, 191, 190, 3296, 187, 3127, 1272,
	2979, 2801, 2674, 2713, 2714, 2657, 219, 1110, 2456, 2180,
	2328, 1115, 2311, 123, 1672, 1817, 1554, 78, 2223, 219,
	2484, 219, 2209, 1244, 219, 219, 2517, 219, 89, 1939,
	2033, 2207, 1266, 79, 86, 1695, 1512, 219, 189, 2730,
	1600, 1614, 1614, 1257, 219, 1117, 1593, 1613, 1613, 1231,
	1070, 3725, 3637, 3589, 1962, 3495, 3433, 3581, 219, 219,
	219, 3339, 219, 1244, 1537, 1521, 3318, 1244, 1617, 1612,
	219, 1244, 219, 219, 1517, 1518, 1519, 1520, 1522, 1523,
	3317, 1244, 80, 188, 2973, 1128, 873, 219, 3428, 1229,
	3305, 3304, 3303, 181, 3302, 1098, 2434, 3301, 3300, 3295,
	3292, 182, 1552, 1543, 1545, 1527, 1528, 1534, 1555, 1533,
	1529, 3291, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 3208, 156, 1598, 1244, 3308, 1961, 3201, 3147, 3307,
	1123, 3146, 1217, 1222, 3145, 2719, 3137, 3106, 1247, 3105,
	3104, 3028, 3024, 2796, 2748, 2739, 1236, 2712, 219, 2709,
	1248, 2719, 2708, 2706, 2687, 1254, 2686, 2685, 1093, 1536,
	2682, 643, 219, 2723, 2715, 2716, 2717, 2718, 2720, 2721,
	646, 2679, 1253, 2673, 1047, 2656, 2649, 1315, 1223, 2526,
	1594, 1235, 1592, 1593, 187, 187, 187, 1395, 1525, 1517,
	1518, 1519, 1520, 1522, 1523, 1379, 1381, 147, 147, 1307,
	2312, 2162, 81, 1104, 1512, 1885, 1104, 1511, 1883, 3874,
	1915, 3836, 1367, 3835, 2402, 1358, 1361, 187, 2713, 2714,
	2485, 2731, 2732, 2733, 2175, 189, 189, 189, 187, 2729,
	1377, 3774, 1513, 1514, 187, 3772, 1311, 1311, 3280, 153,
	84, 1331, 85, 3186, 3763, 2729, 1452, 1385, 1069, 3054,
	3629, 3626, 3623, 3622, 3621, 3614, 1490, 1248, 189, 3608,
	1516, 187, 3578, 3562, 871, 1312, 1537, 3561, 2139, 189,
	188, 188, 188, 729, 3549, 189, 3546, 123, 3512, 1444,
	181, 181, 181, 3491, 3469, 2713, 2714, 2728, 182, 182,
	182, 1515, 3453, 3427, 3452, 3440, 3439, 2176, 3407, 917,
	1407, 3334, 189, 188, 3316, 3254, 3251, 3177, 3176, 156,
	2499, 156, 1489, 181, 188, 3163, 3162, 3119, 3019, 2145,
	188, 182, 1578, 2980, 181, 124, 2963, 1581, 3207, 1484,
	181, 2925, 182, 2889, 2868, 2844, 2730, 2843, 182, 157,
	2816, 2793, 156, 2817, 2753, 2678, 187, 188, 2677, 2672,
	2640, 2465, 2730, 156, 1620, 1619, 1618, 181, 1400, 156,
	1615, 900, 1607, 1604, 1416, 182, 2719, 2349, 2348, 2323,
	2316, 2283, 2205, 219, 2177, 2174, 1694, 1650, 1585, 2844,
	1521, 3584, 1590, 1646, 1645, 2483, 726, 189, 1526, 1524,
	1525, 1517, 1518, 1519, 1520, 1522, 1523, 1644, 1643, 1642,
	219, 1649, 1641, 1640, 1639, 1658, 1495, 1487, 1513, 1514,
	219, 1130, 219, 219, 219, 219, 853, 1494, 1638, 1636,
	638, 219, 219, 1635, 2734, 638, 219, 1513, 1514, 1616,
	852, 219, 188, 2719, 1634, 1705, 1516, 1244, 1633, 1491,
	1632, 1631, 181, 1630, 1629, 1508, 1509, 871, 1628, 1627,
	182, 1781, 1626, 187, 1625, 1516, 1963, 1624, 1130, 1623,
	2729, 2715, 2716, 2717, 2718, 2720, 2721, 1515, 1260, 1622,
	1265, 156, 1271, 1595, 1104, 2722, 2723, 2715, 2716, 2717,
	2718, 2720, 2721, 2179, 1579, 1577, 1515, 2713, 2714, 1066,
	1572, 1063, 1786, 1063, 189, 1703, 1092, 1655, 1656, 1739,
	1780, 1083, 1076, 3600, 2713, 2714, 3410, 3336, 1608, 1609,
	3288, 2222, 3143, 3480, 1815, 2208, 3130, 1697, 1034, 3122,
	2660, 2314, 1679, 3382, 2206, 3582, 3338, 147, 1707, 2342,
	3142, 1594, 1698, 1778, 2713, 2714, 2814, 1575, 1808, 188,
	1808, 1690, 1713, 3833, 1114, 1808, 1112, 3494, 1672, 181,
	3826, 1064, 1389, 3624, 2934, 3538, 1701, 182, 3537, 3431,
	1394, 3543, 1699, 3381, 2871, 1631, 3125, 2730, 1631, 2965,
	2964, 3211, 1108, 1482, 1677, 1521, 1614, 1105, 156, 1818,
	1108, 2684, 1613, 2683, 1838, 2173, 2420, 2622, 2404, 1783,
	1244, 1244, 219, 871, 1109, 3175, 1827, 1113, 1130, 643,
	1795, 836, 1960, 1784, 643, 1680, 1648, 1602, 646, 2351,
	1108, 1670, 1599, 646, 1443, 2911, 1424, 2910, 2713, 2714,
	3534, 1689, 1876, 1674, 1415, 1453, 1706, 1235, 1688, 1687,
	1685, 1777, 1684, 1683, 3750, 2719, 219, 3759, 2170, 3472,
	219, 837, 3737, 1425, 1872, 219, 3191, 1708, 1856, 3179,
	2984, 1858, 2719, 3862, 1863, 2757, 3056, 2347, 3746, 1637,
	2666, 1610, 2903, 219, 1099, 219, 1046, 219, 1916, 1912,
	1288, 219, 3756, 1062, 2943, 1062, 1811, 1806, 1801, 3154,
	1106, 3616, 2725, 2726, 2727, 219, 3415, 2728, 1107, 2724,
	2722, 2723, 2715, 2716, 2717, 2718, 2720, 2721, 3687, 1404,
	3605, 1842, 2847, 3170, 1867, 219, 1517, 1518, 1519, 1520,
	1522, 1523, 2533, 2496, 2896, 2175, 3747, 3798, 3371, 1881,
	3797, 1244, 3649, 1244, 219, 1244, 3000, 1286, 219, 2729,
	1276, 1450, 2356, 1244, 1908, 834, 1244, 219, 832, 219,
	219, 2826, 830, 693, 2019, 3871, 3525, 828, 3518, 1244,
	1244, 1244, 2048, 219, 1913, 1877, 2828, 3193, 869, 1921,
	219, 2717, 2718, 2720, 2721, 1254, 2719, 1248, 825, 638,
	219, 643, 219, 2017, 219, 2374, 219, 3190, 219, 1796,
	646, 2191, 1253, 3189, 3151, 2374, 3150, 1451, 2176, 2372,
	2190, 2671, 219, 2046, 1862, 219, 2670, 219, 2383, 2372,
	1287, 2669, 819, 2668, 2626, 2436, 1114, 2428, 219, 2427,
	2407, 2335, 1878, 2120, 1488, 1250, 1929, 3821, 2078, 2493,
	1918, 1105, 1981, 1449, 822, 2815, 1893, 1397, 1965, 219,
	694, 1108, 1321, 219, 1320, 1319, 2730, 1318, 2985, 1342,
	868, 2031, 1073, 1895, 1975, 1943, 1894, 1295, 1945, 1282,
	2363, 2326, 2395, 2599, 1950, 2044, 1130, 1911, 1402, 1113,
	2729, 2135, 2584, 1835, 3157, 2177, 2174, 1331, 1114, 1926,
	2048, 1926, 3451, 1686, 1966, 1461, 1071, 1493, 3716, 1923,
	1838, 1927, 1105, 2135, 1377, 1989, 1377, 1523, 2394, 1971,
	3648, 1931, 1932, 1831, 2870, 2386, 3822, 2406, 2050, 2030,
	2027, 1958, 2037, 1519, 1520, 1522, 1523, 2143, 2047, 1248,
	1091, 2046, 1969, 2991, 2141, 1836, 1837, 1235, 871, 1928,
	871, 1113, 870, 2990, 1106, 1978, 1979, 1980, 1977, 1739,
	1739, 1398, 1107, 2578, 1956, 2179, 1957, 2151, 2152, 1985,
	1970, 1130, 1093, 1832, 1968, 618, 1992, 1984, 643, 2614,
	3367, 3166, 3845, 2151, 2167, 2587, 3810, 646, 2724, 2722,
	2723, 2715, 2716, 2717, 2718, 2720, 2721, 2730, 2045, 1074,
	2032, 3045, 1713, 1713, 2179, 1999, 3809, 2077, 2715, 2716,
	2717, 2718, 2720, 2721, 3743, 1106, 2343, 1690, 219, 1660,
	3824, 1986, 2029, 1107, 1439, 2231, 2170, 2235, 2235, 2249,
	2333, 2151, 2424, 2061, 2269, 2271, 3501, 1822, 3383, 2275,
	1130, 1823, 219, 2721, 748, 2417, 2418, 2417, 2418, 1306,
	1448, 219, 2417, 2418, 2441, 3358, 2047, 1417, 2074, 2075,
	2036, 2034, 3786, 219, 3270, 2049, 1130, 2042, 617, 1993,
	2144, 2035, 1481, 3797, 1800, 1799, 1440, 853, 1808, 1810,
	853, 853, 3269, 2324, 2385, 3354, 1304, 1585, 2166, 2613,
	1664, 2065, 2182, 2586, 2066, 2067, 867, 2606, 2607, 696,
	695, 2940, 691, 1413, 690, 1108, 2173, 2299, 2882, 1425,
	2179, 2941, 1284, 3450, 2876, 2583, 2045, 3617, 1425, 2724,
	2722, 2723, 2715, 2716, 2717, 2718, 2720, 2721, 1838, 1667,
	1063, 3355, 2825, 1829, 1855, 1829, 1840, 3503, 2405, 1824,
	2256, 2026, 2147, 3365, 1306, 871, 1063, 2827, 1662, 3857,
	219, 1940, 2164, 1826, 723, 3744, 871, 3178, 1244, 2291,
	871, 1605, 3806, 1034, 1665, 1829, 1108, 2373, 3399, 1865,
	3823, 2892, 1822, 2940, 1341, 1679, 1823, 1403, 3830, 2290,
	2812, 3266, 1803, 3463, 1281, 2204, 2313, 2325, 1130, 1864,
	3699, 826, 1663, 219, 826, 2117, 2585, 1104, 826, 2018,
	2260, 219, 2384, 827, 2273, 2244, 3628, 2337, 3042, 147,
	1072, 2443, 219, 1786, 2772, 1828, 2858, 2281, 2282, 1860,
	2296, 2297, 1571, 2161, 826, 219, 2292, 1677, 2016, 2676,
	3667, 2442, 2444, 2028, 572, 2295, 3742, 3167, 3785, 219,
	1130, 1836, 1837, 1401, 1244, 814, 871, 2298, 3846, 2303,
	219, 219, 2309, 2310, 1616, 879, 2308, 870, 567, 2628,
	2860, 3409, 823, 2857, 2375, 1399, 3260, 864, 1465, 1861,
	2447, 3366, 1844, 219, 1824, 3139, 219, 619, 1666, 616,
	1991, 2134, 1086, 219, 1805, 3043, 2251, 1492, 1826, 219,
	1739, 2862, 2350, 1848, 3350, 2354, 1988, 2374, 3351, 219,
	1460, 219, 3447, 2142, 219, 3206, 3271, 3002, 814, 2369,
	219, 2389, 1062, 219, 2425, 219, 1804, 219, 2597, 2437,
	1090, 1829, 219, 1244, 1244, 2353, 1244, 2409, 1062, 2357,
	864, 219, 219, 1713, 219, 219, 1608, 1609, 1244, 2115,
	1845, 3353, 2118, 3400, 2861, 2507, 219, 815, 749, 3502,
	1828, 1427, 3631, 3741, 3356, 3796, 2521, 2864, 1983, 1503,
	3794, 3645, 219, 219, 219, 2388, 2391, 219, 2397, 219,
	2378, 3767, 219, 2359, 219, 2771, 219, 978, 3768, 2408,
	2469, 2547, 3665, 1066, 3548, 1066, 2361, 1857, 3828, 2410,
	3267, 2453, 2426, 2114, 2179, 3221, 3784, 219, 219, 219,
	219, 219, 219, 1702, 219, 2419, 2421, 2422, 2423, 2927,
	815, 1902, 3666, 2448, 1657, 3446, 1084, 1079, 2362, 215,
	2449, 562, 563, 1254, 578, 562, 578, 588, 593, 643,
	1849, 609, 2532, 2360, 2463, 219, 615, 1223, 646, 3858,
	2454, 1941, 215, 219, 2566, 1064, 2509, 1064, 2473, 559,
	2064, 1235, 2522, 1502, 147, 3095, 1829, 2491, 734, 3352,
	1839, 3314, 215, 1660, 2516, 2563, 2502, 1825, 3829, 2513,
	3006, 2514, 2519, 2515, 2568, 2570, 2569, 2572, 2589, 2574,
	2591, 1797, 2551, 1412, 1414, 2554, 1462, 2555, 1571, 1377,
	3509, 2523, 2831, 1850, 1851, 2582, 2534, 3508, 2805, 2520,
	3831, 3851, 2550, 3489, 3604, 1846, 3222, 816, 3153, 2928,
	2922, 1822, 1502, 2565, 1248, 1823, 862, 2549, 814, 2839,
	2552, 2553, 2571, 1664, 2573, 1497, 2575, 3448, 2054, 2558,
	2559, 2560, 219, 2835, 1664, 3572, 2477, 2116, 2467, 1847,
	864, 3632, 2629, 1794, 2654, 2655, 568, 2390, 1501, 2658,
	2605, 2592, 2256, 1922, 1914, 1812, 1813, 3370, 1907, 562,
	562, 1889, 1667, 3041, 3369, 3676, 2595, 215, 2596, 3003,
	816, 2594, 2411, 1667, 3766, 2131, 1235, 2023, 1502, 2600,
	1790, 2293, 863, 2061, 3564, 3224, 2650, 3420, 2780, 1463,
	1503, 2615, 1662, 2464, 2287, 3532, 3565, 1665, 3272, 1344,
	2129, 1441, 1825, 569, 3530, 3490, 2850, 1501, 1665, 3096,
	1235, 2846, 1235, 1824, 2845, 1792, 2620, 3097, 2598, 1976,
	815, 817, 3566, 3315, 3121, 2769, 2768, 1826, 745, 2332,
	2331, 1852, 2256, 2256, 2330, 737, 1663, 1793, 1428, 2659,
	2329, 2055, 2627, 1313, 570, 868, 571, 2188, 2471, 1503,
	1130, 1327, 2189, 1325, 747, 2192, 2750, 2193, 2194, 3610,
	1314, 818, 3497, 1464, 2764, 2765, 2289, 3391, 3850, 219,
	2781, 2288, 2766, 1501, 219, 3273, 3568, 219, 2974, 2401,
	219, 219, 1130, 1920, 817, 2451, 219, 3437, 3803, 1828,
	2665, 3528, 3567, 3320, 3487, 3679, 3611, 1853, 3684, 1130,
	3673, 3110, 2186, 3805, 2786, 3633, 219, 871, 2433, 3569,
	2015, 1666, 3761, 2779, 1479, 2185, 3625, 3468, 2125, 1477,
	3313, 1457, 1666, 219, 818, 2412, 2413, 3368, 2742, 2126,
	2458, 3488, 2460, 2127, 1455, 1438, 1436, 2132, 2783, 1434,
	1432, 3018, 219, 219, 219, 1430, 1063, 3436, 219, 3498,
	2776, 219, 2256, 2256, 2256, 1422, 1420, 2982, 2800, 219,
	219, 1063, 219, 219, 219, 1104, 2795, 3680, 3612, 1323,
	2498, 2763, 2806, 2498, 2899, 2707, 219, 219, 219, 2639,
	816, 2745, 2746, 2747, 2799, 219, 1739, 2823, 2832, 2833,
	2774, 1063, 2468, 2435, 2403, 1829, 2792, 2743, 219, 219,
	2758, 2829, 2352, 2789, 2775, 2848, 1696, 1130, 2852, 2784,
	2773, 1693, 1480, 2810, 1392, 2787, 2788, 2999, 1244, 2836,
	2803, 2998, 2785, 2782, 1497, 1739, 2580, 1130, 2579, 1713,
	2821, 1820, 219, 2557, 2043, 219, 219, 2025, 1996, 219,
	1779, 1621, 1244, 219, 1396, 219, 2849, 743, 744, 2854,
	2855, 1299, 2875, 1244, 735, 736, 3736, 2873, 2576, 2807,
	2808, 2809, 219, 3387, 1326, 219, 1324, 746, 1713, 2014,
	219, 3378, 219, 1827, 2890, 2921, 1478, 2802, 2936, 219,
	2824, 1476, 2908, 1456, 650, 2813, 2128, 2883, 219, 219,
	2830, 2790, 861, 2791, 817, 2130, 1454, 1437, 1435, 3672,
	1827, 1433, 1431, 1244, 1244, 3570, 3418, 1429, 3343, 2863,
	3571, 219, 219, 2945, 3220, 219, 2547, 1421, 1419, 2869,
	3216, 3173, 3171, 3152, 2840, 2547, 2897, 2878, 1062, 2920,
	2912, 1322, 1867, 2518, 818, 621, 2881, 2494, 2482, 2885,
	1867, 1825, 1077, 1062, 2893, 2474, 2891, 2461, 2803, 2884,
	1953, 1951, 219, 1946, 1130, 219, 219, 1130, 219, 1944,
	2900, 2409, 1942, 2929, 1063, 1933, 1886, 1884, 2956, 1873,
	1087, 1868, 1854, 1062, 1841, 2937, 2879, 609, 2919, 1830,
	2880, 3782, 3038, 2932, 824, 3555, 1704, 1506, 3798, 1235,
	2618, 219, 1066, 3707, 2894, 3442, 3435, 3434, 2548, 1816,
	215, 2898, 215, 215, 1226, 1278, 215, 2942, 1066, 3557,
	1911, 2976, 2374, 2972, 2957, 2935, 2951, 2944, 2917, 215,
	1256, 2916, 2959, 2960, 147, 147, 2372, 2374, 1130, 2923,
	2953, 2954, 2955, 2996, 2393, 3232, 2958, 1987, 2997, 626,
	1838, 2392, 1919, 1280, 1043, 1130, 2987, 219, 2988, 1365,
	2989, 1474, 1475, 1366, 1064, 2013, 1298, 629, 1303, 2012,
	3706, 215, 215, 3021, 1226, 1994, 3372, 871, 1044, 3619,
	1064, 1418, 2619, 3591, 215, 1229, 3321, 2961, 1128, 2967,
	2968, 1340, 1507, 1513, 1514, 2993, 1739, 3030, 3031, 2414,
	2396, 1510, 2637, 3001, 3799, 215, 215, 215, 3792, 1226,
	1235, 1235, 2981, 651, 652, 2994, 1787, 609, 631, 215,
	215, 3004, 829, 831, 833, 2430, 573, 2635, 2398, 1513,
	1514, 1366, 2432, 3671, 734, 3641, 2256, 2256, 1366, 1713,
	3638, 682, 628, 3215, 3205, 2431, 722, 2400, 3107, 3026,
	3136, 2501, 1515, 1739, 1739, 2274, 1062, 1516, 1782, 3034,
	2399, 1709, 3825, 3044, 3046, 3047, 3037, 2811, 3849, 1739,
	1739, 219, 219, 1045, 3053, 584, 3050, 3640, 3057, 3059,
	1235, 3289, 1130, 3060, 2713, 2714, 1513, 1514, 1515, 1582,
	3064, 3293, 3126, 2366, 2367, 215, 1713, 1713, 2364, 2365,
	1739, 1406, 2181, 219, 3141, 2366, 3074, 1405, 2364, 215,
	2187, 3140, 1713, 1713, 3099, 1459, 3049, 1580, 1458, 654,
	653, 3868, 3838, 3811, 2256, 2256, 2256, 2256, 2256, 2256,
	2256, 2256, 2256, 2256, 2256, 2256, 2256, 2256, 2256, 2256,
	2256, 2256, 2256, 1713, 2256, 2632, 1063, 1063, 3072, 3601,
	623, 219, 2074, 3065, 2865, 2866, 3114, 3115, 2867, 3522,
	2633, 3108, 3481, 147, 2638, 3479, 3406, 3180, 2074, 3075,
	655, 656, 627, 3337, 3257, 3117, 3118, 1244, 3238, 3100,
	1244, 3128, 3218, 3112, 3200, 3199, 2886, 2887, 3192, 3198,
	2888, 3169, 3164, 219, 2952, 2926, 2924, 630, 2562, 3103,
	2561, 219, 2511, 3138, 2486, 2462, 2345, 3129, 219, 2344,
	3148, 2146, 3196, 625, 1244, 2011, 2010, 2009, 2008, 1936,
	3184, 1935, 1934, 1917, 1897, 1896, 1892, 1891, 219, 1890,
	1888, 3156, 3212, 1887, 1473, 3185, 3187, 1472, 1353, 3234,
	2203, 2199, 1352, 219, 219, 1244, 1244, 1244, 1351, 219,
	219, 219, 1350, 622, 219, 219, 1349, 1348, 219, 219,
	3229, 1244, 1347, 1346, 1739, 1345, 219, 1130, 1343, 3226,
	3225, 1338, 1337, 1336, 2507, 3213, 2409, 1335, 1334, 3172,
	3228, 3174, 1294, 1293, 1292, 1291, 1290, 1289, 1283, 1130,
	3214, 632, 1277, 3258, 1275, 1274, 1121, 1120, 2818, 2819,
	1119, 2820, 624, 1118, 1089, 2547, 1088, 1713, 1018, 923,
	3217, 1788, 835, 2634, 821, 2197, 3500, 3357, 1467, 3227,
	562, 77, 2636, 1285, 3287, 669, 1063, 3235, 1062, 1062,
	72, 3168, 2201, 2202, 2200, 219, 3230, 3236, 677, 3686,
	2856, 215, 3249, 215, 2439, 1995, 3242, 215, 3241, 3247,
	3248, 3253, 3283, 3194, 3256, 3252, 3275, 1256, 3255, 1226,
	215, 3197, 215, 2840, 1426, 3274, 1997, 215, 1256, 578,
	3268, 2794, 215, 1256, 2315, 1739, 3664, 3263, 609, 3297,
	2675, 3597, 3462, 2184, 3240, 1601, 2196, 2198, 74, 910,
	1000, 3398, 3397, 3344, 3155, 2537, 3395, 3394, 878, 1133,
	219, 1798, 916, 1814, 1807, 2346, 1130, 2234, 1130, 922,
	1717, 919, 1714, 1911, 1716, 921, 920, 1715, 1713, 1603,
	918, 3243, 3244, 3245, 1712, 2470, 2505, 1330, 3246, 800,
	1802, 219, 219, 219, 2140, 2168, 2664, 1596, 891, 912,
	2165, 1082, 2777, 2939, 219, 3135, 3312, 3426, 2053, 685,
	2710, 2171, 219, 1075, 219, 2257, 2250, 219, 219, 219,
	2246, 2495, 1483, 3363, 1573, 2506, 1116, 894, 2138, 1130,
	219, 219, 1587, 3329, 1130, 2644, 2063, 3340, 3341, 2946,
	2797, 2341, 3703, 2068, 219, 1901, 3325, 3328, 219, 1042,
	1041, 1063, 3332, 3323, 3324, 1040, 3693, 219, 3373, 1063,
	3690, 1130, 219, 3250, 3342, 2799, 1244, 3326, 1062, 3333,
	2906, 1791, 1063, 2358, 1565, 2913, 906, 1234, 1066, 3362,
	3322, 2762, 2975, 1296, 614, 3618, 1564, 2446, 3327, 3331,
	3392, 2445, 3607, 1066, 1103, 219, 1102, 1101, 2838, 215,
	3374, 3389, 3856, 3165, 3385, 186, 2612, 1130, 1504, 1496,
	183, 3364, 3438, 185, 184, 3402, 3182, 19, 18, 17,
	3386, 3422, 3421, 1066, 3375, 3376, 94, 3425, 3416, 38,
	16, 3413, 3393, 3411, 3408, 122, 121, 1130, 3430, 120,
	1064, 3423, 119, 215, 118, 117, 116, 215, 111, 115,
	114, 113, 215, 112, 110, 1064, 109, 108, 107, 106,
	105, 104, 103, 102, 101, 100, 99, 98, 97, 96,
	215, 95, 215, 605, 215, 602, 1130, 52, 562, 51,
	3474, 93, 3048, 3449, 219, 1064, 219, 92, 1130, 219,
	15, 3058, 1937, 3454, 3459, 36, 13, 219, 56, 3061,
	57, 3062, 3441, 12, 31, 32, 83, 82, 30, 3470,
	14, 29, 215, 27, 1702, 10, 8, 7, 33, 3484,
	1681, 219, 11, 152, 151, 150, 76, 149, 1128, 2058,
	148, 609, 1739, 1062, 75, 734, 3475, 3476, 25, 9,
	219, 1062, 144, 1911, 215, 3541, 1226, 215, 219, 3210,
	3478, 71, 146, 145, 1062, 3482, 219, 143, 3460, 1130,
	609, 142, 1244, 3540, 3505, 3531, 3504, 215, 219, 141,
	69, 140, 3483, 139, 70, 1713, 215, 215, 138, 215,
	3545, 215, 2256, 215, 3521, 215, 23, 1739, 3544, 5,
	3519, 219, 219, 55, 2908, 6, 1066, 3460, 3259, 2020,
	3575, 3576, 2021, 3529, 2022, 3554, 3444, 3523, 2983, 2077,
	87, 3587, 3588, 219, 3539, 215, 88, 3552, 3551, 34,
	67, 3573, 66, 65, 2256, 3559, 3550, 3144, 219, 3425,
	1713, 3558, 3553, 22, 54, 21, 593, 176, 175, 174,
	609, 173, 168, 167, 172, 3613, 170, 169, 171, 166,
	178, 177, 180, 3603, 164, 160, 159, 163, 1064, 165,
	3513, 3514, 3595, 3602, 162, 161, 3590, 2252, 158, 179,
	62, 137, 3586, 3620, 136, 3556, 135, 219, 134, 133,
	132, 3627, 131, 61, 20, 1739, 3511, 2, 1, 219,
	0, 0, 1244, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 1244, 1244, 0, 0, 0, 3642, 0, 0,
	3644, 0, 0, 0, 0, 3635, 3636, 0, 3634, 1244,
	3544, 3655, 0, 219, 0, 219, 0, 3647, 1713, 0,
	0, 217, 0, 0, 3653, 3654, 0, 2256, 3639, 3652,
	0, 0, 0, 0, 0, 0, 0, 3646, 0, 219,
	3668, 3658, 0, 0, 3560, 219, 3681, 3659, 219, 0,
	1130, 3683, 0, 0, 3579, 0, 0, 0, 0, 219,
	219, 0, 3701, 3692, 3695, 0, 0, 0, 0, 0,
	0, 0, 3696, 3708, 3651, 3700, 219, 0, 0, 0,
	0, 3688, 0, 0, 0, 562, 0, 0, 0, 0,
	0, 0, 0, 3721, 1235, 0, 2256, 2256, 0, 0,
	215, 219, 3712, 3720, 0, 0, 3705, 0, 0, 562,
	3717, 3401, 3715, 3748, 0, 0, 215, 3697, 562, 0,
	3660, 3412, 3661, 0, 0, 0, 3753, 0, 0, 3735,
	215, 3734, 3732, 3733, 0, 0, 0, 0, 0, 3429,
	0, 3769, 3751, 0, 0, 0, 0, 219, 3771, 0,
	0, 0, 3682, 0, 0, 0, 3778, 0, 1066, 1066,
	0, 3773, 0, 0, 3770, 0, 3783, 219, 0, 3779,
	3775, 2077, 0, 0, 0, 0, 0, 0, 0, 889,
	0, 0, 0, 0, 0, 3789, 3790, 0, 0, 3801,
	3795, 3793, 3791, 2507, 219, 0, 219, 3692, 3800, 0,
	3695, 3802, 3804, 0, 0, 3813, 3808, 0, 0, 3816,
	0, 3819, 0, 0, 3812, 3820, 1659, 578, 3818, 3814,
	1064, 1064, 0, 3815, 0, 3817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3832, 3834,
	0, 0, 3705, 0, 0, 0, 0, 3839, 0, 3842,
	3840, 0, 0, 3844, 0, 0, 0, 0, 0, 0,
	2382, 0, 0, 3847, 0, 0, 3853, 0, 215, 0,
	0, 0, 0, 3859, 0, 0, 0, 0, 3860, 215,
	0, 0, 0, 0, 3854, 3855, 3358, 0, 0, 0,
	0, 3863, 215, 3866, 0, 0, 0, 3870, 0, 3869,
	0, 3807, 3873, 3872, 0, 3875, 215, 3876, 3867, 3878,
	0, 0, 3880, 0, 0, 0, 3354, 215, 2455, 0,
	3347, 0, 0, 3877, 0, 0, 0, 0, 0, 3776,
	3777, 0, 0, 3780, 0, 0, 3345, 0, 1066, 0,
	1256, 0, 3349, 215, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 2490, 0, 0, 0,
	0, 0, 3355, 0, 0, 0, 2382, 0, 562, 2602,
	0, 2510, 0, 0, 877, 0, 0, 215, 0, 0,
	215, 0, 215, 0, 215, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 3348, 2530, 734,
	1064, 2382, 2382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 1513,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	1226, 215, 0, 0, 1256, 0, 1256, 0, 0, 1226,
	1544, 1226, 0, 1226, 0, 0, 0, 1516, 0, 2252,
	2252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 215, 215, 215, 1226, 215,
	0, 215, 0, 0, 0, 0, 0, 0, 1515, 0,
	2641, 2642, 0, 0, 0, 0, 0, 0, 1535, 0,
	0, 0, 0, 1513, 1514, 0, 1532, 0, 0, 0,
	0, 0, 215, 1066, 0, 0, 0, 0, 0, 0,
	215, 1066, 0, 0, 1544, 0, 0, 0, 1513, 1514,
	0, 1516, 0, 0, 1066, 3350, 0, 0, 0, 3351,
	0, 0, 0, 0, 0, 0, 0, 0, 3278, 1544,
	0, 0, 0, 0, 3709, 0, 1516, 3710, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 1538, 1539, 1540,
	1541, 0, 0, 0, 0, 1064, 0, 1521, 0, 2252,
	2252, 2252, 3353, 1064, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 3356, 1064, 1535, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 1058, 0, 1256,
	2736, 2737, 2738, 0, 0, 1543, 1545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 889, 0, 0, 0,
	889, 0, 0, 0, 1530, 1531, 0, 3017, 0, 210,
	0, 1521, 0, 0, 0, 1215, 0, 0, 0, 1215,
	0, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	0, 1536, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 2713, 2714, 0, 2731, 2732, 2733, 0, 0, 1543,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3352, 3279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 1530, 1531, 1536, 562, 0, 0, 0,
	2728, 562, 0, 0, 562, 0, 0, 562, 562, 0,
	1542, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	1536, 215, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2382,
	2382, 215, 0, 0, 0, 2382, 0, 0, 2842, 2719,
	0, 877, 0, 0, 0, 877, 2382, 2842, 0, 2382,
	2842, 2842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 215, 215, 215, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 1226, 1537, 1258, 0,
	1262, 0, 1268, 0, 0, 0, 0, 2734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 1529, 0,
	1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 2902,
	0, 0, 2904, 2382, 0, 0, 215, 0, 0, 0,
	215, 0, 1303, 2729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2490,
	0, 0, 1226, 0, 215, 0, 0, 2382, 0, 562,
	0, 0, 0, 2252, 2252, 0, 2382, 0, 0, 0,
	0, 0, 1388, 0, 0, 215, 215, 0, 0, 0,
	1393, 0, 0, 0, 0, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 0, 3014, 3015, 0, 0, 215, 2490,
	0, 0, 2490, 0, 0, 0, 1533, 1529, 0, 1526,
	1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 2992,
	2730, 0, 1226, 215, 0, 215, 0, 0, 0, 0,
	0, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252,
	2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252,
	0, 2252, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083,
	3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	3094, 0, 3098, 0, 0, 0, 0, 0, 0, 0,
	2713, 2714, 1215, 2731, 2732, 2733, 0, 1566, 1567, 1568,
	1569, 1570, 0, 0, 0, 0, 1513, 1514, 0, 0,
	3023, 0, 0, 0, 3055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 1544, 0, 0,
	0, 0, 1597, 889, 1516, 2725, 2726, 2727, 0, 1215,
	0, 0, 2724, 2722, 2723, 2715, 2716, 2717, 2718, 2720,
	2721, 0, 0, 0, 0, 0, 0, 0, 0, 2728,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 1514, 0, 215, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1125, 0, 0, 0, 1544, 3012, 1233, 0, 562, 562,
	0, 1516, 0, 0, 0, 0, 0, 0, 2719, 0,
	0, 0, 0, 0, 1538, 1539, 1540, 1541, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 1653, 1653, 1653,
	1256, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1535, 0, 0, 0, 0, 0, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 1545, 1332, 0, 2734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 0, 0, 1357, 1357, 1357, 0, 0,
	0, 1530, 1531, 0, 0, 0, 0, 0, 877, 1386,
	1387, 0, 2729, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 1541, 0, 0, 0, 1536, 0,
	215, 1521, 0, 0, 0, 1513, 1514, 0, 215, 0,
	0, 1556, 1557, 1558, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1544, 0, 0, 0,
	0, 0, 0, 1516, 0, 2382, 215, 0, 1562, 1543,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2530, 2530, 0, 0, 0, 1466, 734, 734, 2382, 0,
	0, 2490, 2490, 0, 1515, 734, 2382, 0, 0, 0,
	0, 0, 0, 215, 1535, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 0, 1542, 0, 2730,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3298, 1538, 1539, 1540, 1541, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 1542, 1563, 0, 1215, 0, 0,
	0, 1543, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 1537, 0, 2725, 2726, 2727, 1256, 0, 215,
	0, 2724, 2722, 2723, 2715, 2716, 2717, 2718, 2720, 2721,
	1530, 1531, 215, 0, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 1551, 0, 2382, 2382,
	2382, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 1256, 0, 0, 0, 0, 0, 0, 0, 2382,
	0, 2842, 0, 0, 1256, 1256, 215, 0, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 215, 215, 2252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2382, 0, 0, 0, 3404, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 1691, 0, 215,
	3467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 2252, 1233, 0, 1526, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 0, 0, 0, 1542, 0, 0, 0,
	0, 1215, 1256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3492, 0, 1537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 2052, 0,
	2056, 0, 0, 0, 0, 0, 0, 2070, 0, 0,
	1554, 0, 0, 0, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 0,
	2119, 0, 2121, 2122, 2123, 2124, 0, 0, 0, 0,
	0, 2382, 0, 2842, 2252, 0, 3486, 0, 0, 0,
	0, 0, 2148, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 0, 0, 0, 2163,
	0, 0, 0, 0, 0, 3594, 1552, 0, 609, 0,
	0, 0, 1555, 1533, 1529, 0, 1526, 1524, 1525, 1517,
	1518, 1519, 1520, 1522, 1523, 0, 0, 3486, 0, 1215,
	0, 2211, 2214, 2217, 2220, 2382, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 3547, 0, 0, 0, 2248, 0, 2259,
	2261, 2266, 0, 0, 0, 1256, 0, 0, 0, 0,
	2713, 2714, 0, 2731, 2732, 2733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 215,
	3022, 1215, 0, 1899, 0, 0, 0, 1906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 1925, 0, 1925, 3486, 0, 0, 0, 0,
	1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558, 2728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 1544, 0, 0, 979, 1513, 1514, 0, 1516, 0,
	0, 0, 1233, 1562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3404, 0, 1544, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 215, 0, 0, 1515,
	0, 0, 0, 0, 1906, 2842, 216, 1973, 0, 1535,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 1990, 2719, 216,
	1256, 0, 1256, 0, 1535, 0, 0, 2000, 0, 2002,
	0, 2004, 1532, 2006, 0, 2007, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 3677, 0, 0, 0,
	0, 0, 1256, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 215, 2382, 1538, 1539,
	1540, 1541, 0, 0, 3011, 0, 2734, 0, 1521, 0,
	0, 0, 0, 215, 0, 0, 2713, 2714, 0, 2731,
	2732, 2733, 0, 1538, 1539, 1540, 1541, 0, 0, 0,
	2457, 0, 2459, 1521, 0, 0, 0, 1553, 3055, 0,
	1563, 0, 2729, 0, 0, 0, 1543, 1545, 0, 0,
	0, 0, 130, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 0, 0, 0, 0, 1559, 0, 1560, 0,
	0, 1543, 1545, 64, 125, 1530, 1531, 0, 0, 0,
	0, 0, 0, 0, 2382, 2728, 0, 0, 0, 68,
	0, 1551, 0, 0, 0, 0, 0, 0, 58, 0,
	1530, 1531, 1536, 0, 3486, 42, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 0, 73, 0, 0, 1561, 1536, 0, 0,
	0, 1256, 0, 2382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 44, 59, 0, 0, 2730,
	0, 45, 0, 0, 0, 0, 78, 0, 0, 128,
	2577, 0, 0, 0, 2719, 0, 43, 89, 0, 0,
	0, 0, 79, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 2735, 0, 0, 0,
	0, 0, 0, 46, 0, 0, 1566, 1567, 0, 1537,
	0, 0, 0, 0, 0, 0, 1542, 0, 0, 0,
	2322, 80, 2734, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 0, 1537, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2729, 0,
	0, 2624, 2625, 1215, 2725, 2726, 2727, 2631, 0, 0,
	0, 2724, 2722, 2723, 2715, 2716, 2717, 2718, 2720, 2721,
	1215, 0, 0, 0, 0, 0, 2645, 2646, 0, 0,
	0, 0, 2163, 0, 0, 0, 0, 0, 0, 0,
	0, 2653, 0, 0, 0, 0, 889, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2667, 0, 0,
	889, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533, 1529,
	0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523,
	0, 81, 0, 0, 2701, 0, 0, 0, 2702, 0,
	0, 47, 2692, 1533, 1529, 0, 1526, 1524, 1525, 1517,
	1518, 1519, 1520, 1522, 1523, 2730, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 50, 153, 84,
	0, 85, 0, 48, 0, 0, 0, 129, 1215, 0,
	0, 0, 0, 49, 0, 0, 1233, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 1215, 2266,
	2266, 2266, 53, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 126, 0, 0, 0,
	0, 0, 2767, 1906, 0, 0, 0, 0, 0, 0,
	2481, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 2512, 0, 0,
	1357, 0, 1357, 0, 1357, 0, 0, 0, 157, 0,
	2725, 2726, 2727, 0, 0, 0, 188, 2724, 2722, 2723,
	2715, 2716, 2717, 2718, 2720, 2721, 181, 0, 0, 0,
	0, 877, 0, 2556, 182, 0, 0, 216, 1135, 216,
	216, 0, 1135, 216, 1135, 877, 0, 0, 1135, 2564,
	0, 2567, 0, 0, 0, 156, 216, 0, 3, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 1215, 0,
	0, 0, 2859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2588, 1233, 2590, 1233, 0, 2593,
	0, 0, 0, 1513, 1514, 0, 0, 1135, 216, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 1544, 0, 0, 0, 0, 0,
	0, 1516, 1357, 0, 0, 0, 0, 0, 0, 0,
	2621, 0, 216, 216, 216, 0, 0, 1135, 0, 1215,
	0, 1135, 0, 0, 0, 1135, 216, 216, 0, 0,
	0, 0, 1515, 0, 0, 1135, 1215, 0, 0, 0,
	0, 0, 1535, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 2713, 2714, 0, 2731, 2732,
	2733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 1541, 0, 216, 0, 0, 0,
	0, 1521, 0, 0, 2728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1543,
	1545, 0, 0, 1215, 0, 0, 0, 2713, 2714, 0,
	2731, 2732, 2733, 2070, 0, 0, 0, 0, 0, 3009,
	3010, 0, 0, 3013, 0, 0, 0, 3016, 1530, 1531,
	0, 0, 0, 0, 0, 0, 3020, 0, 0, 0,
	0, 0, 0, 2719, 0, 3027, 0, 0, 2767, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 0,
	0, 0, 0, 3039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3066, 3067, 0, 3068,
	3069, 3070, 0, 0, 3071, 0, 0, 0, 3073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558, 0,
	0, 0, 0, 0, 0, 0, 0, 2729, 0, 3101,
	3102, 1544, 0, 0, 1542, 0, 0, 0, 1516, 0,
	0, 2834, 0, 1562, 3111, 2719, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 3120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 2872, 2874, 2481, 0, 0, 1215, 1535,
	0, 0, 0, 0, 216, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 1135, 0, 216, 216, 216,
	1215, 0, 0, 2734, 216, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 3149, 0, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	3158, 3161, 0, 0, 2730, 0, 2914, 0, 0, 2729,
	2918, 0, 1135, 0, 0, 0, 0, 0, 1538, 1539,
	1540, 1541, 0, 0, 0, 0, 3181, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 1529, 0, 1526, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 0, 0, 1233, 1233, 1553, 0, 0,
	1563, 0, 0, 0, 0, 0, 1543, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 2971, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 0, 1215,
	0, 0, 0, 0, 0, 1530, 1531, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 3237, 0, 0, 0,
	0, 1551, 0, 0, 0, 0, 2730, 0, 214, 2725,
	2726, 2727, 1536, 2995, 0, 1233, 2724, 2722, 2723, 2715,
	2716, 2717, 2718, 2720, 2721, 0, 0, 0, 0, 0,
	0, 644, 0, 0, 1135, 1135, 216, 0, 0, 0,
	1215, 0, 1135, 0, 0, 1215, 0, 0, 3007, 0,
	0, 644, 0, 0, 0, 0, 0, 0, 3276, 3277,
	0, 0, 0, 0, 3281, 3282, 0, 0, 0, 3285,
	3286, 0, 1215, 0, 0, 0, 3290, 0, 0, 0,
	216, 0, 0, 0, 216, 0, 0, 3294, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 3299, 0, 0, 0, 216, 0, 216,
	0, 216, 0, 0, 0, 0, 0, 0, 1215, 1537,
	0, 2725, 2726, 2727, 0, 0, 0, 0, 2724, 2722,
	2723, 2715, 2716, 2717, 2718, 2720, 2721, 0, 0, 0,
	0, 0, 0, 0, 0, 1554, 0, 0, 1215, 216,
	0, 0, 0, 0, 0, 0, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 1135, 0, 1135, 0, 1135,
	0, 0, 0, 0, 0, 0, 0, 1135, 0, 0,
	1135, 216, 0, 0, 216, 0, 0, 1215, 0, 0,
	0, 0, 0, 1135, 1135, 1135, 0, 0, 0, 1215,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 3161,
	0, 0, 0, 216, 216, 0, 216, 0, 216, 0,
	216, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 1552, 0, 889, 1527, 1528, 1534, 1555, 1533, 1529,
	0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 911, 91, 0, 0,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3161, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 699,
	0, 1513, 1514, 0, 0, 3455, 3456, 3457, 0, 700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3209, 0, 1544, 0, 0, 0, 91, 701, 0, 1516,
	0, 0, 0, 3465, 3466, 3219, 0, 0, 1513, 1514,
	0, 0, 0, 0, 721, 0, 0, 3473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1544,
	1515, 702, 0, 0, 0, 1135, 1516, 0, 0, 0,
	1535, 0, 0, 0, 0, 0, 0, 0, 1532, 0,
	0, 703, 0, 0, 0, 0, 0, 0, 3161, 0,
	0, 0, 0, 3261, 854, 0, 3510, 1515, 0, 0,
	0, 704, 0, 872, 705, 3517, 0, 1535, 877, 0,
	0, 0, 0, 631, 3524, 1532, 0, 0, 0, 0,
	2623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1135, 0, 1052, 720, 0, 1538,
	1539, 1540, 1541, 0, 0, 0, 0, 0, 0, 1521,
	0, 1215, 0, 0, 0, 0, 889, 216, 0, 0,
	1135, 0, 0, 0, 0, 0, 3161, 3161, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	0, 0, 0, 0, 0, 0, 1521, 1543, 1545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 1531, 3606, 0,
	0, 3609, 0, 0, 1543, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3161,
	0, 0, 707, 1536, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 1530, 1531, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 708, 0, 0, 0, 0, 214,
	0, 214, 214, 3161, 0, 214, 3161, 0, 0, 0,
	1536, 0, 1135, 0, 0, 0, 3377, 0, 644, 0,
	0, 0, 630, 0, 0, 216, 0, 2481, 0, 709,
	0, 0, 710, 0, 0, 0, 216, 0, 718, 0,
	0, 0, 0, 0, 0, 711, 0, 0, 0, 216,
	0, 0, 0, 0, 2481, 0, 0, 0, 0, 3417,
	214, 214, 1542, 216, 1135, 0, 0, 0, 1135, 0,
	0, 0, 0, 214, 216, 0, 0, 712, 719, 0,
	1537, 877, 0, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 214, 214, 0, 715, 1542,
	216, 0, 0, 714, 0, 0, 0, 216, 214, 214,
	0, 0, 0, 0, 0, 0, 632, 1537, 0, 0,
	0, 0, 3731, 3731, 3731, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 216, 0, 216,
	0, 216, 0, 0, 3752, 0, 0, 1135, 1135, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 3731, 216, 0, 216, 0,
	0, 0, 0, 0, 3493, 0, 220, 0, 214, 1533,
	1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 216, 216, 216, 0, 216, 0, 216, 3161,
	0, 3161, 0, 0, 0, 0, 1533, 1529, 0, 1526,
	1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 637, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 3731, 3848, 0, 0, 0, 0, 3585, 1233,
	3852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 947, 0, 0, 0, 0, 0, 0, 91,
	0, 91, 0, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 91, 91, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 0, 1513,
	1514, 91, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0,
	1675, 0, 1065, 0, 0, 0, 214, 0, 0, 1549,
	1544, 0, 0, 0, 0, 0, 0, 1516, 0, 214,
	1675, 214, 1562, 0, 0, 3685, 644, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 3702, 0, 0, 0,
	0, 0, 0, 0, 1135, 91, 0, 0, 1515, 0,
	0, 0, 0, 3714, 0, 0, 0, 0, 1535, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 854, 0, 0, 0, 0, 0, 1538, 1539, 1540,
	1541, 0, 0, 0, 0, 0, 0, 1521, 216, 1576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 0, 0, 0,
	1589, 0, 0, 0, 0, 0, 1553, 0, 0, 1563,
	216, 216, 216, 0, 0, 1543, 1545, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 1559, 0, 1560, 644, 0,
	0, 1135, 0, 0, 1530, 1531, 0, 0, 0, 0,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	1551, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 216, 0, 0, 1135, 216, 0, 0,
	0, 0, 214, 0, 0, 0, 214, 1135, 0, 0,
	0, 214, 0, 0, 0, 1561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 214, 1550, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 1135, 0,
	1673, 0, 1676, 0, 91, 216, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 214, 0, 0, 214, 0, 1135, 0,
	216, 1135, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 644, 214, 0, 214, 0,
	214, 0, 214, 0, 214, 216, 0, 0, 0, 0,
	1131, 0, 0, 0, 1131, 0, 1245, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 63, 0, 0, 0,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 0, 0, 0, 0, 0, 0, 1135,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 1245,
	1552, 0, 0, 1527, 1528, 1534, 1555, 1533, 1529, 0,
	1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0,
	0, 0, 0, 2159, 0, 0, 0, 2160, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 1245, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 0, 78, 0, 1132, 0, 0, 0,
	1132, 0, 1246, 0, 0, 89, 1246, 0, 0, 0,
	79, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 0,
	0, 0, 0, 0, 64, 1246, 0, 1513, 1514, 80,
	1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 1549, 1544, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 1065,
	1562, 0, 0, 0, 0, 1246, 0, 0, 0, 1246,
	0, 0, 0, 1246, 73, 1065, 0, 872, 0, 872,
	0, 0, 0, 1246, 0, 0, 1515, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 78, 0, 0,
	0, 1135, 0, 0, 1135, 0, 0, 0, 89, 0,
	0, 0, 0, 79, 86, 0, 1246, 216, 0, 0,
	2338, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 1135, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 1539, 1540, 1541, 0,
	0, 0, 80, 0, 0, 1521, 0, 0, 0, 1135,
	1135, 1135, 0, 0, 0, 0, 153, 84, 0, 85,
	0, 0, 0, 0, 0, 1135, 0, 0, 0, 0,
	216, 1135, 854, 0, 1553, 854, 854, 1563, 187, 0,
	0, 0, 0, 1543, 1545, 0, 0, 0, 0, 0,
	729, 0, 0, 1135, 123, 0, 0, 214, 0, 0,
	0, 0, 0, 1559, 0, 1560, 0, 0, 214, 0,
	0, 0, 1530, 1531, 0, 0, 0, 0, 0, 189,
	0, 214, 0, 0, 0, 0, 0, 0, 1551, 0,
	2137, 0, 0, 0, 0, 214, 0, 0, 0, 1536,
	0, 0, 124, 0, 872, 0, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 157, 1131, 0, 1583,
	0, 0, 81, 1561, 188, 0, 637, 0, 0, 0,
	0, 637, 214, 0, 181, 0, 0, 0, 0, 214,
	1550, 0, 182, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	84, 0, 85, 156, 1131, 0, 214, 0, 0, 214,
	1135, 214, 1135, 214, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 1542, 1052,
	0, 0, 0, 729, 0, 0, 0, 123, 0, 0,
	0, 0, 214, 0, 0, 1676, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	214, 0, 189, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 1135, 216, 216, 91, 0, 1135, 0,
	0, 0, 0, 1132, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 214, 214, 214, 214, 0, 214, 157,
	214, 216, 0, 0, 0, 1135, 216, 188, 0, 1246,
	1135, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	1132, 214, 0, 0, 0, 0, 1245, 1245, 0, 214,
	0, 0, 0, 0, 1131, 0, 156, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 0, 0, 1552, 0,
	0, 1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524,
	1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 0,
	0, 1135, 0, 0, 0, 3306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	91, 0, 0, 63, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 1135, 0, 68, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 0, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 1246, 1246, 0, 0, 0, 1245, 73, 1245,
	1132, 1245, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 91, 1245, 1245, 1245, 0, 0,
	0, 78, 0, 1135, 0, 0, 1135, 0, 0, 0,
	0, 0, 89, 0, 0, 637, 0, 79, 86, 0,
	0, 91, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 1065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 1246, 0, 1246, 0, 1246, 0, 0,
	0, 0, 1131, 63, 0, 1246, 0, 0, 1246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 1246, 1246, 1246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 68, 0, 1135, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 1135, 1135, 0, 0,
	1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558, 0,
	0, 0, 0, 1135, 0, 0, 0, 0, 73, 0,
	1549, 1544, 214, 214, 214, 0, 0, 0, 1516, 0,
	0, 1675, 0, 1562, 0, 2137, 81, 1131, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 78, 216, 0, 1135, 0, 1583, 0, 0, 1515,
	0, 0, 89, 216, 0, 0, 0, 79, 86, 1535,
	0, 0, 0, 153, 84, 0, 85, 1532, 1132, 0,
	216, 0, 0, 0, 0, 214, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1131, 729, 0, 0,
	0, 123, 0, 1065, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1131, 0, 214, 214, 189, 0, 1538, 1539,
	1540, 1541, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 124,
	0, 0, 0, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 1553, 0, 0,
	1563, 188, 0, 0, 0, 0, 1543, 1545, 0, 0,
	0, 181, 0, 0, 0, 1052, 0, 0, 0, 182,
	0, 0, 214, 0, 214, 0, 1559, 0, 1560, 0,
	1052, 0, 0, 0, 0, 1530, 1531, 0, 0, 0,
	1382, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 1551, 1132, 0, 0, 0, 81, 214, 0, 0,
	0, 0, 1536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1131, 0, 0, 0, 1132, 0,
	0, 0, 0, 0, 0, 0, 1561, 0, 0, 0,
	0, 0, 0, 153, 84, 0, 85, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1131, 729, 0, 0,
	1245, 123, 0, 0, 0, 91, 91, 0, 0, 91,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 91, 91, 1537,
	1246, 91, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 1554, 0, 0, 0, 0,
	1132, 188, 0, 0, 0, 1065, 1065, 0, 0, 1245,
	1245, 181, 1245, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 1052, 0, 0, 872, 0, 0, 0,
	1380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1132, 0, 0, 0, 1246, 0, 0, 0,
	0, 91, 91, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533, 1529,
	0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523,
	0, 0, 0, 0, 0, 0, 1513, 1514, 3025, 1546,
	1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1544, 0, 0,
	0, 0, 0, 0, 1516, 1246, 1246, 0, 1246, 1562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	1246, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 214, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 1065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 1539, 1540, 1541, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1544, 1553, 0, 0, 1563, 0, 0, 1516,
	91, 0, 1543, 1545, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1052, 1052, 0, 0, 0,
	0, 0, 1559, 0, 1560, 0, 0, 0, 0, 0,
	1515, 1530, 1531, 0, 0, 0, 0, 0, 0, 0,
	1535, 0, 0, 0, 0, 0, 1131, 1551, 1532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1536, 0,
	1065, 0, 0, 0, 0, 0, 0, 0, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1131, 0,
	0, 1675, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1131, 0, 0, 0, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 1540, 1541, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 1553, 0,
	0, 1563, 0, 0, 0, 0, 0, 1543, 1545, 0,
	0, 0, 0, 214, 0, 1537, 0, 0, 214, 0,
	0, 0, 1132, 0, 0, 0, 0, 1559, 0, 1560,
	0, 0, 0, 0, 0, 0, 1530, 1531, 0, 0,
	0, 1554, 0, 0, 0, 1052, 0, 0, 0, 0,
	0, 0, 1551, 1131, 1132, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 1245, 0, 0, 0, 0, 0,
	0, 1132, 0, 1131, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 0, 0, 0, 0, 1561, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 0, 1245,
	1245, 0, 1542, 214, 2704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 0, 0, 0, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1246, 0, 0, 0, 0, 0, 1554, 0, 0, 1132,
	1131, 0, 0, 1131, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 1246, 0, 0, 0, 1052, 0,
	0, 0, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1131, 1246, 1246, 0, 0, 0,
	0, 0, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533,
	1529, 1131, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 0, 91, 0, 0, 0, 0, 0, 0, 2703,
	0, 0, 91, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1132, 0, 0, 1132,
	91, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 1513, 1514, 0,
	1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 1544, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1132, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 1535, 1132, 1131, 0,
	0, 0, 0, 0, 1532, 214, 0, 0, 0, 0,
	0, 0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557,
	1558, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 1544, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 1539, 1540, 1541, 0,
	0, 1515, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 1535, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 1245, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 1563, 2137, 0,
	0, 0, 0, 1543, 1545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1132, 0, 0, 0, 0, 0,
	1245, 0, 0, 1559, 0, 1560, 0, 0, 0, 0,
	0, 0, 1530, 1531, 0, 0, 0, 0, 0, 0,
	1538, 1539, 1540, 1541, 0, 0, 0, 0, 1551, 0,
	1521, 1245, 1245, 1245, 0, 0, 0, 0, 0, 1536,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 1131, 0, 0, 0, 0, 0, 1553,
	0, 0, 1563, 1561, 0, 0, 0, 0, 1543, 1545,
	0, 0, 0, 0, 0, 1131, 0, 0, 0, 0,
	1550, 0, 0, 659, 0, 0, 0, 0, 1559, 1246,
	1560, 0, 1246, 0, 0, 0, 0, 1530, 1531, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 0,
	0, 0, 0, 1551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 1246, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 661, 679, 0, 0, 1537, 0, 1561, 0,
	0, 0, 0, 0, 0, 0, 0, 1246, 1246, 1246,
	0, 0, 0, 0, 0, 1550, 0, 662, 0, 0,
	663, 0, 1554, 1246, 0, 0, 0, 0, 0, 1132,
	0, 0, 0, 0, 0, 91, 0, 686, 91, 0,
	0, 0, 1131, 664, 1131, 0, 0, 0, 0, 0,
	0, 1132, 0, 0, 684, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 0, 0, 667, 0, 0,
	0, 0, 688, 0, 0, 1131, 631, 1554, 1552, 0,
	1131, 1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524,
	1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 2700, 0, 1131, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1132, 0,
	1132, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 1131, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 1552, 0, 0, 1527, 1528, 1534, 1555,
	1533, 1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520,
	1522, 1523, 0, 1131, 0, 0, 0, 0, 0, 0,
	2699, 0, 0, 0, 0, 668, 0, 0, 0, 0,
	0, 1132, 0, 0, 0, 671, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1131, 0, 0, 0, 0, 672, 0, 0,
	0, 0, 0, 1132, 1131, 0, 0, 0, 1246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 673, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 1131, 0, 0, 1245, 1132,
	674, 0, 0, 691, 0, 690, 0, 0, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 683, 0, 0, 0,
	0, 692, 0, 689, 0, 0, 0, 0, 1132, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1132, 0, 0, 1246, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1246, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 1136, 229, 230, 1137,
	1138, 1139, 1132, 1140, 509, 1141, 1142, 1143, 1144, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 1145, 240, 241, 242, 243, 244, 245, 246,
	1146, 1147, 247, 514, 515, 516, 1148, 248, 249, 517,
	1149, 1134, 1150, 250, 251, 252, 253, 254, 255, 256,
	0, 1151, 258, 259, 260, 257, 1152, 261, 0, 262,
	263, 264, 1153, 265, 1002, 266, 267, 1154, 1155, 1157,
	1156, 1158, 1159, 1160, 268, 269, 270, 271, 272, 273,
	518, 519, 1161, 277, 274, 275, 1162, 278, 276, 1163,
	279, 1164, 1165, 280, 281, 282, 1166, 283, 1167, 284,
	285, 1168, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 1169, 221, 1170, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 1171, 304, 1172, 1173, 1003, 305, 306, 524, 525,
	307, 308, 1174, 309, 526, 1175, 527, 310, 1176, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 1005, 316,
	317, 1177, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 1178, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 1179, 533, 1180, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 1181, 344, 343, 1182, 345, 535, 1009,
	346, 347, 1010, 1183, 348, 349, 350, 1184, 1185, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 1186, 223, 1013, 374, 1187,
	536, 375, 537, 377, 378, 1188, 379, 380, 381, 1189,
	1190, 383, 384, 385, 1191, 1192, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 1193, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 1194, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 1195, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 1196, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 1197,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	1198, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 1199, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 1200, 472, 473, 471,
	1201, 474, 475, 476, 477, 478, 292, 479, 1202, 480,
	548, 549, 550, 551, 1203, 487, 1204, 481, 482, 552,
	483, 553, 1205, 484, 485, 486, 0, 488, 489, 1206,
	1207, 490, 491, 492, 494, 495, 493, 497, 1208, 498,
	1209, 496, 499, 500, 501, 554, 555, 556, 1210, 503,
	502, 557, 1211, 1212, 1213, 1214, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1129, 0, 0, 0, 0, 0,
	0, 0, 2300, 0, 0, 0, 0, 0, 0, 0,
	2301, 224, 225, 226, 227, 228, 1136, 229, 230, 1137,
	1138, 1139, 0, 1140, 509, 1141, 1142, 1143, 1144, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 1145, 240, 241, 242, 243, 244, 245, 246,
	1146, 1147, 247, 514, 515, 516, 1148, 248, 249, 517,
	1149, 1134, 1150, 250, 251, 252, 253, 254, 255, 256,
	0, 1151, 258, 259, 260, 257, 1152, 261, 0, 262,
	263, 264, 1153, 265, 1002, 266, 267, 1154, 1155, 1157,
	1156, 1158, 1159, 1160, 268, 269, 270, 271, 272, 273,
	518, 519, 1161, 277, 274, 275, 1162, 278, 276, 1163,
	279, 1164, 1165, 280, 281, 282, 1166, 283, 1167, 284,
	285, 1168, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 1169, 221, 1170, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 1171, 304, 1172, 1173, 1003, 305, 306, 524, 525,
	307, 308, 1174, 309, 526, 1175, 527, 310, 1176, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 1005, 316,
	317, 1177, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 1178, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 1179, 533, 1180, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 1181, 344, 343, 1182, 345, 535, 1009,
	346, 347, 1010, 1183, 348, 349, 350, 1184, 1185, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 1186, 223, 1013, 374, 1187,
	536, 375, 537, 377, 378, 1188, 379, 380, 381, 1189,
	1190, 383, 384, 385, 1191, 1192, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 1193, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 1194, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 1195, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 1196, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 1197,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	1198, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 1199, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 1200, 472, 473, 471,
	1201, 474, 475, 476, 477, 478, 292, 479, 1202, 480,
	548, 549, 550, 551, 1203, 487, 1204, 481, 482, 552,
	483, 553, 1205, 484, 485, 486, 0, 488, 489, 1206,
	1207, 490, 491, 492, 494, 495, 493, 497, 1208, 498,
	1209, 496, 499, 500, 501, 554, 555, 556, 1210, 503,
	502, 557, 1211, 1212, 1213, 1214, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1129, 0, 0, 0, 0, 3033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3035, 224,
	225, 226, 227, 228, 1136, 229, 230, 1137, 1138, 1139,
	0, 1140, 509, 1141, 1142, 1143, 1144, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	1145, 240, 241, 242, 243, 244, 245, 246, 1146, 1147,
	247, 514, 515, 516, 1148, 248, 249, 517, 1149, 1134,
	1150, 250, 251, 252, 253, 254, 255, 256, 0, 1151,
	258, 259, 260, 257, 1152, 261, 0, 262, 263, 264,
	1153, 265, 1002, 266, 267, 1154, 1155, 1157, 1156, 1158,
	1159, 1160, 268, 269, 270, 271, 272, 273, 518, 519,
	1161, 277, 274, 275, 1162, 278, 276, 1163, 279, 1164,
	1165, 280, 281, 282, 1166, 283, 1167, 284, 285, 1168,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 1169, 221, 1170, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 1171,
	304, 1172, 1173, 1003, 305, 306, 524, 525, 307, 308,
	1174, 309, 526, 1175, 527, 310, 1176, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 1005, 316, 317, 1177,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 1178, 1004, 325, 531, 327, 326, 328, 329, 330,
	532, 1179, 533, 1180, 332, 1006, 534, 1007, 333, 334,
	335, 1008, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 1181, 344, 343, 1182, 345, 535, 1009, 346, 347,
	1010, 1183, 348, 349, 350, 1184, 1185, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 1186, 223, 1013, 374, 1187, 536, 375,
	537, 377, 378, 1188, 379, 380, 381, 1189, 1190, 383,
	384, 385, 1191, 1192, 386, 387, 538, 1014, 388, 1015,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	1193, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	1194, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 1195, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 1196,
	426, 1016, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 1197, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 1198, 453,
	433, 434, 454, 455, 1017, 456, 457, 546, 458, 459,
	1199, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 1200, 472, 473, 471, 1201, 474,
	475, 476, 477, 478, 292, 479, 1202, 480, 548, 549,
	550, 551, 1203, 487, 1204, 481, 482, 552, 483, 553,
	1205, 484, 485, 486, 0, 488, 489, 1206, 1207, 490,
	491, 492, 494, 495, 493, 497, 1208, 498, 1209, 496,
	499, 500, 501, 554, 555, 556, 1210, 503, 502, 557,
	1211, 1212, 1213, 1214, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 0, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3330, 224, 225, 226, 227, 228, 1136, 229, 230, 1137,
	1138, 1139, 0, 1140, 509, 1141, 1142, 1143, 1144, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 1145, 240, 241, 242, 243, 244, 245, 246,
	1146, 1147, 247, 514, 515, 516, 1148, 248, 249, 517,
	1149, 1134, 1150, 250, 251, 252, 253, 254, 255, 256,
	0, 1151, 258, 259, 260, 257, 1152, 261, 0, 262,
	263, 264, 1153, 265, 1002, 266, 267, 1154, 1155, 1157,
	1156, 1158, 1159, 1160, 268, 269, 270, 271, 272, 273,
	518, 519, 1161, 277, 274, 275, 1162, 278, 276, 1163,
	279, 1164, 1165, 280, 281, 282, 1166, 283, 1167, 284,
	285, 1168, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 1169, 221, 1170, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 1171, 304, 1172, 1173, 1003, 305, 306, 524, 525,
	307, 308, 1174, 309, 526, 1175, 527, 310, 1176, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 1005, 316,
	317, 1177, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 1178, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 1179, 533, 1180, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 1181, 344, 343, 1182, 345, 535, 1009,
	346, 347, 1010, 1183, 348, 349, 350, 1184, 1185, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 1186, 223, 1013, 374, 1187,
	536, 375, 537, 377, 378, 1188, 379, 380, 381, 1189,
	1190, 383, 384, 385, 1191, 1192, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 1193, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 1194, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 1195, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 1196, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 1197,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	1198, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 1199, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 1200, 472, 473, 471,
	1201, 474, 475, 476, 477, 478, 292, 479, 1202, 480,
	548, 549, 550, 551, 1203, 487, 1204, 481, 482, 552,
	483, 553, 1205, 484, 485, 486, 0, 488, 489, 1206,
	1207, 490, 491, 492, 494, 495, 493, 497, 1208, 498,
	1209, 496, 499, 500, 501, 554, 555, 556, 1210, 503,
	502, 557, 1211, 1212, 1213, 1214, 504, 505, 558, 506,
	507, 508, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3461, 0, 224,
	225, 226, 227, 228, 1136, 229, 230, 1137, 1138, 1139,
	0, 1140, 509, 1141, 1142, 1143, 1144, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	1145, 240, 241, 242, 243, 244, 245, 246, 1146, 1147,
	247, 514, 515, 516, 1148, 248, 249, 517, 1149, 1134,
	1150, 250, 251, 252, 253, 254, 255, 256, 0, 1151,
	258, 259, 260, 257, 1152, 261, 0, 262, 263, 264,
	1153, 265, 1002, 266, 267, 1154, 1155, 1157, 1156, 1158,
	1159, 1160, 268, 269, 270, 271, 272, 273, 518, 519,
	1161, 277, 274, 275, 1162, 278, 276, 1163, 279, 1164,
	1165, 280, 281, 282, 1166, 283, 1167, 284, 285, 1168,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 1169, 221, 1170, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 1171,
	304, 1172, 1173, 1003, 305, 306, 524, 525, 307, 308,
	1174, 309, 526, 1175, 527, 310, 1176, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 1005, 316, 317, 1177,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 1178, 1004, 325, 531, 327, 326, 328, 329, 330,
	532, 1179, 533, 1180, 332, 1006, 534, 1007, 333, 334,
	335, 1008, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 1181, 344, 343, 1182, 345, 535, 1009, 346, 347,
	1010, 1183, 348, 349, 350, 1184, 1185, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 1186, 223, 1013, 374, 1187, 536, 375,
	537, 377, 378, 1188, 379, 380, 381, 1189, 1190, 383,
	384, 385, 1191, 1192, 386, 387, 538, 1014, 388, 1015,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	1193, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	1194, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 1195, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 1196,
	426, 1016, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 1197, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 1198, 453,
	433, 434, 454, 455, 1017, 456, 457, 546, 458, 459,
	1199, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 1200, 472, 473, 471, 1201, 474,
	475, 476, 477, 478, 292, 479, 1202, 480, 548, 549,
	550, 551, 1203, 487, 1204, 481, 482, 552, 483, 553,
	1205, 484, 485, 486, 0, 488, 489, 1206, 1207, 490,
	491, 492, 494, 495, 493, 497, 1208, 498, 1209, 496,
	499, 500, 501, 554, 555, 556, 1210, 503, 502, 557,
	1211, 1212, 1213, 1214, 504, 505, 558, 506, 507, 508,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3384, 0, 224, 225, 226,
	227, 228, 1136, 229, 230, 1137, 1138, 1139, 0, 1140,
	509, 1141, 1142, 1143, 1144, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 1145, 240,
	241, 242, 243, 244, 245, 246, 1146, 1147, 247, 514,
	515, 516, 1148, 248, 249, 517, 1149, 1134, 1150, 250,
	251, 252, 253, 254, 255, 256, 0, 1151, 258, 259,
	260, 257, 1152, 261, 0, 262, 263, 264, 1153, 265,
	1002, 266, 267, 1154, 1155, 1157, 1156, 1158, 1159, 1160,
	268, 269, 270, 271, 272, 273, 518, 519, 1161, 277,
	274, 275, 1162, 278, 276, 1163, 279, 1164, 1165, 280,
	281, 282, 1166, 283, 1167, 284, 285, 1168, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 1169, 221, 1170, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 1171, 304, 1172,
	1173, 1003, 305, 306, 524, 525, 307, 308, 1174, 309,
	526, 1175, 527, 310, 1176, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 1005, 316, 317, 1177, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 1178,
	1004, 325, 531, 327, 326, 328, 329, 330, 532, 1179,
	533, 1180, 332, 1006, 534, 1007, 333, 334, 335, 1008,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 1181,
	344, 343, 1182, 345, 535, 1009, 346, 347, 1010, 1183,
	348, 349, 350, 1184, 1185, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 1186, 223, 1013, 374, 1187, 536, 375, 537, 377,
	378, 1188, 379, 380, 381, 1189, 1190, 383, 384, 385,
	1191, 1192, 386, 387, 538, 1014, 388, 1015, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 1193, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 1194, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 1195, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 1196, 426, 1016,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 1197, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 1198, 453, 433, 434,
	454, 455, 1017, 456, 457, 546, 458, 459, 1199, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 1200, 472, 473, 471, 1201, 474, 475, 476,
	477, 478, 292, 479, 1202, 480, 548, 549, 550, 551,
	1203, 487, 1204, 481, 482, 552, 483, 553, 1205, 484,
	485, 486, 0, 488, 489, 1206, 1207, 490, 491, 492,
	494, 495, 493, 497, 1208, 498, 1209, 496, 499, 500,
	501, 554, 555, 556, 1210, 503, 502, 557, 1211, 1212,
	1213, 1214, 504, 505, 558, 506, 507, 508, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3262, 0, 224, 225, 226, 227, 228,
	1136, 229, 230, 1137, 1138, 1139, 0, 1140, 509, 1141,
	1142, 1143, 1144, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 1145, 240, 241, 242,
	243, 244, 245, 246, 1146, 1147, 247, 514, 515, 516,
	1148, 248, 249, 517, 1149, 1134, 1150, 250, 251, 252,
	253, 254, 255, 256, 0, 1151, 258, 259, 260, 257,
	1152, 261, 0, 262, 263, 264, 1153, 265, 1002, 266,
	267, 1154, 1155, 1157, 1156, 1158, 1159, 1160, 268, 269,
	270, 271, 272, 273, 518, 519, 1161, 277, 274, 275,
	1162, 278, 276, 1163, 279, 1164, 1165, 280, 281, 282,
	1166, 283, 1167, 284, 285, 1168, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	1169, 221, 1170, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 1171, 304, 1172, 1173, 1003,
	305, 306, 524, 525, 307, 308, 1174, 309, 526, 1175,
	527, 310, 1176, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 1005, 316, 317, 1177, 318, 319, 320, 321,
	323, 0, 0, 222, 322, 324, 331, 1178, 1004, 325,
	531, 327, 326, 328, 329, 330, 532, 1179, 533, 1180,
	332, 1006, 534, 1007, 333, 334, 335, 1008, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 1181, 344, 343,
	1182, 345, 535, 1009, 346, 347, 1010, 1183, 348, 349,
	350, 1184, 1185, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 1186,
	223, 1013, 374, 1187, 536, 375, 537, 377, 378, 1188,
	379, 380, 381, 1189, 1190, 383, 384, 385, 1191, 1192,
	386, 387, 538, 1014, 388, 1015, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 1193, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 1194, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 1195,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 1196, 426, 1016, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 1197, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 1198, 453, 433, 434, 454, 455,
	1017, 456, 457, 546, 458, 459, 1199, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	1200, 472, 473, 471, 1201, 474, 475, 476, 477, 478,
	292, 479, 1202, 480, 548, 549, 550, 551, 1203, 487,
	1204, 481, 482, 552, 483, 553, 1205, 484, 485, 486,
	0, 488, 489, 1206, 1207, 490, 491, 492, 494, 495,
	493, 497, 1208, 498, 1209, 496, 499, 500, 501, 554,
	555, 556, 1210, 503, 502, 557, 1211, 1212, 1213, 1214,
	504, 505, 558, 506, 507, 508, 1129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3051, 0, 224, 225, 226, 227, 228, 1136, 229,
	230, 1137, 1138, 1139, 0, 1140, 509, 1141, 1142, 1143,
	1144, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 1145, 240, 241, 242, 243, 244,
	245, 246, 1146, 1147, 247, 514, 515, 516, 1148, 248,
	249, 517, 1149, 1134, 1150, 250, 251, 252, 253, 254,
	255, 256, 0, 1151, 258, 259, 260, 257, 1152, 261,
	0, 262, 263, 264, 1153, 265, 1002, 266, 267, 1154,
	1155, 1157, 1156, 1158, 1159, 1160, 268, 269, 270, 271,
	272, 273, 518, 519, 1161, 277, 274, 275, 1162, 278,
	276, 1163, 279, 1164, 1165, 280, 281, 282, 1166, 283,
	1167, 284, 285, 1168, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 1169, 221,
	1170, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 1171, 304, 1172, 1173, 1003, 305, 306,
	524, 525, 307, 308, 1174, 309, 526, 1175, 527, 310,
	1176, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	1005, 316, 317, 1177, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 1178, 1004, 325, 531, 327,
	326, 328, 329, 330, 532, 1179, 533, 1180, 332, 1006,
	534, 1007, 333, 334, 335, 1008, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 1181, 344, 343, 1182, 345,
	535, 1009, 346, 347, 1010, 1183, 348, 349, 350, 1184,
	1185, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 1011,
	368, 369, 372, 373, 371, 1012, 370, 1186, 223, 1013,
	374, 1187, 536, 375, 537, 377, 378, 1188, 379, 380,
	381, 1189, 1190, 383, 384, 385, 1191, 1192, 386, 387,
	538, 1014, 388, 1015, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 1193, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 1194, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 1195, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 1196, 426, 1016, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 1197, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 1198, 453, 433, 434, 454, 455, 1017, 456,
	457, 546, 458, 459, 1199, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 1200, 472,
	473, 471, 1201, 474, 475, 476, 477, 478, 292, 479,
	1202, 480, 548, 549, 550, 551, 1203, 487, 1204, 481,
	482, 552, 483, 553, 1205, 484, 485, 486, 0, 488,
	489, 1206, 1207, 490, 491, 492, 494, 495, 493, 497,
	1208, 498, 1209, 496, 499, 500, 501, 554, 555, 556,
	1210, 503, 502, 557, 1211, 1212, 1213, 1214, 504, 505,
	558, 506, 507, 508, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2901,
	0, 224, 225, 226, 227, 228, 1136, 229, 230, 1137,
	1138, 1139, 0, 1140, 509, 1141, 1142, 1143, 1144, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 1145, 240, 241, 242, 243, 244, 245, 246,
	1146, 1147, 247, 514, 515, 516, 1148, 248, 249, 517,
	1149, 1134, 1150, 250, 251, 252, 253, 254, 255, 256,
	0, 1151, 258, 259, 260, 257, 1152, 261, 0, 262,
	263, 264, 1153, 265, 1002, 266, 267, 1154, 1155, 1157,
	1156, 1158, 1159, 1160, 268, 269, 270, 271, 272, 273,
	518, 519, 1161, 277, 274, 275, 1162, 278, 276, 1163,
	279, 1164, 1165, 280, 281, 282, 1166, 283, 1167, 284,
	285, 1168, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 1169, 221, 1170, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 1171, 304, 1172, 1173, 1003, 305, 306, 524, 525,
	307, 308, 1174, 309, 526, 1175, 527, 310, 1176, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 1005, 316,
	317, 1177, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 1178, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 1179, 533, 1180, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 1181, 344, 343, 1182, 345, 535, 1009,
	346, 347, 1010, 1183, 348, 349, 350, 1184, 1185, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 1186, 223, 1013, 374, 1187,
	536, 375, 537, 377, 378, 1188, 379, 380, 381, 1189,
	1190, 383, 384, 385, 1191, 1192, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 1193, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 1194, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 1195, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 1196, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 1197,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	1198, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 1199, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 1200, 472, 473, 471,
	1201, 474, 475, 476, 477, 478, 292, 479, 1202, 480,
	548, 549, 550, 551, 1203, 487, 1204, 481, 482, 552,
	483, 553, 1205, 484, 485, 486, 0, 488, 489, 1206,
	1207, 490, 491, 492, 494, 495, 493, 497, 1208, 498,
	1209, 496, 499, 500, 501, 554, 555, 556, 1210, 503,
	502, 557, 1211, 1212, 1213, 1214, 504, 505, 558, 506,
	507, 508, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2183, 0, 224,
	225, 226, 227, 228, 1136, 229, 230, 1137, 1138, 1139,
	0, 1140, 509, 1141, 1142, 1143, 1144, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	1145, 240, 241, 242, 243, 244, 245, 246, 1146, 1147,
	247, 514, 515, 516, 1148, 248, 249, 517, 1149, 1134,
	1150, 250, 251, 252, 253, 254, 255, 256, 0, 1151,
	258, 259, 260, 257, 1152, 261, 0, 262, 263, 264,
	1153, 265, 1002, 266, 267, 1154, 1155, 1157, 1156, 1158,
	1159, 1160, 268, 269, 270, 271, 272, 273, 518, 519,
	1161, 277, 274, 275, 1162, 278, 276, 1163, 279, 1164,
	1165, 280, 281, 282, 1166, 283, 1167, 284, 285, 1168,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 1169, 221, 1170, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 1171,
	304, 1172, 1173, 1003, 305, 306, 524, 525, 307, 308,
	1174, 309, 526, 1175, 527, 310, 1176, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 1005, 316, 317, 1177,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 1178, 1004, 325, 531, 327, 326, 328, 329, 330,
	532, 1179, 533, 1180, 332, 1006, 534, 1007, 333, 334,
	335, 1008, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 1181, 344, 343, 1182, 345, 535, 1009, 346, 347,
	1010, 1183, 348, 349, 350, 1184, 1185, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 1186, 223, 1013, 374, 1187, 536, 375,
	537, 377, 378, 1188, 379, 380, 381, 1189, 1190, 383,
	384, 385, 1191, 1192, 386, 387, 538, 1014, 388, 1015,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	1193, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	1194, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 1195, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 1196,
	426, 1016, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 1197, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 1198, 453,
	433, 434, 454, 455, 1017, 456, 457, 546, 458, 459,
	1199, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 1200, 472, 473, 471, 1201, 474,
	475, 476, 477, 478, 292, 479, 1202, 480, 548, 549,
	550, 551, 1203, 487, 1204, 481, 482, 552, 483, 553,
	1205, 484, 485, 486, 0, 488, 489, 1206, 1207, 490,
	491, 492, 494, 495, 493, 497, 1208, 498, 1209, 496,
	499, 500, 501, 554, 555, 556, 1210, 503, 502, 557,
	1211, 1212, 1213, 1214, 504, 505, 558, 506, 507, 508,
	1227, 0, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 224,
	225, 226, 227, 228, 1136, 229, 230, 1137, 1138, 1139,
	0, 1140, 509, 1141, 1142, 1143, 1144, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	1145, 240, 241, 242, 243, 244, 245, 246, 1146, 1147,
	247, 514, 515, 516, 1148, 248, 249, 517, 1149, 1134,
	1150, 250, 251, 252, 253, 254, 255, 256, 0, 1151,
	258, 259, 260, 257, 1152, 261, 0, 262, 263, 264,
	1153, 265, 1002, 266, 267, 1154, 1155, 1157, 1156, 1158,
	1159, 1160, 268, 269, 270, 271, 272, 273, 518, 519,
	1161, 277, 274, 275, 1162, 278, 276, 1163, 279, 1164,
	1165, 280, 281, 282, 1166, 283, 1167, 284, 285, 1168,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 1169, 221, 1170, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 1171,
	304, 1172, 1173, 1003, 305, 306, 524, 525, 307, 308,
	1174, 309, 526, 1175, 527, 310, 1176, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 1005, 316, 317, 1177,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 1178, 1004, 325, 531, 327, 326, 328, 329, 330,
	532, 1179, 533, 1180, 332, 1006, 534, 1007, 333, 334,
	335, 1008, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 1181, 344, 343, 1182, 345, 535, 1009, 346, 347,
	1010, 1183, 348, 349, 350, 1184, 1185, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 1186, 223, 1013, 374, 1187, 536, 375,
	537, 377, 378, 1188, 379, 380, 381, 1189, 1190, 383,
	384, 385, 1191, 1192, 386, 387, 538, 1014, 388, 1015,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	1193, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	1194, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 1195, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 1196,
	426, 1016, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 1197, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 1198, 453,
	433, 434, 454, 455, 1017, 456, 457, 546, 458, 459,
	1199, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 1200, 472, 473, 471, 1201, 474,
	475, 476, 477, 478, 292, 479, 1202, 480, 548, 549,
	550, 551, 1203, 487, 1204, 481, 482, 552, 483, 553,
	1205, 484, 485, 486, 0, 488, 489, 1206, 1207, 490,
	491, 492, 494, 495, 493, 497, 1208, 498, 1209, 496,
	499, 500, 501, 554, 555, 556, 1210, 503, 502, 557,
	1211, 1212, 1213, 1214, 504, 505, 558, 506, 507, 508,
	1126, 0, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 1136, 229, 230, 1137, 1138, 1139,
	0, 1140, 509, 1141, 1142, 1143, 1144, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	1145, 240, 241, 242, 243, 244, 245, 246, 1146, 1147,
	247, 514, 515, 516, 1148, 248, 249, 517, 1149, 1134,
	1150, 250, 251, 252, 253, 254, 255, 256, 0, 1151,
	258, 259, 260, 257, 1152, 261, 0, 262, 263, 264,
	1153, 265, 1002, 266, 267, 1154, 1155, 1157, 1156, 1158,
	1159, 1160, 268, 269, 270, 271, 272, 273, 518, 519,
	1161, 277, 274, 275, 1162, 278, 276, 1163, 279, 1164,
	1165, 280, 281, 282, 1166, 283, 1167, 284, 285, 1168,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 1169, 221, 1170, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 1171,
	304, 1172, 1173, 1003, 305, 306, 524, 525, 307, 308,
	1174, 309, 526, 1175, 527, 310, 1176, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 1005, 316, 317, 1177,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 1178, 1004, 325, 531, 327, 326, 328, 329, 330,
	532, 1179, 533, 1180, 332, 1006, 534, 1007, 333, 334,
	335, 1008, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 1181, 344, 343, 1182, 345, 535, 1009, 346, 347,
	1010, 1183, 348, 349, 350, 1184, 1185, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 1186, 223, 1013, 374, 1187, 536, 375,
	537, 377, 378, 1188, 379, 380, 381, 1189, 1190, 383,
	384, 385, 1191, 1192, 386, 387, 538, 1014, 388, 1015,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	1193, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	1194, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 1195, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 1196,
	426, 1016, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 1197, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 1198, 453,
	433, 434, 454, 455, 1017, 456, 457, 546, 458, 459,
	1199, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 1200, 472, 473, 471, 1201, 474,
	475, 476, 477, 478, 292, 479, 1202, 480, 548, 549,
	550, 551, 1203, 487, 1204, 481, 482, 552, 483, 553,
	1205, 484, 485, 486, 0, 488, 489, 1206, 1207, 490,
	491, 492, 494, 495, 493, 497, 1208, 498, 1209, 496,
	499, 500, 501, 554, 555, 556, 1210, 503, 502, 557,
	1211, 1212, 1213, 1214, 504, 505, 558, 506, 507, 508,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 1136, 229, 230, 1137, 1138, 1139, 0, 1140,
	509, 1141, 1142, 1143, 1144, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 1145, 240,
	241, 242, 243, 244, 245, 246, 1146, 1147, 247, 514,
	515, 516, 1148, 248, 249, 517, 1149, 1134, 1150, 250,
	251, 252, 253, 254, 255, 256, 0, 1151, 258, 259,
	260, 257, 1152, 261, 0, 262, 263, 264, 1153, 265,
	1002, 266, 267, 1154, 1155, 1157, 1156, 1158, 1159, 1160,
	268, 269, 270, 271, 272, 273, 518, 519, 1161, 277,
	274, 275, 1162, 278, 276, 1163, 279, 1164, 1165, 280,
	281, 282, 1166, 283, 1167, 284, 285, 1168, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 1169, 221, 1170, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 1171, 304, 1172,
	1173, 1003, 305, 306, 524, 525, 307, 308, 1174, 309,
	526, 1175, 527, 310, 1176, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 1005, 316, 317, 1177, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 1178,
	1004, 325, 531, 327, 326, 328, 329, 330, 532, 1179,
	533, 1180, 332, 1006, 534, 1007, 333, 334, 335, 1008,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 1181,
	344, 343, 1182, 345, 535, 1009, 346, 347, 1010, 1183,
	348, 349, 350, 1184, 1185, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 1186, 223, 1013, 374, 1187, 536, 375, 537, 377,
	378, 1188, 379, 380, 381, 1189, 1190, 383, 384, 385,
	1191, 1192, 386, 387, 538, 1014, 388, 1015, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 1193, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 1194, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 1195, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 1196, 426, 1016,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 1197, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 1198, 453, 433, 434,
	454, 455, 1017, 456, 457, 546, 458, 459, 1199, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 1200, 472, 473, 471, 1201, 474, 475, 476,
	477, 478, 292, 479, 1202, 480, 548, 549, 550, 551,
	1203, 487, 1204, 481, 482, 552, 483, 553, 1205, 484,
	485, 486, 0, 488, 489, 1206, 1207, 490, 491, 492,
	494, 495, 493, 497, 1208, 498, 1209, 496, 499, 500,
	501, 554, 555, 556, 1210, 503, 502, 557, 1211, 1212,
	1213, 1214, 504, 505, 558, 506, 507, 508, 2158, 0,
	940, 897, 898, 899, 895, 896, 908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 2155, 229, 230, 0, 0, 0, 0, 0,
	993, 913, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 955, 934, 966, 239, 924, 965, 964, 0, 240,
	241, 926, 925, 244, 245, 246, 915, 992, 247, 1029,
	1030, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 969, 273, 962, 961, 886, 277,
	274, 275, 0, 278, 276, 0, 279, 2156, 0, 280,
	960, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	892, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 904, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 959, 957, 958, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 974, 975, 307, 308, 0, 309,
	1027, 0, 914, 310, 0, 311, 312, 313, 314, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 936, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 948, 939, 950, 952, 953, 954, 949, 0,
	941, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	976, 977, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 928, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 883, 223, 1013, 374, 905, 997, 375, 963, 377,
	378, 0, 937, 380, 938, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 956, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 893, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 929, 930,
	932, 933, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 951, 931, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 1001, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 927, 0, 480, 970, 971, 972, 973,
	0, 487, 0, 481, 482, 1025, 483, 1026, 903, 484,
	485, 486, 0, 488, 489, 0, 887, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 935, 499, 500,
	501, 554, 967, 1019, 2154, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 884, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 880, 881, 2157, 0, 0, 0, 0, 0, 0,
	909, 2153, 0, 873, 907, 940, 897, 898, 899, 895,
	896, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 230,
	0, 0, 0, 0, 0, 993, 913, 0, 0, 0,
	231, 233, 232, 234, 235, 510, 955, 934, 966, 239,
	924, 965, 964, 0, 240, 241, 926, 925, 244, 245,
	246, 915, 992, 247, 1029, 1030, 516, 0, 248, 249,
	999, 0, 980, 0, 250, 251, 252, 253, 254, 255,
	256, 0, 0, 258, 259, 260, 257, 0, 261, 0,
	262, 263, 264, 0, 265, 1002, 266, 267, 983, 981,
	982, 989, 985, 984, 988, 268, 269, 270, 271, 969,
	273, 962, 961, 886, 277, 274, 275, 0, 278, 276,
	0, 279, 0, 0, 280, 960, 282, 0, 283, 0,
	284, 285, 0, 286, 287, 892, 288, 289, 291, 293,
	290, 294, 295, 296, 297, 1020, 1021, 904, 221, 0,
	0, 0, 0, 0, 298, 299, 300, 959, 957, 958,
	0, 303, 0, 304, 0, 0, 1003, 305, 306, 974,
	975, 307, 308, 0, 309, 1027, 0, 914, 310, 0,
	311, 312, 313, 314, 315, 994, 995, 998, 376, 1005,
	316, 317, 0, 318, 319, 320, 321, 936, 0, 0,
	222, 322, 324, 331, 0, 1004, 325, 948, 939, 950,
	952, 953, 954, 949, 0, 941, 0, 332, 1006, 996,
	1007, 333, 334, 335, 1008, 976, 977, 0, 0, 338,
	339, 340, 341, 342, 0, 344, 343, 0, 345, 1028,
	1009, 346, 347, 1010, 0, 348, 349, 350, 987, 986,
	351, 352, 353, 354, 0, 355, 356, 358, 360, 357,
	359, 364, 361, 362, 363, 366, 928, 365, 1011, 368,
	369, 372, 373, 371, 1012, 370, 883, 223, 1013, 374,
	905, 997, 375, 963, 377, 378, 0, 937, 380, 938,
	0, 0, 383, 384, 385, 0, 0, 386, 387, 538,
	1014, 388, 1015, 1022, 389, 382, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 540, 541, 1023, 399,
	543, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 956, 410, 411, 0, 412, 413, 414,
	415, 416, 417, 0, 419, 420, 421, 418, 422, 423,
	424, 425, 0, 426, 1016, 427, 428, 429, 430, 893,
	431, 0, 432, 436, 437, 438, 439, 440, 441, 442,
	187, 448, 449, 929, 930, 932, 933, 444, 450, 451,
	452, 990, 453, 433, 434, 454, 455, 1017, 456, 457,
	951, 931, 459, 0, 460, 461, 462, 463, 435, 464,
	469, 1001, 465, 466, 467, 468, 1024, 0, 472, 473,
	471, 189, 474, 475, 476, 477, 478, 292, 927, 0,
	480, 970, 971, 972, 973, 0, 487, 0, 481, 482,
	1025, 483, 1026, 903, 484, 485, 486, 0, 488, 489,
	0, 887, 490, 491, 492, 494, 495, 493, 497, 991,
	498, 0, 935, 499, 500, 501, 1378, 967, 1019, 0,
	503, 502, 557, 0, 0, 0, 181, 504, 505, 558,
	506, 507, 508, 884, 182, 0, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 880, 881, 940, 897,
	898, 899, 895, 896, 908, 1588, 1586, 0, 0, 907,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 993, 913,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 955,
	934, 966, 239, 924, 965, 964, 0, 240, 241, 926,
	925, 244, 245, 246, 915, 992, 247, 1029, 1030, 516,
	0, 248, 249, 999, 0, 980, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	267, 983, 981, 982, 989, 985, 984, 988, 268, 269,
	270, 271, 969, 273, 962, 961, 886, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 960, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 892, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 1020, 1021,
	904, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	959, 957, 958, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 974, 975, 307, 308, 0, 309, 1027, 0,
	914, 310, 0, 311, 312, 313, 314, 315, 994, 995,
	998, 376, 1005, 316, 317, 0, 318, 319, 320, 321,
	936, 0, 0, 222, 322, 324, 331, 0, 1004, 325,
	948, 939, 950, 952, 953, 954, 949, 0, 941, 0,
	332, 1006, 996, 1007, 333, 334, 335, 1008, 976, 977,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 1028, 1009, 346, 347, 1010, 0, 348, 349,
	350, 987, 986, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 928,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 883,
	223, 1013, 374, 905, 997, 375, 963, 377, 378, 0,
	937, 380, 938, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 1022, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 1023, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 956, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 893, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 187, 448, 449, 929, 930, 932, 933,
	444, 450, 451, 452, 990, 453, 433, 434, 454, 455,
	1017, 456, 457, 951, 931, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 1001, 465, 466, 467, 468, 1024,
	0, 472, 473, 471, 189, 474, 475, 476, 477, 478,
	292, 927, 0, 480, 970, 971, 972, 973, 0, 487,
	0, 481, 482, 1025, 483, 1026, 903, 484, 485, 486,
	0, 488, 489, 0, 887, 490, 491, 492, 494, 495,
	493, 497, 991, 498, 0, 935, 499, 500, 501, 1378,
	967, 1019, 0, 503, 502, 557, 0, 0, 0, 181,
	504, 505, 558, 506, 507, 508, 884, 182, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 0, 880,
	881, 940, 897, 898, 899, 895, 896, 908, 1588, 2643,
	0, 0, 907, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 230, 0, 0, 0, 0,
	0, 993, 913, 0, 0, 0, 231, 233, 232, 234,
	235, 510, 955, 934, 966, 239, 924, 965, 964, 0,
	240, 241, 926, 925, 244, 245, 246, 915, 992, 247,
	1029, 1030, 516, 0, 248, 249, 999, 0, 980, 0,
	250, 251, 252, 253, 254, 255, 256, 0, 0, 258,
	259, 260, 257, 0, 261, 0, 262, 263, 264, 0,
	265, 1002, 266, 267, 983, 981, 982, 989, 985, 984,
	988, 268, 269, 270, 271, 969, 273, 962, 961, 886,
	277, 274, 275, 0, 278, 276, 0, 279, 0, 0,
	280, 960, 282, 0, 283, 0, 284, 285, 0, 286,
	287, 892, 288, 289, 291, 293, 290, 294, 295, 296,
	297, 1020, 1021, 904, 221, 0, 0, 0, 0, 0,
	298, 299, 300, 959, 957, 958, 0, 303, 0, 304,
	0, 0, 1003, 305, 306, 974, 975, 307, 308, 0,
	309, 1027, 0, 914, 310, 0, 311, 312, 313, 314,
	315, 994, 995, 998, 376, 1005, 316, 317, 0, 318,
	319, 320, 321, 936, 0, 0, 222, 322, 324, 331,
	0, 1004, 325, 948, 939, 950, 952, 953, 954, 949,
	0, 941, 0, 332, 1006, 996, 1007, 333, 334, 335,
	1008, 976, 977, 0, 0, 338, 339, 340, 341, 342,
	0, 344, 343, 0, 345, 1028, 1009, 346, 347, 1010,
	0, 348, 349, 350, 987, 986, 351, 352, 353, 354,
	0, 355, 356, 358, 360, 357, 359, 364, 361, 362,
	363, 366, 928, 365, 1011, 368, 369, 372, 373, 371,
	1012, 370, 883, 223, 1013, 374, 905, 997, 375, 963,
	377, 378, 0, 937, 380, 938, 0, 0, 383, 384,
	385, 0, 0, 386, 387, 538, 1014, 388, 1015, 1022,
	389, 382, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 540, 541, 1023, 399, 543, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 956,
	410, 411, 0, 412, 413, 414, 415, 416, 417, 0,
	419, 420, 421, 418, 422, 423, 424, 425, 0, 426,
	1016, 427, 428, 429, 430, 893, 431, 0, 432, 436,
	437, 438, 439, 440, 441, 442, 187, 448, 449, 929,
	930, 932, 933, 444, 450, 451, 452, 990, 453, 433,
	434, 454, 455, 1017, 456, 457, 951, 931, 459, 0,
	460, 461, 462, 463, 435, 464, 469, 1001, 465, 466,
	467, 468, 1024, 0, 472, 473, 471, 189, 474, 475,
	476, 477, 478, 292, 927, 0, 480, 970, 971, 972,
	973, 0, 487, 0, 481, 482, 1025, 483, 1026, 903,
	484, 485, 486, 0, 488, 489, 0, 887, 490, 491,
	492, 494, 495, 493, 497, 991, 498, 0, 935, 499,
	500, 501, 1378, 967, 1019, 0, 503, 502, 557, 0,
	0, 0, 181, 504, 505, 558, 506, 507, 508, 884,
	182, 0, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 0, 880, 881, 940, 897, 898, 899, 895, 896,
	908, 1588, 1586, 0, 0, 907, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 993, 913, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 955, 934, 966, 239, 924,
	965, 964, 2262, 240, 241, 926, 925, 244, 245, 246,
	915, 992, 247, 1029, 1030, 516, 0, 248, 249, 999,
	0, 980, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 983, 981, 982,
	989, 985, 984, 988, 268, 269, 270, 271, 969, 273,
	962, 961, 886, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 960, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 892, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 1020, 1021, 904, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 959, 957, 958, 0,
	303, 0, 304, 0, 2267, 1003, 305, 306, 974, 975,
	307, 308, 0, 309, 1027, 0, 914, 310, 0, 311,
	312, 313, 314, 315, 994, 995, 998, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 936, 0, 0, 222,
	322, 324, 331, 0, 1004, 325, 948, 939, 950, 952,
	953, 954, 949, 0, 941, 0, 332, 1006, 996, 1007,
	333, 334, 335, 1008, 976, 977, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 2263, 345, 1028, 1009,
	346, 347, 1010, 0, 348, 349, 350, 987, 986, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 928, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 883, 223, 1013, 374, 905,
	997, 375, 963, 377, 378, 0, 937, 380, 938, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 1022, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 1023, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 956, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 893, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 929, 930, 932, 933, 444, 450, 451, 452,
	990, 453, 433, 434, 454, 455, 1017, 456, 457, 951,
	931, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	1001, 465, 466, 467, 468, 1024, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 927, 0, 480,
	970, 971, 972, 973, 0, 487, 2264, 481, 482, 1025,
	483, 1026, 903, 484, 485, 486, 0, 488, 489, 0,
	887, 490, 491, 492, 494, 495, 493, 497, 991, 498,
	0, 935, 499, 500, 501, 554, 967, 1019, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 884, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 880, 881, 0, 0, 0,
	0, 0, 0, 0, 909, 0, 0, 2221, 907, 940,
	897, 898, 899, 895, 896, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 0, 993,
	913, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	955, 934, 966, 239, 924, 965, 964, 0, 240, 241,
	926, 925, 244, 245, 246, 915, 992, 247, 1029, 1030,
	516, 0, 248, 249, 999, 0, 980, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 1002,
	266, 267, 983, 981, 982, 989, 985, 984, 988, 268,
	269, 270, 271, 969, 273, 962, 961, 886, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 960,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 892,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 1020,
	1021, 904, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 959, 957, 958, 0, 303, 0, 304, 0, 0,
	1003, 305, 306, 974, 975, 307, 308, 0, 309, 1027,
	0, 914, 310, 0, 311, 312, 313, 314, 315, 994,
	995, 998, 376, 1005, 316, 317, 0, 318, 319, 320,
	321, 936, 0, 0, 222, 322, 324, 331, 0, 1004,
	325, 948, 939, 950, 952, 953, 954, 949, 0, 941,
	0, 332, 1006, 996, 1007, 333, 334, 335, 1008, 976,
	977, 0, 0, 338, 339, 340, 341, 342, 0, 344,
	343, 0, 345, 1028, 1009, 346, 347, 1010, 0, 348,
	349, 350, 987, 986, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	928, 365, 1011, 368, 369, 372, 373, 371, 1012, 370,
	883, 223, 1013, 374, 905, 997, 375, 963, 377, 378,
	0, 937, 380, 938, 0, 0, 383, 384, 385, 0,
	0, 386, 387, 538, 1014, 388, 1015, 1022, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 1023, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 956, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 1016, 427,
	428, 429, 430, 893, 431, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 929, 930, 932,
	933, 444, 450, 451, 452, 990, 453, 433, 434, 454,
	455, 1017, 456, 457, 951, 931, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 1001, 465, 466, 467, 468,
	1024, 0, 472, 473, 471, 0, 474, 475, 476, 477,
	478, 292, 927, 0, 480, 970, 971, 972, 973, 0,
	487, 0, 481, 482, 1025, 483, 1026, 903, 484, 485,
	486, 0, 488, 489, 0, 887, 490, 491, 492, 494,
	495, 493, 497, 991, 498, 0, 935, 499, 500, 501,
	554, 967, 1019, 0, 503, 502, 557, 0, 0, 0,
	0, 504, 505, 558, 506, 507, 508, 884, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 0,
	880, 881, 0, 0, 0, 0, 0, 0, 0, 909,
	2219, 0, 2218, 907, 940, 897, 898, 899, 895, 896,
	908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 993, 913, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 955, 934, 966, 239, 924,
	965, 964, 0, 240, 241, 926, 925, 244, 245, 246,
	915, 992, 247, 1029, 1030, 516, 0, 248, 249, 999,
	0, 980, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 983, 981, 982,
	989, 985, 984, 988, 268, 269, 270, 271, 969, 273,
	962, 961, 886, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 960, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 892, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 1020, 1021, 904, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 959, 957, 958, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 974, 975,
	307, 308, 0, 309, 1027, 0, 914, 310, 0, 311,
	312, 313, 314, 315, 994, 995, 998, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 936, 0, 0, 222,
	322, 324, 331, 0, 1004, 325, 948, 939, 950, 952,
	953, 954, 949, 0, 941, 0, 332, 1006, 996, 1007,
	333, 334, 335, 1008, 976, 977, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 1028, 1009,
	346, 347, 1010, 0, 348, 349, 350, 987, 986, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 928, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 883, 223, 1013, 374, 905,
	997, 375, 963, 377, 378, 0, 937, 380, 938, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 1022, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 1023, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 956, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 893, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 929, 930, 932, 933, 444, 450, 451, 452,
	990, 453, 433, 434, 454, 455, 1017, 456, 457, 951,
	931, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	1001, 465, 466, 467, 468, 1024, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 927, 0, 480,
	970, 971, 972, 973, 0, 487, 0, 481, 482, 1025,
	483, 1026, 903, 484, 485, 486, 0, 488, 489, 0,
	887, 490, 491, 492, 494, 495, 493, 497, 991, 498,
	0, 935, 499, 500, 501, 554, 967, 1019, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 884, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 880, 881, 0, 0, 0,
	0, 0, 0, 0, 909, 2216, 0, 2215, 907, 940,
	897, 898, 899, 895, 896, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 0, 993,
	913, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	955, 934, 966, 239, 924, 965, 964, 0, 240, 241,
	926, 925, 244, 245, 246, 915, 992, 247, 1029, 1030,
	516, 0, 248, 249, 999, 0, 980, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 1002,
	266, 267, 983, 981, 982, 989, 985, 984, 988, 268,
	269, 270, 271, 969, 273, 962, 961, 886, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 960,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 892,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 1020,
	1021, 904, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 959, 957, 958, 0, 303, 0, 304, 0, 0,
	1003, 305, 306, 974, 975, 307, 308, 0, 309, 1027,
	0, 914, 310, 0, 311, 312, 313, 314, 315, 994,
	995, 998, 376, 1005, 316, 317, 0, 318, 319, 320,
	321, 936, 0, 0, 222, 322, 324, 331, 0, 1004,
	325, 948, 939, 950, 952, 953, 954, 949, 0, 941,
	0, 332, 1006, 996, 1007, 333, 334, 335, 1008, 976,
	977, 0, 0, 338, 339, 340, 341, 342, 0, 344,
	343, 0, 345, 1028, 1009, 346, 347, 1010, 0, 348,
	349, 350, 987, 986, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	928, 365, 1011, 368, 369, 372, 373, 371, 1012, 370,
	883, 223, 1013, 374, 905, 997, 375, 963, 377, 378,
	0, 937, 380, 938, 0, 0, 383, 384, 385, 0,
	0, 386, 387, 538, 1014, 388, 1015, 1022, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 1023, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 956, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 1016, 427,
	428, 429, 430, 893, 431, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 929, 930, 932,
	933, 444, 450, 451, 452, 990, 453, 433, 434, 454,
	455, 1017, 456, 457, 951, 931, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 1001, 465, 466, 467, 468,
	1024, 0, 472, 473, 471, 0, 474, 475, 476, 477,
	478, 292, 927, 0, 480, 970, 971, 972, 973, 0,
	487, 0, 481, 482, 1025, 483, 1026, 903, 484, 485,
	486, 0, 488, 489, 0, 887, 490, 491, 492, 494,
	495, 493, 497, 991, 498, 0, 935, 499, 500, 501,
	554, 967, 1019, 0, 503, 502, 557, 0, 0, 0,
	0, 504, 505, 558, 506, 507, 508, 884, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 0,
	880, 881, 0, 0, 0, 0, 0, 0, 0, 909,
	2213, 0, 2212, 907, 940, 897, 898, 899, 895, 896,
	908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 993, 913, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 955, 934, 966, 239, 924,
	965, 964, 0, 240, 241, 926, 925, 244, 245, 246,
	915, 992, 247, 1029, 1030, 516, 0, 248, 249, 999,
	0, 980, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 983, 981, 982,
	989, 985, 984, 988, 268, 269, 270, 271, 969, 273,
	962, 961, 886, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 960, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 892, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 1020, 1021, 904, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 959, 957, 958, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 974, 975,
	307, 308, 0, 309, 1027, 0, 914, 310, 0, 311,
	312, 313, 314, 315, 994, 995, 998, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 936, 0, 0, 222,
	322, 324, 331, 0, 1004, 325, 948, 939, 950, 952,
	953, 954, 949, 0, 941, 0, 332, 1006, 996, 1007,
	333, 334, 335, 1008, 976, 977, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 1028, 1009,
	346, 347, 1010, 0, 348, 349, 350, 987, 986, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 928, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 883, 223, 1013, 374, 905,
	997, 375, 963, 377, 378, 0, 937, 380, 938, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 1022, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 1023, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 956, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 893, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 929, 930, 932, 933, 444, 450, 451, 452,
	990, 453, 433, 434, 454, 455, 1017, 456, 457, 951,
	931, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	1001, 465, 466, 467, 468, 1024, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 927, 0, 480,
	970, 971, 972, 973, 0, 487, 0, 481, 482, 1025,
	483, 1026, 903, 484, 485, 486, 0, 488, 489, 0,
	887, 490, 491, 492, 494, 495, 493, 497, 991, 498,
	0, 935, 499, 500, 501, 554, 967, 1019, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 884, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 880, 881, 0, 0, 0,
	0, 0, 0, 0, 909, 2210, 0, 1447, 907, 940,
	897, 898, 899, 895, 896, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 0, 993,
	913, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	955, 934, 966, 239, 924, 965, 964, 0, 240, 241,
	926, 925, 244, 245, 246, 915, 992, 247, 1029, 1030,
	516, 0, 248, 249, 999, 0, 980, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 1002,
	266, 267, 983, 981, 982, 989, 985, 984, 988, 268,
	269, 270, 271, 969, 273, 962, 961, 886, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 960,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 892,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 1020,
	1021, 904, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 959, 957, 958, 0, 303, 0, 304, 0, 0,
	1003, 305, 306, 974, 975, 307, 308, 0, 309, 1027,
	0, 914, 310, 0, 311, 312, 313, 314, 315, 994,
	995, 998, 376, 1005, 316, 317, 0, 318, 319, 320,
	321, 936, 0, 0, 222, 322, 324, 331, 0, 1004,
	325, 948, 939, 950, 952, 953, 954, 949, 0, 941,
	0, 332, 1006, 996, 1007, 333, 334, 335, 1008, 976,
	977, 0, 0, 338, 339, 340, 341, 342, 0, 344,
	343, 0, 345, 1028, 1009, 346, 347, 1010, 0, 348,
	349, 350, 987, 986, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	928, 365, 1011, 368, 369, 372, 373, 371, 1012, 370,
	883, 223, 1013, 374, 905, 997, 375, 963, 377, 378,
	0, 937, 380, 938, 0, 0, 383, 384, 385, 0,
	0, 386, 387, 538, 1014, 388, 1015, 1022, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 1023, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 956, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 1016, 427,
	428, 429, 430, 893, 431, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 929, 930, 932,
	933, 444, 450, 451, 452, 990, 453, 433, 434, 454,
	455, 1017, 456, 457, 951, 931, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 1001, 465, 466, 467, 468,
	1024, 0, 472, 473, 471, 0, 474, 475, 476, 477,
	478, 292, 927, 0, 480, 970, 971, 972, 973, 0,
	487, 0, 481, 482, 1025, 483, 1026, 903, 484, 485,
	486, 0, 488, 489, 0, 887, 490, 491, 492, 494,
	495, 493, 497, 991, 498, 0, 935, 499, 500, 501,
	554, 967, 1019, 0, 503, 502, 557, 1446, 0, 0,
	0, 504, 505, 558, 506, 507, 508, 884, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 0,
	880, 881, 0, 0, 0, 0, 0, 0, 0, 909,
	0, 0, 876, 907, 940, 897, 898, 899, 895, 896,
	908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 993, 913, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 955, 934, 966, 239, 924,
	965, 964, 0, 240, 241, 926, 925, 244, 245, 246,
	915, 992, 247, 1029, 1030, 516, 0, 248, 249, 999,
	0, 980, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 983, 981, 982,
	989, 985, 984, 988, 268, 269, 270, 271, 969, 273,
	962, 961, 886, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 960, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 892, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 1020, 1021, 904, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 959, 957, 958, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 974, 975,
	307, 308, 0, 309, 1027, 0, 914, 310, 0, 311,
	312, 313, 314, 315, 994, 995, 998, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 936, 0, 0, 222,
	322, 324, 331, 0, 1004, 325, 948, 939, 950, 952,
	953, 954, 949, 0, 941, 0, 332, 1006, 996, 1007,
	333, 334, 335, 1008, 976, 977, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 1028, 1009,
	346, 347, 1010, 0, 348, 349, 350, 987, 986, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 928, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 883, 223, 1013, 374, 905,
	997, 375, 963, 377, 378, 0, 937, 380, 938, 888,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 1022, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 1023, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 956, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 893, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 929, 930, 932, 933, 444, 450, 451, 452,
	990, 453, 433, 434, 454, 455, 1017, 456, 457, 951,
	931, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	1001, 465, 466, 467, 468, 1024, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 927, 0, 480,
	970, 971, 972, 973, 0, 487, 0, 481, 482, 1025,
	483, 1026, 903, 484, 485, 486, 0, 488, 489, 0,
	887, 490, 491, 492, 494, 495, 493, 497, 991, 498,
	0, 935, 499, 500, 501, 554, 967, 1019, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 884, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 880, 881, 940, 897, 898,
	899, 895, 896, 908, 909, 0, 0, 0, 907, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 230, 0, 0, 0, 0, 0, 993, 913, 0,
	0, 0, 231, 233, 232, 234, 235, 510, 955, 934,
	966, 239, 924, 965, 964, 0, 240, 241, 926, 925,
	244, 245, 246, 915, 992, 247, 1029, 1030, 516, 0,
	248, 249, 999, 0, 980, 0, 250, 251, 252, 253,
	254, 255, 256, 0, 0, 258, 259, 260, 257, 0,
	261, 0, 262, 3698, 264, 0, 265, 1002, 266, 267,
	983, 981, 982, 989, 985, 984, 988, 268, 269, 270,
	271, 969, 273, 962, 961, 886, 277, 274, 275, 0,
	278, 276, 0, 279, 0, 0, 280, 960, 282, 0,
	283, 0, 284, 285, 0, 286, 287, 892, 288, 289,
	291, 293, 290, 294, 295, 296, 297, 1020, 1021, 904,
	221, 0, 0, 0, 0, 0, 298, 299, 300, 959,
	957, 958, 0, 303, 0, 304, 0, 0, 1003, 305,
	306, 974, 975, 307, 308, 0, 309, 1027, 0, 914,
	310, 0, 311, 312, 313, 314, 315, 994, 995, 998,
	376, 1005, 316, 317, 0, 318, 319, 320, 321, 936,
	0, 0, 222, 322, 324, 331, 0, 1004, 325, 948,
	939, 950, 952, 953, 954, 949, 0, 941, 0, 332,
	1006, 996, 1007, 333, 334, 335, 1008, 976, 977, 0,
	0, 338, 339, 340, 341, 342, 0, 344, 343, 0,
	345, 1028, 1009, 346, 347, 1010, 0, 348, 349, 350,
	987, 986, 351, 352, 353, 354, 0, 355, 356, 358,
	360, 357, 359, 364, 361, 362, 363, 366, 928, 365,
	1011, 368, 369, 372, 373, 371, 1012, 370, 883, 223,
	1013, 374, 905, 997, 375, 963, 377, 378, 0, 937,
	380, 938, 888, 0, 383, 384, 385, 0, 0, 386,
	387, 538, 1014, 388, 1015, 1022, 389, 382, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 540, 541,
	1023, 399, 543, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 956, 410, 411, 0, 412,
	413, 414, 415, 416, 417, 0, 419, 420, 421, 418,
	422, 423, 424, 425, 0, 426, 1016, 427, 428, 429,
	430, 893, 431, 0, 432, 436, 437, 438, 439, 440,
	441, 442, 0, 448, 449, 929, 930, 932, 933, 444,
	450, 451, 452, 990, 453, 433, 434, 454, 455, 1017,
	456, 457, 951, 931, 459, 0, 460, 461, 462, 463,
	435, 464, 469, 1001, 465, 466, 467, 468, 1024, 0,
	472, 473, 471, 0, 474, 475, 476, 477, 478, 292,
	927, 0, 480, 970, 971, 972, 973, 0, 487, 0,
	481, 482, 1025, 483, 1026, 903, 484, 485, 486, 0,
	488, 489, 0, 887, 490, 491, 492, 494, 495, 493,
	497, 991, 498, 0, 935, 499, 500, 501, 554, 967,
	1019, 0, 503, 502, 557, 0, 0, 0, 0, 504,
	505, 558, 506, 507, 508, 884, 0, 0, 0, 0,
	0, 882, 0, 0, 0, 0, 0, 0, 880, 881,
	940, 897, 898, 899, 895, 896, 908, 909, 0, 0,
	0, 907, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	993, 913, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 955, 934, 966, 239, 924, 965, 964, 0, 240,
	241, 926, 925, 244, 245, 246, 915, 992, 247, 1029,
	1030, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 3520, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 969, 273, 962, 961, 886, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	960, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	892, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 904, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 959, 957, 958, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 974, 975, 307, 308, 0, 309,
	1027, 0, 914, 310, 0, 311, 312, 313, 314, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 936, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 948, 939, 950, 952, 953, 954, 949, 0,
	941, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	976, 977, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 928, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 883, 223, 1013, 374, 905, 997, 375, 963, 377,
	378, 0, 937, 380, 938, 888, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 956, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 893, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 929, 930,
	932, 933, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 951, 931, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 1001, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 927, 0, 480, 970, 971, 972, 973,
	0, 487, 0, 481, 482, 1025, 483, 1026, 903, 484,
	485, 486, 0, 488, 489, 0, 887, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 935, 499, 500,
	501, 554, 967, 1019, 0, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 884, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 880, 881, 940, 897, 898, 899, 895, 896, 908,
	909, 0, 0, 0, 907, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 230, 0, 0,
	0, 0, 0, 993, 913, 0, 0, 0, 231, 233,
	232, 234, 235, 510, 955, 934, 966, 239, 924, 965,
	964, 0, 240, 241, 926, 925, 244, 245, 246, 915,
	992, 247, 1029, 1030, 516, 0, 248, 249, 999, 0,
	980, 0, 250, 251, 252, 253, 254, 255, 256, 0,
	0, 258, 259, 260, 257, 0, 261, 0, 262, 263,
	264, 0, 265, 1002, 266, 267, 983, 981, 982, 989,
	985, 984, 988, 268, 269, 270, 271, 969, 273, 962,
	961, 886, 277, 274, 275, 0, 278, 276, 0, 279,
	0, 0, 280, 960, 282, 0, 283, 0, 284, 285,
	0, 286, 287, 892, 288, 289, 291, 293, 290, 294,
	295, 296, 297, 1020, 1021, 904, 221, 0, 0, 0,
	0, 0, 298, 299, 300, 959, 957, 958, 0, 303,
	0, 304, 0, 0, 1003, 305, 306, 974, 975, 307,
	308, 0, 309, 1027, 0, 914, 310, 0, 311, 312,
	313, 314, 315, 994, 995, 998, 376, 1005, 316, 317,
	0, 318, 319, 320, 321, 936, 0, 0, 222, 322,
	324, 331, 0, 1004, 325, 948, 939, 950, 952, 953,
	954, 949, 0, 941, 0, 332, 1006, 996, 1007, 333,
	334, 335, 1008, 976, 977, 0, 0, 338, 339, 340,
	341, 342, 0, 344, 343, 0, 345, 1028, 1009, 346,
	347, 1010, 0, 348, 349, 350, 987, 986, 351, 352,
	353, 354, 0, 355, 356, 358, 360, 357, 359, 364,
	361, 362, 363, 366, 928, 365, 1011, 368, 369, 372,
	373, 371, 1012, 370, 883, 3231, 1013, 374, 905, 997,
	375, 963, 377, 378, 0, 937, 380, 938, 0, 0,
	383, 384, 385, 0, 0, 386, 387, 538, 1014, 388,
	1015, 1022, 389, 382, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 540, 541, 1023, 399, 543, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 956, 410, 411, 0, 412, 413, 414, 415, 416,
	417, 0, 419, 420, 421, 418, 422, 423, 424, 425,
	0, 426, 1016, 427, 428, 429, 430, 893, 431, 0,
	432, 436, 437, 438, 439, 440, 441, 442, 0, 448,
	449, 929, 930, 932, 933, 444, 450, 451, 452, 990,
	453, 433, 434, 454, 455, 1017, 456, 457, 951, 931,
	459, 0, 460, 461, 462, 463, 435, 464, 469, 1001,
	465, 466, 467, 468, 1024, 0, 472, 473, 471, 0,
	474, 475, 476, 477, 478, 292, 927, 0, 480, 970,
	971, 972, 973, 0, 487, 0, 481, 482, 1025, 483,
	1026, 903, 484, 485, 486, 0, 488, 489, 0, 887,
	490, 491, 492, 494, 495, 493, 497, 991, 498, 0,
	935, 499, 500, 501, 554, 967, 1019, 0, 503, 502,
	557, 0, 0, 0, 0, 504, 505, 558, 506, 507,
	508, 884, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 880, 881, 1654, 0, 0, 0,
	0, 0, 0, 909, 0, 0, 0, 907, 940, 897,
	898, 899, 895, 896, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 993, 913,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 955,
	934, 966, 239, 924, 965, 964, 0, 240, 241, 926,
	925, 244, 245, 246, 915, 992, 247, 1029, 1030, 516,
	0, 248, 249, 999, 0, 980, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	267, 983, 981, 982, 989, 985, 984, 988, 268, 269,
	270, 271, 969, 273, 962, 961, 886, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 960, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 892, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 1020, 1021,
	904, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	959, 957, 958, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 974, 975, 307, 308, 0, 309, 1027, 0,
	914, 310, 0, 311, 312, 313, 314, 315, 994, 995,
	998, 376, 1005, 316, 317, 0, 318, 319, 320, 321,
	936, 0, 0, 222, 322, 324, 331, 0, 1004, 325,
	948, 939, 950, 952, 953, 954, 949, 0, 941, 0,
	332, 1006, 996, 1007, 333, 334, 335, 1008, 976, 977,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 1028, 1009, 346, 347, 1010, 0, 348, 349,
	350, 987, 986, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 928,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 883,
	223, 1013, 374, 905, 997, 375, 963, 377, 378, 0,
	937, 380, 938, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 1022, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 1023, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 956, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 893, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 929, 930, 932, 933,
	444, 450, 451, 452, 990, 453, 433, 434, 454, 455,
	1017, 456, 457, 951, 931, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 1001, 465, 466, 467, 468, 1024,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 927, 0, 480, 970, 971, 972, 973, 0, 487,
	0, 481, 482, 1025, 483, 1026, 903, 484, 485, 486,
	0, 488, 489, 0, 887, 490, 491, 492, 494, 495,
	493, 497, 991, 498, 0, 935, 499, 500, 501, 554,
	967, 1019, 3029, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 884, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 0, 880,
	881, 940, 897, 898, 899, 895, 896, 908, 909, 0,
	0, 0, 907, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 230, 0, 0, 0, 0,
	0, 993, 913, 0, 0, 0, 231, 233, 232, 234,
	235, 510, 955, 934, 966, 239, 924, 965, 964, 0,
	240, 241, 926, 925, 244, 245, 246, 915, 992, 247,
	1029, 1030, 516, 0, 248, 249, 999, 0, 980, 0,
	250, 251, 252, 253, 254, 255, 256, 0, 0, 258,
	259, 260, 257, 0, 261, 0, 262, 263, 264, 0,
	265, 1002, 266, 267, 983, 981, 982, 989, 985, 984,
	988, 268, 269, 270, 271, 969, 273, 962, 961, 886,
	277, 274, 275, 0, 278, 276, 0, 279, 0, 0,
	280, 960, 282, 0, 283, 0, 284, 285, 0, 286,
	287, 892, 288, 289, 291, 293, 290, 294, 295, 296,
	297, 1020, 1021, 904, 221, 0, 0, 0, 0, 0,
	298, 299, 300, 959, 957, 958, 0, 303, 0, 304,
	0, 0, 1003, 305, 306, 974, 975, 307, 308, 0,
	309, 1027, 0, 914, 310, 0, 311, 312, 313, 314,
	315, 994, 995, 998, 376, 1005, 316, 317, 0, 318,
	319, 320, 321, 936, 0, 0, 2072, 322, 324, 331,
	0, 1004, 325, 948, 939, 950, 952, 953, 954, 949,
	0, 941, 0, 332, 1006, 996, 1007, 333, 334, 335,
	1008, 976, 977, 0, 0, 338, 339, 340, 341, 342,
	0, 344, 343, 0, 345, 1028, 1009, 346, 347, 1010,
	0, 348, 349, 350, 987, 986, 351, 352, 353, 354,
	0, 355, 356, 358, 360, 357, 359, 364, 361, 362,
	363, 366, 928, 365, 1011, 368, 369, 372, 373, 371,
	1012, 370, 883, 223, 1013, 374, 905, 997, 375, 963,
	377, 378, 0, 937, 380, 938, 0, 0, 383, 384,
	385, 0, 0, 386, 387, 538, 1014, 388, 1015, 1022,
	389, 382, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 540, 541, 1023, 399, 543, 400, 401, 2071,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 956,
	410, 411, 0, 412, 413, 414, 415, 416, 417, 0,
	419, 420, 421, 418, 422, 423, 424, 425, 0, 426,
	1016, 427, 428, 429, 430, 893, 431, 0, 432, 436,
	437, 438, 439, 440, 441, 442, 0, 448, 449, 929,
	930, 932, 933, 444, 450, 451, 452, 990, 453, 433,
	434, 454, 455, 1017, 456, 457, 951, 931, 459, 0,
	460, 461, 462, 463, 435, 464, 469, 1001, 465, 466,
	467, 468, 1024, 0, 472, 473, 471, 0, 474, 475,
	476, 477, 478, 292, 927, 0, 480, 970, 971, 972,
	973, 0, 487, 0, 481, 482, 1025, 483, 1026, 903,
	484, 485, 486, 0, 488, 489, 0, 887, 490, 491,
	492, 494, 495, 493, 497, 991, 498, 0, 935, 499,
	500, 501, 554, 967, 1019, 0, 503, 502, 557, 0,
	0, 0, 0, 504, 505, 558, 506, 507, 508, 884,
	0, 0, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 0, 880, 881, 940, 897, 898, 899, 895, 896,
	908, 909, 0, 0, 0, 907, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 993, 913, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 955, 934, 966, 239, 924,
	965, 964, 0, 240, 241, 926, 925, 244, 245, 246,
	915, 992, 247, 1029, 1030, 516, 0, 248, 249, 999,
	0, 980, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 983, 981, 982,
	989, 985, 984, 988, 268, 269, 270, 271, 969, 273,
	962, 961, 886, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 960, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 892, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 1020, 1021, 904, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 959, 957, 958, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 974, 975,
	307, 308, 0, 309, 1027, 0, 914, 310, 0, 311,
	312, 313, 314, 315, 994, 995, 998, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 936, 0, 0, 222,
	322, 324, 331, 0, 1004, 325, 948, 939, 950, 952,
	953, 954, 949, 0, 941, 0, 332, 1006, 996, 1007,
	333, 334, 335, 1008, 976, 977, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 1028, 1009,
	346, 347, 1010, 0, 348, 349, 350, 987, 986, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 928, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 883, 223, 1013, 374, 905,
	997, 375, 963, 377, 378, 0, 937, 380, 938, 888,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 1022, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 1023, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 956, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 893, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 929, 930, 932, 933, 444, 450, 451, 452,
	990, 453, 433, 434, 454, 455, 1017, 456, 457, 951,
	931, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	1001, 465, 466, 467, 468, 1024, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 927, 0, 480,
	970, 971, 972, 973, 0, 487, 0, 481, 482, 1025,
	483, 1026, 903, 484, 485, 486, 0, 488, 489, 0,
	887, 490, 491, 492, 494, 495, 493, 497, 991, 498,
	0, 935, 499, 500, 501, 554, 967, 1019, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 884, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 880, 881, 940, 897, 898,
	899, 895, 896, 908, 909, 0, 0, 0, 907, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 230, 0, 0, 0, 0, 0, 993, 913, 0,
	0, 0, 231, 233, 232, 234, 235, 510, 955, 934,
	966, 239, 924, 965, 964, 0, 240, 241, 926, 925,
	244, 245, 246, 915, 992, 247, 1029, 1030, 516, 0,
	248, 249, 999, 0, 980, 0, 250, 251, 252, 253,
	254, 255, 256, 0, 0, 258, 259, 260, 257, 0,
	261, 0, 262, 263, 264, 0, 265, 1002, 266, 267,
	983, 981, 982, 989, 985, 984, 988, 268, 269, 270,
	271, 969, 273, 962, 961, 886, 277, 274, 275, 0,
	278, 276, 0, 279, 0, 0, 280, 960, 282, 0,
	283, 0, 284, 285, 0, 286, 287, 892, 288, 289,
	291, 293, 290, 294, 295, 296, 297, 1020, 1021, 904,
	221, 0, 0, 0, 0, 0, 298, 299, 300, 959,
	957, 958, 0, 303, 0, 304, 0, 0, 1003, 305,
	306, 974, 975, 307, 308, 0, 309, 1027, 0, 914,
	310, 0, 311, 312, 313, 314, 315, 994, 995, 998,
	376, 1005, 316, 317, 0, 318, 319, 320, 321, 936,
	0, 0, 222, 322, 324, 331, 0, 1004, 325, 948,
	939, 950, 952, 953, 954, 949, 0, 941, 0, 332,
	1006, 996, 1007, 333, 334, 335, 1008, 976, 977, 0,
	0, 338, 339, 340, 341, 342, 0, 344, 343, 0,
	345, 1028, 1009, 346, 347, 1010, 0, 348, 349, 350,
	987, 986, 351, 352, 353, 354, 0, 355, 356, 358,
	360, 357, 359, 364, 361, 362, 363, 366, 928, 365,
	1011, 368, 369, 372, 373, 371, 1012, 370, 883, 223,
	1013, 374, 905, 997, 375, 963, 377, 378, 0, 937,
	380, 938, 0, 0, 383, 384, 385, 0, 0, 386,
	387, 538, 1014, 388, 1015, 1022, 389, 382, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 540, 541,
	1023, 399, 543, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 956, 410, 411, 0, 412,
	413, 414, 415, 416, 417, 0, 419, 420, 421, 418,
	422, 423, 424, 425, 0, 426, 1016, 427, 428, 429,
	430, 893, 431, 0, 432, 436, 437, 438, 439, 440,
	441, 442, 0, 448, 449, 929, 930, 932, 933, 444,
	450, 451, 452, 990, 453, 433, 434, 454, 455, 1017,
	456, 457, 951, 931, 459, 0, 460, 461, 462, 463,
	435, 464, 469, 1001, 465, 466, 467, 468, 1024, 0,
	472, 473, 471, 0, 474, 475, 476, 477, 478, 292,
	927, 0, 480, 970, 971, 972, 973, 0, 487, 0,
	481, 482, 1025, 483, 1026, 903, 484, 485, 486, 0,
	488, 489, 0, 887, 490, 491, 492, 494, 495, 493,
	497, 991, 498, 0, 935, 499, 500, 501, 554, 967,
	1019, 0, 503, 502, 557, 0, 0, 0, 0, 504,
	505, 558, 506, 507, 508, 884, 0, 0, 0, 0,
	0, 882, 0, 0, 0, 0, 0, 0, 880, 881,
	1654, 0, 0, 0, 0, 0, 0, 909, 0, 0,
	0, 907, 940, 897, 898, 899, 895, 896, 908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 993, 913, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 955, 934, 966, 239, 924, 965, 964,
	0, 240, 241, 926, 925, 244, 245, 246, 915, 992,
	247, 1029, 1030, 516, 0, 248, 249, 999, 0, 980,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 1002, 266, 267, 983, 981, 982, 989, 985,
	984, 988, 268, 269, 270, 271, 969, 273, 962, 961,
	886, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 960, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 892, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 1020, 1021, 904, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 959, 957, 958, 0, 303, 0,
	304, 0, 2267, 1003, 305, 306, 974, 975, 307, 308,
	0, 309, 1027, 0, 914, 310, 0, 311, 312, 313,
	314, 315, 994, 995, 998, 376, 1005, 316, 317, 0,
	318, 319, 320, 321, 936, 0, 0, 222, 322, 324,
	331, 0, 1004, 325, 948, 939, 950, 952, 953, 954,
	949, 0, 941, 0, 332, 1006, 996, 1007, 333, 334,
	335, 1008, 976, 977, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 1028, 1009, 346, 347,
	1010, 0, 348, 349, 350, 987, 986, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 928, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 883, 223, 1013, 374, 905, 997, 375,
	963, 377, 378, 0, 937, 380, 938, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 1014, 388, 1015,
	1022, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 1023, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	956, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 1016, 427, 428, 429, 430, 893, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	929, 930, 932, 933, 444, 450, 451, 452, 990, 453,
	433, 434, 454, 455, 1017, 456, 457, 951, 931, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 1001, 465,
	466, 467, 468, 1024, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 927, 0, 480, 970, 971,
	972, 973, 0, 487, 0, 481, 482, 1025, 483, 1026,
	903, 484, 485, 486, 0, 488, 489, 0, 887, 490,
	491, 492, 494, 495, 493, 497, 991, 498, 0, 935,
	499, 500, 501, 554, 967, 1019, 0, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	884, 0, 0, 0, 0, 0, 882, 0, 0, 0,
	0, 0, 0, 880, 881, 940, 897, 898, 899, 895,
	896, 908, 909, 0, 0, 0, 907, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 230,
	0, 0, 0, 0, 0, 993, 913, 0, 0, 0,
	231, 233, 232, 234, 235, 510, 955, 934, 966, 239,
	924, 965, 964, 0, 240, 241, 926, 925, 244, 245,
	246, 915, 992, 247, 1029, 1030, 516, 0, 248, 249,
	999, 0, 980, 0, 250, 251, 252, 253, 254, 255,
	256, 0, 0, 258, 259, 260, 257, 0, 261, 0,
	262, 263, 264, 0, 265, 1002, 266, 267, 983, 981,
	982, 989, 985, 984, 988, 268, 269, 270, 271, 969,
	273, 962, 961, 886, 277, 274, 275, 0, 278, 276,
	0, 279, 0, 0, 280, 960, 282, 0, 283, 0,
	284, 285, 0, 286, 287, 892, 288, 289, 291, 293,
	290, 294, 295, 296, 297, 1020, 1021, 904, 221, 0,
	0, 0, 0, 0, 298, 299, 300, 959, 957, 958,
	0, 303, 0, 304, 0, 0, 1003, 305, 306, 974,
	975, 307, 308, 0, 309, 1027, 0, 914, 310, 0,
	311, 312, 313, 314, 315, 994, 995, 998, 376, 1005,
	316, 317, 0, 318, 319, 320, 321, 936, 0, 0,
	222, 322, 324, 331, 0, 1004, 325, 948, 939, 950,
	952, 953, 954, 949, 0, 941, 0, 332, 1006, 996,
	1007, 333, 334, 335, 1008, 976, 977, 0, 0, 338,
	339, 340, 341, 342, 0, 344, 343, 0, 345, 1028,
	1009, 346, 347, 1010, 0, 348, 349, 350, 987, 986,
	351, 352, 353, 354, 0, 355, 356, 358, 360, 357,
	359, 364, 361, 362, 363, 366, 928, 365, 1011, 368,
	369, 372, 373, 371, 1012, 370, 883, 223, 1013, 374,
	905, 997, 375, 963, 377, 378, 0, 937, 380, 938,
	0, 0, 383, 384, 385, 0, 0, 386, 387, 538,
	1014, 388, 1015, 1022, 389, 382, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 540, 541, 1023, 399,
	543, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 956, 410, 411, 0, 412, 413, 414,
	415, 416, 417, 0, 419, 420, 421, 418, 422, 423,
	424, 425, 0, 426, 1016, 427, 428, 429, 430, 893,
	431, 0, 432, 436, 437, 438, 439, 440, 441, 442,
	0, 448, 449, 929, 930, 932, 933, 444, 450, 451,
	452, 990, 453, 433, 434, 454, 455, 1017, 456, 457,
	951, 931, 459, 0, 460, 461, 462, 463, 435, 464,
	469, 1001, 465, 466, 467, 468, 1024, 0, 472, 473,
	471, 0, 474, 475, 476, 477, 478, 292, 927, 0,
	480, 970, 971, 972, 973, 0, 487, 0, 481, 482,
	1025, 483, 1026, 903, 484, 485, 486, 0, 488, 489,
	0, 887, 490, 491, 492, 494, 495, 493, 497, 991,
	498, 0, 935, 499, 500, 501, 554, 967, 1019, 0,
	503, 502, 557, 0, 0, 0, 0, 504, 505, 558,
	506, 507, 508, 884, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 880, 881, 0, 0,
	0, 0, 0, 0, 0, 909, 1586, 0, 2272, 907,
	940, 897, 898, 899, 895, 896, 908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	993, 913, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 955, 934, 966, 239, 924, 965, 964, 0, 240,
	241, 926, 925, 244, 245, 246, 915, 992, 247, 1029,
	1030, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 969, 273, 962, 961, 886, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	960, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	892, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 904, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 959, 957, 958, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 974, 975, 307, 308, 0, 309,
	1027, 0, 914, 310, 0, 311, 312, 313, 314, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 936, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 948, 939, 950, 952, 953, 954, 949, 0,
	941, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	976, 977, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 928, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 883, 223, 1013, 374, 905, 997, 375, 963, 377,
	378, 0, 937, 380, 938, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 956, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 893, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 929, 930,
	932, 933, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 951, 931, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 1001, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 927, 0, 480, 970, 971, 972, 973,
	0, 487, 0, 481, 482, 1025, 483, 1026, 903, 484,
	485, 486, 0, 488, 489, 0, 887, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 935, 499, 500,
	501, 554, 967, 1019, 0, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 884, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 880, 881, 0, 0, 0, 0, 0, 0, 0,
	909, 0, 0, 2270, 907, 940, 897, 898, 899, 895,
	896, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 230,
	0, 0, 0, 0, 0, 993, 913, 0, 0, 0,
	231, 233, 232, 234, 235, 510, 955, 934, 966, 239,
	924, 965, 964, 0, 240, 241, 926, 925, 244, 245,
	246, 915, 992, 247, 1029, 1030, 516, 0, 248, 249,
	999, 0, 980, 0, 250, 251, 252, 253, 254, 255,
	256, 0, 0, 258, 259, 260, 257, 0, 261, 0,
	262, 263, 264, 0, 265, 1002, 266, 267, 983, 981,
	982, 989, 985, 984, 988, 268, 269, 270, 271, 969,
	273, 962, 961, 886, 277, 274, 275, 0, 278, 276,
	0, 279, 0, 0, 280, 960, 282, 0, 283, 0,
	284, 285, 0, 286, 287, 892, 288, 289, 291, 293,
	290, 294, 295, 296, 297, 1020, 1021, 904, 221, 0,
	0, 0, 0, 0, 298, 299, 300, 959, 957, 958,
	0, 303, 0, 304, 0, 0, 1003, 305, 306, 974,
	975, 307, 308, 0, 309, 1027, 0, 914, 310, 0,
	311, 312, 313, 314, 315, 994, 995, 998, 376, 1005,
	316, 317, 0, 318, 319, 320, 321, 936, 0, 0,
	222, 322, 324, 331, 0, 1004, 325, 948, 939, 950,
	952, 953, 954, 949, 0, 941, 0, 332, 1006, 996,
	1007, 333, 334, 335, 1008, 976, 977, 0, 0, 338,
	339, 340, 341, 342, 0, 344, 343, 0, 345, 1028,
	1009, 346, 347, 1010, 0, 348, 349, 350, 987, 986,
	351, 352, 353, 354, 0, 355, 356, 358, 360, 357,
	359, 364, 361, 362, 363, 366, 928, 365, 1011, 368,
	369, 372, 373, 371, 1012, 370, 883, 223, 1013, 374,
	905, 997, 375, 963, 377, 378, 0, 937, 380, 938,
	0, 0, 383, 384, 385, 0, 0, 386, 387, 538,
	1014, 388, 1015, 1022, 389, 382, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 540, 541, 1023, 399,
	543, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 956, 410, 411, 0, 412, 413, 414,
	415, 416, 417, 0, 419, 420, 421, 418, 422, 423,
	424, 425, 0, 426, 1016, 427, 428, 429, 430, 893,
	431, 0, 432, 436, 437, 438, 439, 440, 441, 442,
	0, 448, 449, 929, 930, 932, 933, 444, 450, 451,
	452, 990, 453, 433, 434, 454, 455, 1017, 456, 457,
	951, 931, 459, 0, 460, 461, 462, 463, 435, 464,
	469, 1001, 465, 466, 467, 468, 1024, 0, 472, 473,
	471, 0, 474, 475, 476, 477, 478, 292, 927, 0,
	480, 970, 971, 972, 973, 0, 487, 0, 481, 482,
	1025, 483, 1026, 903, 484, 485, 486, 0, 488, 489,
	0, 887, 490, 491, 492, 494, 495, 493, 497, 991,
	498, 0, 935, 499, 500, 501, 554, 967, 1019, 0,
	503, 502, 557, 0, 0, 0, 0, 504, 505, 558,
	506, 507, 508, 884, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 880, 881, 0, 0,
	0, 0, 0, 0, 0, 909, 0, 0, 2258, 907,
	940, 897, 898, 899, 895, 896, 908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	993, 913, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 955, 934, 966, 239, 924, 965, 964, 0, 240,
	241, 926, 925, 244, 245, 246, 915, 992, 247, 1029,
	1030, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 969, 273, 962, 961, 886, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	960, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	892, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 904, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 959, 957, 958, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 974, 975, 307, 308, 0, 309,
	1027, 0, 914, 310, 0, 311, 312, 313, 314, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 936, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 948, 939, 950, 952, 953, 954, 949, 0,
	941, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	976, 977, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 928, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 883, 223, 1013, 374, 905, 997, 375, 963, 377,
	378, 0, 937, 380, 938, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 956, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 893, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 929, 930,
	932, 933, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 951, 931, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 1001, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 927, 0, 480, 970, 971, 972, 973,
	0, 487, 0, 481, 482, 1025, 483, 1026, 903, 484,
	485, 486, 0, 488, 489, 0, 887, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 935, 499, 500,
	501, 554, 967, 1019, 0, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 884, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 880, 881, 0, 0, 0, 0, 0, 0, 0,
	909, 0, 0, 2247, 907, 940, 897, 898, 899, 895,
	896, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 230,
	0, 0, 0, 0, 0, 993, 913, 0, 0, 0,
	231, 233, 232, 234, 235, 510, 955, 934, 966, 239,
	924, 965, 964, 0, 240, 241, 926, 925, 244, 245,
	246, 915, 992, 247, 1029, 1030, 516, 0, 248, 249,
	999, 0, 980, 0, 250, 251, 252, 253, 254, 255,
	256, 0, 0, 258, 259, 260, 257, 0, 261, 0,
	262, 263, 264, 0, 265, 1002, 266, 267, 983, 981,
	982, 989, 985, 984, 988, 268, 269, 270, 271, 969,
	273, 962, 961, 886, 277, 274, 275, 0, 278, 276,
	0, 279, 0, 0, 280, 960, 282, 0, 283, 0,
	284, 285, 0, 286, 287, 892, 288, 289, 291, 293,
	290, 294, 295, 296, 297, 1020, 1021, 904, 221, 0,
	0, 0, 0, 0, 298, 299, 300, 959, 957, 958,
	0, 303, 0, 304, 0, 0, 1003, 305, 306, 974,
	975, 307, 308, 0, 309, 1027, 0, 914, 310, 0,
	311, 312, 313, 314, 315, 994, 995, 998, 376, 1005,
	316, 317, 0, 318, 319, 320, 321, 936, 0, 0,
	222, 322, 324, 331, 0, 1004, 325, 948, 939, 950,
	952, 953, 954, 949, 0, 941, 0, 332, 1006, 996,
	1007, 333, 334, 335, 1008, 976, 977, 0, 0, 338,
	339, 340, 341, 342, 0, 344, 343, 0, 345, 1028,
	1009, 346, 347, 1010, 0, 348, 349, 350, 987, 986,
	351, 352, 353, 354, 0, 355, 356, 358, 360, 357,
	359, 364, 361, 362, 363, 366, 928, 365, 1011, 368,
	369, 372, 373, 371, 1012, 370, 883, 223, 1013, 374,
	905, 997, 375, 963, 377, 378, 0, 937, 380, 938,
	0, 0, 383, 384, 385, 0, 0, 386, 387, 538,
	1014, 388, 1015, 1022, 389, 382, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 540, 541, 1023, 399,
	543, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 956, 410, 411, 0, 412, 413, 414,
	415, 416, 417, 0, 419, 420, 421, 418, 422, 423,
	424, 425, 0, 426, 1016, 427, 428, 429, 430, 893,
	431, 0, 432, 436, 437, 438, 439, 440, 441, 442,
	0, 448, 449, 929, 930, 932, 933, 444, 450, 451,
	452, 990, 453, 433, 434, 454, 455, 1017, 456, 457,
	951, 931, 459, 0, 460, 461, 462, 463, 435, 464,
	469, 1001, 465, 466, 467, 468, 1024, 0, 472, 473,
	471, 0, 474, 475, 476, 477, 478, 292, 927, 0,
	480, 970, 971, 972, 973, 0, 487, 0, 481, 482,
	1025, 483, 1026, 903, 484, 485, 486, 0, 488, 489,
	0, 887, 490, 491, 492, 494, 495, 493, 497, 991,
	498, 0, 935, 499, 500, 501, 554, 967, 1019, 0,
	503, 502, 557, 0, 0, 0, 0, 504, 505, 558,
	506, 507, 508, 884, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 880, 881, 0, 0,
	0, 0, 0, 0, 0, 909, 0, 0, 2245, 907,
	2236, 2243, 898, 899, 895, 896, 908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	993, 913, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 955, 934, 966, 239, 924, 965, 964, 0, 240,
	241, 926, 925, 244, 245, 246, 915, 992, 247, 1029,
	1030, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 969, 2239, 962, 961, 886, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	960, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	892, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 904, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 959, 957, 958, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 974, 975, 307, 308, 0, 309,
	1027, 0, 914, 310, 0, 311, 312, 313, 2240, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 936, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 948, 939, 950, 952, 953, 954, 949, 0,
	941, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	976, 977, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 2241, 2238, 361, 362, 363,
	366, 928, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 883, 223, 1013, 374, 905, 997, 375, 963, 377,
	378, 0, 937, 380, 938, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 956, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 893, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 2242, 0, 448, 449, 929, 930,
	932, 933, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 951, 931, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 1001, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 927, 0, 480, 970, 971, 972, 973,
	0, 487, 0, 481, 482, 1025, 483, 1026, 903, 484,
	485, 486, 0, 488, 489, 0, 887, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 935, 499, 500,
	501, 554, 967, 1019, 0, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 2237, 508, 884, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 880, 881, 0, 0, 0, 0, 0, 0, 0,
	909, 0, 0, 2233, 907, 2236, 2243, 898, 899, 895,
	896, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 230,
	0, 0, 0, 0, 0, 993, 913, 0, 0, 0,
	231, 233, 232, 234, 235, 510, 955, 934, 966, 239,
	924, 965, 964, 0, 240, 241, 926, 925, 244, 245,
	246, 915, 992, 247, 1029, 1030, 516, 0, 248, 249,
	999, 0, 980, 0, 250, 251, 252, 253, 254, 255,
	256, 0, 0, 258, 259, 260, 257, 0, 261, 0,
	262, 263, 264, 0, 265, 1002, 266, 267, 983, 981,
	982, 989, 985, 984, 988, 268, 269, 270, 271, 969,
	2239, 962, 961, 886, 277, 274, 275, 0, 278, 276,
	0, 279, 0, 0, 280, 960, 282, 0, 283, 0,
	284, 285, 0, 286, 287, 892, 288, 289, 291, 293,
	290, 294, 295, 296, 297, 1020, 1021, 904, 221, 0,
	0, 0, 0, 0, 298, 299, 300, 959, 957, 958,
	0, 303, 0, 304, 0, 0, 1003, 305, 306, 974,
	975, 307, 308, 0, 309, 1027, 0, 914, 310, 0,
	311, 312, 313, 2240, 315, 994, 995, 998, 376, 1005,
	316, 317, 0, 318, 319, 320, 321, 936, 0, 0,
	222, 322, 324, 331, 0, 1004, 325, 948, 939, 950,
	952, 953, 954, 949, 0, 941, 0, 332, 1006, 996,
	1007, 333, 334, 335, 1008, 976, 977, 0, 0, 338,
	339, 340, 341, 342, 0, 344, 343, 0, 345, 1028,
	1009, 346, 347, 1010, 0, 348, 349, 350, 987, 986,
	351, 352, 353, 354, 0, 355, 356, 358, 360, 357,
	2241, 2238, 361, 362, 363, 366, 928, 365, 1011, 368,
	369, 372, 373, 371, 1012, 370, 883, 223, 1013, 374,
	905, 997, 375, 963, 377, 378, 0, 937, 380, 938,
	0, 0, 383, 384, 385, 0, 0, 386, 387, 538,
	1014, 388, 1015, 1022, 389, 382, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 540, 541, 1023, 399,
	543, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 956, 410, 411, 0, 412, 413, 414,
	415, 416, 417, 0, 419, 420, 421, 418, 422, 423,
	424, 425, 0, 426, 1016, 427, 428, 429, 430, 893,
	431, 0, 432, 436, 437, 438, 439, 440, 441, 2242,
	0, 448, 449, 929, 930, 932, 933, 444, 450, 451,
	452, 990, 453, 433, 434, 454, 455, 1017, 456, 457,
	951, 931, 459, 0, 460, 461, 462, 463, 435, 464,
	469, 1001, 465, 466, 467, 468, 1024, 0, 472, 473,
	471, 0, 474, 475, 476, 477, 478, 292, 927, 0,
	480, 970, 971, 972, 973, 0, 487, 0, 481, 482,
	1025, 483, 1026, 903, 484, 485, 486, 0, 488, 489,
	0, 887, 490, 491, 492, 494, 495, 493, 497, 991,
	498, 0, 935, 499, 500, 501, 554, 967, 1019, 0,
	503, 502, 557, 0, 0, 0, 0, 504, 505, 558,
	506, 2237, 508, 884, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 880, 881, 940, 897,
	898, 899, 895, 896, 908, 909, 0, 0, 0, 907,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 993, 913,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 955,
	934, 966, 239, 924, 965, 964, 0, 240, 241, 926,
	925, 244, 245, 246, 915, 992, 247, 1029, 1030, 516,
	0, 248, 249, 999, 0, 980, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	267, 983, 981, 982, 989, 985, 984, 988, 268, 269,
	270, 271, 969, 273, 962, 961, 886, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 960, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 892, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 1020, 1021,
	904, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	959, 957, 958, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 974, 975, 307, 308, 0, 309, 1027, 0,
	914, 310, 0, 311, 312, 313, 314, 315, 994, 995,
	998, 376, 1005, 316, 317, 0, 318, 319, 320, 321,
	936, 0, 0, 222, 322, 324, 331, 0, 1004, 325,
	948, 939, 950, 952, 953, 954, 949, 0, 941, 0,
	332, 1006, 996, 1007, 333, 334, 335, 1008, 976, 977,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 1028, 1009, 346, 347, 1010, 0, 348, 349,
	350, 987, 986, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 928,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 883,
	223, 1013, 374, 905, 997, 375, 963, 377, 378, 0,
	937, 380, 938, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 1022, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 1023, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 956, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 893, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 929, 930, 932, 933,
	444, 450, 451, 452, 990, 453, 433, 434, 454, 455,
	1017, 456, 457, 951, 931, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 1001, 465, 466, 467, 468, 1024,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 927, 0, 480, 970, 971, 972, 973, 0, 487,
	0, 481, 482, 1025, 483, 1026, 903, 484, 485, 486,
	0, 488, 489, 0, 887, 490, 491, 492, 494, 495,
	493, 497, 991, 498, 0, 935, 499, 500, 501, 554,
	967, 1019, 0, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 884, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 0, 880,
	881, 0, 0, 0, 0, 0, 1594, 0, 909, 0,
	0, 0, 907, 940, 897, 898, 899, 895, 896, 908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 2051, 229, 230, 0, 0,
	0, 0, 0, 993, 913, 0, 0, 0, 231, 233,
	232, 234, 235, 510, 955, 934, 966, 239, 924, 965,
	964, 0, 240, 241, 926, 925, 244, 245, 246, 915,
	992, 247, 1029, 1030, 516, 0, 248, 249, 999, 0,
	980, 0, 250, 251, 252, 253, 254, 255, 256, 0,
	0, 258, 259, 260, 257, 0, 261, 0, 262, 263,
	264, 0, 265, 1002, 266, 267, 983, 981, 982, 989,
	985, 984, 988, 268, 269, 270, 271, 969, 273, 962,
	961, 886, 277, 274, 275, 0, 278, 276, 0, 279,
	0, 0, 280, 960, 282, 0, 283, 0, 284, 285,
	0, 286, 287, 892, 288, 289, 291, 293, 290, 294,
	295, 296, 297, 1020, 1021, 904, 221, 0, 0, 0,
	0, 0, 298, 299, 300, 959, 957, 958, 0, 303,
	0, 304, 0, 0, 1003, 305, 306, 974, 975, 307,
	308, 0, 309, 1027, 0, 914, 310, 0, 311, 312,
	313, 314, 315, 994, 995, 998, 376, 1005, 316, 317,
	0, 318, 319, 320, 321, 936, 0, 0, 222, 322,
	324, 331, 0, 1004, 325, 948, 939, 950, 952, 953,
	954, 949, 0, 941, 0, 332, 1006, 996, 1007, 333,
	334, 335, 1008, 976, 977, 0, 0, 338, 339, 340,
	341, 342, 0, 344, 343, 0, 345, 1028, 1009, 346,
	347, 1010, 0, 348, 349, 350, 987, 986, 351, 352,
	353, 354, 0, 355, 356, 358, 360, 357, 359, 364,
	361, 362, 363, 366, 928, 365, 1011, 368, 369, 372,
	373, 371, 1012, 370, 883, 223, 1013, 374, 905, 997,
	375, 963, 377, 378, 0, 937, 380, 938, 0, 0,
	383, 384, 385, 0, 0, 386, 387, 538, 1014, 388,
	1015, 1022, 389, 382, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 540, 541, 1023, 399, 543, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 956, 410, 411, 0, 412, 413, 414, 415, 416,
	417, 0, 419, 420, 421, 418, 422, 423, 424, 425,
	0, 426, 1016, 427, 428, 429, 430, 893, 431, 0,
	432, 436, 437, 438, 439, 440, 441, 442, 0, 448,
	449, 929, 930, 932, 933, 444, 450, 451, 452, 990,
	453, 433, 434, 454, 455, 1017, 456, 457, 951, 931,
	459, 0, 460, 461, 462, 463, 435, 464, 469, 1001,
	465, 466, 467, 468, 1024, 0, 472, 473, 471, 0,
	474, 475, 476, 477, 478, 292, 927, 0, 480, 970,
	971, 972, 973, 0, 487, 0, 481, 482, 1025, 483,
	1026, 903, 484, 485, 486, 0, 488, 489, 0, 887,
	490, 491, 492, 494, 495, 493, 497, 991, 498, 0,
	935, 499, 500, 501, 554, 967, 1019, 0, 503, 502,
	557, 0, 0, 0, 0, 504, 505, 558, 506, 507,
	508, 884, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 880, 881, 0, 0, 0, 0,
	0, 0, 0, 909, 0, 0, 1270, 907, 940, 897,
	898, 899, 895, 896, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 993, 913,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 955,
	934, 966, 239, 924, 965, 964, 0, 240, 241, 926,
	925, 244, 245, 246, 915, 992, 247, 1029, 1030, 516,
	0, 248, 249, 999, 0, 980, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	267, 983, 981, 982, 989, 985, 984, 988, 268, 269,
	270, 271, 969, 273, 962, 961, 886, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 960, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 892, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 1020, 1021,
	904, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	959, 957, 958, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 974, 975, 307, 308, 0, 309, 1027, 0,
	914, 310, 0, 311, 312, 313, 314, 315, 1269, 995,
	998, 376, 1005, 316, 317, 0, 318, 319, 320, 321,
	936, 0, 0, 222, 322, 324, 331, 0, 1004, 325,
	948, 939, 950, 952, 953, 954, 949, 0, 941, 0,
	332, 1006, 996, 1007, 333, 334, 335, 1008, 976, 977,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 1028, 1009, 346, 347, 1010, 0, 348, 349,
	350, 987, 986, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 928,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 883,
	223, 1013, 374, 905, 997, 375, 963, 377, 378, 0,
	937, 380, 938, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 1022, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 1023, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 956, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 893, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 929, 930, 932, 933,
	444, 450, 451, 452, 990, 453, 433, 434, 454, 455,
	1017, 456, 457, 951, 931, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 1001, 465, 466, 467, 468, 1024,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 927, 0, 480, 970, 971, 972, 973, 0, 487,
	0, 481, 482, 1025, 483, 1026, 903, 484, 485, 486,
	0, 488, 489, 0, 887, 490, 491, 492, 494, 495,
	493, 497, 991, 498, 0, 935, 499, 500, 501, 554,
	967, 1019, 0, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 884, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 0, 880,
	881, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	0, 1264, 907, 940, 897, 898, 899, 895, 896, 908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 230, 0, 0,
	0, 0, 0, 993, 913, 0, 0, 0, 231, 233,
	232, 234, 235, 510, 955, 934, 966, 239, 924, 965,
	964, 0, 240, 241, 926, 925, 244, 245, 246, 915,
	992, 247, 1029, 1030, 516, 0, 248, 249, 999, 0,
	980, 0, 250, 251, 252, 253, 254, 255, 256, 0,
	0, 258, 259, 260, 257, 0, 261, 0, 262, 263,
	264, 0, 265, 1002, 266, 267, 983, 981, 982, 989,
	985, 984, 988, 268, 269, 270, 271, 969, 273, 962,
	961, 886, 277, 274, 275, 0, 278, 276, 0, 279,
	0, 0, 280, 960, 282, 0, 283, 0, 284, 285,
	0, 286, 287, 892, 288, 289, 291, 293, 290, 294,
	295, 296, 297, 1020, 1021, 904, 221, 0, 0, 0,
	0, 0, 298, 299, 300, 959, 957, 958, 0, 303,
	0, 304, 0, 0, 1003, 305, 306, 974, 975, 307,
	308, 0, 309, 1027, 0, 914, 310, 0, 311, 312,
	313, 314, 315, 1263, 995, 998, 376, 1005, 316, 317,
	0, 318, 319, 320, 321, 936, 0, 0, 222, 322,
	324, 331, 0, 1004, 325, 948, 939, 950, 952, 953,
	954, 949, 0, 941, 0, 332, 1006, 996, 1007, 333,
	334, 335, 1008, 976, 977, 0, 0, 338, 339, 340,
	341, 342, 0, 344, 343, 0, 345, 1028, 1009, 346,
	347, 1010, 0, 348, 349, 350, 987, 986, 351, 352,
	353, 354, 0, 355, 356, 358, 360, 357, 359, 364,
	361, 362, 363, 366, 928, 365, 1011, 368, 369, 372,
	373, 371, 1012, 370, 883, 223, 1013, 374, 905, 997,
	375, 963, 377, 378, 0, 937, 380, 938, 0, 0,
	383, 384, 385, 0, 0, 386, 387, 538, 1014, 388,
	1015, 1022, 389, 382, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 540, 541, 1023, 399, 543, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 956, 410, 411, 0, 412, 413, 414, 415, 416,
	417, 0, 419, 420, 421, 418, 422, 423, 424, 425,
	0, 426, 1016, 427, 428, 429, 430, 893, 431, 0,
	432, 436, 437, 438, 439, 440, 441, 442, 0, 448,
	449, 929, 930, 932, 933, 444, 450, 451, 452, 990,
	453, 433, 434, 454, 455, 1017, 456, 457, 951, 931,
	459, 0, 460, 461, 462, 463, 435, 464, 469, 1001,
	465, 466, 467, 468, 1024, 0, 472, 473, 471, 0,
	474, 475, 476, 477, 478, 292, 927, 0, 480, 970,
	971, 972, 973, 0, 487, 0, 481, 482, 1025, 483,
	1026, 903, 484, 485, 486, 0, 488, 489, 0, 887,
	490, 491, 492, 494, 495, 493, 497, 991, 498, 0,
	935, 499, 500, 501, 554, 967, 1019, 0, 503, 502,
	557, 0, 0, 0, 0, 504, 505, 558, 506, 507,
	508, 884, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 880, 881, 0, 0, 0, 0,
	0, 0, 0, 909, 0, 0, 1259, 907, 940, 897,
	898, 899, 895, 896, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 993, 913,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 955,
	934, 966, 239, 924, 965, 964, 0, 240, 241, 926,
	925, 244, 245, 246, 915, 992, 247, 1029, 1030, 516,
	0, 248, 249, 999, 0, 980, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	267, 983, 981, 982, 989, 985, 984, 988, 268, 269,
	270, 271, 969, 273, 962, 961, 886, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 960, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 892, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 1020, 1021,
	904, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	959, 957, 958, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 974, 975, 307, 308, 0, 309, 1027, 0,
	914, 310, 0, 311, 312, 313, 314, 315, 994, 995,
	998, 376, 1005, 316, 317, 0, 318, 319, 320, 321,
	936, 0, 0, 222, 322, 324, 331, 0, 1004, 325,
	948, 939, 950, 952, 953, 954, 949, 0, 941, 0,
	332, 1006, 996, 1007, 333, 334, 335, 1008, 976, 977,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 1028, 1009, 346, 347, 1010, 0, 348, 349,
	350, 987, 986, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 928,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 883,
	223, 1013, 374, 905, 997, 375, 963, 377, 378, 0,
	937, 380, 938, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 1022, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 1023, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 956, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 893, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 929, 930, 932, 933,
	444, 450, 451, 452, 990, 453, 433, 434, 454, 455,
	1017, 456, 457, 951, 931, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 1001, 465, 466, 467, 468, 1024,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 927, 0, 480, 970, 971, 972, 973, 0, 487,
	0, 481, 482, 1025, 483, 1026, 903, 484, 485, 486,
	0, 488, 489, 0, 887, 490, 491, 492, 494, 495,
	493, 497, 991, 498, 0, 935, 499, 500, 501, 554,
	967, 1019, 0, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 884, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 0, 880,
	881, 940, 897, 898, 899, 895, 896, 908, 909, 0,
	0, 0, 907, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 230, 0, 0, 0, 0,
	0, 993, 913, 0, 0, 0, 231, 233, 232, 234,
	235, 510, 955, 934, 966, 239, 924, 965, 964, 0,
	240, 241, 926, 925, 244, 245, 246, 915, 992, 247,
	1029, 1030, 516, 0, 248, 249, 999, 0, 980, 0,
	250, 251, 252, 253, 254, 255, 256, 0, 0, 258,
	259, 260, 257, 0, 261, 0, 262, 263, 264, 0,
	265, 1002, 266, 267, 983, 981, 982, 989, 985, 984,
	988, 268, 269, 270, 271, 969, 273, 962, 961, 886,
	277, 274, 275, 0, 278, 276, 0, 279, 0, 0,
	280, 960, 282, 0, 283, 0, 284, 285, 0, 286,
	287, 892, 288, 289, 291, 293, 290, 294, 295, 296,
	297, 1020, 1021, 904, 221, 0, 0, 0, 0, 0,
	298, 299, 300, 959, 957, 958, 0, 303, 0, 304,
	0, 0, 1003, 305, 306, 974, 975, 307, 308, 0,
	309, 1027, 0, 914, 310, 0, 311, 312, 313, 314,
	315, 994, 995, 998, 376, 1005, 316, 317, 0, 318,
	319, 320, 321, 936, 0, 0, 222, 322, 324, 331,
	0, 1004, 325, 948, 939, 950, 952, 953, 954, 949,
	0, 941, 0, 332, 1006, 996, 1007, 333, 334, 335,
	1008, 976, 977, 0, 0, 338, 339, 340, 341, 342,
	0, 344, 343, 0, 345, 1028, 1009, 346, 347, 1010,
	0, 348, 349, 350, 987, 986, 351, 352, 353, 354,
	0, 355, 356, 358, 360, 357, 359, 364, 361, 362,
	363, 366, 928, 365, 1011, 368, 369, 372, 373, 371,
	1012, 370, 883, 223, 1013, 374, 905, 997, 375, 963,
	377, 378, 0, 937, 380, 938, 0, 0, 383, 384,
	385, 0, 0, 386, 387, 538, 1014, 388, 1015, 1022,
	389, 382, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 540, 541, 1023, 399, 543, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 956,
	410, 411, 0, 412, 413, 414, 415, 416, 417, 0,
	419, 420, 421, 418, 422, 423, 424, 425, 0, 426,
	1016, 427, 428, 429, 430, 893, 431, 0, 432, 436,
	437, 438, 439, 440, 441, 442, 0, 448, 449, 929,
	930, 932, 933, 444, 450, 451, 452, 990, 453, 433,
	434, 454, 455, 1017, 456, 457, 951, 931, 459, 0,
	460, 461, 462, 463, 435, 464, 469, 1001, 465, 466,
	467, 468, 1024, 0, 472, 473, 471, 0, 474, 475,
	476, 477, 478, 292, 927, 0, 480, 970, 971, 972,
	973, 0, 487, 0, 481, 482, 1025, 483, 1026, 903,
	484, 485, 486, 0, 488, 489, 0, 887, 490, 491,
	492, 494, 495, 493, 497, 991, 498, 0, 935, 499,
	500, 501, 554, 967, 1019, 0, 503, 502, 557, 0,
	0, 0, 0, 504, 505, 558, 506, 507, 508, 884,
	0, 0, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 0, 880, 881, 940, 897, 898, 899, 895, 896,
	908, 909, 0, 0, 0, 907, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 993, 913, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 955, 934, 966, 239, 924,
	965, 964, 0, 240, 241, 926, 925, 244, 245, 246,
	915, 992, 247, 1029, 1030, 516, 0, 248, 249, 999,
	0, 980, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 3730, 983, 981, 982,
	989, 985, 984, 988, 268, 269, 270, 271, 969, 273,
	962, 961, 886, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 960, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 892, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 1020, 1021, 904, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 959, 957, 958, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 974, 975,
	307, 308, 0, 309, 1027, 0, 914, 310, 0, 311,
	312, 313, 314, 315, 994, 995, 998, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 936, 0, 0, 222,
	322, 324, 331, 0, 1004, 325, 948, 939, 950, 952,
	953, 954, 949, 0, 941, 0, 332, 1006, 996, 1007,
	333, 334, 335, 1008, 976, 977, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 1028, 1009,
	346, 347, 1010, 0, 348, 349, 350, 987, 986, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 928, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 883, 223, 1013, 374, 905,
	997, 375, 963, 377, 378, 0, 937, 380, 938, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 1022, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 1023, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 956, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 893, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 929, 930, 932, 933, 444, 450, 451, 452,
	990, 453, 433, 434, 454, 455, 1017, 456, 457, 951,
	931, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	1001, 465, 466, 467, 468, 1024, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 927, 0, 480,
	970, 971, 972, 973, 0, 487, 0, 481, 482, 1025,
	483, 1026, 903, 484, 485, 486, 0, 3729, 489, 0,
	887, 490, 491, 492, 494, 495, 493, 497, 991, 498,
	0, 935, 499, 500, 501, 554, 967, 1019, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 884, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 880, 881, 940, 897, 898,
	899, 895, 896, 908, 909, 0, 0, 0, 907, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 230, 0, 0, 0, 0, 0, 993, 913, 0,
	0, 0, 231, 233, 232, 234, 235, 3728, 955, 934,
	966, 239, 924, 965, 964, 0, 240, 241, 926, 925,
	244, 245, 246, 915, 992, 247, 1029, 1030, 516, 0,
	248, 249, 999, 0, 980, 0, 250, 251, 252, 253,
	254, 255, 256, 0, 0, 258, 259, 260, 257, 0,
	261, 0, 262, 263, 264, 0, 265, 1002, 266, 3730,
	983, 981, 982, 989, 985, 984, 988, 268, 269, 270,
	271, 969, 273, 962, 961, 886, 277, 274, 275, 0,
	278, 276, 0, 279, 0, 0, 280, 960, 282, 0,
	283, 0, 284, 285, 0, 286, 287, 892, 288, 289,
	291, 293, 290, 294, 295, 296, 297, 1020, 1021, 904,
	221, 0, 0, 0, 0, 0, 298, 299, 300, 959,
	957, 958, 0, 303, 0, 304, 0, 0, 1003, 305,
	306, 974, 975, 307, 308, 0, 309, 1027, 0, 914,
	310, 0, 311, 312, 313, 314, 315, 994, 995, 998,
	376, 1005, 316, 317, 0, 318, 319, 320, 321, 936,
	0, 0, 222, 322, 324, 331, 0, 1004, 325, 948,
	939, 950, 952, 953, 954, 949, 0, 941, 0, 332,
	1006, 996, 1007, 333, 334, 335, 1008, 976, 977, 0,
	0, 338, 339, 340, 341, 342, 0, 344, 343, 0,
	345, 1028, 1009, 346, 347, 1010, 0, 348, 349, 350,
	987, 986, 351, 352, 353, 354, 0, 355, 356, 358,
	360, 357, 359, 364, 361, 362, 363, 366, 928, 365,
	1011, 368, 369, 372, 373, 371, 1012, 370, 883, 223,
	1013, 374, 905, 997, 375, 963, 377, 378, 0, 937,
	380, 938, 0, 0, 383, 384, 385, 0, 0, 386,
	387, 538, 1014, 388, 1015, 1022, 389, 382, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 540, 541,
	1023, 399, 543, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 956, 410, 411, 0, 412,
	413, 414, 415, 416, 417, 0, 419, 420, 421, 418,
	422, 423, 424, 425, 0, 426, 1016, 427, 428, 429,
	430, 893, 431, 0, 432, 436, 437, 438, 439, 440,
	441, 442, 0, 448, 449, 929, 930, 932, 933, 444,
	450, 451, 452, 990, 453, 433, 434, 454, 455, 1017,
	456, 457, 951, 931, 459, 0, 460, 461, 462, 463,
	435, 464, 469, 1001, 465, 466, 467, 468, 1024, 0,
	472, 473, 471, 0, 474, 475, 476, 477, 478, 292,
	927, 0, 480, 970, 971, 972, 973, 0, 487, 0,
	481, 482, 1025, 483, 1026, 903, 484, 485, 486, 0,
	3729, 489, 0, 887, 490, 491, 492, 494, 495, 493,
	497, 991, 498, 0, 935, 499, 500, 501, 554, 967,
	1019, 0, 503, 502, 557, 0, 0, 0, 0, 504,
	505, 558, 506, 507, 508, 884, 0, 0, 0, 0,
	0, 882, 0, 0, 0, 0, 0, 0, 880, 881,
	940, 897, 898, 899, 2610, 2611, 908, 909, 0, 0,
	0, 907, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	993, 913, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 955, 934, 966, 239, 924, 965, 964, 0, 240,
	241, 926, 925, 244, 245, 246, 915, 992, 247, 1029,
	1030, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 969, 273, 962, 961, 886, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	960, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	892, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 904, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 959, 957, 958, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 974, 975, 307, 308, 0, 309,
	1027, 0, 914, 310, 0, 311, 312, 313, 314, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 936, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 948, 939, 950, 952, 953, 954, 949, 0,
	941, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	976, 977, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 928, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 883, 223, 1013, 374, 905, 997, 375, 963, 377,
	378, 0, 937, 380, 938, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 956, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 893, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 929, 930,
	932, 933, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 951, 931, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 1001, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 927, 0, 480, 970, 971, 972, 973,
	0, 487, 0, 481, 482, 1025, 483, 1026, 903, 484,
	485, 486, 0, 488, 489, 0, 887, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 935, 499, 500,
	501, 554, 967, 1019, 0, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 884, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 880, 881, 940, 897, 898, 899, 2608, 2609, 908,
	909, 0, 0, 0, 907, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 230, 0, 0,
	0, 0, 0, 993, 913, 0, 0, 0, 231, 233,
	232, 234, 235, 510, 955, 934, 966, 239, 924, 965,
	964, 0, 240, 241, 926, 925, 244, 245, 246, 915,
	992, 247, 1029, 1030, 516, 0, 248, 249, 999, 0,
	980, 0, 250, 251, 252, 253, 254, 255, 256, 0,
	0, 258, 259, 260, 257, 0, 261, 0, 262, 263,
	264, 0, 265, 1002, 266, 267, 983, 981, 982, 989,
	985, 984, 988, 268, 269, 270, 271, 969, 273, 962,
	961, 886, 277, 274, 275, 0, 278, 276, 0, 279,
	0, 0, 280, 960, 282, 0, 283, 0, 284, 285,
	0, 286, 287, 892, 288, 289, 291, 293, 290, 294,
	295, 296, 297, 1020, 1021, 904, 221, 0, 0, 0,
	0, 0, 298, 299, 300, 959, 957, 958, 0, 303,
	0, 304, 0, 0, 1003, 305, 306, 974, 975, 307,
	308, 0, 309, 1027, 0, 914, 310, 0, 311, 312,
	313, 314, 315, 994, 995, 998, 376, 1005, 316, 317,
	0, 318, 319, 320, 321, 936, 0, 0, 222, 322,
	324, 331, 0, 1004, 325, 948, 939, 950, 952, 953,
	954, 949, 0, 941, 0, 332, 1006, 996, 1007, 333,
	334, 335, 1008, 976, 977, 0, 0, 338, 339, 340,
	341, 342, 0, 344, 343, 0, 345, 1028, 1009, 346,
	347, 1010, 0, 348, 349, 350, 987, 986, 351, 352,
	353, 354, 0, 355, 356, 358, 360, 357, 359, 364,
	361, 362, 363, 366, 928, 365, 1011, 368, 369, 372,
	373, 371, 1012, 370, 883, 223, 1013, 374, 905, 997,
	375, 963, 377, 378, 0, 937, 380, 938, 0, 0,
	383, 384, 385, 0, 0, 386, 387, 538, 1014, 388,
	1015, 1022, 389, 382, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 540, 541, 1023, 399, 543, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 956, 410, 411, 0, 412, 413, 414, 415, 416,
	417, 0, 419, 420, 421, 418, 422, 423, 424, 425,
	0, 426, 1016, 427, 428, 429, 430, 893, 431, 0,
	432, 436, 437, 438, 439, 440, 441, 442, 0, 448,
	449, 929, 930, 932, 933, 444, 450, 451, 452, 990,
	453, 433, 434, 454, 455, 1017, 456, 457, 951, 931,
	459, 0, 460, 461, 462, 463, 435, 464, 469, 1001,
	465, 466, 467, 468, 1024, 0, 472, 473, 471, 0,
	474, 475, 476, 477, 478, 292, 927, 0, 480, 970,
	971, 972, 973, 0, 487, 0, 481, 482, 1025, 483,
	1026, 903, 484, 485, 486, 0, 488, 489, 0, 887,
	490, 491, 492, 494, 495, 493, 497, 991, 498, 0,
	935, 499, 500, 501, 554, 967, 1019, 0, 503, 502,
	557, 0, 0, 0, 0, 504, 505, 558, 506, 507,
	508, 884, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 880, 881, 940, 897, 898, 899,
	895, 896, 908, 909, 0, 0, 0, 907, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 993, 913, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 955, 934, 966,
	239, 924, 965, 964, 0, 240, 241, 926, 925, 244,
	245, 246, 915, 992, 247, 1029, 1030, 516, 0, 248,
	249, 999, 0, 980, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 1002, 266, 267, 983,
	981, 982, 989, 985, 984, 988, 268, 269, 270, 271,
	969, 273, 962, 961, 886, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 960, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 892, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 1020, 1021, 904, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 959, 957,
	958, 0, 303, 0, 304, 0, 0, 1003, 305, 306,
	974, 975, 307, 308, 0, 309, 1027, 0, 914, 310,
	0, 311, 312, 313, 314, 315, 994, 995, 998, 376,
	1005, 316, 317, 0, 318, 319, 320, 321, 936, 0,
	0, 222, 322, 324, 331, 0, 1004, 325, 948, 939,
	950, 952, 953, 954, 949, 0, 941, 0, 332, 1006,
	996, 1007, 333, 334, 335, 1008, 976, 977, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	1028, 1009, 346, 347, 1010, 0, 348, 349, 350, 987,
	986, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 928, 365, 1011,
	368, 369, 372, 373, 371, 1012, 370, 883, 223, 1013,
	374, 905, 997, 375, 963, 377, 378, 0, 937, 380,
	938, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 1014, 388, 1015, 1022, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 1023,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 956, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 1016, 427, 428, 429, 430,
	893, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 929, 930, 932, 933, 444, 450,
	451, 452, 990, 453, 433, 434, 454, 455, 1017, 456,
	457, 951, 931, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 1001, 465, 466, 467, 468, 1024, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 927,
	0, 480, 970, 971, 972, 973, 0, 487, 0, 481,
	482, 1025, 483, 1026, 903, 484, 485, 486, 0, 488,
	489, 0, 887, 490, 491, 492, 494, 495, 493, 497,
	991, 498, 0, 935, 499, 500, 501, 554, 967, 1019,
	0, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 884, 0, 0, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 0, 2059, 2060, 940,
	897, 898, 899, 895, 896, 908, 909, 0, 0, 0,
	907, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 0, 993,
	913, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	955, 934, 966, 239, 924, 965, 964, 0, 240, 241,
	926, 925, 244, 245, 246, 915, 992, 247, 1029, 1030,
	516, 0, 248, 249, 999, 0, 980, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 1002,
	266, 267, 983, 981, 982, 989, 985, 984, 988, 268,
	269, 270, 271, 969, 273, 962, 961, 0, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 960,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 892,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 1020,
	1021, 904, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 959, 957, 958, 0, 303, 0, 304, 0, 0,
	1003, 305, 306, 974, 975, 307, 308, 0, 309, 1027,
	0, 914, 310, 0, 311, 312, 313, 314, 315, 994,
	995, 998, 376, 1005, 316, 317, 0, 318, 319, 320,
	321, 936, 0, 0, 222, 322, 324, 331, 0, 1004,
	325, 948, 939, 950, 952, 953, 954, 949, 0, 941,
	0, 332, 1006, 996, 1007, 333, 334, 335, 1008, 976,
	977, 0, 0, 338, 339, 340, 341, 342, 0, 344,
	343, 0, 345, 1028, 1009, 346, 347, 1010, 0, 348,
	349, 350, 987, 986, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	928, 365, 1011, 368, 369, 372, 373, 371, 1012, 370,
	0, 223, 1013, 374, 905, 997, 375, 963, 377, 378,
	0, 937, 380, 938, 0, 0, 383, 384, 385, 0,
	0, 386, 387, 538, 1014, 388, 1015, 1022, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 1023, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 956, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 1016, 427,
	428, 429, 430, 893, 431, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 929, 930, 932,
	933, 444, 450, 451, 452, 990, 453, 433, 434, 454,
	455, 1017, 456, 457, 951, 931, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 1001, 465, 466, 467, 468,
	1024, 0, 472, 473, 471, 0, 474, 475, 476, 477,
	478, 292, 927, 0, 480, 970, 971, 972, 973, 0,
	487, 0, 481, 482, 1025, 483, 1026, 903, 484, 485,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 494,
	495, 493, 497, 991, 498, 0, 935, 499, 500, 501,
	554, 967, 1019, 0, 503, 502, 557, 0, 0, 0,
	0, 504, 505, 558, 506, 507, 508, 0, 0, 0,
	0, 0, 0, 2255, 0, 0, 0, 0, 0, 0,
	2253, 2254, 940, 897, 898, 899, 895, 896, 908, 909,
	0, 0, 0, 907, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 993, 913, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 955, 934, 966, 239, 924, 965, 964,
	0, 240, 241, 926, 925, 244, 245, 246, 915, 992,
	247, 1029, 1030, 516, 0, 248, 249, 999, 0, 980,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 1002, 266, 267, 983, 981, 982, 989, 985,
	984, 988, 268, 269, 270, 271, 969, 273, 962, 961,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 960, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 892, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 1020, 1021, 904, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 959, 957, 958, 0, 303, 0,
	304, 0, 0, 1003, 305, 306, 974, 975, 307, 308,
	0, 309, 1027, 0, 914, 310, 0, 311, 312, 313,
	314, 315, 994, 995, 998, 376, 1005, 316, 317, 0,
	318, 319, 320, 321, 936, 0, 0, 222, 322, 324,
	331, 0, 1004, 325, 948, 939, 950, 952, 953, 954,
	949, 0, 941, 0, 332, 1006, 996, 1007, 333, 334,
	335, 1008, 976, 977, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 1028, 1009, 346, 347,
	1010, 0, 348, 349, 350, 987, 986, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 928, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 0, 223, 1013, 374, 905, 997, 375,
	963, 377, 378, 0, 937, 380, 938, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 1014, 388, 1015,
	1022, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 1023, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	956, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 1016, 427, 428, 429, 430, 2603, 2604, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	929, 930, 932, 933, 444, 450, 451, 452, 990, 453,
	433, 434, 454, 455, 1017, 456, 457, 951, 931, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 1001, 465,
	466, 467, 468, 1024, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 927, 0, 480, 970, 971,
	972, 973, 0, 487, 0, 481, 482, 1025, 483, 1026,
	903, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 991, 498, 0, 935,
	499, 500, 501, 554, 967, 1019, 0, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	940, 897, 898, 899, 895, 896, 908, 0, 0, 0,
	0, 0, 0, 1812, 1813, 0, 0, 224, 225, 226,
	227, 228, 909, 229, 230, 0, 907, 0, 0, 0,
	993, 913, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 955, 934, 966, 239, 924, 965, 964, 0, 240,
	241, 926, 925, 244, 245, 246, 0, 992, 247, 1029,
	1030, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 969, 273, 962, 961, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	960, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 904, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 959, 957, 958, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 974, 975, 307, 308, 0, 309,
	1027, 0, 914, 310, 0, 311, 312, 313, 314, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 936, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 948, 939, 950, 952, 953, 954, 949, 0,
	941, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	976, 977, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 928, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 0, 223, 1013, 374, 905, 997, 375, 963, 377,
	378, 0, 937, 380, 938, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 956, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 893, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 929, 930,
	932, 933, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 951, 931, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 1001, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 927, 0, 480, 970, 971, 972, 973,
	0, 487, 0, 481, 482, 1025, 483, 1026, 903, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 935, 499, 500,
	501, 554, 967, 1019, 0, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 940, 897,
	898, 899, 895, 896, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	909, 229, 230, 0, 907, 0, 0, 0, 993, 913,
	0, 0, 0, 231, 233, 232, 234, 235, 0, 955,
	934, 966, 239, 924, 965, 964, 0, 240, 241, 926,
	925, 244, 245, 246, 915, 992, 247, 1029, 1030, 516,
	0, 248, 249, 999, 0, 980, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	3730, 983, 981, 982, 989, 985, 984, 988, 268, 269,
	270, 271, 969, 273, 962, 961, 886, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 960, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 892, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 1020, 1021,
	904, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	959, 957, 958, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 974, 975, 307, 308, 0, 309, 1027, 0,
	914, 310, 0, 311, 312, 313, 314, 315, 994, 995,
	998, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	936, 0, 0, 222, 322, 324, 331, 0, 1004, 325,
	948, 939, 950, 952, 953, 954, 949, 0, 941, 0,
	332, 0, 996, 0, 333, 334, 335, 1008, 976, 977,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 1028, 1009, 346, 347, 0, 0, 348, 349,
	350, 987, 986, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 928,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 883,
	223, 0, 374, 905, 997, 375, 963, 377, 378, 0,
	937, 380, 938, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 1022, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 1023, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 956, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 893, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 929, 930, 932, 933,
	444, 450, 451, 452, 990, 453, 433, 434, 454, 455,
	0, 456, 457, 951, 931, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 1001, 465, 466, 467, 468, 1024,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 927, 0, 480, 970, 971, 972, 973, 0, 487,
	0, 481, 482, 1025, 483, 1026, 903, 484, 485, 486,
	0, 3729, 489, 0, 887, 490, 491, 492, 494, 495,
	493, 497, 991, 498, 0, 935, 499, 500, 501, 554,
	967, 1019, 0, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 873, 0, 1067, 0, 0, 880,
	881, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	0, 0, 907, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 993, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 992, 247, 514, 515, 516, 0, 248,
	249, 999, 0, 980, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 1002, 266, 267, 983,
	981, 982, 989, 985, 984, 988, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 1020, 1021, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 1003, 305, 306,
	524, 525, 307, 308, 0, 309, 1027, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 994, 995, 998, 376,
	1005, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 1004, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 1006,
	996, 1007, 333, 334, 335, 1008, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 1053, 344, 343, 0, 345,
	1028, 1009, 346, 347, 1010, 0, 348, 349, 350, 987,
	986, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 1011,
	368, 369, 372, 373, 371, 1012, 370, 0, 223, 1013,
	374, 0, 997, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 1059, 383, 384, 385, 0, 0, 386, 387,
	538, 1014, 388, 1015, 1022, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 1023,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 1016, 427, 428, 429, 430,
	545, 1061, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 187, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 990, 453, 433, 434, 454, 455, 1017, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 1024, 0, 472,
	473, 471, 189, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 1025, 483, 1026, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	991, 498, 0, 496, 499, 500, 501, 1378, 555, 556,
	0, 503, 502, 557, 0, 1067, 0, 181, 504, 505,
	558, 506, 507, 508, 0, 182, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 230,
	0, 0, 0, 0, 1057, 993, 1678, 0, 0, 0,
	231, 233, 232, 234, 235, 510, 511, 236, 512, 239,
	237, 238, 513, 0, 240, 241, 242, 243, 244, 245,
	246, 0, 992, 247, 514, 515, 516, 0, 248, 249,
	999, 0, 980, 0, 250, 251, 252, 253, 254, 255,
	256, 0, 0, 258, 259, 260, 257, 0, 261, 0,
	262, 263, 264, 0, 265, 1002, 266, 267, 983, 981,
	982, 989, 985, 984, 988, 268, 269, 270, 271, 272,
	273, 518, 519, 0, 277, 274, 275, 0, 278, 276,
	0, 279, 0, 0, 280, 281, 282, 0, 283, 0,
	284, 285, 0, 286, 287, 520, 288, 289, 291, 293,
	290, 294, 295, 296, 297, 1020, 1021, 0, 221, 0,
	0, 0, 0, 0, 298, 299, 300, 523, 301, 302,
	0, 303, 0, 304, 0, 0, 1003, 305, 306, 524,
	525, 307, 308, 0, 309, 1027, 0, 527, 310, 0,
	311, 312, 313, 314, 315, 994, 995, 998, 376, 1005,
	316, 317, 0, 318, 319, 320, 321, 323, 0, 0,
	222, 322, 324, 331, 0, 1004, 325, 531, 327, 326,
	328, 329, 330, 532, 0, 533, 0, 332, 1006, 996,
	1007, 333, 334, 335, 1008, 336, 337, 0, 0, 338,
	339, 340, 341, 342, 1053, 344, 343, 0, 345, 1028,
	1009, 346, 347, 1010, 0, 348, 349, 350, 987, 986,
	351, 352, 353, 354, 0, 355, 356, 358, 360, 357,
	359, 364, 361, 362, 363, 366, 367, 365, 1011, 368,
	369, 372, 373, 371, 1012, 370, 0, 223, 1013, 374,
	0, 997, 375, 537, 377, 378, 0, 379, 380, 381,
	0, 1059, 383, 384, 385, 0, 0, 386, 387, 538,
	1014, 388, 1015, 1022, 389, 382, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 540, 541, 1023, 399,
	543, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 544, 410, 411, 0, 412, 413, 414,
	415, 416, 417, 0, 419, 420, 421, 418, 422, 423,
	424, 425, 0, 426, 1016, 427, 428, 429, 430, 545,
	1061, 0, 432, 436, 437, 438, 439, 440, 441, 442,
	187, 448, 449, 443, 445, 446, 447, 444, 450, 451,
	452, 990, 453, 433, 434, 454, 455, 1017, 456, 457,
	546, 458, 459, 0, 460, 461, 462, 463, 435, 464,
	469, 470, 465, 466, 467, 468, 1024, 0, 472, 473,
	471, 189, 474, 475, 476, 477, 478, 292, 479, 0,
	480, 548, 549, 550, 551, 0, 487, 0, 481, 482,
	1025, 483, 1026, 0, 484, 485, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 494, 495, 493, 497, 991,
	498, 0, 496, 499, 500, 501, 1378, 555, 556, 0,
	503, 502, 557, 0, 0, 0, 181, 504, 505, 558,
	506, 507, 508, 0, 182, 0, 0, 2760, 0, 1067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 1678, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 0, 993,
	0, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	511, 236, 512, 239, 237, 238, 513, 0, 240, 241,
	242, 243, 244, 245, 246, 0, 992, 247, 514, 515,
	516, 0, 248, 249, 999, 0, 980, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 1002,
	266, 267, 983, 981, 982, 989, 985, 984, 988, 268,
	269, 270, 271, 272, 273, 518, 519, 0, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 281,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 520,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 1020,
	1021, 0, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 523, 301, 302, 0, 303, 0, 304, 0, 0,
	1003, 305, 306, 524, 525, 307, 308, 0, 309, 1027,
	0, 527, 310, 0, 311, 312, 313, 314, 315, 994,
	995, 998, 376, 1005, 316, 317, 0, 318, 319, 320,
	321, 323, 0, 0, 222, 322, 324, 331, 0, 1004,
	325, 531, 327, 326, 328, 329, 330, 532, 0, 533,
	0, 332, 1006, 996, 1007, 333, 334, 335, 1008, 336,
	337, 0, 0, 338, 339, 340, 341, 342, 1053, 344,
	343, 0, 345, 1028, 1009, 346, 347, 1010, 0, 348,
	349, 350, 987, 986, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	367, 365, 1011, 368, 369, 372, 373, 371, 1012, 370,
	0, 223, 1013, 374, 0, 997, 375, 537, 377, 378,
	0, 379, 380, 381, 0, 1059, 383, 384, 385, 0,
	0, 386, 387, 538, 1014, 388, 1015, 1022, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 1023, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 544, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 1016, 427,
	428, 429, 430, 545, 1061, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 443, 445, 446,
	447, 444, 450, 451, 452, 990, 453, 433, 434, 454,
	455, 1017, 456, 457, 546, 458, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 470, 465, 466, 467, 468,
	1024, 0, 472, 473, 471, 0, 474, 475, 476, 477,
	478, 292, 479, 0, 480, 548, 549, 550, 551, 0,
	487, 0, 481, 482, 1025, 483, 1026, 0, 484, 485,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 494,
	495, 493, 497, 991, 498, 0, 496, 499, 500, 501,
	554, 555, 556, 0, 503, 502, 557, 0, 1049, 0,
	1067, 504, 505, 558, 506, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 1057, 0, 1055,
	993, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 992, 247, 514,
	515, 516, 0, 248, 249, 999, 0, 980, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	1002, 266, 267, 983, 981, 982, 989, 985, 984, 988,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	1020, 1021, 0, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 1003, 305, 306, 524, 525, 307, 308, 0, 309,
	1027, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	994, 995, 998, 376, 1005, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 0,
	1004, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 1006, 996, 1007, 333, 334, 335, 1008,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 1053,
	344, 343, 0, 345, 1028, 1009, 346, 347, 1010, 0,
	348, 349, 350, 987, 986, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 1011, 368, 369, 372, 373, 371, 1012,
	370, 0, 223, 1013, 374, 0, 997, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 1059, 383, 384, 385,
	0, 0, 386, 387, 538, 1014, 388, 1015, 1022, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 1023, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 1016,
	427, 428, 429, 430, 545, 1061, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 990, 453, 433, 434,
	454, 455, 1017, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 1024, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 1025, 483, 1026, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 991, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 0, 1067,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 1057, 993,
	1055, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	511, 236, 512, 239, 237, 238, 513, 0, 240, 241,
	242, 243, 244, 245, 246, 0, 992, 247, 514, 515,
	516, 0, 248, 249, 999, 0, 980, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 1002,
	266, 267, 983, 981, 982, 989, 985, 984, 988, 268,
	269, 270, 271, 272, 273, 518, 519, 0, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 281,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 520,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 1020,
	1021, 0, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 523, 301, 302, 0, 303, 0, 304, 0, 0,
	1003, 305, 306, 524, 525, 307, 308, 0, 309, 1027,
	0, 527, 310, 0, 311, 312, 313, 314, 315, 994,
	995, 998, 376, 1005, 316, 317, 0, 318, 319, 320,
	321, 323, 0, 0, 222, 322, 324, 331, 0, 1004,
	325, 531, 327, 326, 328, 329, 330, 532, 0, 533,
	0, 332, 1006, 996, 1007, 333, 334, 335, 1008, 336,
	337, 0, 0, 338, 339, 340, 341, 342, 1053, 344,
	343, 0, 345, 1028, 1009, 346, 347, 1010, 0, 348,
	349, 350, 987, 986, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	367, 365, 1011, 368, 369, 372, 373, 371, 1012, 370,
	0, 223, 1013, 374, 0, 997, 375, 537, 377, 378,
	0, 379, 380, 381, 0, 1059, 383, 384, 385, 0,
	0, 386, 387, 538, 1014, 388, 1015, 1022, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 1023, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 544, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 1016, 427,
	428, 429, 430, 545, 1061, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 443, 445, 446,
	447, 444, 450, 451, 452, 990, 453, 433, 434, 454,
	455, 1017, 456, 457, 546, 458, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 470, 465, 466, 467, 468,
	1024, 0, 472, 473, 471, 0, 474, 475, 476, 477,
	478, 292, 479, 0, 480, 548, 549, 550, 551, 0,
	487, 0, 481, 482, 1025, 483, 1026, 0, 484, 485,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 494,
	495, 493, 497, 991, 498, 0, 496, 499, 500, 501,
	554, 555, 556, 0, 503, 502, 557, 0, 1067, 0,
	0, 504, 505, 558, 506, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 1057, 993, 1055,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 992, 247, 514, 515, 516,
	0, 248, 249, 999, 0, 980, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	267, 983, 981, 982, 989, 985, 984, 988, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 1020, 1021,
	0, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 524, 525, 307, 308, 0, 309, 1027, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 994, 995,
	998, 376, 1005, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 222, 322, 324, 331, 0, 1004, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 1006, 996, 1007, 333, 334, 335, 1008, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 1028, 1009, 346, 347, 1010, 0, 348, 349,
	350, 987, 986, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 0,
	223, 1013, 374, 0, 997, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 1022, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 1023, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 545, 1061, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 990, 453, 433, 434, 454, 455,
	1017, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 1024,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 1025, 483, 1026, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 991, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 0, 873, 0, 1243,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 1577, 509,
	0, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	511, 236, 512, 239, 237, 238, 513, 0, 240, 241,
	242, 243, 244, 245, 246, 0, 0, 247, 514, 515,
	516, 0, 248, 249, 517, 0, 1134, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 1002,
	266, 267, 0, 0, 0, 0, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 518, 519, 0, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 281,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 520,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 521,
	522, 0, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 523, 301, 302, 0, 303, 0, 304, 0, 0,
	1003, 305, 306, 524, 525, 307, 308, 0, 309, 526,
	0, 527, 310, 0, 311, 312, 313, 314, 315, 528,
	529, 530, 376, 1005, 316, 317, 0, 318, 319, 320,
	321, 323, 0, 0, 0, 322, 324, 331, 0, 1004,
	325, 531, 327, 326, 328, 329, 330, 532, 0, 533,
	0, 332, 1006, 534, 1007, 333, 334, 335, 1008, 336,
	337, 0, 0, 338, 339, 340, 341, 342, 0, 344,
	343, 0, 345, 535, 1009, 346, 347, 1010, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	367, 365, 1011, 368, 369, 372, 373, 371, 1012, 370,
	0, 0, 1013, 374, 0, 536, 375, 537, 377, 378,
	0, 379, 380, 381, 0, 0, 383, 384, 385, 0,
	0, 386, 387, 538, 1014, 388, 1015, 539, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 542, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 544, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 1016, 427,
	428, 429, 430, 545, 431, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 187, 448, 449, 443, 445, 446,
	447, 444, 450, 451, 452, 0, 453, 433, 434, 454,
	455, 1017, 456, 457, 546, 458, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 470, 465, 466, 467, 468,
	547, 0, 472, 473, 471, 189, 474, 475, 476, 477,
	478, 292, 479, 0, 480, 548, 549, 550, 551, 0,
	487, 0, 481, 482, 552, 483, 553, 0, 484, 485,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 494,
	495, 493, 497, 0, 498, 0, 496, 499, 500, 501,
	1378, 555, 556, 0, 503, 502, 557, 0, 0, 0,
	181, 504, 505, 558, 506, 507, 508, 0, 182, 0,
	0, 1375, 0, 1243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	224, 225, 226, 227, 228, 0, 229, 230, 0, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 231, 233,
	232, 234, 235, 510, 511, 236, 512, 239, 237, 238,
	513, 0, 240, 241, 242, 243, 244, 245, 246, 0,
	0, 247, 514, 515, 516, 0, 248, 249, 517, 0,
	1134, 0, 250, 251, 252, 253, 254, 255, 256, 0,
	0, 258, 259, 260, 257, 0, 261, 0, 262, 263,
	264, 0, 265, 1002, 266, 267, 0, 0, 0, 0,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 518,
	519, 0, 277, 274, 275, 0, 278, 276, 0, 279,
	0, 0, 280, 281, 282, 0, 283, 0, 284, 285,
	0, 286, 287, 520, 288, 289, 291, 293, 290, 294,
	295, 296, 297, 521, 522, 0, 221, 0, 0, 0,
	0, 0, 298, 299, 300, 523, 301, 302, 0, 303,
	0, 304, 0, 0, 1003, 305, 306, 524, 525, 307,
	308, 0, 309, 526, 0, 527, 310, 0, 311, 312,
	313, 314, 315, 528, 529, 530, 376, 1005, 316, 317,
	0, 318, 319, 320, 321, 323, 0, 0, 0, 322,
	324, 331, 0, 1004, 325, 531, 327, 326, 328, 329,
	330, 532, 0, 533, 0, 332, 1006, 534, 1007, 333,
	334, 335, 1008, 336, 337, 0, 0, 338, 339, 340,
	341, 342, 0, 344, 343, 0, 345, 535, 1009, 346,
	347, 1010, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 354, 0, 355, 356, 358, 360, 357, 359, 364,
	361, 362, 363, 366, 367, 365, 1011, 368, 369, 372,
	373, 371, 1012, 370, 0, 0, 1013, 374, 0, 536,
	375, 537, 377, 378, 0, 379, 380, 381, 0, 0,
	383, 384, 385, 0, 0, 386, 387, 538, 1014, 388,
	1015, 539, 389, 382, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 540, 541, 542, 399, 543, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 544, 410, 411, 0, 412, 413, 414, 415, 416,
	417, 0, 419, 420, 421, 418, 422, 423, 424, 425,
	0, 426, 1016, 427, 428, 429, 430, 545, 431, 0,
	432, 436, 437, 438, 439, 440, 441, 442, 187, 448,
	449, 443, 445, 446, 447, 444, 450, 451, 452, 0,
	453, 433, 434, 454, 455, 1017, 456, 457, 546, 458,
	459, 0, 460, 461, 462, 463, 435, 464, 469, 470,
	465, 466, 467, 468, 547, 0, 472, 473, 471, 189,
	474, 475, 476, 477, 478, 292, 479, 0, 480, 548,
	549, 550, 551, 0, 487, 0, 481, 482, 552, 483,
	553, 0, 484, 485, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 494, 495, 493, 497, 0, 498, 0,
	496, 499, 500, 501, 1378, 555, 556, 0, 503, 502,
	557, 0, 0, 0, 181, 504, 505, 558, 506, 507,
	508, 0, 182, 0, 0, 0, 0, 1243, 1242, 0,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 224, 225, 226, 227, 228, 0,
	229, 230, 0, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 231, 233, 232, 234, 235, 510, 511, 236,
	512, 239, 237, 238, 513, 0, 240, 241, 242, 243,
	244, 245, 246, 0, 0, 247, 514, 515, 516, 0,
	248, 249, 517, 0, 1134, 0, 250, 251, 252, 253,
	254, 255, 256, 0, 0, 258, 259, 260, 257, 0,
	261, 0, 262, 263, 264, 0, 265, 1002, 266, 267,
	0, 0, 0, 0, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 518, 519, 0, 277, 274, 275, 0,
	278, 276, 0, 279, 0, 0, 280, 281, 282, 0,
	283, 0, 284, 285, 0, 286, 287, 520, 288, 289,
	291, 293, 290, 294, 295, 296, 297, 521, 522, 0,
	221, 0, 0, 0, 0, 0, 298, 299, 300, 523,
	301, 302, 0, 303, 0, 304, 0, 0, 1003, 305,
	306, 524, 525, 307, 308, 0, 309, 526, 0, 527,
	310, 0, 311, 312, 313, 314, 315, 528, 529, 530,
	376, 1005, 316, 317, 0, 318, 319, 320, 321, 323,
	0, 0, 0, 322, 324, 331, 0, 1004, 325, 531,
	327, 326, 328, 329, 330, 532, 0, 533, 0, 332,
	1006, 534, 1007, 333, 334, 335, 1008, 336, 337, 0,
	0, 338, 339, 340, 341, 342, 0, 344, 343, 0,
	345, 535, 1009, 346, 347, 1010, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 354, 0, 355, 356, 358,
	360, 357, 359, 364, 361, 362, 363, 366, 367, 365,
	1011, 368, 369, 372, 373, 371, 1012, 370, 0, 0,
	1013, 374, 0, 536, 375, 537, 377, 378, 0, 379,
	380, 381, 0, 0, 383, 384, 385, 0, 0, 386,
	387, 538, 1014, 388, 1015, 539, 389, 382, 390, 391,
	392, 393, 394, 395, 396, 0, 397, 398, 540, 541,
	542, 399, 543, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 407, 408, 409, 544, 410, 411, 0, 412,
	413, 414, 415, 416, 417, 0, 419, 420, 421, 418,
	422, 423, 424, 425, 0, 426, 1016, 427, 428, 429,
	430, 545, 431, 0, 432, 436, 437, 438, 439, 440,
	441, 442, 0, 448, 449, 443, 445, 446, 447, 444,
	450, 451, 452, 0, 453, 433, 434, 454, 455, 1017,
	456, 457, 546, 458, 459, 0, 460, 461, 462, 463,
	435, 464, 469, 470, 465, 466, 467, 468, 547, 0,
	472, 473, 471, 0, 474, 475, 476, 477, 478, 292,
	479, 0, 480, 548, 549, 550, 551, 0, 487, 0,
	481, 482, 552, 483, 553, 0, 484, 485, 486, 0,
	488, 489, 0, 0, 490, 491, 492, 494, 495, 493,
	497, 0, 498, 0, 496, 499, 500, 501, 554, 555,
	556, 0, 503, 502, 557, 0, 0, 0, 0, 504,
	505, 558, 506, 507, 508, 1243, 1242, 0, 0, 0,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 2966, 229, 230,
	0, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	231, 233, 232, 234, 235, 510, 511, 236, 512, 239,
	237, 238, 513, 0, 240, 241, 242, 243, 244, 245,
	246, 0, 0, 247, 514, 515, 516, 0, 248, 249,
	517, 0, 1134, 0, 250, 251, 252, 253, 254, 255,
	256, 0, 0, 258, 259, 260, 257, 0, 261, 0,
	262, 263, 264, 0, 265, 1002, 266, 267, 0, 0,
	0, 0, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 518, 519, 0, 277, 274, 275, 0, 278, 276,
	0, 279, 0, 0, 280, 281, 282, 0, 283, 0,
	284, 285, 0, 286, 287, 520, 288, 289, 291, 293,
	290, 294, 295, 296, 297, 521, 522, 0, 221, 0,
	0, 0, 0, 0, 298, 299, 300, 523, 301, 302,
	0, 303, 0, 304, 0, 0, 1003, 305, 306, 524,
	525, 307, 308, 0, 309, 526, 0, 527, 310, 0,
	311, 312, 313, 314, 315, 528, 529, 530, 376, 1005,
	316, 317, 0, 318, 319, 320, 321, 323, 0, 0,
	0, 322, 324, 331, 0, 1004, 325, 531, 327, 326,
	328, 329, 330, 532, 0, 533, 0, 332, 1006, 534,
	1007, 333, 334, 335, 1008, 336, 337, 0, 0, 338,
	339, 340, 341, 342, 0, 344, 343, 0, 345, 535,
	1009, 346, 347, 1010, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 354, 0, 355, 356, 358, 360, 357,
	359, 364, 361, 362, 363, 366, 367, 365, 1011, 368,
	369, 372, 373, 371, 1012, 370, 0, 0, 1013, 374,
	0, 536, 375, 537, 377, 378, 0, 379, 380, 381,
	0, 0, 383, 384, 385, 0, 0, 386, 387, 538,
	1014, 388, 1015, 539, 389, 382, 390, 391, 392, 393,
	394, 395, 396, 0, 397, 398, 540, 541, 542, 399,
	543, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	407, 408, 409, 544, 410, 411, 0, 412, 413, 414,
	415, 416, 417, 0, 419, 420, 421, 418, 422, 423,
	424, 425, 0, 426, 1016, 427, 428, 429, 430, 545,
	431, 0, 432, 436, 437, 438, 439, 440, 441, 442,
	0, 448, 449, 443, 445, 446, 447, 444, 450, 451,
	452, 0, 453, 433, 434, 454, 455, 1017, 456, 457,
	546, 458, 459, 0, 460, 461, 462, 463, 435, 464,
	469, 470, 465, 466, 467, 468, 547, 0, 472, 473,
	471, 0, 474, 475, 476, 477, 478, 292, 479, 0,
	480, 548, 549, 550, 551, 0, 487, 0, 481, 482,
	552, 483, 553, 0, 484, 485, 486, 0, 488, 489,
	0, 0, 490, 491, 492, 494, 495, 493, 497, 0,
	498, 0, 496, 499, 500, 501, 554, 555, 556, 0,
	503, 502, 557, 0, 0, 0, 0, 504, 505, 558,
	506, 507, 508, 1243, 1242, 0, 0, 0, 0, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 1249, 229, 230, 0, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 231, 233,
	232, 234, 235, 510, 511, 236, 512, 239, 237, 238,
	513, 0, 240, 241, 242, 243, 244, 245, 246, 0,
	0, 247, 514, 515, 516, 0, 248, 249, 517, 0,
	1134, 0, 250, 251, 252, 253, 254, 255, 256, 0,
	0, 258, 259, 260, 257, 0, 261, 0, 262, 263,
	264, 0, 265, 1002, 266, 267, 0, 0, 0, 0,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 518,
	519, 0, 277, 274, 275, 0, 278, 276, 0, 279,
	0, 0, 280, 281, 282, 0, 283, 0, 284, 285,
	0, 286, 287, 520, 288, 289, 291, 293, 290, 294,
	295, 296, 297, 521, 522, 0, 221, 0, 0, 0,
	0, 0, 298, 299, 300, 523, 301, 302, 0, 303,
	0, 304, 0, 0, 1003, 305, 306, 524, 525, 307,
	308, 0, 309, 526, 0, 527, 310, 0, 311, 312,
	313, 314, 315, 528, 529, 530, 376, 1005, 316, 317,
	0, 318, 319, 320, 321, 323, 0, 0, 0, 322,
	324, 331, 0, 1004, 325, 531, 327, 326, 328, 329,
	330, 532, 0, 533, 0, 332, 1006, 534, 1007, 333,
	334, 335, 1008, 336, 337, 0, 0, 338, 339, 340,
	341, 342, 0, 344, 343, 0, 345, 535, 1009, 346,
	347, 1010, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 354, 0, 355, 356, 358, 360, 357, 359, 364,
	361, 362, 363, 366, 367, 365, 1011, 368, 369, 372,
	373, 371, 1012, 370, 0, 0, 1013, 374, 0, 536,
	375, 537, 377, 378, 0, 379, 380, 381, 0, 0,
	383, 384, 385, 0, 0, 386, 387, 538, 1014, 388,
	1015, 539, 389, 382, 390, 391, 392, 393, 394, 395,
	396, 0, 397, 398, 540, 541, 542, 399, 543, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 407, 408,
	409, 544, 410, 411, 0, 412, 413, 414, 415, 416,
	417, 0, 419, 420, 421, 418, 422, 423, 424, 425,
	0, 426, 1016, 427, 428, 429, 430, 545, 431, 0,
	432, 436, 437, 438, 439, 440, 441, 442, 0, 448,
	449, 443, 445, 446, 447, 444, 450, 451, 452, 0,
	453, 433, 434, 454, 455, 1017, 456, 457, 546, 458,
	459, 0, 460, 461, 462, 463, 435, 464, 469, 470,
	465, 466, 467, 468, 547, 0, 472, 473, 471, 0,
	474, 475, 476, 477, 478, 292, 479, 0, 480, 548,
	549, 550, 551, 0, 487, 0, 481, 482, 552, 483,
	553, 0, 484, 485, 486, 0, 488, 489, 0, 0,
	490, 491, 492, 494, 495, 493, 497, 0, 498, 0,
	496, 499, 500, 501, 554, 555, 556, 0, 503, 502,
	557, 1067, 0, 0, 0, 504, 505, 558, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 230, 0, 0, 0, 0,
	0, 993, 0, 1384, 0, 0, 231, 233, 232, 234,
	235, 510, 511, 236, 512, 239, 237, 238, 513, 0,
	240, 241, 242, 243, 244, 245, 246, 0, 992, 247,
	514, 515, 516, 0, 248, 249, 999, 0, 980, 0,
	250, 251, 252, 253, 254, 255, 256, 0, 0, 258,
	259, 260, 257, 0, 261, 0, 262, 263, 264, 0,
	265, 1002, 266, 267, 983, 981, 982, 989, 985, 984,
	988, 268, 269, 270, 271, 272, 273, 518, 519, 0,
	277, 274, 275, 0, 278, 276, 0, 279, 0, 0,
	280, 281, 282, 0, 283, 0, 284, 285, 0, 286,
	287, 520, 288, 289, 291, 293, 290, 294, 295, 296,
	297, 1020, 1021, 0, 221, 0, 0, 0, 0, 0,
	298, 299, 300, 523, 301, 302, 0, 303, 0, 304,
	0, 0, 1003, 305, 306, 524, 525, 307, 308, 0,
	309, 1027, 0, 527, 310, 0, 311, 312, 313, 314,
	315, 994, 995, 998, 376, 1005, 316, 317, 0, 318,
	319, 320, 321, 323, 0, 0, 222, 322, 324, 331,
	0, 1004, 325, 531, 327, 326, 328, 329, 330, 532,
	0, 533, 0, 332, 1006, 996, 1007, 333, 334, 335,
	1008, 336, 337, 0, 0, 338, 339, 340, 341, 342,
	0, 344, 343, 0, 345, 1028, 1009, 346, 347, 1010,
	0, 348, 349, 350, 987, 986, 351, 352, 353, 354,
	0, 355, 356, 358, 360, 357, 359, 364, 361, 362,
	363, 366, 367, 365, 1011, 368, 369, 372, 373, 371,
	1012, 370, 0, 223, 1013, 374, 0, 997, 375, 537,
	377, 378, 0, 379, 380, 381, 0, 0, 383, 384,
	385, 0, 0, 386, 387, 538, 1014, 388, 1015, 1022,
	389, 382, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 540, 541, 1023, 399, 543, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 544,
	410, 411, 0, 412, 413, 414, 415, 416, 417, 0,
	419, 420, 421, 418, 422, 423, 424, 425, 0, 426,
	1016, 427, 428, 429, 430, 545, 431, 0, 432, 436,
	437, 438, 439, 440, 441, 442, 0, 448, 449, 443,
	445, 446, 447, 444, 450, 451, 452, 990, 453, 433,
	434, 454, 455, 1017, 456, 457, 546, 458, 459, 0,
	460, 461, 462, 463, 435, 464, 469, 470, 465, 466,
	467, 468, 1024, 0, 472, 473, 471, 0, 474, 475,
	476, 477, 478, 292, 479, 0, 480, 548, 549, 550,
	551, 0, 487, 0, 481, 482, 1025, 483, 1026, 0,
	484, 485, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 494, 495, 493, 497, 991, 498, 0, 496, 499,
	500, 501, 554, 555, 556, 0, 503, 502, 557, 873,
	0, 218, 0, 504, 505, 558, 506, 507, 508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 230, 0, 0, 0, 0,
	0, 509, 0, 0, 0, 0, 231, 233, 232, 234,
	235, 510, 511, 236, 512, 239, 237, 238, 513, 0,
	240, 241, 242, 243, 244, 245, 246, 0, 0, 247,
	514, 515, 516, 0, 248, 249, 517, 0, 0, 0,
	250, 251, 252, 253, 254, 255, 256, 0, 0, 258,
	259, 260, 257, 0, 261, 0, 262, 263, 264, 0,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 518, 519, 0,
	277, 274, 275, 0, 278, 276, 0, 279, 0, 0,
	280, 281, 282, 0, 283, 0, 284, 285, 0, 286,
	287, 520, 288, 289, 291, 293, 290, 294, 295, 296,
	297, 521, 522, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 523, 301, 302, 0, 303, 0, 304,
	0, 0, 0, 305, 306, 524, 525, 307, 308, 0,
	309, 526, 0, 527, 310, 0, 311, 312, 313, 314,
	315, 528, 529, 530, 376, 0, 316, 317, 0, 318,
	319, 320, 321, 323, 0, 0, 0, 322, 324, 331,
	0, 0, 325, 531, 327, 326, 328, 329, 330, 532,
	0, 533, 0, 332, 0, 534, 0, 333, 334, 335,
	0, 336, 337, 0, 0, 338, 339, 340, 341, 342,
	0, 344, 343, 0, 345, 535, 0, 346, 347, 0,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 354,
	0, 355, 356, 358, 360, 357, 359, 364, 361, 362,
	363, 366, 367, 365, 0, 368, 369, 372, 373, 371,
	0, 370, 0, 0, 0, 374, 0, 536, 375, 537,
	377, 378, 0, 379, 380, 381, 0, 0, 383, 384,
	385, 0, 0, 386, 387, 538, 0, 388, 0, 539,
	389, 382, 390, 391, 392, 393, 394, 395, 396, 0,
	397, 398, 540, 541, 542, 399, 543, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 407, 408, 409, 544,
	410, 411, 0, 412, 413, 414, 415, 416, 417, 0,
	419, 420, 421, 418, 422, 423, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 545, 431, 0, 432, 436,
	437, 438, 439, 440, 441, 442, 187, 448, 449, 443,
	445, 446, 447, 444, 450, 451, 452, 0, 453, 433,
	434, 454, 455, 0, 456, 457, 546, 458, 459, 0,
	460, 461, 462, 463, 435, 464, 469, 470, 465, 466,
	467, 468, 547, 0, 472, 473, 471, 189, 474, 475,
	476, 477, 478, 292, 479, 0, 480, 548, 549, 550,
	551, 0, 487, 0, 481, 482, 552, 483, 553, 0,
	484, 485, 486, 0, 488, 489, 0, 0, 490, 491,
	492, 494, 495, 493, 497, 0, 498, 0, 496, 499,
	500, 501, 1378, 555, 556, 0, 503, 502, 557, 218,
	0, 0, 181, 504, 505, 558, 506, 507, 508, 0,
	182, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 0, 509,
	0, 156, 0, 0, 231, 233, 232, 234, 235, 510,
	511, 236, 512, 239, 237, 238, 513, 0, 240, 241,
	242, 243, 244, 245, 246, 0, 0, 247, 514, 515,
	516, 0, 248, 249, 517, 0, 0, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 518, 519, 0, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 281,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 520,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 521,
	522, 0, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 523, 301, 302, 0, 303, 0, 304, 0, 0,
	0, 305, 306, 524, 525, 307, 308, 0, 309, 526,
	0, 527, 310, 0, 311, 312, 313, 314, 315, 528,
	529, 530, 376, 0, 316, 317, 0, 318, 319, 320,
	321, 323, 0, 0, 222, 322, 324, 331, 0, 0,
	325, 531, 327, 326, 328, 329, 330, 532, 0, 533,
	0, 332, 0, 534, 0, 333, 334, 335, 0, 336,
	337, 0, 0, 338, 339, 340, 341, 342, 0, 344,
	343, 0, 345, 535, 0, 346, 347, 0, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	367, 365, 0, 368, 369, 372, 373, 371, 0, 370,
	0, 223, 0, 374, 0, 536, 375, 537, 377, 378,
	0, 379, 380, 381, 0, 0, 383, 384, 385, 0,
	0, 386, 387, 538, 0, 388, 0, 539, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 542, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 544, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 545, 431, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 443, 445, 446,
	447, 444, 450, 451, 452, 0, 453, 433, 434, 454,
	455, 0, 456, 457, 546, 458, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 470, 465, 466, 467, 468,
	547, 0, 472, 473, 471, 0, 474, 475, 476, 477,
	478, 292, 479, 0, 480, 548, 549, 550, 551, 0,
	487, 0, 481, 482, 552, 483, 553, 0, 484, 485,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 494,
	495, 493, 497, 0, 498, 0, 496, 499, 500, 501,
	554, 555, 556, 0, 503, 502, 557, 0, 1329, 0,
	218, 504, 505, 558, 506, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 1692,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 223, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 1333, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 223, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 218, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 2915, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 222, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	223, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 218, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 1333, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 0, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 0, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 0, 503, 502, 557,
	218, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 2508, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 218, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	3054, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 0, 742, 0, 636,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 230, 0, 0, 0, 0, 1964, 509,
	0, 0, 0, 0, 231, 233, 232, 234, 235, 510,
	511, 236, 512, 239, 237, 238, 513, 0, 240, 241,
	242, 243, 244, 245, 246, 0, 0, 247, 514, 515,
	516, 0, 248, 249, 517, 0, 0, 0, 250, 251,
	252, 253, 254, 255, 256, 0, 0, 258, 259, 260,
	257, 0, 261, 0, 262, 263, 264, 0, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 0, 0, 268,
	269, 642, 271, 272, 273, 518, 519, 0, 277, 274,
	275, 0, 278, 276, 0, 279, 0, 0, 280, 281,
	282, 0, 283, 0, 284, 285, 0, 286, 287, 520,
	288, 289, 291, 293, 290, 294, 295, 296, 297, 521,
	522, 0, 221, 0, 0, 0, 0, 0, 298, 299,
	300, 523, 301, 302, 0, 303, 0, 304, 0, 740,
	0, 305, 306, 524, 525, 307, 308, 0, 309, 526,
	0, 527, 310, 0, 311, 312, 313, 314, 315, 528,
	529, 530, 376, 0, 316, 317, 0, 318, 319, 320,
	321, 323, 0, 0, 222, 322, 324, 331, 0, 0,
	325, 531, 327, 326, 328, 329, 330, 532, 0, 533,
	0, 332, 0, 534, 0, 333, 334, 335, 0, 336,
	337, 0, 0, 338, 339, 340, 341, 342, 0, 344,
	343, 0, 345, 535, 0, 346, 347, 0, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 354, 0, 355,
	356, 358, 360, 357, 359, 364, 361, 362, 363, 366,
	367, 365, 0, 368, 369, 372, 373, 371, 0, 370,
	0, 223, 0, 374, 0, 536, 375, 537, 377, 378,
	0, 379, 380, 381, 0, 0, 383, 384, 385, 0,
	0, 386, 387, 538, 0, 388, 0, 539, 389, 382,
	390, 391, 392, 393, 394, 395, 396, 0, 397, 398,
	540, 541, 542, 399, 543, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 407, 408, 409, 544, 410, 411,
	0, 412, 413, 414, 415, 416, 417, 0, 419, 420,
	421, 418, 422, 423, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 545, 431, 0, 432, 436, 437, 438,
	439, 440, 441, 442, 0, 448, 449, 443, 445, 446,
	447, 444, 450, 451, 452, 0, 453, 433, 434, 454,
	455, 0, 456, 457, 546, 458, 459, 0, 460, 461,
	462, 463, 435, 464, 469, 470, 465, 466, 467, 468,
	547, 0, 472, 473, 471, 641, 474, 475, 476, 477,
	478, 292, 479, 0, 480, 548, 549, 550, 551, 0,
	487, 0, 481, 482, 552, 483, 553, 0, 484, 485,
	486, 0, 488, 489, 0, 0, 490, 491, 492, 494,
	495, 493, 497, 0, 498, 0, 496, 499, 500, 501,
	554, 555, 556, 0, 503, 502, 557, 0, 635, 0,
	636, 504, 505, 558, 506, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 645, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 642, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 223, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 641, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	633, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 1243, 1242,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 1134, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 1002, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 1003,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 1005, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 1004, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 1006, 534, 1007, 333, 334, 335, 1008, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 1009, 346, 347, 1010, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 1011, 368, 369, 372, 373, 371, 1012, 370, 0,
	0, 1013, 374, 3195, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 1014, 388, 1015, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 1016, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	1017, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 1243, 1242, 0, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 1134, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 1002, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 1003, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	1005, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 0, 322, 324, 331, 0, 1004, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 1006,
	534, 1007, 333, 334, 335, 1008, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 1009, 346, 347, 1010, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 1011,
	368, 369, 372, 373, 371, 1012, 370, 0, 0, 1013,
	374, 2895, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 1014, 388, 1015, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 1016, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 1017, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	636, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 642, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 223, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	1998, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 641, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 636, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 645, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 642, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 223, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	641, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 1411, 0, 1243, 1242, 0, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 1134, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 1410, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 1009,
	346, 347, 1010, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 0, 0, 1013, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	1409, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 1408, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 1372, 0, 1243, 1242, 0, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 1134, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 1371, 529, 530, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 1009,
	346, 347, 1010, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 0, 0, 1013, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 1309, 0, 1243, 1242, 0, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 1134, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 1308, 529, 530, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 1009,
	346, 347, 1010, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 0, 0, 1013, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 1238, 0, 1243, 1242, 0, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 1134, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 1237, 529, 530, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 1009,
	346, 347, 1010, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 0, 0, 1013, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 1243, 1242, 0, 0, 0, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 1134,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 1002, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 1003, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 1005, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 0, 322, 324,
	331, 0, 1004, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 1006, 534, 1007, 333, 334,
	335, 1008, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 1009, 346, 347,
	1010, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 0, 0, 1013, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 1014, 388, 1015,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 1016, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 1017, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 218, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 1243, 1242, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 645,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 1134, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 1002, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 1785, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 1003, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 1005, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 1004, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 1006, 534, 1007,
	333, 334, 335, 1008, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 1009,
	346, 347, 1010, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 1011, 368, 369,
	372, 373, 371, 1012, 370, 0, 0, 1013, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 1014,
	388, 1015, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 1016, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 1017, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 1243, 1242, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 1134,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 1002, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 1003, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 1005, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 0, 322, 324,
	331, 0, 1004, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 1006, 534, 1007, 333, 334,
	335, 1008, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 1009, 346, 347,
	1010, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 1011, 368, 369, 372, 373,
	371, 1012, 370, 0, 0, 1013, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 1014, 388, 1015,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 1016, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 1017, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 1243, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 1134, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 1002, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 1003, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	1005, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 0, 322, 324, 331, 0, 1004, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 1006,
	534, 1007, 333, 334, 335, 1008, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 1009, 346, 347, 1010, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 1011,
	368, 369, 372, 373, 371, 1012, 370, 0, 0, 1013,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 1014, 388, 1015, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 1016, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 1017, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	218, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 2383, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 2380, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 2387, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 2544, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 2386,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 2541, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 2543, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 2540, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 2385, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 2542, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 2383, 248, 249, 517,
	0, 0, 2377, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 2380, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 2387, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 2386, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 2376, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 2385, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	2384, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 1468, 0, 218, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 223, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	1471, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	1469, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 1470,
	502, 557, 1219, 0, 218, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 1221, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 223, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	1059, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 1216, 0, 218, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 1218, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 223, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	1059, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 1122, 0, 218, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 221, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 1124, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 222,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 223, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	1059, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 587, 0, 218, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 586, 228, 576, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 579, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 580, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 581,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 575, 0, 218, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 576, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 579, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 580, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 581,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 218, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 222, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 2877, 370, 0,
	223, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 218, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 223, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 1059, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 0, 503, 502, 557,
	2480, 0, 218, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 2479, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 223, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 0, 503, 502, 557,
	1974, 0, 218, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 223, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 218, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 1905, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 1910, 0, 218, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 1909, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 1898, 0, 218, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 1900, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 1363, 0, 218, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 1362, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 1360, 0, 218, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 1359, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 1356, 0, 218, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 1355, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 1230, 0, 218, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 1232, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	218, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 223, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 579, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 580, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 581,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 218, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	2005, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 221, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 222, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	223, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 218, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 2003, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 221, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 222, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 223, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 218, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 2001, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 221,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 222, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 223, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	218, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 221, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	1948, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 222, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 223, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 733, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 732, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 731, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 2544, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 3396, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 566, 0, 218, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 565, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	564, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 0, 503,
	502, 557, 218, 3405, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 0, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 0, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 0, 503, 502, 557,
	218, 2531, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 3183, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 218, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	2306, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 218, 2531, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 0, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 0, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 2528, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	218, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 224, 225, 226,
	227, 228, 1982, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 1972, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 607, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 1096, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 1094, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 608, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	604, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 1097, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 603, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 607, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 597, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 608, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	604, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 1383, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 603, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 1369, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	1368, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 1317, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	1316, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 1302, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	1301, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 1297, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 1224, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 0, 503, 502, 557, 607, 0,
	218, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 1096, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 1094, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 608, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	604, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 1097, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 603, 549, 550, 551,
	0, 487, 0, 481, 1095, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 1078, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 528, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 218, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 224, 225, 226, 227, 228,
	613, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 607, 0, 218, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 597, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 595, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	596, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	608, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 598, 431, 0, 432, 436, 437, 604, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 599, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 603, 549, 550, 551, 0, 487,
	0, 481, 601, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 591, 0, 218, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 592, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 589, 0, 218, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 583, 0, 218, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 0, 503, 502, 557, 561, 0, 218, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 528, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 218, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 0, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 0, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 218, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 2930, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 0, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 0, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	218, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	2853, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 453, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 2851, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 218, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 2837, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 218, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 2488, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 0, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 0, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 410, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 218, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 310,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 0, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 0, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 392,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 407, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 431, 0, 432, 592, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	218, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 230, 0, 0, 0, 0, 0,
	509, 0, 1930, 0, 0, 231, 233, 232, 234, 235,
	510, 511, 236, 512, 239, 237, 238, 513, 0, 240,
	241, 242, 243, 244, 245, 246, 0, 0, 247, 514,
	515, 516, 0, 248, 249, 517, 0, 0, 0, 250,
	251, 252, 253, 254, 255, 256, 0, 0, 258, 259,
	260, 257, 0, 261, 0, 262, 263, 264, 0, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	268, 269, 270, 271, 272, 273, 518, 519, 0, 277,
	274, 275, 0, 278, 276, 0, 279, 0, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 286, 287,
	520, 288, 289, 291, 293, 290, 294, 295, 296, 297,
	521, 522, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 523, 301, 302, 0, 303, 0, 304, 0,
	0, 0, 305, 306, 524, 525, 307, 308, 0, 309,
	526, 0, 527, 310, 0, 311, 312, 313, 314, 315,
	528, 529, 530, 376, 0, 316, 317, 0, 318, 319,
	320, 321, 323, 0, 0, 0, 322, 324, 331, 0,
	0, 325, 531, 327, 326, 328, 329, 330, 532, 0,
	533, 0, 332, 0, 534, 0, 333, 334, 335, 0,
	336, 337, 0, 0, 338, 339, 340, 341, 342, 0,
	344, 343, 0, 345, 535, 0, 346, 347, 0, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 354, 0,
	355, 356, 358, 360, 357, 359, 364, 361, 362, 363,
	366, 367, 365, 0, 368, 369, 372, 373, 371, 0,
	370, 0, 0, 0, 374, 0, 536, 375, 537, 377,
	378, 0, 379, 380, 381, 0, 0, 383, 384, 385,
	0, 0, 386, 387, 538, 0, 388, 0, 539, 389,
	382, 390, 391, 392, 393, 394, 395, 396, 0, 397,
	398, 540, 541, 542, 399, 543, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 407, 408, 409, 544, 410,
	411, 0, 412, 413, 414, 415, 416, 417, 0, 419,
	420, 421, 418, 422, 423, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 545, 431, 0, 432, 436, 437,
	438, 439, 440, 441, 442, 0, 448, 449, 443, 445,
	446, 447, 444, 450, 451, 452, 0, 0, 433, 434,
	454, 455, 0, 456, 457, 546, 458, 459, 0, 460,
	461, 462, 463, 435, 464, 469, 470, 465, 466, 467,
	468, 547, 0, 472, 473, 471, 0, 474, 475, 476,
	477, 478, 292, 479, 0, 480, 548, 549, 550, 551,
	0, 487, 0, 481, 482, 552, 483, 553, 0, 484,
	485, 486, 0, 488, 489, 0, 0, 490, 491, 492,
	494, 495, 493, 497, 0, 498, 0, 496, 499, 500,
	501, 554, 555, 556, 218, 503, 502, 557, 0, 0,
	0, 0, 504, 505, 558, 506, 507, 508, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 230, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 231,
	233, 232, 234, 235, 510, 511, 236, 512, 239, 237,
	238, 513, 0, 240, 241, 242, 243, 244, 245, 246,
	0, 0, 247, 514, 515, 516, 0, 248, 249, 517,
	0, 0, 0, 250, 251, 252, 253, 254, 255, 256,
	0, 0, 258, 259, 260, 257, 0, 261, 0, 262,
	263, 264, 0, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	518, 519, 0, 277, 274, 275, 0, 278, 276, 0,
	279, 0, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 286, 287, 520, 288, 289, 291, 293, 290,
	294, 295, 296, 297, 521, 522, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 523, 301, 302, 0,
	303, 0, 304, 0, 0, 0, 305, 306, 524, 525,
	307, 308, 0, 309, 526, 0, 527, 310, 0, 311,
	312, 313, 314, 315, 1339, 529, 530, 376, 0, 316,
	317, 0, 318, 319, 320, 321, 323, 0, 0, 0,
	322, 324, 331, 0, 0, 325, 531, 327, 326, 328,
	329, 330, 532, 0, 533, 0, 332, 0, 534, 0,
	333, 334, 335, 0, 336, 337, 0, 0, 338, 339,
	340, 341, 342, 0, 344, 343, 0, 345, 535, 0,
	346, 347, 0, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 354, 0, 355, 356, 358, 360, 357, 359,
	364, 361, 362, 363, 366, 367, 365, 0, 368, 369,
	372, 373, 371, 0, 370, 0, 0, 0, 374, 0,
	536, 375, 537, 377, 378, 0, 379, 380, 381, 0,
	0, 383, 384, 385, 0, 0, 386, 387, 538, 0,
	388, 0, 539, 389, 382, 390, 391, 392, 393, 394,
	395, 396, 0, 397, 398, 540, 541, 542, 399, 543,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 407,
	408, 409, 544, 410, 411, 0, 412, 413, 414, 415,
	416, 417, 0, 419, 420, 421, 418, 422, 423, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 545, 431,
	0, 432, 436, 437, 438, 439, 440, 441, 442, 0,
	448, 449, 443, 445, 446, 447, 444, 450, 451, 452,
	0, 453, 433, 434, 454, 455, 0, 456, 457, 546,
	458, 459, 0, 460, 461, 462, 463, 435, 464, 469,
	470, 465, 466, 467, 468, 547, 0, 472, 473, 471,
	0, 474, 475, 476, 477, 478, 292, 479, 0, 480,
	548, 549, 550, 551, 0, 487, 0, 481, 482, 552,
	483, 553, 0, 484, 485, 486, 0, 488, 489, 0,
	0, 490, 491, 492, 494, 495, 493, 497, 0, 498,
	0, 496, 499, 500, 501, 554, 555, 556, 218, 503,
	502, 557, 0, 0, 0, 0, 504, 505, 558, 506,
	507, 508, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 230, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 0, 231, 233, 232, 234, 235, 510, 511,
	236, 512, 239, 237, 238, 513, 0, 240, 241, 242,
	243, 244, 245, 246, 0, 0, 247, 514, 515, 516,
	0, 248, 249, 517, 0, 0, 0, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 258, 259, 260, 257,
	0, 261, 0, 262, 263, 264, 0, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 0, 0, 268, 269,
	270, 271, 272, 273, 518, 519, 0, 277, 274, 275,
	0, 278, 276, 0, 279, 0, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 286, 287, 520, 288,
	289, 291, 293, 290, 294, 295, 296, 297, 521, 522,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	523, 301, 302, 0, 303, 0, 304, 0, 0, 0,
	305, 306, 524, 525, 307, 308, 0, 309, 526, 0,
	527, 310, 0, 311, 312, 313, 314, 315, 1279, 529,
	530, 376, 0, 316, 317, 0, 318, 319, 320, 321,
	323, 0, 0, 0, 322, 324, 331, 0, 0, 325,
	531, 327, 326, 328, 329, 330, 532, 0, 533, 0,
	332, 0, 534, 0, 333, 334, 335, 0, 336, 337,
	0, 0, 338, 339, 340, 341, 342, 0, 344, 343,
	0, 345, 535, 0, 346, 347, 0, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 354, 0, 355, 356,
	358, 360, 357, 359, 364, 361, 362, 363, 366, 367,
	365, 0, 368, 369, 372, 373, 371, 0, 370, 0,
	0, 0, 374, 0, 536, 375, 537, 377, 378, 0,
	379, 380, 381, 0, 0, 383, 384, 385, 0, 0,
	386, 387, 538, 0, 388, 0, 539, 389, 382, 390,
	391, 392, 393, 394, 395, 396, 0, 397, 398, 540,
	541, 542, 399, 543, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 407, 408, 409, 544, 410, 411, 0,
	412, 413, 414, 415, 416, 417, 0, 419, 420, 421,
	418, 422, 423, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 545, 431, 0, 432, 436, 437, 438, 439,
	440, 441, 442, 0, 448, 449, 443, 445, 446, 447,
	444, 450, 451, 452, 0, 453, 433, 434, 454, 455,
	0, 456, 457, 546, 458, 459, 0, 460, 461, 462,
	463, 435, 464, 469, 470, 465, 466, 467, 468, 547,
	0, 472, 473, 471, 0, 474, 475, 476, 477, 478,
	292, 479, 0, 480, 548, 549, 550, 551, 0, 487,
	0, 481, 482, 552, 483, 553, 0, 484, 485, 486,
	0, 488, 489, 0, 0, 490, 491, 492, 494, 495,
	493, 497, 0, 498, 0, 496, 499, 500, 501, 554,
	555, 556, 218, 503, 502, 557, 0, 0, 0, 0,
	504, 505, 558, 506, 507, 508, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 230, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 231, 233, 232,
	234, 235, 510, 511, 236, 512, 239, 237, 238, 513,
	0, 240, 241, 242, 243, 244, 245, 246, 0, 0,
	247, 514, 515, 516, 0, 248, 249, 517, 0, 0,
	0, 250, 251, 252, 253, 254, 255, 256, 0, 0,
	258, 259, 260, 257, 0, 261, 0, 262, 263, 264,
	0, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 518, 519,
	0, 277, 274, 275, 0, 278, 276, 0, 279, 0,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	286, 287, 520, 288, 289, 291, 293, 290, 294, 295,
	296, 297, 521, 522, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 523, 301, 302, 0, 303, 0,
	304, 0, 0, 0, 305, 306, 524, 525, 307, 308,
	0, 309, 526, 0, 527, 310, 0, 311, 312, 313,
	314, 315, 528, 529, 530, 376, 0, 316, 317, 0,
	318, 319, 320, 321, 323, 0, 0, 0, 322, 324,
	331, 0, 0, 325, 531, 327, 326, 328, 329, 330,
	532, 0, 533, 0, 332, 0, 534, 0, 333, 334,
	335, 0, 336, 337, 0, 0, 338, 339, 340, 341,
	342, 0, 344, 343, 0, 345, 535, 0, 346, 347,
	0, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	354, 0, 355, 356, 358, 360, 357, 359, 364, 361,
	362, 363, 366, 367, 365, 0, 368, 369, 372, 373,
	371, 0, 370, 0, 0, 0, 374, 0, 536, 375,
	537, 377, 378, 0, 379, 380, 381, 0, 0, 383,
	384, 385, 0, 0, 386, 387, 538, 0, 388, 0,
	539, 389, 382, 390, 391, 392, 393, 394, 395, 396,
	0, 397, 398, 540, 541, 542, 399, 543, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 407, 408, 409,
	544, 1032, 411, 0, 412, 413, 414, 415, 416, 417,
	0, 419, 420, 421, 418, 422, 423, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 545, 431, 0, 432,
	436, 437, 438, 439, 440, 441, 442, 0, 448, 449,
	443, 445, 446, 447, 444, 450, 451, 452, 0, 453,
	433, 434, 454, 455, 0, 456, 457, 546, 458, 459,
	0, 460, 461, 462, 463, 435, 464, 469, 470, 465,
	466, 467, 468, 547, 0, 472, 473, 471, 0, 474,
	475, 476, 477, 478, 292, 479, 0, 480, 548, 549,
	550, 551, 0, 487, 0, 481, 482, 552, 483, 553,
	0, 484, 485, 486, 0, 488, 489, 0, 0, 490,
	491, 492, 494, 495, 493, 497, 0, 498, 0, 496,
	499, 500, 501, 554, 555, 556, 218, 503, 502, 557,
	0, 0, 0, 0, 504, 505, 558, 506, 507, 508,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	230, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 231, 233, 232, 234, 235, 510, 511, 236, 512,
	239, 237, 238, 513, 0, 240, 241, 242, 243, 244,
	245, 246, 0, 0, 247, 514, 515, 516, 0, 248,
	249, 517, 0, 0, 0, 250, 251, 252, 253, 254,
	255, 256, 0, 0, 258, 259, 260, 257, 0, 261,
	0, 262, 263, 264, 0, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 270, 271,
	272, 273, 518, 519, 0, 277, 274, 275, 0, 278,
	276, 0, 279, 0, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 286, 287, 520, 288, 289, 291,
	293, 290, 294, 295, 296, 297, 521, 522, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 523, 301,
	302, 0, 303, 0, 304, 0, 0, 0, 305, 306,
	524, 525, 307, 308, 0, 309, 526, 0, 527, 0,
	0, 311, 312, 313, 314, 315, 528, 529, 530, 376,
	0, 316, 317, 0, 318, 319, 320, 321, 323, 0,
	0, 0, 322, 324, 331, 0, 0, 325, 531, 327,
	326, 328, 329, 330, 532, 0, 533, 0, 332, 0,
	534, 0, 333, 334, 335, 0, 336, 337, 0, 0,
	338, 339, 340, 341, 342, 0, 344, 343, 0, 345,
	535, 0, 346, 347, 0, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 354, 0, 355, 356, 358, 360,
	357, 359, 364, 361, 362, 363, 366, 367, 365, 0,
	368, 369, 372, 373, 371, 0, 370, 0, 0, 0,
	374, 0, 536, 375, 537, 377, 378, 0, 379, 380,
	381, 0, 0, 383, 384, 385, 0, 0, 386, 387,
	538, 0, 388, 0, 539, 389, 382, 390, 391, 0,
	393, 394, 395, 396, 0, 397, 398, 540, 541, 542,
	399, 543, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 0, 408, 409, 544, 410, 411, 0, 412, 413,
	414, 415, 416, 417, 0, 419, 420, 421, 418, 422,
	423, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	545, 0, 0, 432, 436, 437, 438, 439, 440, 441,
	442, 0, 448, 449, 443, 445, 446, 447, 444, 450,
	451, 452, 0, 453, 433, 434, 454, 455, 0, 456,
	457, 546, 458, 459, 0, 460, 461, 462, 463, 435,
	464, 469, 470, 465, 466, 467, 468, 547, 0, 472,
	473, 471, 0, 474, 475, 476, 477, 478, 292, 479,
	0, 480, 548, 549, 550, 551, 0, 487, 0, 481,
	482, 552, 483, 553, 0, 484, 485, 486, 0, 488,
	489, 0, 0, 490, 491, 492, 494, 495, 493, 497,
	0, 498, 0, 496, 499, 500, 501, 554, 555, 556,
	0, 503, 502, 557, 0, 0, 0, 0, 504, 505,
	558, 506, 507, 508, 1513, 1514, 0, 1546, 1547, 1548,
	1556, 1557, 1558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 1544, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 1514, 0,
	1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 1549, 1544, 0,
	0, 0, 0, 1535, 0, 1516, 0, 0, 0, 0,
	1562, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 1539, 1540, 1541, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 1563, 1538, 1539, 1540, 1541, 0,
	1543, 1545, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1559, 0, 1560, 0, 0, 0, 0, 0, 0, 1530,
	1531, 0, 0, 0, 1553, 0, 0, 1563, 0, 0,
	0, 0, 0, 1543, 1545, 1551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 0, 0,
	0, 0, 0, 1559, 0, 1560, 0, 0, 0, 0,
	0, 0, 1530, 1531, 0, 0, 0, 0, 0, 0,
	1561, 0, 0, 0, 0, 0, 0, 0, 1551, 0,
	0, 0, 0, 0, 0, 0, 0, 1550, 0, 1536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1550, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1537, 0, 0, 1513, 1514, 0, 1546,
	1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1544, 1542, 1554,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 1535, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 0, 1527, 1528,
	1534, 1555, 1533, 1529, 0, 1526, 1524, 1525, 1517, 1518,
	1519, 1520, 1522, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 2698, 0, 1538, 1539, 1540, 1541, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 1552, 0,
	0, 1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524,
	1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 0,
	0, 0, 0, 1553, 0, 2160, 1563, 0, 0, 0,
	0, 0, 1543, 1545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1559, 0, 1560, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1513, 1514, 0, 1546, 1547, 1548, 1556,
	1557, 1558, 0, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 1549, 1544, 0, 0, 0, 1536, 0,
	0, 1516, 0, 0, 0, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 1535, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1544, 0, 0, 0, 0, 1542, 0, 1516,
	0, 0, 0, 0, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 1541, 0, 0, 0, 0, 0,
	1515, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	1535, 1554, 0, 0, 0, 0, 0, 0, 1532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1553, 0, 0, 1563, 0, 0, 0, 0, 0, 1543,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	0, 1560, 0, 0, 0, 0, 0, 0, 1530, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 1540, 1541, 0, 1551, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 1536, 0, 1552, 0, 0,
	1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 1553, 1561,
	3678, 1563, 0, 0, 0, 0, 0, 1543, 1545, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1559, 0, 1560,
	0, 0, 0, 0, 0, 0, 1530, 1531, 1513, 1514,
	0, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 1549, 1544,
	0, 0, 0, 1536, 1542, 0, 1516, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 1561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 1535, 1554, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1514, 0, 1546,
	1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1544, 0, 0,
	0, 0, 1542, 0, 1516, 0, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	0, 0, 0, 0, 0, 1515, 1521, 0, 0, 0,
	0, 0, 0, 0, 1552, 1535, 1554, 1527, 1528, 1534,
	1555, 1533, 1529, 1532, 1526, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 0, 0, 1553, 0, 3674, 1563, 0,
	0, 0, 0, 0, 1543, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 0, 1560, 0, 0, 0,
	0, 0, 0, 1530, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 1539, 1540, 1541, 0, 1551,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	1536, 0, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533,
	1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 0, 0, 1553, 1561, 3593, 1563, 0, 0, 0,
	0, 0, 1543, 1545, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1559, 0, 1560, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1513, 1514, 0, 1546, 1547, 1548, 1556,
	1557, 1558, 0, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 1549, 1544, 0, 0, 0, 1536, 1542,
	0, 1516, 0, 0, 0, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 1535, 1554, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1544, 0, 0, 0, 0, 1542, 0, 1516,
	0, 0, 0, 0, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 1541, 0, 0, 0, 0, 0,
	1515, 1521, 0, 0, 0, 0, 0, 0, 0, 1552,
	1535, 1554, 1527, 1528, 1534, 1555, 1533, 1529, 1532, 1526,
	1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0,
	1553, 0, 3592, 1563, 0, 0, 0, 0, 0, 1543,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	0, 1560, 0, 0, 0, 0, 0, 0, 1530, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 1540, 1541, 0, 1551, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 1536, 0, 1552, 0, 0,
	1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 1553, 1561,
	3464, 1563, 0, 0, 0, 0, 0, 1543, 1545, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1559, 0, 1560,
	0, 0, 0, 0, 0, 0, 1530, 1531, 1513, 1514,
	0, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 1549, 1544,
	0, 0, 0, 1536, 1542, 0, 1516, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 1561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 1535, 1554, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1514, 0, 1546,
	1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1544, 0, 0,
	0, 0, 1542, 0, 1516, 0, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	0, 0, 0, 0, 0, 1515, 1521, 0, 0, 0,
	0, 0, 0, 0, 1552, 1535, 1554, 1527, 1528, 1534,
	1555, 1533, 1529, 1532, 1526, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 0, 0, 1553, 0, 3359, 1563, 0,
	0, 0, 0, 0, 1543, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 0, 1560, 0, 0, 0,
	0, 0, 0, 1530, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 1539, 1540, 1541, 0, 1551,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	1536, 0, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533,
	1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 0, 0, 1553, 1561, 3311, 1563, 0, 0, 0,
	0, 0, 1543, 1545, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1559, 0, 1560, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1513, 1514, 0, 1546, 1547, 1548, 1556,
	1557, 1558, 0, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 1549, 1544, 0, 0, 0, 1536, 1542,
	0, 1516, 0, 0, 0, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 1535, 1554, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1544, 0, 0, 0, 0, 1542, 0, 1516,
	0, 0, 0, 0, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 1541, 0, 0, 0, 0, 0,
	1515, 1521, 0, 0, 0, 0, 0, 0, 0, 1552,
	1535, 1554, 1527, 1528, 1534, 1555, 1533, 1529, 1532, 1526,
	1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0,
	1553, 0, 3310, 1563, 0, 0, 0, 0, 0, 1543,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	0, 1560, 0, 0, 0, 0, 0, 0, 1530, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 1540, 1541, 0, 1551, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 1536, 0, 1552, 0, 0,
	1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 1553, 1561,
	3309, 1563, 0, 0, 0, 0, 0, 1543, 1545, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1559, 0, 1560,
	0, 0, 0, 0, 0, 0, 1530, 1531, 1513, 1514,
	0, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 1549, 1544,
	0, 0, 0, 1536, 1542, 0, 1516, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 1561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 1535, 1554, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1514, 0, 1546,
	1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1544, 0, 0,
	0, 0, 1542, 0, 1516, 0, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	0, 0, 0, 0, 0, 1515, 1521, 0, 0, 0,
	0, 0, 0, 0, 1552, 1535, 1554, 1527, 1528, 1534,
	1555, 1533, 1529, 1532, 1526, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 0, 0, 1553, 0, 3063, 1563, 0,
	0, 0, 0, 0, 1543, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 0, 1560, 0, 0, 0,
	0, 0, 0, 1530, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 1539, 1540, 1541, 0, 1551,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	1536, 0, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533,
	1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 0, 0, 1553, 1561, 2696, 1563, 0, 0, 0,
	0, 0, 1543, 1545, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1559, 0, 1560, 0, 0, 0, 0, 0,
	0, 1530, 1531, 1513, 1514, 0, 1546, 1547, 1548, 1556,
	1557, 1558, 0, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 1549, 1544, 0, 0, 0, 1536, 1542,
	0, 1516, 0, 0, 0, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 1535, 1554, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1544, 0, 0, 0, 0, 1542, 0, 1516,
	0, 0, 0, 0, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 1541, 0, 0, 0, 0, 0,
	1515, 1521, 0, 0, 0, 0, 0, 0, 0, 1552,
	1535, 1554, 1527, 1528, 1534, 1555, 1533, 1529, 1532, 1526,
	1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0,
	1553, 0, 2695, 1563, 0, 0, 0, 0, 0, 1543,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	0, 1560, 0, 0, 0, 0, 0, 0, 1530, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 1540, 1541, 0, 1551, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 1536, 0, 1552, 0, 0,
	1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 1553, 1561,
	2694, 1563, 0, 0, 0, 0, 0, 1543, 1545, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1559, 0, 1560,
	0, 0, 0, 0, 0, 0, 1530, 1531, 1513, 1514,
	0, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 1549, 1544,
	0, 0, 0, 1536, 1542, 0, 1516, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 1561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 1535, 1554, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	0, 0, 0, 0, 0, 0, 1521, 3788, 0, 0,
	0, 0, 0, 0, 1552, 0, 1554, 1527, 1528, 1534,
	1555, 1533, 1529, 0, 1526, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 0, 0, 1553, 0, 2693, 1563, 0,
	0, 0, 0, 0, 1543, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 0, 1560, 0, 0, 0,
	0, 0, 0, 1530, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1536, 0, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533,
	1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 0, 0, 2647, 1561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3787, 1513, 1514, 0, 1546,
	1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1544, 0, 1542,
	0, 0, 2618, 0, 1516, 0, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 1513,
	1514, 0, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 1549,
	1544, 0, 0, 1554, 0, 1535, 0, 1516, 0, 0,
	0, 0, 1562, 1532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 2619, 0, 0, 0, 1535, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 1539, 1540, 1541, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 1552,
	0, 0, 1527, 1528, 1534, 1555, 1533, 1529, 0, 1526,
	1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0,
	0, 0, 0, 1553, 0, 0, 1563, 1538, 1539, 1540,
	1541, 0, 1543, 1545, 0, 0, 0, 1521, 0, 2743,
	0, 0, 2742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1559, 0, 1560, 0, 0, 0, 0, 0,
	0, 1530, 1531, 0, 0, 0, 1553, 0, 0, 1563,
	0, 0, 0, 0, 0, 1543, 1545, 1551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1536, 0,
	0, 0, 0, 0, 0, 1559, 0, 1560, 0, 0,
	0, 0, 0, 0, 1530, 1531, 0, 0, 0, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 1550,
	0, 1536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2280, 0, 0, 0, 0, 1537, 0, 1513, 1514, 0,
	1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 1544, 0,
	1542, 1554, 2279, 0, 0, 1516, 0, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 1539, 1540, 1541, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	1552, 0, 0, 1527, 1528, 1534, 1555, 1533, 1529, 0,
	1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0,
	0, 0, 0, 0, 1553, 0, 0, 1563, 0, 0,
	0, 0, 0, 1543, 1545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1559, 0, 1560, 0, 0, 0, 0,
	0, 0, 1530, 1531, 1513, 1514, 0, 1546, 1547, 1548,
	1556, 1557, 1558, 0, 0, 0, 0, 0, 1551, 0,
	0, 0, 0, 0, 1549, 1544, 0, 0, 0, 1536,
	0, 0, 1516, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	1550, 0, 0, 1535, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1544, 0, 0, 0, 0, 0, 1542, 1516,
	0, 0, 0, 0, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 0,
	0, 0, 1538, 1539, 1540, 1541, 0, 0, 0, 0,
	1515, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	1535, 0, 1554, 0, 0, 0, 0, 0, 1532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 1563, 0, 0, 0, 0, 0,
	1543, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1559, 0, 1560, 0, 0, 0, 0, 0, 0, 1530,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 1540, 1541, 0, 0, 1551, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 1536, 0, 1552, 0,
	0, 1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524,
	1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 1553, 0,
	1561, 1563, 0, 0, 0, 0, 0, 1543, 1545, 0,
	0, 0, 0, 0, 0, 0, 0, 1550, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 1559, 0, 1560,
	0, 0, 0, 0, 0, 0, 1530, 1531, 1513, 1514,
	0, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 1549, 1544,
	0, 0, 0, 1536, 0, 1542, 1516, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1537, 0, 0, 0, 1561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 1535, 0, 1554,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 2749, 0, 0, 0, 1552, 1554, 0, 1527, 1528,
	1534, 1555, 1533, 1529, 0, 1526, 1524, 1525, 1517, 1518,
	1519, 1520, 1522, 1523, 0, 1553, 0, 0, 1563, 0,
	0, 0, 0, 0, 1543, 1545, 0, 0, 3040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 0, 1560, 0, 0, 0,
	0, 0, 0, 1530, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1536, 0, 1552, 0, 0, 1527, 1528, 1534, 1555, 1533,
	1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522,
	1523, 0, 0, 0, 1561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 1514, 0, 1546, 1547, 1548, 1556, 1557,
	1558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 1544, 0, 0, 0, 2744, 0, 1542,
	1516, 0, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1535, 0, 1554, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 1539, 1540, 1541, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 1552,
	0, 0, 1527, 1528, 1534, 1555, 1533, 1529, 0, 1526,
	1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 1553,
	0, 0, 1563, 0, 0, 0, 0, 0, 1543, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1559, 0,
	1560, 0, 0, 0, 0, 0, 0, 1530, 1531, 1513,
	1514, 0, 1546, 1547, 1548, 1556, 1557, 1558, 0, 0,
	0, 0, 0, 1551, 0, 0, 0, 0, 0, 1549,
	1544, 0, 0, 0, 1536, 0, 0, 1516, 0, 0,
	0, 0, 1562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 1535, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1514, 0, 1546,
	1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1544, 0, 0,
	0, 2697, 0, 1542, 1516, 0, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 0, 0, 0, 1538, 1539, 1540,
	1541, 0, 0, 0, 0, 1515, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 1535, 0, 1554, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 1563,
	0, 0, 0, 0, 0, 1543, 1545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1559, 0, 1560, 0, 0,
	0, 0, 0, 0, 1530, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 1539, 1540, 1541, 0, 0,
	1551, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	0, 1536, 0, 1552, 0, 0, 1527, 1528, 1534, 1555,
	1533, 1529, 0, 1526, 1524, 1525, 1517, 1518, 1519, 1520,
	1522, 1523, 0, 1553, 0, 1561, 1563, 0, 0, 0,
	0, 0, 1543, 1545, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1559, 0, 1560, 0, 0, 0, 0, 0,
	2711, 1530, 1531, 1513, 1514, 0, 1546, 1547, 1548, 1556,
	1557, 1558, 0, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 1549, 1544, 0, 0, 0, 1536, 0,
	1542, 1516, 0, 0, 0, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 1535, 0, 1554, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 1541, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 1554, 0, 1527, 1528, 1534, 1555, 1533, 1529, 0,
	1526, 1524, 1525, 1517, 1518, 1519, 1520, 1522, 1523, 0,
	1553, 0, 0, 1563, 0, 0, 0, 0, 0, 1543,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	0, 1560, 0, 0, 0, 0, 0, 0, 1530, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 1552, 0, 0,
	1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524, 1525,
	1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 0, 1561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 1514, 0,
	1546, 1547, 1548, 1556, 1557, 1558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 1544, 0,
	0, 0, 0, 0, 1542, 1516, 0, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 1514, 1515, 1546, 1547, 1548,
	1556, 1557, 1558, 0, 0, 0, 1535, 0, 1554, 0,
	0, 0, 0, 0, 1532, 1544, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1535, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 0, 1538, 1539, 1540, 1541, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 0, 0, 1527, 1528, 1534,
	1555, 1533, 1529, 0, 1526, 1524, 1525, 1517, 1518, 1519,
	1520, 1522, 1523, 1736, 1553, 0, 0, 1563, 0, 0,
	0, 0, 0, 1543, 1545, 0, 0, 0, 0, 0,
	0, 0, 1538, 1539, 1540, 1541, 0, 0, 0, 0,
	0, 0, 1521, 1559, 0, 1560, 0, 0, 0, 0,
	0, 0, 1530, 1531, 1753, 1730, 1737, 0, 1720, 1763,
	1762, 0, 0, 0, 1722, 1721, 0, 0, 1551, 0,
	0, 1553, 1775, 1776, 1563, 0, 0, 0, 0, 1536,
	1543, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1559, 0, 1560, 1561, 0, 0, 0, 0, 0, 1530,
	1531, 0, 0, 0, 0, 0, 0, 1764, 0, 1760,
	1759, 0, 0, 0, 0, 1551, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 1536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1561, 0, 0, 0, 0, 1757, 1755, 1756, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 1770, 0,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 1746, 1735, 1748, 1750, 1751,
	1752, 1747, 0, 1740, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 1771, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 1733, 0, 1734, 1552, 0,
	0, 1527, 1528, 1534, 1555, 1533, 1529, 0, 1526, 1524,
	1525, 1517, 1518, 1519, 1520, 1522, 1523, 0, 0, 0,
	0, 0, 0, 0, 1718, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 1743, 1741, 1742, 1745, 1744,
	0, 778, 0, 814, 0, 1552, 0, 0, 1527, 1528,
	1534, 1555, 1533, 1529, 0, 1526, 1524, 1525, 1517, 1518,
	1519, 1520, 1522, 1523, 0, 785, 0, 0, 0, 0,
	0, 1725, 1726, 1728, 1729, 0, 0, 0, 0, 0,
	797, 783, 0, 0, 0, 0, 0, 0, 1749, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 0,
	0, 0, 787, 0, 0, 0, 1723, 820, 0, 1765,
	1766, 1767, 1768, 0, 0, 794, 795, 0, 0, 0,
	0, 807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 815, 789, 0, 0, 0,
	1731, 0, 0, 0, 0, 1738, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 0, 0, 0, 0, 0, 0, 0,
	782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 791, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	799, 798, 0, 0, 0, 0, 0, 0, 793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 786, 0, 0, 0, 811, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 0, 0,
	0, 805, 0, 0, 802, 0, 0, 0, 0, 0,
	803, 0, 0, 0, 0, 0, 0, 780, 0, 817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 0, 0, 0,
	801, 0, 0, 0, 0, 0, 0, 0, 0, 818,
	0, 0, 0, 0, 0, 0, 0, 806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	810,
}
var sqlPact = [...]int{

	5671, -1000, -1000, -1000, -1000, -1000, -1000, 158, 157, 155,
	154, 152, 149, 148, 144, -1000, -1000, -1000, -1000, -1000,
	-1000, 142, -1000, -1000, 140, -1000, 138, 136, 134, 125,
	-1000, 124, 123, 121, -1000, -1000, -1000, -1000, 119, 118,
	116, 62226, 1790, 75954, 65870, 1862, 56730, 75494, 56270, 75034,
	74574, 115, -1000, 74114, 114, 111, 110, -1000, 73654, -1000,
	1499, -1000, 106, 2563, 47046, 105, 104, 102, 2512, 100,
	-1000, 99, -1000, 10541, 1285, -1000, 98, -1000, 6998, 552,
	64956, 2263, 94, 93, 46585, 2256, 2282, -1000, -1000, 1612,
	-1000, -1000, 92, 90, 89, 88, 86, 79, 78, 77,
	75, -1000, 74, 71, 69, 67, 66, 63, 62, -1000,
	61, 60, 59, 58, 56, 55, 54, 53, 51, 50,
	49, 48, -1000, 87399, 1482, 1426, 1405, 1400, 1396, 1393,
	833, 47, 45, 41, 40, 38, 37, 36, -1000, 33,
	32, 28, 27, 24, -1000, 22, 21, 159, 18, 15,
	14, 11, 9, 2144, -1000, 1287, 744, 22270, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 80948, 76408, 8, -61, 7, -1000, 2672, 832, 38746,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	414, -1000, -1000, -1000, 214, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1430,
	668, -1000, -1000, -1000, 73200, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1758, 1, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 667, -1000, 1757, 139, 1620, -1000, -1000, -1000,
	-1000, -1000, 76408, -1000, -1000, 3024, 3022, 1568, 662, 72746,
	-1000, 1322, -1000, 783, 25180, -1000, 1042, -1000, 25180, 209,
	-1000, -1000, -1000, -1000, -1000, -1000, 3021, 3018, 3015, 3014,
	-1000, -1000, 55810, 16418, 55350, 54890, 72286, 15948, 61772, 50770,
	-1000, -1000, -1000, 41541, 1051, -1000, -1000, -1000, -1000, -1000,
	-15, 51692, 76408, -1000, 207, -1000, -1000, -1000, -1000, -1000,
	-1000, 32074, 525, 31579, 508, 31084, 475, -1000, -1000, -1000,
	3013, 3012, 960, 3010, 2546, 80494, 1404, 3006, 1397, 1026,
	871, 3005, 3004, 3003, 3002, 3001, 3000, 1097, 71826, 2320,
	71366, 1346, 50300, 62226, 62226, 2074, 70906, 1083, 1080, -1000,
	-1000, -1000, -1000, 2397, 2281, 2279, 43846, -1000, 2996, 2995,
	2991, 2990, 2989, 80040, 1394, 2986, 1998, 2983, 2981, 2980,
	2975, 2974, 2970, 2966, 2960, 2956, -1000, 61312, 60852, 60392,
	2677, 70446, 49830, -1000, -1000, -1000, 40599, 9016, 8816, 69986,
	42009, 62226, 62226, -1000, -1000, 32557, 76, -1000, -1000, -1000,
	41541, 2280, -1000, 32557, 76, -1000, 76408, -1000, 2313, 1485,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1871, 1357, 2819, 49360, 1731, 1216, 2633, 2384, 2383, 1274,
	1979, 2373, 2368, 2367, 2364, 2363, 1327, 2009, 477, 21775,
	1253, 1283, 2362, 2349, 2833, 1533, 1896, 54430, 2955, 2952,
	2599, 2347, 2342, 2278, -1000, -1000, -1000, -1000, 1231, -1000,
	-1000, 57638, -1000, -1000, 1017, -1000, -1000, 1017, -1000, -1000,
	-1000, -1000, -1000, 1050, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1287, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1934, -1000, 1535, -1000, -1000, 1994, 2591, 2591, 2591,
	2667, 372, 369, -1000, 159, -1000, -1000, 86572, -1000, -1000,
	32557, 32557, 32557, 32557, 32557, 1551, -1000, 656, -1000, -1000,
	705, -1000, 651, 488, -1000, -1000, -1000, -1000, -1000, -1000,
	650, 2832, -1000, -1000, -1000, -1000, -1000, 2801, -1000, 18817,
	-1000, -1000, -1000, 348, 639, 32557, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 778, -1000, 204, 801, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 529,
	1472, 528, 528, 528, -1000, -1000, 861, -1000, -1000, -1000,
	235, 526, 234, 522, 521, 520, -1000, -1000, -1000, -1000,
	2310, 635, 625, -1000, 623, 620, 618, 615, 614, -1000,
	-1000, -1000, 610, 609, 607, 606, 604, 600, 589, 585,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 859, -1000,
	584, 570, 569, 568, 565, 564, 563, 550, 549, -1000,
	-1000, -16, 76408, -1000, 414, -16, -1000, -1000, 543, -1000,
	25663, 25663, 25663, -1000, -1000, 1755, 32557, -1000, 1999, -1000,
	-6, -6, 735, 39664, -1000, 37811, 735, 288, 714, 43385,
	-1000, 2277, -1000, -1000, 542, 199, -1000, -1000, 2272, 76408,
	16886, 76408, 62226, 62226, 62226, 2496, 32557, -1000, -1000, 48890,
	76408, 62680, 2745, 87059, 48890, 76408, 2309, -1000, -1000, -1000,
	76408, -1000, 32557, -1000, 2742, 1261, 52150, 2696, -28, -1000,
	-1000, -1000, -1000, -1000, -1000, 1969, 1993, 970, 1828, 1700,
	-1000, 25180, 2533, -1000, -1000, -1000, 179, 16886, -1000, -1000,
	-1000, -1000, -1000, 2118, 2475, 1160, -1000, 1807, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1423, 2470, -1000,
	1866, 2468, 1421, -1000, -1000, 1674, -1000, -1000, 2586, -1000,
	-1000, 1456, 2467, -5, -1000, -1000, 839, 2465, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 758, -1000, 51238,
	41541, 51692, -19, -1000, -1000, -56, -1000, 15478, 86572, -1000,
	-1000, -1000, 86572, 734, -1000, -1000, 2463, -1000, 86572, 731,
	-1000, -1000, 2462, -1000, -1000, -1000, 2951, -1000, 2948, 1916,
	2947, 2945, 2944, -1000, 1320, 1460, 2943, -1000, 2942, -1000,
	-1000, -1000, -1000, -1000, -1000, 59932, 1752, -1000, -1000, 59012,
	-1000, 1913, -1000, -1000, 59472, 870, -1000, 839, 1909, -1000,
	834, -1000, 2941, 2670, 2114, 839, 1908, -1000, -1000, -1000,
	-1000, -1000, 44754, -1000, 44754, -1000, 44754, -1000, 1198, -1000,
	79586, -6, -6, 2801, -1000, -1000, -1000, -1000, -1000, 2461,
	2940, 2939, 2937, -1000, 76408, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 190, 2458, -1000, -1000, 190, 2455,
	-1000, 190, 2449, -1000, 64496, -1000, -1000, 1722, 2447, -1000,
	-87, 2446, -1000, -1000, -29, -1000, -1000, -1000, 832, -1000,
	40125, -1000, 40125, 69526, 51238, 797, 622, 46124, 86572, -1000,
	-127, -1000, 41541, 86572, -1000, 51238, 59012, -1000, 69066, 58558,
	-1000, -1000, 1094, 2025, -1000, -1000, -1000, 797, 51238, 51238,
	51238, -1000, 68606, -1000, -1000, 1605, 1272, 2584, 1543, 62226,
	-1000, 1500, -1000, -1000, -1000, 2621, 2307, -1000, 48436, 64042,
	-1000, 63588, -1000, 63134, -1000, 62226, -1000, 62226, -1000, 2936,
	2935, 2934, -1000, 2933, 2610, 86572, 2606, -1000, 2338, 1431,
	1402, 76408, -1000, -1000, 76408, -1000, 76408, -1000, -1000, -1000,
	-1000, -1000, 1966, -1000, -1000, -1000, -1000, 62226, -1000, -1000,
	-1000, -1000, -1000, -1000, 2306, -1000, 1361, -1000, 1453, -1000,
	1091, -1000, -1000, 191, -1000, -1000, -28, -1000, 79132, -1000,
	1994, -1000, 76408, -1000, 1935, 2293, 2303, 1184, 1704, 2060,
	-1000, 30589, 2003, 34972, 1797, 159, -1000, -1000, 159, 159,
	24697, -1000, -1000, 87059, 87059, 16886, 1058, 32557, 32557, 32557,
	32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557,
	32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557,
	32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557, 32557,
	32557, 32557, 1781, 32557, 1049, 32557, 32557, 32557, 32557, 2084,
	-1000, -1000, 1505, 434, 1541, -1000, 2795, 2795, 2795, 86933,
	86933, 485, 2929, 705, -1000, 32557, -1000, 76, 32557, 17356,
	-1000, -1000, -1000, 369, 7738, 1817, -1000, 366, 17851, -1000,
	-1000, -1000, 18817, 488, 30094, 32557, 836, 86572, 1266, 2814,
	15010, 2191, 2157, -1000, 2822, -1000, -1000, 2814, -1000, -1000,
	-1000, -1000, 2814, 1030, 1021, 2814, -1000, 2814, 2814, 2791,
	2791, 538, 689, 680, 21280, 20785, 20290, 19795, 676, 32557,
	32557, 32557, 32557, 32557, 32557, 32557, 32557, -1000, 29611, 29116,
	28621, 35455, 28126, 32557, 19300, 27631, 27136, 76408, -16, 2739,
	32557, 120, -1000, 85226, -1000, 120, 120, 537, -35, 86572,
	2045, 2045, 39205, 1988, 1566, 1566, 1566, -1000, 735, 11240,
	735, 67694, 1590, 735, 735, 176, 201, 365, 37352, 1999,
	67694, 688, 536, 6, 4, 2, -1000, -1000, 0, -1,
	-1000, -1000, 62226, 535, 17356, 16886, 1113, -36, 174, 2053,
	2047, 2043, -1000, 2042, 1301, -37, 1047, -153, -1000, 8149,
	-42, -1000, 1154, -1000, -1000, -1000, -1000, -1000, 2927, 2924,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 857, 534, 533,
	775, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 529, 1472, 528,
	528, 528, -1000, -1000, -1000, 235, 526, 234, 522, 521,
	520, -1000, -1000, -1000, -1000, -1000, -1000, 2268, -56, 62680,
	780, -43, 964, -28, -1000, -1000, -1000, 52150, 1017, -1000,
	1672, -1000, -1000, -1000, -1000, -1000, -1000, 1102, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 778, -1000, -1000, -1000, -1000,
	-1000, -1000, 2810, 2805, -17, -1000, -1000, 16886, -1000, -31,
	1373, -1000, 53970, 1855, 2585, 2578, 1167, -1000, 1116, 2666,
	57638, 2709, 2741, 637, -1000, 2260, -1000, -1000, 777, 1358,
	1046, 57638, 1866, -1000, 87059, -1000, 2098, 2665, 1190, 1192,
	1190, 1190, 1197, -1000, 57638, 1045, -1000, 1043, -1000, -32,
	2706, 2726, 519, -1000, 2259, 1041, -1000, -1000, 62226, 16886,
	-1000, 1591, -1000, 51238, 2120, -1000, -44, 758, -19, 51692,
	76408, 172, -1000, 32557, 76, 32557, 76, -1000, -1000, 2443,
	-1000, -1000, -1000, 2923, 1441, 1992, -1000, -1000, -1000, 517,
	1893, 2258, 76408, 2063, -25, 62226, -1000, 2441, 1866, 1891,
	-1000, -1000, 58098, -1000, 2434, 551, 2922, -1000, 78678, -1000,
	2602, 1066, 2433, 923, 476, 2735, -1000, 476, 45208, -1000,
	76408, -1000, -1000, 76408, -1000, -1000, -1000, 2920, -1000, 62226,
	-1000, -1000, 62226, -1000, 62226, -1000, 62226, 187, 2429, -1000,
	-1000, 76408, 51238, 51238, 8292, 53062, -45, -51, 344, -1000,
	68152, 76408, 922, 53516, 76408, 2523, 797, 41541, -127, 797,
	797, 758, -1000, 758, -1000, 62226, 2302, -1000, 797, 797,
	797, -1000, -1000, -1000, -1000, 2918, 2916, -1000, -1000, -1000,
	838, 62226, 76408, 62226, -1000, -1000, 76408, -1000, 76408, -1000,
	838, 76408, 838, 76408, 838, 76408, -1000, -1000, -1000, -1000,
	-1000, -1000, 76, 32557, 1215, -1000, 2297, -1000, 2295, -1000,
	30, -1000, -1000, -1000, -1000, 1416, 62226, 62226, 62226, 62226,
	76408, 62226, -1000, 57638, -1000, 1935, 2293, -1000, -1000, -1000,
	-1000, -1000, -1000, 1302, 1658, -1000, 2020, -1000, 1129, -1000,
	-1000, -1000, 86572, 35938, -1000, -1000, 86572, 1369, -1000, 34489,
	34006, -1000, -1000, 1331, 62226, 2062, -1000, 2062, -23, -1000,
	84875, 2018, 62226, -1000, -1000, -1000, -1000, -1000, 776, 1076,
	1076, 1057, 1057, 1057, 1057, 2738, 364, 249, 4052, 4914,
	4914, 4762, 4762, 4762, 4762, 4762, 4914, 566, 881, 881,
	566, 566, 566, 566, 566, 881, 881, 881, 4914, 4914,
	4914, 86933, 86876, 7050, 32557, 32557, 1040, 1483, 434, 6192,
	32557, 7087, 7087, 7087, 7087, -1000, 2601, -1000, -1000, -1000,
	-1000, 2245, 516, 35455, 35455, -1000, -1000, -1000, -1000, 18334,
	32557, -1000, -1000, -1000, -1000, 26641, -1000, -1000, 84350, -260,
	341, -176, 23, -1000, 32557, 32557, 32557, 340, -1000, 169,
	32557, 76408, -1000, 81906, 687, -216, -1000, -62, 1194, -1000,
	32557, -1000, -1000, 1039, -1000, 1037, 1032, 1027, -1000, 515,
	338, -1000, 166, -1000, 1559, 514, 511, 336, -64, 325,
	772, 770, 322, 321, 319, -67, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -72, 32557, -1000, -1000, -1000, -1000,
	-1000, 84262, -1000, -1000, 84045, -1000, -1000, 83957, -1000, -1000,
	83740, -1000, -1000, -1000, 86355, 81863, 10331, 10246, 5489, 9720,
	9565, -73, 318, -1000, 2241, -176, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 317, -1000, 314, -1000, 86268, -176,
	312, 5645, -1000, 35455, 35455, 35455, -1000, 310, -1000, 84918,
	-1000, 86051, 26158, 26158, 26158, 309, 85747, 32557, -176, -75,
	-1000, -78, -1000, -1000, 510, -80, 852, 25663, 38285, 16886,
	-1000, 852, 852, 32557, -1000, 32557, 2033, -1000, -1000, -1000,
	2032, 1555, 2045, 39205, -1000, -1000, -1000, -1000, 67694, -1000,
	2801, 2181, -1000, 67694, -1000, -1000, 76408, 414, -1000, 67694,
	67694, 16886, 735, -1000, 735, 67694, 506, -1000, -1000, -1000,
	-1000, -1000, 308, 42467, 23, 165, 797, -1000, 16886, 2123,
	2123, 2123, 2123, -1000, -1000, 76408, 2763, -1000, 1497, -1000,
	87059, -1000, 704, 992, -1000, -1000, 509, -1000, 2814, 2814,
	-1000, 2814, 76408, 107, 25180, -1000, 1017, -1000, -1000, 1324,
	-1000, 1446, -1000, 996, -1000, -1000, -1000, -1000, 25180, -1000,
	1779, 76408, 76408, 62226, -1000, -1000, 1888, 78224, 1874, 87059,
	76408, -1000, -1000, 503, 501, 2016, 2013, 912, 76408, 76408,
	2008, 77770, 77316, 76408, 1562, 32557, 1645, 1644, 76, 76,
	-1000, -1000, 76, 500, 1104, 62226, 62226, 62226, 1401, -1000,
	-1000, -1000, -1000, -1000, 57184, -1000, -1000, 2820, 2817, -1000,
	1190, -1000, -1000, -1000, 1190, 1866, 1395, 62226, 76408, 1488,
	76, 76, -1000, -1000, 76, 499, 16886, 1458, -1000, 1591,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 47982, 928, 839,
	797, 2240, -1000, 2120, -1000, -1000, 14542, 86572, -1000, 86572,
	-1000, 76408, -1000, 863, 76408, 53516, 810, 2426, 44300, -56,
	797, 51238, 62226, -25, 76408, -1000, 1866, 2425, 414, 1865,
	-1000, -1000, 51238, 2914, 497, 2913, -1000, 1750, 1864, -1000,
	-1000, 76862, 2486, 737, 76408, 852, 39205, 1452, -1000, 42927,
	879, 76408, 1380, 81, -1000, -1000, -1000, 17, 76408, -1000,
	2912, -1000, -1000, 190, 190, 190, -1000, 62226, 62226, 1722,
	-1000, -87, -1000, -1000, 8292, 8292, 797, -26, 492, -1000,
	753, 752, 41073, 51238, -81, -1000, -1000, -1000, -1000, -1000,
	62226, 76408, 545, 2109, 76408, -86, -1000, 164, 489, -1000,
	-1000, 797, 2223, -1000, -1000, 845, -1000, 1088, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -7, -56, -56,
	-1000, 838, -1000, 838, -1000, 838, -1000, 86572, -1000, 1205,
	1195, 76408, -1000, 16886, 76408, 62226, 16886, 62226, 2290, 2286,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 942, -1000,
	1369, 1647, -1000, 488, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1950, -1000, -27, 24697, 1819, -1000, -1000,
	62226, -8, 32557, 32557, 5514, 4665, 32557, 35455, 35455, -1000,
	32557, 4077, -1000, -1000, -1000, -1000, -1000, 2207, 484, 32557,
	87059, 5429, 4649, -1000, 307, 9079, 566, -1000, 32557, -1000,
	306, 24214, -1000, 85443, -38, -88, -1000, 11720, -176, -89,
	-1000, -1000, 699, -1000, 2484, -1000, 32557, 85530, 1933, 1656,
	1372, 1227, 2814, 2831, 14074, -1000, 45666, 853, 1592, -1000,
	-1000, 2814, 769, -1000, -1000, -1000, 769, -1000, -1000, 2814,
	-1000, 2814, 83652, -1000, -1000, -1000, -1000, 87059, 87059, 32557,
	32557, -1000, 32557, 32557, 32557, -1000, -1000, 32557, -1000, -1000,
	2194, 32557, -1000, 87059, 87059, 35455, 35455, 35455, 35455, 35455,
	35455, 35455, 35455, 35455, 35455, 35455, 35455, 35455, 35455, 35455,
	35455, 35455, 35455, 35455, 1964, 35455, 2793, 2793, 2793, -1000,
	2266, 2194, 32557, 32557, 87059, 305, 304, 302, -1000, 32557,
	-176, -1000, -1000, 8292, -1000, 2156, -1000, 32557, -1000, -174,
	-1000, 1999, -1000, -1000, 2156, 2156, -94, 86572, 39205, 39205,
	-1000, 483, 32557, 2031, -1000, -1000, 686, -258, -1000, 749,
	-1000, -1000, -1000, -1000, -1000, 414, -1000, -1000, -1000, 162,
	67694, 67694, 683, -1000, -95, -1000, -1000, -97, -1000, 2734,
	301, 16886, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-56, 1613, 2826, -1000, 2816, 698, 679, 2814, 299, 296,
	293, -56, 76408, -1000, -28, -1000, -1000, -1000, 32557, -1000,
	-1000, 2570, 1022, 1020, -1000, 2419, -1000, 1863, -1000, 887,
	-1000, 1392, -1000, 32557, 32557, 482, 481, 2910, 1486, 2909,
	913, 2418, 1722, 2417, 1722, -1000, -1000, 786, -1000, 86572,
	474, 473, -1000, -31, 1363, 844, -1000, -1000, 32557, 32557,
	67240, -1000, 405, 2586, -13, -1000, 1019, -1000, -1000, -1000,
	-1000, 1866, 1013, -1000, -1000, -1000, 841, -1000, -1000, 32557,
	-1000, -32, 993, -1000, -1000, -1000, 47514, -1000, -1000, 51238,
	797, -1000, 2907, 2903, 2902, 292, -100, -34, 87059, 2728,
	1648, 494, 62226, 766, -1000, 2801, -1000, -1000, -1000, -1000,
	62226, 2727, 2416, 839, -1000, 2900, -1000, 62226, 2410, 1736,
	1861, 1980, 737, 52608, -1000, 839, 1592, -125, -1000, 1380,
	23719, 2580, -102, -1000, -1000, -1000, 852, 45208, 39205, 32557,
	2896, -105, -1000, -1000, -1000, -1000, -1000, 187, -1000, -1000,
	-1000, -1000, 66786, 66786, 51238, 51238, 51238, 797, 76408, 76408,
	53516, -1000, 472, 76408, 76408, 471, -1000, 76408, 76408, 2892,
	51238, -1000, 76, -1000, 1603, 62226, 13606, -1000, -1000, -1000,
	-1000, -1000, 838, -1000, -1000, 1504, 1737, 1504, 1354, 1336,
	-1000, 1646, -1000, -1000, -1000, -1000, 2073, 2583, 16886, 2702,
	7087, 32557, 32557, 3978, 4230, 867, 7087, 32557, 32557, 87059,
	6499, -107, 32557, 32557, -1000, 32557, 677, 86572, 2796, 32557,
	276, 265, -1000, -1000, -1000, 2803, -1000, -1000, -1000, 86572,
	32557, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 264, -1000,
	160, -1000, -1000, -1000, 81402, -1000, 32557, 263, 262, -1000,
	-1000, 259, 257, -1000, 256, 255, 8326, 290, 83435, 83347,
	83130, 86572, 2266, 86572, -1000, -1000, 934, 934, 1183, 1183,
	1183, 1183, 2793, 339, 636, 652, 1267, 1267, 1267, 1136,
	1153, 1153, 1267, 1267, 1267, 2186, 1970, 470, 6386, -1000,
	-1000, 86572, 86572, 245, -1000, -1000, -1000, -176, 231, 2145,
	2652, 86572, -1000, 39205, 2145, 2145, -1000, -1000, 1555, 76408,
	86572, 39205, -1000, 2181, -1000, 12198, -1000, 16886, -1000, -1000,
	-1000, -1000, 2801, -1000, 42467, -1000, 467, -1000, 108, -1000,
	-1000, 674, 2891, 694, 226, -1000, -1000, -1000, -56, 86572,
	76408, 76408, 76408, 2404, -1000, 3820, -1000, 912, 83042, -110,
	-1000, 84875, 32557, 76408, -1000, -1000, 1498, 2082, 943, -1000,
	2623, 76408, -1000, 76408, -1000, -1000, 76408, 76408, 62226, 2361,
	-113, 86572, -69, -1000, 746, -1000, 1181, -1000, 13138, 62226,
	62226, 2353, -115, 16886, -1000, -1000, -87, -1000, -1000, -1000,
	-1000, 2095, -1000, 65410, 1651, 76, -1000, 66328, 2884, 464,
	-1000, 1598, -1000, 673, 1866, 76, 62226, -1000, -1000, 896,
	16886, 62226, 2402, 1983, 737, 52608, -1000, 1066, 2060, -1000,
	-112, -1000, 459, 76, 1592, -1000, -125, 86572, -1000, 742,
	-1000, -1000, -116, -1000, -1000, 221, -1000, 2522, 2521, -1000,
	2184, 32557, 462, 461, 76408, 2520, -1000, -1000, -118, -1000,
	1846, -1000, -1000, -1000, -1000, -1000, 16886, 1333, -1000, 460,
	458, -1000, -1000, -1000, -1000, 2583, 7087, 7087, 32557, 32557,
	32557, 7087, 6499, -126, -1000, 7087, 7087, -176, -1000, -1000,
	85443, -1000, -1000, -1000, 86572, -1000, 12670, 1506, -1000, 82825,
	-1000, -1000, -1000, -1000, -1000, -1000, 32557, 32557, -1000, -1000,
	-1000, -1000, -1000, 35455, 2183, 450, 87059, -1000, -1000, 835,
	32557, 32557, 1999, 835, 835, -1000, -128, -1000, -1000, -1000,
	2801, 108, -1000, -1000, 2883, 16886, 681, -1000, 2880, -1000,
	-1000, -1000, -1000, 76408, -1000, 76408, -1000, 16886, 76408, 2177,
	1854, -1000, -1000, 2007, 449, 35455, 62226, 713, -1000, 2176,
	1575, 32557, 1819, -131, -134, 1848, -1000, -1000, 1841, 32557,
	-1000, 87059, 444, 1722, 1722, -137, -140, -1000, 32557, 984,
	76408, 23236, -1000, 2877, 2586, -1000, -1000, 32557, 982, -1000,
	1488, 2130, -1000, -1000, -1000, -1000, 2006, -1000, -1000, 76408,
	1997, 815, -142, -1000, 741, 738, -1000, 53516, 810, 796,
	-1000, -1000, -1000, 414, 442, 76408, 1725, 440, 16886, -1000,
	737, 52608, -1000, 2486, 1380, -1000, 2493, 76408, 2553, -1000,
	2060, 434, -1000, 797, 433, 429, 2139, 2139, -147, 32557,
	32557, -154, 428, 797, -133, -1000, 691, 547, -1000, -1000,
	62226, 62226, 32557, 32557, -1000, 7087, 7087, 7087, -1000, 218,
	-1000, -1000, 1592, 2649, -1000, 82737, 82520, 6274, 35455, 87059,
	-155, -1000, 76408, 86572, -176, -1000, -1000, -1000, 670, -1000,
	2867, -1000, -1000, 1649, -1000, -1000, -1000, 76408, 1859, -1000,
	910, 32557, 6386, 425, 32557, -1000, -1000, 2086, 2209, 2095,
	421, -1000, -1000, -1000, -1000, -1000, 891, 1412, -1000, -1000,
	86572, 2629, 32557, -1000, -1000, 420, 419, 86572, 418, 736,
	2182, -1000, -1000, -1000, 86572, 417, 810, -1000, 1531, 1651,
	416, -1000, -1000, 1693, 2066, -1000, 66328, 36406, 36406, 217,
	2724, 796, -1000, 2788, -1000, 2719, 32557, -1000, 62226, 32557,
	1702, 52608, -1000, 1980, -1000, 1106, -156, 76408, 1380, -1000,
	-1000, 51238, 51238, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 891, -157, -162, -1000, 51238, -1000,
	1846, -1000, 76408, -1000, 76408, -1000, -1000, -163, -164, -1000,
	1683, 32557, -1000, -1000, 6274, -169, -1000, -143, -1000, 2717,
	-1000, -1000, -1000, -1000, 2395, 2151, 82432, 1941, 76408, 82215,
	2208, -1000, -1000, 1488, 76408, 2095, 2149, 62226, 908, 16886,
	-175, 1504, 1504, 32557, 22753, 1515, 32557, 1693, 62226, 76408,
	-1000, 2614, -1000, 2518, -1000, -1000, -1000, 2095, 76, -1000,
	-1000, 76, -182, 896, -184, 62226, -1000, 1983, 1157, -1000,
	852, -1000, -1000, -185, -200, 1575, 891, -1000, -201, -1000,
	-202, -209, -1000, -1000, 216, 33523, 33523, 33523, -176, -1000,
	76408, 415, 2339, 837, -1000, 1694, 1479, 25, 915, -1000,
	-1000, 2176, -210, -1000, 829, 414, -1000, 32557, -1000, 891,
	-217, -1000, 877, -219, -1000, 842, -225, -1000, 2178, -1000,
	-227, -1000, 410, -230, -1000, -1000, 1883, -1000, 1488, 815,
	-1000, 891, 401, 1575, 397, -1000, 45208, -1000, 797, 797,
	2095, 1575, 797, -1000, -1000, -1000, 2479, -1000, 36874, 1708,
	1334, 84567, 2479, 2479, -1000, -1000, 76408, 2680, -1000, 1701,
	1696, 1259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2676, 1941, 86572, 2095, -1000, 1504, 2127, -1000, 1504, 2169,
	-1000, 1487, -1000, 76408, -1000, 76408, 1277, 1257, 2841, 810,
	1693, 1575, 32557, 2095, 32557, -207, -1000, -1000, 1488, 2095,
	-1000, -1000, 1381, 2751, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 733, -1000, 2500, -1000, 936, 1749, 1749, 726,
	1694, -1000, -1000, 379, -1000, 377, -1000, -232, -1000, -1000,
	2840, -1000, 1693, -1000, 2095, -233, 1488, -240, -1000, -1000,
	1488, 1254, -1000, -1000, 1581, 33040, 32557, -1000, 2766, -1000,
	-1000, 2019, -1000, 32557, 2176, 32557, 32557, 1720, -1000, -1000,
	1488, 891, 850, 1575, -1000, -1000, -1000, -1000, 86572, -1000,
	-1000, -1000, 86572, -1000, -241, -247, -1000, -1000, -1000, 850,
	1575, -1000, 2839, 2095, 1488, 981, -1000, 2095, -1000, 1488,
	-1000, 375, 1488, 850, 32557, 850, -1000, -248, -1000, 1488,
	-1000,
}
var sqlPgo = [...]int{

	0, 3548, 3547, 3544, 3543, 3542, 3540, 3539, 3538, 3536,
	3534, 3531, 3530, 3529, 3528, 3525, 3524, 3519, 3517, 3516,
	3515, 3514, 3512, 3511, 3510, 3509, 3508, 3507, 3506, 3504,
	3503, 3502, 3501, 3499, 3498, 3497, 3495, 3494, 3493, 3483,
	3482, 3480, 3479, 3476, 3470, 3468, 3466, 36, 3455, 3453,
	3449, 3446, 3438, 3434, 3433, 3431, 3430, 3429, 3421, 3417,
	3413, 3412, 3411, 3409, 3405, 56, 3402, 235, 3399, 3398,
	3394, 3390, 3387, 3386, 3385, 3384, 3383, 234, 3382, 127,
	3380, 3378, 3377, 3376, 3375, 232, 3373, 3371, 3370, 3368,
	3367, 3366, 3365, 3364, 164, 211, 3363, 475, 3360, 3358,
	3356, 3355, 3350, 3347, 3341, 3339, 3337, 3335, 218, 3333,
	231, 3331, 3329, 3328, 3327, 3326, 3325, 3324, 3323, 3322,
	3321, 3320, 3319, 3318, 3317, 3316, 3314, 3313, 3311, 3310,
	3309, 3308, 3306, 3305, 3304, 3302, 3299, 3296, 3295, 237,
	158, 3290, 3289, 230, 223, 3286, 3279, 3278, 3277, 136,
	105, 102, 180, 3276, 100, 41, 3275, 14, 197, 215,
	7006, 201, 3274, 3273, 3270, 210, 161, 3269, 200, 3268,
	3266, 3265, 3263, 77, 61, 149, 141, 139, 138, 146,
	3262, 3258, 73, 68, 33, 34, 3257, 3256, 3254, 2007,
	96, 3252, 225, 202, 134, 3251, 3247, 3246, 1021, 3245,
	3244, 150, 67, 101, 46, 95, 3243, 117, 25, 3242,
	145, 86, 3241, 131, 76, 31, 6706, 4167, 3237, 89,
	240, 74, 212, 188, 179, 133, 190, 173, 142, 959,
	3236, 214, 3235, 80, 125, 3234, 3233, 3231, 66, 162,
	84, 3230, 3223, 43, 4, 5, 2, 132, 11, 92,
	15, 3220, 13, 3216, 3215, 3210, 3209, 26, 137, 3205,
	119, 63, 3203, 20, 3202, 107, 175, 3201, 191, 108,
	3200, 3199, 220, 172, 156, 3196, 18, 187, 3195, 3192,
	3188, 3187, 3186, 115, 23, 99, 3185, 3184, 111, 199,
	160, 3182, 40, 3181, 140, 78, 114, 236, 104, 184,
	87, 192, 147, 195, 3180, 3176, 3175, 148, 3173, 3171,
	181, 113, 3170, 3169, 166, 238, 28, 58, 196, 60,
	155, 122, 3168, 168, 3167, 3165, 3163, 239, 153, 170,
	6, 17, 71, 91, 29, 12, 198, 120, 219, 83,
	3162, 3786, 1916, 1885, 37, 157, 93, 53, 98, 123,
	228, 52, 3161, 3160, 128, 3159, 3158, 3157, 3156, 151,
	3155, 3154, 3150, 110, 135, 208, 3149, 124, 64, 10,
	126, 204, 229, 94, 178, 167, 216, 3147, 152, 3146,
	38, 143, 3145, 165, 213, 174, 3144, 118, 116, 3140,
	205, 3139, 3137, 3136, 3135, 3134, 3132, 3131, 75, 194,
	3130, 112, 3129, 3127, 3125, 227, 159, 3124, 226, 669,
	185, 79, 62, 3123, 69, 121, 3122, 163, 55, 3121,
	176, 32, 0, 7652, 5524, 7526, 3119, 3591, 3118, 177,
	109, 3117, 3116, 3115, 88, 3114, 70, 3113, 3112, 39,
	3111, 16, 8, 9, 21, 19, 279, 97, 3110, 3109,
	90, 103, 129, 3108, 233, 186, 3105, 3103, 3102, 72,
	3101, 30, 3100, 27, 3099, 3096, 35, 7, 22, 3094,
	3091, 206, 3086, 203, 3084, 3065, 2746, 106, 3064, 3060,
	222, 82, 3059, 221, 3058, 2687, 144, 171, 3051, 3050,
	3045, 3043, 217, 3041, 3038, 24, 3037, 1, 3036, 3034,
	169, 3, 2614, 3032, 3031, 57, 3029, 3028, 154,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 11, 11, 7, 7, 8,
	8, 8, 35, 35, 9, 9, 9, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 14, 14,
	25, 25, 15, 15, 27, 27, 16, 16, 28, 28,
	480, 480, 19, 30, 20, 31, 13, 481, 481, 481,
	481, 24, 21, 32, 22, 22, 22, 22, 22, 153,
	153, 153, 153, 18, 18, 26, 26, 176, 176, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 479, 479, 178, 178, 177, 172, 172, 482, 482,
	179, 179, 179, 181, 181, 36, 36, 36, 93, 93,
	93, 94, 94, 95, 95, 154, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 81, 81, 420, 420, 421,
	421, 149, 149, 150, 150, 150, 150, 151, 151, 152,
	152, 152, 50, 38, 38, 38, 38, 38, 38, 38,
	39, 39, 39, 39, 40, 40, 40, 40, 40, 40,
	41, 41, 41, 41, 41, 41, 48, 48, 48, 48,
	140, 140, 51, 51, 51, 51, 51, 51, 51, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 490,
	490, 491, 491, 492, 492, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 62, 62, 259, 259, 232, 232, 63, 63,
	63, 64, 64, 65, 65, 52, 52, 473, 473, 273,
	273, 382, 382, 67, 67, 293, 293, 68, 68, 68,
	68, 68, 68, 69, 69, 69, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 75, 75,
	75, 76, 76, 76, 74, 74, 74, 72, 72, 72,
	71, 71, 71, 73, 73, 73, 274, 274, 77, 77,
	77, 77, 77, 77, 77, 77, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 384, 384, 78, 78, 78, 352, 352, 82, 82,
	82, 308, 308, 83, 83, 83, 83, 83, 84, 84,
	84, 84, 96, 96, 96, 96, 476, 476, 266, 266,
	192, 192, 192, 192, 89, 89, 89, 89, 90, 90,
	90, 91, 91, 145, 145, 102, 102, 102, 102, 102,
	101, 101, 101, 101, 101, 101, 42, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	47, 47, 104, 104, 486, 486, 106, 103, 103, 103,
	105, 105, 105, 105, 107, 108, 108, 108, 108, 108,
	108, 108, 108, 109, 109, 414, 414, 282, 282, 412,
	412, 428, 428, 413, 413, 236, 236, 236, 236, 236,
	237, 237, 237, 419, 419, 419, 419, 419, 419, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 146, 146, 147, 148, 148, 148, 148,
	129, 129, 129, 139, 139, 139, 139, 139, 139, 139,
	132, 132, 132, 119, 119, 111, 111, 111, 111, 111,
	115, 115, 115, 115, 115, 115, 115, 115, 112, 112,
	121, 121, 121, 121, 121, 116, 116, 118, 118, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 113, 113,
	113, 113, 123, 123, 123, 123, 315, 315, 315, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 135,
	135, 135, 135, 135, 135, 366, 366, 130, 130, 130,
	130, 134, 134, 134, 134, 298, 298, 127, 127, 127,
	128, 128, 128, 133, 133, 131, 131, 136, 136, 136,
	136, 114, 114, 114, 494, 494, 494, 137, 137, 126,
	126, 138, 138, 138, 138, 138, 138, 138, 138, 125,
	125, 125, 124, 124, 124, 124, 117, 474, 474, 471,
	471, 471, 471, 471, 471, 471, 472, 472, 475, 475,
	87, 87, 87, 57, 57, 57, 58, 58, 157, 157,
	157, 157, 244, 244, 244, 244, 155, 155, 156, 156,
	59, 59, 495, 495, 495, 483, 483, 483, 484, 484,
	484, 484, 484, 484, 238, 238, 239, 239, 333, 333,
	333, 333, 333, 242, 242, 242, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 245, 245, 180, 180, 180,
	248, 249, 249, 246, 246, 247, 247, 247, 251, 251,
	250, 253, 253, 252, 332, 435, 435, 437, 437, 437,
	437, 437, 437, 437, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 496, 433, 433, 433, 434,
	429, 429, 430, 430, 430, 430, 430, 240, 240, 241,
	241, 241, 241, 431, 432, 264, 264, 369, 436, 436,
	438, 438, 440, 497, 497, 497, 497, 497, 497, 498,
	498, 498, 331, 331, 330, 330, 257, 257, 441, 441,
	441, 441, 442, 442, 442, 442, 442, 445, 444, 443,
	443, 443, 443, 443, 61, 61, 61, 295, 295, 294,
	294, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 142, 142, 195, 195,
	56, 56, 56, 12, 12, 12, 485, 485, 485, 60,
	60, 60, 60, 194, 194, 194, 194, 194, 194, 478,
	478, 477, 477, 196, 196, 500, 500, 66, 66, 66,
	66, 66, 66, 55, 55, 55, 55, 55, 501, 501,
	316, 316, 314, 314, 313, 313, 263, 263, 368, 199,
	199, 173, 173, 173, 23, 17, 17, 33, 33, 34,
	34, 29, 29, 487, 487, 488, 488, 88, 88, 92,
	92, 92, 100, 100, 141, 141, 141, 141, 141, 141,
	141, 37, 37, 37, 37, 49, 49, 49, 49, 98,
	503, 503, 503, 99, 99, 99, 502, 502, 193, 193,
	327, 327, 328, 328, 504, 504, 329, 329, 329, 329,
	187, 186, 188, 188, 54, 54, 54, 182, 182, 183,
	183, 184, 184, 185, 185, 505, 505, 85, 85, 85,
	144, 144, 231, 231, 231, 323, 323, 323, 258, 258,
	205, 205, 326, 326, 324, 324, 324, 324, 292, 292,
	292, 143, 143, 271, 271, 284, 284, 285, 285, 379,
	379, 286, 97, 97, 160, 160, 158, 158, 158, 158,
	158, 158, 158, 158, 165, 165, 166, 166, 167, 167,
	168, 169, 169, 169, 169, 275, 275, 170, 170, 170,
	159, 159, 159, 161, 161, 161, 161, 161, 161, 161,
	164, 164, 164, 164, 171, 171, 171, 163, 163, 452,
	452, 452, 454, 454, 455, 451, 451, 453, 453, 499,
	499, 297, 297, 297, 255, 256, 254, 254, 261, 261,
	260, 262, 262, 367, 367, 367, 174, 174, 174, 289,
	289, 289, 289, 290, 290, 319, 319, 317, 317, 317,
	317, 318, 318, 320, 320, 320, 321, 321, 322, 322,
	288, 288, 348, 348, 162, 162, 162, 268, 268, 268,
	269, 269, 339, 339, 339, 339, 339, 339, 340, 340,
	338, 338, 338, 338, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 371, 372, 372, 270, 270, 373, 325,
	325, 469, 469, 469, 470, 470, 365, 365, 374, 374,
	374, 374, 374, 374, 363, 363, 364, 364, 380, 381,
	381, 301, 301, 301, 301, 299, 299, 302, 302, 302,
	302, 300, 300, 375, 375, 375, 375, 291, 291, 376,
	376, 376, 376, 377, 334, 335, 335, 385, 385, 385,
	385, 401, 267, 267, 267, 267, 267, 506, 506, 386,
	386, 386, 386, 386, 386, 386, 399, 399, 399, 399,
	399, 399, 399, 399, 402, 402, 402, 402, 402, 402,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 390, 390, 390, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 400, 400, 400, 400, 400, 391,
	391, 396, 396, 397, 397, 397, 392, 393, 398, 398,
	398, 398, 507, 507, 404, 404, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 388, 388, 388, 395, 395,
	395, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 309, 309, 311, 311, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 343, 343, 343, 343, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 446, 446, 446, 446, 446, 446, 446, 446,
	449, 449, 450, 450, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 456, 456, 457, 457, 459, 459, 460,
	460, 461, 462, 462, 462, 463, 464, 464, 458, 458,
	465, 465, 465, 465, 466, 466, 467, 467, 467, 467,
	467, 468, 468, 468, 468, 468, 354, 354, 355, 355,
	361, 361, 361, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 197,
	197, 197, 197, 197, 280, 280, 278, 278, 278, 281,
	281, 279, 279, 277, 277, 276, 276, 351, 351, 349,
	349, 353, 353, 303, 303, 403, 403, 403, 403, 403,
	403, 403, 403, 304, 304, 304, 312, 305, 305, 306,
	306, 306, 306, 306, 345, 346, 307, 307, 307, 347,
	347, 356, 360, 360, 359, 358, 358, 357, 357, 336,
	336, 337, 337, 287, 287, 508, 508, 283, 283, 378,
	378, 378, 378, 234, 234, 272, 272, 233, 233, 226,
	226, 227, 227, 227, 227, 265, 265, 362, 362, 405,
	405, 406, 406, 407, 407, 408, 408, 409, 410, 411,
	350, 350, 215, 214, 202, 203, 213, 212, 211, 201,
	204, 208, 209, 210, 206, 207, 221, 220, 219, 225,
	217, 218, 383, 200, 228, 228, 229, 229, 229, 230,
	230, 230, 230, 198, 198, 222, 222, 223, 224, 224,
	216, 216, 216, 189, 189, 189, 190, 190, 191, 191,
	418, 418, 416, 416, 416, 417, 417, 417, 417, 415,
	415, 415, 415, 415, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 424, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 427, 427,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	1, 3, 4, 6, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 6, 7, 2, 5, 6,
	2, 1, 3, 1, 3, 1, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 6, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 6, 6, 6, 6,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 3,
	3, 4, 3, 4, 7, 4, 4, 4, 3, 5,
	7, 4, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 2, 6, 4, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 2, 1, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 4, 3, 5, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 1, 2, 0,
	3, 3, 2, 3, 6, 3, 11, 14, 0, 2,
	4, 3, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 1, 9, 10, 6, 5,
	3, 1, 5, 8, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	11, 7, 5, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 6, 7, 6,
	5, 3, 4, 16, 19, 15, 18, 4, 0, 2,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 2, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 6, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 2, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 2, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 497, -79, -50, -48, -82, -83, -68,
	-84, -78, -96, -100, -88, -102, -141, -146, -147, -148,
	-3, -36, -38, -51, -67, -69, -77, -86, -85, -87,
	-89, -93, -92, -81, -42, -97, -101, -110, -142, -143,
	-144, 90, 74, 135, 114, 120, 172, 320, 352, 362,
	346, -105, -106, 381, -37, -49, -99, -98, 67, 115,
	341, -4, -12, 27, 42, -39, -40, -41, 58, -56,
	-53, -62, -489, 92, -453, -70, -73, -493, 125, 141,
	190, 310, -90, -91, 348, 350, 142, -44, -43, 136,
	-158, -160, -103, -104, -145, -111, -112, -113, -114, -115,
	-116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -131, -127, -128, -129, -130, -132, -133, -134, -135,
	-136, -137, -138, 385, 433, 43, 395, 76, 128, 356,
	21, -5, -6, -7, -8, -9, -10, -11, -52, -54,
	-55, -57, -58, -59, -66, -60, -61, -452, -71, -72,
	-74, -75, -76, 347, -161, -159, 494, 447, -14, -19,
	-20, -15, -16, -18, -21, -17, -25, -30, -31, -27,
	-28, -26, -29, -32, -33, -34, -35, -23, -24, -13,
	-22, 465, 473, -164, -162, -163, -171, 369, 455, 410,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	-217, -222, -223, -224, -216, -189, -424, -427, 4, -422,
	-425, 147, 199, 276, 21, 22, 23, 24, 25, 27,
	28, 39, 41, 40, 42, 43, 46, 49, 50, 48,
	53, 54, 55, 56, 57, 58, 59, 62, 67, 68,
	73, 74, 75, 76, 77, 78, 79, 85, 82, 83,
	84, 87, 89, 90, 91, 93, 95, 96, 104, 105,
	106, 107, 108, 109, 114, 115, 118, 113, 117, 120,
	123, 124, 125, 127, 129, 130, 132, 133, 135, 136,
	139, 137, 416, 138, 140, 141, 142, 143, 153, 154,
	155, 157, 158, 160, 162, 166, 167, 170, 171, 173,
	177, 179, 180, 181, 182, 183, 189, 190, 192, 193,
	194, 195, 200, 196, 201, 205, 208, 207, 209, 210,
	211, 202, 216, 220, 221, 222, 224, 225, 228, 229,
	230, 231, 232, 235, 234, 237, 240, 241, 244, 245,
	246, 249, 250, 251, 252, 254, 255, 258, 256, 259,
	257, 261, 262, 263, 260, 266, 264, 265, 268, 269,
	274, 272, 270, 271, 278, 281, 187, 283, 284, 286,
	287, 288, 304, 291, 292, 293, 296, 297, 300, 303,
	305, 306, 307, 308, 309, 310, 311, 313, 314, 318,
	320, 321, 323, 325, 326, 327, 328, 329, 330, 331,
	333, 334, 336, 337, 338, 339, 340, 341, 346, 343,
	344, 345, 347, 348, 349, 350, 352, 354, 355, 356,
	357, 359, 361, 382, 383, 397, 362, 363, 364, 365,
	366, 367, 368, 372, 376, 373, 374, 375, 370, 371,
	377, 378, 379, 381, 384, 385, 387, 388, 390, 391,
	393, 394, 395, 396, 398, 401, 402, 403, 404, 399,
	400, 409, 407, 408, 411, 412, 413, 414, 415, 417,
	419, 427, 428, 430, 433, 434, 435, 425, 437, 438,
	441, 442, 443, 446, 444, 445, 451, 447, 449, 452,
	453, 454, 460, 459, 466, 467, 469, 470, 471, 34,
	44, 45, 47, 51, 63, 64, 65, 69, 110, 111,
	134, 144, 145, 156, 168, 169, 174, 176, 184, 185,
	186, 206, 212, 214, 218, 238, 280, 282, 298, 302,
	315, 316, 317, 319, 332, 358, 389, 405, 420, 421,
	422, 423, 429, 431, 455, 456, 457, 461, 468, 289,
	-210, 2, -189, -189, 320, 26, 2, 26, 314, 371,
	412, 414, 2, -476, -266, 2, 26, -192, -189, 92,
	172, 369, -210, 2, -476, -266, 24, 2, -189, 2,
	-193, 2, 362, -189, 497, 87, 246, 68, 358, 378,
	-108, 428, -107, 420, 364, -109, -414, 2, 266, -189,
	497, 497, 497, 26, -200, -189, 410, 199, 106, 408,
	497, 2, 410, 307, 459, 370, 106, 329, 199, -485,
	354, 175, 448, 424, -471, 2, 4, -425, -422, -227,
	-226, 410, 106, -224, -216, 487, -223, 497, 497, 497,
	2, 221, 222, 328, 327, 378, 379, 497, 497, 2,
	25, 61, 86, 89, 112, 143, 163, 166, 294, -490,
	255, 304, 326, 377, 409, 417, 430, -484, 396, 62,
	364, -483, -485, 435, 123, -313, 106, 246, 171, 442,
	414, 412, 440, 118, 205, 445, 444, 497, 25, 61,
	71, 89, 123, 143, 163, 166, -492, 304, 326, 361,
	364, 377, 409, 417, 435, 430, 2, 459, 370, 410,
	199, 106, -485, 324, -79, 2, 494, 30, 29, 381,
	-154, 410, 215, 2, -189, 221, 222, 2, 497, 497,
	164, -471, 2, 221, 222, 2, 215, 2, 62, 366,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 2, -139,
	378, 396, 181, 42, 68, 26, 325, 73, 308, 107,
	173, 199, 200, 229, 86, 87, -315, 41, 222, 221,
	-366, 411, 365, 371, 407, 362, 428, 92, 449, 355,
	471, 329, 330, 137, 4, 106, 266, 380, 420, 246,
	78, -499, 2, 410, -502, 2, 428, 428, 2, -502,
	2, -502, 2, -502, 2, -503, 428, 468, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, -159, -161, -160, 497, 497, 497, 497, 497,
	-139, 378, 2, 68, 26, -260, -261, 439, 213, 131,
	295, -158, -160, 2, -452, -412, 2, -341, -428, -343,
	485, 486, 478, 275, 472, -354, 112, 440, 289, -427,
	-344, -356, 134, 358, -281, 8, 9, 5, 6, 7,
	-198, -387, -350, 432, 146, 279, -230, 498, 10, 494,
	-449, -160, -355, 35, 176, 60, -416, -229, -389, -397,
	-393, -394, -402, -506, 49, 56, 55, 417, 265, 372,
	373, 390, 374, 375, 46, 451, 196, 286, 288, 207,
	4, 214, -228, -216, -446, -447, -422, -423, 206, 212,
	208, 389, 209, 210, 211, 45, 332, 157, 158, 156,
	124, 111, 110, 282, 51, 50, 47, 456, -398, 108,
	420, 421, 422, 423, 168, 169, 224, 225, -189, -424,
	71, 98, 99, 97, 102, 101, 248, 247, 103, 100,
	380, 448, 61, 34, 184, 185, 218, 280, 186, 69,
	-448, 400, 94, 165, 204, 188, 217, 219, 223, 239,
	242, 267, 273, 277, 299, 301, 353, 386, -507, 457,
	144, 145, 302, 317, 405, 429, 431, 174, 238, 63,
	64, -454, 333, -455, -210, -454, 497, 497, 499, 497,
	-254, -255, -256, 2, 26, 121, 494, 2, -370, 2,
	-371, -375, -160, 233, -374, 494, -372, 492, -217, 290,
	-450, 359, -446, -447, -198, -216, -229, 4, -257, 494,
	496, 106, 410, 72, 199, -308, 494, -189, 26, 289,
	424, 499, -352, 494, 289, 164, 292, -189, 2, 2,
	382, 2, 494, -108, 65, 428, 40, 378, -328, 2,
	-329, -186, -187, -188, -380, 220, 323, 331, 474, 471,
	-412, -486, 164, 477, 424, -412, -282, 496, 2, 2,
	2, 2, 2, -375, 184, -217, 2, -214, -415, 4,
	-422, -425, -423, -426, 71, -424, 26, 29, 30, 31,
	33, 35, 36, 37, 38, 52, 60, 61, 66, 70,
	72, 81, 86, 92, 97, 98, 100, 99, 101, 102,
	103, 112, 116, 119, 121, 122, 126, 128, 131, 146,
	148, 161, 163, 164, 172, 175, 178, 191, 203, 213,
	215, 233, 236, 243, 247, 248, 275, 279, 285, 289,
	290, 294, 295, 312, 322, 335, 351, 369, 380, 392,
	406, 410, 418, 424, 426, 432, 439, 440, 448, 450,
	458, 462, 463, 464, 465, -427, 2, -375, 184, 2,
	-219, 184, -375, -222, 2, -201, -189, 2, -213, -415,
	2, -233, 184, -217, -218, -222, -420, 184, 2, -418,
	10, -417, 5, 4, -422, -425, -423, -94, -420, 494,
	424, 499, -272, -226, -227, -265, -189, 496, -341, 2,
	-97, 2, -341, 184, 2, -97, 184, 2, -341, 184,
	2, -97, 184, 2, 2, 2, 430, 2, 89, 184,
	-189, 410, 105, 2, 345, -491, 361, 434, 459, 2,
	2, 2, 2, 2, 2, 410, -206, 2, -189, 161,
	-225, 184, 2, -189, 370, -500, 333, -420, 184, 2,
	-220, -222, -220, 199, 216, -201, 184, 2, 414, 412,
	414, 412, 164, 2, 215, 2, 215, 2, -376, 2,
	-377, -371, -217, 492, 2, 2, 2, 2, 2, 184,
	-189, 410, 105, 2, 231, 2, 2, 2, 2, 2,
	2, 2, 2, 2, -274, 184, 2, -217, -274, 184,
	2, -274, 184, 2, -314, 2, 81, -201, 184, 2,
	-421, 184, 2, -420, -384, 2, -383, -417, 455, -79,
	494, -79, 494, 378, 494, -420, -217, -217, -341, -97,
	-95, -94, 164, -341, -97, -154, 161, 2, 106, 410,
	-139, 2, 161, 450, 2, 8, 2, -420, 365, 330,
	153, 2, 382, 2, 383, 68, -315, 471, 68, 164,
	2, 164, 2, -298, 2, 465, -474, 2, 289, 164,
	2, 164, 2, 164, 2, 164, 2, 164, 2, 327,
	379, 222, 2, -97, 462, -341, 462, 2, 427, 230,
	138, 164, -298, 2, 164, 2, 164, 2, 5, 2,
	397, 2, 220, 323, 397, 2, -217, -494, 2, 410,
	459, 370, 2, 2, 82, 83, 164, 2, 164, 2,
	164, 471, 2, -291, -375, -327, -328, -327, 424, -260,
	-261, -139, 382, 2, -165, -289, -167, 161, -317, -318,
	-168, 243, 148, 285, -169, -297, 26, 121, -297, -297,
	54, 495, 495, 11, 12, 70, 39, 485, 486, 487,
	488, 159, 489, 490, 483, 484, 482, 475, 476, 480,
	226, 227, 88, 479, 477, 80, 253, 360, 149, 150,
	151, 152, 342, 197, 32, 198, 14, 15, 16, 31,
	294, 242, 472, 188, 386, 478, 17, 18, 19, 217,
	219, 277, 44, 191, -197, -235, -341, -341, -341, -341,
	-341, 301, 494, -287, -336, 492, -160, 494, 494, 494,
	5, -411, 8, -160, -341, -354, 495, -279, 494, -160,
	-354, -349, 494, 358, 492, 494, -357, -341, 5, 494,
	496, -456, 466, -391, 494, 319, -390, 494, -390, -390,
	460, -388, 494, 473, 467, 494, -388, 494, 494, 494,
	494, 161, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 460, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 499, -454, -257,
	494, -283, -378, -341, 487, -283, -283, 289, -276, -341,
	94, -301, 223, 267, 165, 239, 353, 204, -338, 498,
	-338, -365, 473, -160, -372, -216, -160, -374, 494, -370,
	-365, -80, -411, -67, -77, -85, -97, -110, -143, -144,
	487, -217, 494, 164, 494, 496, 164, -265, -415, -201,
	-217, -228, -229, -233, 120, -276, -471, -265, -192, 36,
	-351, -385, -386, -387, -396, -392, -395, -400, 315, 316,
	49, 56, 55, 417, 265, 372, 373, 390, 374, 375,
	46, 451, 196, 286, 288, 207, 4, 47, 456, -398,
	214, 337, 338, 336, 340, 339, 206, 212, 208, 389,
	209, 210, 211, 45, 332, 157, 158, 156, 124, 111,
	110, 282, 51, 50, 108, 420, 421, 422, 423, 168,
	169, 224, 225, 457, 400, 63, 64, -471, -265, 161,
	-414, -276, 36, -328, 2, 112, -418, 40, -504, 499,
	241, -237, 252, 274, 180, 290, 469, 283, -419, 5,
	4, -350, -362, 112, 246, 214, -405, -407, 8, -406,
	9, -408, 485, 486, -413, -412, 96, 496, -415, -176,
	343, -175, 23, 27, 125, 453, 139, -247, 201, 307,
	134, 393, 443, -480, -481, 363, 415, 416, 84, 283,
	343, 134, -294, -296, 36, 104, 269, 303, 57, 194,
	257, 258, 395, 461, 134, 343, -481, 343, -481, -178,
	393, 443, -480, -481, 363, 343, -177, -247, 134, 498,
	-477, -451, 465, 134, -381, -380, -421, -94, -272, 499,
	499, -415, 487, 134, 134, 134, 134, 2, 2, 275,
	2, 2, 2, 166, -483, -492, 2, 2, 2, -217,
	184, -259, 289, -473, -273, 410, -217, 275, -219, 184,
	2, -222, 459, -477, 275, 36, 494, 2, -314, 2,
	199, -451, 275, -376, -231, -217, -371, -231, 381, -210,
	36, -338, -338, 134, 2, 2, 2, -189, -179, 499,
	59, 349, 134, -179, 134, -179, 134, -234, 184, -233,
	-179, 134, 499, 134, 495, 499, -384, -384, -420, -152,
	465, 164, 92, 494, 494, -154, -381, 499, -95, -420,
	-473, -201, 2, -217, 2, 410, 224, -152, -420, -420,
	-420, -414, 26, 383, 2, 327, 379, 83, 383, 2,
	-217, 410, 106, 199, 74, -475, 161, -472, 354, -471,
	-217, 106, -217, 106, -217, 106, -217, -217, 2, 2,
	2, 2, 79, 79, 161, 2, 427, 2, 427, 2,
	-189, -189, -189, 241, -217, 161, 410, 199, 410, 199,
	106, 410, -179, 499, -193, -165, -289, -414, -290, -289,
	-166, -165, -168, 161, 331, 444, 269, 384, 228, -318,
	-317, 26, -341, -322, 155, 268, -341, -320, -343, 485,
	486, -406, -408, -275, 283, -159, -159, -159, -262, -367,
	-341, 322, 199, -401, -385, -385, -215, -415, 420, -341,
	-341, -341, -341, -341, -341, -341, -341, -341, -341, -341,
	-341, -341, -341, -341, -341, -341, -341, -341, -341, -341,
	-341, -341, -341, -341, -341, -341, -341, -341, -341, -341,
	-341, -341, -341, -341, 242, 188, 386, 44, 191, -341,
	424, -341, -341, -341, -341, 264, 275, 279, 432, 146,
	441, 121, 283, -508, 406, 38, -347, -160, -280, 494,
	-361, 33, 392, 26, -354, 494, 2, -336, -341, -337,
	-277, -276, -276, 495, 458, 26, 121, 487, 2, 495,
	499, 36, 495, -341, -277, -353, -349, -276, -360, -359,
	462, -309, -310, 470, 260, 109, 182, 259, -311, 368,
	-409, 8, -415, 487, -457, 154, 175, 8, -409, -409,
	420, 420, -409, -409, -409, -399, 315, 244, 316, 170,
	263, 261, 262, 169, -399, 494, 495, 2, 495, 2,
	495, -341, 2, 495, -341, 2, 495, -341, 2, 495,
	-341, 2, 495, 2, -341, -341, -341, -341, -341, -341,
	-341, -276, -303, 2, -403, -276, 4, 470, 260, 109,
	182, 259, 368, 5, -303, 2, -304, 2, -341, -276,
	-305, -342, -343, 485, 486, 478, -354, -306, 2, -341,
	-277, -341, 52, 236, 426, -307, -341, 164, -276, -276,
	2, -276, 2, -455, 36, -276, -268, 499, 164, 36,
	4, -268, -268, 494, 495, 499, -302, 179, 256, 251,
	-302, -370, -301, 223, -299, 299, -299, -299, -365, -202,
	492, 500, -415, -365, -364, -363, 36, -210, 296, -365,
	-365, 496, 495, -364, 493, -469, 494, 497, 497, 497,
	497, 497, -217, 494, -276, -415, 398, 495, 496, 217,
	217, 217, 217, 359, 495, 424, 465, -79, 291, 495,
	499, -267, 35, 492, 2, 2, -404, 460, 494, 494,
	-310, 494, 164, -266, -486, 495, 428, -329, -236, 331,
	391, 344, 376, 408, 8, 9, 8, 9, 499, -415,
	499, -487, 86, 424, 72, -332, 184, 72, -429, -204,
	86, -430, -189, 66, 440, 322, 163, 132, -487, 86,
	322, -487, 86, 86, 381, 396, 54, -375, 39, 39,
	26, -97, 237, 164, 471, 410, 199, 424, -375, -296,
	-385, 104, 257, 258, 54, -410, -405, 485, 486, -410,
	54, -410, -410, -410, 465, -219, -375, 424, 424, 499,
	39, 39, 26, -97, 237, 164, 424, -233, -202, -478,
	-194, 93, 270, 250, 271, -195, -196, 309, 452, -420,
	-149, 195, 495, -381, -226, -189, 496, -341, -97, -341,
	-97, 134, 2, -500, 231, 494, -240, 275, 164, -265,
	-382, 215, 499, -273, 134, -295, -294, 275, -221, 184,
	2, -217, 134, 494, 129, 329, 2, -203, 184, -190,
	-189, -314, -182, 413, 134, -293, 450, -323, -97, 494,
	112, 36, -323, -284, -285, -379, -286, -204, 494, -210,
	-189, 2, -217, -274, -274, -274, -179, 499, 134, -201,
	-420, -421, -79, -383, 495, 495, 495, -151, 293, -150,
	-189, 5, -154, 450, -239, -333, -332, -433, -434, -429,
	242, 199, 440, 216, 147, -258, -205, -204, 105, -152,
	-94, -381, -152, -152, -381, -381, -217, 161, -152, -152,
	-152, 2, 2, -298, -217, -201, -233, -217, -265, -265,
	-298, -201, -298, -201, -298, -201, -97, -341, 378, 161,
	161, 496, -298, 329, 106, 410, 307, 199, -217, -233,
	-217, -233, -201, -217, -375, -290, -166, 290, 228, 384,
	-320, -321, -343, 358, 359, -321, 358, 359, 8, 9,
	8, 9, -170, 388, 278, -274, 499, -173, 37, 119,
	228, -217, 471, 130, -341, -341, 424, -508, 406, -347,
	130, -341, 264, 279, 432, 146, 441, 121, 283, 164,
	494, -342, -342, 495, -278, -341, -341, 493, 502, 495,
	-261, 499, -260, -341, -276, -276, 495, 496, -276, -265,
	493, 493, 499, 495, -358, -359, 126, -341, 424, 424,
	424, 424, 494, 495, 496, -462, 300, 494, 494, 495,
	495, 499, 495, 471, 471, 495, 495, 495, 495, 499,
	495, 499, -341, 495, 495, 495, 495, 36, 499, 499,
	499, 495, 499, 499, 499, 495, 495, 164, 495, 495,
	-312, 312, 495, 11, 12, 485, 486, 487, 488, 159,
	489, 490, 483, 484, 482, 475, 476, 477, 80, 253,
	360, 14, 15, 16, 217, 191, -342, -342, -342, 495,
	-345, -346, 164, 161, 36, -307, -307, -307, 495, 164,
	-276, 495, 495, 494, 495, -335, -334, 463, -378, -269,
	2, -370, -212, -415, -335, -335, -276, -341, 223, 223,
	-300, 450, 289, -302, -370, -364, -411, -340, -339, 162,
	37, 119, 272, 187, -364, -210, -257, -364, -364, -415,
	-365, -365, -363, 495, -470, -411, 495, -270, -373, -450,
	-261, 496, -152, -415, -140, 5, 279, -140, -140, -140,
	-265, 24, 313, -385, 492, 493, 8, 494, -409, -409,
	-409, -265, 164, -412, -328, 438, 77, 331, 420, -412,
	-175, 343, -204, -204, -217, 275, -332, 184, -181, 275,
	-385, -211, -189, 494, 494, 228, 228, 450, -204, -211,
	228, 184, -204, 184, -211, -211, -479, 331, 284, -341,
	245, 329, 276, -176, 343, -97, -97, -97, 494, -486,
	450, 120, -217, -233, -217, -221, 343, 273, -228, -410,
	-410, -294, 343, -219, -201, -177, -97, -97, -97, 494,
	-202, -178, 343, -194, -420, 279, 446, -477, -152, 164,
	-149, 487, -189, 459, -189, -238, -241, -239, -204, -157,
	467, 465, 134, -232, -217, 492, -152, -420, -217, -225,
	134, -257, 275, -420, 2, 494, 2, 289, 275, -203,
	184, -183, 127, -505, 477, -201, -335, -269, -292, -326,
	351, 289, -258, 455, -210, -292, -271, 499, 164, 477,
	496, -258, 2, -179, -179, -179, -233, -234, -179, -79,
	-79, -152, 499, 494, 477, 477, 494, -420, -420, 495,
	499, -217, -203, 199, 199, -209, -190, 495, 499, 496,
	494, -152, 164, -45, 465, 410, 498, -298, -298, -298,
	378, 378, -189, -213, -201, -217, -214, -233, 161, 161,
	444, -321, 290, 249, -367, -174, 281, -217, 498, -341,
	-341, 130, 130, -341, -342, -342, -341, 130, 164, 494,
	-341, -351, 31, 31, 495, 499, -337, -341, 495, 458,
	-261, -261, 495, 487, -415, 498, 495, -349, 128, -341,
	418, 260, 182, 259, -311, 259, -311, -311, -409, 5,
	-415, 487, -463, -207, 494, -189, 463, -260, -409, -388,
	-388, -409, -409, 495, -401, -385, -341, -341, -341, -341,
	-341, -341, -345, -341, -401, -385, -342, -342, -342, -342,
	-342, -342, -342, -342, -342, -342, -342, -342, -342, -342,
	-342, -342, -342, -342, -342, 121, 275, 283, -342, -346,
	-345, -341, -341, -385, 495, 495, 495, -276, -79, -288,
	175, -341, -381, 499, -288, -288, 495, -370, -370, 494,
	-341, 223, 493, 499, 501, 477, -257, 496, -363, -364,
	493, 495, 499, 495, 499, -325, 36, 495, -415, 292,
	5, 8, 492, 493, -409, 495, 495, 495, -265, -341,
	424, 424, 134, 275, 452, -435, -430, 132, -341, -263,
	-368, -341, 494, 494, 2, -172, 125, 381, -488, 2,
	450, 134, -179, 134, -179, 469, 494, 494, 424, 465,
	-276, -341, -153, 112, -414, -481, 498, -481, 498, 424,
	424, 465, -276, 424, -420, 279, -421, -152, 2, 2,
	2, 495, 495, 499, -436, 36, 287, 494, 287, -217,
	-63, 465, -380, -411, -219, 36, 134, -477, 2, -217,
	134, 289, 275, -184, 235, -505, -418, -451, -261, -292,
	-283, 276, 85, 495, -335, -285, -269, -341, 2, 495,
	-179, -150, -151, -420, -420, -420, -152, -154, -154, -333,
	-242, 494, -203, -190, 494, -154, -205, 2, -421, -97,
	293, -217, 487, -298, -249, -248, 307, 283, -249, 358,
	358, 290, 155, 232, -173, -202, -341, -341, 130, 31,
	31, -341, -341, -351, 495, -341, -341, -276, 493, 5,
	-341, 495, 495, 8, -341, 495, 496, -464, -189, -341,
	495, 495, 495, 495, 495, 495, 499, 499, 495, 495,
	495, 495, -346, 164, 121, 283, 494, 495, 495, -348,
	178, 54, -370, -348, -348, -300, -265, -370, -339, -202,
	492, -415, -411, -373, 494, 496, 493, 2, 492, 495,
	-204, -204, -332, 134, -437, 86, -439, 70, 147, 92,
	275, 279, 440, 322, 66, 112, 335, -496, 36, 495,
	495, 499, -173, -263, -265, 275, 403, 112, 275, 112,
	105, 435, 73, -204, -211, -265, -265, -217, 140, 495,
	499, 477, 2, 487, 487, -221, -219, 140, 495, -202,
	-245, 202, -204, -434, -431, -432, 322, -438, -440, 147,
	322, -97, -156, -155, -189, 5, 2, 494, -240, 293,
	493, -295, -97, -221, -316, 450, -202, -217, 134, -185,
	234, -505, -418, -182, -319, -317, -324, 494, 289, -97,
	-261, 477, 495, 495, 105, 105, 193, 133, -263, 494,
	494, -265, 105, 495, -46, -47, 199, 86, 311, -214,
	410, 199, 494, 494, -173, -341, -341, -341, 495, -261,
	-415, 487, -458, 307, 495, -341, -341, -342, 164, 494,
	-351, -459, 464, -341, -276, -459, -459, 495, -411, 2,
	492, 2, -332, -211, -215, -208, -189, 147, 184, 279,
	228, 494, -342, -217, 494, 2, -497, 116, 203, -331,
	-498, 91, 404, 192, -368, -174, 495, 495, 279, 279,
	-341, -385, 494, -179, -179, 495, 495, -341, 424, -414,
	90, -412, 2, -481, -341, 424, -246, -247, 191, -436,
	228, -208, 228, -495, 465, 495, 499, 477, 477, -238,
	-157, -64, -65, 425, -380, -257, 494, -189, 289, 494,
	-202, -505, -418, -183, -292, 122, -265, 86, -319, -347,
	-152, 494, 494, -243, 75, 87, 113, 183, 167, 200,
	396, 401, 26, -243, 495, -263, -263, 495, 494, -152,
	499, 26, 494, 26, 494, -217, -233, -276, -276, 495,
	-261, 54, 495, 495, -342, -351, 495, -460, -461, -207,
	493, 2, -439, -208, 275, 450, -341, -191, 494, -341,
	203, 117, 189, -245, 494, -330, 450, 335, -199, 70,
	-263, 494, 494, 494, 477, 164, 494, -157, 305, 494,
	-244, 289, 105, 269, -155, -344, -344, 495, 36, -65,
	9, 36, -263, -217, -263, 289, -418, -184, 444, 276,
	495, -211, -292, -421, -421, -330, 495, 495, -421, -47,
	-265, -265, 495, 495, -465, 329, 359, 177, -276, 495,
	499, 36, 134, 179, 495, -441, 254, -189, 495, 117,
	189, -246, -265, -245, 179, -217, -482, 450, -215, 495,
	-251, -250, -248, -253, -252, -248, -276, -412, 90, 305,
	-276, -244, -217, -264, -369, -204, 76, 105, -245, -97,
	-97, 495, -316, 495, -217, -185, 381, -334, 495, 495,
	-331, -330, 495, 495, 495, 495, -466, -467, 44, 437,
	96, -341, -466, -466, -461, -463, 147, 465, -442, -445,
	-444, 289, 387, 165, 306, 495, 403, 461, -497, 495,
	465, -257, -341, -330, 495, 499, 455, 495, 499, 455,
	495, 164, 495, 494, 495, 499, 321, 118, 125, -246,
	-495, -330, 494, -331, 494, -284, -152, -152, -245, -331,
	-152, -468, 132, -467, 318, 160, 358, 318, 160, -468,
	-468, -208, 48, -444, 289, -445, 289, 444, 118, 48,
	-441, -245, -250, 191, -252, 164, 305, -265, -369, 359,
	359, 2, -157, -244, -331, -263, -245, -263, -335, -246,
	-245, 96, 175, 419, 269, 31, 477, -443, 269, 349,
	59, 381, -443, 477, -442, 494, 494, 495, 2, -244,
	-245, 495, -246, 495, -246, 358, 297, -467, -341, 22,
	279, 112, -341, -497, -276, -276, -180, 59, 349, -246,
	-330, -501, 463, -331, 495, 495, -501, -331, 2, -245,
	-246, 424, -245, -246, 494, -246, -501, -276, -501, 495,
	-246,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 24, 25, 26,
	366, 367, 369, 370, 371, 373, 374, 376, 378, 380,
	382, 383, 385, 387, 389, 390, 391, 392, 393, 395,
	397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 457, 0, 984, 986, 988, 990, 0, 585,
	0, 28, 29, 0, 0, 193, 195, 197, 0, 222,
	224, 225, 227, -2, 0, 323, 324, 326, -2, -2,
	0, 0, 444, 446, 0, 0, 0, 466, 467, 0,
	1072, -2, 460, 462, 464, 529, 531, 533, 535, 537,
	539, 541, 542, 544, 546, 548, 550, 552, 554, 556,
	557, 559, 561, 563, 565, 567, 569, 571, 573, 575,
	577, 579, 581, -2, -2, -2, 0, -2, -2, -2,
	1002, 32, 34, 36, 38, 40, 42, 44, 275, 276,
	278, 280, 282, 284, 287, 288, 290, 1127, 328, 330,
	332, 334, 336, 0, -2, 1139, 0, 0, 46, 47,
	48, 49, 50, 51, 52, 53, 69, 70, 71, 72,
	73, 74, 75, 76, 57, 59, 60, 64, 65, 67,
	55, 0, 0, 1103, 1105, 1107, 1109, -2, 0, 0,
	7, 9, 11, 13, 15, 17, 19, 21, 368, 372,
	375, 377, 379, 381, 384, 386, 388, 394, 396, 398,
	867, 1780, 1795, 1796, 1797, 1800, 1801, 1802, 1803, 1804,
	1805, 2177, 2258, 2259, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 0,
	422, 420, 1773, 423, 2000, 425, 427, 317, 318, 319,
	320, 321, 322, 0, 437, 431, 436, 438, 440, 441,
	442, 443, 417, 415, 0, 437, 1827, 435, 982, 983,
	977, 978, 2036, 1009, 456, -2, -2, -2, 2145, -2,
	488, -2, 495, 2148, 2038, 500, 0, 502, -2, 505,
	985, 987, 989, 583, 584, 1783, 0, 0, 0, 0,
	30, 31, 0, 0, 0, 0, 0, 0, 0, 0,
	916, 917, 918, 0, 0, 157, -2, -2, -2, -2,
	0, 0, 1870, 1741, 1797, 1744, 1739, 194, 196, 198,
	199, 0, 0, 0, 0, 0, 0, 223, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 763,
	755, 756, 954, 0, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	-2, 0, 0, 253, 358, 359, 0, 1128, 1128, 0,
	0, 0, 0, 174, 165, 0, 0, 732, 445, 447,
	0, 0, 160, 0, 0, 981, 0, 176, 0, 0,
	461, 463, 465, 530, 532, 534, 536, 538, 540, 543,
	545, 547, 549, 551, 553, 555, 558, 560, 562, 564,
	566, 568, 570, 572, 574, 576, 578, 580, 582, 590,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, -2, -2, -2, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 593, 595, 596, 597, 0, 648,
	665, 0, 907, 1129, 1011, 992, 1006, 1011, 994, 995,
	996, 997, 998, 1003, 1005, 999, 1000, 1001, 33, 35,
	37, 39, 41, 43, 45, 277, 279, 281, 283, 285,
	289, 291, -2, 1101, 1102, 329, 331, 333, 335, 337,
	448, 0, 450, 0, 594, -2, 0, 1133, 1133, 1133,
	0, 0, 1102, 1100, 0, 453, 454, 509, 510, 1388,
	0, 0, 0, 0, 0, 1638, 1472, 0, 511, -2,
	1503, 1505, 2120, 2145, 1637, 1507, 1508, 1509, 1510, 1511,
	0, 0, 1514, 1515, 1516, 1517, 1518, 0, 1520, 0,
	1525, 1526, 1527, 0, 2127, 1718, 1793, -2, 1290, 1291,
	1292, 1293, 1294, 1295, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 2133, 1789, 0, 1604, 1541, -2, 1814, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1881, -2, -2, -2, -2, -2, -2, -2, 1347, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2159, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 0, 2109, 2128, 2129, 2134, 2136, 2130, 2117,
	1566, -2, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 1348, -2,
	2121, 2122, 2139, 2142, 2147, 2152, 2153, 2126, 2135, -2,
	-2, 1119, 2010, 1122, 867, 1120, 1104, 1106, 0, 1108,
	0, 0, 0, 1113, 1136, 1134, 0, 1175, 1117, 1118,
	1193, 1193, 1217, 0, 1198, 0, 1217, 1128, 1243, 0,
	1204, 2031, 1542, 1543, 0, 1797, 1794, -2, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 424, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 1008, 458, 459,
	0, 483, 0, 487, 2116, -2, 1833, 2051, -2, 491,
	1012, 1016, 1017, 1018, 1019, 0, 0, 0, 0, 0,
	497, 0, 0, 484, 485, 503, 506, 0, 586, 587,
	588, 589, 54, 0, 2128, 1243, 56, 0, 1763, 1819,
	1820, 1821, 1822, 1823, 2159, 2176, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 58, 0, 2128, 61,
	0, 2128, 0, -2, 66, 0, 1769, 68, 0, 1766,
	77, 0, 2128, 0, 1738, -2, -2, 2128, 915, 177,
	178, 1810, 1811, 1815, 1816, 1817, 1818, 1230, 161, 0,
	0, 0, 724, 1735, 1740, 725, 1745, 0, 200, 201,
	202, 203, 204, 2128, 206, 207, 0, 209, 210, 2128,
	212, 213, 0, 215, 229, 230, 0, 232, 0, 2128,
	0, 0, 0, 238, -2, 254, 0, 251, 0, 242,
	243, 245, 246, 247, 248, 0, 295, 293, 1774, 0,
	733, 2128, 735, 1779, 0, 0, 936, -2, 2128, 912,
	941, 1777, 0, -2, 0, 1126, 2128, 1026, 759, 760,
	761, 762, 0, 314, 0, 1039, 0, 1041, 0, 1062,
	1249, 1193, 1193, 0, 255, 256, 257, 258, 259, 2128,
	0, 0, 0, 264, 0, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 152, 2128, 340, 356, 152, 2128,
	343, 152, 2128, 346, 0, 349, 952, 152, 2128, 352,
	353, 2128, 355, 179, 0, -2, 411, 1782, -2, 361,
	0, 362, 0, -2, 0, 191, 0, 0, 730, 731,
	1230, 163, 0, 979, 980, 0, 0, 468, 0, 0,
	591, 592, 0, 0, 602, 603, 604, 191, 2039, 2008,
	1898, 609, 0, 612, 615, -2, 0, 0, 0, 0,
	619, 0, 624, 625, 626, 0, 729, 628, 0, 0,
	630, 0, 634, 0, 637, 0, 639, 0, 641, -2,
	-2, -2, 652, -2, 0, 656, 0, 658, 0, 0,
	0, 0, 673, 674, 0, 679, 0, 682, 683, 684,
	685, 686, 0, 688, 689, 690, 691, 0, 693, 694,
	-2, -2, 698, 700, 0, 707, 0, 711, 0, 715,
	0, 598, 599, 152, 1247, 991, -2, 993, 0, -2,
	0, 449, 0, 452, 1154, 1087, 1084, 0, 1151, 1152,
	1088, 0, 0, 0, 1095, 0, 1131, 1132, 0, 0,
	0, 1074, 1075, 0, 0, 0, 0, 1643, 1644, 1645,
	1646, 1647, 1648, 1651, 1652, 1649, 1650, 1653, 1654, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 1657, 1658, 0,
	0, 1660, 0, 1662, 0, 0, 0, 0, 0, 0,
	1451, 1453, 1726, 0, 0, 1659, 1393, 1394, 1395, 1430,
	1431, 0, 0, 1504, 1723, 1722, 1506, 0, 1674, 0,
	1513, 1519, 1759, -2, 0, 1638, 1669, 0, 0, 1528,
	1529, 1530, 0, 0, 1674, 0, 0, 1717, 1385, 0,
	0, 1606, 0, 1327, 0, 1328, 1329, 0, 1330, 1331,
	1344, 1357, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 1698, -2, 0, 0, 0, 0, 0, 1121, 0,
	0, 1179, 1727, 1731, 1732, 1179, 1179, 0, 0, 1675,
	1240, 1240, 0, 0, 1236, 1236, 1236, 1234, 1217, 0,
	1217, 1227, 0, 1217, 1217, 0, -2, 1198, 0, 0,
	1227, 0, 1211, 399, 401, 403, 405, 406, 407, 409,
	1244, 1245, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 1785, 0, 0, 0, 0, 429, 439, 1128,
	0, 1677, 1266, 1269, 1270, 1271, 1272, 1273, 0, 0,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, -2, 1345, 1347,
	1368, 1334, 1335, 1336, 1337, 1338, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1340, 0, 1315,
	1315, 1315, 1332, 1333, 1356, 1367, 1359, 1367, 1363, 1284,
	1285, 1267, 1268, 1350, 1351, 1352, 1353, 0, 433, 0,
	0, 0, 0, -2, 493, 498, 499, 0, 0, 1014,
	0, 1020, 520, 521, 522, 1022, 1023, 0, 496, 523,
	524, 525, 526, 527, 528, 0, 1747, 1748, 1749, 1750,
	1753, 1754, 0, 0, 494, 513, 501, 0, 507, 78,
	974, 117, 0, 974, 974, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 102, 113, 90, 91, 0, 0,
	0, 0, 62, 889, 0, 892, 0, 0, 0, 0,
	0, 0, 0, 905, 0, 0, 101, 0, 96, 80,
	0, 0, 0, 103, 115, 0, 143, 145, 0, 0,
	913, 0, 1125, 0, 182, 1229, 0, 1230, 723, 0,
	0, 1798, 1743, 0, 0, 0, 0, 231, 233, 0,
	235, 236, 237, 0, 935, 0, 244, 241, 286, 838,
	2128, 0, 0, 312, 307, 0, 309, 0, 888, 2128,
	886, 1778, 0, 910, 0, 0, 0, 942, 1807, 947,
	953, 1028, 0, 316, 0, 1042, 1044, 0, 0, 1250,
	0, 1252, 1253, 0, 261, 262, 263, 0, 338, 0,
	150, 151, 0, 341, 0, 344, 0, 152, 2128, 1733,
	350, 0, 0, 0, 1128, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 191, 0, 1230, 191,
	191, 1230, 470, 1230, 472, 0, 0, 605, 191, 191,
	191, 610, 611, 613, 614, -2, -2, 708, 616, 617,
	676, 0, 0, 0, 675, 627, 0, 717, 2027, 727,
	676, 1870, 676, 1870, 676, 1870, 638, 640, 643, 668,
	651, 655, 0, 0, 0, 660, 0, 662, 0, 664,
	676, 677, 680, 687, 692, 0, 0, 0, 0, 0,
	0, 0, 906, 0, 1004, 1154, 1087, 451, 1078, 1153,
	1079, 1086, 1089, 0, 0, 1091, 0, 1093, 0, 1149,
	1150, 1157, 1158, 0, 1168, 1169, 1161, 0, -2, 0,
	0, 1164, 1165, 1097, 0, 1114, 1115, 1116, 1140, 1141,
	963, 0, 2258, 1389, 1261, 1390, 1391, 1762, 0, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, -2,
	-2, -2, -2, -2, -2, -2, -2, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, -2, -2,
	-2, 1428, 1429, -2, 1661, 1663, 0, 1726, 0, -2,
	0, -2, -2, -2, -2, 1448, 0, 1450, 1455, 1457,
	1459, 0, 0, 0, 0, 1725, 1469, 1709, 1710, 0,
	0, 1640, 1641, 1642, 1454, 0, 1473, 1724, 1721, 0,
	0, 1673, 1139, 1532, 0, 0, 0, 0, 1539, 1524,
	1671, 0, 1670, 0, 0, 0, 1681, 0, 1716, 1712,
	0, 1760, 1384, 1371, 1372, 1373, 1374, 1375, 1376, 1386,
	0, 1757, 1786, 1792, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 0, 0, 1567, 1568, 1569, 1570,
	1571, 0, 1573, 1574, 0, 1576, 1577, 0, 1579, 1580,
	0, 1582, 1583, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 1684, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1588, 0, 1590, 1675, 1695,
	0, 0, 1474, 0, 0, 0, 1638, 0, 1593, 1675,
	1703, 0, 0, 0, 0, 0, 1675, 0, 1708, 0,
	1600, 0, 1602, 1123, 0, 0, 1256, 0, 0, 0,
	1730, 1256, 1256, 0, 1174, 0, 0, 1237, 1238, 1239,
	0, 0, 1240, 0, 1231, 1235, 1232, 1233, 1227, 1190,
	0, 0, 1764, 1227, 1196, 1226, 0, 867, 1216, 1227,
	1227, 0, -2, 1200, 1217, 0, 0, 400, 402, 404,
	408, 410, 0, 0, 1139, -2, 191, 866, 0, 0,
	0, 0, 0, 419, 421, 0, 0, 413, 0, 416,
	0, 1257, 1260, 0, 1274, 1275, 0, -2, 0, 0,
	1369, 0, 0, 0, 0, 486, 0, 1013, 1021, 0,
	517, 0, 519, 0, 1751, 1755, 1752, 1756, 0, 508,
	0, 0, 0, 0, 973, 121, 2128, 0, 154, 0,
	0, 831, 1770, 0, 0, 0, 0, 1886, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 92, 0, 0, 0, 0, 0, 0, 0, 890,
	891, 893, 900, 902, 0, 896, 1758, 0, 0, 897,
	0, 899, 901, 903, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 93, 0, 0, 0, 0, 1737, 931,
	929, 923, 924, 925, 926, 927, 928, 0, 0, -2,
	191, 0, 162, 182, 1736, 1746, 0, 205, 208, 211,
	214, 0, 239, 0, 0, 765, 738, 0, 0, 294,
	191, 0, 0, 308, 0, 884, 887, 0, 867, 2128,
	922, 1776, 0, 0, 0, 0, 940, 0, 2128, 1765,
	1806, 1807, 1030, 1036, 0, 1256, 0, 1060, 1045, 0,
	0, 0, 1060, 1064, 1065, 1067, 1068, 0, 0, 1251,
	0, 265, 357, 152, 152, 152, 347, 0, 0, 152,
	180, 354, 360, 412, 1128, 1128, 191, 189, 1985, 187,
	184, 186, 0, 0, 0, 766, 768, 769, 770, 771,
	0, 1807, 0, 1932, 1807, 0, 1048, 1050, 0, 158,
	164, 191, 0, 306, 469, 474, 600, 0, 606, 607,
	608, 645, 670, 618, 620, 621, 622, 0, 728, 726,
	629, 676, 632, 676, 635, 676, 654, 657, 659, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	712, 713, 714, 716, 1248, 1082, 1083, 1085, 0, 1094,
	0, 0, 1163, -2, -2, 1162, 1166, 1167, -2, -2,
	-2, -2, 1090, 0, 1099, 1096, 0, 1148, 961, 962,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1470,
	0, -2, 1449, 1452, 1456, 1458, 1460, 0, 0, 0,
	0, 0, 0, 1664, 0, 1666, 1471, 1719, 1722, 1636,
	0, 0, 1138, 1139, 1139, 0, 1538, 0, 1672, 0,
	1679, 1680, 0, 1531, 0, 1713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1540, 0, 0, 0, 1339,
	1313, 0, 1367, 1365, 1366, 1360, 1367, 1364, 1287, 0,
	1286, 0, 0, 1572, 1575, 1578, 1581, 0, 0, 0,
	0, 1561, 0, 0, 0, 1565, 1585, 0, 1587, 1589,
	0, 0, 1591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1477, 1478, 1479, 1592,
	1701, 1702, 0, 0, 0, 0, 0, 0, 1598, 0,
	1707, 1599, 1601, 1128, 1176, 1171, 1255, 0, 1728, 1230,
	1178, 1180, 1729, 1767, 1171, 1171, 0, 1676, 0, 0,
	1221, 0, 0, 0, 1223, 1194, 0, 0, 1188, 0,
	1184, 1185, 1186, 1187, 1195, 867, 1225, 1197, 1201, 1786,
	0, 1227, 0, 1212, 0, 1214, 1246, 0, 1206, 1209,
	0, 0, 192, 1799, 216, 220, 221, 217, 218, 219,
	428, 0, 0, 1678, 0, 1262, 0, 0, 0, 0,
	0, 432, 0, 482, -2, 515, 516, 518, 0, 514,
	118, 974, 0, 0, 965, 0, 123, 2128, 132, 0,
	806, 0, 1768, 0, 0, 0, 0, 0, 976, 0,
	0, 2128, 152, 2128, 152, 135, 138, 0, 142, 140,
	0, 0, 797, 79, 974, 82, 86, 94, 0, 0,
	0, 100, 0, 0, 0, 967, 0, 894, 895, 898,
	904, 63, 0, 969, 964, 144, 84, 88, 95, 0,
	971, 81, 0, 930, 908, 909, 0, 914, 155, 0,
	191, 1742, 0, 0, 0, 0, 0, 764, 849, 0,
	0, 0, 0, 300, 296, 0, 305, 311, 310, 734,
	0, 0, 0, -2, 937, 0, 939, 0, 0, 0,
	2128, 1032, 1036, 0, 1035, 1126, 1139, 315, 1037, 1060,
	0, 0, 0, 1047, 1043, 1040, 1256, 0, 0, 0,
	0, 0, 260, 339, 342, 345, 1734, 152, 351, 363,
	364, 166, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 775, 0, 1807, 1807, 0, 1772, 0, 0, 0,
	0, 159, 0, 471, 0, 0, 0, 631, 633, 636,
	661, 663, 676, 701, 702, 792, 0, 792, 0, 0,
	1092, 0, 1160, 1098, 1142, 1143, 0, 963, 0, 1392,
	1433, 0, 0, -2, 0, 0, 1437, 0, 0, 0,
	-2, 0, 0, 0, 1665, 1667, 0, 1721, 1533, 0,
	0, 0, 1537, 1521, 1522, 0, 1639, 1682, 1711, 1715,
	0, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 0, 1761,
	1787, 1791, 1612, 1613, 1617, 1775, 0, 0, 0, 1358,
	1362, 0, 0, 1544, 0, 0, 0, 0, 0, 0,
	0, 1683, 1694, 1696, 1475, 1476, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, -2, -2, -2, 1493,
	1494, 1495, -2, -2, -2, 0, 0, 0, 1697, 1699,
	1700, 1704, 1705, 0, 1595, 1596, 1597, 1706, 0, 1173,
	0, 1254, 1177, 0, 1173, 1173, 1135, 1219, 0, 0,
	1242, 0, 1191, 0, 1192, 0, 1224, 0, 1199, 1202,
	1203, 1213, 0, 1205, 0, 1208, 0, 1533, -2, 430,
	414, 0, 0, 1264, 0, 1342, 1346, 1370, 434, 1228,
	0, 0, 0, 0, 153, 804, 830, 0, 0, 0,
	956, 963, 0, 0, 836, 125, 0, 0, 0, 133,
	0, 0, 130, 0, 137, 141, 0, 0, 0, 0,
	0, 97, 98, 99, 0, 104, 0, 105, 0, 0,
	0, 0, 0, 0, 933, 934, 181, 156, 234, 921,
	240, 786, 837, 0, 839, 0, 739, 0, 0, 838,
	292, 0, 299, 0, 888, 0, 0, 911, 938, 951,
	0, 0, 0, 1034, 1036, 0, 1027, 1028, 1156, 1038,
	1058, -2, 1057, 0, 1139, 1066, 1063, 1069, 1070, 0,
	348, 188, 0, 183, 185, 0, 169, 0, 0, 767,
	772, 0, 0, 0, 0, 0, 1049, 1051, 0, 175,
	0, 601, 623, 671, 703, 791, 0, 0, 705, 0,
	0, 1159, 1146, 1147, 1144, 963, 1435, 1439, 0, 0,
	0, 1441, -2, 0, 1463, -2, -2, 1668, 1720, 1512,
	1139, 1534, 1536, 1523, 1714, 1387, 0, 1619, 1616, 0,
	1603, 1314, 1289, 1288, 1556, 1557, 0, 0, 1560, 1562,
	1563, 1564, 1693, 0, 0, 0, 0, 1594, 1124, 1608,
	0, 0, 1181, 1608, 1608, 1220, 0, 1222, 1189, 1182,
	0, 1787, 1215, 1207, 0, 0, 1258, 1263, 0, 1341,
	119, 120, 122, 0, 805, 0, 808, 0, 0, 0,
	0, 815, 816, 0, 0, 0, 0, 0, 825, 853,
	863, 0, 1148, 0, 0, 0, 127, 147, 0, 0,
	975, 0, 0, 152, 152, 0, 0, 966, 0, 0,
	0, 0, 107, 0, 0, 968, 970, 0, 0, 972,
	794, 0, 849, 841, 842, 843, 0, 848, 850, 0,
	0, 752, 0, 748, 0, 0, 741, 765, 738, 0,
	297, 885, 919, 867, 0, 0, 0, 0, 0, 1024,
	1036, 0, 1029, 1030, 1060, 1155, 0, 0, 0, 1046,
	1156, 0, 190, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 473, 475, 0, 0, 481, 790,
	0, 0, 0, 0, 1145, 1443, -2, -2, 1464, 0,
	1788, 1790, 1139, 0, 1605, 0, 0, -2, 0, 0,
	0, 1110, 0, 1172, 1170, 1111, 1112, 1241, 0, 1210,
	0, 1265, 124, 0, 809, 810, 1771, 812, 0, 814,
	817, 0, 820, 1809, 0, 824, 832, 854, 0, 786,
	0, 859, 860, 861, 957, 958, 865, 0, 126, 128,
	146, 960, 0, 129, 136, 0, 0, 83, 0, 0,
	1863, 110, 108, 106, 85, 0, 738, 793, 0, 840,
	0, 851, 852, 742, 0, 740, 0, 0, 0, 0,
	0, 298, 301, 0, 304, 0, 0, 950, 0, 0,
	0, 0, 1031, 1032, 313, 0, 0, 0, 1060, 1071,
	168, 0, 0, 773, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 774, 865, 0, 0, 829, 0, 173,
	0, 477, 0, 479, 0, 704, 706, 0, 0, 1535,
	1623, 0, 1558, 1559, -2, 0, 1501, 1607, 1609, 0,
	1183, 1259, 807, 811, 0, 0, 0, 871, 0, 0,
	0, 857, 858, 794, 0, 786, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 0,
	750, 0, 753, 0, 749, 746, 747, 786, 0, 302,
	303, 0, 0, 951, 0, 0, 1033, 1034, 0, 1053,
	1054, 1056, 1061, 0, 0, 863, 865, 828, 0, 476,
	0, 0, 709, 710, 0, 0, 0, 0, 1618, 1502,
	0, 0, 0, 0, 819, 876, 0, 0, 0, 855,
	856, 853, 0, 834, 0, 867, 131, 0, 959, 865,
	0, 798, 0, 0, 801, 0, 0, 111, 1863, 109,
	0, 736, 0, 0, 845, 847, 0, 754, 794, 752,
	920, 865, 0, 863, 0, 1025, 0, 1055, 191, 191,
	786, 863, 191, 478, 480, 1615, 1635, 1624, -2, 2088,
	1867, 0, 1635, 1635, 1610, 1611, 0, 0, 821, 872,
	873, 0, 868, 869, 870, 1808, 822, 823, 833, 862,
	0, 871, 148, 786, 795, 0, 0, 796, 0, 0,
	114, 0, 116, 0, 844, 0, 0, 0, 0, 738,
	742, 863, 0, 786, 0, 1256, 170, 171, 794, 786,
	172, 1620, 0, 0, 1626, 1627, 1628, 1629, 1630, 1621,
	1622, 813, 0, 874, 0, 875, 0, 0, 0, 0,
	876, 134, 799, 0, 802, 0, 112, 0, 846, 743,
	0, 745, 742, 751, 786, 0, 794, 0, 1052, 826,
	794, 0, 1632, 1633, 0, 0, 0, 877, 0, 880,
	881, 0, 878, 0, 853, 0, 0, 789, 744, 737,
	794, 865, 948, 863, 827, 1631, 1634, 1625, 818, 879,
	882, 883, 864, 835, 0, 0, 785, 787, 788, 948,
	863, 945, 0, 786, 794, 0, 943, 786, 949, 794,
	800, 0, 794, 948, 0, 948, 946, 0, 944, 794,
	803,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 483, 3, 489, 484, 3,
	494, 495, 487, 485, 499, 486, 496, 488, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 502, 3,
	475, 477, 476, 480, 498, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 492, 3, 493, 490, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 500, 482, 501, 478,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 479, 57818, 481, 57819, 491,
	57820, 497, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1146
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1157
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1158
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1159
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1160
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1161
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1162
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1169
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1178
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1179
		{
			return helpWith(sqllex, "ALTER")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1182
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1183
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1184
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1185
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1186
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1187
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1188
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1298
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1367
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1371
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1375
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1381
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1385
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1391
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1400
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1415
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1421
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1429
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1439
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1443
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1453
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1464
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1471
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1490
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1498
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1507
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1518
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1537
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1547
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1557
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1566
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1577
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1583
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1595
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1614
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1625
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1635
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1686
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1691
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1783
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = nil
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = nil
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1886
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1916
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1986
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1992
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2002
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2016
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2035
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2043
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2113
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2127
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2128
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2129
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2189
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2216
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2222
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2225
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2237
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2261
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2273
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2275
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2277
		{
			return helpWith(sqllex, "CREATE")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{
			return unimplemented(sqllex, "create cast")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2282
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplemented(sqllex, "create operator")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplemented(sqllex, "create publication")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "create rule")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "create server")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2302
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2303
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2307
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2311
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2315
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2316
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2319
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2320
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2322
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2323
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2324
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2326
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2327
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			return unimplemented(sqllex, "drop server")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2330
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2331
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2332
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2338
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2339
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2340
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2343
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2344
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2346
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2364
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2382
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2414
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2425
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2453
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2516
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2527
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2528
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2529
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2540
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2541
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2542
		{
			return helpWith(sqllex, "DROP")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2545
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2546
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2547
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2579
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2594
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2666
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2689
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2696
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2698
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2722
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2730
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "DELETE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2751
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2752
		{
			return helpWith(sqllex, "INSERT")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2753
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2766
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2767
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "DELETE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "INSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2780
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2781
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2807
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2815
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2840
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2848
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2881
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "GRANT")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2943
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "RESET")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "RESET")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			return helpWith(sqllex, "USE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3026
		{
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3027
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3028
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			return helpWith(sqllex, "USE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3094
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return unimplemented(sqllex, "set from current")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3267
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = tree.Low
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = tree.Normal
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = tree.High
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3425
		{
			return helpWith(sqllex, "SHOW")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3430
		{
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.str = "client_encoding"
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.str = "timezone"
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3498
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3546
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3594
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = true
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = true
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = false
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3797
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = true
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = false
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = true
		}
	case 676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = false
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3891
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3913
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3939
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3982
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3990
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4027
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4050
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4066
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4206
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4361
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4376
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = nil
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{

			sqlVAL.union.val = nil
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4418
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4423
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4428
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 750:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4455
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4468
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4482
		{
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4483
		{
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = true
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = false
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = true
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = true
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = true
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = true
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4567
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4570
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4573
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4574
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4580
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4596
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4601
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.str = ""
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 800:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 803:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4790
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4804
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4815
		{
		}
	case 826:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4907
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4918
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4945
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5025
		{
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5026
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5027
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5186
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5195
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5234
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5244
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = true
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{

			sqlVAL.union.val = true
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = false
		}
	case 919:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5322
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5333
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5343
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = nil
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5397
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5404
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5406
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5408
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5410
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5414
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5430
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5446
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5463
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5478
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5496
		{
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5501
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = false
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = true
		}
	case 953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = false
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = true
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = false
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5555
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.str = ""
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.Descending
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5602
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5608
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5616
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5622
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5630
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5636
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5653
		{
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5654
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5657
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5658
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5691
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5702
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5759
		{
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5760
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5761
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5781
		{
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5782
		{
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5810
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5823
		{
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5825
		{
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5829
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.str = ""
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.str = ""
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.str = ""
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.str = ""
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5938
		{
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5986
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6061
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6478
		{
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = nil
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6492
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = true
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = false
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = false
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = true
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6522
		{
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6573
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6578
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6607
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6699
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6700
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6753
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6755
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6770
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6792
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6797
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6802
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6813
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6825
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6844
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6883
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6893
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6928
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6939
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6969
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7002
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = nil
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = true
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = false
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.str = tree.AstFull
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.str = tree.AstRight
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.str = tree.AstInner
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7121
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7122
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.str = tree.AstHash
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.str = ""
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7184
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7229
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7258
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7271
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7279
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7298
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7308
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7321
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = geopb.Shape_Point
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = geopb.Shape_LineString
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = geopb.Shape_Polygon
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = geopb.Shape_GeometryCollection
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = geopb.Shape_MultiPolygon
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = geopb.Shape_MultiLineString
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = geopb.Shape_MultiPoint
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = geopb.Shape_Geometry
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = types.Geography
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoFigure(), geopb.DefaultGeometrySRID)
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoFigure(), geopb.DefaultGeographySRID)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoFigure(), geopb.SRID(sqlDollar[5].union.int32()))
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoFigure(), geopb.SRID(sqlDollar[5].union.int32()))
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = types.String
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = types.Name
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = types.INet
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = types.Oid
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7443
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7474
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7482
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = nil
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = types.Int2
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = types.Int2
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = types.Int4
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = types.Int
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = types.Int
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = types.Int
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = types.Float4
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = types.Float4
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = types.Float
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = types.Float
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7549
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7557
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7565
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = types.Bool
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = types.Bool
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = types.RegType
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7606
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = types.Float
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7625
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7631
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7653
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = types.String
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = true
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = false
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = types.Date
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7702
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7710
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7724
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7741
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7758
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = true
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = false
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = false
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = types.Interval
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7782
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7866
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7881
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = nil
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7911
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8281
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8502
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8552
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8582
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8593
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8594
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8620
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8740
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8772
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8781
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8786
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8791
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8796
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8810
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8811
		{
			return unimplemented(sqllex, "treat")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8837
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8842
		{
			return unimplemented(sqllex, "within group")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8843
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8878
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.str = ""
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8980
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9077
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.Any
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = tree.Some
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = tree.All
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = tree.Div
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = tree.LT
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.GT
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.LE
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = tree.GE
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = tree.NE
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.Like
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9439
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9519
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9657
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9839
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9846
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.str = ""
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
