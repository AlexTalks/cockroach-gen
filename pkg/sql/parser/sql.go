// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12518

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1430,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 368,
	-2, 0,
	-1, 73,
	236, 221,
	497, 221,
	-2, 0,
	-1, 84,
	224, 1191,
	238, 1191,
	254, 364,
	380, 364,
	390, 971,
	425, 364,
	437, 971,
	481, 971,
	508, 364,
	534, 971,
	-2, 0,
	-1, 90,
	130, 1430,
	231, 1430,
	519, 1430,
	520, 1430,
	-2, 0,
	-1, 106,
	147, 1401,
	166, 1401,
	179, 1401,
	234, 1401,
	267, 1401,
	332, 1401,
	342, 1401,
	514, 1401,
	-2, 1372,
	-1, 145,
	155, 837,
	253, 837,
	383, 806,
	442, 806,
	500, 837,
	502, 806,
	-2, 0,
	-1, 147,
	4, 1432,
	21, 1432,
	22, 1432,
	23, 1432,
	24, 1432,
	25, 1432,
	26, 1432,
	27, 1432,
	28, 1432,
	30, 1432,
	31, 1432,
	37, 1432,
	42, 1432,
	43, 1432,
	45, 1432,
	46, 1432,
	47, 1432,
	48, 1432,
	49, 1432,
	50, 1432,
	51, 1432,
	53, 1432,
	54, 1432,
	55, 1432,
	56, 1432,
	58, 1432,
	59, 1432,
	60, 1432,
	61, 1432,
	62, 1432,
	63, 1432,
	64, 1432,
	68, 1432,
	69, 1432,
	70, 1432,
	71, 1432,
	73, 1432,
	74, 1432,
	75, 1432,
	79, 1432,
	80, 1432,
	81, 1432,
	82, 1432,
	83, 1432,
	84, 1432,
	85, 1432,
	88, 1432,
	89, 1432,
	90, 1432,
	91, 1432,
	92, 1432,
	94, 1432,
	96, 1432,
	97, 1432,
	98, 1432,
	99, 1432,
	100, 1432,
	101, 1432,
	103, 1432,
	104, 1432,
	105, 1432,
	107, 1432,
	108, 1432,
	116, 1432,
	117, 1432,
	118, 1432,
	119, 1432,
	121, 1432,
	122, 1432,
	123, 1432,
	125, 1432,
	126, 1432,
	127, 1432,
	129, 1432,
	130, 1432,
	132, 1432,
	133, 1432,
	134, 1432,
	137, 1432,
	138, 1432,
	139, 1432,
	141, 1432,
	142, 1432,
	144, 1432,
	145, 1432,
	146, 1432,
	148, 1432,
	149, 1432,
	150, 1432,
	151, 1432,
	152, 1432,
	153, 1432,
	154, 1432,
	155, 1432,
	156, 1432,
	157, 1432,
	158, 1432,
	159, 1432,
	160, 1432,
	161, 1432,
	162, 1432,
	163, 1432,
	165, 1432,
	171, 1432,
	172, 1432,
	173, 1432,
	174, 1432,
	178, 1432,
	180, 1432,
	184, 1432,
	185, 1432,
	186, 1432,
	187, 1432,
	188, 1432,
	189, 1432,
	190, 1432,
	191, 1432,
	192, 1432,
	193, 1432,
	194, 1432,
	195, 1432,
	196, 1432,
	198, 1432,
	199, 1432,
	201, 1432,
	202, 1432,
	204, 1432,
	205, 1432,
	206, 1432,
	207, 1432,
	208, 1432,
	209, 1432,
	210, 1432,
	211, 1432,
	212, 1432,
	214, 1432,
	215, 1432,
	217, 1432,
	218, 1432,
	219, 1432,
	220, 1432,
	224, 1432,
	225, 1432,
	226, 1432,
	227, 1432,
	228, 1432,
	231, 1432,
	232, 1432,
	233, 1432,
	235, 1432,
	237, 1432,
	238, 1432,
	240, 1432,
	242, 1432,
	243, 1432,
	244, 1432,
	246, 1432,
	250, 1432,
	251, 1432,
	252, 1432,
	253, 1432,
	254, 1432,
	255, 1432,
	257, 1432,
	258, 1432,
	259, 1432,
	261, 1432,
	262, 1432,
	264, 1432,
	265, 1432,
	268, 1432,
	272, 1432,
	273, 1432,
	274, 1432,
	277, 1432,
	278, 1432,
	279, 1432,
	280, 1432,
	282, 1432,
	283, 1432,
	284, 1432,
	285, 1432,
	286, 1432,
	287, 1432,
	288, 1432,
	289, 1432,
	290, 1432,
	291, 1432,
	292, 1432,
	293, 1432,
	294, 1432,
	295, 1432,
	296, 1432,
	297, 1432,
	298, 1432,
	299, 1432,
	300, 1432,
	301, 1432,
	302, 1432,
	303, 1432,
	305, 1432,
	307, 1432,
	308, 1432,
	309, 1432,
	310, 1432,
	311, 1432,
	312, 1432,
	313, 1432,
	314, 1432,
	315, 1432,
	316, 1432,
	317, 1432,
	318, 1432,
	320, 1432,
	322, 1432,
	324, 1432,
	325, 1432,
	327, 1432,
	328, 1432,
	329, 1432,
	330, 1432,
	331, 1432,
	334, 1432,
	337, 1432,
	338, 1432,
	339, 1432,
	340, 1432,
	343, 1432,
	344, 1432,
	345, 1432,
	347, 1432,
	349, 1432,
	350, 1432,
	351, 1432,
	352, 1432,
	353, 1432,
	354, 1432,
	355, 1432,
	356, 1432,
	357, 1432,
	358, 1432,
	359, 1432,
	360, 1432,
	362, 1432,
	363, 1432,
	364, 1432,
	365, 1432,
	366, 1432,
	367, 1432,
	368, 1432,
	369, 1432,
	370, 1432,
	371, 1432,
	372, 1432,
	373, 1432,
	374, 1432,
	375, 1432,
	376, 1432,
	378, 1432,
	379, 1432,
	381, 1432,
	382, 1432,
	383, 1432,
	384, 1432,
	385, 1432,
	386, 1432,
	387, 1432,
	388, 1432,
	389, 1432,
	390, 1432,
	391, 1432,
	392, 1432,
	394, 1432,
	396, 1432,
	397, 1432,
	398, 1432,
	403, 1432,
	405, 1432,
	406, 1432,
	407, 1432,
	408, 1432,
	409, 1432,
	410, 1432,
	411, 1432,
	412, 1432,
	414, 1432,
	415, 1432,
	416, 1432,
	418, 1432,
	419, 1432,
	420, 1432,
	421, 1432,
	422, 1432,
	423, 1432,
	425, 1432,
	426, 1432,
	427, 1432,
	428, 1432,
	429, 1432,
	430, 1432,
	431, 1432,
	432, 1432,
	433, 1432,
	434, 1432,
	435, 1432,
	437, 1432,
	438, 1432,
	439, 1432,
	440, 1432,
	441, 1432,
	442, 1432,
	444, 1432,
	445, 1432,
	446, 1432,
	447, 1432,
	448, 1432,
	449, 1432,
	451, 1432,
	452, 1432,
	453, 1432,
	454, 1432,
	455, 1432,
	456, 1432,
	457, 1432,
	459, 1432,
	461, 1432,
	462, 1432,
	463, 1432,
	464, 1432,
	465, 1432,
	466, 1432,
	467, 1432,
	468, 1432,
	469, 1432,
	470, 1432,
	471, 1432,
	472, 1432,
	473, 1432,
	474, 1432,
	475, 1432,
	477, 1432,
	478, 1432,
	480, 1432,
	482, 1432,
	483, 1432,
	484, 1432,
	485, 1432,
	486, 1432,
	487, 1432,
	488, 1432,
	489, 1432,
	490, 1432,
	492, 1432,
	493, 1432,
	494, 1432,
	495, 1432,
	496, 1432,
	498, 1432,
	500, 1432,
	501, 1432,
	502, 1432,
	503, 1432,
	504, 1432,
	505, 1432,
	507, 1432,
	508, 1432,
	509, 1432,
	510, 1432,
	512, 1432,
	513, 1432,
	516, 1432,
	517, 1432,
	518, 1432,
	519, 1432,
	520, 1432,
	521, 1432,
	522, 1432,
	524, 1432,
	527, 1432,
	528, 1432,
	529, 1432,
	530, 1432,
	531, 1432,
	532, 1432,
	534, 1432,
	535, 1432,
	536, 1432,
	537, 1432,
	542, 1432,
	543, 1432,
	544, 1432,
	545, 1432,
	546, 1432,
	547, 1432,
	-2, 0,
	-1, 148,
	1, 1288,
	128, 1288,
	242, 1288,
	321, 1288,
	378, 1288,
	387, 1288,
	551, 1288,
	575, 1288,
	-2, 0,
	-1, 150,
	1, 1288,
	575, 1288,
	-2, 0,
	-1, 151,
	1, 1288,
	575, 1288,
	-2, 0,
	-1, 152,
	1, 1288,
	497, 1288,
	575, 1288,
	-2, 0,
	-1, 181,
	147, 1400,
	166, 1400,
	179, 1400,
	234, 1400,
	267, 1400,
	332, 1400,
	342, 1400,
	514, 1400,
	-2, 1375,
	-1, 224,
	4, 1439,
	5, 1439,
	6, 1439,
	7, 1439,
	8, 1439,
	9, 1439,
	10, 1439,
	21, 1439,
	22, 1439,
	23, 1439,
	24, 1439,
	25, 1439,
	26, 1439,
	27, 1439,
	28, 1439,
	30, 1439,
	31, 1439,
	37, 1439,
	38, 1439,
	42, 1439,
	43, 1439,
	44, 1439,
	45, 1439,
	46, 1439,
	47, 1439,
	48, 1439,
	49, 1439,
	50, 1439,
	51, 1439,
	53, 1439,
	54, 1439,
	55, 1439,
	56, 1439,
	58, 1439,
	59, 1439,
	60, 1439,
	61, 1439,
	62, 1439,
	63, 1439,
	64, 1439,
	65, 1439,
	66, 1439,
	67, 1439,
	68, 1439,
	69, 1439,
	70, 1439,
	71, 1439,
	73, 1439,
	74, 1439,
	75, 1439,
	77, 1439,
	79, 1439,
	80, 1439,
	81, 1439,
	82, 1439,
	83, 1439,
	84, 1439,
	85, 1439,
	88, 1439,
	89, 1439,
	90, 1439,
	91, 1439,
	92, 1439,
	94, 1439,
	96, 1439,
	97, 1439,
	98, 1439,
	99, 1439,
	100, 1439,
	101, 1439,
	103, 1439,
	104, 1439,
	105, 1439,
	106, 1439,
	107, 1439,
	108, 1439,
	109, 1439,
	110, 1439,
	111, 1439,
	112, 1439,
	113, 1439,
	114, 1439,
	115, 1439,
	116, 1439,
	117, 1439,
	118, 1439,
	119, 1439,
	120, 1439,
	121, 1439,
	122, 1439,
	123, 1439,
	124, 1439,
	125, 1439,
	126, 1439,
	127, 1439,
	129, 1439,
	130, 1439,
	132, 1439,
	133, 1439,
	134, 1439,
	137, 1439,
	138, 1439,
	139, 1439,
	141, 1439,
	142, 1439,
	144, 1439,
	145, 1439,
	146, 1439,
	148, 1439,
	149, 1439,
	150, 1439,
	151, 1439,
	152, 1439,
	153, 1439,
	154, 1439,
	155, 1439,
	156, 1439,
	157, 1439,
	158, 1439,
	159, 1439,
	160, 1439,
	161, 1439,
	162, 1439,
	163, 1439,
	164, 1439,
	165, 1439,
	171, 1439,
	172, 1439,
	173, 1439,
	174, 1439,
	178, 1439,
	180, 1439,
	183, 1439,
	184, 1439,
	185, 1439,
	186, 1439,
	187, 1439,
	188, 1439,
	189, 1439,
	190, 1439,
	191, 1439,
	192, 1439,
	193, 1439,
	194, 1439,
	195, 1439,
	196, 1439,
	198, 1439,
	199, 1439,
	201, 1439,
	202, 1439,
	204, 1439,
	205, 1439,
	206, 1439,
	207, 1439,
	208, 1439,
	209, 1439,
	210, 1439,
	211, 1439,
	212, 1439,
	213, 1439,
	214, 1439,
	215, 1439,
	217, 1439,
	218, 1439,
	219, 1439,
	220, 1439,
	224, 1439,
	225, 1439,
	226, 1439,
	227, 1439,
	228, 1439,
	230, 1439,
	231, 1439,
	232, 1439,
	233, 1439,
	235, 1439,
	237, 1439,
	238, 1439,
	239, 1439,
	240, 1439,
	241, 1439,
	242, 1439,
	243, 1439,
	244, 1439,
	245, 1439,
	246, 1439,
	250, 1439,
	251, 1439,
	252, 1439,
	253, 1439,
	254, 1439,
	255, 1439,
	257, 1439,
	258, 1439,
	259, 1439,
	261, 1439,
	262, 1439,
	263, 1439,
	264, 1439,
	265, 1439,
	266, 1439,
	268, 1439,
	272, 1439,
	273, 1439,
	274, 1439,
	275, 1439,
	276, 1439,
	277, 1439,
	278, 1439,
	279, 1439,
	280, 1439,
	282, 1439,
	283, 1439,
	284, 1439,
	285, 1439,
	286, 1439,
	287, 1439,
	288, 1439,
	289, 1439,
	290, 1439,
	291, 1439,
	292, 1439,
	293, 1439,
	294, 1439,
	295, 1439,
	296, 1439,
	297, 1439,
	298, 1439,
	299, 1439,
	300, 1439,
	301, 1439,
	302, 1439,
	303, 1439,
	305, 1439,
	306, 1439,
	307, 1439,
	308, 1439,
	309, 1439,
	310, 1439,
	311, 1439,
	312, 1439,
	313, 1439,
	314, 1439,
	315, 1439,
	316, 1439,
	317, 1439,
	318, 1439,
	319, 1439,
	320, 1439,
	321, 1439,
	322, 1439,
	323, 1439,
	324, 1439,
	325, 1439,
	326, 1439,
	327, 1439,
	328, 1439,
	329, 1439,
	330, 1439,
	331, 1439,
	334, 1439,
	338, 1439,
	339, 1439,
	340, 1439,
	343, 1439,
	344, 1439,
	345, 1439,
	346, 1439,
	347, 1439,
	348, 1439,
	349, 1439,
	350, 1439,
	351, 1439,
	352, 1439,
	353, 1439,
	354, 1439,
	355, 1439,
	356, 1439,
	357, 1439,
	358, 1439,
	359, 1439,
	360, 1439,
	362, 1439,
	363, 1439,
	364, 1439,
	365, 1439,
	366, 1439,
	367, 1439,
	368, 1439,
	369, 1439,
	370, 1439,
	371, 1439,
	372, 1439,
	373, 1439,
	374, 1439,
	375, 1439,
	376, 1439,
	378, 1439,
	379, 1439,
	381, 1439,
	382, 1439,
	383, 1439,
	384, 1439,
	385, 1439,
	386, 1439,
	387, 1439,
	388, 1439,
	389, 1439,
	390, 1439,
	391, 1439,
	392, 1439,
	394, 1439,
	396, 1439,
	397, 1439,
	398, 1439,
	403, 1439,
	405, 1439,
	406, 1439,
	407, 1439,
	408, 1439,
	409, 1439,
	410, 1439,
	411, 1439,
	412, 1439,
	414, 1439,
	415, 1439,
	416, 1439,
	417, 1439,
	418, 1439,
	419, 1439,
	420, 1439,
	421, 1439,
	422, 1439,
	423, 1439,
	425, 1439,
	426, 1439,
	427, 1439,
	428, 1439,
	429, 1439,
	430, 1439,
	431, 1439,
	432, 1439,
	433, 1439,
	434, 1439,
	435, 1439,
	437, 1439,
	438, 1439,
	439, 1439,
	440, 1439,
	441, 1439,
	442, 1439,
	443, 1439,
	444, 1439,
	445, 1439,
	446, 1439,
	447, 1439,
	448, 1439,
	449, 1439,
	450, 1439,
	451, 1439,
	452, 1439,
	453, 1439,
	454, 1439,
	455, 1439,
	456, 1439,
	457, 1439,
	459, 1439,
	461, 1439,
	462, 1439,
	463, 1439,
	464, 1439,
	465, 1439,
	466, 1439,
	467, 1439,
	468, 1439,
	469, 1439,
	470, 1439,
	471, 1439,
	472, 1439,
	473, 1439,
	474, 1439,
	475, 1439,
	477, 1439,
	478, 1439,
	479, 1439,
	480, 1439,
	482, 1439,
	483, 1439,
	484, 1439,
	485, 1439,
	486, 1439,
	487, 1439,
	488, 1439,
	489, 1439,
	490, 1439,
	492, 1439,
	493, 1439,
	494, 1439,
	495, 1439,
	496, 1439,
	498, 1439,
	500, 1439,
	501, 1439,
	502, 1439,
	503, 1439,
	504, 1439,
	505, 1439,
	506, 1439,
	507, 1439,
	508, 1439,
	509, 1439,
	510, 1439,
	512, 1439,
	513, 1439,
	515, 1439,
	516, 1439,
	517, 1439,
	518, 1439,
	519, 1439,
	520, 1439,
	521, 1439,
	522, 1439,
	523, 1439,
	524, 1439,
	527, 1439,
	528, 1439,
	529, 1439,
	530, 1439,
	531, 1439,
	532, 1439,
	534, 1439,
	535, 1439,
	536, 1439,
	537, 1439,
	542, 1439,
	543, 1439,
	544, 1439,
	545, 1439,
	546, 1439,
	547, 1439,
	548, 1439,
	556, 1439,
	563, 1439,
	564, 1439,
	565, 1439,
	572, 1439,
	576, 1439,
	-2, 0,
	-1, 711,
	4, 1189,
	21, 1189,
	22, 1189,
	23, 1189,
	24, 1189,
	25, 1189,
	26, 1189,
	27, 1189,
	28, 1189,
	30, 1189,
	31, 1189,
	37, 1189,
	42, 1189,
	43, 1189,
	45, 1189,
	46, 1189,
	47, 1189,
	48, 1189,
	49, 1189,
	50, 1189,
	51, 1189,
	53, 1189,
	54, 1189,
	55, 1189,
	56, 1189,
	58, 1189,
	59, 1189,
	60, 1189,
	61, 1189,
	62, 1189,
	63, 1189,
	64, 1189,
	68, 1189,
	69, 1189,
	70, 1189,
	71, 1189,
	73, 1189,
	74, 1189,
	75, 1189,
	79, 1189,
	80, 1189,
	81, 1189,
	82, 1189,
	83, 1189,
	84, 1189,
	85, 1189,
	88, 1189,
	89, 1189,
	90, 1189,
	91, 1189,
	92, 1189,
	94, 1189,
	96, 1189,
	97, 1189,
	98, 1189,
	99, 1189,
	100, 1189,
	101, 1189,
	103, 1189,
	104, 1189,
	105, 1189,
	107, 1189,
	108, 1189,
	116, 1189,
	117, 1189,
	118, 1189,
	119, 1189,
	121, 1189,
	122, 1189,
	123, 1189,
	125, 1189,
	126, 1189,
	127, 1189,
	129, 1189,
	130, 1189,
	132, 1189,
	133, 1189,
	134, 1189,
	137, 1189,
	138, 1189,
	139, 1189,
	141, 1189,
	142, 1189,
	144, 1189,
	145, 1189,
	146, 1189,
	148, 1189,
	149, 1189,
	150, 1189,
	151, 1189,
	152, 1189,
	153, 1189,
	154, 1189,
	155, 1189,
	156, 1189,
	157, 1189,
	158, 1189,
	159, 1189,
	160, 1189,
	161, 1189,
	162, 1189,
	163, 1189,
	165, 1189,
	171, 1189,
	172, 1189,
	173, 1189,
	174, 1189,
	178, 1189,
	180, 1189,
	184, 1189,
	185, 1189,
	186, 1189,
	187, 1189,
	188, 1189,
	189, 1189,
	190, 1189,
	191, 1189,
	192, 1189,
	193, 1189,
	194, 1189,
	195, 1189,
	196, 1189,
	198, 1189,
	199, 1189,
	201, 1189,
	202, 1189,
	204, 1189,
	205, 1189,
	206, 1189,
	207, 1189,
	208, 1189,
	209, 1189,
	210, 1189,
	211, 1189,
	212, 1189,
	214, 1189,
	215, 1189,
	217, 1189,
	218, 1189,
	219, 1189,
	220, 1189,
	224, 1189,
	225, 1189,
	226, 1189,
	227, 1189,
	228, 1189,
	231, 1189,
	232, 1189,
	233, 1189,
	235, 1189,
	237, 1189,
	238, 1189,
	240, 1189,
	242, 1189,
	243, 1189,
	244, 1189,
	246, 1189,
	250, 1189,
	251, 1189,
	252, 1189,
	253, 1189,
	254, 1189,
	255, 1189,
	257, 1189,
	258, 1189,
	259, 1189,
	261, 1189,
	262, 1189,
	264, 1189,
	265, 1189,
	268, 1189,
	272, 1189,
	273, 1189,
	274, 1189,
	277, 1189,
	278, 1189,
	279, 1189,
	280, 1189,
	282, 1189,
	283, 1189,
	284, 1189,
	285, 1189,
	286, 1189,
	287, 1189,
	288, 1189,
	289, 1189,
	290, 1189,
	291, 1189,
	292, 1189,
	293, 1189,
	294, 1189,
	295, 1189,
	296, 1189,
	297, 1189,
	298, 1189,
	299, 1189,
	300, 1189,
	301, 1189,
	302, 1189,
	303, 1189,
	305, 1189,
	307, 1189,
	308, 1189,
	309, 1189,
	310, 1189,
	311, 1189,
	312, 1189,
	313, 1189,
	314, 1189,
	315, 1189,
	316, 1189,
	317, 1189,
	318, 1189,
	320, 1189,
	322, 1189,
	324, 1189,
	325, 1189,
	327, 1189,
	328, 1189,
	329, 1189,
	330, 1189,
	331, 1189,
	334, 1189,
	338, 1189,
	339, 1189,
	340, 1189,
	343, 1189,
	344, 1189,
	345, 1189,
	347, 1189,
	349, 1189,
	350, 1189,
	351, 1189,
	352, 1189,
	353, 1189,
	354, 1189,
	355, 1189,
	356, 1189,
	357, 1189,
	358, 1189,
	359, 1189,
	360, 1189,
	362, 1189,
	363, 1189,
	364, 1189,
	365, 1189,
	366, 1189,
	367, 1189,
	368, 1189,
	369, 1189,
	370, 1189,
	371, 1189,
	372, 1189,
	373, 1189,
	374, 1189,
	375, 1189,
	376, 1189,
	378, 1189,
	379, 1189,
	381, 1189,
	382, 1189,
	383, 1189,
	384, 1189,
	385, 1189,
	386, 1189,
	387, 1189,
	388, 1189,
	389, 1189,
	390, 1189,
	391, 1189,
	392, 1189,
	394, 1189,
	396, 1189,
	397, 1189,
	398, 1189,
	403, 1189,
	405, 1189,
	406, 1189,
	407, 1189,
	408, 1189,
	409, 1189,
	410, 1189,
	411, 1189,
	412, 1189,
	414, 1189,
	415, 1189,
	416, 1189,
	418, 1189,
	419, 1189,
	420, 1189,
	421, 1189,
	422, 1189,
	423, 1189,
	425, 1189,
	426, 1189,
	427, 1189,
	428, 1189,
	429, 1189,
	430, 1189,
	431, 1189,
	432, 1189,
	433, 1189,
	434, 1189,
	435, 1189,
	437, 1189,
	438, 1189,
	439, 1189,
	440, 1189,
	441, 1189,
	442, 1189,
	444, 1189,
	445, 1189,
	446, 1189,
	447, 1189,
	448, 1189,
	449, 1189,
	451, 1189,
	452, 1189,
	453, 1189,
	454, 1189,
	455, 1189,
	456, 1189,
	457, 1189,
	459, 1189,
	461, 1189,
	462, 1189,
	463, 1189,
	464, 1189,
	465, 1189,
	466, 1189,
	467, 1189,
	468, 1189,
	469, 1189,
	470, 1189,
	471, 1189,
	472, 1189,
	473, 1189,
	474, 1189,
	475, 1189,
	477, 1189,
	478, 1189,
	480, 1189,
	482, 1189,
	483, 1189,
	484, 1189,
	485, 1189,
	486, 1189,
	487, 1189,
	488, 1189,
	489, 1189,
	490, 1189,
	492, 1189,
	493, 1189,
	494, 1189,
	495, 1189,
	496, 1189,
	498, 1189,
	500, 1189,
	501, 1189,
	502, 1189,
	503, 1189,
	504, 1189,
	505, 1189,
	507, 1189,
	508, 1189,
	509, 1189,
	510, 1189,
	512, 1189,
	513, 1189,
	516, 1189,
	517, 1189,
	518, 1189,
	519, 1189,
	520, 1189,
	521, 1189,
	522, 1189,
	524, 1189,
	527, 1189,
	528, 1189,
	529, 1189,
	530, 1189,
	531, 1189,
	532, 1189,
	534, 1189,
	535, 1189,
	536, 1189,
	537, 1189,
	542, 1189,
	543, 1189,
	544, 1189,
	545, 1189,
	546, 1189,
	547, 1189,
	-2, 0,
	-1, 730,
	182, 2196,
	497, 2196,
	555, 2196,
	574, 2196,
	-2, 0,
	-1, 731,
	182, 2297,
	497, 2297,
	555, 2297,
	574, 2297,
	-2, 0,
	-1, 732,
	182, 2183,
	497, 2183,
	555, 2183,
	574, 2183,
	-2, 0,
	-1, 734,
	182, 2426,
	497, 2426,
	555, 2426,
	574, 2426,
	-2, 0,
	-1, 736,
	182, 2464,
	497, 2464,
	555, 2464,
	574, 2464,
	-2, 0,
	-1, 743,
	182, 2324,
	497, 2324,
	555, 2324,
	574, 2324,
	-2, 642,
	-1, 772,
	574, 2132,
	577, 2132,
	-2, 902,
	-1, 773,
	574, 2134,
	577, 2134,
	-2, 903,
	-1, 774,
	574, 2133,
	577, 2133,
	-2, 904,
	-1, 775,
	577, 2059,
	-2, 905,
	-1, 798,
	179, 235,
	-2, 0,
	-1, 821,
	44, 2106,
	-2, 0,
	-1, 822,
	534, 1168,
	-2, 972,
	-1, 838,
	4, 1568,
	21, 1568,
	22, 1568,
	23, 1568,
	24, 1568,
	25, 1568,
	26, 1568,
	27, 1568,
	28, 1568,
	30, 1568,
	31, 1568,
	37, 1568,
	42, 1568,
	43, 1568,
	45, 1568,
	46, 1568,
	47, 1568,
	48, 1568,
	49, 1568,
	50, 1568,
	51, 1568,
	53, 1568,
	54, 1568,
	55, 1568,
	56, 1568,
	58, 1568,
	59, 1568,
	60, 1568,
	61, 1568,
	62, 1568,
	63, 1568,
	64, 1568,
	68, 1568,
	69, 1568,
	70, 1568,
	71, 1568,
	73, 1568,
	74, 1568,
	75, 1568,
	79, 1568,
	80, 1568,
	81, 1568,
	82, 1568,
	83, 1568,
	84, 1568,
	85, 1568,
	88, 1568,
	89, 1568,
	90, 1568,
	91, 1568,
	92, 1568,
	94, 1568,
	96, 1568,
	97, 1568,
	98, 1568,
	99, 1568,
	100, 1568,
	101, 1568,
	103, 1568,
	104, 1568,
	105, 1568,
	107, 1568,
	108, 1568,
	116, 1568,
	117, 1568,
	118, 1568,
	119, 1568,
	121, 1568,
	122, 1568,
	123, 1568,
	125, 1568,
	126, 1568,
	127, 1568,
	129, 1568,
	130, 1568,
	132, 1568,
	133, 1568,
	134, 1568,
	137, 1568,
	138, 1568,
	139, 1568,
	141, 1568,
	142, 1568,
	144, 1568,
	145, 1568,
	146, 1568,
	148, 1568,
	149, 1568,
	150, 1568,
	151, 1568,
	152, 1568,
	153, 1568,
	154, 1568,
	155, 1568,
	156, 1568,
	157, 1568,
	158, 1568,
	159, 1568,
	160, 1568,
	161, 1568,
	162, 1568,
	163, 1568,
	165, 1568,
	171, 1568,
	172, 1568,
	173, 1568,
	174, 1568,
	178, 1568,
	180, 1568,
	184, 1568,
	185, 1568,
	186, 1568,
	187, 1568,
	188, 1568,
	189, 1568,
	190, 1568,
	191, 1568,
	192, 1568,
	193, 1568,
	194, 1568,
	195, 1568,
	196, 1568,
	198, 1568,
	199, 1568,
	201, 1568,
	202, 1568,
	204, 1568,
	205, 1568,
	206, 1568,
	207, 1568,
	208, 1568,
	209, 1568,
	210, 1568,
	211, 1568,
	212, 1568,
	214, 1568,
	215, 1568,
	217, 1568,
	218, 1568,
	219, 1568,
	220, 1568,
	224, 1568,
	225, 1568,
	226, 1568,
	227, 1568,
	228, 1568,
	231, 1568,
	232, 1568,
	233, 1568,
	235, 1568,
	237, 1568,
	238, 1568,
	240, 1568,
	242, 1568,
	243, 1568,
	244, 1568,
	246, 1568,
	250, 1568,
	251, 1568,
	252, 1568,
	253, 1568,
	254, 1568,
	255, 1568,
	257, 1568,
	258, 1568,
	259, 1568,
	261, 1568,
	262, 1568,
	264, 1568,
	265, 1568,
	268, 1568,
	272, 1568,
	273, 1568,
	274, 1568,
	277, 1568,
	278, 1568,
	279, 1568,
	280, 1568,
	282, 1568,
	283, 1568,
	284, 1568,
	285, 1568,
	286, 1568,
	287, 1568,
	288, 1568,
	289, 1568,
	290, 1568,
	291, 1568,
	292, 1568,
	293, 1568,
	294, 1568,
	295, 1568,
	296, 1568,
	297, 1568,
	298, 1568,
	299, 1568,
	300, 1568,
	301, 1568,
	302, 1568,
	303, 1568,
	305, 1568,
	307, 1568,
	308, 1568,
	309, 1568,
	310, 1568,
	311, 1568,
	312, 1568,
	313, 1568,
	314, 1568,
	315, 1568,
	316, 1568,
	317, 1568,
	318, 1568,
	320, 1568,
	322, 1568,
	324, 1568,
	325, 1568,
	327, 1568,
	328, 1568,
	329, 1568,
	330, 1568,
	331, 1568,
	334, 1568,
	338, 1568,
	339, 1568,
	340, 1568,
	343, 1568,
	344, 1568,
	345, 1568,
	347, 1568,
	349, 1568,
	350, 1568,
	351, 1568,
	352, 1568,
	353, 1568,
	354, 1568,
	355, 1568,
	356, 1568,
	357, 1568,
	358, 1568,
	359, 1568,
	360, 1568,
	362, 1568,
	363, 1568,
	364, 1568,
	365, 1568,
	366, 1568,
	367, 1568,
	368, 1568,
	369, 1568,
	370, 1568,
	371, 1568,
	372, 1568,
	373, 1568,
	374, 1568,
	375, 1568,
	376, 1568,
	378, 1568,
	379, 1568,
	381, 1568,
	382, 1568,
	383, 1568,
	384, 1568,
	385, 1568,
	386, 1568,
	387, 1568,
	388, 1568,
	389, 1568,
	390, 1568,
	391, 1568,
	392, 1568,
	394, 1568,
	396, 1568,
	397, 1568,
	398, 1568,
	403, 1568,
	405, 1568,
	406, 1568,
	407, 1568,
	408, 1568,
	409, 1568,
	410, 1568,
	411, 1568,
	412, 1568,
	414, 1568,
	415, 1568,
	416, 1568,
	418, 1568,
	419, 1568,
	420, 1568,
	421, 1568,
	422, 1568,
	423, 1568,
	425, 1568,
	426, 1568,
	427, 1568,
	428, 1568,
	429, 1568,
	430, 1568,
	431, 1568,
	432, 1568,
	433, 1568,
	434, 1568,
	435, 1568,
	437, 1568,
	438, 1568,
	439, 1568,
	440, 1568,
	441, 1568,
	442, 1568,
	444, 1568,
	445, 1568,
	446, 1568,
	447, 1568,
	448, 1568,
	449, 1568,
	451, 1568,
	452, 1568,
	453, 1568,
	454, 1568,
	455, 1568,
	456, 1568,
	457, 1568,
	459, 1568,
	461, 1568,
	462, 1568,
	463, 1568,
	464, 1568,
	465, 1568,
	466, 1568,
	467, 1568,
	468, 1568,
	469, 1568,
	470, 1568,
	471, 1568,
	472, 1568,
	473, 1568,
	474, 1568,
	475, 1568,
	477, 1568,
	478, 1568,
	480, 1568,
	482, 1568,
	483, 1568,
	484, 1568,
	485, 1568,
	486, 1568,
	487, 1568,
	488, 1568,
	489, 1568,
	490, 1568,
	492, 1568,
	493, 1568,
	494, 1568,
	495, 1568,
	496, 1568,
	498, 1568,
	500, 1568,
	501, 1568,
	502, 1568,
	503, 1568,
	504, 1568,
	505, 1568,
	507, 1568,
	508, 1568,
	509, 1568,
	510, 1568,
	512, 1568,
	513, 1568,
	516, 1568,
	517, 1568,
	518, 1568,
	519, 1568,
	520, 1568,
	521, 1568,
	522, 1568,
	524, 1568,
	527, 1568,
	528, 1568,
	529, 1568,
	530, 1568,
	531, 1568,
	532, 1568,
	534, 1568,
	535, 1568,
	536, 1568,
	537, 1568,
	542, 1568,
	543, 1568,
	544, 1568,
	545, 1568,
	546, 1568,
	547, 1568,
	-2, 0,
	-1, 846,
	254, 368,
	-2, 0,
	-1, 916,
	383, 807,
	442, 807,
	502, 807,
	-2, 0,
	-1, 917,
	383, 806,
	442, 806,
	502, 806,
	-2, 746,
	-1, 921,
	1, 851,
	571, 851,
	573, 851,
	575, 851,
	-2, 0,
	-1, 922,
	1, 781,
	571, 781,
	573, 781,
	575, 781,
	-2, 0,
	-1, 923,
	1, 785,
	571, 785,
	573, 785,
	575, 785,
	-2, 0,
	-1, 924,
	1, 901,
	179, 901,
	571, 901,
	573, 901,
	575, 901,
	-2, 0,
	-1, 932,
	1, 810,
	571, 810,
	573, 810,
	575, 810,
	-2, 0,
	-1, 938,
	1, 851,
	571, 851,
	573, 851,
	575, 851,
	-2, 0,
	-1, 939,
	1, 853,
	571, 853,
	573, 853,
	575, 853,
	-2, 0,
	-1, 940,
	1, 856,
	571, 856,
	573, 856,
	575, 856,
	-2, 0,
	-1, 946,
	1, 873,
	571, 873,
	573, 873,
	575, 873,
	-2, 0,
	-1, 947,
	1, 875,
	571, 875,
	573, 875,
	575, 875,
	-2, 0,
	-1, 998,
	166, 1443,
	179, 1443,
	267, 1443,
	332, 1443,
	-2, 1379,
	-1, 1013,
	166, 1442,
	179, 1442,
	267, 1442,
	332, 1442,
	-2, 1376,
	-1, 1039,
	574, 2131,
	-2, 650,
	-1, 1067,
	5, 2123,
	572, 2121,
	-2, 2112,
	-1, 1075,
	5, 2144,
	572, 2141,
	-2, 2132,
	-1, 1076,
	5, 2145,
	572, 2142,
	-2, 2133,
	-1, 1084,
	574, 2129,
	-2, 2111,
	-1, 1085,
	572, 2546,
	-2, 2130,
	-1, 1108,
	572, 2545,
	-2, 2146,
	-1, 1109,
	5, 1643,
	-2, 2516,
	-1, 1110,
	5, 1644,
	-2, 2517,
	-1, 1111,
	5, 1645,
	-2, 2531,
	-1, 1112,
	5, 1646,
	-2, 2495,
	-1, 1113,
	5, 1647,
	-2, 2529,
	-1, 1114,
	5, 1655,
	-2, 2508,
	-1, 1115,
	5, 1642,
	-2, 2504,
	-1, 1116,
	5, 1642,
	-2, 2503,
	-1, 1117,
	5, 1642,
	-2, 2522,
	-1, 1118,
	5, 1653,
	-2, 2497,
	-1, 1119,
	5, 1658,
	-2, 2496,
	-1, 1120,
	5, 1660,
	-2, 2541,
	-1, 1123,
	5, 1682,
	-2, 2534,
	-1, 1124,
	5, 1674,
	-2, 2535,
	-1, 1125,
	5, 1682,
	-2, 2536,
	-1, 1126,
	5, 1678,
	-2, 2537,
	-1, 1127,
	5, 1628,
	-2, 2509,
	-1, 1128,
	5, 1629,
	-2, 2510,
	-1, 1129,
	5, 1630,
	-2, 2498,
	-1, 1157,
	5, 1665,
	-2, 2542,
	-1, 1158,
	5, 1666,
	-2, 2532,
	-1, 1159,
	5, 1667,
	535, 1667,
	-2, 2499,
	-1, 1160,
	5, 1668,
	535, 1668,
	-2, 2500,
	-1, 1197,
	572, 2141,
	-2, 2132,
	-1, 1198,
	572, 2142,
	-2, 2133,
	-1, 1297,
	182, 2464,
	497, 2464,
	555, 2464,
	574, 2464,
	-2, 0,
	-1, 1300,
	1, 628,
	575, 628,
	-2, 1296,
	-1, 1427,
	405, 2107,
	444, 2107,
	565, 2107,
	-2, 2097,
	-1, 1438,
	576, 2107,
	-2, 2108,
	-1, 1443,
	1, 1165,
	571, 1165,
	573, 1165,
	575, 1165,
	-2, 1428,
	-1, 1491,
	390, 971,
	534, 971,
	-2, 363,
	-1, 1507,
	44, 2105,
	-2, 937,
	-1, 1514,
	1, 1165,
	571, 1165,
	573, 1165,
	575, 1165,
	-2, 1428,
	-1, 1521,
	4, 1189,
	21, 1189,
	22, 1189,
	23, 1189,
	24, 1189,
	25, 1189,
	26, 1189,
	27, 1189,
	28, 1189,
	30, 1189,
	31, 1189,
	37, 1189,
	42, 1189,
	43, 1189,
	45, 1189,
	46, 1189,
	47, 1189,
	48, 1189,
	49, 1189,
	50, 1189,
	51, 1189,
	53, 1189,
	54, 1189,
	55, 1189,
	56, 1189,
	58, 1189,
	59, 1189,
	60, 1189,
	61, 1189,
	62, 1189,
	63, 1189,
	64, 1189,
	68, 1189,
	69, 1189,
	70, 1189,
	71, 1189,
	73, 1189,
	74, 1189,
	75, 1189,
	79, 1189,
	80, 1189,
	81, 1189,
	82, 1189,
	83, 1189,
	84, 1189,
	85, 1189,
	88, 1189,
	89, 1189,
	90, 1189,
	91, 1189,
	92, 1189,
	94, 1189,
	96, 1189,
	97, 1189,
	98, 1189,
	99, 1189,
	100, 1189,
	101, 1189,
	103, 1189,
	104, 1189,
	105, 1189,
	107, 1189,
	108, 1189,
	116, 1189,
	117, 1189,
	118, 1189,
	119, 1189,
	121, 1189,
	122, 1189,
	123, 1189,
	125, 1189,
	126, 1189,
	127, 1189,
	129, 1189,
	130, 1189,
	132, 1189,
	133, 1189,
	134, 1189,
	137, 1189,
	138, 1189,
	139, 1189,
	141, 1189,
	142, 1189,
	144, 1189,
	145, 1189,
	146, 1189,
	148, 1189,
	149, 1189,
	150, 1189,
	151, 1189,
	152, 1189,
	153, 1189,
	154, 1189,
	155, 1189,
	156, 1189,
	157, 1189,
	158, 1189,
	159, 1189,
	160, 1189,
	161, 1189,
	162, 1189,
	163, 1189,
	171, 1189,
	172, 1189,
	173, 1189,
	174, 1189,
	178, 1189,
	180, 1189,
	184, 1189,
	185, 1189,
	186, 1189,
	187, 1189,
	188, 1189,
	189, 1189,
	190, 1189,
	191, 1189,
	192, 1189,
	193, 1189,
	194, 1189,
	195, 1189,
	196, 1189,
	198, 1189,
	199, 1189,
	201, 1189,
	202, 1189,
	204, 1189,
	205, 1189,
	206, 1189,
	207, 1189,
	208, 1189,
	209, 1189,
	210, 1189,
	211, 1189,
	212, 1189,
	214, 1189,
	215, 1189,
	217, 1189,
	218, 1189,
	219, 1189,
	220, 1189,
	225, 1189,
	226, 1189,
	227, 1189,
	228, 1189,
	231, 1189,
	232, 1189,
	233, 1189,
	235, 1189,
	237, 1189,
	238, 1189,
	240, 1189,
	242, 1189,
	243, 1189,
	244, 1189,
	246, 1189,
	250, 1189,
	251, 1189,
	252, 1189,
	253, 1189,
	254, 1189,
	255, 1189,
	257, 1189,
	258, 1189,
	259, 1189,
	261, 1189,
	262, 1189,
	264, 1189,
	265, 1189,
	268, 1189,
	272, 1189,
	273, 1189,
	274, 1189,
	277, 1189,
	278, 1189,
	279, 1189,
	280, 1189,
	282, 1189,
	283, 1189,
	284, 1189,
	285, 1189,
	286, 1189,
	287, 1189,
	288, 1189,
	289, 1189,
	290, 1189,
	291, 1189,
	292, 1189,
	293, 1189,
	294, 1189,
	295, 1189,
	296, 1189,
	297, 1189,
	298, 1189,
	299, 1189,
	300, 1189,
	301, 1189,
	302, 1189,
	303, 1189,
	305, 1189,
	307, 1189,
	308, 1189,
	309, 1189,
	310, 1189,
	311, 1189,
	312, 1189,
	313, 1189,
	314, 1189,
	315, 1189,
	316, 1189,
	317, 1189,
	318, 1189,
	320, 1189,
	324, 1189,
	325, 1189,
	327, 1189,
	328, 1189,
	329, 1189,
	330, 1189,
	331, 1189,
	334, 1189,
	336, 1189,
	338, 1189,
	339, 1189,
	340, 1189,
	343, 1189,
	344, 1189,
	345, 1189,
	347, 1189,
	349, 1189,
	350, 1189,
	351, 1189,
	352, 1189,
	353, 1189,
	354, 1189,
	355, 1189,
	356, 1189,
	357, 1189,
	358, 1189,
	359, 1189,
	360, 1189,
	362, 1189,
	363, 1189,
	364, 1189,
	365, 1189,
	366, 1189,
	367, 1189,
	368, 1189,
	369, 1189,
	370, 1189,
	371, 1189,
	372, 1189,
	373, 1189,
	374, 1189,
	375, 1189,
	376, 1189,
	378, 1189,
	379, 1189,
	381, 1189,
	382, 1189,
	383, 1189,
	384, 1189,
	385, 1189,
	386, 1189,
	387, 1189,
	388, 1189,
	389, 1189,
	390, 1189,
	391, 1189,
	392, 1189,
	394, 1189,
	396, 1189,
	397, 1189,
	398, 1189,
	403, 1189,
	405, 1189,
	406, 1189,
	407, 1189,
	408, 1189,
	409, 1189,
	410, 1189,
	411, 1189,
	412, 1189,
	414, 1189,
	415, 1189,
	416, 1189,
	418, 1189,
	419, 1189,
	420, 1189,
	421, 1189,
	422, 1189,
	423, 1189,
	425, 1189,
	426, 1189,
	427, 1189,
	428, 1189,
	429, 1189,
	430, 1189,
	431, 1189,
	432, 1189,
	433, 1189,
	434, 1189,
	435, 1189,
	437, 1189,
	438, 1189,
	439, 1189,
	440, 1189,
	441, 1189,
	442, 1189,
	444, 1189,
	445, 1189,
	446, 1189,
	447, 1189,
	448, 1189,
	449, 1189,
	451, 1189,
	452, 1189,
	453, 1189,
	454, 1189,
	455, 1189,
	456, 1189,
	457, 1189,
	459, 1189,
	461, 1189,
	462, 1189,
	463, 1189,
	464, 1189,
	465, 1189,
	466, 1189,
	467, 1189,
	468, 1189,
	469, 1189,
	470, 1189,
	471, 1189,
	472, 1189,
	473, 1189,
	474, 1189,
	475, 1189,
	477, 1189,
	478, 1189,
	480, 1189,
	482, 1189,
	483, 1189,
	484, 1189,
	485, 1189,
	486, 1189,
	487, 1189,
	488, 1189,
	489, 1189,
	490, 1189,
	492, 1189,
	493, 1189,
	494, 1189,
	495, 1189,
	496, 1189,
	498, 1189,
	500, 1189,
	501, 1189,
	502, 1189,
	503, 1189,
	504, 1189,
	505, 1189,
	507, 1189,
	508, 1189,
	509, 1189,
	510, 1189,
	512, 1189,
	513, 1189,
	516, 1189,
	517, 1189,
	518, 1189,
	519, 1189,
	520, 1189,
	521, 1189,
	522, 1189,
	524, 1189,
	527, 1189,
	528, 1189,
	529, 1189,
	530, 1189,
	531, 1189,
	532, 1189,
	534, 1189,
	535, 1189,
	536, 1189,
	537, 1189,
	542, 1189,
	543, 1189,
	544, 1189,
	545, 1189,
	546, 1189,
	547, 1189,
	-2, 0,
	-1, 1544,
	1, 501,
	571, 501,
	573, 501,
	575, 501,
	-2, 1399,
	-1, 1547,
	4, 2540,
	11, 2540,
	12, 2540,
	14, 2540,
	15, 2540,
	16, 2540,
	17, 2540,
	18, 2540,
	19, 2540,
	21, 2540,
	22, 2540,
	23, 2540,
	24, 2540,
	25, 2540,
	26, 2540,
	27, 2540,
	28, 2540,
	30, 2540,
	31, 2540,
	34, 2540,
	35, 2540,
	37, 2540,
	39, 2540,
	42, 2540,
	43, 2540,
	45, 2540,
	46, 2540,
	47, 2540,
	48, 2540,
	49, 2540,
	50, 2540,
	51, 2540,
	53, 2540,
	54, 2540,
	55, 2540,
	56, 2540,
	58, 2540,
	59, 2540,
	60, 2540,
	61, 2540,
	62, 2540,
	63, 2540,
	64, 2540,
	68, 2540,
	69, 2540,
	70, 2540,
	71, 2540,
	73, 2540,
	74, 2540,
	75, 2540,
	76, 2540,
	79, 2540,
	80, 2540,
	81, 2540,
	82, 2540,
	83, 2540,
	84, 2540,
	85, 2540,
	86, 2540,
	88, 2540,
	89, 2540,
	90, 2540,
	91, 2540,
	92, 2540,
	94, 2540,
	95, 2540,
	96, 2540,
	97, 2540,
	98, 2540,
	99, 2540,
	100, 2540,
	101, 2540,
	103, 2540,
	104, 2540,
	105, 2540,
	106, 2540,
	107, 2540,
	108, 2540,
	116, 2540,
	117, 2540,
	118, 2540,
	119, 2540,
	121, 2540,
	122, 2540,
	123, 2540,
	125, 2540,
	126, 2540,
	127, 2540,
	129, 2540,
	130, 2540,
	132, 2540,
	133, 2540,
	134, 2540,
	137, 2540,
	138, 2540,
	139, 2540,
	141, 2540,
	142, 2540,
	144, 2540,
	145, 2540,
	146, 2540,
	148, 2540,
	149, 2540,
	150, 2540,
	151, 2540,
	152, 2540,
	153, 2540,
	154, 2540,
	155, 2540,
	156, 2540,
	157, 2540,
	158, 2540,
	159, 2540,
	160, 2540,
	161, 2540,
	162, 2540,
	163, 2540,
	167, 2540,
	168, 2540,
	169, 2540,
	170, 2540,
	171, 2540,
	172, 2540,
	173, 2540,
	174, 2540,
	177, 2540,
	178, 2540,
	180, 2540,
	183, 2540,
	184, 2540,
	185, 2540,
	186, 2540,
	187, 2540,
	188, 2540,
	189, 2540,
	190, 2540,
	191, 2540,
	192, 2540,
	193, 2540,
	194, 2540,
	195, 2540,
	196, 2540,
	198, 2540,
	199, 2540,
	201, 2540,
	202, 2540,
	204, 2540,
	205, 2540,
	206, 2540,
	207, 2540,
	208, 2540,
	209, 2540,
	210, 2540,
	211, 2540,
	212, 2540,
	213, 2540,
	214, 2540,
	215, 2540,
	216, 2540,
	217, 2540,
	218, 2540,
	219, 2540,
	220, 2540,
	222, 2540,
	223, 2540,
	225, 2540,
	226, 2540,
	227, 2540,
	228, 2540,
	230, 2540,
	231, 2540,
	232, 2540,
	233, 2540,
	235, 2540,
	237, 2540,
	238, 2540,
	239, 2540,
	240, 2540,
	241, 2540,
	242, 2540,
	243, 2540,
	244, 2540,
	245, 2540,
	246, 2540,
	248, 2540,
	249, 2540,
	250, 2540,
	251, 2540,
	252, 2540,
	253, 2540,
	254, 2540,
	255, 2540,
	257, 2540,
	258, 2540,
	259, 2540,
	261, 2540,
	262, 2540,
	263, 2540,
	264, 2540,
	265, 2540,
	266, 2540,
	268, 2540,
	272, 2540,
	273, 2540,
	274, 2540,
	277, 2540,
	278, 2540,
	279, 2540,
	280, 2540,
	281, 2540,
	282, 2540,
	283, 2540,
	284, 2540,
	285, 2540,
	286, 2540,
	287, 2540,
	288, 2540,
	289, 2540,
	290, 2540,
	291, 2540,
	292, 2540,
	293, 2540,
	294, 2540,
	295, 2540,
	296, 2540,
	297, 2540,
	298, 2540,
	299, 2540,
	300, 2540,
	301, 2540,
	302, 2540,
	303, 2540,
	305, 2540,
	306, 2540,
	307, 2540,
	308, 2540,
	309, 2540,
	310, 2540,
	311, 2540,
	312, 2540,
	313, 2540,
	314, 2540,
	315, 2540,
	316, 2540,
	317, 2540,
	318, 2540,
	320, 2540,
	323, 2540,
	324, 2540,
	325, 2540,
	327, 2540,
	328, 2540,
	329, 2540,
	330, 2540,
	331, 2540,
	334, 2540,
	338, 2540,
	339, 2540,
	340, 2540,
	341, 2540,
	343, 2540,
	344, 2540,
	345, 2540,
	347, 2540,
	349, 2540,
	350, 2540,
	351, 2540,
	352, 2540,
	353, 2540,
	354, 2540,
	355, 2540,
	356, 2540,
	357, 2540,
	358, 2540,
	359, 2540,
	360, 2540,
	362, 2540,
	363, 2540,
	364, 2540,
	365, 2540,
	366, 2540,
	367, 2540,
	368, 2540,
	369, 2540,
	370, 2540,
	371, 2540,
	372, 2540,
	373, 2540,
	374, 2540,
	375, 2540,
	376, 2540,
	378, 2540,
	379, 2540,
	381, 2540,
	382, 2540,
	383, 2540,
	384, 2540,
	385, 2540,
	386, 2540,
	387, 2540,
	388, 2540,
	389, 2540,
	390, 2540,
	391, 2540,
	392, 2540,
	394, 2540,
	396, 2540,
	397, 2540,
	398, 2540,
	403, 2540,
	404, 2540,
	405, 2540,
	406, 2540,
	407, 2540,
	408, 2540,
	409, 2540,
	410, 2540,
	411, 2540,
	412, 2540,
	414, 2540,
	415, 2540,
	416, 2540,
	417, 2540,
	418, 2540,
	419, 2540,
	420, 2540,
	421, 2540,
	422, 2540,
	423, 2540,
	424, 2540,
	425, 2540,
	426, 2540,
	427, 2540,
	428, 2540,
	429, 2540,
	430, 2540,
	431, 2540,
	432, 2540,
	433, 2540,
	434, 2540,
	435, 2540,
	437, 2540,
	438, 2540,
	439, 2540,
	440, 2540,
	441, 2540,
	442, 2540,
	444, 2540,
	445, 2540,
	446, 2540,
	447, 2540,
	448, 2540,
	449, 2540,
	450, 2540,
	451, 2540,
	452, 2540,
	453, 2540,
	454, 2540,
	455, 2540,
	456, 2540,
	457, 2540,
	459, 2540,
	461, 2540,
	462, 2540,
	463, 2540,
	464, 2540,
	465, 2540,
	466, 2540,
	467, 2540,
	468, 2540,
	469, 2540,
	470, 2540,
	471, 2540,
	472, 2540,
	473, 2540,
	474, 2540,
	475, 2540,
	477, 2540,
	478, 2540,
	480, 2540,
	482, 2540,
	483, 2540,
	484, 2540,
	485, 2540,
	486, 2540,
	487, 2540,
	488, 2540,
	489, 2540,
	490, 2540,
	492, 2540,
	493, 2540,
	494, 2540,
	495, 2540,
	496, 2540,
	498, 2540,
	500, 2540,
	501, 2540,
	502, 2540,
	503, 2540,
	504, 2540,
	505, 2540,
	507, 2540,
	508, 2540,
	509, 2540,
	510, 2540,
	512, 2540,
	513, 2540,
	516, 2540,
	517, 2540,
	518, 2540,
	519, 2540,
	520, 2540,
	521, 2540,
	522, 2540,
	524, 2540,
	527, 2540,
	528, 2540,
	529, 2540,
	530, 2540,
	531, 2540,
	532, 2540,
	534, 2540,
	535, 2540,
	536, 2540,
	537, 2540,
	542, 2540,
	543, 2540,
	544, 2540,
	545, 2540,
	546, 2540,
	547, 2540,
	548, 2540,
	550, 2540,
	553, 2540,
	554, 2540,
	555, 2540,
	556, 2540,
	557, 2540,
	558, 2540,
	560, 2540,
	561, 2540,
	562, 2540,
	563, 2540,
	564, 2540,
	565, 2540,
	566, 2540,
	567, 2540,
	568, 2540,
	570, 2540,
	573, 2540,
	574, 2540,
	576, 2540,
	577, 2540,
	-2, 0,
	-1, 1552,
	182, 2426,
	497, 2426,
	555, 2426,
	574, 2426,
	-2, 0,
	-1, 1601,
	383, 807,
	442, 807,
	502, 807,
	-2, 0,
	-1, 1628,
	1, 802,
	571, 802,
	573, 802,
	575, 802,
	-2, 0,
	-1, 1629,
	1, 838,
	571, 838,
	573, 838,
	575, 838,
	-2, 0,
	-1, 1630,
	1, 846,
	571, 846,
	573, 846,
	575, 846,
	-2, 0,
	-1, 1631,
	1, 809,
	571, 809,
	573, 809,
	575, 809,
	-2, 0,
	-1, 1633,
	1, 813,
	571, 813,
	573, 813,
	575, 813,
	-2, 0,
	-1, 1639,
	1, 820,
	571, 820,
	573, 820,
	575, 820,
	-2, 0,
	-1, 1667,
	1, 2486,
	571, 2486,
	573, 2486,
	574, 2486,
	575, 2486,
	-2, 871,
	-1, 1668,
	1, 2423,
	571, 2423,
	573, 2423,
	574, 2423,
	575, 2423,
	-2, 872,
	-1, 1686,
	1, 1291,
	575, 1291,
	-2, 1296,
	-1, 1689,
	166, 1442,
	179, 1442,
	267, 1442,
	332, 1442,
	-2, 1380,
	-1, 1783,
	147, 1401,
	166, 1401,
	179, 1401,
	234, 1401,
	267, 1401,
	332, 1401,
	342, 1401,
	514, 1401,
	-2, 1843,
	-1, 1843,
	573, 1993,
	-2, 0,
	-1, 1878,
	147, 1401,
	166, 1401,
	179, 1401,
	234, 1401,
	267, 1401,
	332, 1401,
	342, 1401,
	514, 1401,
	-2, 1529,
	-1, 1927,
	572, 1670,
	-2, 1658,
	-1, 2005,
	1, 630,
	575, 630,
	-2, 1296,
	-1, 2125,
	216, 236,
	-2, 2140,
	-1, 2126,
	216, 237,
	-2, 279,
	-1, 2225,
	1, 804,
	571, 804,
	573, 804,
	575, 804,
	-2, 0,
	-1, 2226,
	1, 840,
	571, 840,
	573, 840,
	575, 840,
	-2, 0,
	-1, 2227,
	1, 848,
	571, 848,
	573, 848,
	575, 848,
	-2, 0,
	-1, 2261,
	1, 822,
	571, 822,
	573, 822,
	575, 822,
	-2, 0,
	-1, 2310,
	422, 1469,
	423, 1469,
	-2, 1703,
	-1, 2341,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1723,
	-1, 2342,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1724,
	-1, 2343,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1725,
	-1, 2344,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1726,
	-1, 2345,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1727,
	-1, 2346,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1728,
	-1, 2347,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1729,
	-1, 2348,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1730,
	-1, 2360,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1742,
	-1, 2361,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1743,
	-1, 2362,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1744,
	-1, 2365,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1749,
	-1, 2371,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1753,
	-1, 2373,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1761,
	-1, 2374,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1762,
	-1, 2375,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1763,
	-1, 2376,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1764,
	-1, 2512,
	5, 2144,
	182, 2004,
	572, 2141,
	-2, 2132,
	-1, 2513,
	182, 2005,
	-2, 2491,
	-1, 2514,
	182, 2006,
	-2, 2323,
	-1, 2515,
	182, 2007,
	-2, 2212,
	-1, 2516,
	182, 2008,
	-2, 2264,
	-1, 2517,
	182, 2009,
	-2, 2308,
	-1, 2518,
	182, 2010,
	-2, 2421,
	-1, 2519,
	182, 2011,
	-2, 1826,
	-1, 2589,
	1, 1530,
	2, 1530,
	106, 1530,
	147, 1530,
	166, 1530,
	179, 1530,
	183, 1530,
	200, 1530,
	203, 1530,
	230, 1530,
	234, 1530,
	245, 1530,
	263, 1530,
	267, 1530,
	306, 1530,
	332, 1530,
	336, 1530,
	342, 1530,
	413, 1530,
	417, 1530,
	514, 1530,
	525, 1530,
	539, 1530,
	540, 1530,
	541, 1530,
	551, 1530,
	571, 1530,
	573, 1530,
	575, 1530,
	577, 1530,
	-2, 1529,
	-1, 2602,
	572, 2113,
	-2, 2127,
	-1, 2604,
	53, 1428,
	132, 1428,
	-2, 295,
	-1, 2629,
	572, 1669,
	-2, 1659,
	-1, 2801,
	1, 1165,
	571, 1165,
	573, 1165,
	575, 1165,
	-2, 1428,
	-1, 2963,
	337, 1472,
	-2, 2530,
	-1, 2964,
	337, 1473,
	-2, 2407,
	-1, 2968,
	422, 2070,
	423, 2070,
	-2, 1824,
	-1, 2969,
	422, 2074,
	423, 2074,
	-2, 1825,
	-1, 2970,
	422, 2071,
	423, 2071,
	-2, 1824,
	-1, 2971,
	422, 2075,
	423, 2075,
	-2, 1825,
	-1, 2984,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1751,
	-1, 2985,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1755,
	-1, 2991,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1757,
	-1, 3231,
	1, 627,
	571, 627,
	573, 627,
	575, 627,
	-2, 1296,
	-1, 3373,
	44, 2105,
	-2, 938,
	-1, 3378,
	1, 1165,
	571, 1165,
	573, 1165,
	575, 1165,
	-2, 1428,
	-1, 3480,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1759,
	-1, 3487,
	239, 0,
	241, 0,
	323, 0,
	-2, 1778,
	-1, 3554,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1807,
	-1, 3555,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1808,
	-1, 3556,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1809,
	-1, 3560,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1813,
	-1, 3561,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1814,
	-1, 3562,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1815,
	-1, 3608,
	572, 2114,
	-2, 2128,
	-1, 3761,
	574, 2647,
	-2, 1354,
	-1, 3817,
	239, 0,
	241, 0,
	323, 0,
	-2, 1779,
	-1, 3820,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1782,
	-1, 3821,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1784,
	-1, 3916,
	574, 2129,
	-2, 1199,
	-1, 4045,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1783,
	-1, 4046,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1785,
	-1, 4057,
	239, 0,
	-2, 1816,
	-1, 4219,
	239, 0,
	-2, 1817,
	-1, 4397,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 2494,
}

const sqlPrivate = 57344

const sqlLast = 120023

var sqlAct = [...]int{
	260, 4492, 4255, 2863, 2876, 3142, 4277, 4378, 2693, 3362,
	4273, 4099, 4449, 3363, 4145, 4407, 4518, 4294, 4396, 4367,
	2122, 4348, 4351, 4331, 4247, 4408, 4152, 1067, 1455, 4409,
	4086, 4461, 3519, 3800, 4172, 4223, 4395, 1201, 4002, 3997,
	3912, 3969, 4104, 2544, 3472, 4066, 1023, 1190, 2320, 3951,
	4034, 3256, 3753, 4161, 3983, 3913, 1269, 2734, 3695, 3308,
	2977, 3394, 3897, 2752, 2388, 3388, 1914, 1987, 4186, 1262,
	1273, 741, 2203, 4007, 774, 3358, 1698, 3729, 3713, 2328,
	2764, 2060, 1567, 3715, 3259, 2852, 3348, 2885, 1884, 4062,
	3435, 2321, 2834, 3611, 1962, 2824, 2194, 1424, 774, 3165,
	3185, 1255, 3856, 3799, 1333, 3157, 3125, 2898, 3148, 3242,
	2887, 4, 848, 2895, 3433, 2884, 2878, 3146, 2070, 2864,
	2201, 2849, 2117, 2847, 2168, 4493, 2695, 2116, 1853, 2325,
	1609, 1022, 172, 1829, 3579, 4224, 2582, 2401, 2430, 1791,
	1431, 2584, 3124, 2581, 769, 3253, 1267, 1509, 2894, 254,
	2778, 2095, 2102, 1181, 2111, 2835, 105, 253, 2961, 2733,
	1071, 2041, 2044, 1686, 1316, 1241, 1985, 2562, 1074, 2421,
	2432, 2031, 1854, 1073, 2309, 1873, 4274, 1974, 3192, 2385,
	2292, 3360, 2290, 2614, 1566, 1076, 2857, 1545, 1264, 775,
	2156, 658, 1512, 776, 2678, 680, 672, 2888, 2613, 1302,
	2424, 2541, 841, 1184, 1863, 2571, 2552, 1163, 2474, 1824,
	1776, 181, 2508, 1870, 2402, 1699, 182, 723, 1700, 771,
	2291, 2293, 172, 780, 1639, 2155, 735, 1198, 2180, 1450,
	1536, 783, 2059, 1543, 4450, 1180, 4295, 1963, 1252, 1960,
	675, 2314, 1052, 1161, 44, 1186, 43, 780, 41, 1705,
	910, 683, 1915, 32, 1196, 783, 1275, 30, 28, 3012,
	930, 1685, 1461, 3593, 842, 3594, 3097, 3098, 3008, 698,
	1014, 4589, 4579, 822, 3144, 2561, 3413, 1018, 4565, 1018,
	4564, 1976, 2561, 1976, 2561, 3404, 3097, 3098, 1976, 1976,
	3215, 3214, 72, 1976, 845, 844, 4554, 1976, 3021, 4536,
	2130, 4534, 1078, 4103, 3022, 4103, 4480, 4438, 73, 4431,
	2130, 4439, 3403, 2561, 4429, 4426, 4423, 863, 2561, 4427,
	4424, 4393, 4392, 4391, 77, 2130, 2130, 1997, 2554, 1219,
	4386, 3413, 3097, 3098, 1997, 1178, 2130, 2976, 4385, 4376,
	1019, 3112, 1997, 4103, 4374, 4346, 4319, 4312, 4103, 4103,
	2620, 2561, 4311, 2561, 4306, 4305, 2561, 1454, 4103, 4103,
	1164, 1164, 4299, 4269, 84, 4221, 2130, 3961, 4203, 2620,
	4200, 4197, 3788, 4154, 2130, 4103, 4119, 4155, 4118, 4110,
	2130, 4109, 2130, 2130, 999, 4103, 4102, 4073, 1311, 998,
	4103, 2130, 1713, 1714, 1575, 1193, 3200, 4320, 4047, 4026,
	1192, 846, 2620, 1997, 4015, 3946, 3934, 3819, 3413, 2561,
	2561, 2620, 1311, 3769, 2202, 104, 1744, 3430, 3763, 2639,
	90, 101, 3430, 1716, 3727, 3603, 3601, 4225, 3728, 3604,
	3602, 1008, 3103, 3586, 4216, 3097, 3098, 2561, 3583, 3503,
	3499, 3429, 1013, 2130, 2561, 3430, 3420, 3141, 1212, 3136,
	3421, 2561, 3103, 2561, 3135, 3088, 3062, 1715, 2561, 3089,
	3063, 2616, 1167, 1165, 1168, 1713, 1714, 2760, 1746, 1747,
	1748, 1756, 1757, 1758, 3054, 3052, 1994, 91, 3055, 2561,
	3023, 2901, 2874, 2873, 2561, 1997, 2190, 2190, 1749, 1744,
	2662, 2619, 3097, 3098, 2561, 2620, 1716, 2130, 3103, 2638,
	4204, 2611, 2605, 1997, 1762, 2561, 2130, 90, 3583, 2560,
	2553, 2189, 2561, 2561, 3011, 2190, 3996, 3961, 3935, 3788,
	3421, 2755, 2677, 2010, 1975, 1991, 1994, 2064, 1213, 2830,
	1715, 2129, 224, 2772, 2675, 1849, 3113, 1449, 3097, 3098,
	1735, 3115, 3116, 3117, 3683, 3475, 3451, 1871, 2105, 1732,
	3405, 1611, 2598, 2860, 2597, 2596, 3113, 2595, 1721, 3097,
	3098, 3815, 3115, 3116, 3117, 2594, 1169, 1713, 1714, 3406,
	3872, 1463, 224, 1166, 1007, 1006, 1005, 226, 1004, 1121,
	1003, 1002, 3814, 1001, 2939, 3097, 3098, 997, 3115, 3116,
	3117, 996, 995, 994, 993, 992, 991, 990, 1716, 989,
	988, 3103, 3113, 1743, 1745, 987, 986, 985, 3490, 984,
	983, 982, 981, 3112, 2427, 908, 907, 226, 906, 905,
	94, 1738, 1739, 1740, 1741, 904, 225, 1632, 1977, 903,
	1977, 1721, 1715, 902, 3112, 1977, 1977, 218, 901, 900,
	1977, 899, 224, 898, 1977, 897, 219, 1050, 896, 895,
	894, 893, 892, 891, 890, 889, 888, 887, 3103, 886,
	3112, 885, 1736, 884, 883, 882, 225, 1753, 183, 881,
	1763, 180, 97, 880, 100, 879, 1743, 1745, 3831, 3114,
	3403, 878, 877, 4207, 3621, 1213, 1994, 226, 876, 866,
	865, 861, 860, 1759, 854, 1760, 853, 840, 224, 3114,
	2428, 839, 1730, 1731, 3103, 3113, 847, 797, 183, 796,
	795, 145, 794, 786, 1561, 1462, 1278, 1076, 785, 784,
	1751, 2457, 3597, 2553, 1213, 3103, 756, 747, 746, 745,
	729, 248, 247, 1721, 246, 1736, 225, 245, 244, 243,
	1076, 242, 241, 226, 1076, 3114, 240, 218, 1475, 239,
	238, 3103, 237, 236, 235, 234, 219, 233, 1469, 232,
	1336, 231, 3113, 230, 1336, 229, 3118, 228, 1278, 147,
	227, 3431, 3188, 3139, 4009, 3034, 1454, 1761, 183, 3017,
	1027, 2429, 2922, 2426, 184, 224, 1315, 3118, 2811, 1076,
	1320, 1076, 225, 1076, 2649, 1750, 1975, 2843, 145, 1278,
	2624, 1994, 1991, 218, 1463, 1737, 2638, 2443, 3113, 1306,
	2285, 3140, 219, 3118, 2603, 3108, 3106, 3107, 3099, 3100,
	3101, 3102, 3104, 3105, 1278, 2588, 2441, 1874, 224, 3113,
	226, 2039, 1434, 1996, 843, 1439, 3106, 3107, 3099, 3100,
	3101, 3102, 3104, 3105, 1278, 2197, 1579, 1897, 3114, 1278,
	1712, 4228, 1802, 1457, 1322, 3113, 1793, 1076, 1742, 1076,
	1200, 4414, 4394, 1278, 1429, 224, 4284, 1453, 4213, 1076,
	4205, 1076, 4061, 226, 1194, 1246, 1249, 4097, 1737, 225,
	4016, 3108, 3106, 3107, 3099, 3100, 3101, 3102, 3104, 3105,
	218, 1463, 1463, 3995, 1832, 1518, 1520, 1259, 3879, 219,
	1300, 1831, 3854, 3853, 1754, 3114, 3847, 3846, 3845, 3838,
	226, 1565, 1329, 1441, 1421, 1426, 1278, 3837, 3835, 1713,
	1714, 183, 225, 1835, 2171, 2196, 3830, 780, 2431, 1832,
	1523, 1713, 1714, 218, 1076, 783, 1831, 1076, 3827, 3097,
	3098, 3826, 219, 1744, 1717, 1718, 1719, 1720, 1722, 1723,
	1716, 3114, 3732, 3097, 3098, 1474, 1548, 1550, 1830, 225,
	3726, 1295, 1716, 3625, 183, 1468, 3624, 1452, 1507, 3623,
	218, 1451, 3114, 1286, 4011, 3607, 172, 172, 1795, 219,
	3574, 3573, 3572, 3495, 1715, 1580, 3107, 3099, 3100, 3101,
	3102, 3104, 3105, 3491, 1735, 3183, 1715, 1800, 3114, 3132,
	1019, 2859, 1752, 1732, 1794, 3123, 1792, 1727, 1728, 1734,
	1755, 1733, 1729, 3681, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 3096, 3093, 3092, 3090, 4334, 3061, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 3060, 3059, 2845, 2425,
	1306, 3056, 3053, 1306, 3099, 3100, 3101, 3102, 3104, 3105,
	3033, 3016, 3009, 2875, 3813, 1021, 2589, 2414, 1712, 1177,
	1076, 224, 3137, 4583, 1793, 2633, 1076, 1711, 2137, 1648,
	4528, 4527, 4494, 3733, 1539, 1738, 1739, 1740, 1741, 4448,
	3109, 3110, 3111, 2135, 4446, 1721, 1202, 3108, 3106, 3107,
	3099, 3100, 3101, 3102, 3104, 3105, 3521, 1721, 4338, 3206,
	1546, 3109, 3110, 3111, 2719, 3103, 226, 4276, 3108, 3106,
	3107, 3099, 3100, 3101, 3102, 3104, 3105, 4265, 1684, 3103,
	1560, 1719, 1720, 1722, 1723, 4262, 4261, 3109, 3110, 3111,
	1743, 1745, 1574, 4260, 3108, 3106, 3107, 3099, 3100, 3101,
	3102, 3104, 3105, 4241, 4227, 4226, 1782, 4201, 224, 224,
	4185, 4184, 2391, 4170, 4167, 225, 1730, 1731, 4115, 4093,
	4059, 4042, 1585, 1634, 4041, 4023, 218, 4022, 3986, 3962,
	3871, 1076, 1076, 1076, 3852, 219, 3789, 1076, 1602, 3783,
	3780, 3670, 224, 3669, 1198, 3656, 1198, 3655, 3653, 1736,
	3733, 3589, 224, 226, 226, 1635, 3577, 183, 3486, 1780,
	3432, 1336, 1851, 3414, 3381, 3320, 3287, 3258, 3208, 1076,
	4010, 1196, 774, 1196, 2397, 3038, 1019, 3037, 1932, 774,
	1860, 3032, 1278, 3000, 2823, 2844, 4208, 226, 1838, 1837,
	1836, 1900, 1687, 1904, 999, 1695, 1694, 226, 1833, 998,
	1825, 1911, 225, 225, 1713, 1714, 1823, 2631, 1958, 2630,
	2600, 2593, 1907, 218, 218, 2559, 2439, 1896, 1689, 1834,
	1691, 1852, 219, 219, 1847, 1846, 1708, 1709, 1845, 1690,
	1844, 1843, 1842, 1841, 1905, 1716, 225, 1840, 1839, 224,
	224, 1820, 1819, 1818, 183, 183, 225, 218, 1278, 1817,
	1816, 4229, 2456, 1815, 1881, 1076, 219, 218, 1814, 1278,
	1857, 1858, 1813, 1812, 1164, 1901, 219, 1811, 1810, 1715,
	1809, 1808, 1742, 1807, 1806, 2198, 1795, 1076, 183, 172,
	1781, 1779, 1774, 1336, 226, 226, 1826, 1827, 183, 1294,
	1217, 1208, 1737, 1537, 3989, 3875, 3823, 3620, 2003, 2622,
	1568, 3180, 1019, 2022, 2021, 224, 3600, 2030, 2032, 3592,
	3020, 2591, 1193, 1542, 1193, 4077, 3877, 1192, 3619, 1192,
	1794, 780, 1882, 2037, 2002, 3204, 1903, 1777, 780, 783,
	1306, 3409, 2028, 225, 225, 2030, 783, 1892, 2442, 1069,
	3097, 3098, 4525, 2030, 218, 218, 1319, 3937, 2030, 1879,
	226, 4517, 2753, 219, 219, 1872, 3313, 2440, 4162, 1874,
	4263, 4157, 4156, 4014, 39, 3964, 1850, 224, 3290, 3963,
	3936, 1979, 3874, 4206, 3792, 183, 183, 3791, 3790, 3595,
	3416, 3415, 1311, 1832, 1981, 3736, 3473, 1983, 1312, 1876,
	1831, 1908, 1891, 1988, 1890, 1311, 1889, 1990, 1955, 225,
	2738, 1887, 1993, 1682, 1318, 1886, 1885, 4096, 1278, 1278,
	218, 1311, 226, 3058, 1912, 2427, 1601, 2172, 1336, 219,
	3057, 2005, 1317, 2025, 2982, 1733, 1729, 2016, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 2721, 1966, 1314,
	3668, 183, 979, 1717, 1718, 1719, 1720, 1722, 1723, 224,
	1815, 3099, 3100, 3101, 3102, 3104, 3105, 3365, 3260, 3364,
	1804, 225, 4390, 3425, 1649, 1815, 2052, 3101, 3102, 3104,
	3105, 2089, 218, 2094, 2195, 4153, 2099, 4434, 4419, 4406,
	1926, 219, 4063, 1610, 2217, 980, 3349, 1999, 2001, 2899,
	2123, 2127, 1611, 2422, 226, 2118, 2008, 3692, 3688, 3674,
	3448, 2428, 1308, 183, 1966, 3229, 3144, 3314, 2064, 3523,
	1278, 4415, 1278, 3026, 1278, 1966, 2033, 2023, 2629, 1848,
	1828, 3356, 2165, 1517, 1801, 1446, 1289, 1245, 4428, 4425,
	1278, 1278, 3399, 3648, 2027, 4256, 3998, 2766, 4136, 4345,
	2069, 1278, 835, 225, 4238, 2769, 1541, 3263, 3663, 2882,
	2856, 3342, 4478, 1278, 218, 1278, 1278, 1278, 4477, 780,
	2120, 3467, 3233, 219, 2300, 3925, 3705, 783, 4508, 2161,
	1493, 2103, 2026, 1485, 977, 975, 973, 4416, 774, 1646,
	971, 1313, 2429, 2663, 2426, 183, 2204, 2267, 968, 1176,
	4578, 4129, 1447, 4121, 2265, 4082, 1589, 3959, 3701, 1452,
	3700, 2681, 2166, 1451, 3694, 3687, 2177, 3685, 3635, 3634,
	3345, 3199, 3031, 2225, 1628, 960, 2679, 2681, 3030, 3235,
	3029, 3028, 3205, 2298, 2087, 2006, 2088, 2098, 1542, 2200,
	2221, 3704, 2679, 2986, 2776, 2017, 2775, 2771, 1309, 2128,
	2185, 2762, 2670, 836, 1647, 2209, 2751, 1310, 2750, 2747,
	2216, 2746, 2725, 1494, 2712, 2612, 2064, 2372, 1688, 1017,
	2470, 1301, 1076, 2469, 1076, 2330, 1019, 1529, 1019, 1528,
	2146, 1076, 2226, 1629, 1932, 1932, 1336, 1645, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 2187, 1076, 2205, 1076, 1076, 1076, 1076,
	2174, 2179, 2148, 2183, 2289, 2147, 1539, 780, 2182, 2431,
	2182, 1319, 2227, 1630, 2853, 783, 2302, 1319, 1076, 1295,
	2697, 1076, 1076, 2191, 1582, 2192, 1016, 965, 1527, 1076,
	1526, 1312, 3449, 1076, 2283, 1076, 1076, 1929, 1489, 3289,
	3884, 1723, 2299, 1336, 2213, 4509, 1546, 2208, 1546, 1076,
	1076, 1076, 1076, 1587, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 3260, 2300, 2403, 2404, 4040, 1312, 1205, 1318,
	1502, 1194, 2092, 1194, 2527, 1318, 670, 2243, 2403, 2419,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 2195,
	2604, 1311, 2279, 1076, 2723, 2711, 3651, 2233, 2271, 3883,
	2276, 2284, 1231, 665, 2465, 1198, 2261, 4512, 1203, 754,
	1658, 2623, 1336, 2297, 2684, 2313, 2387, 2959, 4249, 1862,
	2425, 1198, 2298, 2511, 2511, 2525, 2061, 2403, 4538, 2700,
	2545, 2547, 1196, 1448, 1018, 2710, 2551, 1076, 1336, 955,
	1583, 1541, 2034, 2035, 2387, 1308, 2286, 2230, 1196, 2686,
	1693, 2288, 2287, 3921, 2301, 2294, 2742, 999, 3711, 2057,
	999, 999, 2317, 3659, 1012, 2318, 2319, 2045, 2395, 1603,
	2735, 2736, 1293, 2046, 2418, 2393, 1019, 3105, 2735, 2736,
	2601, 1308, 2974, 2735, 2736, 1019, 2062, 2063, 3304, 1019,
	3938, 2422, 2576, 3297, 2803, 2184, 1866, 3710, 2278, 4513,
	2296, 2055, 874, 2234, 1644, 3457, 2326, 2327, 3456, 2224,
	2936, 838, 837, 2568, 1206, 752, 2058, 1599, 4412, 2383,
	2431, 4477, 1513, 1641, 1313, 2083, 2399, 3303, 1681, 1881,
	2997, 1164, 3296, 2802, 4251, 3958, 2467, 2685, 1278, 1278,
	1586, 2468, 955, 1869, 2471, 3686, 2472, 2473, 2381, 2416,
	833, 2101, 832, 956, 3684, 3344, 1926, 1926, 1864, 2995,
	1313, 2299, 2688, 1892, 2082, 2617, 2590, 1012, 3311, 1511,
	1662, 2567, 3232, 1193, 2100, 2770, 1867, 1019, 1192, 2768,
	1336, 1309, 2047, 1611, 4489, 172, 2575, 2507, 2580, 1193,
	1310, 2586, 2587, 2520, 1192, 2658, 1272, 2549, 2536, 2051,
	3671, 2652, 1611, 2765, 2557, 2558, 1015, 2096, 4515, 2973,
	2569, 2767, 1932, 2573, 2574, 2745, 2680, 1309, 2724, 1865,
	1834, 2687, 1306, 4039, 1879, 2699, 1310, 2134, 2133, 2625,
	4497, 2651, 2297, 3512, 2062, 2063, 72, 3509, 4496, 2615,
	2966, 2967, 2610, 3397, 4541, 4466, 1336, 3909, 1443, 3159,
	3919, 2722, 73, 969, 969, 969, 956, 2275, 3888, 970,
	1278, 2067, 1285, 2666, 2097, 2266, 2660, 969, 77, 2048,
	2053, 2632, 2264, 2689, 3805, 1076, 1076, 2106, 1076, 1478,
	3905, 2654, 2668, 2113, 2643, 4521, 2636, 2377, 2646, 4413,
	2647, 1826, 1827, 3804, 3396, 2635, 2637, 2644, 2992, 1588,
	2066, 1278, 1488, 2648, 1514, 2378, 4568, 2661, 84, 2683,
	2379, 1491, 2763, 2115, 2384, 2669, 2653, 2659, 3510, 2743,
	3396, 2993, 753, 2827, 2655, 2998, 1976, 3645, 2727, 1554,
	1868, 1278, 3906, 2867, 1460, 2667, 1467, 666, 1473, 4380,
	957, 4381, 4327, 1278, 3644, 846, 2841, 2055, 2896, 2664,
	2714, 2071, 2049, 4316, 1311, 2277, 2942, 3244, 1278, 104,
	2232, 3247, 2726, 2698, 90, 101, 1230, 2114, 3660, 755,
	4257, 1204, 751, 2075, 2369, 2744, 2737, 2739, 2740, 2741,
	2431, 2702, 2705, 2692, 2806, 4326, 4411, 4080, 2808, 4250,
	1311, 4514, 2112, 867, 2054, 2833, 1593, 3323, 2055, 1076,
	3920, 3889, 1559, 1584, 1564, 855, 966, 2923, 2754, 2924,
	1659, 2749, 667, 2748, 1573, 4271, 1578, 1513, 3275, 780,
	3234, 91, 1656, 2093, 719, 2900, 1215, 783, 2072, 3978,
	2837, 3443, 3278, 1929, 1929, 2681, 1821, 2085, 3158, 3202,
	3436, 2871, 2920, 957, 2904, 2905, 1076, 4036, 3238, 2881,
	2703, 2988, 1076, 1076, 4465, 2911, 2912, 2913, 668, 1452,
	669, 172, 2945, 2809, 2728, 2431, 2902, 875, 2869, 2055,
	2906, 2684, 2907, 1657, 3274, 2919, 3801, 1633, 958, 2386,
	2821, 4052, 3280, 4488, 2947, 4365, 2949, 2928, 2831, 2930,
	2380, 2932, 2229, 4356, 1692, 1010, 4441, 955, 3944, 2394,
	2382, 2994, 2917, 2064, 688, 4442, 2686, 1076, 1076, 1773,
	2862, 2996, 2090, 1076, 1926, 2927, 1292, 2929, 2872, 2931,
	2883, 2950, 1012, 3036, 2952, 2572, 1076, 1076, 959, 3901,
	4519, 2076, 1076, 1076, 3902, 3438, 4314, 2367, 1076, 2940,
	2370, 2413, 2870, 4542, 2618, 3279, 1660, 1076, 1076, 1076,
	3437, 2684, 2086, 1076, 2223, 2851, 3718, 1966, 2585, 3245,
	1018, 1598, 1600, 1076, 94, 3716, 2926, 1011, 3525, 4529,
	2925, 2050, 3988, 3795, 4315, 2989, 3616, 3806, 4035, 2954,
	1076, 958, 3019, 1866, 2579, 3904, 2686, 1546, 1220, 3469,
	2366, 3014, 3015, 2944, 2685, 2957, 3018, 2077, 2078, 4278,
	1702, 3907, 4410, 1616, 2109, 4476, 4474, 4293, 2965, 2956,
	2955, 956, 1703, 1697, 4169, 180, 97, 2313, 100, 2688,
	2960, 2073, 2975, 2941, 2310, 3751, 3384, 1035, 3672, 2154,
	1869, 959, 4520, 1661, 868, 869, 1859, 1218, 3434, 1211,
	657, 3979, 224, 1862, 3731, 2570, 856, 857, 1702, 4464,
	847, 3718, 1194, 4569, 3193, 145, 3802, 2316, 2107, 2065,
	3716, 3563, 2074, 1867, 2018, 4522, 3850, 4112, 1194, 4111,
	1076, 1076, 1076, 1977, 2685, 3719, 4547, 4090, 2687, 1076,
	1076, 1076, 3443, 4178, 1076, 3924, 4237, 226, 1019, 2987,
	3752, 3436, 3923, 3698, 1076, 1198, 1336, 2108, 3647, 2688,
	1076, 1701, 1076, 3151, 3152, 3254, 3385, 3377, 2682, 2015,
	3250, 1198, 4279, 147, 4037, 2842, 2836, 2825, 2178, 2943,
	1866, 3631, 1196, 3903, 2729, 2167, 2159, 3134, 184, 1336,
	3025, 2140, 1888, 3508, 2704, 1482, 225, 1920, 1196, 1222,
	2306, 1198, 4440, 3153, 1336, 3578, 728, 218, 4332, 1701,
	3470, 3439, 3440, 3441, 3442, 2563, 219, 787, 2687, 1702,
	3910, 1932, 3173, 2528, 2084, 1336, 1703, 1869, 1196, 3754,
	3719, 4081, 4296, 3890, 2368, 2079, 3249, 3248, 183, 1278,
	1278, 3198, 1864, 4003, 2013, 2272, 3438, 2011, 3186, 2566,
	2093, 1929, 2822, 1233, 4151, 4149, 4092, 3266, 957, 2214,
	1867, 3437, 1076, 3212, 3807, 3167, 3163, 3262, 3261, 2980,
	2958, 3591, 2609, 1631, 1703, 3010, 1076, 1868, 2091, 3161,
	870, 871, 3182, 3156, 2014, 3155, 2608, 3239, 3240, 2607,
	2565, 2606, 858, 859, 1932, 2564, 3723, 1535, 3717, 2829,
	1533, 1521, 4244, 1865, 873, 1016, 4146, 3564, 3230, 2080,
	1773, 3264, 1076, 1278, 3268, 1522, 3565, 3223, 3714, 3162,
	1701, 3851, 3236, 1193, 3171, 3172, 3145, 3191, 1192, 3179,
	3174, 3175, 3970, 3216, 3217, 2307, 1306, 3160, 4546, 1193,
	3129, 3130, 3131, 2708, 1192, 252, 3808, 2092, 1278, 3922,
	4100, 4195, 3654, 2730, 2731, 3265, 3168, 3426, 3270, 2176,
	1904, 3272, 3352, 1336, 4280, 3177, 4485, 3178, 4275, 1193,
	4020, 4079, 1278, 3632, 1192, 3326, 2903, 1278, 3329, 3251,
	2807, 2805, 3334, 3336, 1592, 4335, 3195, 3196, 3197, 4245,
	3324, 3292, 4088, 3717, 1009, 4342, 958, 1617, 4329, 3857,
	1278, 3209, 3210, 4187, 3211, 3166, 1278, 3277, 1278, 3310,
	3580, 3220, 1336, 2438, 1868, 1677, 4188, 3224, 3315, 774,
	4360, 3219, 1679, 4487, 3221, 3222, 4430, 3231, 4264, 3225,
	1278, 3226, 3361, 3227, 3294, 3194, 4089, 3170, 3127, 4019,
	3237, 1278, 3307, 3321, 3306, 4058, 959, 4189, 3849, 1676,
	3295, 4101, 1674, 3312, 2052, 3305, 1653, 1198, 788, 789,
	1651, 3392, 3439, 3440, 3441, 3442, 3331, 3722, 2896, 3126,
	4336, 3338, 3187, 3203, 4246, 3376, 3281, 2896, 1627, 3485,
	3330, 3446, 1278, 1278, 1196, 3337, 3288, 727, 3347, 1625,
	3350, 2052, 1623, 3299, 2193, 1966, 1966, 1621, 3300, 3302,
	1619, 1613, 3301, 1608, 1278, 1606, 3213, 4191, 3316, 1531,
	1272, 2206, 3091, 2999, 2826, 3322, 2761, 3390, 2720, 2634,
	2280, 2207, 1899, 1926, 3401, 3370, 1895, 3332, 3339, 3343,
	4190, 1534, 2103, 2215, 1532, 2218, 2219, 2220, 872, 1680,
	2103, 1570, 1336, 3169, 3465, 1336, 3255, 4192, 2263, 3464,
	1697, 2938, 2937, 2909, 2727, 2295, 3391, 2274, 3346, 1640,
	2238, 2139, 1959, 3354, 2437, 1805, 1581, 1506, 780, 1966,
	4405, 3690, 3412, 3689, 3393, 3386, 783, 1076, 3945, 3373,
	3374, 3933, 4328, 1076, 1076, 3410, 3411, 1076, 1076, 1076,
	967, 1076, 4001, 3950, 3325, 3894, 1926, 4462, 791, 790,
	1076, 1932, 1678, 3400, 1966, 172, 172, 3450, 3398, 1076,
	3444, 3750, 1076, 3463, 3424, 3428, 1019, 3407, 1336, 3742,
	3703, 3666, 3664, 3646, 3380, 1193, 3505, 1076, 1966, 1675,
	1192, 3375, 1673, 1966, 3422, 1336, 1652, 3389, 3366, 2854,
	1650, 2840, 2832, 2819, 3460, 1932, 1932, 1076, 1076, 3462,
	1076, 1076, 1076, 3466, 2804, 2650, 792, 793, 1626, 3453,
	2645, 3454, 2138, 3455, 2136, 2119, 2104, 3488, 3471, 1624,
	2081, 2068, 1622, 2056, 1998, 1995, 1992, 1620, 1989, 1984,
	1618, 1612, 3459, 1607, 1982, 1605, 2962, 1978, 3445, 1530,
	1969, 3333, 1076, 1920, 1920, 4454, 1076, 2113, 1932, 1932,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 3468,
	1076, 3537, 1906, 1173, 1706, 2262, 3613, 1076, 1076, 1932,
	2978, 4478, 2019, 2951, 1076, 2281, 4370, 4025, 4018, 4017,
	3957, 972, 974, 976, 3880, 1076, 3493, 3538, 2897, 2038,
	1174, 1487, 4180, 2709, 4173, 3762, 1198, 1198, 2681, 2064,
	1076, 2681, 3504, 1671, 1672, 2228, 2528, 2528, 3511, 3513,
	3514, 1254, 3520, 2679, 3527, 3952, 2706, 3575, 2258, 2282,
	4369, 2257, 2235, 1196, 1196, 3926, 4193, 2175, 1604, 1336,
	3535, 4194, 1253, 4215, 3536, 3858, 3609, 3836, 715, 3636,
	1929, 2732, 1194, 3515, 1334, 3612, 2112, 1084, 1432, 2713,
	3596, 1713, 1714, 1710, 1713, 1714, 1287, 1221, 1194, 4481,
	4472, 2979, 4435, 671, 2818, 3697, 3534, 3542, 3614, 3615,
	1707, 3567, 2260, 249, 2756, 3739, 1076, 3540, 2160, 1298,
	2766, 2715, 3626, 3627, 3628, 1716, 3696, 2774, 1194, 3576,
	2773, 4321, 4288, 256, 256, 256, 1175, 660, 661, 1076,
	676, 660, 676, 686, 3587, 3588, 726, 3582, 3568, 172,
	744, 767, 1254, 1929, 4285, 750, 1715, 1254, 682, 1715,
	654, 256, 2758, 823, 3497, 3498, 3584, 3585, 1076, 1076,
	4243, 4165, 4516, 4144, 3741, 2757, 2717, 2326, 3528, 852,
	3730, 3606, 3379, 1926, 3909, 256, 3640, 2861, 2550, 2716,
	2528, 2528, 2528, 2004, 3598, 1913, 4098, 3892, 4362, 3891,
	3643, 1076, 3599, 4363, 1193, 1193, 3246, 3201, 4545, 1192,
	1192, 3675, 3097, 3098, 1713, 1714, 4287, 3905, 2657, 1272,
	4362, 3898, 1454, 1278, 4491, 4363, 3828, 1926, 1926, 2433,
	2326, 3543, 2673, 2674, 2671, 2672, 3618, 1591, 3896, 2673,
	2671, 3679, 1932, 1590, 3693, 2466, 1655, 3900, 4166, 1654,
	4130, 3953, 3949, 3680, 3682, 3691, 3948, 3824, 3748, 3622,
	3617, 3571, 3516, 3650, 3327, 1799, 1798, 4531, 4498, 3906,
	4325, 1278, 4324, 4323, 4230, 4147, 3699, 1076, 3629, 4125,
	1926, 1926, 3630, 4078, 4075, 1198, 1076, 3981, 3764, 3673,
	3876, 3786, 2867, 3768, 3725, 3662, 1278, 1278, 1278, 3771,
	3657, 2727, 3383, 3382, 3271, 3218, 660, 660, 3087, 3086,
	3899, 1926, 1196, 1278, 256, 3085, 3084, 3083, 3721, 2896,
	3737, 3082, 3081, 3080, 3079, 3078, 3665, 3077, 3667, 3076,
	3075, 1920, 1336, 3755, 3708, 3074, 3073, 3759, 3738, 1263,
	2801, 3756, 3072, 3071, 2718, 3070, 3069, 3068, 3712, 3067,
	3709, 3720, 3066, 3740, 3065, 3064, 1336, 2935, 2916, 1076,
	1076, 3724, 2915, 2914, 2846, 1076, 1076, 1932, 2820, 3787,
	1076, 1076, 2707, 1076, 2641, 2627, 2626, 1076, 2398, 2259,
	2256, 2255, 2254, 2759, 1194, 3745, 3743, 1427, 1076, 2253,
	1438, 1263, 3702, 2252, 3757, 3775, 2173, 2149, 2145, 2144,
	2143, 2142, 3766, 3765, 1076, 3760, 2141, 1972, 1971, 1970,
	3770, 1968, 3776, 3777, 1670, 3809, 3822, 3778, 2812, 1669,
	1614, 2815, 3784, 2817, 3785, 1501, 1500, 1785, 3782, 3781,
	1499, 1790, 1498, 3818, 1497, 1496, 3810, 1495, 2910, 1490,
	1486, 1484, 1483, 1327, 1326, 1325, 3793, 3803, 1324, 1323,
	1291, 1263, 1263, 1193, 1290, 1240, 1239, 1238, 1192, 1237,
	1929, 1236, 1235, 1234, 1198, 2858, 3901, 1232, 2858, 3798,
	1227, 3902, 1198, 1226, 1225, 1224, 1336, 1223, 1336, 1156,
	2009, 978, 964, 4248, 3908, 1198, 1664, 89, 1492, 810,
	83, 1196, 2110, 3661, 3255, 935, 4359, 1476, 3863, 1196,
	4270, 818, 1336, 4344, 1929, 1929, 3273, 2777, 2237, 1615,
	2239, 3181, 1196, 2592, 4313, 3832, 3035, 4222, 4051, 2436,
	1803, 3138, 3904, 3881, 3882, 1898, 85, 3848, 1060, 1106,
	3977, 3976, 3186, 3895, 1198, 3649, 1198, 2886, 3907, 3974,
	3973, 1917, 2933, 3758, 1926, 1919, 1026, 1339, 4379, 2020,
	1066, 2036, 2029, 3927, 2628, 2510, 3866, 1929, 1929, 1083,
	1080, 1196, 1921, 1196, 1336, 3918, 1923, 3860, 3861, 3855,
	1082, 3869, 3859, 3865, 3862, 1336, 3917, 3886, 3929, 3930,
	3864, 3914, 1081, 3914, 3873, 3870, 1922, 1822, 1929, 172,
	3954, 1079, 3955, 1916, 3747, 3746, 2828, 2865, 3928, 3408,
	1540, 1538, 937, 1278, 1278, 2024, 2392, 2420, 3024, 1796,
	1041, 1062, 2417, 1216, 3893, 1051, 1040, 3971, 3164, 3143,
	1278, 3395, 3605, 2305, 827, 3094, 2423, 1207, 2533, 2526,
	2522, 1336, 1193, 3228, 2855, 1683, 1278, 1192, 4065, 1775,
	1193, 2866, 3968, 1321, 1044, 1192, 2390, 2040, 2528, 2528,
	1787, 3004, 2315, 1193, 3956, 3947, 3402, 3184, 1192, 3966,
	3903, 1198, 3932, 3994, 2621, 3943, 4366, 3524, 2153, 1926,
	1172, 1278, 1278, 1278, 3940, 1171, 3942, 1214, 1170, 3960,
	4350, 4347, 1336, 1194, 1194, 3779, 3967, 3965, 1196, 3359,
	3941, 2012, 4024, 2665, 1076, 1076, 1076, 3910, 4004, 1765,
	3367, 4021, 1193, 1056, 1193, 1437, 4005, 1192, 3914, 1192,
	3987, 3999, 1336, 3991, 3990, 4008, 3149, 1076, 3427, 3972,
	1076, 1076, 1503, 4006, 749, 4105, 1068, 1764, 2798, 2797,
	1076, 4240, 1307, 1932, 1305, 1304, 1303, 4505, 1076, 1076,
	4567, 3658, 223, 2972, 1704, 1696, 220, 3993, 222, 221,
	1209, 4043, 3982, 1336, 4030, 1278, 3610, 3190, 4433, 4027,
	2528, 2528, 2528, 2528, 2528, 2528, 2528, 2528, 2528, 2528,
	2528, 2528, 2528, 2528, 2528, 2528, 2528, 2528, 2528, 1336,
	2528, 4032, 2131, 1229, 4028, 3677, 4038, 1076, 3351, 23,
	22, 21, 109, 42, 20, 256, 1076, 256, 256, 4060,
	1258, 256, 1268, 125, 1076, 144, 1932, 143, 4054, 117,
	142, 141, 140, 1288, 1076, 139, 146, 1076, 138, 137,
	132, 1929, 744, 136, 135, 134, 1076, 133, 4084, 1193,
	4071, 4072, 1438, 1336, 1192, 131, 4074, 129, 130, 4108,
	124, 128, 127, 126, 1278, 1278, 256, 123, 256, 256,
	1258, 122, 256, 256, 1268, 121, 120, 119, 4085, 118,
	116, 115, 4083, 4124, 114, 256, 113, 1456, 4091, 112,
	111, 110, 740, 737, 61, 3361, 1966, 4159, 1438, 60,
	1920, 108, 1336, 107, 19, 1278, 4135, 4122, 1480, 4150,
	40, 14, 65, 66, 18, 13, 35, 88, 99, 98,
	36, 4126, 96, 1198, 1198, 95, 34, 1505, 17, 1268,
	16, 4164, 4132, 256, 256, 4013, 1258, 15, 93, 4179,
	92, 4140, 1076, 1076, 33, 4139, 4127, 4142, 31, 4148,
	1196, 1196, 1194, 11, 4143, 744, 9, 256, 256, 1076,
	1932, 4163, 4158, 4198, 4199, 8, 1929, 4174, 4137, 4177,
	3914, 3914, 4176, 1920, 37, 4175, 1883, 12, 5, 4182,
	852, 177, 4171, 176, 4138, 4211, 4212, 4181, 179, 4196,
	4008, 175, 178, 87, 1076, 174, 4048, 1076, 173, 86,
	29, 10, 169, 4160, 1198, 4116, 4117, 3735, 4210, 80,
	171, 170, 168, 4183, 167, 166, 1198, 81, 78, 4236,
	3284, 3285, 165, 4202, 3286, 82, 4220, 164, 79, 4131,
	163, 1196, 4133, 4134, 27, 6, 64, 7, 4033, 4231,
	3340, 3447, 4233, 1196, 102, 103, 38, 4235, 76, 75,
	74, 3914, 26, 256, 63, 1926, 4259, 1076, 1076, 4252,
	2329, 3317, 3318, 3914, 4258, 3319, 4253, 25, 1198, 207,
	3371, 1198, 256, 206, 205, 1278, 204, 203, 4114, 202,
	197, 3378, 196, 201, 199, 1278, 1278, 198, 200, 4266,
	195, 1193, 1193, 210, 209, 1196, 1192, 1192, 1196, 215,
	4304, 214, 1278, 4282, 4283, 213, 4268, 212, 4290, 211,
	4281, 4292, 208, 217, 4286, 3914, 1076, 1076, 3914, 194,
	3001, 3002, 3418, 3419, 193, 191, 1076, 187, 1926, 4298,
	186, 1194, 4300, 4163, 190, 4309, 192, 4310, 189, 1194,
	188, 4302, 4303, 4301, 185, 4297, 216, 2434, 161, 162,
	71, 160, 1194, 159, 158, 4308, 157, 2164, 4307, 4317,
	156, 2396, 4337, 1076, 1076, 4318, 1076, 155, 154, 70,
	4341, 4322, 1193, 24, 2, 1, 1785, 1192, 0, 0,
	0, 0, 0, 4364, 1193, 4368, 0, 0, 0, 1192,
	0, 0, 4361, 0, 4349, 4352, 0, 4340, 4339, 0,
	0, 1194, 0, 1194, 0, 4384, 4353, 0, 4388, 4357,
	4354, 0, 0, 4267, 0, 1076, 1076, 1076, 4358, 0,
	4389, 0, 4214, 0, 0, 0, 4371, 0, 0, 4387,
	2532, 4375, 0, 0, 0, 0, 1193, 4383, 0, 1193,
	0, 1192, 2602, 0, 1192, 0, 1076, 0, 4417, 4422,
	0, 0, 4401, 4402, 4404, 0, 4403, 0, 0, 0,
	4382, 0, 1926, 0, 3120, 3121, 3122, 4418, 0, 0,
	660, 4436, 0, 0, 0, 0, 0, 4445, 2045, 0,
	1920, 4420, 0, 0, 2046, 0, 4443, 0, 0, 0,
	0, 256, 0, 256, 0, 4459, 0, 256, 1076, 4444,
	0, 4447, 4457, 0, 0, 0, 0, 0, 0, 0,
	1456, 1258, 256, 4458, 256, 0, 4463, 0, 4453, 256,
	1456, 676, 0, 0, 1920, 1920, 256, 1456, 1194, 4479,
	0, 0, 1929, 4469, 4470, 4475, 4471, 4483, 4473, 0,
	4452, 1973, 0, 4451, 4482, 0, 4484, 1198, 4368, 1198,
	4486, 4500, 0, 256, 4499, 0, 4490, 0, 4349, 4495,
	256, 4352, 4503, 0, 0, 0, 0, 0, 4510, 0,
	4501, 4507, 0, 4511, 1196, 0, 1196, 1920, 1920, 0,
	4506, 0, 4455, 4456, 2676, 4524, 0, 4502, 4460, 4504,
	0, 0, 0, 2047, 3914, 4523, 3914, 0, 4526, 0,
	744, 0, 0, 0, 0, 1929, 0, 0, 1920, 4532,
	2051, 0, 0, 0, 4535, 4537, 4533, 1076, 1076, 0,
	0, 0, 4540, 4530, 4539, 0, 1076, 0, 1076, 1076,
	0, 0, 0, 0, 4552, 4543, 4432, 4557, 4549, 4555,
	0, 0, 4561, 0, 4556, 4562, 0, 2867, 0, 4558,
	4560, 0, 0, 0, 4563, 0, 0, 4570, 4566, 0,
	0, 4559, 0, 0, 4573, 0, 0, 4575, 0, 4576,
	4571, 4550, 4551, 0, 4574, 4577, 0, 4580, 0, 0,
	2048, 2053, 4572, 0, 1076, 4582, 0, 4581, 0, 0,
	0, 4588, 4584, 4590, 0, 0, 4585, 0, 4587, 0,
	4591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1193, 757, 1193, 0, 0,
	1192, 0, 1192, 0, 0, 0, 0, 4586, 0, 0,
	2528, 0, 0, 0, 0, 0, 0, 0, 0, 1929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 1263, 0, 256, 0, 0,
	0, 0, 0, 2049, 0, 0, 2793, 0, 0, 0,
	1194, 1194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3706, 0, 0, 0, 2528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2785,
	2783, 0, 1263, 0, 0, 2054, 2787, 2789, 2779, 2055,
	256, 0, 0, 0, 256, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 762, 0, 0, 0, 0, 1263, 1263, 0,
	256, 1920, 256, 0, 0, 0, 660, 0, 256, 0,
	0, 1194, 0, 0, 0, 0, 3772, 3773, 3774, 3282,
	744, 0, 0, 1194, 852, 0, 3097, 3098, 0, 3115,
	3116, 3117, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3744, 0, 0, 0, 0, 256,
	0, 1258, 256, 2532, 0, 0, 0, 0, 3283, 0,
	1713, 1714, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 256, 721, 1194, 0, 0, 1194, 0,
	2236, 0, 3481, 3482, 1744, 256, 256, 1427, 256, 0,
	256, 1716, 256, 0, 256, 0, 0, 0, 764, 2528,
	0, 3112, 0, 0, 0, 0, 0, 0, 0, 0,
	1438, 3794, 0, 0, 0, 2268, 0, 0, 2269, 0,
	2270, 0, 0, 0, 0, 1715, 1920, 0, 0, 0,
	0, 0, 256, 2532, 2532, 1735, 0, 0, 0, 0,
	0, 2781, 2050, 0, 1732, 0, 258, 0, 0, 0,
	0, 0, 2795, 0, 0, 0, 726, 768, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2794, 2786, 2784, 2788, 2790, 2780, 2782,
	2796, 0, 0, 0, 0, 0, 0, 2792, 0, 0,
	0, 0, 3103, 0, 3544, 3545, 3546, 3547, 3548, 3549,
	3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559,
	3560, 3561, 3562, 0, 3566, 0, 1738, 1739, 1740, 1741,
	2799, 0, 0, 0, 0, 0, 1721, 2045, 0, 759,
	0, 3119, 0, 2046, 0, 0, 0, 0, 0, 0,
	1438, 0, 0, 0, 1713, 1714, 0, 0, 1263, 0,
	0, 0, 0, 0, 3118, 0, 0, 0, 0, 763,
	3150, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 1743, 1745, 0, 0, 1716, 0, 2532, 2532, 2532,
	0, 0, 1438, 0, 1438, 3097, 3098, 0, 3115, 3116,
	3117, 0, 720, 3176, 0, 0, 3113, 1730, 1731, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 3189, 1715,
	0, 761, 0, 0, 0, 0, 0, 660, 0, 1735,
	0, 0, 0, 1272, 0, 0, 0, 0, 1732, 3207,
	1736, 1039, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 2047, 0, 0, 0, 0, 0, 256, 0,
	660, 0, 0, 0, 1194, 758, 1194, 0, 0, 2051,
	3112, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 1268, 3484,
	0, 0, 0, 765, 0, 0, 0, 0, 0, 0,
	2800, 4029, 0, 4031, 0, 3980, 0, 722, 0, 2791,
	1738, 1739, 1740, 1741, 0, 0, 3992, 0, 760, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 1268, 0, 676, 4012, 2048,
	2053, 0, 0, 0, 0, 0, 0, 2640, 0, 3114,
	0, 0, 0, 256, 0, 0, 256, 0, 0, 0,
	256, 3103, 256, 1742, 0, 1743, 1745, 1258, 0, 256,
	256, 0, 1268, 1268, 2656, 0, 0, 0, 0, 256,
	0, 0, 0, 1737, 0, 4076, 0, 0, 0, 0,
	0, 1730, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 0, 0, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 2049, 2696, 1736, 0, 3189, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 2054, 3113, 0, 0, 2055, 0,
	0, 0, 0, 0, 4141, 1920, 0, 84, 3109, 3110,
	3111, 0, 256, 0, 0, 3108, 3106, 3107, 3099, 3100,
	3101, 3102, 3104, 3105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 2810, 0,
	0, 0, 0, 0, 846, 0, 1733, 1729, 2042, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 104, 0,
	0, 0, 1456, 90, 101, 256, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 1742, 0, 0,
	0, 0, 2850, 0, 0, 0, 1432, 2043, 0, 1334,
	0, 0, 2696, 0, 660, 1438, 1438, 1737, 0, 0,
	0, 0, 0, 2879, 852, 0, 2696, 2696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	91, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3114, 1920,
	256, 1258, 256, 0, 0, 0, 1456, 0, 1456, 1268,
	256, 0, 0, 1258, 0, 1258, 0, 1258, 0, 0,
	0, 0, 3501, 0, 0, 0, 0, 0, 0, 1438,
	0, 2050, 0, 0, 0, 2532, 2532, 0, 0, 3517,
	0, 0, 0, 256, 256, 256, 256, 1258, 0, 0,
	1258, 256, 2164, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 1272, 1272, 0, 0, 0,
	1733, 1729, 256, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 1272, 0, 0, 0, 0, 0, 0, 4272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 3109, 3110, 3111,
	4289, 0, 0, 0, 3108, 3106, 3107, 3099, 3100, 3101,
	3102, 3104, 3105, 0, 0, 0, 0, 2532, 2532, 2532,
	2532, 2532, 2532, 2532, 2532, 2532, 2532, 2532, 2532, 2532,
	2532, 2532, 2532, 2532, 2532, 2532, 0, 2532, 0, 0,
	0, 0, 0, 0, 180, 97, 0, 100, 0, 0,
	0, 1456, 0, 0, 0, 0, 1039, 0, 0, 0,
	1039, 0, 0, 3608, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 1419, 0, 0, 847,
	1419, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 72, 0, 0, 0, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0,
	73, 0, 0, 0, 4057, 0, 226, 0, 0, 0,
	4372, 1438, 1744, 4373, 0, 0, 77, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 147, 0, 0, 3097, 3098, 0, 3115, 3116,
	3117, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 1715, 0, 225, 84, 0, 3489, 0,
	0, 4094, 0, 1735, 0, 0, 218, 0, 0, 0,
	0, 0, 1732, 0, 0, 219, 0, 0, 1713, 1714,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 0, 0, 183, 256, 0,
	0, 0, 1744, 660, 0, 0, 0, 104, 660, 1716,
	3112, 660, 90, 101, 660, 660, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1456, 0, 0, 1715, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 1456, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 256, 0, 0, 0, 256, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 3103, 0, 0, 0, 0, 2696, 2696, 256, 0,
	3243, 0, 0, 4219, 0, 0, 1759, 0, 1760, 2696,
	0, 0, 3257, 0, 0, 1730, 1731, 0, 0, 0,
	2696, 3257, 0, 2696, 3257, 0, 0, 3257, 0, 0,
	0, 0, 0, 1751, 1721, 0, 0, 0, 0, 0,
	256, 256, 3243, 256, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 3118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3243, 256, 0, 3309, 3309, 0, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 2696, 0, 3328, 2696, 3243, 0,
	1761, 2696, 2696, 3243, 0, 3113, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 3355, 1736, 0,
	3357, 2696, 0, 0, 256, 0, 0, 0, 256, 0,
	1268, 0, 3868, 180, 97, 0, 100, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2850,
	0, 1742, 1258, 0, 256, 0, 3878, 2696, 0, 660,
	224, 0, 1263, 0, 0, 0, 2696, 0, 847, 0,
	0, 1737, 0, 145, 0, 0, 0, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 2850, 0,
	0, 2850, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 2164, 3097, 3098, 0, 3115, 3116, 3117, 3114, 0,
	3452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 0, 0, 0, 0, 3458, 0, 0,
	1258, 256, 0, 256, 0, 0, 184, 0, 0, 1258,
	0, 0, 0, 0, 225, 0, 0, 1713, 1714, 0,
	0, 1737, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 256, 0,
	0, 1744, 0, 0, 0, 0, 0, 3112, 1716, 0,
	0, 0, 0, 1039, 0, 1752, 1551, 0, 0, 1419,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	0, 0, 1715, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 3522, 0, 1334, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 3109, 3110, 3111,
	0, 0, 0, 0, 3108, 3106, 3107, 3099, 3100, 3101,
	3102, 3104, 3105, 0, 0, 0, 4049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3479, 0, 0, 0, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 4049, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 2532, 0, 0,
	0, 0, 0, 2329, 1419, 0, 0, 0, 0, 0,
	3118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 660, 660, 0, 0, 0,
	0, 0, 3113, 0, 2532, 0, 0, 2329, 0, 0,
	0, 0, 0, 0, 1730, 1731, 0, 1456, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1456, 1456, 1456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2164, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1263, 0, 0, 0, 3309, 0, 0, 1713, 1714, 0,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	1713, 1714, 0, 0, 0, 0, 1762, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1108, 1744, 0, 0, 0, 0, 0,
	0, 1716, 1715, 3309, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 256, 3114, 0, 0, 1713, 1714,
	0, 1732, 0, 0, 0, 0, 2532, 0, 0, 0,
	0, 0, 3243, 256, 0, 1715, 0, 0, 0, 0,
	1742, 0, 1744, 0, 256, 1735, 0, 0, 0, 1716,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	1737, 0, 0, 256, 0, 0, 0, 0, 256, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1419, 1715, 0, 0, 0, 0, 0, 0,
	0, 2696, 256, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 2879, 2879, 1721, 0, 0, 0, 852, 852, 2696,
	0, 0, 0, 2850, 2850, 0, 0, 852, 2696, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	0, 0, 0, 0, 0, 0, 1721, 256, 0, 1753,
	0, 0, 1763, 0, 3109, 3110, 3111, 0, 1743, 1745,
	0, 3108, 3106, 3107, 3099, 3100, 3101, 3102, 3104, 3105,
	0, 0, 0, 0, 0, 1759, 0, 1760, 0, 1419,
	0, 0, 0, 0, 1730, 1731, 0, 0, 0, 0,
	0, 1743, 1745, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 1751, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 1736, 0, 3833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 1419, 0,
	1736, 0, 0, 0, 0, 1283, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 1438, 1750, 1025, 0,
	0, 256, 1025, 72, 0, 0, 0, 1456, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 73,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1458, 0, 1464,
	0, 1470, 2696, 2696, 0, 3309, 0, 0, 0, 0,
	1742, 0, 0, 0, 2696, 0, 0, 0, 0, 0,
	0, 3916, 0, 3916, 1456, 84, 0, 0, 0, 0,
	1737, 0, 2696, 0, 3257, 0, 0, 1456, 1456, 256,
	3243, 0, 1263, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 3243, 256, 3243, 256, 1754, 0, 0, 0,
	0, 0, 846, 1737, 0, 1557, 0, 1562, 0, 2696,
	0, 2696, 256, 0, 0, 0, 104, 1571, 0, 1576,
	0, 90, 101, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2696, 0, 0, 0,
	0, 3984, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 1737, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 1636, 0, 0, 1642, 0, 0, 3916, 0,
	0, 1456, 1419, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 3841,
	0, 0, 0, 3840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 0, 0, 0, 0, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	0, 0, 2696, 0, 3257, 0, 0, 4087, 1784, 0,
	0, 0, 0, 0, 1797, 256, 0, 0, 0, 0,
	0, 94, 4106, 0, 4106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1714, 0,
	0, 0, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 3243, 256, 1716, 0,
	0, 0, 180, 97, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4087, 0, 0, 0,
	0, 0, 0, 0, 2696, 0, 0, 0, 0, 224,
	0, 0, 1715, 0, 0, 0, 4168, 847, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 1456, 1855,
	1855, 1855, 0, 0, 0, 0, 0, 0, 0, 1199,
	3916, 3916, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 256, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 3522, 0, 1199, 0, 0, 0, 1199, 0, 0,
	0, 1199, 0, 0, 0, 184, 0, 3309, 0, 0,
	3309, 0, 0, 225, 0, 0, 4087, 0, 0, 0,
	0, 0, 0, 1721, 218, 0, 0, 0, 0, 0,
	0, 3916, 1199, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3916, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 1199, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 1199, 3984, 0, 1025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3916, 1199, 256, 3916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 1456, 0, 1456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0,
	0, 0, 1419, 0, 0, 0, 0, 0, 0, 4333,
	0, 0, 0, 1749, 1744, 0, 0, 0, 1713, 1714,
	0, 1716, 4106, 0, 0, 256, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 1419, 0, 0, 0, 0,
	0, 0, 1744, 0, 2696, 0, 0, 0, 0, 1716,
	1419, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 1419, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 3522, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 1456, 0, 1039, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	0, 0, 0, 3478, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4087, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1763, 0, 0, 0, 0,
	0, 1743, 1745, 0, 0, 0, 0, 2696, 0, 1419,
	0, 0, 0, 0, 3916, 0, 3916, 0, 1759, 1456,
	1760, 0, 0, 0, 0, 0, 0, 1730, 1731, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 1730, 1731, 1199, 1419, 1199,
	1736, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 1933, 0, 0, 0, 1199, 0, 2879, 0, 0,
	0, 0, 1761, 0, 0, 0, 2696, 0, 0, 0,
	2304, 0, 2308, 0, 0, 0, 0, 0, 0, 2322,
	1750, 2879, 0, 0, 0, 0, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 1199, 2371, 0, 2373, 2374, 2375, 2376, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 0, 0, 2400, 0, 1419, 0,
	0, 1419, 0, 0, 0, 0, 1199, 1784, 0, 0,
	0, 2415, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 2445, 2448, 2451,
	2454, 0, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 1754,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2524, 0, 2535, 2537, 2542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 1199, 0, 0, 0, 0, 1752, 0, 0,
	0, 1199, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	0, 0, 3048, 0, 1713, 1714, 3049, 1746, 1747, 1748,
	1756, 1757, 1758, 0, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 1749, 1744, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 1199, 0, 1199, 0, 1199, 0, 1735,
	0, 0, 0, 0, 0, 1419, 0, 0, 1732, 0,
	0, 0, 0, 1199, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 1199, 1199,
	1199, 0, 0, 0, 0, 0, 1713, 1714, 0, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0, 0,
	0, 2503, 2504, 2505, 2506, 2499, 2500, 2501, 2502, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	1738, 1739, 1740, 1741, 0, 1762, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 2813, 2814, 0, 2816, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 1753, 0, 0, 1763,
	1732, 0, 0, 0, 0, 1743, 1745, 0, 0, 0,
	0, 0, 2479, 2480, 2481, 2482, 0, 0, 0, 0,
	0, 0, 1759, 0, 1760, 0, 0, 1933, 1933, 1199,
	0, 1730, 1731, 0, 0, 2491, 2492, 2493, 2494, 2487,
	2488, 2489, 2490, 2495, 2496, 2497, 2498, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 2934, 2475, 2476,
	2477, 2478, 2483, 2484, 2485, 2486, 1199, 0, 1753, 0,
	0, 1763, 0, 0, 1750, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 0,
	0, 0, 0, 0, 1759, 0, 1760, 0, 0, 0,
	0, 0, 0, 1730, 1731, 0, 0, 0, 0, 0,
	1766, 1767, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 1199, 1736, 1742, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 1199, 0, 0, 0, 2984, 2985, 0, 0, 0,
	0, 2991, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	3005, 3006, 0, 0, 0, 0, 2415, 0, 0, 0,
	0, 0, 0, 0, 0, 3013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1419, 0, 1419, 0, 0, 0, 3039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 1742,
	0, 1199, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755,
	1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 0, 1199, 0, 1754, 2411, 0, 0, 0,
	2412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 0, 0, 0, 1933, 0, 2542, 2542, 2542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	3154, 0, 0, 0, 0, 0, 0, 1713, 1714, 1199,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 1419, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1752, 0, 0, 1762, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 1199, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 1419, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 1199, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 1199, 0, 1419, 0,
	0, 0, 0, 0, 1025, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1419,
	3276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 0, 1721, 0, 1419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1763, 1039, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 1072, 0, 0, 1419,
	0, 0, 0, 0, 0, 1759, 0, 1760, 0, 0,
	0, 0, 153, 0, 1730, 1731, 0, 0, 0, 0,
	0, 72, 0, 46, 45, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 73, 0, 0,
	148, 0, 255, 255, 255, 0, 0, 1736, 1419, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 67, 0, 0, 0, 0, 0,
	781, 48, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 47, 0, 84, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 68, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 0, 0,
	57, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 49, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2322, 0, 0, 52, 0,
	1737, 3476, 3477, 0, 0, 3480, 0, 0, 0, 3483,
	0, 0, 0, 1039, 1039, 0, 91, 0, 3487, 0,
	0, 0, 0, 0, 0, 0, 1754, 3494, 0, 0,
	3154, 0, 0, 1195, 0, 0, 0, 0, 1199, 1199,
	0, 0, 0, 0, 0, 3506, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3529, 3530, 0, 3531, 3532,
	3533, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 1199, 0,
	3539, 0, 0, 0, 3541, 0, 0, 0, 0, 0,
	1039, 0, 1199, 1199, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 3569, 3570, 0, 0, 0,
	0, 0, 0, 3839, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 3581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 53, 1933, 3590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 0, 0, 0, 0, 59, 1199, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 58,
	180, 97, 0, 100, 0, 0, 0, 54, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 1199, 0, 0, 0, 1713, 1714, 224, 1746, 1747,
	1748, 1756, 1757, 1758, 0, 62, 1199, 0, 0, 0,
	145, 0, 0, 0, 3633, 1199, 0, 0, 0, 1744,
	1199, 0, 0, 0, 149, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 3652, 0, 0,
	0, 0, 226, 1199, 0, 0, 0, 0, 0, 1199,
	0, 1199, 0, 0, 0, 1199, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 3676, 147, 0,
	1735, 0, 0, 1199, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 184, 1199, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 1199, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 1738, 1739, 1740, 1741, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 3767, 1199, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	1763, 0, 0, 0, 0, 0, 1743, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1730, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 3811, 3812, 0,
	0, 1199, 0, 3816, 3817, 1736, 0, 0, 3820, 3821,
	0, 0, 0, 0, 255, 3825, 255, 255, 1199, 0,
	255, 0, 0, 0, 0, 0, 3829, 0, 1933, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 255, 255, 0,
	0, 255, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 1933, 0, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 0, 255, 255, 0, 689, 0, 0, 0, 1199,
	1199, 690, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 255, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 1754, 0, 0, 0, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	0, 255, 1752, 695, 0, 0, 0, 1727, 1728, 1734,
	1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 0, 696, 0, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 251, 656, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 4044, 4045, 4046, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2322, 0, 0, 4055, 4056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 4064, 4067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 708, 0, 0, 1199,
	1199, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4107, 1199, 0, 0, 0, 0,
	0, 0, 4113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4120, 0, 0, 1025, 0, 0, 0, 1199,
	0, 0, 0, 718, 4128, 699, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 1195, 719, 0, 700, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 1877, 255, 0, 0, 0, 0, 781, 0,
	0, 0, 0, 0, 0, 781, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 716, 717, 714, 0, 0, 0, 0, 0,
	709, 0, 255, 702, 0, 0, 1713, 1714, 0, 255,
	0, 0, 1756, 1757, 1758, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 0, 1199,
	1744, 1199, 0, 0, 0, 0, 0, 1716, 1199, 0,
	0, 0, 0, 703, 710, 1762, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 1199, 0, 0, 0, 0,
	0, 0, 4239, 0, 0, 4242, 0, 705, 0, 0,
	0, 1715, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 722, 1199, 0, 1199,
	1732, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 1025, 1025, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 1199, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 2322, 0, 0, 0, 1199,
	0, 0, 0, 0, 4067, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 781, 0, 1753, 0,
	0, 1763, 0, 0, 1199, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 1199, 1199, 1199, 0, 0, 0,
	0, 0, 1025, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 1730, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 1751, 0, 255, 0, 1199, 0, 0, 255, 0,
	0, 0, 0, 0, 255, 0, 1736, 0, 0, 0,
	0, 0, 0, 4400, 4400, 4400, 1933, 0, 0, 255,
	0, 255, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 1199, 0,
	0, 0, 0, 0, 4421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 255, 0,
	0, 255, 0, 0, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 255, 0, 0, 0, 4400, 0, 0, 0,
	0, 0, 0, 0, 781, 255, 0, 255, 0, 255,
	0, 255, 0, 255, 0, 0, 1199, 0, 0, 0,
	257, 257, 257, 0, 0, 0, 0, 1199, 1199, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 1737,
	0, 255, 1244, 0, 1244, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 1199, 0,
	0, 0, 257, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 1436,
	0, 0, 0, 0, 0, 4400, 4544, 0, 0, 0,
	0, 0, 0, 1933, 4548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1713, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 1744,
	0, 0, 0, 1752, 0, 0, 1716, 0, 0, 1199,
	0, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 1555, 1556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 1199, 0, 0, 1199, 1713, 1714, 0, 1199, 0,
	0, 0, 799, 0, 0, 0, 0, 0, 1199, 1199,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 801, 0, 0, 1199, 1716, 1195, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2990, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	1715, 1738, 1739, 1740, 1741, 0, 803, 0, 820, 0,
	1735, 1721, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 0, 0, 0, 805, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 1745, 828, 0,
	0, 0, 255, 0, 806, 255, 0, 0, 0, 255,
	2983, 255, 0, 0, 0, 0, 0, 826, 255, 255,
	0, 0, 1730, 1731, 0, 0, 0, 0, 255, 0,
	0, 1738, 1739, 1740, 1741, 0, 0, 0, 0, 0,
	800, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 807, 0, 0, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 830, 0, 0, 0, 0,
	721, 0, 0, 255, 0, 0, 1743, 1745, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 1730, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	1199, 0, 1199, 829, 0, 0, 781, 0, 0, 0,
	0, 0, 0, 824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1893, 0, 0, 0, 1742, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 1902,
	0, 1436, 255, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 811, 0, 0, 0, 0, 1436, 0, 0,
	255, 0, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 255, 812, 0, 0, 1749, 1744, 0, 1742, 255,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 0, 255, 255, 255, 255, 0, 1715, 0, 798,
	255, 821, 255, 0, 0, 0, 0, 1735, 0, 0,
	813, 0, 257, 0, 257, 257, 1732, 0, 257, 0,
	1281, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 255, 819, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 815, 833, 0, 832, 0, 0, 0,
	816, 0, 0, 257, 1281, 257, 257, 0, 1281, 257,
	257, 0, 1281, 0, 817, 0, 0, 0, 0, 825,
	0, 0, 257, 0, 0, 834, 0, 831, 1738, 1739,
	1740, 1741, 0, 722, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 0, 0, 0, 0, 0, 1281, 0,
	257, 257, 0, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 1281, 0,
	0, 0, 0, 1281, 257, 257, 0, 0, 0, 0,
	1759, 0, 1760, 0, 0, 0, 0, 1281, 0, 1730,
	1731, 0, 0, 0, 0, 0, 0, 2151, 0, 0,
	0, 2158, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 2181, 0, 2181,
	0, 0, 0, 0, 0, 2188, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 2158, 0, 0, 2211,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 257,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	2231, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 2244, 0, 2246, 0, 2248, 0, 2250,
	0, 2251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2273,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 255, 255, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 255,
	255, 0, 255, 0, 0, 0, 0, 0, 0, 1877,
	0, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 255, 0, 0, 0, 1762, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 1715, 257, 0, 0, 0, 3492, 0,
	0, 0, 0, 1735, 0, 1281, 0, 0, 0, 257,
	257, 257, 1732, 0, 0, 0, 257, 0, 0, 0,
	0, 255, 0, 257, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 255, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2599,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 706, 0,
	0, 0, 1281, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 0, 255, 0, 689, 1061,
	106, 0, 0, 0, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2642, 0, 691, 1244, 0, 0, 1759, 1244, 1760, 1244,
	255, 0, 255, 692, 0, 1730, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2170, 0, 0, 0,
	0, 0, 0, 1751, 693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 1736, 0,
	106, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 695, 0, 0, 0,
	0, 257, 1281, 1281, 257, 0, 0, 0, 1750, 0,
	0, 0, 1281, 0, 0, 0, 0, 696, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 1436,
	0, 0, 1000, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 1020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	711, 257, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 1742, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2158, 0, 0, 0, 1182, 257, 0, 257,
	2170, 1737, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 1281, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 708,
	0, 0, 1195, 1195, 1281, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 257, 0, 2908, 257,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 1281,
	1281, 1281, 0, 0, 0, 0, 0, 2918, 0, 2921,
	257, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 257, 257, 0, 257, 0, 257, 0, 257,
	0, 257, 0, 0, 0, 0, 0, 0, 699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2946, 1436, 2948, 1436, 0, 0, 0, 0, 2953, 0,
	0, 0, 0, 0, 0, 1752, 719, 0, 700, 257,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 773, 0,
	0, 1244, 0, 0, 3051, 0, 0, 0, 0, 2981,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 701, 773, 0, 0, 716, 717, 714, 0, 0,
	1281, 0, 0, 709, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 703, 710, 0, 0,
	0, 0, 0, 255, 0, 0, 704, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	705, 0, 255, 0, 0, 713, 0, 255, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 1281, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 257, 0, 0, 0, 257, 0, 257,
	0, 0, 0, 0, 0, 0, 257, 257, 0, 0,
	1195, 0, 1281, 1281, 0, 0, 257, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 1877, 0, 0, 1436, 1436, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3241, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 1877, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 3291, 3293, 106,
	2170, 106, 255, 106, 255, 0, 0, 0, 0, 257,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1020, 106, 106, 0, 0, 0, 255,
	0, 0, 257, 0, 0, 1281, 0, 106, 255, 106,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 1877, 0, 0,
	0, 3368, 0, 0, 0, 3372, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 257,
	0, 0, 106, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 257, 257, 257, 0, 0, 0, 0, 257, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3461, 0,
	1436, 257, 0, 0, 255, 0, 0, 0, 0, 257,
	1279, 0, 1000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 3474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 1789, 1337, 0, 255, 0, 1337, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1279, 1877,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 255, 1279, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 1878, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 255, 1877, 0, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 1281, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 257, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 257, 257, 0,
	257, 2170, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 3734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 1281, 0, 0, 2170, 0, 0, 0, 3749,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 1281, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 257,
	1281, 0, 1281, 0, 0, 1337, 1281, 0, 0, 0,
	0, 0, 0, 257, 3796, 0, 773, 0, 0, 0,
	0, 257, 0, 773, 1281, 257, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	0, 1020, 0, 1877, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 1281, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 257, 1281,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 1000, 1000,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 3931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2170, 0, 1279, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 2389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2170, 0, 0,
	0, 0, 0, 0, 0, 0, 4000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 1279, 0, 1279, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 1279, 0, 0, 0, 0,
	1878, 0, 0, 1281, 0, 1279, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 1279,
	1279, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 1338, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 0, 4095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 1280,
	1337, 257, 0, 0, 2170, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 1281, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 257, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 1281, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 4209, 1436, 0, 1337, 0, 0,
	1281, 1281, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 106, 0, 0, 106, 0, 106, 0,
	0, 0, 0, 0, 257, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	106, 0, 0, 106, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 4343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4377, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	2389, 1338, 0, 0, 0, 0, 0, 0, 1281, 0,
	257, 0, 257, 0, 0, 0, 0, 0, 0, 1281,
	0, 1783, 1280, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 1281, 1281, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	4437, 0, 0, 0, 1281, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 1281, 257, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 1279, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 1281, 0, 0,
	0, 0, 0, 1338, 0, 1279, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 1281,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 1281, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 106, 0, 0, 106,
	1280, 0, 1280, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 257, 0, 0, 0, 0,
	1280, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 106, 106, 0, 0,
	106, 0, 0, 1280, 0, 1280, 1280, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	0, 257, 1716, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1182, 0, 0, 1020,
	1337, 0, 0, 0, 257, 0, 1715, 0, 0, 1281,
	0, 0, 0, 106, 106, 0, 1735, 0, 0, 1281,
	1281, 0, 0, 0, 0, 1732, 1338, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 1279, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 1763, 0, 0, 0,
	0, 0, 1743, 1745, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 1760, 0, 0, 0, 0, 0, 0, 1730, 1731,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 0, 0, 1751, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 1337, 1338, 0,
	0, 1736, 0, 0, 0, 0, 1279, 0, 0, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	1279, 0, 1279, 1761, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 773, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 1279, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 1182, 1713, 1714, 0,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 1280, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 1279, 1279, 1716, 0,
	0, 0, 0, 0, 1742, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1279, 0,
	1338, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	1754, 1732, 0, 0, 0, 0, 1337, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 1337, 1721, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 1752, 1337,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 1753,
	0, 1280, 1763, 0, 0, 0, 0, 3050, 1743, 1745,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 1759, 0, 1760, 1280, 909,
	0, 955, 0, 0, 1730, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 917, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 931, 915, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 916, 0, 0, 0, 0, 919, 0, 0, 1761,
	0, 963, 0, 0, 0, 0, 0, 0, 0, 0,
	928, 929, 0, 0, 0, 0, 0, 1750, 0, 945,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 956, 921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 922, 0, 0, 0, 0, 0, 0, 0,
	0, 954, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 1182, 0, 924, 0, 0, 0, 0,
	0, 1182, 0, 913, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 925, 926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	933, 932, 0, 0, 0, 0, 0, 0, 927, 0,
	0, 0, 942, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	960, 953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 957, 0, 1752, 1279, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 0,
	1279, 1279, 1279, 3047, 0, 0, 1338, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 106, 0, 920, 0, 0, 962, 1713, 1714, 0,
	1746, 1747, 1748, 1756, 1757, 1758, 1337, 0, 0, 1338,
	0, 0, 0, 106, 0, 0, 0, 0, 918, 0,
	1749, 1744, 949, 950, 1338, 0, 0, 0, 1716, 0,
	1337, 0, 0, 0, 0, 952, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 947, 0, 0, 1280,
	1280, 0, 1715, 961, 943, 0, 936, 934, 0, 939,
	0, 0, 1735, 0, 0, 940, 0, 0, 911, 0,
	958, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 912, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 951, 0, 941, 0, 0, 0, 0, 938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 1280, 0, 0, 0, 0, 944, 0,
	0, 0, 0, 0, 0, 0, 0, 923, 0, 0,
	1337, 0, 1337, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 946, 0, 1721, 0, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 1338, 948, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 1280, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 1759, 1280, 1760, 1280, 0,
	0, 0, 1338, 0, 1730, 1731, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	1280, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 2389, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	0, 0, 1280, 1280, 0, 1337, 0, 0, 0, 1761,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 1279, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 1338, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	1742, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 1279,
	0, 0, 0, 0, 0, 0, 1754, 0, 1338, 1713,
	1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0,
	0, 0, 0, 1337, 0, 1338, 0, 0, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 1279, 1279,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 106, 0, 0, 106, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 1337, 0, 0, 1279,
	0, 0, 0, 3046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 1763, 0, 0, 0, 0, 0,
	1743, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 1760,
	0, 0, 0, 0, 0, 0, 1730, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 1714, 1751, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 1279,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 1279,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 1279, 1715, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 1735, 0, 1750,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 1280, 1280, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1737, 1280, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 1338, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 1760, 0, 0, 0, 0, 0, 0, 1730,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 0, 0, 0, 1761, 3045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 1338, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 1280, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 1338, 0, 0, 0, 0, 0, 2412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 1280, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 1280, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 2577, 0, 0,
	0, 0, 0, 0, 0, 2578, 265, 267, 266, 268,
	269, 270, 271, 272, 1340, 273, 274, 1341, 1342, 1343,
	0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 1349, 607, 284, 285, 286, 287, 288, 289,
	1350, 1351, 0, 290, 608, 609, 610, 1352, 291, 292,
	611, 1353, 1282, 1354, 293, 294, 295, 296, 297, 298,
	299, 0, 1355, 301, 302, 303, 300, 304, 1356, 305,
	0, 306, 307, 308, 309, 310, 311, 1357, 312, 313,
	314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362, 1363,
	1364, 317, 318, 319, 320, 0, 321, 612, 613, 1365,
	325, 322, 323, 1366, 326, 324, 1367, 327, 328, 329,
	1368, 1369, 330, 331, 332, 1370, 333, 334, 1371, 335,
	336, 337, 1372, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 1373,
	262, 1374, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 1375, 356, 1376, 1377, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 1378, 368, 620, 1379, 621, 369, 1380, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 1381, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 1382, 1142, 384, 625, 626, 1383,
	627, 1384, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1385, 398, 400, 399, 1386, 401, 629, 1147, 402,
	403, 1148, 1387, 404, 0, 0, 0, 405, 406, 409,
	1388, 1389, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1390, 264, 1151, 448,
	449, 1391, 630, 450, 631, 452, 453, 1392, 0, 454,
	0, 1393, 1394, 456, 457, 458, 1395, 1396, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 1397, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 1398, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 1399, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 1400, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 1401, 532, 533, 531, 534, 535, 536, 1402, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 1403, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 1404, 561, 562, 0, 558, 1405, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 1406, 571, 643, 644,
	645, 646, 1407, 580, 1408, 572, 573, 574, 647, 575,
	648, 1409, 576, 577, 578, 579, 0, 581, 582, 1410,
	1411, 583, 584, 585, 587, 588, 586, 589, 1412, 590,
	1413, 0, 591, 592, 593, 649, 650, 651, 1414, 595,
	594, 596, 652, 1415, 1416, 1417, 1418, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	3500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3502, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3867, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4050, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3939, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3797, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3518, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3353, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2435, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 1430,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2132, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 1332, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344,
	602, 1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	1349, 607, 284, 285, 286, 287, 288, 289, 1350, 1351,
	0, 290, 608, 609, 610, 1352, 291, 292, 611, 1353,
	1282, 1354, 293, 294, 295, 296, 297, 298, 299, 0,
	1355, 301, 302, 303, 300, 304, 1356, 305, 0, 306,
	307, 308, 309, 310, 311, 1357, 312, 313, 314, 1140,
	315, 316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317,
	318, 319, 320, 0, 321, 612, 613, 1365, 325, 322,
	323, 1366, 326, 324, 1367, 327, 328, 329, 1368, 1369,
	330, 331, 332, 1370, 333, 334, 1371, 335, 336, 337,
	1372, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 1373, 262, 1374,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 1375, 356, 1376, 1377, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1378, 368, 620, 1379, 621, 369, 1380, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 1381,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1382, 1142, 384, 625, 626, 1383, 627, 1384,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1385,
	398, 400, 399, 1386, 401, 629, 1147, 402, 403, 1148,
	1387, 404, 0, 0, 0, 405, 406, 409, 1388, 1389,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1390, 264, 1151, 448, 449, 1391,
	630, 450, 631, 452, 453, 1392, 0, 454, 0, 1393,
	1394, 456, 457, 458, 1395, 1396, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1397, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	1398, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 1399, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1400, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1401,
	532, 533, 531, 534, 535, 536, 1402, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 1403, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 1404,
	561, 562, 0, 558, 1405, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 1406, 571, 643, 644, 645, 646,
	1407, 580, 1408, 572, 573, 574, 647, 575, 648, 1409,
	576, 577, 578, 579, 0, 581, 582, 1410, 1411, 583,
	584, 585, 587, 588, 586, 589, 1412, 590, 1413, 0,
	591, 592, 593, 649, 650, 651, 1414, 595, 594, 596,
	652, 1415, 1416, 1417, 1418, 597, 598, 653, 599, 600,
	601, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 2410, 0, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 2407, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 2408, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 2406, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 2409, 0,
	0, 0, 0, 0, 0, 1059, 2405, 0, 1021, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 224, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 226, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 1547, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 218, 597, 598,
	653, 599, 600, 601, 1034, 0, 219, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1788, 1786,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 224, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 226, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 1547, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 218, 597,
	598, 653, 599, 600, 601, 1034, 0, 219, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1788,
	3003, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 224, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 226,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 1547, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 218,
	597, 598, 653, 599, 600, 601, 1034, 0, 219, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1788, 1786, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 2538, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 2543, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 2539,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 2540, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 2455, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 2453, 0, 2452, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 2450, 0,
	2449, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 2447, 0, 2446, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 2444, 0, 1638, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 1637, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 1024,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 1038, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 4355, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 1038, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 2324, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 2323, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 1038, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 1059, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 4123, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 1038, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 3761, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1856, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 0, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 3496, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1856, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 0, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 2543, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 1786, 0, 2548, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 2546, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 2534, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 2523, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 2521, 1057, 2512,
	2519, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 2515, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 2516, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 2517, 419, 2514, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	2518, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 2513, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	2509, 1057, 2512, 2519, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 2515,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 2516, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 2517, 419, 2514, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 2518, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 2513, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 1794,
	0, 1059, 0, 0, 0, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 2303, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 1643, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	1577, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 1572, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 1563, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 1558,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 1059,
	0, 0, 1472, 1057, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1471,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 1466, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1465, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 1459, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 1284, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 1059, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 4399,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 4398, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 4397, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	4399, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 4398, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	4069, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 4070, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 4068, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 1075, 1047,
	1048, 1049, 2970, 2971, 1058, 1059, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 2968, 2969, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 2311,
	2312, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 0, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 2531, 0, 0, 0, 0, 0, 0,
	2529, 2530, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 0, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	2963, 2964, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 0,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 4399, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 0, 1102,
	0, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 0, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 4398, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 1197,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 0, 1057, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1183, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 1191, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 226, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 1547, 650, 651, 0, 595,
	594, 596, 652, 1197, 0, 0, 218, 597, 598, 653,
	599, 600, 601, 0, 0, 219, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1187, 1099, 1880, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 1098, 0, 290, 608, 609,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 1183, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 264, 1151, 448, 449, 0, 1103, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 1189, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 1191, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 224, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 0, 558,
	226, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 1547,
	650, 651, 0, 595, 594, 596, 652, 3147, 0, 1197,
	218, 597, 598, 653, 599, 600, 601, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 1187,
	0, 1880, 1099, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1183, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 1191, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1179, 0, 1197, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 1187, 0, 1185, 1099, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 1098, 0, 290,
	608, 609, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1183, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 264, 1151, 448, 449, 0, 1103, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 1189, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 1191, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1197,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 1187, 1099, 1185, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1183, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 1191, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1197, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1187, 1099, 1185, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 1098, 0, 290, 608, 609,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 264, 1151, 448, 449, 0, 1103, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1197, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 3915, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 1098,
	0, 290, 608, 609, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 264, 1151, 448, 449, 0,
	1103, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 1191, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1021, 0, 1277, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1779, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 224, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	226, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 1547,
	650, 651, 0, 595, 594, 596, 652, 1544, 0, 1277,
	218, 597, 598, 653, 599, 600, 601, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 183, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 226, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 1547, 650, 651, 0, 595,
	594, 596, 652, 0, 0, 0, 218, 597, 598, 653,
	599, 600, 601, 0, 0, 219, 0, 0, 0, 0,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 2125, 0, 0, 0,
	0, 2126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3417, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 2124, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1197, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1553, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 1098, 0, 290, 608, 609, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 264,
	1151, 448, 449, 0, 1103, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1021, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 226, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 1547, 650, 651, 0, 595, 594, 596,
	652, 259, 0, 0, 218, 597, 598, 653, 599, 600,
	601, 0, 0, 219, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 183, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 259, 2880, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 1894,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 259,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 4553, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 3369, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 1541, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 259, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 2868, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 259, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 3521,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 864,
	0, 772, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 2199, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 779, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 862,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 777, 563,
	564, 565, 566, 567, 778, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 770, 0, 772, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 782, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 779, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 777, 563, 564, 565, 566, 567,
	778, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 1931, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 0, 1937, 0, 282, 1927, 283, 1943, 0,
	1950, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 1953, 1954, 0, 0, 291, 292, 0, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 1122, 321, 1941, 1940, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 0, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 1939, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1948, 1949,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 0, 0, 0, 369, 0, 370, 371, 372, 373,
	374, 0, 0, 0, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 1934, 1935, 0, 1930, 0, 386,
	387, 1144, 0, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 0, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 0,
	450, 1942, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 0, 1152, 461,
	1153, 0, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 1924, 474, 475, 476,
	1925, 477, 478, 479, 0, 480, 0, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1938, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 0, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1936,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1952, 553, 554, 555, 556, 0, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1944, 1945, 1946, 1947, 0,
	580, 0, 572, 573, 574, 0, 575, 0, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 0, 1928, 1951, 0, 595, 594, 596, 0,
	0, 772, 0, 0, 597, 598, 0, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 1918, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 779, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 777, 563,
	564, 565, 566, 567, 778, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	772, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 782, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 779, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 2240, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 2241, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 777, 563, 564,
	565, 566, 567, 778, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 2242, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 2000, 0, 1277, 1967, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 782, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 1964, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1965, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1961, 0, 1277, 1967, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 1964, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1965, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 772, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 779, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 1957, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 777, 563,
	564, 565, 566, 567, 778, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 1956, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	772, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 782, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 779, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 1910, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 777, 563, 564,
	565, 566, 567, 778, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 1909, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 0, 0, 1277, 1967, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 782, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 1964, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1965, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1277, 1276, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 1282, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 0, 1151,
	448, 449, 3707, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1277, 1276, 0, 0, 0, 0,
	1274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 1282, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	628, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 0, 1151, 448, 449, 3341, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1597, 0, 1277,
	1276, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 1596, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 1595, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 1594, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1516, 0, 1277, 1276, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1515, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1477,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1445, 0, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 1444, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1271, 0, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1270, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1277, 1967, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 2007, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1277, 1276, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 1277, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 1282, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	628, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 0, 1151, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 2697, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 2694, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 2701, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 2893, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	2700, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 2890, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 2892, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 2889, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 2699, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 2891, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	2697, 291, 292, 611, 0, 0, 2691, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 2694, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 2701, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 2700,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 2690, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 2699, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 2698, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1665, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 1668, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 1666, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 1667, 594,
	596, 652, 1423, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1425,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 1189, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1420, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1422, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 1189, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1328, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1330, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 1189,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	685, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 684, 270, 271, 272, 674, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	677, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 678, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 679, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 673, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 674, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 677, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 678, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	679, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	1189, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 3298, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	2839, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 2838, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 2212, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 2157, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 2163, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 2162, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 2150, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 2152, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 2121, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 1189, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1519, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1440, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1433, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1435, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1261, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1260, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1251, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1250, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1248, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1247,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1243, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1242, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 655, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	250, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 3638, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 3639, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 3641, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 3642, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 3637, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 677, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 678, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 679, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 2249, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 2247, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	2245, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	2169, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1986,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1980, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 851, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 850, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 849, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 2893,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 3975, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 3885, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	3887, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 742, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1298, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	1296, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 743, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	739, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	1299, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 738, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 742, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1298,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 1296, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	743, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 739, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 1299, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 738, 644,
	645, 646, 0, 580, 0, 572, 1297, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 664, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	663, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 662, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 259,
	2880, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 259, 3985, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 4234, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 4232, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	3678, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 2583, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 259, 2880, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 2877,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 2222, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 2210, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 742, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 732, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 743, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 739, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 1552, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 738, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1525, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1524, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1510, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1508, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1504, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1481, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1479, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1442, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1428, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1266, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1265, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1257, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1256, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1210, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 748, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 742, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 732, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 730, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 731, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 743, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 733, 516, 0, 517, 518, 524,
	525, 519, 520, 739, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 734, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 738, 644, 645, 646, 0,
	580, 0, 572, 736, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	724, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 725, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 687, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 681, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 659, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 3387, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 3335, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 3269, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	3267, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 3252,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 2848, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 725, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 2186, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 0, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1228, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 1162, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 0, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 0,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 0,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 0, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 1715, 1713, 1714,
	1762, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 1715, 1713, 1714, 1716,
	1746, 1747, 1748, 1756, 1757, 1758, 1735, 1762, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1715, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1715, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	1759, 0, 1760, 1753, 1721, 0, 1763, 0, 0, 1730,
	1731, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1751, 0, 1759,
	0, 1760, 0, 1721, 0, 0, 0, 0, 1730, 1731,
	1753, 0, 1736, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 1760, 1753,
	0, 1736, 1763, 0, 0, 1730, 1731, 0, 1743, 1745,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 1759, 0, 1760, 0, 0,
	0, 0, 1750, 0, 1730, 1731, 0, 0, 1736, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 4330, 0, 0, 0, 1752, 0,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 4254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	4218, 0, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 1713, 1714, 4217,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 1713, 1714, 1716, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1715, 1713, 1714, 1762, 1746, 1747, 1748, 1756,
	1757, 1758, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 1715, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757,
	1758, 1735, 1762, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1715, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 0, 0, 1759, 0, 1760, 1753, 1721,
	0, 1763, 0, 0, 1730, 1731, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1751, 0, 1759, 0, 1760, 0, 1721, 0,
	0, 0, 0, 1730, 1731, 1753, 0, 1736, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1760, 1753, 0, 1736, 1763, 0, 0,
	1730, 1731, 0, 1743, 1745, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	1759, 0, 1760, 0, 0, 0, 0, 1750, 0, 1730,
	1731, 0, 0, 1736, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 4053,
	0, 0, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 3911, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 0, 0, 3844, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 1713, 1714, 3843, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 1715, 1713, 1714,
	1762, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 1715, 1713, 1714, 1716,
	1746, 1747, 1748, 1756, 1757, 1758, 1735, 1762, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1715, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1715, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	1759, 0, 1760, 1753, 1721, 0, 1763, 0, 0, 1730,
	1731, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1751, 0, 1759,
	0, 1760, 0, 1721, 0, 0, 0, 0, 1730, 1731,
	1753, 0, 1736, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 1760, 1753,
	0, 1736, 1763, 0, 0, 1730, 1731, 0, 1743, 1745,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 1759, 0, 1760, 0, 0,
	0, 0, 1750, 0, 1730, 1731, 0, 0, 1736, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 3842, 0, 0, 0, 1752, 0,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 3526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	3043, 0, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 1713, 1714, 3042,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 1713, 1714, 1716, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 1715, 1713, 1714, 1762, 1746, 1747, 1748, 1756,
	1757, 1758, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 1715, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757,
	1758, 1735, 1762, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 1715, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 0, 0, 1759, 0, 1760, 1753, 1721,
	0, 1763, 0, 0, 1730, 1731, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 1751, 0, 1759, 0, 1760, 0, 1721, 4468,
	0, 0, 0, 1730, 1731, 1753, 0, 1736, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1760, 1753, 0, 1736, 1763, 0, 0,
	1730, 1731, 0, 1743, 1745, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	1759, 0, 1760, 0, 0, 0, 0, 1750, 0, 1730,
	1731, 0, 0, 1736, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4467, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 3041,
	0, 0, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 3040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 3007, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1744, 0, 0, 0, 0, 1713,
	1714, 1716, 1746, 1747, 1748, 1756, 1757, 1758, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 0, 2978, 0,
	1716, 0, 0, 0, 0, 1715, 1713, 1714, 1762, 1746,
	1747, 1748, 1756, 1757, 1758, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 2556, 1749,
	1744, 0, 0, 0, 1715, 1713, 1714, 1716, 1746, 1747,
	1748, 1756, 1757, 1758, 1735, 1762, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 1749, 1744,
	0, 0, 0, 2555, 0, 0, 1716, 0, 0, 0,
	0, 1715, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 2979,
	1732, 0, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	1715, 0, 0, 0, 0, 0, 1721, 0, 3127, 0,
	1735, 3126, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1763, 0, 0, 0, 0,
	0, 1743, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 1759, 0,
	1760, 1753, 1721, 0, 1763, 0, 0, 1730, 1731, 0,
	1743, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 1740, 1741, 1751, 0, 1759, 0, 1760,
	0, 1721, 0, 0, 0, 0, 1730, 1731, 1753, 0,
	1736, 1763, 0, 0, 0, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 1760, 1753, 0, 1736,
	1763, 0, 0, 1730, 1731, 0, 1743, 1745, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 1759, 0, 1760, 0, 0, 0, 0,
	1750, 0, 1730, 1731, 0, 0, 1736, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 0, 0, 1750, 1018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 1752, 0, 0,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 1727, 1728, 1734,
	1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 1713, 1714, 0, 1746, 1747, 1748, 1756,
	1757, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 0, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 1713,
	1714, 1762, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 1715, 1713, 1714,
	1716, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 1762, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 3128, 0, 0, 1716,
	0, 0, 0, 0, 1715, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 1715, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 3133, 0, 1753, 0, 0, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 1759, 0, 1760, 1753, 1721, 0, 1763, 0, 0,
	1730, 1731, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 1751, 0,
	1759, 0, 1760, 0, 1721, 0, 0, 0, 0, 1730,
	1731, 1753, 0, 1736, 1763, 0, 0, 0, 0, 0,
	1743, 1745, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 1760,
	1753, 0, 1736, 1763, 0, 0, 1730, 1731, 0, 1743,
	1745, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 1759, 0, 1760, 0,
	0, 0, 0, 1750, 0, 1730, 1731, 0, 0, 1736,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 1737, 0, 0, 3095,
	0, 0, 0, 0, 0, 1742, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 3507, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 1713, 1714, 0, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 3044, 1713, 1714, 1716, 1746, 1747,
	1748, 1756, 1757, 1758, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1744,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 1715, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1739, 1740, 1741, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1763, 0, 0, 0, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 1760, 1753, 0, 0,
	1763, 0, 0, 1730, 1731, 0, 1743, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 1759, 0, 1760, 0, 0, 0, 0,
	0, 0, 1730, 1731, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 1727, 1728, 1734,
	1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723,
}

var sqlPact = [...]int{
	8831, -1000, -1000, -1000, -1000, 195, -1000, -1000, 192, 190,
	188, 186, 184, 182, 180, 179, 178, 177, 175, -1000,
	-1000, -1000, -1000, -1000, -1000, 174, -1000, -1000, 171, -1000,
	167, 166, 164, -1000, -1000, 163, -1000, 162, -1000, -1000,
	-1000, -1000, 159, 157, 156, 87308, 86772, 87837, 2164, 108616,
	95271, 1834, 78224, 108080, 77688, 107544, 2014, 9643, 107008, 2604,
	155, -1000, 106472, 154, 153, 152, -1000, 105936, -1000, 1751,
	-1000, 151, 4614, 63203, 144, 143, 138, 2615, 137, -1000,
	135, 134, 132, -1000, 10690, 1452, -1000, 126, 122, -1000,
	262, 92605, 121, 119, 2263, 117, 116, 62667, 115, 114,
	2251, 2702, -1000, -1000, 1894, -1000, -1000, 113, 107, 106,
	100, 98, 94, 90, 89, 88, 86, 84, -1000, 82,
	81, 80, 79, 78, -1000, 77, 76, 75, -1000, 74,
	-1000, 73, 70, 68, 66, 64, 63, 58, 54, 50,
	44, 43, 41, 40, -1000, 15117, -1000, 1785, 1626, 1618,
	1614, 1613, 1612, 981, 37, 36, 35, 34, 32, 31,
	30, 25, 24, -1000, 22, 21, 20, 19, 18, 17,
	16, 12, 136, 8, 6, 5, 3, 1, 0, -1,
	2353, -1000, 1552, 1053, 29877, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 114435, 109145,
	-2, -113, -9, -1000, 3121, 1057, 52451, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 286, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 514, 1750, 759, -1000,
	-1000, -1000, 105407, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2163, -49, -1000, 1907, -1000, -1000, -1000, -1000, -1000,
	758, -1000, 2161, 147, 2109, -1000, -1000, -1000, 3157, 2312,
	3595, 3593, 3592, 3591, 3588, 113906, 1745, 3585, 2399, 3581,
	3580, 3579, 3577, 3575, 3574, 3573, -1000, 86236, 1033, 85700,
	85164, 3190, 104878, 84628, 104342, 71809, 44679, 971, 3156, -1000,
	-1000, -1000, -1000, -1000, -1000, 109145, -1000, 1032, -1000, -1000,
	3572, 3568, 1930, 757, 94735, -1000, 1699, -1000, 932, 31560,
	-1000, 1280, -1000, 31560, 280, -1000, -1000, -1000, -1000, -1000,
	-1000, 3567, 3566, 3563, 3562, 3561, -1000, -1000, 77152, 23093,
	76616, 76080, 103806, 22547, 84092, 83556, 103270, 71263, 1031, 1396,
	-1000, -1000, -1000, -1000, -1000, -1000, -40, 69079, 3334, 109145,
	-1000, 279, -1000, -1000, -1000, -1000, -1000, -1000, 44106, 713,
	43533, 756, 42960, 746, -1000, -1000, -1000, -1000, 70717, -1000,
	102734, 2308, 3560, 3559, 1109, 3558, 3053, 1681, 3557, 1764,
	1185, 3555, 3553, 3552, 3550, 3548, 3544, 3543, 1349, 102198,
	2788, 101662, 1592, 70171, 1029, 83020, 87837, 2477, 101126, 1304,
	1223, -1000, -1000, -1000, -1000, 2907, 2698, 2695, 1331, -1000,
	-1000, -1000, -1000, 55125, 6763, 5634, 11706, 100590, 57333, 87837,
	87837, -1000, -1000, -1000, -1000, -1000, 42387, 712, 41814, 909,
	-1000, -1000, 55677, 2759, -1000, -1000, -1000, -1000, 41241, 392,
	40668, 844, 109145, -1000, 2787, 1782, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1998, 1634, 3355, 2568, 69625, 1975, 1382, 3114, 2903,
	2901, 1521, 2899, 3538, 2461, 2898, 2895, 2890, 2887, 2876,
	1271, 2429, 625, 29304, 2780, 1553, 40095, 1464, 1502, 2858,
	2854, 3364, 1898, 1868, 2028, 75544, 3537, 3532, 3075, 2850,
	2847, 2619, 2820, -1000, 2757, -1000, -1000, -1000, -1000, 1441,
	-1000, -1000, -1000, -1000, 78753, -1000, -1000, 1300, -1000, -1000,
	1300, -1000, -1000, -1000, -1000, -1000, 1201, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1552, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1895,
	-1000, 1908, -1000, -1000, 2294, 3095, 3095, 3095, 3153, 494,
	485, -1000, 136, -1000, -1000, 119454, -1000, -1000, 45240, 45240,
	45240, 45240, 45240, 45240, 45240, 2021, -1000, 750, -1000, -1000,
	797, -1000, 749, 627, -1000, -1000, -1000, -1000, -1000, -1000,
	748, -1000, -1000, -1000, -1000, -1000, -1000, 3334, -1000, 25878,
	-1000, -1000, -1000, 434, 744, 45240, -1000, -1000, 3381, 3380,
	992, -1000, 278, 958, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2786, 742, 741, -1000,
	739, 738, 736, 735, 731, -1000, -1000, -1000, 730, 726,
	721, 718, 717, 711, 710, 709, -1000, 1922, -1000, -1000,
	-1000, -1000, -1000, -1000, 674, 668, 668, 668, -1000, 1025,
	-1000, -1000, -1000, 386, 666, 351, 658, 657, 656, -1000,
	706, 705, 701, 700, 699, 698, 696, 693, 692, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1024, -1000, -1000, -1000,
	-1000, -42, 109145, -1000, 514, -42, -1000, -1000, 689, -1000,
	33816, 33816, 33816, -1000, -1000, 2160, 45240, -1000, 2397, -1000,
	-29, -29, 849, 54053, -1000, 51379, 849, 349, 812, 58937,
	-1000, 2744, -1000, -1000, 685, 273, -1000, -1000, -1000, -1000,
	23637, 2740, 109145, 109145, 87837, 87837, 87837, 2988, 45240, -1000,
	-1000, 66926, 109145, 88895, -1000, -1000, 3276, 63732, 66397, 109145,
	2783, 65868, 3529, -1000, -1000, -1000, -1000, -1000, 2940, 3527,
	3526, 3525, -1000, 109145, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 219, 2937, -1000, -1000, 92069, 219, 2934, -1000, 219,
	2929, -1000, 91540, -1000, -1000, 2122, 2928, -1000, -1000, 225,
	2926, -1000, -1000, -1000, 224, 2925, -1000, -1000, 259, -74,
	2924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 119454, -1000, -1000, -1000, 65332, -1000, 3084,
	-1000, -1000, 109145, -1000, 45240, -1000, 3274, 1663, 72887, 3195,
	-54, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2382, 2364,
	1130, 2194, -1000, 3004, 1339, -1000, 31560, 3041, -1000, -1000,
	-1000, 257, 23637, -1000, -1000, -1000, -1000, -1000, -1000, 4943,
	2923, 1458, -1000, 2189, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1716, 2921, -1000, 2172, 2920, 1580, -1000, -1000, 2273,
	-1000, 3069, -1000, -1000, 1606, 2916, -28, -1000, -1000, 2113,
	-1000, 1822, -1000, 994, 2915, -1000, 82484, 56781, 55677, 69079,
	-46, -1000, -1000, -1000, -1000, -241, -1000, 22001, 119454, -1000,
	-1000, -1000, -1000, 1658, 119454, 933, -1000, -1000, 2914, -1000,
	119454, 918, -1000, -1000, 2912, -1000, 2782, -1000, -1000, 2270,
	-1000, -1000, 3524, -1000, -1000, 3519, -1000, 3518, 3517, 3516,
	-1000, 1526, 1904, 3515, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 81955, 2153, -1000, -1000, 80883, -1000, 2265, 3194,
	-1000, 81419, 1028, -1000, 994, 2264, -1000, 91011, 885, -1000,
	3514, 3185, 2535, 994, 2257, -1000, -1000, -1000, -1000, -1000,
	1016, -1000, 60534, -1000, 60534, -1000, 1511, -1000, 113377, -29,
	87837, 3334, -1000, -62, -1000, -1000, -1000, 1057, -1000, 54589,
	-1000, 54589, 94199, 72353, 973, 743, 62131, 119454, -1000, -1000,
	-1000, -1000, 119454, -1000, -1000, -1000, -163, -1000, -1000, 72353,
	55677, 119454, -1000, -1000, -1000, -1000, 119454, -1000, -1000, -1000,
	72353, 80883, -1000, 100054, 80354, -1000, -1000, 1323, 2413, -1000,
	-1000, -1000, 72353, 1308, 72353, 72353, 72353, -1000, 99518, -1000,
	-1000, 1967, 1270, 3076, 1905, 87837, -1000, 1739, -1000, -1000,
	-1000, 3102, 109145, -1000, -1000, 2781, -1000, 64796, 90482, -1000,
	89953, -1000, 89424, -1000, 87837, -1000, 87837, -1000, 3511, 3507,
	3500, 3499, -1000, 3498, 3096, -1000, 119454, 3093, -1000, 3497,
	3186, 2780, 119454, -1000, 2946, 1632, 1625, 109145, -1000, -1000,
	109145, -1000, 109145, -1000, -1000, -1000, 1394, -1000, -1000, 2380,
	-1000, -1000, -1000, -1000, 87837, -1000, -1000, -1000, -1000, -1000,
	-1000, 2778, -1000, 1636, -1000, 1734, -1000, 2738, 3061, -1000,
	1313, -1000, -1000, 233, -1000, -1000, -54, -1000, 112848, -1000,
	2294, -1000, 109145, -1000, 2342, 2771, 2776, 1573, 2140, 2453,
	-1000, 39522, 2427, 48606, 2187, 136, -1000, -1000, 136, 136,
	30999, -1000, -1000, 63732, 63732, 23637, 1212, 45240, 45240, 45240,
	45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240,
	45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240,
	45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240, 45240,
	45240, 45240, 2184, 45240, 1200, 45240, 45240, 45240, 45240, 1844,
	-1000, -1000, 1863, 580, 1899, -1000, 3323, 3323, 3323, 920,
	920, 5657, 5657, 642, 3496, 797, -1000, 45240, -1000, 96,
	45240, 24183, -1000, 485, 7983, 2362, -1000, 484, 24756, -1000,
	-1000, -1000, 25878, 627, 38949, 45240, 995, 119454, -1000, -1000,
	1334, 3341, 21456, 2792, 2613, 684, 824, 805, 28731, 28158,
	27585, 27012, 719, 45240, 45240, 45240, 45240, 45240, 45240, 45240,
	45240, -1000, -1000, 3357, -1000, 3341, -1000, -1000, -1000, -1000,
	3341, 1210, 1207, 3341, -1000, 3341, 3341, 7944, 7944, 38388,
	37815, 37242, 49167, 36669, 45240, 26439, 36096, 35523, -1000, 109145,
	-42, 3269, 45240, 146, -1000, 118214, -1000, 146, 146, 683,
	-64, 119454, 2411, 2411, 52985, 2260, 2039, 2039, 2039, -1000,
	849, 17067, 849, 98455, 2075, 849, 849, 251, 277, 483,
	50845, 2397, 98455, 780, 679, -10, -18, -20, -1000, -1000,
	-21, -23, -1000, -1000, 87837, 678, 24183, 23637, 240, 1384,
	-71, 2452, 2450, 2447, -1000, 2433, 1679, -72, 1198, 87837,
	109145, -80, -1000, 2066, -82, -1000, 1301, 226, 3341, -1000,
	-1000, -1000, -1000, -1000, 3494, 3493, -1000, 1023, 677, 675,
	493, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 674,
	668, 668, 668, -1000, 386, 666, 351, 658, 657, 656,
	-1000, -1000, -1000, -1000, -1000, 2737, 87837, 109145, -241, 88895,
	-78, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 109145,
	-1000, -1000, -1000, 3492, -1000, 87837, -1000, -1000, 87837, 219,
	2910, -1000, 87837, -1000, 87837, 217, 2905, -1000, -1000, 109145,
	-1000, 87837, 87837, -1000, 109145, 109145, 109145, 72353, 72353, 229,
	-1000, 87837, 889, -83, 1122, -54, -1000, -1000, -1000, 1300,
	-1000, 1736, -1000, -1000, -1000, -1000, -1000, -1000, 1204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 992, -1000, -1000,
	-1000, -1000, -1000, -1000, 3346, 3344, -43, -1000, -1000, 23637,
	-1000, -55, 1579, 2137, -1000, 75008, 2217, 3083, 3490, 2517,
	3060, 1451, -1000, 1391, 1197, 3149, 78753, 3199, 3267, 843,
	-1000, 2736, -1000, -1000, 930, 1630, 1647, 1195, 78753, 2172,
	-1000, 63732, -1000, 2468, 3141, 1367, 1380, 1367, 1367, 1375,
	-1000, 78753, 1644, 1194, 1192, 1877, 1875, -1000, -1000, -1000,
	1191, 1189, 837, 1872, -1000, -56, 3192, 3253, 206, -1000,
	2734, 1184, -1000, -1000, 87837, 23637, 1534, 1542, 1604, 1180,
	-44, -1000, 3207, 3204, 1179, 1177, -1000, 4603, -1000, 72353,
	1549, 2904, 2565, 871, 2564, -1000, -1000, 871, -46, 69079,
	109145, 214, -1000, 96, 45240, 45240, 96, 45240, 96, 3178,
	2893, -1000, -1000, -1000, -1000, -1000, 3486, 1887, 2398, -1000,
	-1000, 652, 2256, 2732, 109145, 2463, -48, 87837, -1000, 2892,
	67462, 2172, 2255, -1000, -1000, 79818, -1000, 2891, 514, 2254,
	-1000, 653, 3482, -1000, 112319, -1000, 3084, 1289, 2889, 1065,
	429, 3268, -1000, 429, 61063, -1000, 109145, -1000, -29, 5205,
	73950, -90, -91, 480, -1000, 98989, 109145, 1064, 74479, 109145,
	3031, 988, 55677, -1000, -92, -163, 2560, 973, 973, 871,
	-1000, 871, -1000, 87837, 2774, -1000, -1000, 72353, 973, 973,
	973, -1000, -1000, -1000, -1000, 3481, 3480, 3476, -1000, -1000,
	-1000, 991, 87837, 109145, 87837, -1000, 208, -1000, 109145, -1000,
	109145, 109145, 87837, -1000, 991, 109145, 991, 109145, 991, 109145,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 96, 45240, -1000,
	-1000, 3475, 1529, -1000, 2773, -1000, 2772, -1000, 10, -1000,
	-1000, -1000, -1000, -1000, 2098, 87837, 87837, 87837, 87837, 109145,
	3015, -1000, 109145, 87837, -1000, 78753, -1000, 2342, 2771, -1000,
	-1000, -1000, -1000, -1000, -1000, 1354, 2118, -1000, 2420, -1000,
	1429, -1000, -1000, -1000, 119454, 49728, -1000, -1000, 119454, 1678,
	-1000, 48045, 47484, -1000, -1000, 1617, 87837, 2471, -1000, 2471,
	-240, -1000, 118148, 2419, 87837, -1000, -1000, -1000, -1000, -1000,
	917, 556, 556, 1233, 1233, 1233, 1233, 3203, 7126, 381,
	6527, 10075, 10075, 6479, 6479, 6479, 6479, 6479, 10075, 5747,
	920, 920, 5747, 5747, 5747, 5747, 5747, 920, 920, 920,
	10075, 10075, 10075, 5657, 8105, 10674, 45240, 45240, 1176, 1835,
	580, 10584, 45240, 4789, 4789, 4789, 4789, -1000, 1855, -1000,
	-1000, -1000, -1000, 2731, 651, 49167, 49167, -1000, -1000, -1000,
	-1000, 25317, 45240, -1000, -1000, -1000, -1000, 34950, -1000, -1000,
	117532, -312, 479, -224, -63, -1000, 45240, 45240, 45240, 478,
	-1000, 205, 45240, 109145, -1000, 16161, 779, -273, -1000, -93,
	1413, -1000, 45240, -1000, -1000, 1164, -1000, 1163, 1161, 1155,
	-1000, 649, 477, -1000, 201, -1000, 2036, 645, 643, 45240,
	-1000, -1000, -1000, -1000, -1000, 117495, -1000, -1000, 117466, -1000,
	-1000, 116906, -1000, -1000, 116877, -1000, -1000, -1000, 119425, 15908,
	15466, 14876, 7419, 14520, 11537, -98, 469, -99, 468, 913,
	906, 464, 463, 455, -117, -1000, 3473, 3472, 3470, -1000,
	3467, 3465, 3464, -1000, 3463, 3461, 3460, -1000, 3454, 3453,
	3448, -1000, 3447, 3445, 3443, -1000, 3442, 3441, 3440, -1000,
	3439, 3435, 3434, -1000, 3433, 3427, 3426, -118, 453, -1000,
	2730, -224, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	452, -1000, 451, -1000, 118838, -224, 450, 4755, -1000, 49167,
	49167, 49167, -1000, 432, -1000, 118119, -1000, 118867, 34389, 34389,
	34389, 426, 118801, 45240, -224, -119, -1000, -124, -1000, -1000,
	490, -126, 1007, 33816, 51915, 23637, -1000, 1007, 1007, 45240,
	-1000, 45240, 2440, -1000, -1000, -1000, -1000, 2438, 1773, 2411,
	52985, -1000, -1000, -1000, -1000, 98455, -1000, 3334, 2625, -1000,
	98455, -1000, -1000, 109145, 514, -1000, 98455, 98455, 23637, 849,
	-1000, 849, 98455, 768, -1000, -1000, -1000, -1000, -1000, 422,
	57867, -63, 198, 23637, 994, -1000, 2509, 2509, 2509, 2509,
	-1000, -1000, 109145, 1154, -52, -101, 3302, -1000, 1937, -1000,
	63732, -1000, 795, 1091, 23637, -1000, -1000, -1000, 636, -1000,
	3341, 3341, -1000, 3341, 109145, 2724, 109, 108, 67462, 67462,
	3423, -1000, -1000, 219, -1000, 87837, 219, 219, -1000, 87837,
	87837, 2122, -1000, 225, -1000, 224, -1000, -1000, -74, -1000,
	1004, 31560, -1000, 1300, -1000, -1000, 1519, -1000, 1893, -1000,
	1166, -1000, -1000, -1000, -1000, 31560, -1000, 1903, 109145, 109145,
	87837, -1000, 109145, -1000, 2022, 3300, 1824, 2372, 2371, -1000,
	2249, 111790, 2244, 63732, 109145, -1000, -1000, 635, 955, 2418,
	2417, 1062, 109145, 109145, 2407, 111261, 110732, -1000, 3422, 109145,
	1947, 45240, 67462, 2020, 4354, 96, 96, -1000, -1000, 96,
	634, 1274, 87837, 87837, 109145, 87837, 1548, -1000, -1000, -1000,
	-1000, -1000, 79282, -1000, -1000, 3352, 3351, -1000, 1367, -1000,
	-1000, -1000, 1367, 2172, 1543, 109145, 87837, 67462, 109145, 109145,
	1597, 109145, 1000, -1000, 837, 1974, 96, 96, -1000, -1000,
	96, 633, 23637, 1852, -1000, 2785, 109145, 3379, 109145, 109145,
	109145, 67462, 3067, 110203, 109145, 109145, 67462, 4603, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 68550,
	1070, 994, 1584, 1153, 78753, 55677, 985, 55677, 2542, -1000,
	-1000, 20911, -1000, 119454, 119454, -1000, 119454, -1000, 64267, 109145,
	-1000, 1027, 109145, 74479, 956, 2888, 60005, -241, 973, 72353,
	87837, -48, 109145, -1000, -1000, 2172, 2881, 514, 2246, -1000,
	72353, 3263, 2874, 632, 3421, 3420, -1000, 2150, 2245, -1000,
	-1000, 109674, 2896, 837, 109145, 1007, 52985, 1767, -1000, 58403,
	1042, 109145, 1741, 103, -1000, -1000, -1000, -5, 109145, -1000,
	806, -1000, -1000, 5205, 5205, 973, -246, 631, -1000, 866,
	865, 56229, 72353, -127, -1000, -1000, -1000, -1000, 2244, 87837,
	109145, 1279, 2533, 109145, -132, -1000, 197, 628, -1000, 2158,
	-1000, -1000, 988, 55677, 2699, -1000, -1000, 999, -1000, 1311,
	973, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -30, 109145, -241, -241, -51, -52, -1000, 991, -1000,
	991, -1000, 991, -1000, 119454, -1000, -1000, 1527, 1524, 109145,
	-1000, 23637, 109145, 87837, 23637, 87837, 2770, 2765, -1000, -1000,
	-1000, 109145, -1000, -1000, -1000, -1000, -1000, -1000, 1082, -1000,
	1678, 2112, -1000, 627, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2333, -1000, -53, 30999, 877, -1000, -1000,
	87837, -31, 45240, 45240, 7447, 6156, 45240, 49167, 49167, -1000,
	45240, 4973, -1000, -1000, -1000, -1000, -1000, 2697, 626, 45240,
	63732, 5704, 574, -1000, 420, 11041, 5747, -1000, 45240, -1000,
	410, 33255, -1000, 118185, -65, -133, -1000, 17625, -224, -134,
	-1000, -1000, 790, -1000, 2883, -1000, 45240, 118772, 2303, 1890,
	1805, 1545, 3341, 3377, 20366, -1000, 61597, 1010, 2086, 116840,
	-1000, -1000, -1000, -1000, 63732, 63732, 45240, 45240, -1000, 45240,
	45240, 45240, -1000, -1000, -1000, 3341, 880, -1000, -1000, -1000,
	880, -1000, -1000, 1367, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1367,
	-1000, 45240, -1000, -1000, 2687, 45240, -1000, 63732, 63732, 49167,
	49167, 49167, 49167, 49167, 49167, 49167, 49167, 49167, 49167, 49167,
	49167, 49167, 49167, 49167, 49167, 49167, 49167, 49167, 2386, 49167,
	3321, 3321, 3321, -1000, 2659, 2687, 45240, 45240, 63732, 409,
	408, 407, -1000, 45240, -224, -1000, -1000, 5205, 624, -1000,
	2322, -1000, 2610, -1000, 45240, -1000, -139, -1000, 2397, -1000,
	-1000, 2610, 2610, -140, 119454, 52985, 52985, -1000, 619, 45240,
	2426, -1000, -1000, 778, -314, -1000, 864, -1000, -1000, -1000,
	-1000, -1000, 514, -1000, -1000, -1000, 148, 98455, 98455, 775,
	-1000, -147, -1000, -1000, -148, -1000, 3262, 402, 23637, -1000,
	1007, 3073, -1000, -1000, -1000, -1000, -1000, -1000, -241, 109145,
	109145, 2097, 3375, -1000, 3348, 788, 766, 110, 3341, 396,
	393, 390, -241, 109145, 109145, 109145, -1000, -1000, -1000, -1000,
	219, -1000, -1000, -1000, 217, -1000, -1000, -1000, -1000, 2464,
	-1000, -54, -1000, -1000, -1000, 45240, -1000, -1000, 3080, 1152,
	1151, -1000, -1000, -1000, -1000, 3139, 88366, 3294, 1807, 1790,
	2873, -1000, 2237, -1000, 1046, -1000, 1708, -1000, 45240, 616,
	2528, 615, 613, 3418, 1784, 3413, 1063, 2872, 2122, 2871,
	2122, -1000, -1000, -1000, 935, -1000, 119454, -1000, 611, 609,
	-1000, -55, 1563, 2057, 998, -1000, -1000, 45240, 45240, 97926,
	-1000, 437, 3069, -32, -1000, -1000, 1583, 1150, -1000, -1000,
	-1000, -1000, 2172, 1574, 1148, -1000, -1000, -1000, -1000, -1000,
	-1000, 997, -1000, 2810, 2808, 109145, -1000, 996, -1000, -1000,
	45240, -1000, -56, 1147, 3198, 2232, 87837, 1143, -1000, 1141,
	-1000, -1000, -1000, 3197, 2122, 2870, 1162, -1000, -1000, -1000,
	-1000, -1000, 68006, -1000, 109145, 87837, 1513, 871, -1000, 2378,
	871, 985, 2685, -1000, 2460, -1000, 87837, 3412, 387, -149,
	-57, 63732, 3261, -1000, 2170, 618, 87837, 884, -1000, 3334,
	-1000, -1000, -1000, -1000, 3191, 87837, 3255, 2869, 994, 96,
	87837, 3373, -1000, -1000, 87837, 2861, 2149, 2229, 2370, 837,
	73421, 994, 2078, -69, -1000, 1741, 32682, 3064, -155, -1000,
	-1000, -1000, 1007, 61063, 52985, 45240, 3411, -160, -1000, -1000,
	-1000, -1000, -1000, 95805, 95805, 72353, 72353, 72353, 973, 109145,
	109145, 74479, -1000, -1000, 608, 109145, 109145, 607, -1000, 109145,
	109145, 3409, 72353, -58, 604, -1000, 863, 862, 859, -1000,
	-1000, -1000, -1000, -1000, -1000, -163, 96, -1000, 2093, 87837,
	-1000, 19821, -1000, -1000, -1000, -1000, -1000, -1000, 991, -1000,
	-1000, 1981, 2186, 1981, 1731, 1712, -1000, -1000, 2100, -1000,
	-1000, -1000, -1000, 2491, 3090, 23637, 3200, 4789, 45240, 45240,
	908, 548, 527, 4789, 45240, 45240, 63732, 9254, -166, 45240,
	45240, -1000, 45240, 765, 119454, 3372, 45240, 368, 365, -1000,
	-1000, -1000, 3338, -1000, -1000, -1000, 119454, 45240, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 353, -1000, 104, -1000, -1000,
	-1000, 114964, -1000, 45240, 345, 3137, -1000, 344, 336, 8606,
	6446, 116811, 116251, 116222, 335, -1000, -1000, 334, 333, 119454,
	2659, 119454, -1000, -1000, 942, 942, 1369, 1369, 1369, 1369,
	3321, 424, 481, 275, 255, 255, 255, 321, 928, 928,
	255, 255, 255, 2666, 2391, 602, 6111, -1000, -1000, 119454,
	119454, 330, -1000, -1000, -1000, -224, 329, 5205, -1000, 2596,
	3135, 119454, -1000, 52985, 2596, 2596, -1000, -1000, 1773, 109145,
	119454, 52985, -1000, 2625, -1000, 18181, -1000, 23637, -1000, -1000,
	-1000, -1000, 3334, -1000, 57867, -1000, 598, -1000, -4, -1000,
	3073, -1000, 857, -1000, -241, -241, -1000, -1000, 764, 3408,
	786, 23637, 325, -1000, -1000, -1000, -241, -241, -241, -1000,
	-1000, -1000, 3027, 119454, 109145, 109145, 1378, 93663, 1696, -1000,
	-1000, 1865, 2368, -1000, 3293, 3291, 109145, 2845, -1000, 3265,
	-1000, 1062, 116185, 53519, -1000, 53519, 109145, -1000, -1000, 1789,
	2428, 1096, -1000, 3106, 109145, -1000, 109145, -1000, -1000, 109145,
	109145, 87837, 109145, -1000, 2824, -167, 119454, -59, -1000, 855,
	-1000, 1385, -1000, 19276, 109145, 87837, 109145, 87837, 2005, -1000,
	-1000, -1000, 2821, -168, 23637, -1000, 3371, 3367, 2843, 3099,
	3366, 109145, -1000, 109145, 87837, 3023, -1000, -1000, -1000, -1000,
	1564, 1140, 985, -60, 597, -1000, 854, -1000, -1000, 850,
	985, -1000, 72353, 55677, 514, -1000, 2506, -1000, 93134, 2124,
	96, -1000, 3405, 96339, 596, -1000, 2092, -1000, 763, 67462,
	2172, 96, 87837, -1000, -1000, 514, 320, -61, -1000, 1051,
	23637, 87837, 2842, 2385, 837, 73421, -1000, 1289, 2453, -1000,
	-67, -1000, 638, 96, 2078, -1000, -69, 119454, -1000, 848,
	-1000, -169, -1000, -1000, 307, -1000, 3022, 3021, -1000, 2621,
	53519, 595, 593, 109145, 3020, -1000, -1000, -174, 2409, 2409,
	72353, 55677, 72353, 988, -1000, 2214, -1000, -1000, -1000, -1000,
	-1000, 23637, 1602, -1000, 592, 589, -1000, -1000, -1000, -1000,
	3090, 4789, 4789, 45240, 45240, 45240, 4789, 9254, -175, -1000,
	4789, 4789, -224, -1000, -1000, 118185, -1000, -1000, -1000, 119454,
	-1000, 18731, 1986, -1000, 116156, -1000, 30999, -1000, -1000, 45240,
	45240, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49167,
	2663, 588, 63732, -1000, -1000, 299, 982, 45240, 46923, 2397,
	982, 982, -1000, -186, -1000, -1000, -1000, 3334, -4, -1000,
	-1000, 3402, 23637, -1000, 72353, 785, -1000, 3401, -1000, -1000,
	-1000, -1000, -1000, 2555, -1000, -1000, -1000, 1851, 2366, -1000,
	-1000, 1138, -1000, -1000, 109145, -1000, 109145, -1000, 23637, 109145,
	2627, 2211, -1000, 955, 2406, 587, 49167, 87837, 875, -1000,
	3285, 2622, -187, -1000, 109145, 45240, 109145, -192, -194, 2203,
	-1000, -1000, 2201, 45240, -1000, 63732, 586, 2122, 2122, -195,
	-197, -1000, -1000, 45240, 1136, 109145, 32121, -1000, 3397, 3069,
	-1000, -1000, -1000, -1000, 109145, 45240, 1134, -1000, -1000, -1000,
	3365, 2122, 23637, -1000, 2122, 2122, 3099, 1069, 109145, 87837,
	-1000, 2283, 2283, 72353, 55677, -1000, -74, 985, 3254, 2478,
	3393, -1000, -1000, -1000, -1000, 2405, -1000, -1000, 109145, 2404,
	974, -1000, -200, -1000, 847, 846, 74479, 956, 900, -1000,
	-1000, -1000, -1000, 514, 3252, -1000, 3363, 582, 109145, 2138,
	581, 23637, 3062, 837, 73421, -1000, 2896, 1741, -1000, 2221,
	109145, 3059, -1000, 2453, 580, -1000, 973, 579, 578, 2722,
	2722, -202, 53519, 53519, -203, 575, 973, -1000, -205, -1000,
	-1000, -1000, -1000, -77, -1000, 841, 654, -1000, -1000, 87837,
	87837, 45240, 45240, -1000, 4789, 4789, 4789, -1000, 295, -1000,
	-1000, 2078, 3133, -1000, -143, 115596, 115567, 5014, 49167, 63732,
	-208, -1000, -1000, 109145, 119454, -150, -1000, 119454, 573, 572,
	406, -1000, -1000, -1000, 720, -1000, -1000, 3392, -1000, 97397,
	-1000, -1000, 96868, -1000, 2068, -1000, -1000, -1000, 109145, 2225,
	-1000, -1000, 1059, 45240, 6111, 571, 45240, -1000, 3251, -1000,
	2473, 2660, 1777, 53519, -1000, 3090, -1000, 115530, -1000, 1050,
	1837, -1000, -1000, 119454, 3099, 53519, -1000, -1000, 561, 554,
	119454, 553, 845, 2646, -1000, -1000, -1000, -1000, 119454, 545,
	3198, -1000, -1000, -1000, -1000, 2122, 87837, -1000, -1000, -1000,
	-210, -1000, -1000, 1884, 96, 1974, 2552, -1000, 2124, 535,
	-1000, -1000, 2123, 2455, -1000, 96339, 31560, 31560, 293, 3235,
	900, -1000, 3327, -1000, 3213, 96, -1000, 53519, -1000, 87837,
	53519, 2131, 1906, 2365, 73421, -1000, 2370, -1000, -1000, -211,
	109145, 1741, -1000, -1000, 72353, 72353, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1050, -218, -219,
	-1000, 72353, -1000, -1000, 2214, -1000, 109145, -1000, 109145, -1000,
	-1000, -221, -226, -1000, 2011, 45240, 30999, -1000, -1000, 5014,
	-227, -1000, -180, -1000, 3212, 46923, 3391, 3390, 3388, -1000,
	-1000, -1000, 1849, -1000, 1806, -1000, -1000, 2832, 2594, 115501,
	2326, 109145, 454, -1000, 2656, -1000, -1000, 2478, 526, -1000,
	-1000, -1000, -1000, 877, 109145, 2478, 2591, 87837, 1054, -228,
	1981, 1981, 45240, 30438, 2000, 45240, -1000, -1000, 3099, -1000,
	2637, 3335, -1000, 956, -1000, 1992, 109145, -1000, 3098, -1000,
	3019, -1000, -1000, -1000, 2506, 96, -1000, -1000, 96, -1000,
	-229, 1051, -234, 87837, 1803, -1000, 837, -1000, 2385, 1007,
	-1000, -1000, -235, -243, 1777, 1050, 961, -250, -1000, -251,
	-252, -1000, -1000, 289, 46362, 46362, 46362, -224, -240, -1000,
	109145, 524, -1000, -1000, -1000, -1000, -1000, -1000, 2805, 978,
	-1000, 2126, 1795, 288, 1080, -1000, -1000, 1974, 109145, -1000,
	-1000, -1000, 977, 514, -1000, 45240, 1050, -257, -1000, 1039,
	-258, -1000, 1038, -259, -1000, 2644, -1000, -264, 2122, 976,
	3176, -1000, -1000, -1000, 2123, 87837, -266, -1000, -1000, 2226,
	-1000, 2478, 974, -1000, 1050, 512, 1777, 507, 1358, 837,
	-1000, -1000, 1367, 3062, 2959, 973, 973, 2478, 1777, 1007,
	501, 973, -1000, -1000, -1000, 2849, -1000, 50289, 2136, 1683,
	117561, 2849, 2849, -1000, -1000, 109145, 3165, -1000, 2130, 2129,
	1462, -1000, -1000, -1000, -1000, -1000, -1000, 2622, -267, 3164,
	2326, 119454, 2478, -1000, 1981, 2550, -1000, 1981, 2641, -1000,
	1990, -1000, -1000, -1000, 1615, 3313, 1600, 500, -1000, 109145,
	1675, 1667, 3386, 1974, 2123, 1777, 53519, 2478, 53519, -1000,
	-1000, 109145, -1000, 1906, 1286, -1000, -1000, 1974, 2478, -1000,
	-1000, -1000, 1759, 3258, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 836, -1000, 3001, -1000, 1079, 2081, 2081, 1007,
	-1000, 827, 2126, -1000, -1000, 499, -1000, 498, -1000, 2089,
	-1000, -1000, -1000, -1000, 109145, -1000, -1000, 3385, -1000, 956,
	-1000, 2478, -272, 1974, -274, -1000, -241, 1803, -1000, 1444,
	961, 1974, 1682, -1000, -1000, 2059, 45801, 45240, -1000, 3305,
	-1000, -1000, 2412, -1000, -1000, 45240, 2622, 45240, 45240, 59471,
	-277, -1000, 2123, 1974, 1050, 961, 1777, 1358, 61063, 1007,
	961, -1000, -1000, -1000, 119454, -1000, -1000, -1000, 119454, -1000,
	-293, -295, -246, 95805, 2102, 1600, 961, 1777, 1007, 2478,
	-1000, -265, -1000, 1007, 1974, 1133, -301, -1000, -1000, -1000,
	-1000, 1007, 2478, -1000, 1974, -1000, -1000, -1000, 491, -1000,
	-1000, 1974, 961, 45240, 961, 1007, -302, 1007, -1000, 1974,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4275, 4274, 4273, 4269, 4268, 4267, 4260, 4256, 4254,
	4253, 4251, 4250, 4249, 4248, 4246, 4244, 4240, 4238, 4236,
	4234, 4230, 4227, 4225, 4224, 4219, 4213, 4212, 4209, 4207,
	4205, 4201, 4199, 4194, 4193, 4190, 4188, 4187, 4184, 4183,
	4182, 4180, 4179, 4177, 4176, 4174, 4173, 4169, 4167, 4154,
	4152, 4150, 4149, 4148, 4146, 4145, 4144, 4141, 4138, 50,
	4137, 4136, 4135, 4134, 4130, 4128, 4127, 4125, 4122, 4118,
	4117, 4115, 4114, 4112, 4111, 4110, 4109, 4107, 4103, 53,
	4102, 258, 4101, 4100, 4099, 4098, 4095, 4093, 4092, 4091,
	4088, 4083, 4081, 4078, 257, 4077, 111, 4076, 4074, 4065,
	4056, 4053, 253, 4048, 4044, 4040, 4038, 262, 4037, 4030,
	4028, 4026, 4025, 4022, 4020, 4019, 4018, 4017, 4016, 82,
	184, 4015, 4014, 1404, 4013, 4012, 4011, 4010, 4004, 4003,
	4001, 3999, 3994, 3993, 226, 3992, 248, 3991, 3990, 3989,
	3986, 3984, 3981, 3980, 3979, 3977, 3976, 3975, 3971, 3967,
	3963, 3962, 3961, 3960, 3958, 3957, 3955, 3947, 3945, 3944,
	3943, 3940, 3939, 3938, 3936, 3935, 3932, 3931, 3930, 3929,
	3927, 3925, 3923, 250, 178, 3914, 3913, 246, 244, 3912,
	3911, 3910, 3909, 3908, 116, 4, 96, 3905, 3878, 86,
	83, 78, 107, 90, 114, 3877, 93, 3876, 112, 54,
	3872, 9, 13, 156, 216, 11729, 211, 3869, 3868, 3866,
	221, 180, 3865, 218, 3864, 3863, 3862, 3861, 60, 44,
	162, 161, 152, 151, 177, 3860, 145, 85, 65, 52,
	38, 7, 59, 236, 17, 3857, 234, 12, 125, 1,
	34, 3856, 3855, 3854, 3852, 3207, 121, 3851, 240, 217,
	150, 3849, 3848, 3847, 647, 3846, 3845, 49, 3844, 101,
	80, 123, 8, 113, 3842, 135, 30, 3838, 141, 51,
	3836, 140, 104, 79, 8836, 9794, 3825, 97, 69, 124,
	2745, 157, 149, 183, 109, 146, 147, 188, 193, 189,
	160, 27, 3823, 228, 3820, 3233, 67, 166, 3819, 3813,
	3811, 75, 181, 95, 3809, 3805, 68, 6, 14, 10,
	176, 33, 103, 41, 21, 3801, 22, 3800, 3798, 3797,
	3795, 3790, 37, 148, 3788, 259, 3787, 270, 48, 40,
	3786, 28, 196, 3784, 206, 117, 3777, 3776, 229, 190,
	165, 3772, 43, 214, 3771, 3770, 3766, 3764, 3763, 128,
	3, 119, 3761, 3759, 134, 3758, 45, 220, 182, 3755,
	61, 3754, 3753, 155, 92, 118, 249, 130, 205, 105,
	204, 167, 212, 3750, 3749, 3748, 201, 3747, 3746, 200,
	138, 3745, 3744, 238, 260, 84, 39, 76, 215, 73,
	174, 158, 3743, 186, 3742, 3741, 261, 163, 199, 2,
	24, 87, 115, 3739, 5, 210, 137, 213, 99, 3738,
	6048, 1834, 780, 3736, 3735, 142, 106, 64, 102, 139,
	242, 66, 3733, 3732, 2487, 3731, 3730, 3729, 3728, 169,
	3727, 3726, 3725, 136, 143, 175, 3722, 91, 55, 42,
	19, 108, 235, 245, 100, 203, 153, 230, 3721, 3720,
	3719, 172, 3717, 72, 120, 3716, 187, 233, 3715, 3714,
	252, 3713, 129, 1379, 58, 133, 3711, 209, 3707, 3706,
	3702, 3690, 3686, 3682, 3680, 579, 208, 3679, 3675, 3674,
	57, 171, 3672, 241, 170, 159, 88, 46, 3671, 71,
	2444, 3670, 302, 256, 70, 237, 94, 239, 3669, 1340,
	56, 3668, 0, 12900, 6513, 10424, 12034, 3667, 4886, 3666,
	3665, 3661, 197, 126, 3660, 3659, 3657, 110, 3655, 77,
	3653, 3651, 62, 3650, 23, 15, 16, 29, 25, 173,
	168, 3649, 3648, 47, 122, 131, 3646, 243, 207, 3641,
	3640, 3639, 3638, 89, 3637, 35, 3636, 32, 3635, 3634,
	36, 18, 31, 3633, 3631, 219, 3630, 198, 225, 3629,
	144, 3628, 3223, 127, 3627, 3626, 232, 81, 3623, 273,
	3621, 3198, 3620, 3617, 20, 3616, 3615, 224, 164, 194,
	3613, 3612, 154, 3610, 3609, 3608, 269, 3607, 3606, 26,
	3604, 11, 3603, 3602, 192, 2990, 3601, 3600, 63, 3599,
	179,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 566, 566, 21,
	40, 22, 41, 15, 567, 567, 567, 567, 33, 23,
	42, 26, 26, 26, 26, 26, 187, 187, 187, 187,
	20, 20, 36, 36, 221, 221, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 565, 565, 223, 223, 222, 217, 217, 568, 568,
	224, 224, 224, 226, 226, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 464, 464, 464, 497, 497, 496,
	496, 496, 495, 495, 581, 581, 582, 582, 582, 582,
	582, 122, 122, 362, 362, 362, 48, 48, 48, 48,
	48, 560, 560, 189, 189, 189, 191, 191, 190, 190,
	190, 190, 70, 70, 573, 573, 574, 574, 572, 575,
	575, 575, 188, 188, 188, 118, 118, 118, 118, 119,
	119, 120, 120, 192, 192, 192, 194, 194, 193, 193,
	193, 193, 193, 193, 193, 193, 198, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 98, 98, 499, 499,
	500, 500, 183, 183, 184, 184, 184, 184, 185, 185,
	186, 186, 186, 62, 195, 195, 197, 197, 196, 196,
	50, 50, 50, 50, 50, 50, 50, 51, 51, 51,
	51, 51, 52, 52, 52, 52, 52, 52, 53, 53,
	53, 53, 53, 53, 60, 60, 60, 60, 174, 174,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 67, 67, 67, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 584, 584, 585, 585, 586, 586, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 76, 76, 324, 324,
	294, 294, 77, 77, 77, 78, 78, 79, 79, 64,
	64, 558, 558, 339, 339, 455, 455, 81, 81, 361,
	361, 82, 82, 82, 82, 82, 82, 83, 83, 83,
	83, 83, 83, 83, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 91, 91,
	91, 91, 91, 92, 92, 92, 89, 89, 89, 86,
	86, 86, 85, 85, 85, 90, 90, 90, 557, 283,
	283, 88, 88, 88, 87, 87, 87, 340, 340, 93,
	93, 93, 93, 295, 94, 94, 94, 94, 94, 94,
	94, 94, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 457, 457, 95, 95, 95,
	422, 422, 99, 99, 99, 377, 377, 100, 100, 100,
	100, 100, 101, 101, 101, 101, 101, 101, 121, 121,
	121, 121, 121, 121, 562, 562, 332, 332, 248, 248,
	248, 248, 111, 111, 111, 111, 112, 112, 112, 113,
	113, 179, 179, 128, 128, 128, 128, 128, 127, 127,
	127, 127, 127, 127, 54, 54, 54, 55, 55, 56,
	56, 57, 57, 58, 58, 59, 59, 59, 59, 59,
	130, 130, 578, 578, 132, 129, 129, 129, 131, 131,
	131, 131, 133, 134, 134, 134, 134, 134, 134, 134,
	134, 135, 135, 489, 489, 348, 348, 487, 487, 509,
	509, 488, 488, 299, 299, 299, 299, 299, 300, 300,
	300, 498, 498, 498, 498, 498, 498, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 180, 180, 181, 182, 182, 182,
	182, 182, 159, 159, 159, 173, 173, 173, 173, 173,
	173, 173, 162, 162, 162, 146, 146, 137, 137, 137,
	137, 137, 137, 137, 141, 141, 141, 141, 141, 141,
	141, 141, 138, 138, 148, 148, 148, 148, 148, 142,
	142, 143, 143, 143, 143, 169, 169, 145, 145, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 139, 139,
	139, 139, 150, 150, 150, 150, 384, 384, 384, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	172, 172, 172, 172, 172, 172, 576, 576, 577, 577,
	166, 166, 166, 166, 166, 166, 436, 436, 160, 160,
	160, 160, 165, 165, 165, 165, 168, 168, 168, 168,
	367, 367, 157, 157, 157, 158, 158, 158, 163, 163,
	164, 161, 161, 167, 167, 167, 167, 140, 140, 140,
	588, 588, 588, 170, 170, 156, 156, 171, 171, 171,
	171, 171, 171, 171, 171, 152, 152, 152, 151, 151,
	151, 151, 154, 154, 155, 155, 155, 155, 153, 144,
	559, 559, 555, 555, 555, 555, 555, 555, 555, 555,
	556, 556, 556, 556, 561, 561, 104, 104, 104, 104,
	104, 114, 114, 114, 114, 114, 105, 105, 105, 105,
	105, 107, 107, 106, 106, 106, 106, 71, 71, 71,
	71, 71, 14, 14, 14, 72, 72, 239, 239, 201,
	201, 201, 313, 313, 202, 202, 307, 307, 307, 307,
	199, 199, 200, 200, 73, 73, 589, 589, 589, 569,
	569, 569, 570, 570, 570, 570, 570, 570, 301, 301,
	302, 302, 402, 402, 402, 402, 402, 305, 305, 305,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 308,
	308, 225, 225, 225, 311, 312, 312, 309, 309, 310,
	310, 310, 315, 315, 314, 317, 317, 316, 401, 518,
	518, 520, 520, 520, 520, 520, 520, 520, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 385,
	385, 590, 590, 516, 516, 516, 517, 512, 512, 513,
	513, 513, 513, 513, 303, 303, 304, 304, 304, 304,
	514, 515, 330, 330, 440, 519, 519, 521, 521, 523,
	591, 591, 591, 591, 591, 591, 592, 592, 592, 400,
	400, 399, 399, 322, 322, 524, 524, 524, 524, 525,
	525, 525, 525, 525, 528, 527, 526, 526, 526, 526,
	526, 75, 75, 75, 364, 364, 363, 363, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 176, 176, 251, 251, 69, 69, 69,
	12, 12, 12, 571, 571, 571, 74, 74, 74, 74,
	74, 74, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 564, 564, 563, 563, 252, 252, 594, 594,
	80, 80, 80, 80, 80, 80, 80, 458, 458, 459,
	459, 68, 68, 68, 68, 68, 386, 386, 383, 383,
	382, 382, 329, 329, 438, 438, 438, 439, 256, 256,
	257, 257, 218, 218, 218, 28, 27, 19, 19, 24,
	24, 25, 25, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	44, 44, 44, 44, 47, 47, 43, 43, 43, 43,
	45, 45, 39, 39, 579, 579, 580, 580, 110, 110,
	115, 115, 115, 115, 115, 116, 116, 116, 116, 117,
	117, 117, 117, 126, 126, 175, 175, 175, 175, 175,
	175, 175, 49, 49, 49, 49, 61, 61, 61, 61,
	124, 596, 596, 596, 125, 125, 125, 595, 595, 249,
	249, 396, 396, 397, 397, 597, 597, 398, 398, 398,
	398, 398, 242, 241, 243, 243, 244, 244, 66, 66,
	66, 234, 234, 233, 231, 231, 501, 501, 236, 236,
	237, 237, 227, 227, 228, 228, 229, 229, 230, 230,
	240, 240, 598, 598, 102, 102, 102, 178, 178, 293,
	293, 293, 393, 393, 393, 323, 323, 263, 263, 395,
	395, 395, 395, 360, 360, 360, 177, 177, 337, 337,
	350, 350, 351, 351, 452, 452, 352, 108, 108, 109,
	109, 123, 123, 205, 205, 203, 203, 203, 203, 203,
	203, 203, 203, 210, 210, 211, 211, 212, 212, 213,
	214, 214, 214, 214, 341, 341, 215, 215, 215, 204,
	204, 204, 206, 206, 206, 206, 206, 206, 206, 209,
	209, 209, 209, 216, 216, 216, 208, 208, 535, 535,
	535, 537, 537, 539, 539, 538, 538, 534, 534, 536,
	536, 593, 593, 366, 366, 366, 320, 321, 318, 318,
	319, 319, 327, 327, 325, 326, 326, 328, 328, 437,
	437, 437, 219, 219, 219, 357, 357, 357, 357, 358,
	358, 389, 389, 387, 387, 387, 387, 388, 388, 390,
	390, 390, 391, 391, 392, 392, 354, 354, 355, 355,
	356, 356, 356, 356, 418, 418, 207, 207, 207, 334,
	334, 334, 335, 335, 408, 408, 408, 408, 408, 408,
	409, 409, 407, 407, 407, 407, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 442, 443, 443, 336, 336,
	444, 394, 394, 553, 553, 553, 554, 554, 435, 435,
	445, 445, 445, 445, 445, 445, 433, 433, 434, 434,
	453, 454, 454, 370, 370, 370, 370, 368, 368, 371,
	371, 371, 371, 371, 369, 369, 446, 446, 446, 446,
	359, 359, 447, 447, 447, 447, 448, 449, 449, 450,
	450, 403, 404, 404, 460, 460, 460, 460, 462, 333,
	333, 333, 333, 333, 511, 510, 510, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 477, 477,
	477, 477, 477, 477, 477, 463, 463, 463, 463, 463,
	467, 467, 467, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 468, 468, 473, 473, 474, 474,
	474, 469, 470, 475, 475, 475, 475, 599, 599, 479,
	479, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	465, 465, 465, 472, 472, 472, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 378,
	378, 380, 380, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	412, 412, 412, 412, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 529,
	529, 529, 529, 529, 529, 529, 529, 414, 414, 532,
	532, 533, 533, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 540, 540, 541, 541, 543, 543, 544, 544,
	545, 546, 546, 546, 547, 548, 548, 542, 542, 549,
	549, 549, 549, 550, 550, 551, 551, 551, 551, 551,
	552, 552, 552, 552, 552, 424, 424, 425, 425, 431,
	431, 431, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 253, 253,
	253, 253, 253, 346, 346, 344, 344, 344, 347, 347,
	345, 345, 343, 343, 342, 342, 421, 421, 419, 419,
	423, 423, 372, 372, 478, 478, 478, 478, 478, 478,
	478, 478, 373, 373, 373, 381, 374, 374, 375, 375,
	375, 375, 375, 415, 416, 376, 376, 376, 417, 417,
	426, 430, 430, 429, 428, 428, 427, 427, 405, 405,
	406, 406, 353, 353, 600, 600, 349, 349, 451, 451,
	451, 451, 297, 297, 338, 338, 296, 296, 288, 288,
	289, 289, 289, 289, 331, 331, 432, 432, 480, 480,
	481, 481, 482, 482, 483, 483, 484, 485, 486, 420,
	420, 273, 272, 260, 261, 271, 270, 269, 259, 262,
	266, 267, 268, 264, 265, 279, 278, 277, 232, 235,
	284, 285, 285, 287, 287, 286, 286, 275, 276, 456,
	258, 290, 290, 291, 291, 291, 292, 292, 292, 292,
	254, 254, 255, 255, 280, 280, 281, 282, 282, 274,
	274, 274, 245, 245, 245, 246, 246, 247, 247, 494,
	494, 491, 491, 491, 492, 492, 492, 493, 493, 493,
	493, 490, 490, 490, 490, 490, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 503, 503, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 505, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 508, 508,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 6, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 2, 0, 1, 2, 3, 1,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 6, 3, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 2, 6, 4,
	7, 7, 7, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 3, 2, 5,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 13, 16, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 8, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 4, 4,
	5, 5, 3, 3, 4, 4, 3, 6, 7, 4,
	6, 7, 8, 9, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 575, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-175, -180, -181, -182, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -176, -177, -178, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-131, -132, 444, -49, -61, -125, -124, 73, 127, 403,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -583, 102, -536, -84, -87, -117, -587,
	158, 215, -105, -106, 358, -112, -113, 410, -115, -116,
	412, 159, -56, -55, 153, -203, -205, -129, -130, -179,
	-137, -138, -139, -140, -141, -142, -143, -169, -144, -145,
	-146, -147, -148, -149, -153, -172, -150, -151, -152, -155,
	-154, -156, -161, -157, -158, -159, -160, -162, -163, -165,
	-166, -167, -168, -170, -171, 449, -164, 507, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -64, -66, -68, -71, -72, -73, -80,
	-74, -75, -535, -85, -86, -89, -91, -92, -88, -90,
	409, -206, -204, 572, 522, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -35, -40, -41, -37, -38,
	-36, -39, -42, -43, -44, -45, -46, -47, -27, -33,
	-34, -28, -29, -30, -31, -32, -15, -26, 541, 550,
	-209, -207, -208, -216, 436, 530, 481, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, -295,
	2, -275, -280, -281, -282, -274, -245, -505, -508, 4,
	-502, -506, 165, 224, 322, 21, 23, 22, 24, 25,
	26, 27, 28, 30, 31, 42, 43, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 116, 117, 118,
	119, 121, 126, 127, 130, 125, 129, 132, 133, 134,
	137, 138, 139, 141, 142, 144, 145, 146, 148, 149,
	151, 152, 153, 156, 154, 489, 155, 157, 158, 159,
	160, 163, 171, 172, 173, 178, 180, 184, 185, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 198, 202,
	204, 205, 206, 207, 208, 214, 215, 217, 218, 219,
	220, 225, 226, 227, 231, 228, 237, 238, 242, 243,
	244, 246, 250, 251, 252, 253, 254, 255, 257, 259,
	258, 261, 264, 265, 268, 272, 273, 277, 278, 274,
	279, 280, 282, 283, 286, 284, 287, 288, 285, 289,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 290, 305, 303, 307, 308, 309, 320, 318,
	313, 314, 310, 315, 311, 312, 316, 317, 324, 325,
	328, 212, 330, 331, 334, 352, 338, 339, 340, 343,
	344, 347, 350, 351, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 363, 365, 366, 367, 369, 370, 371,
	373, 375, 376, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 389, 391, 390, 392, 394, 396, 397, 398,
	403, 408, 405, 406, 407, 409, 410, 411, 412, 414,
	415, 416, 418, 419, 420, 421, 423, 425, 426, 429,
	430, 446, 447, 465, 427, 428, 431, 432, 433, 434,
	435, 439, 437, 438, 440, 441, 442, 444, 445, 448,
	449, 451, 452, 453, 454, 455, 456, 459, 461, 462,
	463, 464, 466, 469, 470, 471, 472, 467, 480, 474,
	475, 477, 478, 482, 483, 484, 485, 486, 487, 488,
	490, 492, 500, 501, 502, 504, 507, 508, 509, 510,
	498, 512, 513, 516, 517, 518, 521, 519, 520, 522,
	524, 527, 528, 529, 535, 534, 536, 542, 543, 545,
	546, 547, 37, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 122, 123, 150, 161, 162, 174, 186, 187,
	199, 201, 209, 210, 211, 232, 233, 235, 240, 262,
	327, 329, 345, 349, 364, 368, 372, 374, 388, 422,
	457, 468, 473, 493, 494, 495, 496, 503, 505, 530,
	531, 532, 537, 544, -295, 2, -275, 336, -268, 2,
	-245, -245, 375, 29, 2, 29, 363, 438, 484, 486,
	2, -562, -332, 2, 29, -248, -245, 102, 197, 436,
	-268, 2, -562, -332, 25, 2, -245, 2, 350, 22,
	28, 66, 77, 98, 137, 160, 181, 184, -586, 352,
	382, 425, 440, 480, 490, 504, 2, 534, 283, 437,
	481, 224, 118, 509, 431, -571, 429, 430, 350, 380,
	418, 200, 523, -249, 2, 427, -245, 283, 2, 575,
	94, 273, 74, 422, 441, -134, 501, -133, 493, 431,
	-135, -489, 2, 305, -245, 575, 575, 575, 29, -258,
	-245, 481, 224, 431, 118, 478, 575, 2, 481, 355,
	534, 437, 118, 385, 224, 509, 431, -571, 283, -560,
	2, -555, 4, -506, -502, -289, -288, 481, 487, 118,
	-282, -274, 565, -281, 575, 575, 575, 2, 243, 244,
	384, 383, 441, 442, 575, 575, 575, 575, 429, 2,
	160, 22, 28, 66, 93, 98, 124, 181, 184, 341,
	-584, 352, 382, 440, 480, 483, 490, 504, -570, 464,
	68, 431, -569, -571, 283, 509, 137, -382, 118, 273,
	195, 517, 486, 484, 515, 130, 231, 520, 519, 575,
	575, -96, 2, 572, 33, 32, 139, 444, -198, 481,
	236, 2, -245, 575, 575, 2, 243, 244, 429, 430,
	575, 575, 182, -555, 2, 575, 575, 2, 243, 244,
	429, 430, 236, 2, 68, 433, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 2,
	-173, 441, 464, 206, 47, 46, 74, 29, 381, 79,
	356, 119, 145, 510, 198, 224, 225, 251, 93, 94,
	-384, 45, 244, 243, 430, -576, 429, -436, 482, 432,
	438, 477, 255, 427, 501, 102, 524, 419, 547, 385,
	386, 475, 398, 274, 154, 4, 118, 305, 443, 493,
	273, 426, 359, 84, -593, 2, 481, -595, 2, 501,
	501, 2, -595, 2, -595, 2, -595, 2, -596, 501,
	544, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, -204, -206,
	-205, 575, 575, 575, 575, 575, 575, 575, -173, 441,
	2, 74, 29, -325, -327, 514, 234, 147, 342, -203,
	-205, 2, -535, -487, 2, -410, -509, -412, 563, 564,
	556, 479, 67, 321, 548, -424, 124, 515, 336, -508,
	-413, -426, 150, 422, -347, 8, 9, 5, 6, 7,
	-254, -414, -420, 506, 164, 326, -292, 576, 10, 572,
	-532, -205, -425, 38, 201, 65, -491, -291, -255, -463,
	235, -290, -274, -529, -530, 4, -502, -503, -492, -466,
	-474, -470, -471, -477, -245, -505, 77, 110, 111, 109,
	114, 113, 276, 275, 115, 112, 443, 523, 66, 37,
	209, 210, 240, 327, 211, 75, -531, 138, -504, 232,
	233, 457, 51, 388, 174, 123, 122, 329, 56, 54,
	531, -475, 120, 493, 494, 495, 496, 186, 187, 58,
	161, 162, 349, 372, 473, 503, 505, 199, 262, 44,
	106, 183, 230, 213, 239, 241, 245, 263, 266, 306,
	319, 323, 346, 348, 417, 450, -599, 532, 468, 69,
	70, -537, 390, -538, -268, -537, 575, 575, 577, 575,
	-318, -320, -321, 2, 29, 135, 572, 2, -441, 2,
	-442, -446, -205, 256, -445, 572, -443, 570, -275, 337,
	-533, 423, -529, -530, -254, -274, -291, 4, -502, -504,
	574, -322, 572, 118, 481, 78, 224, -377, 572, -245,
	29, 336, 497, 577, -319, 379, -422, 572, 336, 182,
	339, 60, 287, 2, 2, 2, 2, 2, 209, -245,
	481, 117, 2, 254, 2, 2, 2, 2, 2, 2,
	2, -340, 209, 2, -275, 534, -340, 209, 2, -340,
	209, 2, -383, 2, 87, -259, 209, 2, -245, -283,
	209, 2, -278, -280, -287, 209, 2, -285, -245, -500,
	209, 2, -499, -494, 10, -493, 5, 4, -502, -506,
	-503, -505, 77, -410, 2, -123, 2, 60, -245, 534,
	2, 2, 446, 2, 572, -134, 71, 501, 44, 441,
	-397, 2, -398, -241, -242, -243, -453, -244, 242, 378,
	387, 551, 128, 321, 547, -487, -578, 182, 555, 497,
	-487, -348, 574, 2, 2, 2, 2, 2, 2, -446,
	209, -275, 2, -272, -490, 4, -502, -506, -503, -507,
	29, 32, 33, 34, 36, 38, 39, 40, 41, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 109, 110,
	112, 111, 113, 114, 115, 124, 128, 131, 135, 136,
	140, 143, 147, 164, 166, 179, 181, 182, 197, 200,
	203, 216, 229, 234, 236, 256, 260, 267, 275, 276,
	321, 326, 332, 336, 337, 341, 342, 361, 377, 393,
	413, 436, 443, 460, 476, 481, 491, 497, 499, 506,
	514, 515, 523, 525, 533, 538, 539, 540, 541, -508,
	2, -446, 209, 2, -277, 209, -446, -280, 2, -259,
	2, -271, -490, 2, -296, 209, -275, -276, -280, -278,
	2, -285, 2, -499, 209, 2, 534, 236, 497, 577,
	-338, -288, -289, -486, 8, -331, -245, 574, -410, 2,
	-123, -107, 2, 179, -410, 209, 2, -123, 209, 2,
	-410, 209, 2, -123, 209, 2, -573, 2, -499, 209,
	-245, 2, 287, 2, 2, 504, 2, 98, 481, 117,
	2, 407, -585, 425, 508, 2, 2, 2, 2, 2,
	2, 2, 481, -264, 2, -245, 179, -285, 209, -286,
	2, 437, -594, 390, -499, 209, 2, 534, -278, 2,
	-278, 224, 238, -259, 209, 2, 486, 484, 486, 484,
	182, 2, 236, 2, 236, 2, -447, 2, -448, -442,
	-449, 570, 337, -457, 2, -456, -493, 530, -96, 572,
	-96, 572, 441, 572, -499, -275, -275, -410, 2, -123,
	-107, 2, -410, 2, -123, 2, -120, -119, -499, 572,
	182, -410, 2, -123, -107, 2, -410, 2, -123, 2,
	-198, 179, 2, 118, 481, -173, 2, 179, 525, 2,
	8, 2, 216, -499, 432, 386, 171, 2, 446, 2,
	447, 74, -384, 547, 74, 182, 2, 182, 2, -367,
	2, 541, 182, 2, 2, -559, 2, 336, 182, 2,
	182, 2, 182, 2, 182, 2, 182, 2, 383, 442,
	502, 244, 2, -123, 538, -107, -410, 538, 2, -577,
	179, 430, -410, 2, 500, 253, 155, 182, -367, 2,
	182, 2, 182, 2, 5, 2, 384, 465, 2, 242,
	378, 465, 2, -275, -588, 2, 481, 534, 437, 2,
	2, 88, 89, 182, 2, 182, 2, 196, 182, 2,
	182, 547, 2, -359, -446, -396, -397, -396, 497, -325,
	-327, -173, 446, 2, -210, -357, -212, 179, -387, -388,
	-213, 267, 166, 332, -214, -366, 29, 135, -366, -366,
	60, 573, 573, 11, 12, 76, 42, 563, 564, 565,
	566, 177, 567, 568, 561, 562, 560, 553, 554, 558,
	248, 249, 95, 557, 555, 86, 281, 424, 167, 168,
	169, 170, 404, 222, 35, 223, 14, 15, 16, 34,
	341, 266, 548, 213, 450, 556, 17, 18, 19, 239,
	241, 323, 50, 216, -253, -298, -410, -410, -410, -410,
	-410, -410, -410, 348, 572, -353, -405, 570, -205, 572,
	572, 572, -486, -205, -410, -424, 573, -345, 572, -205,
	-424, -419, 572, 422, 570, 572, -427, -410, 5, 5,
	5, 572, 574, -540, 542, 179, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 374, -468, 572, -467, 572, -467, -467, 535, -465,
	572, 550, 543, 572, -465, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 535, 577,
	-537, -322, 572, -349, -451, -410, 565, -349, -349, 336,
	-342, -410, 106, -370, 245, 306, 183, 263, 417, 230,
	-407, 576, -407, -435, 550, -205, -443, -274, -205, -445,
	572, -441, -435, -97, -486, -81, -94, -102, -123, -136,
	-177, -178, 565, -275, 572, 182, 572, 574, -490, 182,
	-331, -259, -275, -290, -291, -296, 134, -342, -555, 509,
	431, -331, -248, 39, -421, -460, -461, -511, 576, -510,
	-463, -473, -469, -472, 364, 368, -492, 54, 531, -475,
	235, 4, -502, -504, 232, 233, 457, 51, 388, 174,
	123, 122, 329, 56, 493, 494, 495, 496, 186, 187,
	58, 532, 468, 69, 70, -555, 509, 431, -331, 179,
	-497, 2, -496, -495, 115, 443, -493, 5, 2, 150,
	2, 2, 2, -245, -224, 577, 64, 411, 150, -340,
	209, -224, 150, -224, 150, -297, 209, -296, -224, 150,
	-224, 577, 150, -224, 577, 150, 574, 577, 150, -497,
	2, -383, -489, -342, 39, -397, 2, 124, -495, -597,
	577, 265, -300, 280, 320, 205, 337, 545, 330, 128,
	-498, 5, 4, -420, -432, 124, 273, 235, -480, -482,
	8, -481, 9, -483, 563, 564, -488, -487, 108, 574,
	-490, -221, 405, 444, -220, 24, 30, 139, 226, 309,
	528, 156, -310, 227, 351, 355, 150, 461, 518, -566,
	-567, 428, 488, 489, 90, 330, 444, 405, 150, -363,
	-365, 39, 116, 309, 350, 61, 219, 285, 286, 463,
	537, 150, 444, 405, 351, 24, 139, -236, -233, -567,
	99, 405, 474, 377, -567, -223, 461, 518, -566, -567,
	428, 405, -222, -310, 150, 576, 24, 405, 444, 351,
	-581, -582, 139, 30, 405, 351, -563, -534, 541, 150,
	-446, 209, -574, -119, 257, 5, 10, -119, -338, 577,
	577, -490, 565, 430, 429, 150, 150, 150, 150, 179,
	321, 2, 2, 2, 2, 2, 184, -569, -586, 2,
	2, -275, 209, -324, 336, -558, -339, 481, -275, 321,
	44, -277, 209, 2, -280, 534, -563, 321, -279, 209,
	-275, 39, 572, 2, -383, 2, 224, -534, 321, -447,
	-293, -275, -442, -293, 444, -268, 39, -407, -275, 573,
	577, -457, -457, -499, -186, 541, 182, 102, 572, 572,
	-198, -454, 577, -453, -500, -120, -499, -499, -558, -259,
	2, -275, 2, 481, 246, -499, -186, 216, -499, -499,
	-499, -489, 29, 447, 2, 383, 442, 502, 89, 447,
	2, -275, 481, 118, 224, 80, -245, -561, 179, -556,
	418, 431, 509, -555, -275, 118, -275, 118, -275, 118,
	-275, -275, 2, 2, 2, 2, 2, 85, 85, 2,
	46, -577, 179, 2, 500, 2, 500, 2, -245, -245,
	-245, 464, 265, -275, 179, 481, 224, 481, 224, 118,
	182, 74, 118, 481, -224, 577, -249, -210, -357, -489,
	-358, -357, -211, -210, -213, 179, 387, 519, 309, 448,
	250, -388, -387, 29, -410, -392, 173, 308, -410, -390,
	-412, 563, 564, -481, -483, -341, 330, -204, -204, -204,
	-328, -437, -410, 377, 224, -462, -460, -460, -273, -490,
	493, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, 266, 213, 450, 50,
	216, -410, 497, -410, -410, -410, -410, 303, 321, 326,
	506, 164, 516, 135, 330, -600, 476, 41, -417, -205,
	-346, 572, -431, 36, 460, 29, -424, 572, 2, -405,
	-410, -406, -343, -342, -342, 573, 533, 29, 135, 565,
	2, 573, 577, 39, 573, -410, -343, -423, -419, -342,
	-430, -429, 538, -378, -379, 546, 290, 121, 207, 288,
	-380, 435, -484, 8, -490, 565, -541, 172, 200, 572,
	573, 2, 573, 2, 573, -410, 2, 573, -410, 2,
	573, -410, 2, 573, -410, 2, 573, 2, -410, -410,
	-410, -410, -410, -410, -410, -342, 8, -484, -484, 493,
	493, -484, -484, -484, -476, 364, 365, 366, 367, 268,
	269, 270, 271, 368, 369, 370, 371, 295, 296, 297,
	298, 291, 292, 293, 294, 299, 300, 301, 302, 191,
	192, 193, 194, 187, 188, 189, 190, -476, -372, 2,
	-478, -342, 4, 546, 290, 121, 207, 288, 435, 5,
	-372, 2, -373, 2, -410, -342, -374, -411, -412, 563,
	564, 556, -424, -375, 2, -410, -343, -410, 57, 260,
	499, -376, -410, 182, -342, -342, 2, -342, 2, -538,
	39, -342, -334, 577, 182, 39, 4, -334, -334, 572,
	573, 577, -371, 204, 284, 279, 238, -371, -441, -370,
	245, -368, 346, -368, -368, -435, -260, 570, 578, -490,
	-435, -434, -433, 39, -268, 343, -435, -435, 574, 573,
	-434, 571, -553, 572, 575, 575, 575, 575, 575, -275,
	572, -342, -490, 574, 466, 573, 239, 239, 239, 239,
	423, 573, 497, -557, -283, -287, 541, -96, 338, 573,
	577, -333, 38, 570, 574, -484, 2, 2, -479, 535,
	572, 572, -379, 572, 182, -557, -287, -332, 577, 497,
	-245, 2, -275, -340, -224, 150, -340, -340, -224, 577,
	150, -259, -278, -283, -285, -287, -245, -499, -500, -224,
	-279, -578, 573, 501, -398, -299, 387, 459, 406, 439,
	478, 8, 9, 8, 9, 577, -490, 577, -579, 93,
	497, 78, 431, -238, 274, 397, 309, 481, 422, -401,
	209, 78, -512, -262, 93, -513, -245, 72, 515, 377,
	181, 148, -579, 93, 377, -579, 93, 2, 226, 93,
	444, 464, 497, 60, -446, 42, 42, 29, -123, 261,
	182, 547, 481, 224, 431, 497, -446, -365, -460, 116,
	285, 286, 60, -485, -480, 563, 564, -485, 60, -485,
	-485, -485, 541, -277, -446, 431, 497, 497, 396, 396,
	497, 497, -598, 555, 396, 577, 42, 42, 29, -123,
	261, 182, 497, -296, -260, 529, 43, 529, 497, 43,
	431, 497, 577, 43, 43, 497, 497, -564, -250, 105,
	315, 278, 316, 97, 312, 96, 311, 103, 313, 104,
	314, 536, 324, 63, 310, 289, 317, -251, -252, 357,
	527, -499, 444, 405, 150, 216, -454, 216, -454, -288,
	-245, 574, -123, -410, -410, -123, -410, -123, 46, 150,
	2, -594, 254, 572, -303, 321, 182, -331, -455, 236,
	577, -339, 150, -496, -364, -363, 321, -279, 209, 2,
	150, -322, 321, 144, 572, 385, 2, -261, 209, -246,
	-245, -383, -227, 485, 150, -361, 525, -393, -123, 572,
	124, 39, -393, -350, -351, -452, -352, -262, 572, -268,
	-407, -96, -456, 573, 573, 573, -185, 340, -184, -245,
	5, -198, 525, -302, -402, -401, -516, -517, -512, 266,
	224, 515, 238, 165, -323, -263, -262, 117, -192, 541,
	-119, 573, -454, 216, -186, -186, -454, -454, -275, 179,
	-499, -186, -186, -186, 2, 2, 2, -367, -275, -259,
	-296, -275, 574, -331, -331, -287, -283, -367, -259, -367,
	-259, -367, -259, -123, -410, 2, 441, 179, 179, 574,
	-367, 385, 118, 481, 355, 224, -275, -296, -275, -296,
	-259, 118, -259, -275, -446, -358, -211, 337, 250, 448,
	-390, -391, -412, 422, 423, -391, 422, 423, 8, 9,
	8, 9, -215, 452, 325, -340, 577, -218, 40, 131,
	250, -275, 547, 146, -410, -410, 497, -600, 476, -417,
	146, -410, 303, 326, 506, 164, 516, 135, 330, 182,
	572, -411, -411, 573, -344, -410, -410, 571, 580, 573,
	-327, 577, -325, -410, -342, -342, 573, 574, -342, -331,
	571, 571, 577, 573, -428, -429, 140, -410, 497, 497,
	497, 497, 572, 573, 574, -546, 347, 572, 572, -410,
	573, 573, 573, 573, 39, 577, 577, 577, 573, 577,
	577, 577, 573, 573, 573, 577, 573, 547, 547, 573,
	573, 573, 573, 577, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 573, 577,
	573, 182, 573, 573, -381, 361, 573, 11, 12, 563,
	564, 565, 566, 177, 567, 568, 561, 562, 560, 553,
	554, 555, 86, 281, 424, 14, 15, 16, 239, 216,
	-411, -411, -411, 573, -415, -416, 182, 179, 39, -376,
	-376, -376, 573, 182, -342, 573, 573, 572, -539, 283,
	321, 573, -404, -403, 539, -451, -335, 2, -441, -270,
	-490, -404, -404, -342, -410, 245, 245, -369, 525, 336,
	-371, -441, -434, -486, -409, -408, 180, 40, 131, 318,
	212, -434, -268, -322, -434, -434, -490, -435, -435, -433,
	573, -554, -486, 573, -336, -444, -533, -327, 574, -490,
	-195, -534, -174, 5, 326, -174, -174, -174, -331, 497,
	497, 25, 362, -460, 570, 571, 8, -490, 572, -484,
	-484, -484, -331, 182, 182, 182, -496, -496, 2, -224,
	-340, -224, -224, -296, -297, -224, -224, -224, -362, 541,
	-487, -397, 513, 83, 387, 493, -487, -220, 405, -262,
	-262, -275, -284, -245, 195, 397, 26, 397, 265, 265,
	321, -401, 209, -226, 321, -460, -269, -245, 572, -385,
	543, 250, 250, 525, -262, -269, 250, 209, -262, 209,
	-269, 2, -269, -565, 387, 331, -410, -496, 272, 385,
	322, -221, 405, 444, -123, -123, -123, 572, -578, 525,
	134, -275, -296, -275, -284, -279, 444, 405, 319, -290,
	-485, -485, -363, 444, 405, -284, -277, -496, -232, -245,
	-232, 431, -259, 396, 547, -598, -222, -123, -123, -123,
	572, -260, -223, 405, 5, 209, -262, 5, -245, -262,
	-284, -496, -582, 24, -262, 209, -262, -284, -496, -250,
	-499, 326, 521, -563, 431, 497, -446, -119, -189, 541,
	-119, -183, 220, 565, -560, -245, 534, -245, -301, -304,
	-302, -262, -201, -202, 543, 541, 150, -294, -275, 570,
	-186, -499, -275, -285, -286, 150, -322, 321, -499, 39,
	150, 572, 2, 2, 336, 321, -261, 209, -228, 141,
	-598, -259, -404, -335, -360, -395, 413, 336, -323, 530,
	-268, -360, -337, 577, 182, 555, 574, -323, -450, 565,
	-96, -96, -186, 577, 572, 555, 555, 572, -499, -499,
	573, 577, -226, -275, -261, 224, 224, -267, -246, 573,
	577, 574, 572, -194, 340, -193, 142, 252, 237, 453,
	454, 455, 456, 133, -192, -120, 182, -57, 541, 481,
	-186, 576, -245, -367, -367, -367, 441, 441, -245, -271,
	-259, -275, -272, -296, 179, 179, -259, 519, -391, 337,
	277, -437, -219, 549, -275, 576, -410, -410, 146, 146,
	-410, -411, -411, -410, 146, 182, 572, -410, -421, 34,
	34, 573, 577, -406, -410, 573, 533, -327, -327, 573,
	565, -490, 576, 573, -419, 143, -410, 491, 290, 207,
	288, -380, 288, -380, -380, -484, 5, -490, 565, -547,
	-265, 572, -245, 539, -326, 342, 573, -462, -460, -410,
	-410, -410, -410, -410, -484, -465, -465, -480, -480, -410,
	-415, -410, -462, -460, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, 135, 321, 330, -411, -416, -415, -410,
	-410, -460, 573, 573, 573, -342, -96, 572, 283, -354,
	200, -410, -454, 577, -354, -354, 573, -441, -441, 572,
	-410, 245, 571, 577, 579, 555, -322, 574, -433, -434,
	571, 573, 577, 573, 577, -394, 39, 573, -490, -404,
	-197, -196, 132, 53, -331, -331, 339, 5, 8, 570,
	571, 574, -484, 573, 573, 573, -331, -331, -331, -224,
	-224, 117, 309, -410, 497, 497, 60, 497, 42, 319,
	-232, 377, 422, 26, 397, 397, 150, 321, 527, -518,
	-513, 148, -410, 572, 224, 572, 572, 2, -217, 139,
	444, -580, 2, 525, 150, -224, 150, -224, 545, 572,
	572, 497, 431, -238, 541, -342, -410, -187, 124, -489,
	-567, 576, -567, 576, 431, 497, 431, 497, 541, 163,
	163, -232, 541, -342, 497, -464, 48, 27, 321, -278,
	497, 497, -224, 150, 509, 444, -499, 326, -284, -279,
	444, 405, -454, -191, 340, -190, 142, 415, 133, 252,
	-454, -189, 182, 236, -279, 2, 573, 573, 577, -519,
	39, 334, 334, 572, -275, -77, 541, -453, -486, 44,
	-277, 39, 150, -563, -123, -279, -458, -459, 5, -275,
	150, 336, 321, -229, 259, -598, -494, -534, -327, -360,
	-349, 322, 91, 573, -404, -351, -335, -410, 2, 573,
	-184, -185, -499, -499, -499, -186, -198, -198, -402, -305,
	572, -261, -246, 572, -198, -263, 2, -500, 577, 572,
	555, 555, 555, -454, -123, 340, -275, 565, -367, -312,
	-311, 355, 330, -312, 422, 422, 337, 173, 255, -218,
	-260, -410, -410, 146, 34, 34, -410, -410, -421, 573,
	-410, -410, -342, 571, 5, -410, 573, 573, 8, -410,
	573, 574, -548, -245, -410, 573, 60, 573, 573, 577,
	577, 573, 573, 573, 573, 573, 573, 573, -416, 182,
	135, 330, 572, 573, 573, -96, -418, 203, 60, -441,
	-418, -418, -369, -331, -441, -408, -260, 570, -490, -486,
	-444, 572, 574, -196, 555, 571, 2, 570, -490, 573,
	117, -262, -262, 481, 422, 319, -232, 377, 422, 396,
	265, 26, 26, -401, 150, -520, 93, -522, 76, 165,
	102, 321, 326, 515, 377, 72, 124, 393, -590, 39,
	552, 573, -329, -438, -533, 572, -245, -329, -331, 321,
	471, 124, 321, 124, 117, 509, 79, -262, -269, -331,
	-331, -275, -284, 157, 573, 577, 555, 2, 565, 565,
	-284, -279, -284, -277, 353, 157, 573, -260, 5, 5,
	150, -257, 76, 5, -262, -262, -278, 117, 431, 497,
	-189, 577, 572, 555, 555, -189, -500, -119, -322, -313,
	226, -262, -517, -514, -515, 377, -521, -523, 165, 377,
	-123, 2, -200, -199, -245, 5, 572, -303, 340, 571,
	-496, -364, -123, -279, -322, 573, 577, -386, 525, -260,
	-275, 150, -230, 258, -598, -494, -227, -389, -387, 136,
	572, 336, -123, -327, 555, 573, 573, 117, 117, 218,
	149, -329, 572, 572, -331, 117, 573, -193, -194, -499,
	-119, -499, -192, -58, -59, 224, 93, 360, -272, 481,
	224, 572, 572, -218, -410, -410, -410, 573, -327, -490,
	565, -542, 355, 573, -437, -410, -410, -411, 182, 572,
	-421, 573, -543, 540, -410, -355, -356, -410, 421, 107,
	201, -543, -543, 573, -486, 2, -499, 570, 2, 216,
	396, 265, 497, -401, -269, -273, -266, -245, 165, 209,
	326, -385, 250, 572, -411, -275, 572, 2, 31, -591,
	128, 229, 573, 577, -439, -256, -245, -410, -439, 573,
	573, 326, 326, -410, -460, 572, -224, -224, 573, 573,
	-410, 497, -489, 100, -487, 2, -567, -259, -410, 497,
	5, -224, -273, -224, -224, -257, 509, -284, -279, -190,
	-191, -499, -119, -189, 39, -308, 228, 2, -519, 250,
	-266, 250, -589, 541, 573, 577, 555, 555, -301, -201,
	-78, -79, 498, -453, -322, 39, 5, 572, -245, 336,
	572, -260, -240, 92, -598, -494, -228, -360, 322, -331,
	93, -389, -417, -186, 572, 572, -306, 81, 94, 125,
	208, 185, 225, 464, 469, 29, -306, 573, -329, -329,
	573, 572, -186, 573, 577, 29, 572, 29, 572, -275,
	-296, -342, -342, 573, -327, 60, 577, 573, 573, -411,
	-421, 573, -544, -545, -265, 577, 572, 572, 445, 571,
	2, -232, 377, -232, 377, -522, -266, 321, 525, -410,
	-247, 572, -410, 39, 229, 129, 214, -400, -592, 101,
	472, 217, -438, -218, 573, -399, 525, 393, -257, -329,
	572, 572, 572, 555, 182, 572, -464, -224, -278, 573,
	-572, 391, -123, -309, -310, 216, 572, -307, 336, 117,
	309, -199, -487, -487, 573, 39, -79, 9, 39, -123,
	-329, -275, -329, 336, -234, -233, 267, -494, -229, 573,
	-269, -360, -500, -500, -399, 573, 573, -500, -59, -331,
	-331, 573, 573, -549, 385, 423, 202, -342, -328, 573,
	577, 39, -356, 2, 2, 2, 396, 396, 150, 204,
	573, -524, 282, -245, 573, 129, 214, -308, 572, -219,
	-439, -308, 204, -275, -568, 525, 573, -315, -314, -311,
	-317, -316, -311, -342, -487, 100, 353, -342, -257, -575,
	183, -574, 5, 10, -201, 353, -330, -440, -262, 82,
	117, -313, -123, -123, 573, -386, 573, -275, -231, -501,
	396, 398, -598, -230, -404, 573, 573, -400, -399, -202,
	541, 573, 573, 573, 573, -550, -551, 50, 512, 108,
	-410, -550, -550, -545, -547, 165, 541, -525, -528, -527,
	336, 451, 183, 354, 573, 471, 537, -309, -331, 541,
	-322, -410, -399, 573, 577, 530, 573, 577, 530, 573,
	182, 573, -224, -188, 541, 46, -307, -275, 573, 577,
	376, 130, 139, -308, -589, -399, 572, -400, 572, -237,
	-236, -598, -480, -240, 136, -186, -186, -308, -400, -404,
	-186, -552, 148, -551, 373, 178, 422, 373, 178, -552,
	-552, -266, 55, -527, 336, -528, 336, 519, 130, -591,
	573, 55, -524, -308, -314, 216, -316, 182, 353, 429,
	-574, 31, -239, -238, 572, -440, 423, 423, 2, -309,
	-307, -400, -329, -308, -329, -235, -331, -234, 322, 519,
	-309, -308, 108, 200, 492, 309, 34, 555, -526, 309,
	411, 64, 444, -526, -404, 555, -525, 572, 572, 340,
	-331, 2, -201, -308, 573, -309, 573, -231, 444, -202,
	-309, 422, 344, -551, -410, 23, 326, 124, -410, -591,
	-342, -342, -185, 572, 573, -307, -309, -399, -202, -400,
	-237, -350, -404, -202, 573, 573, -185, -225, 64, 411,
	-239, -202, -400, -404, -308, -404, -404, -309, 497, 573,
	-404, -308, -309, 572, -309, -202, -342, -202, -404, 573,
	-404, -309,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 502, 503, 505, 506, 507, 509,
	510, 512, 514, 516, 517, 518, 520, 521, 523, 524,
	525, 526, 527, 529, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	593, 595, 0, 1265, 1267, 1269, 1271, 0, 736, 0,
	36, 37, 0, -2, 300, 302, 304, 0, 330, 332,
	333, 335, 337, 339, -2, 0, 437, 438, 440, 442,
	-2, 0, 916, 918, 0, 582, 584, 0, 921, 923,
	0, 0, 604, 605, 0, 1371, -2, 598, 600, 602,
	667, 669, 671, 673, 675, 677, 679, 681, 683, 684,
	686, 688, 690, 692, 694, 695, 697, 699, 701, 702,
	704, 705, 707, 709, 711, 713, 715, 717, 719, 721,
	723, 725, 727, 729, 731, -2, 733, -2, -2, 0,
	-2, -2, -2, 1283, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 388, 389, 391, 393, 395, 397, 400,
	402, 404, 1429, 444, 446, 448, 450, 452, 454, 456,
	0, -2, 1443, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 96, 97, 98, 99, 100,
	101, 102, 103, 71, 72, 74, 75, 76, 80, 81,
	82, 83, 84, 85, 86, 87, 94, 69, 0, 0,
	1402, 1404, 1406, 1408, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 504,
	508, 511, 513, 515, 519, 522, 528, 530, 532, 489,
	490, 493, 2107, 2124, 2125, 2126, 2129, 2130, 2131, 2132,
	2133, 2134, 2565, 2646, 2647, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 491, 492, 1084, 0, 556, 554,
	2092, 557, 2372, 559, 561, 431, 432, 433, 434, 435,
	436, 0, 575, 567, 1441, 576, 578, 579, 580, 581,
	551, 549, 0, 575, 2160, 573, 1263, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 367,
	1133, 1134, 1135, 1248, 1249, 2415, 1290, 0, 212, 594,
	-2, -2, -2, 2530, -2, 626, -2, 633, 2534, 2417,
	638, 0, 640, -2, 643, 1266, 1268, 1270, 734, 735,
	2110, 0, 0, 0, 0, 0, 38, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 222, -2, -2, -2, -2, 0, 0, 2459, 2210,
	2060, 2126, 2063, 2058, 301, 303, 305, 306, 0, 0,
	0, 0, 0, 0, 331, 334, 336, 338, -2, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 977, 969, 970, 1190, 0, 0, 0, -2, 439,
	441, 494, 495, 0, 1430, 1430, -2, 0, 0, 0,
	0, 275, 266, 917, 919, 920, 0, 0, 0, 0,
	583, 585, 0, 0, 248, 922, 924, 925, 0, 0,
	0, 0, 0, 277, 0, 0, 599, 601, 603, 668,
	670, 672, 674, 676, 678, 680, 682, 685, 687, 689,
	691, 693, 696, 698, 700, 703, 706, 708, 710, 712,
	714, 716, 718, 720, 722, 724, 726, 728, 730, 732,
	742, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 828, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 898, 0, 745, 747, 748, 749, 0,
	808, 826, 827, 836, 0, 1124, 1431, 1292, 1273, 1287,
	1292, 1275, 1276, 1277, 1278, 1279, 1284, 1286, 1280, 1281,
	1282, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	390, 392, 394, 396, 398, 401, 403, 405, -2, 1400,
	1401, 445, 447, 449, 451, 453, 455, 457, 586, 0,
	588, 0, 746, -2, 0, 1435, 1435, 1435, 0, 0,
	1401, 1399, 0, 591, 592, 647, 648, 1703, 0, 0,
	0, 0, 0, 0, 0, 1957, 1789, 0, 649, -2,
	1820, 1822, 2505, 2530, 1956, 1824, 1825, 1826, 1827, 1828,
	0, 1830, 1831, 1832, 1833, 1834, 1835, 0, 1837, 0,
	1842, 1843, 1844, 0, 2512, 2037, 2120, -2, 0, 0,
	2518, 2116, 0, 1923, 1860, -2, -2, 2143, 2122, 1635,
	1636, 1637, 1638, 1639, -2, -2, 2548, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 0, 2493,
	2513, 2514, 2519, 2521, 2515, 2502, 1885, 2222, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1662, 1671, -2, -2, -2, -2, -2, -2, -2,
	2506, 2507, 2524, 2527, 2533, 2538, 2539, 2511, 2520, 2547,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 1663, -2, -2, -2,
	-2, 1418, 2385, 1421, 1084, 1419, 1403, 1405, 0, 1407,
	0, 0, 0, 1412, 1438, 1436, 0, 1487, 1416, 1417,
	1505, 1505, 1529, 0, 1510, 0, 1529, 1430, 1556, 0,
	1516, 2407, 1861, 1862, 0, 2126, 2121, -2, -2, 2545,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 558,
	560, 0, 0, 0, 574, 1440, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 372, 373, 374, 2513, 0,
	0, 0, 379, 0, 381, 382, 383, 384, 385, 386,
	387, 182, 2513, 462, 487, 0, 182, 2513, 465, 182,
	2513, 468, 0, 471, 1188, 182, 2513, 474, 2088, 182,
	2513, 477, 479, 2096, 182, 2513, 483, 2103, 2101, 484,
	2513, 486, 280, 278, 279, 2139, 2140, 2147, 2148, 2149,
	2150, 2546, 2548, 1259, 1260, 1261, 1262, 0, 1289, 1189,
	596, 597, 0, 621, 0, 625, 2501, -2, 0, 2426,
	-2, 629, 1293, 1297, 1298, 1299, 1300, 1301, 0, 0,
	0, 0, 1306, 0, 0, 635, 0, 0, 622, 623,
	641, 644, 0, 737, 738, 739, 740, 741, 68, 0,
	2513, 1556, 70, 0, 2082, 2151, 2152, 2153, 2154, 2155,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	73, 0, 2513, 77, 0, 2513, 0, -2, 88, 0,
	95, 0, 2085, 104, 0, 2513, 0, 2057, -2, 0,
	193, 0, 944, -2, 2513, 1132, 0, 0, 0, 0,
	907, 2054, 2059, 908, 2078, 909, 2064, 0, 307, 308,
	309, 310, 311, 0, 312, 2513, 314, 315, 0, 317,
	318, 2513, 320, 321, 0, 323, 0, 233, 234, 2513,
	342, 343, 0, 345, 346, 0, 348, 0, 0, 0,
	352, -2, 368, 0, 365, 355, 356, 358, 359, 360,
	361, 362, 0, 409, 407, 2093, 0, -2, 2513, 0,
	941, 0, 0, 1169, -2, 2513, 1129, 0, 1175, 1171,
	0, -2, 0, 1428, 2513, 1310, 973, 974, 975, 976,
	1568, 428, 0, 1336, 0, 1338, 0, 1357, 1562, 1505,
	0, 0, 1567, 0, -2, 545, 2109, -2, 497, 0,
	498, 0, -2, 0, 292, 0, 0, 926, 927, 928,
	929, 930, 933, 934, 935, 936, 1542, 251, 249, 0,
	0, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	0, 0, 606, 0, 0, 743, 744, 0, 0, 754,
	755, 756, 0, 292, 2418, 2381, 2243, 763, 0, 766,
	769, -2, 0, 0, 0, 0, 773, 0, 778, 779,
	780, 0, 0, 784, 786, 915, 788, 0, 0, 790,
	0, 794, 0, 797, 0, 799, 0, 801, -2, -2,
	-2, -2, 812, -2, 0, 815, 817, 0, 819, -2,
	0, 828, 824, 825, 0, 0, 0, 0, 844, 845,
	0, 854, 0, 857, 858, 859, 0, 861, 862, 0,
	864, 865, 866, 867, 0, 869, 870, -2, -2, 874,
	876, 0, 883, 0, 887, 0, 891, 0, 0, 897,
	0, 750, 751, 182, 1560, 1272, -2, 1274, 0, -2,
	0, 587, 0, 590, 1460, 1386, 1383, 0, 1457, 1458,
	1387, 0, 0, 0, 1394, 0, 1433, 1434, 0, 0,
	0, 1373, 1374, 0, 0, 0, 0, 1962, 1963, 1964,
	1965, 1966, 1967, 1970, 1971, 1968, 1969, 1972, 1973, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 1976, 1977, 0,
	0, 1979, 0, 1981, 0, 0, 0, 0, 0, 0,
	1768, 1770, 2045, 0, 0, 1978, 1708, 1709, 1710, 1711,
	1712, 1747, 1748, 0, 0, 1821, 2042, 2041, 1823, 0,
	1993, 0, 1836, -2, 0, 1957, 1988, 0, 0, 1845,
	1846, 1847, 0, 0, 1993, 0, 0, 2036, 1857, 1858,
	1700, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1649, 1648, 0, 1650, 0, 1651, 1652, 1659, 1672,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 2017, -2, 0, 0, 0, 0, 1664, 0,
	1420, 0, 0, 1491, 2046, 2050, 2051, 1491, 1491, 0,
	0, 1994, 1553, 1553, 0, 0, 1548, 1548, 1548, 1546,
	1529, 0, 1529, 1539, 0, 1529, 1529, 0, -2, 1510,
	0, 0, 1539, 0, 1523, 533, 535, 537, 539, 540,
	541, 543, 1557, 1558, 0, 0, 0, 0, 2127, 0,
	0, 0, 0, 0, 2112, 0, 0, 0, 0, 2469,
	2417, 563, 577, 1430, 0, 1996, 1583, 1587, 0, 1589,
	1590, 1591, 1592, 1593, 0, 0, 1584, -2, 1660, 1662,
	1683, 2144, 2145, 2146, 1643, 1644, 1645, 1646, 1647, 1655,
	1642, 1642, 1642, 1653, 1682, 1674, 1682, 1678, 1628, 1629,
	1630, 1665, 1666, 1667, 1668, 0, 2469, 2417, 569, 0,
	0, 1368, 197, 199, 200, 201, 202, 203, 369, 0,
	376, 377, 378, 0, 458, 0, 180, 181, 0, 182,
	2513, 463, 0, 466, 0, 182, 2513, 2052, 472, 0,
	475, 0, 0, 481, 0, 0, 0, 0, 0, 182,
	1370, 0, 0, 0, 0, -2, 631, 636, 637, 0,
	1295, 0, 1302, 658, 659, 660, 1304, 1305, 0, 1307,
	634, 661, 662, 663, 664, 665, 666, 0, 2066, 2067,
	2068, 2069, 2072, 2073, 0, 0, 632, 651, 639, 0,
	645, 105, 1245, 0, 144, 0, 1245, 1245, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	129, 140, 117, 118, 0, 0, 0, 0, 0, 78,
	1106, 0, 1109, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 0, 0, 0, 92, 93, 128,
	0, 0, 1333, 0, 123, 107, 0, 0, 0, 130,
	142, 0, 173, 175, 0, 0, 0, 0, 0, 0,
	192, 204, 0, 0, 0, 0, 1130, 0, 1427, 0,
	0, 2513, 0, 1542, 2289, -2, -2, 1542, 906, 0,
	0, 2127, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 347, 349, 350, 351, 0, 1168, 0, 357,
	399, 1055, 2513, 0, 0, 426, 421, 0, 423, 0,
	0, 1105, 2513, 1103, 2097, 0, 1127, 0, 1084, 2513,
	2095, 0, 0, 1176, 2136, 1185, 1189, 1323, 0, 430,
	0, 1339, 1341, 0, 0, 1563, 0, 1565, 1505, 1430,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 255, 0, 1541, 0, 1542, 249, 292, 292, 1542,
	608, 1542, 610, 0, 0, 757, 758, 0, 292, 292,
	292, 764, 765, 767, 768, -2, -2, -2, 884, 770,
	771, 851, 0, 0, 0, 850, 783, 787, 0, 900,
	2403, 2417, 2469, 913, 851, 2210, 851, 2210, 851, 2210,
	798, 800, 803, 839, 847, 811, 816, 0, 0, 821,
	829, -2, 0, 831, 0, 833, 0, 835, 851, 852,
	855, 860, 863, 868, 0, 0, 0, 0, 0, 0,
	0, 894, 895, 0, 1123, 0, 1285, 1460, 1386, 589,
	1377, 1459, 1378, 1385, 1388, 0, 0, 1390, 0, 1392,
	0, 1455, 1456, 1463, 1464, 0, 1474, 1475, 1467, 0,
	-2, 0, 0, 1470, 1471, 1396, 0, 1413, 1414, 1415,
	1444, 1447, 1204, 0, 2646, 1704, 1578, 1705, 1706, 2081,
	0, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, -2, -2, -2, -2, -2, -2, -2, -2, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	-2, -2, -2, 1745, 1746, -2, 1980, 1982, 0, 2045,
	0, -2, 0, -2, -2, -2, -2, 1765, 0, 1767,
	1772, 1774, 1776, 0, 0, 0, 0, 2044, 1786, 2028,
	2029, 0, 0, 1959, 1960, 1961, 1771, 0, 1790, 2043,
	2040, 0, 0, 1992, 1443, 1849, 0, 0, 0, 0,
	1856, 1841, 1990, 0, 1989, 0, 0, 0, 2000, 0,
	2035, 2031, 0, 2079, 1699, 1686, 1687, 1688, 1689, 1690,
	1691, 1701, 0, 2076, 2113, 2119, 1933, 0, 0, 0,
	1886, 1887, 1888, 1889, 1890, 0, 1892, 1893, 0, 1895,
	1896, 0, 1898, 1899, 0, 1901, 1902, 1903, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 1600,
	0, 0, 0, 1604, 0, 0, 0, 1608, 0, 0,
	0, 1612, 0, 0, 0, 1616, 0, 0, 0, 1620,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 1905,
	0, 2003, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1907, 0, 1909, 1994, 2014, 0, 0, 1791, 0,
	0, 0, 1957, 0, 1912, 1994, 2022, 0, 0, 0,
	0, 0, 1994, 0, 2027, 0, 1919, 0, 1921, 1422,
	0, 0, 1573, 0, 0, 0, 2049, 1573, 1573, 0,
	1486, 0, 0, 1549, 1550, 1551, 1552, 0, 0, 1553,
	0, 1543, 1547, 1544, 1545, 1539, 1502, 0, 0, 2083,
	1539, 1508, 1538, 0, 1084, 1528, 1539, 1539, 0, -2,
	1512, 1529, 0, 0, 534, 536, 538, 542, 544, 0,
	0, 1443, -2, 0, -2, 1083, 0, 0, 0, 0,
	553, 555, 0, 0, 478, 0, 0, 547, 0, 550,
	0, 1574, 1577, 0, 0, 1588, 1594, 1595, 0, -2,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 488, 182, 460, 0, 182, 182, 469, 0,
	0, 182, 480, 182, 2104, 182, 2102, 281, 485, 1369,
	215, 0, 624, 0, 1294, 1303, 0, 655, 0, 657,
	0, 2070, 2074, 2071, 2075, 0, 646, 0, 0, 0,
	0, 1244, 0, 1211, 0, 0, 0, 0, 0, 148,
	2513, 0, 184, 0, 0, 1048, 2089, 0, 1040, 0,
	0, 2229, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 1108, 1110,
	1117, 1119, 0, 1113, 2077, 0, 0, 1114, 0, 1116,
	1118, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 1333, 0, 0, 0, 116, 120,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 1162, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 0,
	0, -2, 0, 0, 0, 0, 225, 0, 283, 2055,
	2065, 0, 931, 932, 313, 316, 319, 322, 221, 0,
	353, 0, 0, 979, 954, 0, 0, 408, 292, 0,
	0, 422, 2106, 939, 1101, 1104, 0, 1084, 2513, 1141,
	0, 0, 0, 0, 0, 0, 1174, 0, 2513, 2084,
	2135, 2136, 1325, 1333, 0, 1573, 0, 1355, 1342, 0,
	0, 0, 1355, 1359, 1360, 1362, 1363, 0, 0, 1564,
	1570, 496, 546, 1430, 1430, 292, 290, 2349, 288, 285,
	287, 0, 0, 0, 980, 982, 983, 984, 184, 0,
	2136, 1040, 2278, 2136, 0, 1345, 1347, 0, 245, 0,
	252, 250, 255, 0, 0, 420, 607, 612, 752, 0,
	292, 760, 761, 762, 805, 841, 849, 772, 774, 775,
	776, 0, 0, 914, 910, 911, 912, 789, 851, 792,
	851, 795, 851, 814, 818, 823, 830, 0, 0, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 888, 889,
	890, 892, 896, 899, 1561, 1381, 1382, 1384, 0, 1393,
	0, 0, 1469, -2, -2, 1468, 1472, 1473, -2, -2,
	-2, -2, 1389, 0, 1398, 1395, 0, 1454, 1202, 1203,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1787,
	0, -2, 1766, 1769, 1773, 1775, 1777, 0, 0, 0,
	0, 0, 0, 1983, 0, 1985, 1788, 2038, 2041, 1955,
	0, 0, 1442, 1443, 1443, 0, 1855, 0, 1991, 0,
	1998, 1999, 0, 1848, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	1891, 1894, 1897, 1900, 0, 0, 0, 0, 1880, 0,
	0, 0, 1884, 1654, 1640, 0, 1682, 1680, 1681, 1675,
	1682, 1679, 1632, 0, 1597, 1598, 1599, 1601, 1602, 1603,
	1605, 1606, 1607, 1609, 1610, 1611, 1613, 1614, 1615, 1617,
	1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1631, 0,
	1904, 0, 1906, 1908, 0, 0, 1910, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1795, 1796, 1911, 2020, 2021, 0, 0, 0, 0,
	0, 0, 1917, 0, 2026, 1918, 1920, 1430, 0, 1423,
	0, 1488, 1477, 1572, 0, 2047, 1542, 1490, 1492, 2048,
	2086, 1477, 1477, 0, 1995, 0, 0, 1533, 0, 0,
	0, 1535, 1506, 0, 0, 1500, 0, 1496, 1497, 1498,
	1499, 1507, 1084, 1537, 1509, 1513, 2113, 0, 1539, 0,
	1524, 0, 1526, 1559, 0, 1518, 1521, 0, 0, 2128,
	1573, 0, 324, 328, 329, 325, 326, 327, 562, 0,
	0, 0, 0, 1997, 0, 1579, 0, 1585, 0, 0,
	0, 0, 568, 0, 0, 0, 198, 1367, 375, 459,
	182, 464, 467, 2053, 182, 473, 476, 482, 211, 0,
	620, -2, 653, 654, 656, 0, 652, 145, 1245, 0,
	0, 1207, 1209, 2100, 1213, 0, 0, 0, 0, 0,
	0, 150, 2513, 159, 0, 1020, 0, 2087, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 2513, 182, 2513,
	182, 162, 164, 167, 0, 172, 169, 170, 0, 0,
	1011, 106, 1245, 0, 109, 113, 121, 0, 0, 0,
	127, 0, 0, 0, 1230, 1236, 0, 0, 1111, 1112,
	1115, 1121, 79, 0, 0, 1234, 1240, 89, 90, 2098,
	91, 0, 1206, 0, 0, 0, 174, 111, 115, 122,
	0, 1242, 108, 0, 196, 0, 0, 0, 188, 0,
	189, 190, 205, 0, 182, 2513, 0, 942, 943, 1163,
	1125, 1126, 0, 1131, 0, 0, 0, 1542, 217, 0,
	1542, 225, 0, 2061, 0, 341, 0, 0, 0, 0,
	978, 1066, 0, 949, 0, 0, 0, 414, 410, 0,
	419, 425, 424, -2, 0, 0, 0, 0, -2, 0,
	0, 1178, 1172, 1173, 0, 0, 0, 2513, 1327, 1333,
	0, 1428, 1443, 429, 1334, 1355, 0, 0, 0, 1344,
	1340, 1337, 1573, 0, 0, 0, 0, 0, 1566, 1569,
	499, 500, 267, 0, 0, 0, 0, 0, 292, 0,
	0, 0, 985, 989, 0, 2136, 2136, 0, 2091, 0,
	0, 0, 0, 253, 0, 256, 0, 0, 0, 261,
	262, 263, 264, 265, 246, 1542, 0, 609, 0, 0,
	759, 0, 782, 791, 793, 796, 832, 834, 851, 877,
	878, 1006, 0, 1006, 0, 0, 893, 1391, 0, 1466,
	1397, 1448, 1449, 0, 1204, 0, 1707, 1750, 0, 0,
	-2, 0, 0, 1754, 0, 0, 0, -2, 0, 0,
	0, 1984, 1986, 0, 2040, 1850, 0, 0, 0, 1854,
	1838, 1839, 0, 1958, 2001, 2030, 2034, 0, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 0, 2080, 2114, 2118, 1931,
	1932, 1936, 2094, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 1677, 0, 0, 2002,
	2013, 2015, 1792, 1793, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, -2, -2, -2, 1810, 1811, 1812,
	-2, -2, -2, 0, 0, 0, 2016, 2018, 2019, 2023,
	2024, 0, 1914, 1915, 1916, 2025, 0, 1430, 1424, 1485,
	0, 1571, 1489, 0, 1485, 1485, 1437, 1531, 0, 0,
	1555, 0, 1503, 0, 1504, 0, 1536, 0, 1511, 1514,
	1515, 1525, 0, 1517, 0, 1520, 0, 1850, -2, 293,
	294, 296, 0, 299, 565, 566, 564, 548, 0, 0,
	1581, 0, 0, 1657, 1661, 1685, 571, 572, 570, 461,
	470, 213, 0, 1540, 0, 0, 0, 0, 2166, 1222,
	1223, 0, 2530, 1226, 0, 0, 0, 0, 183, 1018,
	1047, 0, 0, 0, 1039, 0, 0, 1053, 152, 0,
	0, 0, 160, 0, 0, 157, 0, 166, 171, 0,
	0, 0, 0, 1212, 0, 0, 124, 125, 126, 0,
	131, 0, 132, 0, 0, 0, 0, 0, 0, 1318,
	1319, 1313, 0, 0, 0, 185, 0, 0, 0, 1201,
	0, 0, 207, 0, 0, 0, 1166, 1167, 1231, 1237,
	0, 0, 225, 223, 0, 226, 0, 229, 230, 0,
	225, 219, 0, 0, 1084, 354, 952, 1054, 0, 1056,
	0, 950, 0, 0, 1055, 406, 0, 413, 0, 0,
	1105, 0, 0, 1128, 1139, 1084, 0, 1177, 1179, 1187,
	0, 0, 0, 1329, 1333, 0, 1322, 1323, 1462, 1335,
	1353, -2, 0, 0, 1443, 1361, 1358, 1364, 1365, 0,
	289, 0, 284, 286, 0, 270, 0, 0, 981, 986,
	0, 0, 0, 0, 0, 1346, 1348, 0, 0, 0,
	0, 0, 0, 255, 276, 0, 753, 777, 842, 879,
	1005, 0, 0, 881, 0, 0, 1465, 1452, 1453, 1450,
	1204, 1752, 1756, 0, 0, 0, 1758, -2, 0, 1780,
	-2, -2, 1987, 2039, 1829, 1443, 1851, 1853, 1840, 2033,
	1702, 0, 1938, 1935, 0, 1922, 0, 1875, 1876, 0,
	0, 1879, 1881, 1882, 1883, 1641, 1634, 1633, 2012, 0,
	0, 0, 0, 1913, 1425, 0, 1927, 0, 0, 1493,
	1927, 1927, 1532, 0, 1534, 1501, 1494, 0, 2114, 1527,
	1519, 0, 0, 297, 0, 1575, 1580, 0, 1586, 1656,
	214, 146, 147, 1216, 1217, 1218, 1219, 0, 0, 1224,
	1225, 0, 1229, 149, 0, 1019, 0, 1022, 0, 0,
	0, 0, 1029, 1040, 0, 0, 0, 0, 0, 1041,
	0, 1070, 0, 1192, 1199, 0, -2, 0, 0, 0,
	154, 177, 0, 0, 1246, 0, 0, 182, 182, 0,
	0, 1208, 1210, 0, 0, 0, 0, 134, 0, 0,
	1232, 1238, 1235, 1241, 0, 0, 0, 1243, 194, 195,
	0, 182, 0, 187, 182, 182, 1201, 0, 0, 0,
	216, 0, 0, 0, 0, 218, 282, 225, 0, 1000,
	0, 1066, 1058, 1059, 1060, 0, 1065, 1067, 0, 0,
	966, 951, 0, 962, 0, 0, 979, 954, 0, 411,
	940, 1102, 1136, 1084, 0, 1170, 0, 0, 0, 0,
	0, 0, 1331, 1333, 0, 1324, 1325, 1355, 1461, 0,
	0, 0, 1343, 1462, 0, 291, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 257, 0, 258,
	259, 260, 247, 611, 613, 0, 0, 619, 1004, 0,
	0, 0, 0, 1451, 1760, -2, -2, 1781, 0, 2115,
	2117, 1443, 0, 1924, 1445, 0, 0, -2, 0, 0,
	0, 1426, 1409, 0, 1484, 1476, 1478, 1480, 2406, 2206,
	2512, 1410, 1411, 1554, 0, 1522, 298, 0, 1582, 0,
	1220, 1221, 0, 151, 0, 1023, 1024, 2090, 1026, 0,
	1028, 1030, 1031, 0, 1034, 2138, 0, 1038, 0, 1049,
	1071, 0, 1080, 0, 1194, 1204, 1198, 0, 1196, 1082,
	0, 153, 155, 176, 1201, 0, 156, 165, 0, 0,
	110, 0, 0, 2201, 137, 135, 133, 1205, 112, 0,
	196, 206, 1200, 191, 208, 182, 0, 1233, 1239, 227,
	0, 228, 231, 0, 0, 1008, 0, 953, 1057, 0,
	1068, 1069, 956, 0, 955, 0, 0, 0, 0, 0,
	412, 415, 0, 418, 0, 0, 1180, 0, 1186, 0,
	0, 0, 1312, 0, 0, 1326, 1327, 427, 1349, 0,
	0, 1355, 1366, 269, 0, 0, 987, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 988, 1082, 0, 0,
	1046, 0, 274, 254, 0, 615, 0, 617, 0, 880,
	882, 0, 0, 1852, 1942, 0, 0, 1877, 1878, -2,
	0, 1818, 1926, 1928, 0, 0, 0, 0, 0, 1495,
	1576, 1214, 0, 1227, 0, 1021, 1025, 0, 0, 0,
	1088, 0, 0, 1042, 0, 1074, 1075, 1000, 0, 1076,
	1077, 1078, 1193, 1454, 1199, 1000, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 186, 209, 1201, 224,
	241, 0, 1137, 954, 1007, 0, 0, 964, 0, 967,
	0, 963, 960, 961, 952, 0, 416, 417, 0, 1140,
	0, 1187, 0, 0, 1315, 1311, 1333, 1328, 1329, 1573,
	1352, 1356, 0, 0, 1080, 1082, 954, 0, 614, 0,
	0, 885, 886, 0, 0, 0, 0, 1937, 1446, 1819,
	0, 0, 1479, 1481, 1482, 1483, 1215, 1228, 0, 0,
	1033, 1093, 0, 0, 0, 1072, 1073, 1008, 0, 1197,
	1195, 1051, 0, 1084, 158, 0, 1082, 0, 1012, 0,
	0, 1015, 0, 0, 138, 2201, 136, 0, 182, 244,
	0, 238, 236, 237, 956, 0, 0, 1062, 1064, 0,
	968, 1000, 966, 1138, 1082, 0, 1080, 0, 1321, 1333,
	1316, 1317, 0, 1331, 0, 292, 292, 1000, 1080, 1573,
	0, 292, 616, 618, 1934, 1954, 1943, -2, 2472, 2207,
	0, 1954, 1954, 1929, 1930, 0, 0, 1035, 1089, 1090,
	0, 1085, 1086, 1087, 2137, 1036, 1037, 1070, 0, 0,
	1088, 178, 1000, 1009, 0, 0, 1010, 0, 0, 141,
	0, 143, 210, 232, 0, 0, 948, 0, 1061, 0,
	0, 0, 0, 1008, 956, 1080, 0, 1000, 0, 1308,
	1320, 0, 1330, 1312, 0, 271, 272, 1008, 1000, 1045,
	273, 1939, 0, 0, 1945, 1946, 1947, 1948, 1949, 1940,
	1941, 1027, 0, 1091, 0, 1092, 0, 0, 0, 1573,
	1079, 0, 1093, 163, 1013, 0, 1016, 0, 139, 0,
	239, 240, 945, 947, 0, 1063, 957, 0, 959, 954,
	965, 1000, 0, 1008, 0, 1314, 2099, 1315, 1350, 0,
	954, 1008, 0, 1951, 1952, 0, 0, 0, 1094, 0,
	1097, 1098, 0, 1095, 1050, 0, 1070, 0, 0, 0,
	0, 958, 956, 1008, 1082, 954, 1080, 1321, 0, 1573,
	954, 1950, 1953, 1944, 1032, 1096, 1099, 1100, 1081, 1052,
	0, 0, 242, 0, 1003, 948, 954, 1080, 1573, 1000,
	1309, 1573, 1043, 1573, 1008, 0, 0, 999, 1001, 1002,
	946, 1573, 1000, 1183, 1008, 1351, 1044, 1014, 0, 243,
	1181, 1008, 954, 0, 954, 1573, 0, 1573, 1184, 1008,
	1182, 1017,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 561, 3, 567, 562, 3,
	572, 573, 565, 563, 577, 564, 574, 566, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 580, 3,
	553, 555, 554, 558, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 570, 3, 571, 568, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 578, 560, 579, 556,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 557, 57896, 559, 57897, 569, 57898, 575, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1281
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1308
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1387
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1443
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1447
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1624
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1632
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1667
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1721
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1750
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1760
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1769
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1780
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1786
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1812
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1817
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2159
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2163
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2166
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2206
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2221
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2343
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2370
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2596
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2720
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2729
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2735
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2740
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2750
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2755
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = nil
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2862
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3045
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3050
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3062
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "CREATE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3084
		{
			return unimplemented(sqllex, "create access method")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			return unimplemented(sqllex, "create cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3089
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3090
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3091
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3093
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3094
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplemented(sqllex, "create operator")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			return unimplemented(sqllex, "create publication")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3097
		{
			return unimplemented(sqllex, "create rule")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return unimplemented(sqllex, "create server")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3106
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3110
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3123
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3124
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3126
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "drop server")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3145
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3146
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3255
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3290
		{

			sqlVAL.union.val = nil
		}
	case 427:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return helpWith(sqllex, "DELETE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3318
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "DROP")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3634
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3642
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "DELETE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "INSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "DELETE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "INSERT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3719
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "GRANT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "RESET")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "RESET")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "USE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3978
		{
			return helpWith(sqllex, "USE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			return unimplemented(sqllex, "set from current")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4213
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.Low
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.Normal
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.High
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4390
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4394
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.str = "client_encoding"
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.str = "timezone"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4459
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4522
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4531
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4668
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4870
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = true
		}
	case 837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = false
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = true
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = false
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4987
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5008
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5013
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5077
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5085
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5122
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5145
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowRegions{
				FromDatabase: true,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ShowRegions{
				FromDatabase: true,
				DatabaseName: tree.Name(sqlDollar[5].str),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5210
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5350
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5464
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5465
		{
			return helpWith(sqllex, "RESUME")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5634
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[13].union.locality(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5650
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[16].union.locality(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{

			sqlVAL.union.val = nil
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.str = ""
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = nil
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5718
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5722
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 964:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5748
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5762
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5777
		{
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5779
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5871
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5874
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5877
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5878
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5884
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5900
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.str = ""
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6000
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6096
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6110
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = true
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = false
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6132
		{
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6232
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6270
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6285
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6350
		{
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6353
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6355
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6427
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6511
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6520
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6528
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6544
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6554
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6557
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6559
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6607
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6622
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = true
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6632
		{

			sqlVAL.union.val = true
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = false
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6647
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6661
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6673
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6685
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6695
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6705
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = nil
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6815
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6832
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6834
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6836
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6838
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6842
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6880
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6898
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6917
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6934
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6955
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = false
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = true
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = false
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = true
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = false
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7015
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7021
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.str = ""
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.str = ""
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7088
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7094
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7290
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7296
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7308
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7314
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7328
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7334
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7352
		{
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7356
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7385
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7444
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7493
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7506
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7511
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7520
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7521
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7522
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7539
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7542
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7543
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7571
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7586
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.str = ""
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{

		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.str = ""
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.str = ""
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.str = ""
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.str = ""
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7767
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7781
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7828
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7890
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7917
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8012
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8027
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8171
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8206
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8208
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8269
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8313
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8329
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = true
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = false
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = nil
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8397
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = true
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = false
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = false
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = true
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8427
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8431
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8493
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8498
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8527
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8560
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8619
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8620
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8654
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8688
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8703
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8725
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8735
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8746
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8758
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8777
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8816
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8826
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8872
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8902
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8935
		{
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8937
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = nil
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = true
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.str = tree.AstFull
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.str = tree.AstRight
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.str = tree.AstInner
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9055
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.str = tree.AstHash
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.str = ""
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9169
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = true
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = false
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = true
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = false
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9231
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9239
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9258
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9260
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9268
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9288
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9337
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9349
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9355
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9362
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9363
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9367
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9370
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9374
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9375
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9380
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = types.Geography
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9399
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9407
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9441
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = nil
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = types.Int2
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = types.Int
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = types.Float4
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = types.Float
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9500
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = types.Bool
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = types.Float
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9533
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9539
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9561
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = types.String
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = true
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = false
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = types.Date
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9610
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9618
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9632
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9649
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9666
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = true
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = false
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = false
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = types.Interval
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9690
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9774
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = nil
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9819
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9879
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10131
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10197
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10418
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10468
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10498
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10509
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10510
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10525
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10534
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10600
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10781
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10796
		{
			return unimplemented(sqllex, "treat")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.str = ""
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10958
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10971
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11068
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = tree.Any
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = tree.Some
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = tree.All
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = tree.Div
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = tree.LT
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = tree.GT
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.LE
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = tree.GE
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = tree.NE
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = tree.Like
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11429
		{
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11430
		{
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11583
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11599
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11619
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11648
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11861
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11881
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.str = ""
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
