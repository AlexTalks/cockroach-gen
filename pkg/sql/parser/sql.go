// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:65

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) forLocked() tree.ForLocked {
	return u.val.(tree.ForLocked)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) durationField() tree.DurationField {
	return u.val.(tree.DurationField)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:601
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:9862

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1075,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 68,
	182, 904,
	199, 904,
	214, 250,
	297, 250,
	306, 737,
	333, 250,
	342, 737,
	381, 737,
	405, 250,
	429, 737,
	-2, 0,
	-1, 74,
	214, 254,
	-2, 0,
	-1, 75,
	109, 1075,
	188, 1075,
	415, 1075,
	416, 1075,
	-2, 0,
	-1, 87,
	122, 1049,
	138, 1049,
	196, 1049,
	226, 1049,
	261, 1049,
	271, 1049,
	410, 1049,
	-2, 1027,
	-1, 118,
	128, 660,
	213, 660,
	300, 640,
	351, 640,
	398, 660,
	-2, 0,
	-1, 119,
	4, 1077,
	21, 1077,
	22, 1077,
	23, 1077,
	24, 1077,
	25, 1077,
	27, 1077,
	33, 1077,
	38, 1077,
	39, 1077,
	40, 1077,
	41, 1077,
	42, 1077,
	43, 1077,
	44, 1077,
	45, 1077,
	46, 1077,
	47, 1077,
	48, 1077,
	49, 1077,
	51, 1077,
	52, 1077,
	53, 1077,
	54, 1077,
	55, 1077,
	56, 1077,
	59, 1077,
	60, 1077,
	61, 1077,
	62, 1077,
	64, 1077,
	65, 1077,
	69, 1077,
	70, 1077,
	71, 1077,
	72, 1077,
	73, 1077,
	74, 1077,
	76, 1077,
	77, 1077,
	78, 1077,
	79, 1077,
	81, 1077,
	83, 1077,
	84, 1077,
	85, 1077,
	88, 1077,
	89, 1077,
	97, 1077,
	98, 1077,
	99, 1077,
	100, 1077,
	101, 1077,
	102, 1077,
	103, 1077,
	104, 1077,
	106, 1077,
	108, 1077,
	109, 1077,
	111, 1077,
	114, 1077,
	115, 1077,
	116, 1077,
	118, 1077,
	120, 1077,
	121, 1077,
	123, 1077,
	124, 1077,
	125, 1077,
	126, 1077,
	127, 1077,
	128, 1077,
	129, 1077,
	130, 1077,
	131, 1077,
	132, 1077,
	133, 1077,
	134, 1077,
	135, 1077,
	137, 1077,
	143, 1077,
	144, 1077,
	145, 1077,
	146, 1077,
	147, 1077,
	148, 1077,
	150, 1077,
	152, 1077,
	156, 1077,
	157, 1077,
	159, 1077,
	160, 1077,
	162, 1077,
	163, 1077,
	165, 1077,
	166, 1077,
	167, 1077,
	168, 1077,
	169, 1077,
	170, 1077,
	171, 1077,
	172, 1077,
	174, 1077,
	175, 1077,
	177, 1077,
	178, 1077,
	179, 1077,
	182, 1077,
	183, 1077,
	184, 1077,
	185, 1077,
	188, 1077,
	189, 1077,
	190, 1077,
	191, 1077,
	192, 1077,
	193, 1077,
	194, 1077,
	195, 1077,
	197, 1077,
	199, 1077,
	201, 1077,
	203, 1077,
	204, 1077,
	205, 1077,
	207, 1077,
	208, 1077,
	211, 1077,
	212, 1077,
	213, 1077,
	214, 1077,
	215, 1077,
	217, 1077,
	218, 1077,
	220, 1077,
	221, 1077,
	223, 1077,
	224, 1077,
	227, 1077,
	228, 1077,
	231, 1077,
	232, 1077,
	233, 1077,
	235, 1077,
	236, 1077,
	237, 1077,
	238, 1077,
	239, 1077,
	240, 1077,
	241, 1077,
	242, 1077,
	243, 1077,
	244, 1077,
	246, 1077,
	247, 1077,
	248, 1077,
	250, 1077,
	252, 1077,
	254, 1077,
	256, 1077,
	257, 1077,
	258, 1077,
	259, 1077,
	260, 1077,
	262, 1077,
	263, 1077,
	264, 1077,
	266, 1077,
	267, 1077,
	268, 1077,
	269, 1077,
	272, 1077,
	273, 1077,
	274, 1077,
	276, 1077,
	278, 1077,
	279, 1077,
	280, 1077,
	281, 1077,
	282, 1077,
	283, 1077,
	284, 1077,
	285, 1077,
	286, 1077,
	287, 1077,
	289, 1077,
	290, 1077,
	291, 1077,
	292, 1077,
	293, 1077,
	294, 1077,
	296, 1077,
	298, 1077,
	299, 1077,
	300, 1077,
	301, 1077,
	302, 1077,
	303, 1077,
	304, 1077,
	305, 1077,
	306, 1077,
	307, 1077,
	309, 1077,
	310, 1077,
	311, 1077,
	312, 1077,
	313, 1077,
	315, 1077,
	316, 1077,
	317, 1077,
	318, 1077,
	319, 1077,
	320, 1077,
	321, 1077,
	322, 1077,
	324, 1077,
	326, 1077,
	327, 1077,
	328, 1077,
	329, 1077,
	330, 1077,
	331, 1077,
	333, 1077,
	334, 1077,
	335, 1077,
	336, 1077,
	337, 1077,
	338, 1077,
	339, 1077,
	340, 1077,
	342, 1077,
	343, 1077,
	344, 1077,
	345, 1077,
	346, 1077,
	347, 1077,
	348, 1077,
	349, 1077,
	350, 1077,
	351, 1077,
	353, 1077,
	354, 1077,
	355, 1077,
	356, 1077,
	357, 1077,
	359, 1077,
	360, 1077,
	361, 1077,
	362, 1077,
	363, 1077,
	365, 1077,
	366, 1077,
	367, 1077,
	368, 1077,
	369, 1077,
	370, 1077,
	371, 1077,
	372, 1077,
	373, 1077,
	374, 1077,
	375, 1077,
	376, 1077,
	378, 1077,
	379, 1077,
	380, 1077,
	382, 1077,
	383, 1077,
	384, 1077,
	385, 1077,
	386, 1077,
	387, 1077,
	388, 1077,
	390, 1077,
	391, 1077,
	392, 1077,
	393, 1077,
	394, 1077,
	396, 1077,
	398, 1077,
	399, 1077,
	400, 1077,
	401, 1077,
	402, 1077,
	404, 1077,
	405, 1077,
	406, 1077,
	408, 1077,
	409, 1077,
	412, 1077,
	413, 1077,
	414, 1077,
	415, 1077,
	416, 1077,
	417, 1077,
	419, 1077,
	421, 1077,
	422, 1077,
	423, 1077,
	424, 1077,
	425, 1077,
	426, 1077,
	427, 1077,
	429, 1077,
	430, 1077,
	431, 1077,
	436, 1077,
	437, 1077,
	438, 1077,
	439, 1077,
	440, 1077,
	441, 1077,
	-2, 0,
	-1, 120,
	1, 957,
	203, 957,
	296, 957,
	304, 957,
	444, 957,
	467, 957,
	-2, 0,
	-1, 122,
	1, 957,
	467, 957,
	-2, 0,
	-1, 123,
	1, 957,
	467, 957,
	-2, 0,
	-1, 124,
	1, 961,
	467, 961,
	-2, 0,
	-1, 149,
	122, 1048,
	138, 1048,
	196, 1048,
	226, 1048,
	261, 1048,
	271, 1048,
	410, 1048,
	-2, 1036,
	-1, 182,
	4, 1084,
	5, 1084,
	6, 1084,
	7, 1084,
	8, 1084,
	9, 1084,
	10, 1084,
	21, 1084,
	22, 1084,
	23, 1084,
	24, 1084,
	25, 1084,
	27, 1084,
	33, 1084,
	34, 1084,
	38, 1084,
	39, 1084,
	40, 1084,
	41, 1084,
	42, 1084,
	43, 1084,
	44, 1084,
	45, 1084,
	46, 1084,
	47, 1084,
	48, 1084,
	49, 1084,
	51, 1084,
	52, 1084,
	53, 1084,
	54, 1084,
	55, 1084,
	56, 1084,
	57, 1084,
	58, 1084,
	59, 1084,
	60, 1084,
	61, 1084,
	62, 1084,
	64, 1084,
	65, 1084,
	67, 1084,
	69, 1084,
	70, 1084,
	71, 1084,
	72, 1084,
	73, 1084,
	74, 1084,
	76, 1084,
	77, 1084,
	78, 1084,
	79, 1084,
	81, 1084,
	83, 1084,
	84, 1084,
	85, 1084,
	87, 1084,
	88, 1084,
	89, 1084,
	90, 1084,
	91, 1084,
	92, 1084,
	93, 1084,
	94, 1084,
	95, 1084,
	96, 1084,
	97, 1084,
	98, 1084,
	99, 1084,
	100, 1084,
	101, 1084,
	102, 1084,
	103, 1084,
	104, 1084,
	105, 1084,
	106, 1084,
	108, 1084,
	109, 1084,
	111, 1084,
	114, 1084,
	115, 1084,
	116, 1084,
	118, 1084,
	120, 1084,
	121, 1084,
	123, 1084,
	124, 1084,
	125, 1084,
	126, 1084,
	127, 1084,
	128, 1084,
	129, 1084,
	130, 1084,
	131, 1084,
	132, 1084,
	133, 1084,
	134, 1084,
	135, 1084,
	136, 1084,
	137, 1084,
	143, 1084,
	144, 1084,
	145, 1084,
	146, 1084,
	147, 1084,
	148, 1084,
	150, 1084,
	152, 1084,
	155, 1084,
	156, 1084,
	157, 1084,
	159, 1084,
	160, 1084,
	162, 1084,
	163, 1084,
	165, 1084,
	166, 1084,
	167, 1084,
	168, 1084,
	169, 1084,
	170, 1084,
	171, 1084,
	172, 1084,
	173, 1084,
	174, 1084,
	175, 1084,
	177, 1084,
	178, 1084,
	179, 1084,
	182, 1084,
	183, 1084,
	184, 1084,
	185, 1084,
	187, 1084,
	188, 1084,
	189, 1084,
	190, 1084,
	191, 1084,
	192, 1084,
	193, 1084,
	194, 1084,
	195, 1084,
	197, 1084,
	199, 1084,
	200, 1084,
	201, 1084,
	202, 1084,
	203, 1084,
	204, 1084,
	205, 1084,
	206, 1084,
	207, 1084,
	208, 1084,
	211, 1084,
	212, 1084,
	213, 1084,
	214, 1084,
	215, 1084,
	217, 1084,
	218, 1084,
	220, 1084,
	221, 1084,
	222, 1084,
	223, 1084,
	224, 1084,
	225, 1084,
	227, 1084,
	228, 1084,
	231, 1084,
	232, 1084,
	233, 1084,
	235, 1084,
	236, 1084,
	237, 1084,
	238, 1084,
	239, 1084,
	240, 1084,
	241, 1084,
	242, 1084,
	243, 1084,
	244, 1084,
	245, 1084,
	246, 1084,
	247, 1084,
	248, 1084,
	249, 1084,
	250, 1084,
	251, 1084,
	252, 1084,
	253, 1084,
	254, 1084,
	255, 1084,
	256, 1084,
	257, 1084,
	258, 1084,
	259, 1084,
	260, 1084,
	262, 1084,
	263, 1084,
	264, 1084,
	267, 1084,
	268, 1084,
	269, 1084,
	272, 1084,
	273, 1084,
	274, 1084,
	275, 1084,
	276, 1084,
	277, 1084,
	278, 1084,
	279, 1084,
	280, 1084,
	281, 1084,
	282, 1084,
	283, 1084,
	284, 1084,
	285, 1084,
	286, 1084,
	287, 1084,
	289, 1084,
	290, 1084,
	291, 1084,
	292, 1084,
	293, 1084,
	294, 1084,
	296, 1084,
	298, 1084,
	299, 1084,
	300, 1084,
	301, 1084,
	302, 1084,
	303, 1084,
	304, 1084,
	305, 1084,
	306, 1084,
	307, 1084,
	309, 1084,
	310, 1084,
	311, 1084,
	312, 1084,
	313, 1084,
	315, 1084,
	316, 1084,
	317, 1084,
	318, 1084,
	319, 1084,
	320, 1084,
	321, 1084,
	322, 1084,
	324, 1084,
	325, 1084,
	326, 1084,
	327, 1084,
	328, 1084,
	329, 1084,
	330, 1084,
	331, 1084,
	333, 1084,
	334, 1084,
	335, 1084,
	336, 1084,
	337, 1084,
	338, 1084,
	339, 1084,
	340, 1084,
	342, 1084,
	343, 1084,
	344, 1084,
	345, 1084,
	346, 1084,
	347, 1084,
	348, 1084,
	349, 1084,
	350, 1084,
	351, 1084,
	352, 1084,
	353, 1084,
	354, 1084,
	355, 1084,
	356, 1084,
	357, 1084,
	358, 1084,
	359, 1084,
	360, 1084,
	361, 1084,
	362, 1084,
	363, 1084,
	365, 1084,
	366, 1084,
	367, 1084,
	368, 1084,
	369, 1084,
	370, 1084,
	371, 1084,
	372, 1084,
	373, 1084,
	374, 1084,
	375, 1084,
	376, 1084,
	378, 1084,
	379, 1084,
	380, 1084,
	382, 1084,
	383, 1084,
	384, 1084,
	385, 1084,
	386, 1084,
	387, 1084,
	388, 1084,
	390, 1084,
	391, 1084,
	392, 1084,
	393, 1084,
	394, 1084,
	396, 1084,
	398, 1084,
	399, 1084,
	400, 1084,
	401, 1084,
	402, 1084,
	403, 1084,
	404, 1084,
	405, 1084,
	406, 1084,
	408, 1084,
	409, 1084,
	411, 1084,
	412, 1084,
	413, 1084,
	414, 1084,
	415, 1084,
	416, 1084,
	417, 1084,
	418, 1084,
	419, 1084,
	421, 1084,
	422, 1084,
	423, 1084,
	424, 1084,
	425, 1084,
	426, 1084,
	427, 1084,
	429, 1084,
	430, 1084,
	431, 1084,
	436, 1084,
	437, 1084,
	438, 1084,
	439, 1084,
	440, 1084,
	441, 1084,
	442, 1084,
	448, 1084,
	455, 1084,
	456, 1084,
	457, 1084,
	464, 1084,
	468, 1084,
	-2, 0,
	-1, 561,
	154, 1765,
	395, 1765,
	447, 1765,
	466, 1765,
	-2, 0,
	-1, 562,
	154, 1844,
	395, 1844,
	447, 1844,
	466, 1844,
	-2, 0,
	-1, 563,
	154, 1754,
	395, 1754,
	447, 1754,
	466, 1754,
	-2, 0,
	-1, 565,
	154, 1937,
	395, 1937,
	447, 1937,
	466, 1937,
	-2, 0,
	-1, 567,
	154, 1967,
	395, 1967,
	447, 1967,
	466, 1967,
	-2, 0,
	-1, 574,
	154, 1855,
	395, 1855,
	447, 1855,
	466, 1855,
	-2, 507,
	-1, 591,
	466, 1712,
	469, 1712,
	-2, 711,
	-1, 592,
	466, 1714,
	469, 1714,
	-2, 712,
	-1, 593,
	466, 1713,
	469, 1713,
	-2, 713,
	-1, 594,
	469, 1659,
	-2, 714,
	-1, 637,
	429, 886,
	-2, 738,
	-1, 743,
	300, 641,
	351, 641,
	-2, 0,
	-1, 744,
	300, 640,
	351, 640,
	-2, 588,
	-1, 748,
	1, 670,
	463, 670,
	465, 670,
	467, 670,
	-2, 0,
	-1, 749,
	1, 710,
	151, 710,
	463, 710,
	465, 710,
	467, 710,
	-2, 0,
	-1, 757,
	1, 644,
	463, 644,
	465, 644,
	467, 644,
	-2, 0,
	-1, 760,
	1, 670,
	463, 670,
	465, 670,
	467, 670,
	-2, 0,
	-1, 761,
	1, 672,
	463, 672,
	465, 672,
	467, 672,
	-2, 0,
	-1, 762,
	1, 675,
	463, 675,
	465, 675,
	467, 675,
	-2, 0,
	-1, 766,
	1, 689,
	463, 689,
	465, 689,
	467, 689,
	-2, 0,
	-1, 767,
	1, 691,
	463, 691,
	465, 691,
	467, 691,
	-2, 0,
	-1, 811,
	138, 1086,
	226, 1086,
	261, 1086,
	-2, 1036,
	-1, 827,
	138, 1085,
	226, 1085,
	261, 1085,
	-2, 1036,
	-1, 851,
	466, 1711,
	-2, 515,
	-1, 880,
	464, 1703,
	-2, 1694,
	-1, 886,
	5, 1225,
	-2, 1745,
	-1, 887,
	5, 1226,
	-2, 1749,
	-1, 888,
	5, 1227,
	-2, 1748,
	-1, 889,
	5, 1228,
	-2, 1964,
	-1, 890,
	5, 1229,
	-2, 1857,
	-1, 891,
	5, 1230,
	-2, 1929,
	-1, 892,
	5, 1231,
	-2, 1931,
	-1, 893,
	5, 1232,
	-2, 1944,
	-1, 894,
	5, 1233,
	-2, 1932,
	-1, 895,
	5, 1234,
	-2, 1933,
	-1, 896,
	5, 1235,
	-2, 1744,
	-1, 897,
	5, 1236,
	-2, 1980,
	-1, 898,
	5, 1237,
	-2, 1818,
	-1, 899,
	5, 1238,
	-2, 1867,
	-1, 900,
	5, 1239,
	-2, 1869,
	-1, 901,
	5, 1240,
	-2, 1822,
	-1, 902,
	5, 1241,
	464, 1721,
	-2, 1712,
	-1, 903,
	5, 1297,
	464, 1297,
	-2, 2015,
	-1, 908,
	464, 1722,
	-2, 1713,
	-1, 910,
	5, 1245,
	-2, 2013,
	-1, 911,
	5, 1246,
	-2, 2014,
	-1, 912,
	5, 1247,
	-2, 1821,
	-1, 913,
	5, 1248,
	-2, 2026,
	-1, 914,
	5, 1249,
	-2, 1823,
	-1, 915,
	5, 1250,
	-2, 1824,
	-1, 916,
	5, 1251,
	-2, 1825,
	-1, 917,
	5, 1252,
	-2, 1995,
	-1, 918,
	5, 1253,
	-2, 2024,
	-1, 919,
	5, 1254,
	-2, 1801,
	-1, 920,
	5, 1255,
	-2, 1802,
	-1, 921,
	5, 1269,
	-2, 2007,
	-1, 923,
	5, 1244,
	-2, 2003,
	-1, 924,
	5, 1244,
	-2, 2002,
	-1, 925,
	5, 1244,
	-2, 2019,
	-1, 926,
	5, 1261,
	-2, 1997,
	-1, 927,
	5, 1262,
	-2, 1746,
	-1, 928,
	5, 1272,
	-2, 1996,
	-1, 929,
	5, 1274,
	-2, 2035,
	-1, 931,
	5, 1285,
	-2, 1775,
	-1, 932,
	5, 1296,
	-2, 2028,
	-1, 933,
	5, 1288,
	-2, 2029,
	-1, 934,
	5, 1296,
	-2, 2030,
	-1, 935,
	5, 1292,
	-2, 2031,
	-1, 936,
	5, 1211,
	-2, 1831,
	-1, 937,
	5, 1212,
	-2, 1832,
	-1, 938,
	466, 1709,
	-2, 1693,
	-1, 939,
	464, 2056,
	-2, 1710,
	-1, 959,
	5, 1280,
	-2, 1955,
	-1, 977,
	5, 1279,
	-2, 2036,
	-1, 987,
	5, 1281,
	430, 1281,
	-2, 1998,
	-1, 988,
	5, 1282,
	430, 1282,
	-2, 1999,
	-1, 1025,
	464, 1721,
	-2, 1712,
	-1, 1053,
	154, 1967,
	395, 1967,
	447, 1967,
	466, 1967,
	-2, 0,
	-1, 1056,
	1, 493,
	467, 493,
	-2, 969,
	-1, 1176,
	315, 1690,
	457, 1690,
	-2, 1689,
	-1, 1199,
	468, 1690,
	-2, 1691,
	-1, 1234,
	306, 737,
	429, 737,
	-2, 249,
	-1, 1254,
	285, 1073,
	-2, 877,
	-1, 1263,
	265, 1716,
	-2, 0,
	-1, 1329,
	1, 368,
	463, 368,
	465, 368,
	467, 368,
	-2, 1047,
	-1, 1332,
	4, 2034,
	11, 2034,
	12, 2034,
	14, 2034,
	15, 2034,
	16, 2034,
	17, 2034,
	18, 2034,
	19, 2034,
	21, 2034,
	22, 2034,
	23, 2034,
	24, 2034,
	25, 2034,
	27, 2034,
	30, 2034,
	31, 2034,
	33, 2034,
	35, 2034,
	38, 2034,
	39, 2034,
	40, 2034,
	41, 2034,
	42, 2034,
	43, 2034,
	44, 2034,
	45, 2034,
	46, 2034,
	47, 2034,
	48, 2034,
	49, 2034,
	51, 2034,
	52, 2034,
	53, 2034,
	54, 2034,
	55, 2034,
	56, 2034,
	59, 2034,
	60, 2034,
	61, 2034,
	62, 2034,
	64, 2034,
	65, 2034,
	66, 2034,
	69, 2034,
	70, 2034,
	71, 2034,
	72, 2034,
	73, 2034,
	74, 2034,
	75, 2034,
	76, 2034,
	77, 2034,
	78, 2034,
	79, 2034,
	81, 2034,
	82, 2034,
	83, 2034,
	84, 2034,
	85, 2034,
	87, 2034,
	88, 2034,
	89, 2034,
	97, 2034,
	98, 2034,
	99, 2034,
	100, 2034,
	101, 2034,
	102, 2034,
	103, 2034,
	104, 2034,
	106, 2034,
	108, 2034,
	109, 2034,
	111, 2034,
	114, 2034,
	115, 2034,
	116, 2034,
	118, 2034,
	120, 2034,
	121, 2034,
	123, 2034,
	124, 2034,
	125, 2034,
	126, 2034,
	127, 2034,
	128, 2034,
	129, 2034,
	130, 2034,
	131, 2034,
	132, 2034,
	133, 2034,
	134, 2034,
	135, 2034,
	139, 2034,
	140, 2034,
	141, 2034,
	142, 2034,
	143, 2034,
	144, 2034,
	145, 2034,
	146, 2034,
	147, 2034,
	148, 2034,
	149, 2034,
	150, 2034,
	152, 2034,
	155, 2034,
	156, 2034,
	157, 2034,
	159, 2034,
	160, 2034,
	162, 2034,
	163, 2034,
	165, 2034,
	166, 2034,
	167, 2034,
	168, 2034,
	169, 2034,
	170, 2034,
	171, 2034,
	172, 2034,
	173, 2034,
	174, 2034,
	175, 2034,
	176, 2034,
	177, 2034,
	178, 2034,
	179, 2034,
	180, 2034,
	181, 2034,
	183, 2034,
	184, 2034,
	185, 2034,
	187, 2034,
	188, 2034,
	189, 2034,
	190, 2034,
	191, 2034,
	192, 2034,
	193, 2034,
	194, 2034,
	195, 2034,
	197, 2034,
	199, 2034,
	200, 2034,
	201, 2034,
	202, 2034,
	203, 2034,
	204, 2034,
	205, 2034,
	206, 2034,
	207, 2034,
	208, 2034,
	209, 2034,
	210, 2034,
	211, 2034,
	212, 2034,
	213, 2034,
	214, 2034,
	215, 2034,
	217, 2034,
	218, 2034,
	220, 2034,
	221, 2034,
	222, 2034,
	223, 2034,
	224, 2034,
	225, 2034,
	227, 2034,
	228, 2034,
	231, 2034,
	232, 2034,
	233, 2034,
	234, 2034,
	235, 2034,
	236, 2034,
	237, 2034,
	238, 2034,
	239, 2034,
	240, 2034,
	241, 2034,
	242, 2034,
	243, 2034,
	244, 2034,
	245, 2034,
	246, 2034,
	247, 2034,
	248, 2034,
	250, 2034,
	253, 2034,
	254, 2034,
	256, 2034,
	257, 2034,
	258, 2034,
	259, 2034,
	260, 2034,
	262, 2034,
	263, 2034,
	264, 2034,
	267, 2034,
	268, 2034,
	269, 2034,
	270, 2034,
	272, 2034,
	273, 2034,
	274, 2034,
	276, 2034,
	278, 2034,
	279, 2034,
	280, 2034,
	281, 2034,
	282, 2034,
	283, 2034,
	284, 2034,
	285, 2034,
	286, 2034,
	287, 2034,
	289, 2034,
	290, 2034,
	291, 2034,
	292, 2034,
	293, 2034,
	294, 2034,
	296, 2034,
	298, 2034,
	299, 2034,
	300, 2034,
	301, 2034,
	302, 2034,
	303, 2034,
	304, 2034,
	305, 2034,
	306, 2034,
	307, 2034,
	309, 2034,
	310, 2034,
	311, 2034,
	312, 2034,
	313, 2034,
	314, 2034,
	315, 2034,
	316, 2034,
	317, 2034,
	318, 2034,
	319, 2034,
	320, 2034,
	321, 2034,
	322, 2034,
	324, 2034,
	325, 2034,
	326, 2034,
	327, 2034,
	328, 2034,
	329, 2034,
	330, 2034,
	331, 2034,
	332, 2034,
	333, 2034,
	334, 2034,
	335, 2034,
	336, 2034,
	337, 2034,
	338, 2034,
	339, 2034,
	340, 2034,
	342, 2034,
	343, 2034,
	344, 2034,
	345, 2034,
	346, 2034,
	347, 2034,
	348, 2034,
	349, 2034,
	350, 2034,
	351, 2034,
	353, 2034,
	354, 2034,
	355, 2034,
	356, 2034,
	357, 2034,
	358, 2034,
	359, 2034,
	360, 2034,
	361, 2034,
	362, 2034,
	363, 2034,
	365, 2034,
	366, 2034,
	367, 2034,
	368, 2034,
	369, 2034,
	370, 2034,
	371, 2034,
	372, 2034,
	373, 2034,
	374, 2034,
	375, 2034,
	376, 2034,
	378, 2034,
	379, 2034,
	380, 2034,
	382, 2034,
	383, 2034,
	384, 2034,
	385, 2034,
	386, 2034,
	387, 2034,
	388, 2034,
	390, 2034,
	391, 2034,
	392, 2034,
	393, 2034,
	394, 2034,
	396, 2034,
	398, 2034,
	399, 2034,
	400, 2034,
	401, 2034,
	402, 2034,
	404, 2034,
	405, 2034,
	406, 2034,
	408, 2034,
	409, 2034,
	412, 2034,
	413, 2034,
	414, 2034,
	415, 2034,
	416, 2034,
	417, 2034,
	419, 2034,
	421, 2034,
	422, 2034,
	423, 2034,
	424, 2034,
	425, 2034,
	426, 2034,
	427, 2034,
	429, 2034,
	430, 2034,
	431, 2034,
	436, 2034,
	437, 2034,
	438, 2034,
	439, 2034,
	440, 2034,
	441, 2034,
	442, 2034,
	443, 2034,
	445, 2034,
	446, 2034,
	447, 2034,
	448, 2034,
	449, 2034,
	450, 2034,
	452, 2034,
	453, 2034,
	454, 2034,
	455, 2034,
	456, 2034,
	457, 2034,
	458, 2034,
	459, 2034,
	460, 2034,
	462, 2034,
	465, 2034,
	466, 2034,
	468, 2034,
	469, 2034,
	-2, 0,
	-1, 1337,
	154, 1937,
	395, 1937,
	447, 1937,
	466, 1937,
	-2, 0,
	-1, 1367,
	300, 641,
	351, 641,
	-2, 0,
	-1, 1391,
	1, 636,
	463, 636,
	465, 636,
	467, 636,
	-2, 0,
	-1, 1392,
	1, 661,
	463, 661,
	465, 661,
	467, 661,
	-2, 0,
	-1, 1393,
	1, 643,
	463, 643,
	465, 643,
	467, 643,
	-2, 0,
	-1, 1395,
	1, 647,
	463, 647,
	465, 647,
	467, 647,
	-2, 0,
	-1, 1420,
	1, 1987,
	463, 1987,
	465, 1987,
	466, 1987,
	467, 1987,
	-2, 687,
	-1, 1421,
	1, 1934,
	463, 1934,
	465, 1934,
	466, 1934,
	467, 1934,
	-2, 688,
	-1, 1436,
	1, 964,
	467, 964,
	-2, 969,
	-1, 1441,
	138, 1085,
	226, 1085,
	261, 1085,
	-2, 1036,
	-1, 1539,
	122, 1049,
	138, 1049,
	196, 1049,
	226, 1049,
	261, 1049,
	271, 1049,
	410, 1049,
	-2, 1453,
	-1, 1592,
	465, 1593,
	-2, 0,
	-1, 1626,
	122, 1049,
	138, 1049,
	196, 1049,
	226, 1049,
	261, 1049,
	271, 1049,
	410, 1049,
	-2, 1161,
	-1, 1685,
	464, 1284,
	-2, 1272,
	-1, 1729,
	1, 495,
	467, 495,
	-2, 969,
	-1, 1929,
	1, 638,
	463, 638,
	465, 638,
	467, 638,
	-2, 0,
	-1, 1930,
	1, 663,
	463, 663,
	465, 663,
	467, 663,
	-2, 0,
	-1, 2022,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1333,
	-1, 2023,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1334,
	-1, 2024,
	82, 0,
	209, 0,
	210, 0,
	449, 0,
	450, 0,
	-2, 1335,
	-1, 2025,
	82, 0,
	209, 0,
	210, 0,
	449, 0,
	450, 0,
	-2, 1336,
	-1, 2026,
	82, 0,
	209, 0,
	210, 0,
	449, 0,
	450, 0,
	-2, 1337,
	-1, 2027,
	82, 0,
	209, 0,
	210, 0,
	449, 0,
	450, 0,
	-2, 1338,
	-1, 2028,
	82, 0,
	209, 0,
	210, 0,
	449, 0,
	450, 0,
	-2, 1339,
	-1, 2029,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1340,
	-1, 2041,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1352,
	-1, 2042,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1353,
	-1, 2043,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1354,
	-1, 2046,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1359,
	-1, 2052,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1363,
	-1, 2054,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1371,
	-1, 2055,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1372,
	-1, 2056,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1373,
	-1, 2057,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1374,
	-1, 2153,
	5, 1241,
	154, 1604,
	464, 1721,
	-2, 1712,
	-1, 2154,
	154, 1605,
	-2, 1991,
	-1, 2155,
	154, 1606,
	-2, 1854,
	-1, 2156,
	154, 1607,
	-2, 1776,
	-1, 2157,
	154, 1608,
	-2, 1812,
	-1, 2158,
	154, 1609,
	-2, 1852,
	-1, 2159,
	154, 1610,
	-2, 1928,
	-1, 2160,
	154, 1611,
	-2, 1436,
	-1, 2229,
	1, 1162,
	2, 1162,
	87, 1162,
	122, 1162,
	138, 1162,
	151, 1162,
	155, 1162,
	161, 1162,
	164, 1162,
	187, 1162,
	196, 1162,
	206, 1162,
	222, 1162,
	226, 1162,
	245, 1162,
	261, 1162,
	265, 1162,
	271, 1162,
	323, 1162,
	325, 1162,
	410, 1162,
	420, 1162,
	433, 1162,
	434, 1162,
	435, 1162,
	444, 1162,
	463, 1162,
	465, 1162,
	467, 1162,
	469, 1162,
	-2, 1161,
	-1, 2242,
	464, 1695,
	-2, 1707,
	-1, 2264,
	464, 1283,
	-2, 1273,
	-1, 2509,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1361,
	-1, 2510,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1365,
	-1, 2516,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1367,
	-1, 2703,
	203, 969,
	296, 969,
	304, 969,
	444, 969,
	-2, 492,
	-1, 2797,
	285, 1073,
	-2, 877,
	-1, 2886,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1369,
	-1, 2893,
	200, 0,
	202, 0,
	253, 0,
	-2, 1388,
	-1, 2956,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1417,
	-1, 2957,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1418,
	-1, 2958,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1419,
	-1, 2962,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1423,
	-1, 2963,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1424,
	-1, 2964,
	14, 0,
	15, 0,
	16, 0,
	445, 0,
	446, 0,
	447, 0,
	-2, 1425,
	-1, 3008,
	464, 1696,
	-2, 1708,
	-1, 3097,
	466, 2138,
	-2, 1013,
	-1, 3148,
	200, 0,
	202, 0,
	253, 0,
	-2, 1389,
	-1, 3151,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1392,
	-1, 3152,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1394,
	-1, 3313,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1393,
	-1, 3314,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	173, 0,
	176, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1395,
	-1, 3324,
	200, 0,
	-2, 1426,
	-1, 3433,
	200, 0,
	-2, 1427,
	-1, 3550,
	43, 0,
	173, 0,
	225, 0,
	358, 0,
	442, 0,
	448, 0,
	-2, 1994,
}

const sqlPrivate = 57344

const sqlLast = 79402

var sqlAct = [...]int{

	908, 3353, 3644, 3382, 3559, 3549, 3356, 3634, 3254, 2634,
	2185, 3528, 3519, 3516, 2784, 3503, 3560, 3130, 3561, 2404,
	3389, 2924, 3548, 2635, 1026, 3342, 3437, 3278, 3302, 2009,
	837, 3089, 2720, 3084, 3394, 1454, 3209, 3028, 2069, 214,
	1062, 214, 214, 2813, 214, 214, 214, 214, 214, 3597,
	2806, 214, 3283, 2878, 1660, 1180, 2780, 1081, 2293, 593,
	1777, 2808, 1205, 3328, 3029, 2437, 828, 865, 1905, 2393,
	2376, 3071, 572, 2368, 2439, 1632, 2352, 214, 2379, 1173,
	2677, 593, 1018, 2502, 2649, 2620, 691, 1317, 2657, 3129,
	2447, 2436, 1860, 2428, 2638, 1852, 2430, 1601, 2405, 2640,
	1863, 1853, 2353, 2295, 2222, 2537, 2221, 2082, 3182, 2619,
	2006, 3438, 1321, 1547, 2002, 2120, 2979, 1786, 1661, 2100,
	3383, 1375, 1565, 1883, 2498, 86, 836, 142, 1192, 1811,
	2328, 2377, 904, 1069, 1815, 1804, 1764, 206, 1762, 2683,
	2203, 1602, 2224, 1436, 2112, 2066, 2446, 2329, 1621, 1182,
	824, 1330, 2782, 1844, 1009, 2398, 1252, 540, 1058, 1314,
	1304, 1560, 594, 2440, 1012, 2094, 2182, 208, 207, 1611,
	1189, 2211, 595, 2193, 2149, 1528, 1453, 214, 214, 991,
	1843, 4, 2083, 526, 149, 1455, 556, 548, 2285, 150,
	589, 1328, 566, 1618, 1008, 1869, 637, 666, 1202, 1776,
	1278, 864, 142, 551, 543, 37, 36, 34, 25, 23,
	21, 1435, 755, 989, 738, 1014, 2219, 1260, 32, 2993,
	1459, 2994, 2636, 2533, 1885, 1885, 598, 601, 3674, 1066,
	3665, 125, 2202, 1885, 2202, 3664, 3643, 57, 3626, 2202,
	1820, 3624, 3223, 3583, 832, 3223, 3581, 3584, 598, 601,
	2202, 58, 120, 2823, 2983, 3579, 827, 685, 2822, 2202,
	3576, 2701, 3573, 3570, 3577, 62, 3574, 1820, 2202, 3499,
	3546, 701, 2592, 2593, 1820, 3545, 832, 833, 3544, 1820,
	39, 122, 1897, 3541, 1006, 1467, 1468, 1897, 3540, 3498,
	1066, 3492, 1897, 2257, 38, 2202, 68, 3491, 3486, 3485,
	3479, 2202, 3223, 3223, 1820, 1498, 3473, 3471, 2195, 3435,
	3223, 3223, 1470, 2257, 3416, 2451, 41, 2552, 1820, 992,
	992, 42, 3419, 2553, 3413, 1897, 74, 812, 3223, 123,
	3372, 2983, 811, 3371, 1820, 40, 85, 1820, 2253, 3363,
	1469, 75, 82, 1820, 1043, 3362, 3334, 3315, 686, 3223,
	1820, 2257, 3300, 3291, 3251, 3241, 1897, 2836, 2202, 2202,
	3222, 3150, 3105, 819, 3223, 2257, 2852, 3099, 43, 2194,
	1038, 2852, 1820, 57, 689, 688, 1467, 1468, 3069, 3003,
	3001, 3242, 3070, 3004, 3002, 76, 2986, 58, 2917, 2905,
	2202, 993, 1820, 2202, 2851, 2843, 1498, 1820, 2852, 2844,
	2775, 62, 2633, 1470, 1897, 2631, 2202, 2630, 2584, 2202,
	2598, 2202, 2202, 1394, 2844, 2565, 2554, 2426, 1538, 2566,
	2202, 1901, 2425, 1475, 2270, 2256, 1901, 2343, 2202, 2257,
	2251, 1469, 68, 2244, 2202, 2201, 995, 1820, 996, 2202,
	2592, 2593, 2202, 1900, 1039, 2284, 1735, 1901, 1781, 2836,
	2374, 2501, 2348, 1884, 1497, 1499, 1819, 2282, 1597, 1201,
	3056, 2881, 74, 2861, 1619, 1814, 2592, 2593, 2401, 2824,
	2097, 2238, 85, 2237, 2536, 212, 1377, 75, 82, 2236,
	2235, 2234, 1467, 1468, 997, 994, 818, 182, 2825, 1886,
	1886, 1755, 817, 816, 815, 2608, 77, 814, 1886, 810,
	809, 808, 1498, 807, 44, 806, 805, 2478, 1490, 1470,
	804, 803, 1211, 802, 1475, 801, 800, 799, 1223, 798,
	736, 76, 735, 734, 733, 732, 731, 184, 47, 148,
	80, 214, 81, 730, 45, 729, 2098, 1469, 124, 728,
	727, 75, 726, 725, 46, 1497, 1499, 724, 723, 722,
	721, 182, 720, 719, 718, 717, 880, 716, 715, 214,
	2592, 2593, 714, 50, 713, 712, 214, 118, 2822, 711,
	710, 183, 700, 182, 2386, 699, 1039, 121, 2598, 657,
	656, 614, 214, 1084, 214, 214, 1185, 214, 1084, 214,
	613, 184, 612, 2609, 604, 603, 602, 214, 214, 1490,
	579, 1068, 578, 577, 2598, 1073, 1491, 576, 2099, 2096,
	151, 560, 204, 184, 119, 203, 202, 201, 200, 199,
	1475, 3198, 214, 2194, 2607, 198, 197, 152, 851, 196,
	195, 194, 77, 193, 192, 183, 214, 1893, 1884, 1185,
	1185, 214, 214, 191, 214, 176, 1977, 2592, 2593, 190,
	189, 1497, 1499, 177, 188, 187, 214, 183, 186, 1039,
	185, 3161, 2997, 2608, 214, 148, 80, 176, 81, 2853,
	2680, 2559, 1538, 2548, 151, 177, 1195, 3, 214, 214,
	214, 214, 214, 1185, 1185, 1222, 2358, 182, 1185, 2608,
	2245, 214, 1185, 214, 214, 1217, 151, 1491, 2598, 690,
	2228, 1622, 2140, 118, 182, 1490, 2132, 214, 2101, 2130,
	1760, 1056, 1645, 2603, 2601, 2602, 2594, 2595, 2596, 2597,
	2599, 2600, 1176, 1466, 3352, 1554, 1199, 184, 1479, 1471,
	1472, 1473, 1474, 1476, 1477, 1549, 1077, 1207, 1170, 1175,
	3566, 1024, 1075, 1185, 184, 1028, 3547, 1568, 1568, 1908,
	119, 182, 182, 1567, 1567, 3467, 2387, 3428, 1051, 1204,
	3292, 2609, 3287, 152, 598, 601, 214, 118, 3202, 1203,
	3181, 183, 2315, 3180, 1571, 1566, 835, 3168, 1261, 1261,
	214, 176, 3422, 2608, 3167, 2598, 3166, 2609, 183, 177,
	3165, 184, 184, 1347, 3420, 214, 1325, 3159, 176, 1082,
	3158, 3157, 3068, 1491, 1193, 3017, 177, 3016, 2095, 3014,
	687, 2592, 2593, 833, 1265, 142, 142, 1907, 1199, 3007,
	1471, 1472, 1473, 1474, 1476, 1477, 1210, 2400, 1215, 2976,
	1221, 2975, 2262, 1857, 2974, 183, 183, 1331, 3054, 1308,
	1311, 1467, 1468, 1396, 2901, 176, 176, 2897, 2847, 2675,
	1281, 182, 1318, 177, 177, 2592, 2593, 182, 2627, 1262,
	2618, 1498, 1216, 2591, 2588, 2587, 2585, 1550, 1470, 1548,
	1333, 1335, 2572, 2571, 151, 151, 1825, 2570, 1442, 2567,
	2564, 2609, 1404, 2602, 2594, 2595, 2596, 2597, 2599, 2600,
	2542, 184, 2541, 182, 1005, 2534, 1469, 184, 2427, 2229,
	2105, 1466, 1549, 1823, 1465, 1489, 3672, 1536, 2601, 2602,
	2594, 2595, 2596, 2597, 2599, 2600, 1343, 1441, 2385, 2259,
	3642, 3641, 3582, 1346, 1478, 1479, 1471, 1472, 1473, 1474,
	1476, 1477, 1027, 184, 1434, 183, 2926, 3536, 1756, 2330,
	3534, 183, 3464, 3461, 3458, 176, 1537, 2497, 3457, 2598,
	3456, 176, 3452, 177, 1352, 3446, 3417, 1368, 3412, 177,
	3411, 3286, 1440, 2072, 3348, 3326, 3310, 1467, 1468, 1492,
	1493, 1494, 1495, 3309, 151, 3297, 1395, 183, 1452, 1475,
	151, 1439, 3296, 3276, 3273, 3267, 3197, 176, 3179, 3119,
	3116, 214, 3045, 2598, 1470, 177, 3044, 1437, 833, 3032,
	3031, 2603, 2601, 2602, 2594, 2595, 2596, 2597, 2599, 2600,
	1497, 1499, 2989, 2695, 2892, 1608, 151, 1599, 214, 2854,
	182, 812, 1469, 2837, 2800, 2769, 811, 2746, 214, 1084,
	214, 214, 214, 214, 182, 1443, 2078, 2723, 593, 214,
	214, 2722, 2697, 593, 214, 1655, 851, 2632, 2563, 214,
	851, 1462, 1463, 1467, 1468, 1185, 2562, 1570, 1168, 2547,
	184, 1727, 2525, 1168, 1490, 2367, 1572, 1569, 1561, 1558,
	2266, 2265, 2240, 2233, 184, 2200, 1084, 2128, 2608, 1532,
	1470, 1644, 930, 1600, 1596, 1595, 1562, 1563, 1594, 1593,
	1647, 2594, 2595, 2596, 2597, 2599, 2600, 1605, 1606, 1592,
	1758, 1657, 1591, 1590, 183, 1475, 1724, 1589, 1469, 1666,
	1732, 1467, 1468, 1629, 176, 182, 1588, 1586, 183, 1585,
	1653, 1726, 177, 1584, 1583, 1582, 1581, 1909, 176, 2672,
	2723, 1580, 863, 992, 1579, 1751, 177, 1578, 1470, 833,
	1577, 1576, 142, 151, 1496, 1575, 1574, 1551, 1533, 1531,
	1526, 1050, 1041, 1034, 3439, 184, 3337, 151, 3270, 3199,
	3154, 3013, 1491, 1630, 1651, 2139, 1469, 1755, 3000, 2131,
	1199, 2992, 2129, 2551, 2231, 3201, 2609, 3012, 1627, 1781,
	2592, 2593, 1550, 2693, 3244, 1529, 3351, 1640, 1070, 1755,
	1072, 1475, 3459, 2809, 3290, 3243, 2749, 1729, 1770, 183,
	1649, 1185, 214, 1620, 1598, 598, 601, 2995, 1084, 176,
	598, 601, 1755, 2839, 2838, 1754, 1581, 177, 1063, 3395,
	3423, 1639, 1638, 1637, 1635, 1634, 1633, 1624, 1656, 1730,
	1568, 3077, 3421, 1723, 1636, 1066, 1567, 1622, 151, 1057,
	1066, 1367, 1071, 1581, 1658, 1648, 2569, 214, 2568, 2507,
	1801, 214, 214, 1803, 1432, 2332, 1808, 2596, 2597, 2599,
	2600, 2317, 1858, 1067, 214, 3043, 1376, 1066, 1741, 1747,
	796, 1556, 2786, 214, 2785, 214, 1906, 214, 3390, 3645,
	1377, 214, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 1405, 1761, 1854, 3060, 214, 3047, 2859, 2763, 2594,
	2595, 2596, 2597, 2599, 2600, 1785, 2636, 1799, 3329, 797,
	2928, 1064, 2097, 2557, 3567, 2113, 1812, 2264, 1587, 1065,
	1564, 3578, 2778, 1851, 1238, 3575, 2818, 3024, 1356, 3513,
	3085, 1847, 3038, 2434, 2397, 1185, 3612, 1185, 214, 1185,
	3478, 2494, 214, 2705, 3233, 1185, 1226, 2260, 1185, 214,
	3613, 214, 214, 1746, 1745, 1236, 1004, 1755, 1752, 790,
	792, 1185, 1185, 1185, 1204, 214, 1535, 1866, 788, 598,
	601, 3568, 214, 831, 1203, 2271, 3669, 2064, 2098, 786,
	3381, 593, 214, 3374, 214, 652, 214, 783, 214, 1850,
	214, 2288, 3062, 3058, 1963, 1807, 3057, 2707, 1961, 3021,
	1818, 2062, 1765, 2286, 214, 777, 1766, 214, 1781, 214,
	2124, 1471, 1472, 1473, 1474, 1476, 1477, 2394, 214, 1451,
	3020, 2546, 2522, 1874, 1821, 2545, 2544, 1237, 1911, 1072,
	1063, 1834, 1888, 1835, 2543, 1890, 1778, 1925, 1892, 214,
	1063, 1742, 1895, 1403, 2297, 214, 2520, 830, 214, 2511,
	2099, 2096, 2350, 2168, 1749, 1449, 2342, 1402, 2339, 1066,
	833, 2320, 833, 1787, 653, 2252, 1774, 1281, 2694, 1871,
	1084, 1871, 1872, 1868, 2053, 1876, 1877, 1354, 1438, 1913,
	1072, 1071, 1791, 2123, 1331, 1200, 1331, 1779, 1780, 2011,
	3308, 1990, 1833, 2860, 1271, 1767, 1270, 2288, 2319, 1473,
	1474, 1476, 1477, 3477, 1168, 2748, 1975, 2058, 1769, 2286,
	1269, 1920, 1268, 1292, 1246, 1775, 2059, 1981, 2278, 1415,
	2060, 1916, 832, 1064, 2065, 1788, 1902, 2068, 1903, 1915,
	1051, 1065, 1071, 1064, 2300, 1666, 1666, 1349, 780, 3220,
	1232, 1065, 1401, 2084, 2085, 851, 1688, 2068, 598, 601,
	2101, 1168, 2517, 2243, 2308, 1084, 831, 1976, 1640, 1031,
	1477, 2084, 2110, 1771, 1450, 2518, 2076, 3217, 1024, 2523,
	1024, 1943, 2074, 1987, 3358, 1974, 3538, 1750, 2307, 1971,
	1933, 2050, 580, 1873, 3229, 826, 2007, 2008, 1652, 1928,
	1029, 3034, 1979, 2866, 2336, 1984, 3564, 2148, 214, 2152,
	2152, 2166, 1445, 2084, 1988, 1792, 2186, 2188, 1985, 3218,
	1365, 2192, 3629, 1772, 1756, 2330, 2865, 2475, 1369, 1980,
	1084, 1929, 214, 1448, 2101, 1978, 2250, 2481, 2113, 2600,
	830, 214, 1936, 1049, 1350, 847, 1756, 2330, 2911, 3245,
	1989, 907, 3649, 214, 812, 1810, 1084, 812, 812, 1998,
	2095, 1391, 1999, 2000, 1253, 2241, 3612, 833, 1973, 1756,
	2330, 829, 1772, 3602, 2109, 1809, 1793, 1794, 2061, 841,
	833, 1066, 1930, 1032, 833, 1789, 2299, 2063, 2816, 586,
	2704, 1066, 2122, 1168, 3630, 2125, 2010, 2126, 2127, 3307,
	1251, 655, 654, 1431, 2742, 1805, 2216, 2318, 3135, 1377,
	3637, 1983, 1392, 2080, 1765, 832, 3134, 1790, 1766, 2908,
	2484, 2048, 2208, 2519, 2051, 1937, 1779, 1780, 3046, 648,
	1412, 647, 2521, 3565, 1377, 708, 214, 1400, 1629, 2815,
	3227, 2499, 2500, 2107, 1185, 3659, 2815, 2230, 2101, 1234,
	992, 2760, 906, 1781, 1806, 1885, 1355, 2754, 1798, 1253,
	1772, 1783, 2207, 794, 833, 3213, 784, 793, 3453, 3214,
	2706, 1084, 588, 2047, 2161, 784, 214, 2215, 684, 2220,
	3632, 2114, 2226, 2227, 214, 2177, 785, 2190, 1970, 2198,
	2199, 2909, 2772, 2209, 784, 214, 142, 2213, 2214, 1732,
	1962, 2274, 2298, 1627, 1960, 1795, 1291, 1767, 214, 3216,
	3563, 1185, 1768, 2276, 1756, 1753, 1559, 2736, 3263, 538,
	1769, 2483, 3219, 1413, 214, 1084, 2691, 772, 1185, 3059,
	214, 214, 2288, 1231, 2287, 1765, 1021, 2382, 3035, 1766,
	2480, 2289, 2261, 533, 2302, 2277, 2340, 1772, 1570, 823,
	3496, 2254, 3131, 214, 829, 3320, 214, 3619, 3601, 3524,
	2275, 2735, 214, 3228, 3463, 1666, 2354, 1972, 3304, 1796,
	2269, 2104, 2242, 582, 3359, 1771, 214, 2513, 1525, 2561,
	1562, 1563, 1030, 2212, 214, 3650, 214, 2337, 2225, 214,
	832, 2101, 587, 2268, 3269, 214, 1414, 2067, 214, 3125,
	214, 3635, 214, 2272, 214, 214, 2049, 214, 1185, 1185,
	1185, 2351, 1185, 2322, 2075, 2371, 2323, 214, 214, 2482,
	214, 214, 773, 3631, 1935, 3215, 1351, 781, 1767, 3009,
	1044, 214, 584, 2331, 2333, 2334, 2335, 1020, 2310, 2292,
	2355, 1769, 2408, 1932, 3136, 1176, 214, 214, 214, 2321,
	1379, 214, 1927, 214, 1458, 1168, 214, 3562, 214, 3611,
	214, 1199, 2338, 2354, 1444, 2301, 2304, 2354, 2391, 2354,
	3303, 581, 1364, 1366, 1772, 3636, 3264, 3609, 605, 2448,
	3400, 214, 214, 214, 214, 214, 214, 2283, 214, 3494,
	1802, 2417, 1204, 2452, 2453, 1048, 1771, 598, 601, 2738,
	3600, 2365, 2356, 3275, 2433, 2314, 2710, 3638, 585, 2375,
	3660, 2804, 2389, 2465, 709, 2466, 214, 1842, 3495, 583,
	1886, 2421, 2422, 1607, 2740, 2450, 1042, 1037, 2410, 2454,
	525, 2455, 821, 3073, 772, 2463, 2347, 142, 2403, 2965,
	1168, 1199, 1199, 3177, 1457, 3132, 1353, 3443, 772, 1782,
	1743, 1447, 1610, 2360, 1610, 2362, 823, 2879, 2414, 2303,
	2415, 1331, 2416, 2424, 2418, 3654, 2460, 774, 3365, 2486,
	823, 2488, 2435, 3364, 2739, 3305, 2467, 2419, 2469, 3346,
	2471, 1740, 3023, 3232, 2805, 1199, 2684, 1994, 2718, 2714,
	3231, 2390, 2423, 2378, 822, 1772, 2479, 2369, 2399, 1867,
	2514, 2399, 1856, 1855, 1829, 1168, 3465, 534, 2907, 2539,
	2540, 2324, 3504, 1525, 1768, 214, 2493, 2462, 1967, 1199,
	1614, 1199, 1614, 1736, 2549, 1614, 2468, 1763, 2470, 773,
	2472, 1168, 1456, 3279, 1687, 3090, 1457, 2204, 2366, 1294,
	3388, 2492, 2491, 773, 3386, 3347, 2728, 3138, 1738, 2725,
	2724, 2496, 1617, 1921, 1617, 2489, 2505, 1617, 1986, 2991,
	535, 705, 2535, 2648, 2647, 1739, 1393, 1458, 2249, 2248,
	3354, 1612, 3448, 1612, 2247, 775, 2210, 2550, 2966, 1024,
	606, 607, 2246, 862, 1663, 2473, 2967, 1615, 1995, 1615,
	3178, 2373, 1615, 1277, 1263, 1024, 1467, 1468, 3255, 698,
	536, 830, 537, 3234, 2206, 2629, 2512, 1084, 833, 2205,
	1613, 1264, 1613, 1380, 776, 3653, 1498, 3139, 2643, 2644,
	2848, 2645, 1275, 1470, 1456, 1865, 214, 2774, 707, 3616,
	3384, 214, 2651, 3507, 214, 1768, 3230, 214, 214, 1084,
	3449, 3344, 3183, 214, 2980, 2118, 1168, 3618, 3580, 3355,
	3460, 1469, 2325, 2326, 3325, 3466, 1084, 3176, 1429, 2665,
	1427, 3064, 2621, 214, 2891, 2857, 2556, 2586, 2524, 2370,
	2349, 2316, 2267, 3345, 774, 1409, 609, 608, 214, 1959,
	1407, 1390, 1388, 1646, 1643, 1430, 1386, 1384, 774, 1344,
	1616, 1382, 1616, 2622, 1374, 1616, 214, 214, 214, 3508,
	1168, 2874, 214, 2655, 2873, 214, 3450, 826, 1372, 2477,
	2702, 1273, 214, 214, 2476, 214, 214, 214, 2679, 2674,
	2653, 2457, 2681, 2708, 1969, 2689, 610, 611, 1940, 214,
	214, 214, 2654, 2678, 1475, 1666, 2685, 2663, 214, 1725,
	2700, 1573, 2117, 2666, 2667, 2727, 2637, 2671, 2732, 2733,
	214, 1185, 2659, 214, 2711, 2712, 2624, 2625, 2626, 1348,
	2652, 1084, 1250, 703, 704, 1497, 1499, 2715, 1022, 1084,
	2726, 1666, 3558, 2730, 214, 3250, 2664, 214, 214, 3240,
	820, 214, 775, 3501, 1185, 214, 2692, 2650, 2669, 1276,
	2670, 2698, 2699, 1185, 1185, 1185, 775, 2686, 2687, 2688,
	214, 696, 697, 782, 2807, 3206, 214, 3088, 3405, 2753,
	1428, 214, 1426, 214, 2795, 1770, 2811, 2751, 1274, 1490,
	214, 776, 2719, 2642, 706, 2703, 2660, 1408, 1958, 2761,
	3598, 2709, 1406, 1389, 1387, 776, 2783, 2770, 1385, 1383,
	2919, 1770, 3041, 1381, 1185, 1185, 1373, 3039, 3022, 2803,
	2794, 2791, 214, 214, 2787, 2668, 214, 2820, 2395, 2741,
	1371, 2747, 1185, 1272, 2384, 2383, 2363, 1199, 2658, 2448,
	2756, 1899, 2682, 2757, 1812, 1898, 1896, 2758, 2448, 2759,
	1894, 1891, 1812, 2765, 1889, 1887, 1878, 1850, 2662, 214,
	1826, 1084, 214, 214, 1084, 214, 1824, 2771, 1813, 1800,
	1797, 1784, 2812, 1773, 1001, 2322, 2835, 2503, 1654, 3613,
	3530, 1460, 3299, 3294, 3293, 2449, 214, 1491, 1541, 1759,
	1228, 2288, 1546, 2764, 3407, 2288, 787, 789, 1002, 2855,
	2306, 3098, 1781, 2286, 1424, 1425, 833, 2305, 1931, 1957,
	2743, 2744, 1956, 1938, 2745, 2846, 3455, 938, 2828, 2829,
	2830, 2871, 2831, 2832, 1370, 2819, 2850, 2817, 3430, 1084,
	1687, 1687, 142, 142, 2661, 3184, 2826, 1467, 1468, 2327,
	1084, 2309, 214, 2766, 2767, 1464, 2810, 2768, 1467, 1468,
	1733, 2504, 2872, 539, 2344, 2682, 210, 2346, 528, 529,
	2894, 544, 528, 544, 554, 559, 2856, 1461, 575, 2345,
	2862, 2313, 2863, 1666, 2864, 1470, 210, 2311, 3500, 3468,
	1663, 1663, 3081, 2312, 1003, 2903, 2904, 2833, 2834, 2868,
	3072, 3006, 1469, 2402, 695, 1609, 2877, 2191, 210, 550,
	2875, 1728, 1199, 1469, 1659, 3633, 2690, 1480, 1478, 1479,
	1471, 1472, 1473, 1474, 1476, 1477, 3652, 2592, 2593, 2977,
	1538, 2899, 1467, 1468, 1666, 1666, 2280, 2279, 3470, 2121,
	1358, 3011, 2869, 1021, 2914, 1021, 1357, 2280, 2696, 2281,
	1666, 1666, 2119, 2092, 2910, 2912, 2913, 2918, 3155, 2929,
	214, 214, 1168, 2925, 1411, 3010, 2906, 1410, 1536, 2354,
	1534, 1084, 2930, 3661, 3440, 3378, 3338, 2934, 3336, 2996,
	2931, 1666, 3266, 3200, 2932, 2007, 2935, 1193, 3122, 2942,
	1082, 3115, 214, 2944, 1168, 2969, 3104, 3083, 3067, 3066,
	3065, 2007, 2945, 3037, 528, 528, 2827, 2801, 2799, 2459,
	2458, 1168, 210, 2412, 2388, 2364, 2079, 1955, 1954, 1953,
	2970, 1952, 1881, 1880, 1879, 1859, 1837, 1836, 1832, 1831,
	1830, 2982, 2973, 1828, 1827, 851, 1423, 2987, 2988, 214,
	1422, 1303, 1024, 1302, 1020, 1301, 1020, 3048, 851, 142,
	2984, 2985, 1300, 1299, 3018, 2916, 1298, 1024, 839, 1297,
	1296, 1295, 1293, 1288, 2998, 1287, 2922, 2999, 1286, 1285,
	3061, 1284, 1245, 1244, 1243, 1242, 1241, 214, 214, 1240,
	1239, 1233, 1227, 1225, 1224, 214, 1047, 1024, 1046, 976,
	885, 1734, 795, 639, 1084, 214, 779, 3357, 1417, 1185,
	73, 3053, 3055, 3015, 2978, 1235, 625, 67, 3036, 634,
	3512, 3052, 2734, 214, 3026, 1939, 1168, 1378, 1941, 3078,
	2673, 3100, 2232, 3493, 1168, 3162, 2560, 214, 214, 1185,
	1185, 1185, 3063, 214, 214, 214, 3436, 3319, 214, 214,
	2116, 1666, 214, 214, 3040, 1185, 3042, 1555, 3095, 69,
	873, 214, 1084, 958, 3092, 3262, 3079, 3261, 3207, 3091,
	1687, 3025, 2438, 3259, 3080, 3258, 840, 2322, 3094, 1087,
	3086, 2408, 1084, 1744, 1652, 879, 1757, 2263, 2151, 1667,
	882, 1664, 884, 3082, 883, 1665, 1557, 3008, 881, 1662,
	2372, 2406, 2719, 1280, 759, 1748, 2073, 2111, 2555, 3153,
	3111, 2448, 3093, 3096, 1552, 853, 875, 2108, 3102, 1040,
	1663, 3101, 852, 2656, 2814, 3005, 3285, 214, 1993, 3112,
	3113, 3107, 1850, 3106, 2495, 642, 3114, 3220, 3120, 2589,
	3117, 2093, 1033, 3121, 2174, 2167, 2163, 3149, 2396, 3118,
	1433, 1527, 2407, 1074, 1024, 856, 1168, 2071, 3141, 1168,
	1666, 1543, 3133, 2529, 3140, 3217, 1446, 3123, 3210, 2821,
	2676, 2258, 3527, 2001, 1841, 1000, 999, 998, 3518, 3515,
	2781, 1737, 3208, 2273, 1519, 2788, 869, 1198, 3212, 3128,
	214, 2641, 2849, 1247, 3454, 1518, 1084, 791, 1084, 3445,
	1061, 1060, 1059, 2717, 3658, 3033, 181, 3218, 1982, 825,
	178, 180, 179, 3050, 2773, 90, 35, 16, 117, 116,
	115, 214, 214, 214, 1168, 114, 113, 112, 3175, 111,
	110, 109, 108, 214, 107, 1168, 106, 105, 104, 3211,
	214, 103, 214, 102, 101, 214, 214, 214, 100, 99,
	98, 97, 3189, 96, 95, 94, 93, 1084, 214, 214,
	1185, 92, 91, 1084, 571, 1185, 568, 49, 1035, 3225,
	48, 214, 3192, 3188, 3236, 89, 3124, 88, 3195, 3203,
	3204, 15, 3191, 3185, 33, 3196, 214, 2678, 3205, 1084,
	13, 3190, 1185, 3186, 3187, 3226, 1045, 53, 3235, 54,
	12, 1912, 28, 575, 29, 79, 78, 3237, 3238, 27,
	14, 26, 24, 10, 3224, 8, 7, 30, 1631, 210,
	214, 210, 210, 11, 1190, 147, 210, 146, 1997, 3256,
	3284, 72, 1084, 145, 210, 1206, 3247, 71, 3248, 3252,
	144, 143, 70, 22, 9, 3257, 139, 3281, 3393, 3268,
	3076, 3271, 3280, 3213, 3295, 66, 1168, 3214, 141, 1230,
	140, 2077, 1084, 3282, 63, 3277, 138, 3289, 137, 64,
	136, 135, 65, 1249, 134, 20, 5, 3253, 210, 210,
	1541, 1190, 3298, 52, 6, 1022, 839, 1022, 3301, 3306,
	839, 1324, 2858, 210, 83, 3331, 1850, 3216, 84, 1084,
	31, 1290, 61, 60, 1024, 1024, 59, 214, 19, 214,
	3219, 1084, 214, 51, 3194, 210, 210, 210, 210, 1190,
	214, 18, 1208, 3316, 1212, 3311, 1218, 2173, 575, 171,
	210, 210, 170, 169, 3327, 214, 168, 163, 162, 167,
	3341, 3340, 165, 214, 695, 164, 166, 1666, 161, 133,
	3332, 3333, 173, 172, 1021, 175, 159, 155, 154, 158,
	160, 2169, 157, 156, 214, 153, 174, 132, 214, 3335,
	1021, 131, 3339, 56, 3377, 130, 214, 129, 3361, 1168,
	128, 1185, 127, 3392, 126, 55, 17, 214, 3360, 3387,
	2, 3265, 1, 0, 0, 0, 0, 0, 0, 0,
	3272, 1666, 0, 210, 0, 0, 0, 3379, 214, 214,
	3396, 3397, 1342, 3215, 3399, 3375, 0, 210, 3288, 1345,
	3426, 3427, 3368, 0, 3391, 3284, 2783, 3404, 3385, 3409,
	214, 0, 559, 3403, 3414, 3415, 3402, 1168, 0, 0,
	1687, 3401, 3408, 0, 0, 214, 0, 0, 1082, 3406,
	0, 0, 3367, 0, 0, 1020, 0, 1168, 0, 3369,
	3370, 3410, 0, 0, 0, 3451, 0, 0, 0, 3418,
	3442, 1020, 1199, 0, 1397, 0, 1687, 3441, 3317, 0,
	1024, 3434, 0, 0, 0, 0, 3429, 0, 0, 0,
	1663, 0, 0, 0, 1666, 0, 3425, 3462, 0, 0,
	0, 214, 1185, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 1185, 1185, 0, 3317, 0, 0, 1185, 0,
	3484, 0, 214, 0, 214, 0, 1663, 2010, 3469, 0,
	0, 0, 3472, 0, 3396, 3476, 0, 0, 0, 0,
	3480, 3497, 0, 0, 0, 0, 1199, 214, 3488, 0,
	0, 0, 3481, 214, 214, 3509, 1084, 3475, 1520, 1521,
	1522, 1523, 1524, 0, 214, 214, 0, 0, 0, 3521,
	0, 1168, 3525, 1168, 3517, 3520, 3531, 0, 3533, 0,
	3535, 0, 0, 0, 3489, 3514, 3490, 0, 1540, 0,
	3522, 0, 3543, 3542, 1553, 0, 0, 0, 0, 0,
	214, 0, 0, 3539, 3537, 0, 0, 0, 0, 0,
	0, 3569, 0, 0, 0, 3510, 0, 0, 3554, 3555,
	2526, 2527, 3557, 3529, 3482, 3483, 3556, 0, 528, 0,
	3487, 0, 1168, 0, 0, 3585, 3571, 0, 1168, 214,
	1024, 0, 3587, 0, 3589, 0, 3594, 0, 1024, 210,
	0, 210, 3595, 3586, 0, 210, 3599, 0, 3591, 214,
	0, 1024, 0, 0, 1168, 1206, 0, 1190, 210, 0,
	210, 0, 3588, 0, 3590, 210, 1206, 544, 3610, 3608,
	210, 1206, 0, 214, 3607, 214, 575, 3614, 3615, 0,
	3617, 3623, 3517, 3625, 0, 3520, 3621, 2408, 0, 3628,
	3622, 3627, 0, 0, 3605, 3606, 0, 1168, 1687, 3592,
	3593, 0, 0, 3596, 1603, 1603, 1603, 0, 0, 3640,
	0, 3639, 0, 0, 2615, 2616, 2617, 0, 3647, 0,
	0, 3646, 0, 3648, 0, 0, 0, 1168, 0, 3651,
	0, 0, 3655, 3529, 0, 3620, 0, 0, 0, 0,
	0, 0, 3656, 3657, 0, 3662, 0, 3663, 1663, 1687,
	1687, 0, 0, 0, 0, 0, 3666, 3667, 3668, 3670,
	3671, 0, 2010, 0, 1168, 1687, 1687, 0, 3675, 0,
	0, 0, 0, 3673, 0, 839, 1168, 3532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2173, 2173, 0, 0, 1687, 0, 0, 1663,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, 1663, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2169, 2169, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 0, 0,
	0, 0, 0, 0, 210, 0, 1022, 0, 210, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 1022, 0, 0, 0, 2173, 2173, 2173, 0,
	210, 0, 210, 0, 210, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1254, 1257, 1882, 0, 0, 0, 0, 1021, 0, 0,
	2169, 2169, 2169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 0, 695,
	0, 0, 1021, 1339, 0, 0, 210, 0, 1190, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 1663, 0, 210, 210,
	0, 210, 0, 210, 0, 210, 0, 210, 0, 0,
	0, 1168, 0, 0, 1359, 851, 0, 0, 1020, 0,
	0, 1964, 0, 0, 1965, 0, 1966, 0, 0, 0,
	0, 0, 0, 1020, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2887, 2888, 0, 0,
	0, 0, 0, 0, 0, 1687, 559, 0, 0, 0,
	0, 0, 575, 1020, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 0, 0, 0, 0, 0, 2946, 2947,
	2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957,
	2958, 2959, 2960, 2961, 2962, 2963, 2964, 0, 2968, 0,
	0, 0, 1992, 0, 1996, 0, 0, 0, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 0, 2052, 0, 2054, 2055, 2056, 2057, 0,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 0,
	1020, 0, 0, 0, 0, 2081, 0, 0, 2173, 2173,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	1540, 0, 0, 0, 2106, 0, 210, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 2169, 2169, 0, 0, 0, 0, 0, 0,
	0, 0, 2134, 2137, 0, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 0, 0, 0, 0, 2165, 0, 2176, 2178,
	2183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2173, 2173, 2173, 2173, 2173, 2173, 2173, 2173, 2173, 2173,
	2173, 2173, 2173, 2173, 2173, 2173, 2173, 2173, 2173, 0,
	2173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1687, 544, 2169, 2169, 2169, 2169, 2169, 2169,
	2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169,
	2169, 2169, 2169, 0, 2169, 0, 0, 0, 0, 1021,
	1021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2296, 0, 0, 0, 0, 0, 0,
	0, 210, 1663, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 210, 2357, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 210, 1022, 0, 0, 0, 0, 210,
	1020, 1020, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 1687,
	0, 2296, 0, 528, 1022, 0, 2411, 0, 0, 0,
	0, 0, 210, 0, 0, 210, 0, 210, 0, 210,
	0, 210, 210, 0, 1190, 0, 0, 0, 0, 2359,
	0, 2361, 0, 0, 2431, 695, 0, 2296, 2296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 1663,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 0, 210, 1190, 210, 0, 0, 1206, 0,
	1206, 0, 0, 1190, 0, 1190, 0, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 210,
	210, 210, 1190, 210, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1904, 0, 0, 0, 0, 0, 1816, 0, 0, 1914,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 1922, 1923, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1020, 0, 0, 0,
	0, 1022, 0, 2474, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	3324, 0, 0, 1021, 939, 0, 68, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 1021, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2509, 2510, 58, 74, 0, 0, 2516,
	0, 0, 3349, 211, 0, 0, 85, 0, 0, 62,
	0, 75, 82, 0, 0, 0, 0, 0, 2530, 2531,
	0, 0, 0, 211, 2106, 0, 0, 0, 0, 0,
	0, 0, 0, 2538, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 76, 1020, 0, 0, 2558,
	0, 0, 0, 210, 1020, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 2573, 0, 0, 1020, 210, 0,
	85, 0, 0, 528, 0, 75, 82, 0, 528, 0,
	0, 528, 0, 0, 528, 528, 0, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 210, 3433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 2183, 2183, 2183, 0, 76,
	0, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	1603, 0, 2173, 0, 0, 0, 0, 2255, 2646, 0,
	0, 1022, 1022, 2296, 2296, 210, 0, 0, 0, 2296,
	0, 0, 2721, 0, 0, 0, 77, 0, 0, 2296,
	2721, 0, 2296, 2721, 2721, 0, 2169, 0, 0, 0,
	0, 0, 0, 0, 2173, 0, 210, 210, 210, 0,
	0, 2592, 2593, 0, 2610, 2611, 2612, 0, 0, 148,
	80, 0, 81, 0, 0, 0, 0, 210, 0, 0,
	1190, 0, 0, 0, 0, 839, 0, 0, 2169, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 839, 0,
	0, 2777, 0, 690, 2779, 2296, 0, 118, 210, 0,
	77, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2737, 2607, 0, 210, 0, 0,
	0, 184, 0, 1190, 0, 210, 0, 0, 2296, 0,
	528, 0, 0, 148, 80, 0, 81, 2296, 0, 0,
	0, 0, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 2173, 0, 0, 0, 182, 0, 152, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 690, 0, 210,
	1864, 118, 0, 1864, 0, 176, 0, 0, 0, 0,
	0, 0, 2341, 177, 0, 2169, 0, 1022, 0, 2598,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 2867, 0, 0, 1190,
	210, 0, 210, 0, 0, 1016, 2614, 0, 119, 0,
	0, 1467, 1468, 0, 1500, 1501, 1502, 1510, 1511, 1512,
	0, 152, 0, 210, 0, 0, 0, 0, 0, 183,
	2613, 1498, 0, 0, 0, 0, 0, 0, 1470, 176,
	0, 0, 0, 1516, 205, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2608, 0, 1469, 0, 151, 2420,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 2927,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2876, 0, 0, 0, 2003, 0, 0,
	0, 0, 0, 2882, 2883, 0, 0, 2886, 0, 0,
	0, 2889, 0, 0, 0, 0, 0, 0, 0, 0,
	2893, 0, 0, 0, 0, 0, 0, 0, 0, 2900,
	0, 0, 2646, 0, 0, 0, 0, 1022, 0, 1492,
	1493, 1494, 1495, 0, 0, 1022, 0, 0, 0, 1475,
	0, 0, 0, 2920, 0, 0, 0, 0, 1022, 0,
	0, 0, 2609, 0, 0, 210, 210, 0, 0, 0,
	0, 0, 0, 1507, 2936, 2937, 1517, 2938, 2939, 2940,
	1497, 1499, 2941, 0, 0, 0, 2943, 528, 528, 0,
	0, 0, 0, 0, 0, 0, 211, 1089, 211, 211,
	1089, 0, 1089, 211, 0, 0, 0, 0, 0, 1484,
	1485, 211, 0, 0, 0, 0, 0, 2971, 2972, 1206,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 2981, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2990, 0, 0,
	0, 0, 0, 1089, 1089, 211, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 0,
	211, 0, 0, 0, 0, 2604, 2605, 2606, 0, 0,
	0, 0, 2603, 2601, 2602, 2594, 2595, 2596, 2597, 2599,
	2600, 0, 211, 211, 211, 211, 0, 1089, 1089, 0,
	0, 0, 1089, 3019, 3074, 210, 1089, 211, 211, 0,
	0, 0, 210, 0, 1496, 0, 0, 0, 3027, 3030,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	2296, 210, 0, 3049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2431, 2431, 0, 1089, 1508, 0,
	695, 695, 2296, 0, 0, 1864, 1864, 0, 0, 695,
	2296, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	3103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 3163, 1481, 1482, 1488, 1509, 1487,
	1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 0, 0, 0, 0, 0, 2592, 2593, 0, 2610,
	2611, 2612, 0, 0, 0, 0, 0, 0, 0, 0,
	3142, 3143, 0, 0, 0, 3146, 3147, 3148, 0, 0,
	0, 3151, 3152, 0, 0, 0, 0, 0, 3156, 0,
	0, 210, 0, 0, 0, 0, 0, 1206, 0, 210,
	0, 0, 2762, 0, 0, 0, 0, 3160, 0, 0,
	0, 0, 210, 0, 3164, 0, 0, 0, 0, 0,
	2607, 0, 0, 0, 0, 0, 0, 0, 2296, 2296,
	2296, 0, 0, 0, 0, 2792, 0, 0, 0, 0,
	1206, 0, 0, 0, 2796, 2797, 2798, 2296, 0, 2721,
	0, 0, 1206, 1206, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1079, 2296, 0,
	0, 0, 0, 0, 1197, 0, 0, 0, 0, 0,
	0, 0, 0, 3274, 2598, 2841, 2842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 3030, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 1206, 0, 0,
	0, 0, 0, 1089, 0, 211, 211, 211, 0, 0,
	0, 0, 211, 0, 0, 2613, 0, 211, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1467, 1468, 0, 1307, 1307, 1307, 1197, 0, 0, 2608,
	1089, 0, 0, 0, 0, 0, 0, 0, 1340, 1341,
	1498, 0, 0, 0, 0, 0, 0, 1470, 0, 0,
	0, 0, 3030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2296, 0, 2721, 0, 0, 3343,
	0, 0, 0, 0, 0, 1469, 0, 210, 0, 0,
	3312, 3313, 3314, 0, 1489, 0, 0, 0, 0, 0,
	0, 1486, 210, 0, 0, 0, 0, 0, 0, 0,
	575, 905, 0, 0, 0, 3322, 3323, 0, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 3330,
	0, 3343, 0, 0, 0, 2296, 0, 2609, 0, 0,
	3144, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 1206, 0, 0, 0, 1492, 1493,
	1494, 1495, 0, 0, 0, 1089, 211, 0, 1475, 3030,
	599, 0, 1089, 0, 0, 210, 210, 3366, 0, 0,
	0, 0, 0, 0, 0, 0, 3373, 0, 0, 839,
	0, 0, 599, 0, 0, 0, 3380, 2927, 0, 1497,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 3343, 0, 0, 211, 211, 0, 0, 3030,
	2592, 2593, 3030, 2610, 2611, 2612, 0, 0, 1484, 1485,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 211,
	0, 211, 3030, 3030, 0, 0, 0, 0, 0, 0,
	2604, 2605, 2606, 1490, 0, 0, 0, 2603, 2601, 2602,
	2594, 2595, 2596, 2597, 2599, 2600, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 2721, 0, 0, 0, 0,
	0, 0, 0, 0, 2607, 0, 0, 0, 0, 1206,
	0, 1206, 0, 0, 3444, 0, 1023, 3447, 0, 1089,
	0, 1089, 0, 1089, 0, 0, 0, 0, 0, 1089,
	0, 0, 1089, 211, 3505, 0, 211, 0, 0, 0,
	1206, 210, 0, 0, 0, 1089, 1089, 1089, 0, 0,
	0, 210, 2296, 1496, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 211, 0, 211, 0,
	211, 1491, 211, 0, 211, 0, 0, 0, 2598, 0,
	3108, 3109, 3110, 0, 0, 0, 0, 2927, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 1650, 0, 1197, 0,
	0, 0, 0, 0, 1467, 1468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 839, 2296, 0, 0, 2613,
	0, 0, 211, 0, 1498, 0, 0, 0, 0, 0,
	0, 1470, 0, 0, 0, 0, 3343, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 0, 0, 0,
	3553, 3553, 3553, 2608, 0, 0, 0, 0, 0, 1469,
	1206, 0, 2296, 0, 0, 0, 0, 0, 1489, 3572,
	0, 0, 0, 0, 0, 1486, 0, 0, 1487, 1483,
	0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477,
	3030, 0, 3030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3553, 0, 0, 0,
	0, 0, 0, 0, 2890, 0, 0, 0, 0, 0,
	2592, 2593, 0, 2610, 2611, 2612, 0, 0, 0, 1089,
	0, 0, 1492, 1493, 1494, 1495, 0, 0, 0, 3145,
	0, 0, 1475, 0, 0, 0, 0, 0, 0, 0,
	0, 2609, 0, 0, 0, 215, 0, 0, 1467, 1468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 1499, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 2607, 1470, 0, 0, 0, 3553,
	0, 3249, 0, 0, 1089, 0, 2592, 2593, 0, 2610,
	2611, 2612, 1484, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 1469, 592, 2896, 1846, 211, 0, 0,
	1089, 0, 1489, 0, 0, 0, 0, 1490, 0, 1486,
	0, 0, 0, 0, 0, 0, 592, 0, 1282, 0,
	1870, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2598, 0,
	2607, 0, 0, 0, 2604, 2605, 2606, 0, 2885, 0,
	0, 2603, 2601, 2602, 2594, 2595, 2596, 2597, 2599, 2600,
	0, 0, 0, 0, 0, 0, 1492, 1493, 1494, 1495,
	0, 0, 0, 0, 0, 0, 1475, 0, 0, 0,
	0, 0, 0, 209, 0, 209, 209, 1496, 1089, 2613,
	209, 0, 0, 0, 1846, 0, 0, 1918, 599, 0,
	0, 0, 0, 0, 0, 1491, 0, 1497, 1499, 0,
	0, 0, 57, 0, 2598, 1089, 0, 1934, 0, 0,
	0, 0, 0, 2608, 0, 0, 58, 1944, 211, 1946,
	0, 1948, 0, 1950, 0, 1951, 1484, 1485, 0, 211,
	62, 0, 209, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 1089, 0, 209, 0, 0,
	0, 1490, 0, 1968, 0, 2613, 0, 0, 211, 1089,
	0, 68, 1089, 0, 211, 0, 0, 0, 0, 209,
	209, 209, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 209, 209, 0, 0, 0, 2608,
	211, 74, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 75, 82, 0, 0,
	0, 2609, 1487, 1483, 909, 1480, 1478, 1479, 1471, 1472,
	1473, 1474, 1476, 1477, 0, 0, 0, 0, 0, 211,
	0, 1496, 211, 0, 211, 0, 211, 0, 211, 211,
	0, 0, 1089, 1089, 1089, 0, 1089, 0, 0, 1491,
	76, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 211, 0, 0, 0, 0, 2609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 211, 211, 211, 0,
	211, 0, 211, 0, 2604, 2605, 2606, 0, 0, 0,
	0, 2603, 2601, 2602, 2594, 2595, 2596, 2597, 2599, 2600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 1487, 1483, 0, 1480,
	1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 2239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 80, 0, 81, 0, 0,
	2604, 2605, 2606, 0, 0, 0, 0, 2603, 2601, 2602,
	2594, 2595, 2596, 2597, 2599, 2600, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 0, 0, 0, 62, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 1625, 0, 1023, 0, 0, 1085, 209,
	176, 1186, 0, 1085, 0, 0, 0, 68, 177, 0,
	0, 0, 209, 1625, 209, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 1336,
	0, 1089, 0, 0, 0, 0, 0, 74, 0, 1197,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 75, 82, 1186, 1186, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 2381, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 76, 0, 1186, 1186,
	0, 0, 0, 1186, 0, 0, 0, 1186, 0, 0,
	2413, 0, 0, 1307, 0, 1307, 0, 1307, 0, 1197,
	1197, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2456, 0, 0, 0,
	0, 0, 0, 211, 211, 211, 0, 0, 1186, 0,
	0, 2461, 211, 2464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 1089, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 2485, 1197, 2487, 1197,
	0, 2490, 0, 0, 0, 211, 0, 77, 1089, 211,
	0, 0, 0, 0, 0, 0, 0, 1089, 1089, 1089,
	0, 0, 0, 0, 211, 0, 0, 0, 209, 0,
	0, 2506, 209, 209, 0, 0, 0, 0, 0, 0,
	148, 80, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 209, 0, 209, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 1089, 1089,
	0, 0, 0, 0, 690, 0, 211, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 1089, 1086, 0, 0,
	1187, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 211, 1089, 211,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 0,
	209, 0, 0, 209, 0, 0, 0, 0, 152, 0,
	211, 0, 0, 1187, 1187, 0, 183, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 176, 0, 0, 0,
	0, 0, 599, 209, 177, 209, 0, 209, 0, 209,
	0, 209, 0, 0, 0, 0, 2592, 2593, 0, 2610,
	2611, 2612, 0, 1089, 0, 1334, 0, 1187, 1187, 0,
	0, 0, 1187, 0, 1089, 2895, 1187, 0, 0, 209,
	0, 0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502,
	1510, 1511, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 1498, 0, 0, 0, 0, 209,
	0, 1470, 0, 0, 0, 0, 1516, 0, 0, 0,
	2607, 0, 0, 0, 1085, 0, 0, 1187, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 592, 1469,
	0, 0, 0, 0, 0, 0, 0, 0, 1489, 0,
	1186, 0, 0, 0, 0, 1486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1085, 0, 0, 0, 0, 0, 0, 0, 874,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2713, 2598, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 1493, 1494, 1495, 0, 0, 0, 0,
	0, 0, 1475, 0, 2750, 2752, 2381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2613, 1507, 0, 0, 1517,
	0, 0, 0, 1497, 1499, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 1023, 1514, 2789, 0, 0, 2608,
	2793, 0, 1484, 1485, 0, 0, 0, 0, 0, 0,
	1023, 0, 0, 0, 0, 2802, 1186, 0, 1505, 0,
	0, 0, 211, 1085, 209, 0, 0, 1490, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 1089, 211,
	0, 0, 813, 1089, 0, 0, 1515, 0, 0, 0,
	0, 834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 2845, 0, 0,
	0, 0, 0, 1089, 1089, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 211, 1089, 2609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 2870, 0,
	1197, 0, 0, 0, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 2880, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 1508, 1186, 0, 1186, 209, 0, 0, 0, 1187,
	1186, 0, 0, 1186, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 1186, 1186, 209,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 592, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	2604, 2605, 2606, 0, 0, 0, 0, 2603, 2601, 2602,
	2594, 2595, 2596, 2597, 2599, 2600, 0, 209, 0, 0,
	1089, 0, 1089, 209, 0, 1506, 0, 0, 1481, 1482,
	1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472,
	1473, 1474, 1476, 1477, 0, 0, 0, 0, 3171, 0,
	0, 0, 3170, 0, 0, 0, 209, 0, 0, 209,
	0, 209, 0, 209, 0, 209, 209, 0, 0, 0,
	0, 211, 0, 0, 0, 1085, 0, 0, 0, 0,
	0, 1089, 211, 211, 1089, 0, 0, 1089, 0, 1089,
	0, 0, 209, 0, 0, 1187, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 209, 0, 209,
	0, 0, 0, 1089, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2592,
	2593, 0, 2610, 2611, 2612, 0, 0, 0, 0, 0,
	0, 0, 209, 209, 209, 209, 0, 209, 0, 209,
	0, 1467, 1468, 0, 0, 0, 1089, 1510, 1511, 1512,
	1085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 209, 1470, 0,
	0, 0, 0, 1516, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 2607, 0, 0, 0, 0, 0, 1467,
	1468, 0, 0, 3075, 0, 0, 1469, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 1498,
	3087, 0, 1486, 1089, 0, 1085, 1470, 0, 0, 1187,
	0, 1187, 0, 1187, 0, 1089, 0, 0, 0, 1187,
	0, 0, 1187, 0, 211, 0, 0, 0, 0, 0,
	0, 1085, 0, 0, 1469, 1187, 1187, 1187, 0, 211,
	0, 0, 0, 1489, 0, 0, 0, 2598, 0, 0,
	1486, 0, 0, 0, 0, 0, 3126, 0, 0, 1492,
	1493, 1494, 1495, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 87,
	211, 87, 0, 0, 0, 1089, 0, 0, 0, 2884,
	0, 0, 0, 1507, 0, 0, 1517, 0, 0, 0,
	1497, 1499, 0, 0, 0, 0, 0, 1492, 1493, 1494,
	1495, 0, 211, 211, 0, 0, 0, 1475, 0, 1186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	1485, 0, 2608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 1505, 1085, 1023, 1497, 1499,
	0, 0, 0, 0, 1490, 0, 0, 834, 87, 87,
	0, 0, 1023, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 1484, 1485, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	1085, 0, 1490, 1186, 0, 211, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 1089, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 87, 0, 1086,
	2609, 0, 0, 0, 1496, 0, 0, 0, 0, 209,
	0, 0, 3239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 2381, 0, 0, 0, 0, 211, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	209, 209, 209, 0, 0, 0, 0, 0, 1508, 1625,
	0, 0, 1496, 1186, 1186, 1186, 0, 1186, 0, 0,
	0, 209, 0, 0, 1086, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 209, 0, 1530, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	1468, 209, 1539, 2604, 2605, 2606, 1545, 0, 0, 1023,
	2603, 2601, 2602, 2594, 2595, 2596, 2597, 2599, 2600, 1498,
	0, 0, 1506, 0, 0, 0, 1470, 0, 1509, 1487,
	1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 0, 0, 0, 0, 0, 0, 1467, 1468, 0,
	0, 0, 0, 209, 1469, 0, 0, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 1498, 1187, 0,
	1486, 0, 0, 0, 1470, 3350, 0, 1487, 1483, 0,
	1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 0,
	1197, 0, 0, 0, 209, 1086, 209, 0, 0, 0,
	0, 0, 1469, 0, 0, 0, 0, 0, 0, 2515,
	0, 1489, 0, 0, 0, 0, 0, 209, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 1493, 1494,
	1495, 3398, 0, 0, 0, 1187, 0, 1475, 0, 0,
	0, 1623, 0, 1626, 0, 87, 0, 0, 0, 1086,
	0, 0, 1187, 0, 0, 0, 0, 2508, 0, 0,
	0, 0, 0, 3424, 1197, 0, 0, 0, 1497, 1499,
	0, 0, 0, 0, 0, 1492, 1493, 1494, 1495, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1497, 1499, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1187, 1187, 1187, 0, 1187, 0, 0, 0,
	0, 676, 1085, 0, 0, 1484, 1485, 0, 0, 0,
	0, 0, 0, 1467, 1468, 0, 3474, 0, 0, 1023,
	1023, 0, 0, 0, 658, 0, 0, 0, 0, 0,
	1490, 0, 0, 1498, 1085, 0, 0, 0, 0, 0,
	1470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1085, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 1496, 0, 0, 0, 660, 0, 1469, 3511,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 3526,
	1491, 0, 661, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 663, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 1493, 1494, 1495, 0, 1186, 0, 0, 0,
	0, 1475, 664, 0, 0, 665, 1085, 0, 0, 209,
	0, 0, 0, 0, 1085, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 1186,
	0, 680, 1497, 1499, 0, 0, 0, 0, 1186, 1186,
	1186, 0, 0, 0, 0, 1023, 0, 1487, 1483, 0,
	1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 0,
	0, 1484, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 0, 834, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 1490, 0, 0, 1186,
	1186, 0, 0, 0, 0, 1487, 1483, 0, 1480, 1478,
	1479, 1471, 1472, 1473, 1474, 1476, 1477, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 0, 0, 1085, 0, 0, 1085,
	0, 1086, 0, 0, 0, 0, 684, 0, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1086, 0, 683, 0, 0, 0, 0,
	0, 0, 669, 0, 1491, 670, 0, 0, 0, 0,
	1086, 678, 0, 0, 0, 0, 0, 0, 671, 813,
	0, 0, 813, 813, 1085, 1023, 0, 0, 0, 0,
	0, 0, 0, 1023, 0, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 672,
	679, 0, 0, 0, 0, 0, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 0, 674, 0, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 682, 209, 0,
	0, 834, 0, 0, 0, 0, 0, 0, 677, 209,
	209, 0, 0, 0, 1539, 1187, 0, 0, 1539, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 1487, 1483, 1086, 1480, 1478, 1479, 1471, 1472, 1473,
	1474, 1476, 1477, 0, 0, 0, 0, 0, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 1187, 1187, 1187,
	0, 0, 0, 0, 0, 0, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1010, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1187, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1187, 0, 0, 87,
	0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510,
	1511, 1512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 1498, 0, 1086, 0, 0, 1086, 0,
	1470, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 1469, 1085,
	0, 0, 0, 0, 1186, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 1186, 1186, 1186, 209, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 87, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	209, 1492, 1493, 1494, 1495, 0, 0, 1085, 0, 0,
	0, 1475, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 1507, 87, 0, 1517, 0,
	0, 0, 1497, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 1514, 0, 0, 0, 0, 0,
	0, 1484, 1485, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 87, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 209, 0, 0, 1086, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 1085, 0, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 1085, 0, 0, 1186, 0, 0, 1085, 0,
	1186, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1085, 0, 0, 1186, 1086, 0,
	1508, 0, 0, 1187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1187, 1187, 1187, 0, 1085, 0, 0,
	0, 2070, 0, 0, 0, 0, 0, 0, 0, 1187,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 1539, 0, 0, 0, 0, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 1481, 1482, 1488,
	1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473,
	1474, 1476, 1477, 0, 1085, 0, 0, 2580, 0, 0,
	0, 2581, 0, 0, 0, 0, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 0, 1500, 1501, 1502, 1510, 1511, 1512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 1498, 0, 0, 0, 0, 0, 0, 1470, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 1186, 0, 0, 0,
	1086, 0, 1086, 0, 0, 0, 1469, 0, 0, 0,
	1010, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 0, 0, 1187, 0, 0, 1086, 0, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1493, 1494, 1495, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 1086, 0, 0, 1187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 87, 1507, 0, 87, 1517, 1186, 0, 0,
	1497, 1499, 0, 0, 0, 0, 0, 1186, 1186, 0,
	0, 0, 0, 1186, 0, 0, 1086, 0, 0, 0,
	1513, 0, 1514, 0, 87, 87, 0, 0, 87, 1484,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 1086, 0, 0, 0,
	0, 1085, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 1010, 0, 0,
	834, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510, 1511,
	1512, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 1503, 1498, 0, 0, 0, 0, 0, 0, 1470,
	0, 0, 1491, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1469, 1508, 0,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 1493, 1494, 1495, 0, 0, 0, 0, 0, 0,
	1475, 0, 1506, 0, 0, 1481, 1482, 1488, 1509, 1487,
	1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 0, 0, 0, 1507, 2102, 1187, 1517, 0, 2103,
	0, 1497, 1499, 0, 0, 0, 1187, 1187, 0, 0,
	0, 0, 1187, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 87, 1514, 0, 0, 0, 0, 0, 0,
	1484, 1485, 0, 0, 0, 0, 0, 1010, 1010, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	1086, 0, 0, 0, 0, 1490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 1467, 1468, 0, 1500, 1501,
	1502, 1510, 1511, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 1498, 0, 0, 0, 0,
	0, 0, 1470, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1469, 0, 0, 1491, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1467, 1468, 1508,
	1500, 1501, 1502, 1510, 1511, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 1498, 0, 0,
	0, 0, 0, 0, 1470, 0, 0, 0, 0, 1516,
	0, 0, 0, 1010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1492, 1493, 1494, 1495, 0, 0, 0,
	0, 0, 1469, 1475, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 87, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	1517, 0, 0, 1506, 1497, 1499, 1481, 1482, 1488, 1509,
	1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474,
	1476, 1477, 0, 0, 1513, 0, 1514, 0, 0, 0,
	3169, 0, 0, 1484, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 1493, 1494, 1495, 1505,
	0, 0, 0, 0, 0, 1475, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 1507,
	0, 0, 1517, 0, 0, 0, 1497, 1499, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 1514, 0,
	0, 0, 0, 1010, 0, 1484, 1485, 0, 0, 0,
	0, 1010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 1496, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 1506, 0, 0, 1481,
	1482, 1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471,
	1472, 1473, 1474, 1476, 1477, 0, 0, 0, 0, 0,
	0, 0, 0, 2898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478,
	1479, 1471, 1472, 1473, 1474, 1476, 1477, 0, 0, 0,
	0, 0, 0, 0, 0, 2583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 1090, 224, 1091, 1092, 1093,
	2070, 1094, 479, 1095, 1096, 1097, 1098, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 1099,
	233, 234, 235, 236, 237, 238, 1100, 1101, 239, 484,
	485, 486, 1102, 240, 487, 1103, 1088, 1104, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 1105,
	251, 0, 252, 253, 254, 1106, 960, 255, 256, 1107,
	1108, 1110, 1109, 1111, 1112, 1113, 257, 258, 259, 260,
	261, 262, 488, 489, 1114, 263, 1115, 265, 264, 1116,
	266, 1117, 1118, 267, 268, 269, 1119, 270, 1120, 271,
	272, 1121, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 1122, 216, 1123, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	1124, 290, 1125, 1126, 961, 291, 292, 1127, 293, 494,
	1128, 495, 294, 1129, 295, 296, 297, 298, 496, 497,
	498, 350, 963, 299, 300, 1130, 301, 302, 304, 0,
	0, 217, 303, 305, 312, 1131, 962, 306, 499, 308,
	307, 309, 310, 311, 500, 1132, 501, 1133, 313, 964,
	502, 965, 314, 315, 316, 966, 317, 318, 87, 0,
	319, 320, 321, 322, 323, 1134, 325, 324, 1135, 326,
	503, 967, 327, 328, 968, 1136, 329, 330, 1137, 1138,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 969, 344, 345, 347, 970, 346,
	1139, 218, 971, 348, 1140, 504, 349, 505, 351, 352,
	1141, 353, 354, 355, 1142, 1143, 357, 358, 359, 1144,
	1145, 360, 361, 506, 972, 362, 973, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 1146, 371, 372,
	508, 373, 509, 374, 1147, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 1148, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 1149, 398, 974, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	1150, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 1151, 425, 405, 406, 426, 427, 975, 428, 429,
	512, 430, 431, 1152, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 1153, 443, 444, 442,
	1154, 445, 446, 447, 448, 449, 278, 450, 1155, 451,
	514, 515, 516, 517, 1156, 458, 1157, 452, 453, 518,
	454, 519, 1158, 455, 456, 457, 0, 459, 460, 1159,
	1160, 461, 462, 463, 464, 465, 467, 1161, 468, 1162,
	466, 469, 470, 471, 520, 521, 522, 1163, 473, 472,
	523, 1164, 1165, 1166, 1167, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 0, 0, 0, 0, 0, 0, 2218,
	219, 220, 221, 222, 223, 1090, 224, 1091, 1092, 1093,
	0, 1094, 479, 1095, 1096, 1097, 1098, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 1099,
	233, 234, 235, 236, 237, 238, 1100, 1101, 239, 484,
	485, 486, 1102, 240, 487, 1103, 1088, 1104, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 1105,
	251, 0, 252, 253, 254, 1106, 960, 255, 256, 1107,
	1108, 1110, 1109, 1111, 1112, 1113, 257, 258, 259, 260,
	261, 262, 488, 489, 1114, 263, 1115, 265, 264, 1116,
	266, 1117, 1118, 267, 268, 269, 1119, 270, 1120, 271,
	272, 1121, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 1122, 216, 1123, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	1124, 290, 1125, 1126, 961, 291, 292, 1127, 293, 494,
	1128, 495, 294, 1129, 295, 296, 297, 298, 496, 497,
	498, 350, 963, 299, 300, 1130, 301, 302, 304, 0,
	0, 217, 303, 305, 312, 1131, 962, 306, 499, 308,
	307, 309, 310, 311, 500, 1132, 501, 1133, 313, 964,
	502, 965, 314, 315, 316, 966, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 1134, 325, 324, 1135, 326,
	503, 967, 327, 328, 968, 1136, 329, 330, 1137, 1138,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 969, 344, 345, 347, 970, 346,
	1139, 218, 971, 348, 1140, 504, 349, 505, 351, 352,
	1141, 353, 354, 355, 1142, 1143, 357, 358, 359, 1144,
	1145, 360, 361, 506, 972, 362, 973, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 1146, 371, 372,
	508, 373, 509, 374, 1147, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 1148, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 1149, 398, 974, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	1150, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 1151, 425, 405, 406, 426, 427, 975, 428, 429,
	512, 430, 431, 1152, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 1153, 443, 444, 442,
	1154, 445, 446, 447, 448, 449, 278, 450, 1155, 451,
	514, 515, 516, 517, 1156, 458, 1157, 452, 453, 518,
	454, 519, 1158, 455, 456, 457, 0, 459, 460, 1159,
	1160, 461, 462, 463, 464, 465, 467, 1161, 468, 1162,
	466, 469, 470, 471, 520, 521, 522, 1163, 473, 472,
	523, 1164, 1165, 1166, 1167, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3193, 219, 220, 221, 222, 223, 1090, 224, 1091,
	1092, 1093, 0, 1094, 479, 1095, 1096, 1097, 1098, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 1099, 233, 234, 235, 236, 237, 238, 1100, 1101,
	239, 484, 485, 486, 1102, 240, 487, 1103, 1088, 1104,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 1105, 251, 0, 252, 253, 254, 1106, 960, 255,
	256, 1107, 1108, 1110, 1109, 1111, 1112, 1113, 257, 258,
	259, 260, 261, 262, 488, 489, 1114, 263, 1115, 265,
	264, 1116, 266, 1117, 1118, 267, 268, 269, 1119, 270,
	1120, 271, 272, 1121, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 1122, 216, 1123,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 1124, 290, 1125, 1126, 961, 291, 292, 1127,
	293, 494, 1128, 495, 294, 1129, 295, 296, 297, 298,
	496, 497, 498, 350, 963, 299, 300, 1130, 301, 302,
	304, 0, 0, 217, 303, 305, 312, 1131, 962, 306,
	499, 308, 307, 309, 310, 311, 500, 1132, 501, 1133,
	313, 964, 502, 965, 314, 315, 316, 966, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 1134, 325, 324,
	1135, 326, 503, 967, 327, 328, 968, 1136, 329, 330,
	1137, 1138, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 969, 344, 345, 347,
	970, 346, 1139, 218, 971, 348, 1140, 504, 349, 505,
	351, 352, 1141, 353, 354, 355, 1142, 1143, 357, 358,
	359, 1144, 1145, 360, 361, 506, 972, 362, 973, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 1146,
	371, 372, 508, 373, 509, 374, 1147, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 1148,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 1149, 398, 974, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 1150, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 1151, 425, 405, 406, 426, 427, 975,
	428, 429, 512, 430, 431, 1152, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 1153, 443,
	444, 442, 1154, 445, 446, 447, 448, 449, 278, 450,
	1155, 451, 514, 515, 516, 517, 1156, 458, 1157, 452,
	453, 518, 454, 519, 1158, 455, 456, 457, 0, 459,
	460, 1159, 1160, 461, 462, 463, 464, 465, 467, 1161,
	468, 1162, 466, 469, 470, 471, 520, 521, 522, 1163,
	473, 472, 523, 1164, 1165, 1166, 1167, 474, 475, 524,
	476, 477, 478, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3318, 0,
	219, 220, 221, 222, 223, 1090, 224, 1091, 1092, 1093,
	0, 1094, 479, 1095, 1096, 1097, 1098, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 1099,
	233, 234, 235, 236, 237, 238, 1100, 1101, 239, 484,
	485, 486, 1102, 240, 487, 1103, 1088, 1104, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 1105,
	251, 0, 252, 253, 254, 1106, 960, 255, 256, 1107,
	1108, 1110, 1109, 1111, 1112, 1113, 257, 258, 259, 260,
	261, 262, 488, 489, 1114, 263, 1115, 265, 264, 1116,
	266, 1117, 1118, 267, 268, 269, 1119, 270, 1120, 271,
	272, 1121, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 1122, 216, 1123, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	1124, 290, 1125, 1126, 961, 291, 292, 1127, 293, 494,
	1128, 495, 294, 1129, 295, 296, 297, 298, 496, 497,
	498, 350, 963, 299, 300, 1130, 301, 302, 304, 0,
	0, 217, 303, 305, 312, 1131, 962, 306, 499, 308,
	307, 309, 310, 311, 500, 1132, 501, 1133, 313, 964,
	502, 965, 314, 315, 316, 966, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 1134, 325, 324, 1135, 326,
	503, 967, 327, 328, 968, 1136, 329, 330, 1137, 1138,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 969, 344, 345, 347, 970, 346,
	1139, 218, 971, 348, 1140, 504, 349, 505, 351, 352,
	1141, 353, 354, 355, 1142, 1143, 357, 358, 359, 1144,
	1145, 360, 361, 506, 972, 362, 973, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 1146, 371, 372,
	508, 373, 509, 374, 1147, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 1148, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 1149, 398, 974, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	1150, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 1151, 425, 405, 406, 426, 427, 975, 428, 429,
	512, 430, 431, 1152, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 1153, 443, 444, 442,
	1154, 445, 446, 447, 448, 449, 278, 450, 1155, 451,
	514, 515, 516, 517, 1156, 458, 1157, 452, 453, 518,
	454, 519, 1158, 455, 456, 457, 0, 459, 460, 1159,
	1160, 461, 462, 463, 464, 465, 467, 1161, 468, 1162,
	466, 469, 470, 471, 520, 521, 522, 1163, 473, 472,
	523, 1164, 1165, 1166, 1167, 474, 475, 524, 476, 477,
	478, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3246, 0, 219, 220,
	221, 222, 223, 1090, 224, 1091, 1092, 1093, 0, 1094,
	479, 1095, 1096, 1097, 1098, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 1099, 233, 234,
	235, 236, 237, 238, 1100, 1101, 239, 484, 485, 486,
	1102, 240, 487, 1103, 1088, 1104, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 1105, 251, 0,
	252, 253, 254, 1106, 960, 255, 256, 1107, 1108, 1110,
	1109, 1111, 1112, 1113, 257, 258, 259, 260, 261, 262,
	488, 489, 1114, 263, 1115, 265, 264, 1116, 266, 1117,
	1118, 267, 268, 269, 1119, 270, 1120, 271, 272, 1121,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 1122, 216, 1123, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 1124, 290,
	1125, 1126, 961, 291, 292, 1127, 293, 494, 1128, 495,
	294, 1129, 295, 296, 297, 298, 496, 497, 498, 350,
	963, 299, 300, 1130, 301, 302, 304, 0, 0, 217,
	303, 305, 312, 1131, 962, 306, 499, 308, 307, 309,
	310, 311, 500, 1132, 501, 1133, 313, 964, 502, 965,
	314, 315, 316, 966, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 1134, 325, 324, 1135, 326, 503, 967,
	327, 328, 968, 1136, 329, 330, 1137, 1138, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 969, 344, 345, 347, 970, 346, 1139, 218,
	971, 348, 1140, 504, 349, 505, 351, 352, 1141, 353,
	354, 355, 1142, 1143, 357, 358, 359, 1144, 1145, 360,
	361, 506, 972, 362, 973, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 1146, 371, 372, 508, 373,
	509, 374, 1147, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 1148, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	1149, 398, 974, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 1150, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 1151,
	425, 405, 406, 426, 427, 975, 428, 429, 512, 430,
	431, 1152, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 1153, 443, 444, 442, 1154, 445,
	446, 447, 448, 449, 278, 450, 1155, 451, 514, 515,
	516, 517, 1156, 458, 1157, 452, 453, 518, 454, 519,
	1158, 455, 456, 457, 0, 459, 460, 1159, 1160, 461,
	462, 463, 464, 465, 467, 1161, 468, 1162, 466, 469,
	470, 471, 520, 521, 522, 1163, 473, 472, 523, 1164,
	1165, 1166, 1167, 474, 475, 524, 476, 477, 478, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3127, 0, 219, 220, 221, 222,
	223, 1090, 224, 1091, 1092, 1093, 0, 1094, 479, 1095,
	1096, 1097, 1098, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 1099, 233, 234, 235, 236,
	237, 238, 1100, 1101, 239, 484, 485, 486, 1102, 240,
	487, 1103, 1088, 1104, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 1105, 251, 0, 252, 253,
	254, 1106, 960, 255, 256, 1107, 1108, 1110, 1109, 1111,
	1112, 1113, 257, 258, 259, 260, 261, 262, 488, 489,
	1114, 263, 1115, 265, 264, 1116, 266, 1117, 1118, 267,
	268, 269, 1119, 270, 1120, 271, 272, 1121, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 1122, 216, 1123, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 1124, 290, 1125, 1126,
	961, 291, 292, 1127, 293, 494, 1128, 495, 294, 1129,
	295, 296, 297, 298, 496, 497, 498, 350, 963, 299,
	300, 1130, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 1131, 962, 306, 499, 308, 307, 309, 310, 311,
	500, 1132, 501, 1133, 313, 964, 502, 965, 314, 315,
	316, 966, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 1134, 325, 324, 1135, 326, 503, 967, 327, 328,
	968, 1136, 329, 330, 1137, 1138, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	969, 344, 345, 347, 970, 346, 1139, 218, 971, 348,
	1140, 504, 349, 505, 351, 352, 1141, 353, 354, 355,
	1142, 1143, 357, 358, 359, 1144, 1145, 360, 361, 506,
	972, 362, 973, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 1146, 371, 372, 508, 373, 509, 374,
	1147, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 1148, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 1149, 398,
	974, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 1150, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 1151, 425, 405,
	406, 426, 427, 975, 428, 429, 512, 430, 431, 1152,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 1153, 443, 444, 442, 1154, 445, 446, 447,
	448, 449, 278, 450, 1155, 451, 514, 515, 516, 517,
	1156, 458, 1157, 452, 453, 518, 454, 519, 1158, 455,
	456, 457, 0, 459, 460, 1159, 1160, 461, 462, 463,
	464, 465, 467, 1161, 468, 1162, 466, 469, 470, 471,
	520, 521, 522, 1163, 473, 472, 523, 1164, 1165, 1166,
	1167, 474, 475, 524, 476, 477, 478, 1083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2923, 0, 219, 220, 221, 222, 223, 1090,
	224, 1091, 1092, 1093, 0, 1094, 479, 1095, 1096, 1097,
	1098, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 1099, 233, 234, 235, 236, 237, 238,
	1100, 1101, 239, 484, 485, 486, 1102, 240, 487, 1103,
	1088, 1104, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 1105, 251, 0, 252, 253, 254, 1106,
	960, 255, 256, 1107, 1108, 1110, 1109, 1111, 1112, 1113,
	257, 258, 259, 260, 261, 262, 488, 489, 1114, 263,
	1115, 265, 264, 1116, 266, 1117, 1118, 267, 268, 269,
	1119, 270, 1120, 271, 272, 1121, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 1122,
	216, 1123, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 1124, 290, 1125, 1126, 961, 291,
	292, 1127, 293, 494, 1128, 495, 294, 1129, 295, 296,
	297, 298, 496, 497, 498, 350, 963, 299, 300, 1130,
	301, 302, 304, 0, 0, 217, 303, 305, 312, 1131,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 1132,
	501, 1133, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 1134,
	325, 324, 1135, 326, 503, 967, 327, 328, 968, 1136,
	329, 330, 1137, 1138, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 1139, 218, 971, 348, 1140, 504,
	349, 505, 351, 352, 1141, 353, 354, 355, 1142, 1143,
	357, 358, 359, 1144, 1145, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 1146, 371, 372, 508, 373, 509, 374, 1147, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 1148, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 1149, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 1150, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 1151, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 1152, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	1153, 443, 444, 442, 1154, 445, 446, 447, 448, 449,
	278, 450, 1155, 451, 514, 515, 516, 517, 1156, 458,
	1157, 452, 453, 518, 454, 519, 1158, 455, 456, 457,
	0, 459, 460, 1159, 1160, 461, 462, 463, 464, 465,
	467, 1161, 468, 1162, 466, 469, 470, 471, 520, 521,
	522, 1163, 473, 472, 523, 1164, 1165, 1166, 1167, 474,
	475, 524, 476, 477, 478, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2915, 0, 219, 220, 221, 222, 223, 1090, 224, 1091,
	1092, 1093, 0, 1094, 479, 1095, 1096, 1097, 1098, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 1099, 233, 234, 235, 236, 237, 238, 1100, 1101,
	239, 484, 485, 486, 1102, 240, 487, 1103, 1088, 1104,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 1105, 251, 0, 252, 253, 254, 1106, 960, 255,
	256, 1107, 1108, 1110, 1109, 1111, 1112, 1113, 257, 258,
	259, 260, 261, 262, 488, 489, 1114, 263, 1115, 265,
	264, 1116, 266, 1117, 1118, 267, 268, 269, 1119, 270,
	1120, 271, 272, 1121, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 1122, 216, 1123,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 1124, 290, 1125, 1126, 961, 291, 292, 1127,
	293, 494, 1128, 495, 294, 1129, 295, 296, 297, 298,
	496, 497, 498, 350, 963, 299, 300, 1130, 301, 302,
	304, 0, 0, 217, 303, 305, 312, 1131, 962, 306,
	499, 308, 307, 309, 310, 311, 500, 1132, 501, 1133,
	313, 964, 502, 965, 314, 315, 316, 966, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 1134, 325, 324,
	1135, 326, 503, 967, 327, 328, 968, 1136, 329, 330,
	1137, 1138, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 969, 344, 345, 347,
	970, 346, 1139, 218, 971, 348, 1140, 504, 349, 505,
	351, 352, 1141, 353, 354, 355, 1142, 1143, 357, 358,
	359, 1144, 1145, 360, 361, 506, 972, 362, 973, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 1146,
	371, 372, 508, 373, 509, 374, 1147, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 1148,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 1149, 398, 974, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 1150, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 1151, 425, 405, 406, 426, 427, 975,
	428, 429, 512, 430, 431, 1152, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 1153, 443,
	444, 442, 1154, 445, 446, 447, 448, 449, 278, 450,
	1155, 451, 514, 515, 516, 517, 1156, 458, 1157, 452,
	453, 518, 454, 519, 1158, 455, 456, 457, 0, 459,
	460, 1159, 1160, 461, 462, 463, 464, 465, 467, 1161,
	468, 1162, 466, 469, 470, 471, 520, 521, 522, 1163,
	473, 472, 523, 1164, 1165, 1166, 1167, 474, 475, 524,
	476, 477, 478, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2776, 0,
	219, 220, 221, 222, 223, 1090, 224, 1091, 1092, 1093,
	0, 1094, 479, 1095, 1096, 1097, 1098, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 1099,
	233, 234, 235, 236, 237, 238, 1100, 1101, 239, 484,
	485, 486, 1102, 240, 487, 1103, 1088, 1104, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 1105,
	251, 0, 252, 253, 254, 1106, 960, 255, 256, 1107,
	1108, 1110, 1109, 1111, 1112, 1113, 257, 258, 259, 260,
	261, 262, 488, 489, 1114, 263, 1115, 265, 264, 1116,
	266, 1117, 1118, 267, 268, 269, 1119, 270, 1120, 271,
	272, 1121, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 1122, 216, 1123, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	1124, 290, 1125, 1126, 961, 291, 292, 1127, 293, 494,
	1128, 495, 294, 1129, 295, 296, 297, 298, 496, 497,
	498, 350, 963, 299, 300, 1130, 301, 302, 304, 0,
	0, 217, 303, 305, 312, 1131, 962, 306, 499, 308,
	307, 309, 310, 311, 500, 1132, 501, 1133, 313, 964,
	502, 965, 314, 315, 316, 966, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 1134, 325, 324, 1135, 326,
	503, 967, 327, 328, 968, 1136, 329, 330, 1137, 1138,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 969, 344, 345, 347, 970, 346,
	1139, 218, 971, 348, 1140, 504, 349, 505, 351, 352,
	1141, 353, 354, 355, 1142, 1143, 357, 358, 359, 1144,
	1145, 360, 361, 506, 972, 362, 973, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 1146, 371, 372,
	508, 373, 509, 374, 1147, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 1148, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 1149, 398, 974, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	1150, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 1151, 425, 405, 406, 426, 427, 975, 428, 429,
	512, 430, 431, 1152, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 1153, 443, 444, 442,
	1154, 445, 446, 447, 448, 449, 278, 450, 1155, 451,
	514, 515, 516, 517, 1156, 458, 1157, 452, 453, 518,
	454, 519, 1158, 455, 456, 457, 0, 459, 460, 1159,
	1160, 461, 462, 463, 464, 465, 467, 1161, 468, 1162,
	466, 469, 470, 471, 520, 521, 522, 1163, 473, 472,
	523, 1164, 1165, 1166, 1167, 474, 475, 524, 476, 477,
	478, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 219, 220,
	221, 222, 223, 1090, 224, 1091, 1092, 1093, 0, 1094,
	479, 1095, 1096, 1097, 1098, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 1099, 233, 234,
	235, 236, 237, 238, 1100, 1101, 239, 484, 485, 486,
	1102, 240, 487, 1103, 1088, 1104, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 1105, 251, 0,
	252, 253, 254, 1106, 960, 255, 256, 1107, 1108, 1110,
	1109, 1111, 1112, 1113, 257, 258, 259, 260, 261, 262,
	488, 489, 1114, 263, 1115, 265, 264, 1116, 266, 1117,
	1118, 267, 268, 269, 1119, 270, 1120, 271, 272, 1121,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 1122, 216, 1123, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 1124, 290,
	1125, 1126, 961, 291, 292, 1127, 293, 494, 1128, 495,
	294, 1129, 295, 296, 297, 298, 496, 497, 498, 350,
	963, 299, 300, 1130, 301, 302, 304, 0, 0, 217,
	303, 305, 312, 1131, 962, 306, 499, 308, 307, 309,
	310, 311, 500, 1132, 501, 1133, 313, 964, 502, 965,
	314, 315, 316, 966, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 1134, 325, 324, 1135, 326, 503, 967,
	327, 328, 968, 1136, 329, 330, 1137, 1138, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 969, 344, 345, 347, 970, 346, 1139, 218,
	971, 348, 1140, 504, 349, 505, 351, 352, 1141, 353,
	354, 355, 1142, 1143, 357, 358, 359, 1144, 1145, 360,
	361, 506, 972, 362, 973, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 1146, 371, 372, 508, 373,
	509, 374, 1147, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 1148, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	1149, 398, 974, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 1150, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 1151,
	425, 405, 406, 426, 427, 975, 428, 429, 512, 430,
	431, 1152, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 1153, 443, 444, 442, 1154, 445,
	446, 447, 448, 449, 278, 450, 1155, 451, 514, 515,
	516, 517, 1156, 458, 1157, 452, 453, 518, 454, 519,
	1158, 455, 456, 457, 0, 459, 460, 1159, 1160, 461,
	462, 463, 464, 465, 467, 1161, 468, 1162, 466, 469,
	470, 471, 520, 521, 522, 1163, 473, 472, 523, 1164,
	1165, 1166, 1167, 474, 475, 524, 476, 477, 478, 1191,
	0, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 219, 220,
	221, 222, 223, 1090, 224, 1091, 1092, 1093, 0, 1094,
	479, 1095, 1096, 1097, 1098, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 1099, 233, 234,
	235, 236, 237, 238, 1100, 1101, 239, 484, 485, 486,
	1102, 240, 487, 1103, 1088, 1104, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 1105, 251, 0,
	252, 253, 254, 1106, 960, 255, 256, 1107, 1108, 1110,
	1109, 1111, 1112, 1113, 257, 258, 259, 260, 261, 262,
	488, 489, 1114, 263, 1115, 265, 264, 1116, 266, 1117,
	1118, 267, 268, 269, 1119, 270, 1120, 271, 272, 1121,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 1122, 216, 1123, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 1124, 290,
	1125, 1126, 961, 291, 292, 1127, 293, 494, 1128, 495,
	294, 1129, 295, 296, 297, 298, 496, 497, 498, 350,
	963, 299, 300, 1130, 301, 302, 304, 0, 0, 217,
	303, 305, 312, 1131, 962, 306, 499, 308, 307, 309,
	310, 311, 500, 1132, 501, 1133, 313, 964, 502, 965,
	314, 315, 316, 966, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 1134, 325, 324, 1135, 326, 503, 967,
	327, 328, 968, 1136, 329, 330, 1137, 1138, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 969, 344, 345, 347, 970, 346, 1139, 218,
	971, 348, 1140, 504, 349, 505, 351, 352, 1141, 353,
	354, 355, 1142, 1143, 357, 358, 359, 1144, 1145, 360,
	361, 506, 972, 362, 973, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 1146, 371, 372, 508, 373,
	509, 374, 1147, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 1148, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	1149, 398, 974, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 1150, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 1151,
	425, 405, 406, 426, 427, 975, 428, 429, 512, 430,
	431, 1152, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 1153, 443, 444, 442, 1154, 445,
	446, 447, 448, 449, 278, 450, 1155, 451, 514, 515,
	516, 517, 1156, 458, 1157, 452, 453, 518, 454, 519,
	1158, 455, 456, 457, 0, 459, 460, 1159, 1160, 461,
	462, 463, 464, 465, 467, 1161, 468, 1162, 466, 469,
	470, 471, 520, 521, 522, 1163, 473, 472, 523, 1164,
	1165, 1166, 1167, 474, 475, 524, 476, 477, 478, 1080,
	0, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 1090, 224, 1091, 1092, 1093, 0, 1094,
	479, 1095, 1096, 1097, 1098, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 1099, 233, 234,
	235, 236, 237, 238, 1100, 1101, 239, 484, 485, 486,
	1102, 240, 487, 1103, 1088, 1104, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 1105, 251, 0,
	252, 253, 254, 1106, 960, 255, 256, 1107, 1108, 1110,
	1109, 1111, 1112, 1113, 257, 258, 259, 260, 261, 262,
	488, 489, 1114, 263, 1115, 265, 264, 1116, 266, 1117,
	1118, 267, 268, 269, 1119, 270, 1120, 271, 272, 1121,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 1122, 216, 1123, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 1124, 290,
	1125, 1126, 961, 291, 292, 1127, 293, 494, 1128, 495,
	294, 1129, 295, 296, 297, 298, 496, 497, 498, 350,
	963, 299, 300, 1130, 301, 302, 304, 0, 0, 217,
	303, 305, 312, 1131, 962, 306, 499, 308, 307, 309,
	310, 311, 500, 1132, 501, 1133, 313, 964, 502, 965,
	314, 315, 316, 966, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 1134, 325, 324, 1135, 326, 503, 967,
	327, 328, 968, 1136, 329, 330, 1137, 1138, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 969, 344, 345, 347, 970, 346, 1139, 218,
	971, 348, 1140, 504, 349, 505, 351, 352, 1141, 353,
	354, 355, 1142, 1143, 357, 358, 359, 1144, 1145, 360,
	361, 506, 972, 362, 973, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 1146, 371, 372, 508, 373,
	509, 374, 1147, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 1148, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	1149, 398, 974, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 1150, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 1151,
	425, 405, 406, 426, 427, 975, 428, 429, 512, 430,
	431, 1152, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 1153, 443, 444, 442, 1154, 445,
	446, 447, 448, 449, 278, 450, 1155, 451, 514, 515,
	516, 517, 1156, 458, 1157, 452, 453, 518, 454, 519,
	1158, 455, 456, 457, 0, 459, 460, 1159, 1160, 461,
	462, 463, 464, 465, 467, 1161, 468, 1162, 466, 469,
	470, 471, 520, 521, 522, 1163, 473, 472, 523, 1164,
	1165, 1166, 1167, 474, 475, 524, 476, 477, 478, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 1090, 224, 1091, 1092, 1093, 0, 1094, 479, 1095,
	1096, 1097, 1098, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 1099, 233, 234, 235, 236,
	237, 238, 1100, 1101, 239, 484, 485, 486, 1102, 240,
	487, 1103, 1088, 1104, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 1105, 251, 0, 252, 253,
	254, 1106, 960, 255, 256, 1107, 1108, 1110, 1109, 1111,
	1112, 1113, 257, 258, 259, 260, 261, 262, 488, 489,
	1114, 263, 1115, 265, 264, 1116, 266, 1117, 1118, 267,
	268, 269, 1119, 270, 1120, 271, 272, 1121, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 1122, 216, 1123, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 1124, 290, 1125, 1126,
	961, 291, 292, 1127, 293, 494, 1128, 495, 294, 1129,
	295, 296, 297, 298, 496, 497, 498, 350, 963, 299,
	300, 1130, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 1131, 962, 306, 499, 308, 307, 309, 310, 311,
	500, 1132, 501, 1133, 313, 964, 502, 965, 314, 315,
	316, 966, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 1134, 325, 324, 1135, 326, 503, 967, 327, 328,
	968, 1136, 329, 330, 1137, 1138, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	969, 344, 345, 347, 970, 346, 1139, 218, 971, 348,
	1140, 504, 349, 505, 351, 352, 1141, 353, 354, 355,
	1142, 1143, 357, 358, 359, 1144, 1145, 360, 361, 506,
	972, 362, 973, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 1146, 371, 372, 508, 373, 509, 374,
	1147, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 1148, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 1149, 398,
	974, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 1150, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 1151, 425, 405,
	406, 426, 427, 975, 428, 429, 512, 430, 431, 1152,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 1153, 443, 444, 442, 1154, 445, 446, 447,
	448, 449, 278, 450, 1155, 451, 514, 515, 516, 517,
	1156, 458, 1157, 452, 453, 518, 454, 519, 1158, 455,
	456, 457, 0, 459, 460, 1159, 1160, 461, 462, 463,
	464, 465, 467, 1161, 468, 1162, 466, 469, 470, 471,
	520, 521, 522, 1163, 473, 472, 523, 1164, 1165, 1166,
	1167, 474, 475, 524, 476, 477, 478, 2091, 0, 902,
	859, 860, 861, 857, 858, 871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 2088, 224, 0, 0, 0, 0, 0, 951, 876,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 917,
	896, 928, 886, 927, 926, 0, 233, 888, 887, 236,
	237, 238, 878, 950, 239, 987, 988, 486, 0, 240,
	957, 0, 940, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 960, 255, 256, 943, 941, 942, 947, 945,
	944, 946, 257, 258, 259, 260, 931, 262, 924, 923,
	848, 263, 0, 265, 264, 0, 266, 2089, 0, 267,
	922, 269, 0, 270, 0, 271, 272, 0, 273, 854,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 978,
	979, 867, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 921, 919, 920, 0, 289, 0, 290, 0, 0,
	961, 291, 292, 0, 293, 985, 0, 877, 294, 0,
	295, 296, 297, 298, 952, 953, 956, 350, 963, 299,
	300, 0, 301, 302, 898, 0, 0, 217, 303, 305,
	312, 0, 962, 306, 910, 901, 912, 914, 915, 916,
	911, 0, 903, 0, 313, 964, 954, 965, 314, 315,
	316, 966, 936, 937, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 986, 967, 327, 328,
	968, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 890, 341,
	969, 344, 345, 347, 970, 346, 845, 218, 971, 348,
	868, 955, 349, 925, 351, 352, 0, 899, 354, 900,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	972, 362, 973, 980, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 981, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	918, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	974, 399, 400, 401, 402, 855, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 891,
	892, 894, 895, 416, 422, 423, 424, 948, 425, 405,
	406, 426, 427, 975, 428, 429, 913, 893, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 959, 437, 438,
	439, 982, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 889, 0, 451, 932, 933, 934, 935,
	0, 458, 0, 452, 453, 983, 454, 984, 866, 455,
	456, 457, 0, 459, 460, 0, 849, 461, 462, 463,
	464, 465, 467, 949, 468, 0, 897, 469, 470, 471,
	520, 929, 977, 2087, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 2090, 0, 0, 0, 0, 0, 0, 872,
	2086, 0, 835, 870, 902, 859, 860, 861, 857, 858,
	871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 951, 876, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 917, 896, 928, 886, 927, 926,
	0, 233, 888, 887, 236, 237, 238, 878, 950, 239,
	987, 988, 486, 0, 240, 957, 0, 940, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	943, 941, 942, 947, 945, 944, 946, 257, 258, 259,
	260, 931, 262, 924, 923, 848, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 922, 269, 0, 270, 0,
	271, 272, 0, 273, 854, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 978, 979, 867, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 921, 919, 920, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	985, 0, 877, 294, 0, 295, 296, 297, 298, 952,
	953, 956, 350, 963, 299, 300, 0, 301, 302, 898,
	0, 0, 217, 303, 305, 312, 0, 962, 306, 910,
	901, 912, 914, 915, 916, 911, 0, 903, 0, 313,
	964, 954, 965, 314, 315, 316, 966, 936, 937, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 986, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 890, 341, 969, 344, 345, 347, 970,
	346, 845, 218, 971, 348, 868, 955, 349, 925, 351,
	352, 0, 899, 354, 900, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 980, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 981, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 918, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	855, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 182, 420, 421, 891, 892, 894, 895, 416, 422,
	423, 424, 948, 425, 405, 406, 426, 427, 975, 428,
	429, 913, 893, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 959, 437, 438, 439, 982, 0, 443, 444,
	442, 184, 445, 446, 447, 448, 449, 278, 889, 0,
	451, 932, 933, 934, 935, 0, 458, 0, 452, 453,
	983, 454, 984, 866, 455, 456, 457, 0, 459, 460,
	0, 849, 461, 462, 463, 464, 465, 467, 949, 468,
	0, 897, 469, 470, 471, 1332, 929, 977, 0, 473,
	472, 523, 0, 0, 0, 176, 474, 475, 524, 476,
	477, 478, 846, 177, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 842, 843, 902, 859, 860,
	861, 857, 858, 871, 1544, 1542, 0, 0, 870, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 951, 876, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 917, 896, 928,
	886, 927, 926, 0, 233, 888, 887, 236, 237, 238,
	878, 950, 239, 987, 988, 486, 0, 240, 957, 0,
	940, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 943, 941, 942, 947, 945, 944, 946,
	257, 258, 259, 260, 931, 262, 924, 923, 848, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 922, 269,
	0, 270, 0, 271, 272, 0, 273, 854, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 978, 979, 867,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 921,
	919, 920, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 985, 0, 877, 294, 0, 295, 296,
	297, 298, 952, 953, 956, 350, 963, 299, 300, 0,
	301, 302, 898, 0, 0, 217, 303, 305, 312, 0,
	962, 306, 910, 901, 912, 914, 915, 916, 911, 0,
	903, 0, 313, 964, 954, 965, 314, 315, 316, 966,
	936, 937, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 986, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 890, 341, 969, 344,
	345, 347, 970, 346, 845, 218, 971, 348, 868, 955,
	349, 925, 351, 352, 0, 899, 354, 900, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 980, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 981, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 918, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 855, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 182, 420, 421, 891, 892, 894,
	895, 416, 422, 423, 424, 948, 425, 405, 406, 426,
	427, 975, 428, 429, 913, 893, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 959, 437, 438, 439, 982,
	0, 443, 444, 442, 184, 445, 446, 447, 448, 449,
	278, 889, 0, 451, 932, 933, 934, 935, 0, 458,
	0, 452, 453, 983, 454, 984, 866, 455, 456, 457,
	0, 459, 460, 0, 849, 461, 462, 463, 464, 465,
	467, 949, 468, 0, 897, 469, 470, 471, 1332, 929,
	977, 0, 473, 472, 523, 0, 0, 0, 176, 474,
	475, 524, 476, 477, 478, 846, 177, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	902, 859, 860, 861, 857, 858, 871, 1544, 2528, 0,
	0, 870, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 951,
	876, 0, 0, 0, 225, 227, 226, 228, 229, 480,
	917, 896, 928, 886, 927, 926, 0, 233, 888, 887,
	236, 237, 238, 878, 950, 239, 987, 988, 486, 0,
	240, 957, 0, 940, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 960, 255, 256, 943, 941, 942, 947,
	945, 944, 946, 257, 258, 259, 260, 931, 262, 924,
	923, 848, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 922, 269, 0, 270, 0, 271, 272, 0, 273,
	854, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	978, 979, 867, 216, 0, 0, 0, 0, 0, 284,
	285, 286, 921, 919, 920, 0, 289, 0, 290, 0,
	0, 961, 291, 292, 0, 293, 985, 0, 877, 294,
	0, 295, 296, 297, 298, 952, 953, 956, 350, 963,
	299, 300, 0, 301, 302, 898, 0, 0, 217, 303,
	305, 312, 0, 962, 306, 910, 901, 912, 914, 915,
	916, 911, 0, 903, 0, 313, 964, 954, 965, 314,
	315, 316, 966, 936, 937, 0, 0, 319, 320, 321,
	322, 323, 0, 325, 324, 0, 326, 986, 967, 327,
	328, 968, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 890,
	341, 969, 344, 345, 347, 970, 346, 845, 218, 971,
	348, 868, 955, 349, 925, 351, 352, 0, 899, 354,
	900, 0, 0, 357, 358, 359, 0, 0, 360, 361,
	506, 972, 362, 973, 980, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 981, 373, 509,
	374, 0, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 918, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 974, 399, 400, 401, 402, 855, 403, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 182, 420, 421,
	891, 892, 894, 895, 416, 422, 423, 424, 948, 425,
	405, 406, 426, 427, 975, 428, 429, 913, 893, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 959, 437,
	438, 439, 982, 0, 443, 444, 442, 184, 445, 446,
	447, 448, 449, 278, 889, 0, 451, 932, 933, 934,
	935, 0, 458, 0, 452, 453, 983, 454, 984, 866,
	455, 456, 457, 0, 459, 460, 0, 849, 461, 462,
	463, 464, 465, 467, 949, 468, 0, 897, 469, 470,
	471, 1332, 929, 977, 0, 473, 472, 523, 0, 0,
	0, 176, 474, 475, 524, 476, 477, 478, 846, 177,
	0, 0, 0, 0, 844, 0, 0, 0, 0, 0,
	0, 842, 843, 902, 859, 860, 861, 857, 858, 871,
	1544, 1542, 0, 0, 870, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 951, 876, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 917, 896, 928, 886, 927, 926, 2179,
	233, 888, 887, 236, 237, 238, 878, 950, 239, 987,
	988, 486, 0, 240, 957, 0, 940, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 960, 255, 256, 943,
	941, 942, 947, 945, 944, 946, 257, 258, 259, 260,
	931, 262, 924, 923, 848, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 922, 269, 0, 270, 0, 271,
	272, 0, 273, 854, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 978, 979, 867, 216, 0, 0, 0,
	0, 0, 284, 285, 286, 921, 919, 920, 0, 289,
	0, 290, 0, 2184, 961, 291, 292, 0, 293, 985,
	0, 877, 294, 0, 295, 296, 297, 298, 952, 953,
	956, 350, 963, 299, 300, 0, 301, 302, 898, 0,
	0, 217, 303, 305, 312, 0, 962, 306, 910, 901,
	912, 914, 915, 916, 911, 0, 903, 0, 313, 964,
	954, 965, 314, 315, 316, 966, 936, 937, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 2180, 326,
	986, 967, 327, 328, 968, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 890, 341, 969, 344, 345, 347, 970, 346,
	845, 218, 971, 348, 868, 955, 349, 925, 351, 352,
	0, 899, 354, 900, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 972, 362, 973, 980, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	981, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 918, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 974, 399, 400, 401, 402, 855,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 891, 892, 894, 895, 416, 422, 423,
	424, 948, 425, 405, 406, 426, 427, 975, 428, 429,
	913, 893, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 959, 437, 438, 439, 982, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 889, 0, 451,
	932, 933, 934, 935, 0, 458, 2181, 452, 453, 983,
	454, 984, 866, 455, 456, 457, 0, 459, 460, 0,
	849, 461, 462, 463, 464, 465, 467, 949, 468, 0,
	897, 469, 470, 471, 520, 929, 977, 0, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 2138, 870, 902, 859,
	860, 861, 857, 858, 871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 951, 876, 0,
	0, 0, 225, 227, 226, 228, 229, 480, 917, 896,
	928, 886, 927, 926, 0, 233, 888, 887, 236, 237,
	238, 878, 950, 239, 987, 988, 486, 0, 240, 957,
	0, 940, 0, 241, 242, 243, 244, 245, 246, 0,
	248, 249, 250, 247, 0, 251, 0, 252, 253, 254,
	0, 960, 255, 256, 943, 941, 942, 947, 945, 944,
	946, 257, 258, 259, 260, 931, 262, 924, 923, 848,
	263, 0, 265, 264, 0, 266, 0, 0, 267, 922,
	269, 0, 270, 0, 271, 272, 0, 273, 854, 274,
	275, 277, 279, 276, 280, 281, 282, 283, 978, 979,
	867, 216, 0, 0, 0, 0, 0, 284, 285, 286,
	921, 919, 920, 0, 289, 0, 290, 0, 0, 961,
	291, 292, 0, 293, 985, 0, 877, 294, 0, 295,
	296, 297, 298, 952, 953, 956, 350, 963, 299, 300,
	0, 301, 302, 898, 0, 0, 217, 303, 305, 312,
	0, 962, 306, 910, 901, 912, 914, 915, 916, 911,
	0, 903, 0, 313, 964, 954, 965, 314, 315, 316,
	966, 936, 937, 0, 0, 319, 320, 321, 322, 323,
	0, 325, 324, 0, 326, 986, 967, 327, 328, 968,
	0, 329, 330, 0, 0, 331, 332, 333, 0, 334,
	335, 337, 339, 336, 338, 340, 342, 890, 341, 969,
	344, 345, 347, 970, 346, 845, 218, 971, 348, 868,
	955, 349, 925, 351, 352, 0, 899, 354, 900, 0,
	0, 357, 358, 359, 0, 0, 360, 361, 506, 972,
	362, 973, 980, 363, 356, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 981, 373, 509, 374, 0,
	375, 0, 376, 377, 378, 379, 380, 381, 382, 918,
	383, 384, 0, 385, 386, 387, 388, 389, 0, 391,
	392, 393, 390, 394, 395, 396, 397, 0, 398, 974,
	399, 400, 401, 402, 855, 403, 0, 404, 408, 409,
	410, 411, 412, 413, 414, 0, 420, 421, 891, 892,
	894, 895, 416, 422, 423, 424, 948, 425, 405, 406,
	426, 427, 975, 428, 429, 913, 893, 431, 0, 432,
	433, 434, 435, 407, 436, 440, 959, 437, 438, 439,
	982, 0, 443, 444, 442, 0, 445, 446, 447, 448,
	449, 278, 889, 0, 451, 932, 933, 934, 935, 0,
	458, 0, 452, 453, 983, 454, 984, 866, 455, 456,
	457, 0, 459, 460, 0, 849, 461, 462, 463, 464,
	465, 467, 949, 468, 0, 897, 469, 470, 471, 520,
	929, 977, 0, 473, 472, 523, 0, 0, 0, 0,
	474, 475, 524, 476, 477, 478, 846, 0, 0, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 0, 842,
	843, 0, 0, 0, 0, 0, 0, 0, 872, 2136,
	0, 2135, 870, 902, 859, 860, 861, 857, 858, 871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 951, 876, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 917, 896, 928, 886, 927, 926, 0,
	233, 888, 887, 236, 237, 238, 878, 950, 239, 987,
	988, 486, 0, 240, 957, 0, 940, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 960, 255, 256, 943,
	941, 942, 947, 945, 944, 946, 257, 258, 259, 260,
	931, 262, 924, 923, 848, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 922, 269, 0, 270, 0, 271,
	272, 0, 273, 854, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 978, 979, 867, 216, 0, 0, 0,
	0, 0, 284, 285, 286, 921, 919, 920, 0, 289,
	0, 290, 0, 0, 961, 291, 292, 0, 293, 985,
	0, 877, 294, 0, 295, 296, 297, 298, 952, 953,
	956, 350, 963, 299, 300, 0, 301, 302, 898, 0,
	0, 217, 303, 305, 312, 0, 962, 306, 910, 901,
	912, 914, 915, 916, 911, 0, 903, 0, 313, 964,
	954, 965, 314, 315, 316, 966, 936, 937, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	986, 967, 327, 328, 968, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 890, 341, 969, 344, 345, 347, 970, 346,
	845, 218, 971, 348, 868, 955, 349, 925, 351, 352,
	0, 899, 354, 900, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 972, 362, 973, 980, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	981, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 918, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 974, 399, 400, 401, 402, 855,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 891, 892, 894, 895, 416, 422, 423,
	424, 948, 425, 405, 406, 426, 427, 975, 428, 429,
	913, 893, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 959, 437, 438, 439, 982, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 889, 0, 451,
	932, 933, 934, 935, 0, 458, 0, 452, 453, 983,
	454, 984, 866, 455, 456, 457, 0, 459, 460, 0,
	849, 461, 462, 463, 464, 465, 467, 949, 468, 0,
	897, 469, 470, 471, 520, 929, 977, 0, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 872, 2133, 0, 1399, 870, 902, 859,
	860, 861, 857, 858, 871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 951, 876, 0,
	0, 0, 225, 227, 226, 228, 229, 480, 917, 896,
	928, 886, 927, 926, 0, 233, 888, 887, 236, 237,
	238, 878, 950, 239, 987, 988, 486, 0, 240, 957,
	0, 940, 0, 241, 242, 243, 244, 245, 246, 0,
	248, 249, 250, 247, 0, 251, 0, 252, 253, 254,
	0, 960, 255, 256, 943, 941, 942, 947, 945, 944,
	946, 257, 258, 259, 260, 931, 262, 924, 923, 848,
	263, 0, 265, 264, 0, 266, 0, 0, 267, 922,
	269, 0, 270, 0, 271, 272, 0, 273, 854, 274,
	275, 277, 279, 276, 280, 281, 282, 283, 978, 979,
	867, 216, 0, 0, 0, 0, 0, 284, 285, 286,
	921, 919, 920, 0, 289, 0, 290, 0, 0, 961,
	291, 292, 0, 293, 985, 0, 877, 294, 0, 295,
	296, 297, 298, 952, 953, 956, 350, 963, 299, 300,
	0, 301, 302, 898, 0, 0, 217, 303, 305, 312,
	0, 962, 306, 910, 901, 912, 914, 915, 916, 911,
	0, 903, 0, 313, 964, 954, 965, 314, 315, 316,
	966, 936, 937, 0, 0, 319, 320, 321, 322, 323,
	0, 325, 324, 0, 326, 986, 967, 327, 328, 968,
	0, 329, 330, 0, 0, 331, 332, 333, 0, 334,
	335, 337, 339, 336, 338, 340, 342, 890, 341, 969,
	344, 345, 347, 970, 346, 845, 218, 971, 348, 868,
	955, 349, 925, 351, 352, 0, 899, 354, 900, 0,
	0, 357, 358, 359, 0, 0, 360, 361, 506, 972,
	362, 973, 980, 363, 356, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 981, 373, 509, 374, 0,
	375, 0, 376, 377, 378, 379, 380, 381, 382, 918,
	383, 384, 0, 385, 386, 387, 388, 389, 0, 391,
	392, 393, 390, 394, 395, 396, 397, 0, 398, 974,
	399, 400, 401, 402, 855, 403, 0, 404, 408, 409,
	410, 411, 412, 413, 414, 0, 420, 421, 891, 892,
	894, 895, 416, 422, 423, 424, 948, 425, 405, 406,
	426, 427, 975, 428, 429, 913, 893, 431, 0, 432,
	433, 434, 435, 407, 436, 440, 959, 437, 438, 439,
	982, 0, 443, 444, 442, 0, 445, 446, 447, 448,
	449, 278, 889, 0, 451, 932, 933, 934, 935, 0,
	458, 0, 452, 453, 983, 454, 984, 866, 455, 456,
	457, 0, 459, 460, 0, 849, 461, 462, 463, 464,
	465, 467, 949, 468, 0, 897, 469, 470, 471, 520,
	929, 977, 0, 473, 472, 523, 1398, 0, 0, 0,
	474, 475, 524, 476, 477, 478, 846, 0, 0, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 0, 842,
	843, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 838, 870, 902, 859, 860, 861, 857, 858, 871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 951, 876, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 917, 896, 928, 886, 927, 926, 0,
	233, 888, 887, 236, 237, 238, 878, 950, 239, 987,
	988, 486, 0, 240, 957, 0, 940, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 960, 255, 256, 943,
	941, 942, 947, 945, 944, 946, 257, 258, 259, 260,
	931, 262, 924, 923, 848, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 922, 269, 0, 270, 0, 271,
	272, 0, 273, 854, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 978, 979, 867, 216, 0, 0, 0,
	0, 0, 284, 285, 286, 921, 919, 920, 0, 289,
	0, 290, 0, 0, 961, 291, 292, 0, 293, 985,
	0, 877, 294, 0, 295, 296, 297, 298, 952, 953,
	956, 350, 963, 299, 300, 0, 301, 302, 898, 0,
	0, 217, 303, 305, 312, 0, 962, 306, 910, 901,
	912, 914, 915, 916, 911, 0, 903, 0, 313, 964,
	954, 965, 314, 315, 316, 966, 936, 937, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	986, 967, 327, 328, 968, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 890, 341, 969, 344, 345, 347, 970, 346,
	845, 218, 971, 348, 868, 955, 349, 925, 351, 352,
	0, 899, 354, 900, 850, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 972, 362, 973, 980, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	981, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 918, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 974, 399, 400, 401, 402, 855,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 891, 892, 894, 895, 416, 422, 423,
	424, 948, 425, 405, 406, 426, 427, 975, 428, 429,
	913, 893, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 959, 437, 438, 439, 982, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 889, 0, 451,
	932, 933, 934, 935, 0, 458, 0, 452, 453, 983,
	454, 984, 866, 455, 456, 457, 0, 459, 460, 0,
	849, 461, 462, 463, 464, 465, 467, 949, 468, 0,
	897, 469, 470, 471, 520, 929, 977, 0, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 902, 859, 860, 861,
	857, 858, 871, 872, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 951, 876, 0, 0, 0,
	225, 227, 226, 228, 229, 480, 917, 896, 928, 886,
	927, 926, 0, 233, 888, 887, 236, 237, 238, 878,
	950, 239, 987, 988, 486, 0, 240, 957, 0, 940,
	0, 241, 242, 243, 244, 245, 246, 0, 248, 249,
	250, 247, 0, 251, 0, 252, 3523, 254, 0, 960,
	255, 256, 943, 941, 942, 947, 945, 944, 946, 257,
	258, 259, 260, 931, 262, 924, 923, 848, 263, 0,
	265, 264, 0, 266, 0, 0, 267, 922, 269, 0,
	270, 0, 271, 272, 0, 273, 854, 274, 275, 277,
	279, 276, 280, 281, 282, 283, 978, 979, 867, 216,
	0, 0, 0, 0, 0, 284, 285, 286, 921, 919,
	920, 0, 289, 0, 290, 0, 0, 961, 291, 292,
	0, 293, 985, 0, 877, 294, 0, 295, 296, 297,
	298, 952, 953, 956, 350, 963, 299, 300, 0, 301,
	302, 898, 0, 0, 217, 303, 305, 312, 0, 962,
	306, 910, 901, 912, 914, 915, 916, 911, 0, 903,
	0, 313, 964, 954, 965, 314, 315, 316, 966, 936,
	937, 0, 0, 319, 320, 321, 322, 323, 0, 325,
	324, 0, 326, 986, 967, 327, 328, 968, 0, 329,
	330, 0, 0, 331, 332, 333, 0, 334, 335, 337,
	339, 336, 338, 340, 342, 890, 341, 969, 344, 345,
	347, 970, 346, 845, 218, 971, 348, 868, 955, 349,
	925, 351, 352, 0, 899, 354, 900, 850, 0, 357,
	358, 359, 0, 0, 360, 361, 506, 972, 362, 973,
	980, 363, 356, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 981, 373, 509, 374, 0, 375, 0,
	376, 377, 378, 379, 380, 381, 382, 918, 383, 384,
	0, 385, 386, 387, 388, 389, 0, 391, 392, 393,
	390, 394, 395, 396, 397, 0, 398, 974, 399, 400,
	401, 402, 855, 403, 0, 404, 408, 409, 410, 411,
	412, 413, 414, 0, 420, 421, 891, 892, 894, 895,
	416, 422, 423, 424, 948, 425, 405, 406, 426, 427,
	975, 428, 429, 913, 893, 431, 0, 432, 433, 434,
	435, 407, 436, 440, 959, 437, 438, 439, 982, 0,
	443, 444, 442, 0, 445, 446, 447, 448, 449, 278,
	889, 0, 451, 932, 933, 934, 935, 0, 458, 0,
	452, 453, 983, 454, 984, 866, 455, 456, 457, 0,
	459, 460, 0, 849, 461, 462, 463, 464, 465, 467,
	949, 468, 0, 897, 469, 470, 471, 520, 929, 977,
	0, 473, 472, 523, 0, 0, 0, 0, 474, 475,
	524, 476, 477, 478, 846, 0, 0, 0, 0, 0,
	844, 0, 0, 0, 0, 0, 0, 842, 843, 902,
	859, 860, 861, 857, 858, 871, 872, 0, 0, 0,
	870, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 951, 876,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 917,
	896, 928, 886, 927, 926, 0, 233, 888, 887, 236,
	237, 238, 878, 950, 239, 987, 988, 486, 0, 240,
	957, 0, 940, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 3376,
	254, 0, 960, 255, 256, 943, 941, 942, 947, 945,
	944, 946, 257, 258, 259, 260, 931, 262, 924, 923,
	848, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	922, 269, 0, 270, 0, 271, 272, 0, 273, 854,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 978,
	979, 867, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 921, 919, 920, 0, 289, 0, 290, 0, 0,
	961, 291, 292, 0, 293, 985, 0, 877, 294, 0,
	295, 296, 297, 298, 952, 953, 956, 350, 963, 299,
	300, 0, 301, 302, 898, 0, 0, 217, 303, 305,
	312, 0, 962, 306, 910, 901, 912, 914, 915, 916,
	911, 0, 903, 0, 313, 964, 954, 965, 314, 315,
	316, 966, 936, 937, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 986, 967, 327, 328,
	968, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 890, 341,
	969, 344, 345, 347, 970, 346, 845, 218, 971, 348,
	868, 955, 349, 925, 351, 352, 0, 899, 354, 900,
	850, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	972, 362, 973, 980, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 981, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	918, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	974, 399, 400, 401, 402, 855, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 891,
	892, 894, 895, 416, 422, 423, 424, 948, 425, 405,
	406, 426, 427, 975, 428, 429, 913, 893, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 959, 437, 438,
	439, 982, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 889, 0, 451, 932, 933, 934, 935,
	0, 458, 0, 452, 453, 983, 454, 984, 866, 455,
	456, 457, 0, 459, 460, 0, 849, 461, 462, 463,
	464, 465, 467, 949, 468, 0, 897, 469, 470, 471,
	520, 929, 977, 0, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 902, 859, 860, 861, 857, 858, 871, 872,
	0, 0, 0, 870, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 951, 876, 0, 0, 0, 225, 227, 226, 228,
	229, 480, 917, 896, 928, 886, 927, 926, 0, 233,
	888, 887, 236, 237, 238, 878, 950, 239, 987, 988,
	486, 0, 240, 957, 0, 940, 0, 241, 242, 243,
	244, 245, 246, 0, 248, 249, 250, 247, 0, 251,
	0, 252, 253, 254, 0, 960, 255, 256, 943, 941,
	942, 947, 945, 944, 946, 257, 258, 259, 260, 931,
	262, 924, 923, 848, 263, 0, 265, 264, 0, 266,
	0, 0, 267, 922, 269, 0, 270, 0, 271, 272,
	0, 273, 854, 274, 275, 277, 279, 276, 280, 281,
	282, 283, 978, 979, 867, 216, 0, 0, 0, 0,
	0, 284, 285, 286, 921, 919, 920, 0, 289, 0,
	290, 0, 0, 961, 291, 292, 0, 293, 985, 0,
	877, 294, 0, 295, 296, 297, 298, 952, 953, 956,
	350, 963, 299, 300, 0, 301, 302, 898, 0, 0,
	217, 303, 305, 312, 0, 962, 306, 910, 901, 912,
	914, 915, 916, 911, 0, 903, 0, 313, 964, 954,
	965, 314, 315, 316, 966, 936, 937, 0, 0, 319,
	320, 321, 322, 323, 0, 325, 324, 0, 326, 986,
	967, 327, 328, 968, 0, 329, 330, 0, 0, 331,
	332, 333, 0, 334, 335, 337, 339, 336, 338, 340,
	342, 890, 341, 969, 344, 345, 347, 970, 346, 845,
	3097, 971, 348, 868, 955, 349, 925, 351, 352, 0,
	899, 354, 900, 0, 0, 357, 358, 359, 0, 0,
	360, 361, 506, 972, 362, 973, 980, 363, 356, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 981,
	373, 509, 374, 0, 375, 0, 376, 377, 378, 379,
	380, 381, 382, 918, 383, 384, 0, 385, 386, 387,
	388, 389, 0, 391, 392, 393, 390, 394, 395, 396,
	397, 0, 398, 974, 399, 400, 401, 402, 855, 403,
	0, 404, 408, 409, 410, 411, 412, 413, 414, 0,
	420, 421, 891, 892, 894, 895, 416, 422, 423, 424,
	948, 425, 405, 406, 426, 427, 975, 428, 429, 913,
	893, 431, 0, 432, 433, 434, 435, 407, 436, 440,
	959, 437, 438, 439, 982, 0, 443, 444, 442, 0,
	445, 446, 447, 448, 449, 278, 889, 0, 451, 932,
	933, 934, 935, 0, 458, 0, 452, 453, 983, 454,
	984, 866, 455, 456, 457, 0, 459, 460, 0, 849,
	461, 462, 463, 464, 465, 467, 949, 468, 0, 897,
	469, 470, 471, 520, 929, 977, 0, 473, 472, 523,
	0, 0, 0, 0, 474, 475, 524, 476, 477, 478,
	846, 0, 0, 0, 0, 0, 844, 0, 0, 0,
	0, 0, 0, 842, 843, 1604, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 870, 902, 859, 860,
	861, 857, 858, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 951, 876, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 917, 896, 928,
	886, 927, 926, 0, 233, 888, 887, 236, 237, 238,
	878, 950, 239, 987, 988, 486, 0, 240, 957, 0,
	940, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 943, 941, 942, 947, 945, 944, 946,
	257, 258, 259, 260, 931, 262, 924, 923, 848, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 922, 269,
	0, 270, 0, 271, 272, 0, 273, 854, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 978, 979, 867,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 921,
	919, 920, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 985, 0, 877, 294, 0, 295, 296,
	297, 298, 952, 953, 956, 350, 963, 299, 300, 0,
	301, 302, 898, 0, 0, 217, 303, 305, 312, 0,
	962, 306, 910, 901, 912, 914, 915, 916, 911, 0,
	903, 0, 313, 964, 954, 965, 314, 315, 316, 966,
	936, 937, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 986, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 890, 341, 969, 344,
	345, 347, 970, 346, 845, 218, 971, 348, 868, 955,
	349, 925, 351, 352, 0, 899, 354, 900, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 980, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 981, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 918, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 855, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 891, 892, 894,
	895, 416, 422, 423, 424, 948, 425, 405, 406, 426,
	427, 975, 428, 429, 913, 893, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 959, 437, 438, 439, 982,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 889, 0, 451, 932, 933, 934, 935, 0, 458,
	0, 452, 453, 983, 454, 984, 866, 455, 456, 457,
	0, 459, 460, 0, 849, 461, 462, 463, 464, 465,
	467, 949, 468, 0, 897, 469, 470, 471, 520, 929,
	977, 2902, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	902, 859, 860, 861, 857, 858, 871, 872, 0, 0,
	0, 870, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 951,
	876, 0, 0, 0, 225, 227, 226, 228, 229, 480,
	917, 896, 928, 886, 927, 926, 0, 233, 888, 887,
	236, 237, 238, 878, 950, 239, 987, 988, 486, 0,
	240, 957, 0, 940, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 960, 255, 256, 943, 941, 942, 947,
	945, 944, 946, 257, 258, 259, 260, 931, 262, 924,
	923, 848, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 922, 269, 0, 270, 0, 271, 272, 0, 273,
	854, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	978, 979, 867, 216, 0, 0, 0, 0, 0, 284,
	285, 286, 921, 919, 920, 0, 289, 0, 290, 0,
	0, 961, 291, 292, 0, 293, 985, 0, 877, 294,
	0, 295, 296, 297, 298, 952, 953, 956, 350, 963,
	299, 300, 0, 301, 302, 898, 0, 0, 2005, 303,
	305, 312, 0, 962, 306, 910, 901, 912, 914, 915,
	916, 911, 0, 903, 0, 313, 964, 954, 965, 314,
	315, 316, 966, 936, 937, 0, 0, 319, 320, 321,
	322, 323, 0, 325, 324, 0, 326, 986, 967, 327,
	328, 968, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 890,
	341, 969, 344, 345, 347, 970, 346, 845, 218, 971,
	348, 868, 955, 349, 925, 351, 352, 0, 899, 354,
	900, 0, 0, 357, 358, 359, 0, 0, 360, 361,
	506, 972, 362, 973, 980, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 981, 373, 509,
	374, 2004, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 918, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 974, 399, 400, 401, 402, 855, 403, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 0, 420, 421,
	891, 892, 894, 895, 416, 422, 423, 424, 948, 425,
	405, 406, 426, 427, 975, 428, 429, 913, 893, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 959, 437,
	438, 439, 982, 0, 443, 444, 442, 0, 445, 446,
	447, 448, 449, 278, 889, 0, 451, 932, 933, 934,
	935, 0, 458, 0, 452, 453, 983, 454, 984, 866,
	455, 456, 457, 0, 459, 460, 0, 849, 461, 462,
	463, 464, 465, 467, 949, 468, 0, 897, 469, 470,
	471, 520, 929, 977, 0, 473, 472, 523, 0, 0,
	0, 0, 474, 475, 524, 476, 477, 478, 846, 0,
	0, 0, 0, 0, 844, 0, 0, 0, 0, 0,
	0, 842, 843, 902, 859, 860, 861, 857, 858, 871,
	872, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 951, 876, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 917, 896, 928, 886, 927, 926, 0,
	233, 888, 887, 236, 237, 238, 878, 950, 239, 987,
	988, 486, 0, 240, 957, 0, 940, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 960, 255, 256, 943,
	941, 942, 947, 945, 944, 946, 257, 258, 259, 260,
	931, 262, 924, 923, 848, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 922, 269, 0, 270, 0, 271,
	272, 0, 273, 854, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 978, 979, 867, 216, 0, 0, 0,
	0, 0, 284, 285, 286, 921, 919, 920, 0, 289,
	0, 290, 0, 0, 961, 291, 292, 0, 293, 985,
	0, 877, 294, 0, 295, 296, 297, 298, 952, 953,
	956, 350, 963, 299, 300, 0, 301, 302, 898, 0,
	0, 217, 303, 305, 312, 0, 962, 306, 910, 901,
	912, 914, 915, 916, 911, 0, 903, 0, 313, 964,
	954, 965, 314, 315, 316, 966, 936, 937, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	986, 967, 327, 328, 968, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 890, 341, 969, 344, 345, 347, 970, 346,
	845, 218, 971, 348, 868, 955, 349, 925, 351, 352,
	0, 899, 354, 900, 850, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 972, 362, 973, 980, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	981, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 918, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 974, 399, 400, 401, 402, 855,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 891, 892, 894, 895, 416, 422, 423,
	424, 948, 425, 405, 406, 426, 427, 975, 428, 429,
	913, 893, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 959, 437, 438, 439, 982, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 889, 0, 451,
	932, 933, 934, 935, 0, 458, 0, 452, 453, 983,
	454, 984, 866, 455, 456, 457, 0, 459, 460, 0,
	849, 461, 462, 463, 464, 465, 467, 949, 468, 0,
	897, 469, 470, 471, 520, 929, 977, 0, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 902, 859, 860, 861,
	857, 858, 871, 872, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 951, 876, 0, 0, 0,
	225, 227, 226, 228, 229, 480, 917, 896, 928, 886,
	927, 926, 0, 233, 888, 887, 236, 237, 238, 878,
	950, 239, 987, 988, 486, 0, 240, 957, 0, 940,
	0, 241, 242, 243, 244, 245, 246, 0, 248, 249,
	250, 247, 0, 251, 0, 252, 253, 254, 0, 960,
	255, 256, 943, 941, 942, 947, 945, 944, 946, 257,
	258, 259, 260, 931, 262, 924, 923, 848, 263, 0,
	265, 264, 0, 266, 0, 0, 267, 922, 269, 0,
	270, 0, 271, 272, 0, 273, 854, 274, 275, 277,
	279, 276, 280, 281, 282, 283, 978, 979, 867, 216,
	0, 0, 0, 0, 0, 284, 285, 286, 921, 919,
	920, 0, 289, 0, 290, 0, 0, 961, 291, 292,
	0, 293, 985, 0, 877, 294, 0, 295, 296, 297,
	298, 952, 953, 956, 350, 963, 299, 300, 0, 301,
	302, 898, 0, 0, 217, 303, 305, 312, 0, 962,
	306, 910, 901, 912, 914, 915, 916, 911, 0, 903,
	0, 313, 964, 954, 965, 314, 315, 316, 966, 936,
	937, 0, 0, 319, 320, 321, 322, 323, 0, 325,
	324, 0, 326, 986, 967, 327, 328, 968, 0, 329,
	330, 0, 0, 331, 332, 333, 0, 334, 335, 337,
	339, 336, 338, 340, 342, 890, 341, 969, 344, 345,
	347, 970, 346, 845, 218, 971, 348, 868, 955, 349,
	925, 351, 352, 0, 899, 354, 900, 0, 0, 357,
	358, 359, 0, 0, 360, 361, 506, 972, 362, 973,
	980, 363, 356, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 981, 373, 509, 374, 0, 375, 0,
	376, 377, 378, 379, 380, 381, 382, 918, 383, 384,
	0, 385, 386, 387, 388, 389, 0, 391, 392, 393,
	390, 394, 395, 396, 397, 0, 398, 974, 399, 400,
	401, 402, 855, 403, 0, 404, 408, 409, 410, 411,
	412, 413, 414, 0, 420, 421, 891, 892, 894, 895,
	416, 422, 423, 424, 948, 425, 405, 406, 426, 427,
	975, 428, 429, 913, 893, 431, 0, 432, 433, 434,
	435, 407, 436, 440, 959, 437, 438, 439, 982, 0,
	443, 444, 442, 0, 445, 446, 447, 448, 449, 278,
	889, 0, 451, 932, 933, 934, 935, 0, 458, 0,
	452, 453, 983, 454, 984, 866, 455, 456, 457, 0,
	459, 460, 0, 849, 461, 462, 463, 464, 465, 467,
	949, 468, 0, 897, 469, 470, 471, 520, 929, 977,
	0, 473, 472, 523, 0, 0, 0, 0, 474, 475,
	524, 476, 477, 478, 846, 0, 0, 0, 0, 0,
	844, 0, 0, 0, 0, 0, 0, 842, 843, 1604,
	0, 0, 0, 0, 0, 0, 872, 0, 0, 0,
	870, 902, 859, 860, 861, 857, 858, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	951, 876, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 917, 896, 928, 886, 927, 926, 0, 233, 888,
	887, 236, 237, 238, 878, 950, 239, 987, 988, 486,
	0, 240, 957, 0, 940, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 960, 255, 256, 943, 941, 942,
	947, 945, 944, 946, 257, 258, 259, 260, 931, 262,
	924, 923, 848, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 922, 269, 0, 270, 0, 271, 272, 0,
	273, 854, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 978, 979, 867, 216, 0, 0, 0, 0, 0,
	284, 285, 286, 921, 919, 920, 0, 289, 0, 290,
	0, 2184, 961, 291, 292, 0, 293, 985, 0, 877,
	294, 0, 295, 296, 297, 298, 952, 953, 956, 350,
	963, 299, 300, 0, 301, 302, 898, 0, 0, 217,
	303, 305, 312, 0, 962, 306, 910, 901, 912, 914,
	915, 916, 911, 0, 903, 0, 313, 964, 954, 965,
	314, 315, 316, 966, 936, 937, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 986, 967,
	327, 328, 968, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	890, 341, 969, 344, 345, 347, 970, 346, 845, 218,
	971, 348, 868, 955, 349, 925, 351, 352, 0, 899,
	354, 900, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 972, 362, 973, 980, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 981, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 918, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 974, 399, 400, 401, 402, 855, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 891, 892, 894, 895, 416, 422, 423, 424, 948,
	425, 405, 406, 426, 427, 975, 428, 429, 913, 893,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 959,
	437, 438, 439, 982, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 889, 0, 451, 932, 933,
	934, 935, 0, 458, 0, 452, 453, 983, 454, 984,
	866, 455, 456, 457, 0, 459, 460, 0, 849, 461,
	462, 463, 464, 465, 467, 949, 468, 0, 897, 469,
	470, 471, 520, 929, 977, 0, 473, 472, 523, 0,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 902, 859, 860, 861, 857, 858,
	871, 872, 0, 0, 0, 870, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 951, 876, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 917, 896, 928, 886, 927, 926,
	0, 233, 888, 887, 236, 237, 238, 878, 950, 239,
	987, 988, 486, 0, 240, 957, 0, 940, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	943, 941, 942, 947, 945, 944, 946, 257, 258, 259,
	260, 931, 262, 924, 923, 848, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 922, 269, 0, 270, 0,
	271, 272, 0, 273, 854, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 978, 979, 867, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 921, 919, 920, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	985, 0, 877, 294, 0, 295, 296, 297, 298, 952,
	953, 956, 350, 963, 299, 300, 0, 301, 302, 898,
	0, 0, 217, 303, 305, 312, 0, 962, 306, 910,
	901, 912, 914, 915, 916, 911, 0, 903, 0, 313,
	964, 954, 965, 314, 315, 316, 966, 936, 937, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 986, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 890, 341, 969, 344, 345, 347, 970,
	346, 845, 218, 971, 348, 868, 955, 349, 925, 351,
	352, 0, 899, 354, 900, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 980, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 981, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 918, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	855, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 0, 420, 421, 891, 892, 894, 895, 416, 422,
	423, 424, 948, 425, 405, 406, 426, 427, 975, 428,
	429, 913, 893, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 959, 437, 438, 439, 982, 0, 443, 444,
	442, 0, 445, 446, 447, 448, 449, 278, 889, 0,
	451, 932, 933, 934, 935, 0, 458, 0, 452, 453,
	983, 454, 984, 866, 455, 456, 457, 0, 459, 460,
	0, 849, 461, 462, 463, 464, 465, 467, 949, 468,
	0, 897, 469, 470, 471, 520, 929, 977, 0, 473,
	472, 523, 0, 0, 0, 0, 474, 475, 524, 476,
	477, 478, 846, 0, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 842, 843, 0, 0, 0,
	0, 0, 0, 0, 872, 1542, 0, 2189, 870, 902,
	859, 860, 861, 857, 858, 871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 951, 876,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 917,
	896, 928, 886, 927, 926, 0, 233, 888, 887, 236,
	237, 238, 878, 950, 239, 987, 988, 486, 0, 240,
	957, 0, 940, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 960, 255, 256, 943, 941, 942, 947, 945,
	944, 946, 257, 258, 259, 260, 931, 262, 924, 923,
	848, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	922, 269, 0, 270, 0, 271, 272, 0, 273, 854,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 978,
	979, 867, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 921, 919, 920, 0, 289, 0, 290, 0, 0,
	961, 291, 292, 0, 293, 985, 0, 877, 294, 0,
	295, 296, 297, 298, 952, 953, 956, 350, 963, 299,
	300, 0, 301, 302, 898, 0, 0, 217, 303, 305,
	312, 0, 962, 306, 910, 901, 912, 914, 915, 916,
	911, 0, 903, 0, 313, 964, 954, 965, 314, 315,
	316, 966, 936, 937, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 986, 967, 327, 328,
	968, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 890, 341,
	969, 344, 345, 347, 970, 346, 845, 218, 971, 348,
	868, 955, 349, 925, 351, 352, 0, 899, 354, 900,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	972, 362, 973, 980, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 981, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	918, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	974, 399, 400, 401, 402, 855, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 891,
	892, 894, 895, 416, 422, 423, 424, 948, 425, 405,
	406, 426, 427, 975, 428, 429, 913, 893, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 959, 437, 438,
	439, 982, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 889, 0, 451, 932, 933, 934, 935,
	0, 458, 0, 452, 453, 983, 454, 984, 866, 455,
	456, 457, 0, 459, 460, 0, 849, 461, 462, 463,
	464, 465, 467, 949, 468, 0, 897, 469, 470, 471,
	520, 929, 977, 0, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 2187, 870, 902, 859, 860, 861, 857, 858,
	871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 951, 876, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 917, 896, 928, 886, 927, 926,
	0, 233, 888, 887, 236, 237, 238, 878, 950, 239,
	987, 988, 486, 0, 240, 957, 0, 940, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	943, 941, 942, 947, 945, 944, 946, 257, 258, 259,
	260, 931, 262, 924, 923, 848, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 922, 269, 0, 270, 0,
	271, 272, 0, 273, 854, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 978, 979, 867, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 921, 919, 920, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	985, 0, 877, 294, 0, 295, 296, 297, 298, 952,
	953, 956, 350, 963, 299, 300, 0, 301, 302, 898,
	0, 0, 217, 303, 305, 312, 0, 962, 306, 910,
	901, 912, 914, 915, 916, 911, 0, 903, 0, 313,
	964, 954, 965, 314, 315, 316, 966, 936, 937, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 986, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 890, 341, 969, 344, 345, 347, 970,
	346, 845, 218, 971, 348, 868, 955, 349, 925, 351,
	352, 0, 899, 354, 900, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 980, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 981, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 918, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	855, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 0, 420, 421, 891, 892, 894, 895, 416, 422,
	423, 424, 948, 425, 405, 406, 426, 427, 975, 428,
	429, 913, 893, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 959, 437, 438, 439, 982, 0, 443, 444,
	442, 0, 445, 446, 447, 448, 449, 278, 889, 0,
	451, 932, 933, 934, 935, 0, 458, 0, 452, 453,
	983, 454, 984, 866, 455, 456, 457, 0, 459, 460,
	0, 849, 461, 462, 463, 464, 465, 467, 949, 468,
	0, 897, 469, 470, 471, 520, 929, 977, 0, 473,
	472, 523, 0, 0, 0, 0, 474, 475, 524, 476,
	477, 478, 846, 0, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 842, 843, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 2175, 870, 902,
	859, 860, 861, 857, 858, 871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 951, 876,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 917,
	896, 928, 886, 927, 926, 0, 233, 888, 887, 236,
	237, 238, 878, 950, 239, 987, 988, 486, 0, 240,
	957, 0, 940, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 960, 255, 256, 943, 941, 942, 947, 945,
	944, 946, 257, 258, 259, 260, 931, 262, 924, 923,
	848, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	922, 269, 0, 270, 0, 271, 272, 0, 273, 854,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 978,
	979, 867, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 921, 919, 920, 0, 289, 0, 290, 0, 0,
	961, 291, 292, 0, 293, 985, 0, 877, 294, 0,
	295, 296, 297, 298, 952, 953, 956, 350, 963, 299,
	300, 0, 301, 302, 898, 0, 0, 217, 303, 305,
	312, 0, 962, 306, 910, 901, 912, 914, 915, 916,
	911, 0, 903, 0, 313, 964, 954, 965, 314, 315,
	316, 966, 936, 937, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 986, 967, 327, 328,
	968, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 890, 341,
	969, 344, 345, 347, 970, 346, 845, 218, 971, 348,
	868, 955, 349, 925, 351, 352, 0, 899, 354, 900,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	972, 362, 973, 980, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 981, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	918, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	974, 399, 400, 401, 402, 855, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 891,
	892, 894, 895, 416, 422, 423, 424, 948, 425, 405,
	406, 426, 427, 975, 428, 429, 913, 893, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 959, 437, 438,
	439, 982, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 889, 0, 451, 932, 933, 934, 935,
	0, 458, 0, 452, 453, 983, 454, 984, 866, 455,
	456, 457, 0, 459, 460, 0, 849, 461, 462, 463,
	464, 465, 467, 949, 468, 0, 897, 469, 470, 471,
	520, 929, 977, 0, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 2164, 870, 902, 859, 860, 861, 857, 858,
	871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 951, 876, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 917, 896, 928, 886, 927, 926,
	0, 233, 888, 887, 236, 237, 238, 878, 950, 239,
	987, 988, 486, 0, 240, 957, 0, 940, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	943, 941, 942, 947, 945, 944, 946, 257, 258, 259,
	260, 931, 262, 924, 923, 848, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 922, 269, 0, 270, 0,
	271, 272, 0, 273, 854, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 978, 979, 867, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 921, 919, 920, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	985, 0, 877, 294, 0, 295, 296, 297, 298, 952,
	953, 956, 350, 963, 299, 300, 0, 301, 302, 898,
	0, 0, 217, 303, 305, 312, 0, 962, 306, 910,
	901, 912, 914, 915, 916, 911, 0, 903, 0, 313,
	964, 954, 965, 314, 315, 316, 966, 936, 937, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 986, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 890, 341, 969, 344, 345, 347, 970,
	346, 845, 218, 971, 348, 868, 955, 349, 925, 351,
	352, 0, 899, 354, 900, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 980, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 981, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 918, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	855, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 0, 420, 421, 891, 892, 894, 895, 416, 422,
	423, 424, 948, 425, 405, 406, 426, 427, 975, 428,
	429, 913, 893, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 959, 437, 438, 439, 982, 0, 443, 444,
	442, 0, 445, 446, 447, 448, 449, 278, 889, 0,
	451, 932, 933, 934, 935, 0, 458, 0, 452, 453,
	983, 454, 984, 866, 455, 456, 457, 0, 459, 460,
	0, 849, 461, 462, 463, 464, 465, 467, 949, 468,
	0, 897, 469, 470, 471, 520, 929, 977, 0, 473,
	472, 523, 0, 0, 0, 0, 474, 475, 524, 476,
	477, 478, 846, 0, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 842, 843, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 2162, 870, 2153,
	2160, 860, 861, 857, 858, 871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 951, 876,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 917,
	896, 928, 886, 927, 926, 0, 233, 888, 887, 236,
	237, 238, 878, 950, 239, 987, 988, 486, 0, 240,
	957, 0, 940, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 960, 255, 256, 943, 941, 942, 947, 945,
	944, 946, 257, 258, 259, 260, 931, 2156, 924, 923,
	848, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	922, 269, 0, 270, 0, 271, 272, 0, 273, 854,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 978,
	979, 867, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 921, 919, 920, 0, 289, 0, 290, 0, 0,
	961, 291, 292, 0, 293, 985, 0, 877, 294, 0,
	295, 296, 297, 2157, 952, 953, 956, 350, 963, 299,
	300, 0, 301, 302, 898, 0, 0, 217, 303, 305,
	312, 0, 962, 306, 910, 901, 912, 914, 915, 916,
	911, 0, 903, 0, 313, 964, 954, 965, 314, 315,
	316, 966, 936, 937, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 986, 967, 327, 328,
	968, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 2158, 2155, 342, 890, 341,
	969, 344, 345, 347, 970, 346, 845, 218, 971, 348,
	868, 955, 349, 925, 351, 352, 0, 899, 354, 900,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	972, 362, 973, 980, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 981, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	918, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	974, 399, 400, 401, 402, 855, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 2159, 0, 420, 421, 891,
	892, 894, 895, 416, 422, 423, 424, 948, 425, 405,
	406, 426, 427, 975, 428, 429, 913, 893, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 959, 437, 438,
	439, 982, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 889, 0, 451, 932, 933, 934, 935,
	0, 458, 0, 452, 453, 983, 454, 984, 866, 455,
	456, 457, 0, 459, 460, 0, 849, 461, 462, 463,
	464, 465, 467, 949, 468, 0, 897, 469, 470, 471,
	520, 929, 977, 0, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 2154, 478, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 2150, 870, 2153, 2160, 860, 861, 857, 858,
	871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 951, 876, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 917, 896, 928, 886, 927, 926,
	0, 233, 888, 887, 236, 237, 238, 878, 950, 239,
	987, 988, 486, 0, 240, 957, 0, 940, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	943, 941, 942, 947, 945, 944, 946, 257, 258, 259,
	260, 931, 2156, 924, 923, 848, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 922, 269, 0, 270, 0,
	271, 272, 0, 273, 854, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 978, 979, 867, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 921, 919, 920, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	985, 0, 877, 294, 0, 295, 296, 297, 2157, 952,
	953, 956, 350, 963, 299, 300, 0, 301, 302, 898,
	0, 0, 217, 303, 305, 312, 0, 962, 306, 910,
	901, 912, 914, 915, 916, 911, 0, 903, 0, 313,
	964, 954, 965, 314, 315, 316, 966, 936, 937, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 986, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	2158, 2155, 342, 890, 341, 969, 344, 345, 347, 970,
	346, 845, 218, 971, 348, 868, 955, 349, 925, 351,
	352, 0, 899, 354, 900, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 980, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 981, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 918, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	855, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	2159, 0, 420, 421, 891, 892, 894, 895, 416, 422,
	423, 424, 948, 425, 405, 406, 426, 427, 975, 428,
	429, 913, 893, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 959, 437, 438, 439, 982, 0, 443, 444,
	442, 0, 445, 446, 447, 448, 449, 278, 889, 0,
	451, 932, 933, 934, 935, 0, 458, 0, 452, 453,
	983, 454, 984, 866, 455, 456, 457, 0, 459, 460,
	0, 849, 461, 462, 463, 464, 465, 467, 949, 468,
	0, 897, 469, 470, 471, 520, 929, 977, 0, 473,
	472, 523, 0, 0, 0, 0, 474, 475, 524, 476,
	2154, 478, 846, 0, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 842, 843, 902, 859, 860,
	861, 857, 858, 871, 872, 0, 0, 0, 870, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 951, 876, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 917, 896, 928,
	886, 927, 926, 0, 233, 888, 887, 236, 237, 238,
	878, 950, 239, 987, 988, 486, 0, 240, 957, 0,
	940, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 943, 941, 942, 947, 945, 944, 946,
	257, 258, 259, 260, 931, 262, 924, 923, 848, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 922, 269,
	0, 270, 0, 271, 272, 0, 273, 854, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 978, 979, 867,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 921,
	919, 920, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 985, 0, 877, 294, 0, 295, 296,
	297, 298, 952, 953, 956, 350, 963, 299, 300, 0,
	301, 302, 898, 0, 0, 217, 303, 305, 312, 0,
	962, 306, 910, 901, 912, 914, 915, 916, 911, 0,
	903, 0, 313, 964, 954, 965, 314, 315, 316, 966,
	936, 937, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 986, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 890, 341, 969, 344,
	345, 347, 970, 346, 845, 218, 971, 348, 868, 955,
	349, 925, 351, 352, 0, 899, 354, 900, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 980, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 981, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 918, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 855, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 891, 892, 894,
	895, 416, 422, 423, 424, 948, 425, 405, 406, 426,
	427, 975, 428, 429, 913, 893, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 959, 437, 438, 439, 982,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 889, 0, 451, 932, 933, 934, 935, 0, 458,
	0, 452, 453, 983, 454, 984, 866, 455, 456, 457,
	0, 459, 460, 0, 849, 461, 462, 463, 464, 465,
	467, 949, 468, 0, 897, 469, 470, 471, 520, 929,
	977, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 1550, 0, 872, 0, 0,
	0, 870, 902, 859, 860, 861, 857, 858, 871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 1991, 224, 0, 0, 0, 0,
	0, 951, 876, 0, 0, 0, 225, 227, 226, 228,
	229, 480, 917, 896, 928, 886, 927, 926, 0, 233,
	888, 887, 236, 237, 238, 878, 950, 239, 987, 988,
	486, 0, 240, 957, 0, 940, 0, 241, 242, 243,
	244, 245, 246, 0, 248, 249, 250, 247, 0, 251,
	0, 252, 253, 254, 0, 960, 255, 256, 943, 941,
	942, 947, 945, 944, 946, 257, 258, 259, 260, 931,
	262, 924, 923, 848, 263, 0, 265, 264, 0, 266,
	0, 0, 267, 922, 269, 0, 270, 0, 271, 272,
	0, 273, 854, 274, 275, 277, 279, 276, 280, 281,
	282, 283, 978, 979, 867, 216, 0, 0, 0, 0,
	0, 284, 285, 286, 921, 919, 920, 0, 289, 0,
	290, 0, 0, 961, 291, 292, 0, 293, 985, 0,
	877, 294, 0, 295, 296, 297, 298, 952, 953, 956,
	350, 963, 299, 300, 0, 301, 302, 898, 0, 0,
	217, 303, 305, 312, 0, 962, 306, 910, 901, 912,
	914, 915, 916, 911, 0, 903, 0, 313, 964, 954,
	965, 314, 315, 316, 966, 936, 937, 0, 0, 319,
	320, 321, 322, 323, 0, 325, 324, 0, 326, 986,
	967, 327, 328, 968, 0, 329, 330, 0, 0, 331,
	332, 333, 0, 334, 335, 337, 339, 336, 338, 340,
	342, 890, 341, 969, 344, 345, 347, 970, 346, 845,
	218, 971, 348, 868, 955, 349, 925, 351, 352, 0,
	899, 354, 900, 0, 0, 357, 358, 359, 0, 0,
	360, 361, 506, 972, 362, 973, 980, 363, 356, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 981,
	373, 509, 374, 0, 375, 0, 376, 377, 378, 379,
	380, 381, 382, 918, 383, 384, 0, 385, 386, 387,
	388, 389, 0, 391, 392, 393, 390, 394, 395, 396,
	397, 0, 398, 974, 399, 400, 401, 402, 855, 403,
	0, 404, 408, 409, 410, 411, 412, 413, 414, 0,
	420, 421, 891, 892, 894, 895, 416, 422, 423, 424,
	948, 425, 405, 406, 426, 427, 975, 428, 429, 913,
	893, 431, 0, 432, 433, 434, 435, 407, 436, 440,
	959, 437, 438, 439, 982, 0, 443, 444, 442, 0,
	445, 446, 447, 448, 449, 278, 889, 0, 451, 932,
	933, 934, 935, 0, 458, 0, 452, 453, 983, 454,
	984, 866, 455, 456, 457, 0, 459, 460, 0, 849,
	461, 462, 463, 464, 465, 467, 949, 468, 0, 897,
	469, 470, 471, 520, 929, 977, 0, 473, 472, 523,
	0, 0, 0, 0, 474, 475, 524, 476, 477, 478,
	846, 0, 0, 0, 0, 0, 844, 0, 0, 0,
	0, 0, 0, 842, 843, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 1220, 870, 902, 859, 860,
	861, 857, 858, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 951, 876, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 917, 896, 928,
	886, 927, 926, 0, 233, 888, 887, 236, 237, 238,
	878, 950, 239, 987, 988, 486, 0, 240, 957, 0,
	940, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 943, 941, 942, 947, 945, 944, 946,
	257, 258, 259, 260, 931, 262, 924, 923, 848, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 922, 269,
	0, 270, 0, 271, 272, 0, 273, 854, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 978, 979, 867,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 921,
	919, 920, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 985, 0, 877, 294, 0, 295, 296,
	297, 298, 1219, 953, 956, 350, 963, 299, 300, 0,
	301, 302, 898, 0, 0, 217, 303, 305, 312, 0,
	962, 306, 910, 901, 912, 914, 915, 916, 911, 0,
	903, 0, 313, 964, 954, 965, 314, 315, 316, 966,
	936, 937, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 986, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 890, 341, 969, 344,
	345, 347, 970, 346, 845, 218, 971, 348, 868, 955,
	349, 925, 351, 352, 0, 899, 354, 900, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 980, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 981, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 918, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 855, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 891, 892, 894,
	895, 416, 422, 423, 424, 948, 425, 405, 406, 426,
	427, 975, 428, 429, 913, 893, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 959, 437, 438, 439, 982,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 889, 0, 451, 932, 933, 934, 935, 0, 458,
	0, 452, 453, 983, 454, 984, 866, 455, 456, 457,
	0, 459, 460, 0, 849, 461, 462, 463, 464, 465,
	467, 949, 468, 0, 897, 469, 470, 471, 520, 929,
	977, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	1214, 870, 902, 859, 860, 861, 857, 858, 871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 951, 876, 0, 0, 0, 225, 227, 226, 228,
	229, 480, 917, 896, 928, 886, 927, 926, 0, 233,
	888, 887, 236, 237, 238, 878, 950, 239, 987, 988,
	486, 0, 240, 957, 0, 940, 0, 241, 242, 243,
	244, 245, 246, 0, 248, 249, 250, 247, 0, 251,
	0, 252, 253, 254, 0, 960, 255, 256, 943, 941,
	942, 947, 945, 944, 946, 257, 258, 259, 260, 931,
	262, 924, 923, 848, 263, 0, 265, 264, 0, 266,
	0, 0, 267, 922, 269, 0, 270, 0, 271, 272,
	0, 273, 854, 274, 275, 277, 279, 276, 280, 281,
	282, 283, 978, 979, 867, 216, 0, 0, 0, 0,
	0, 284, 285, 286, 921, 919, 920, 0, 289, 0,
	290, 0, 0, 961, 291, 292, 0, 293, 985, 0,
	877, 294, 0, 295, 296, 297, 298, 1213, 953, 956,
	350, 963, 299, 300, 0, 301, 302, 898, 0, 0,
	217, 303, 305, 312, 0, 962, 306, 910, 901, 912,
	914, 915, 916, 911, 0, 903, 0, 313, 964, 954,
	965, 314, 315, 316, 966, 936, 937, 0, 0, 319,
	320, 321, 322, 323, 0, 325, 324, 0, 326, 986,
	967, 327, 328, 968, 0, 329, 330, 0, 0, 331,
	332, 333, 0, 334, 335, 337, 339, 336, 338, 340,
	342, 890, 341, 969, 344, 345, 347, 970, 346, 845,
	218, 971, 348, 868, 955, 349, 925, 351, 352, 0,
	899, 354, 900, 0, 0, 357, 358, 359, 0, 0,
	360, 361, 506, 972, 362, 973, 980, 363, 356, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 981,
	373, 509, 374, 0, 375, 0, 376, 377, 378, 379,
	380, 381, 382, 918, 383, 384, 0, 385, 386, 387,
	388, 389, 0, 391, 392, 393, 390, 394, 395, 396,
	397, 0, 398, 974, 399, 400, 401, 402, 855, 403,
	0, 404, 408, 409, 410, 411, 412, 413, 414, 0,
	420, 421, 891, 892, 894, 895, 416, 422, 423, 424,
	948, 425, 405, 406, 426, 427, 975, 428, 429, 913,
	893, 431, 0, 432, 433, 434, 435, 407, 436, 440,
	959, 437, 438, 439, 982, 0, 443, 444, 442, 0,
	445, 446, 447, 448, 449, 278, 889, 0, 451, 932,
	933, 934, 935, 0, 458, 0, 452, 453, 983, 454,
	984, 866, 455, 456, 457, 0, 459, 460, 0, 849,
	461, 462, 463, 464, 465, 467, 949, 468, 0, 897,
	469, 470, 471, 520, 929, 977, 0, 473, 472, 523,
	0, 0, 0, 0, 474, 475, 524, 476, 477, 478,
	846, 0, 0, 0, 0, 0, 844, 0, 0, 0,
	0, 0, 0, 842, 843, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 1209, 870, 902, 859, 860,
	861, 857, 858, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 951, 876, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 917, 896, 928,
	886, 927, 926, 0, 233, 888, 887, 236, 237, 238,
	878, 950, 239, 987, 988, 486, 0, 240, 957, 0,
	940, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 943, 941, 942, 947, 945, 944, 946,
	257, 258, 259, 260, 931, 262, 924, 923, 848, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 922, 269,
	0, 270, 0, 271, 272, 0, 273, 854, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 978, 979, 867,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 921,
	919, 920, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 985, 0, 877, 294, 0, 295, 296,
	297, 298, 952, 953, 956, 350, 963, 299, 300, 0,
	301, 302, 898, 0, 0, 217, 303, 305, 312, 0,
	962, 306, 910, 901, 912, 914, 915, 916, 911, 0,
	903, 0, 313, 964, 954, 965, 314, 315, 316, 966,
	936, 937, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 986, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 890, 341, 969, 344,
	345, 347, 970, 346, 845, 218, 971, 348, 868, 955,
	349, 925, 351, 352, 0, 899, 354, 900, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 980, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 981, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 918, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 855, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 891, 892, 894,
	895, 416, 422, 423, 424, 948, 425, 405, 406, 426,
	427, 975, 428, 429, 913, 893, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 959, 437, 438, 439, 982,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 889, 0, 451, 932, 933, 934, 935, 0, 458,
	0, 452, 453, 983, 454, 984, 866, 455, 456, 457,
	0, 459, 460, 0, 849, 461, 462, 463, 464, 465,
	467, 949, 468, 0, 897, 469, 470, 471, 520, 929,
	977, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	902, 859, 860, 861, 857, 858, 871, 872, 0, 0,
	0, 870, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 951,
	876, 0, 0, 0, 225, 227, 226, 228, 229, 480,
	917, 896, 928, 886, 927, 926, 0, 233, 888, 887,
	236, 237, 238, 878, 950, 239, 987, 988, 486, 0,
	240, 957, 0, 940, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 960, 255, 256, 943, 941, 942, 947,
	945, 944, 946, 257, 258, 259, 260, 931, 262, 924,
	923, 848, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 922, 269, 0, 270, 0, 271, 272, 0, 273,
	854, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	978, 979, 867, 216, 0, 0, 0, 0, 0, 284,
	285, 286, 921, 919, 920, 0, 289, 0, 290, 0,
	0, 961, 291, 292, 0, 293, 985, 0, 877, 294,
	0, 295, 296, 297, 298, 952, 953, 956, 350, 963,
	299, 300, 0, 301, 302, 898, 0, 0, 217, 303,
	305, 312, 0, 962, 306, 910, 901, 912, 914, 915,
	916, 911, 0, 903, 0, 313, 964, 954, 965, 314,
	315, 316, 966, 936, 937, 0, 0, 319, 320, 321,
	322, 323, 0, 325, 324, 0, 326, 986, 967, 327,
	328, 968, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 890,
	341, 969, 344, 345, 347, 970, 346, 845, 218, 971,
	348, 868, 955, 349, 925, 351, 352, 0, 899, 354,
	900, 0, 0, 357, 358, 359, 0, 0, 360, 361,
	506, 972, 362, 973, 980, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 981, 373, 509,
	374, 0, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 918, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 974, 399, 400, 401, 402, 855, 403, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 0, 420, 421,
	891, 892, 894, 895, 416, 422, 423, 424, 948, 425,
	405, 406, 426, 427, 975, 428, 429, 913, 893, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 959, 437,
	438, 439, 982, 0, 443, 444, 442, 0, 445, 446,
	447, 448, 449, 278, 889, 0, 451, 932, 933, 934,
	935, 0, 458, 0, 452, 453, 983, 454, 984, 866,
	455, 456, 457, 0, 459, 460, 0, 849, 461, 462,
	463, 464, 465, 467, 949, 468, 0, 897, 469, 470,
	471, 520, 929, 977, 0, 473, 472, 523, 0, 0,
	0, 0, 474, 475, 524, 476, 477, 478, 846, 0,
	0, 0, 0, 0, 844, 0, 0, 0, 0, 0,
	0, 842, 843, 902, 859, 860, 861, 857, 858, 871,
	872, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 951, 876, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 917, 896, 928, 886, 927, 926, 0,
	233, 888, 887, 236, 237, 238, 878, 950, 239, 987,
	988, 486, 0, 240, 957, 0, 940, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 960, 255, 3552, 943,
	941, 942, 947, 945, 944, 946, 257, 258, 259, 260,
	931, 262, 924, 923, 848, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 922, 269, 0, 270, 0, 271,
	272, 0, 273, 854, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 978, 979, 867, 216, 0, 0, 0,
	0, 0, 284, 285, 286, 921, 919, 920, 0, 289,
	0, 290, 0, 0, 961, 291, 292, 0, 293, 985,
	0, 877, 294, 0, 295, 296, 297, 298, 952, 953,
	956, 350, 963, 299, 300, 0, 301, 302, 898, 0,
	0, 217, 303, 305, 312, 0, 962, 306, 910, 901,
	912, 914, 915, 916, 911, 0, 903, 0, 313, 964,
	954, 965, 314, 315, 316, 966, 936, 937, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	986, 967, 327, 328, 968, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 890, 341, 969, 344, 345, 347, 970, 346,
	845, 218, 971, 348, 868, 955, 349, 925, 351, 352,
	0, 899, 354, 900, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 972, 362, 973, 980, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	981, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 918, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 974, 399, 400, 401, 402, 855,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 891, 892, 894, 895, 416, 422, 423,
	424, 948, 425, 405, 406, 426, 427, 975, 428, 429,
	913, 893, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 959, 437, 438, 439, 982, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 889, 0, 451,
	932, 933, 934, 935, 0, 458, 0, 452, 453, 983,
	454, 984, 866, 455, 456, 457, 0, 3551, 460, 0,
	849, 461, 462, 463, 464, 465, 467, 949, 468, 0,
	897, 469, 470, 471, 520, 929, 977, 0, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 902, 859, 860, 861,
	857, 858, 871, 872, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 951, 876, 0, 0, 0,
	225, 227, 226, 228, 229, 3550, 917, 896, 928, 886,
	927, 926, 0, 233, 888, 887, 236, 237, 238, 878,
	950, 239, 987, 988, 486, 0, 240, 957, 0, 940,
	0, 241, 242, 243, 244, 245, 246, 0, 248, 249,
	250, 247, 0, 251, 0, 252, 253, 254, 0, 960,
	255, 3552, 943, 941, 942, 947, 945, 944, 946, 257,
	258, 259, 260, 931, 262, 924, 923, 848, 263, 0,
	265, 264, 0, 266, 0, 0, 267, 922, 269, 0,
	270, 0, 271, 272, 0, 273, 854, 274, 275, 277,
	279, 276, 280, 281, 282, 283, 978, 979, 867, 216,
	0, 0, 0, 0, 0, 284, 285, 286, 921, 919,
	920, 0, 289, 0, 290, 0, 0, 961, 291, 292,
	0, 293, 985, 0, 877, 294, 0, 295, 296, 297,
	298, 952, 953, 956, 350, 963, 299, 300, 0, 301,
	302, 898, 0, 0, 217, 303, 305, 312, 0, 962,
	306, 910, 901, 912, 914, 915, 916, 911, 0, 903,
	0, 313, 964, 954, 965, 314, 315, 316, 966, 936,
	937, 0, 0, 319, 320, 321, 322, 323, 0, 325,
	324, 0, 326, 986, 967, 327, 328, 968, 0, 329,
	330, 0, 0, 331, 332, 333, 0, 334, 335, 337,
	339, 336, 338, 340, 342, 890, 341, 969, 344, 345,
	347, 970, 346, 845, 218, 971, 348, 868, 955, 349,
	925, 351, 352, 0, 899, 354, 900, 0, 0, 357,
	358, 359, 0, 0, 360, 361, 506, 972, 362, 973,
	980, 363, 356, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 981, 373, 509, 374, 0, 375, 0,
	376, 377, 378, 379, 380, 381, 382, 918, 383, 384,
	0, 385, 386, 387, 388, 389, 0, 391, 392, 393,
	390, 394, 395, 396, 397, 0, 398, 974, 399, 400,
	401, 402, 855, 403, 0, 404, 408, 409, 410, 411,
	412, 413, 414, 0, 420, 421, 891, 892, 894, 895,
	416, 422, 423, 424, 948, 425, 405, 406, 426, 427,
	975, 428, 429, 913, 893, 431, 0, 432, 433, 434,
	435, 407, 436, 440, 959, 437, 438, 439, 982, 0,
	443, 444, 442, 0, 445, 446, 447, 448, 449, 278,
	889, 0, 451, 932, 933, 934, 935, 0, 458, 0,
	452, 453, 983, 454, 984, 866, 455, 456, 457, 0,
	3551, 460, 0, 849, 461, 462, 463, 464, 465, 467,
	949, 468, 0, 897, 469, 470, 471, 520, 929, 977,
	0, 473, 472, 523, 0, 0, 0, 0, 474, 475,
	524, 476, 477, 478, 846, 0, 0, 0, 0, 0,
	844, 0, 0, 0, 0, 0, 0, 842, 843, 902,
	859, 860, 861, 857, 858, 871, 872, 0, 0, 0,
	870, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 951, 876,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 917,
	896, 928, 886, 927, 926, 0, 233, 888, 887, 236,
	237, 238, 878, 950, 239, 987, 988, 486, 0, 240,
	957, 0, 940, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 960, 255, 256, 943, 941, 942, 947, 945,
	944, 946, 257, 258, 259, 260, 931, 262, 924, 923,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	922, 269, 0, 270, 0, 271, 272, 0, 273, 854,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 978,
	979, 867, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 921, 919, 920, 0, 289, 0, 290, 0, 0,
	961, 291, 292, 0, 293, 985, 0, 877, 294, 0,
	295, 296, 297, 298, 952, 953, 956, 350, 963, 299,
	300, 0, 301, 302, 898, 0, 0, 217, 303, 305,
	312, 0, 962, 306, 910, 901, 912, 914, 915, 916,
	911, 0, 903, 0, 313, 964, 954, 965, 314, 315,
	316, 966, 936, 937, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 986, 967, 327, 328,
	968, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 890, 341,
	969, 344, 345, 347, 970, 346, 0, 218, 971, 348,
	868, 955, 349, 925, 351, 352, 0, 899, 354, 900,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	972, 362, 973, 980, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 981, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	918, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	974, 399, 400, 401, 402, 855, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 891,
	892, 894, 895, 416, 422, 423, 424, 948, 425, 405,
	406, 426, 427, 975, 428, 429, 913, 893, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 959, 437, 438,
	439, 982, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 889, 0, 451, 932, 933, 934, 935,
	0, 458, 0, 452, 453, 983, 454, 984, 866, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 949, 468, 0, 897, 469, 470, 471,
	520, 929, 977, 0, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 2172, 0, 0, 0, 0, 0, 0,
	2170, 2171, 902, 859, 860, 861, 857, 858, 871, 872,
	0, 0, 0, 870, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 951, 876, 0, 0, 0, 225, 227, 226, 228,
	229, 0, 917, 896, 928, 886, 927, 926, 0, 233,
	888, 887, 236, 237, 238, 878, 950, 239, 987, 988,
	486, 0, 240, 957, 0, 940, 0, 241, 242, 243,
	244, 245, 246, 0, 248, 249, 250, 247, 0, 251,
	0, 252, 253, 254, 0, 960, 255, 3552, 943, 941,
	942, 947, 945, 944, 946, 257, 258, 259, 260, 931,
	262, 924, 923, 848, 263, 0, 265, 264, 0, 266,
	0, 0, 267, 922, 269, 0, 270, 0, 271, 272,
	0, 273, 854, 274, 275, 277, 279, 276, 280, 281,
	282, 283, 978, 979, 867, 216, 0, 0, 0, 0,
	0, 284, 285, 286, 921, 919, 920, 0, 289, 0,
	290, 0, 0, 961, 291, 292, 0, 293, 985, 0,
	877, 294, 0, 295, 296, 297, 298, 952, 953, 956,
	350, 0, 299, 300, 0, 301, 302, 898, 0, 0,
	217, 303, 305, 312, 0, 962, 306, 910, 901, 912,
	914, 915, 916, 911, 0, 903, 0, 313, 0, 954,
	0, 314, 315, 316, 966, 936, 937, 0, 0, 319,
	320, 321, 322, 323, 0, 325, 324, 0, 326, 986,
	967, 327, 328, 0, 0, 329, 330, 0, 0, 331,
	332, 333, 0, 334, 335, 337, 339, 336, 338, 340,
	342, 890, 341, 969, 344, 345, 347, 970, 346, 845,
	218, 0, 348, 868, 955, 349, 925, 351, 352, 0,
	899, 354, 900, 0, 0, 357, 358, 359, 0, 0,
	360, 361, 506, 972, 362, 973, 980, 363, 356, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 981,
	373, 509, 374, 0, 375, 0, 376, 377, 378, 379,
	380, 381, 382, 918, 383, 384, 0, 385, 386, 387,
	388, 389, 0, 391, 392, 393, 390, 394, 395, 396,
	397, 0, 398, 974, 399, 400, 401, 402, 855, 403,
	0, 404, 408, 409, 410, 411, 412, 413, 414, 0,
	420, 421, 891, 892, 894, 895, 416, 422, 423, 424,
	948, 425, 405, 406, 426, 427, 0, 428, 429, 913,
	893, 431, 0, 432, 433, 434, 435, 407, 436, 440,
	959, 437, 438, 439, 982, 0, 443, 444, 442, 0,
	445, 446, 447, 448, 449, 278, 889, 0, 451, 932,
	933, 934, 935, 0, 458, 0, 452, 453, 983, 454,
	984, 866, 455, 456, 457, 0, 3551, 460, 0, 849,
	461, 462, 463, 464, 465, 467, 949, 468, 0, 897,
	469, 470, 471, 520, 929, 977, 0, 473, 472, 523,
	0, 0, 0, 0, 474, 475, 524, 476, 477, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 0,
	1025, 0, 0, 842, 843, 0, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 870, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 951,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 480,
	481, 230, 482, 231, 232, 483, 0, 233, 234, 235,
	236, 237, 238, 0, 950, 239, 484, 485, 486, 0,
	240, 957, 0, 940, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 960, 255, 256, 943, 941, 942, 947,
	945, 944, 946, 257, 258, 259, 260, 261, 262, 488,
	489, 0, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 268, 269, 0, 270, 0, 271, 272, 0, 273,
	490, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	978, 979, 0, 216, 0, 0, 0, 0, 0, 284,
	285, 286, 493, 287, 288, 0, 289, 0, 290, 0,
	0, 961, 291, 292, 0, 293, 985, 0, 495, 294,
	0, 295, 296, 297, 298, 952, 953, 956, 350, 963,
	299, 300, 0, 301, 302, 304, 0, 0, 217, 303,
	305, 312, 0, 962, 306, 499, 308, 307, 309, 310,
	311, 500, 0, 501, 0, 313, 964, 954, 965, 314,
	315, 316, 966, 317, 318, 0, 0, 319, 320, 321,
	322, 323, 1011, 325, 324, 0, 326, 986, 967, 327,
	328, 968, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 343,
	341, 969, 344, 345, 347, 970, 346, 0, 218, 971,
	348, 0, 955, 349, 505, 351, 352, 0, 353, 354,
	355, 0, 1017, 357, 358, 359, 0, 0, 360, 361,
	506, 972, 362, 973, 980, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 981, 373, 509,
	374, 0, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 510, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 974, 399, 400, 401, 402, 511, 1019, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 182, 420, 421,
	415, 417, 418, 419, 416, 422, 423, 424, 948, 425,
	405, 406, 426, 427, 975, 428, 429, 512, 430, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 441, 437,
	438, 439, 982, 0, 443, 444, 442, 184, 445, 446,
	447, 448, 449, 278, 450, 0, 451, 514, 515, 516,
	517, 0, 458, 0, 452, 453, 983, 454, 984, 0,
	455, 456, 457, 0, 459, 460, 0, 0, 461, 462,
	463, 464, 465, 467, 949, 468, 0, 466, 469, 470,
	471, 1332, 521, 522, 0, 473, 472, 523, 1025, 0,
	0, 176, 474, 475, 524, 476, 477, 478, 0, 177,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 951, 1015, 0,
	1628, 0, 225, 227, 226, 228, 229, 480, 481, 230,
	482, 231, 232, 483, 0, 233, 234, 235, 236, 237,
	238, 0, 950, 239, 484, 485, 486, 0, 240, 957,
	0, 940, 0, 241, 242, 243, 244, 245, 246, 0,
	248, 249, 250, 247, 0, 251, 0, 252, 253, 254,
	0, 960, 255, 256, 943, 941, 942, 947, 945, 944,
	946, 257, 258, 259, 260, 261, 262, 488, 489, 0,
	263, 0, 265, 264, 0, 266, 0, 0, 267, 268,
	269, 0, 270, 0, 271, 272, 0, 273, 490, 274,
	275, 277, 279, 276, 280, 281, 282, 283, 978, 979,
	0, 216, 0, 0, 0, 0, 0, 284, 285, 286,
	493, 287, 288, 0, 289, 0, 290, 0, 0, 961,
	291, 292, 0, 293, 985, 0, 495, 294, 0, 295,
	296, 297, 298, 952, 953, 956, 350, 963, 299, 300,
	0, 301, 302, 304, 0, 0, 217, 303, 305, 312,
	0, 962, 306, 499, 308, 307, 309, 310, 311, 500,
	0, 501, 0, 313, 964, 954, 965, 314, 315, 316,
	966, 317, 318, 0, 0, 319, 320, 321, 322, 323,
	1011, 325, 324, 0, 326, 986, 967, 327, 328, 968,
	0, 329, 330, 0, 0, 331, 332, 333, 0, 334,
	335, 337, 339, 336, 338, 340, 342, 343, 341, 969,
	344, 345, 347, 970, 346, 0, 218, 971, 348, 0,
	955, 349, 505, 351, 352, 0, 353, 354, 355, 0,
	1017, 357, 358, 359, 0, 0, 360, 361, 506, 972,
	362, 973, 980, 363, 356, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 981, 373, 509, 374, 0,
	375, 0, 376, 377, 378, 379, 380, 381, 382, 510,
	383, 384, 0, 385, 386, 387, 388, 389, 0, 391,
	392, 393, 390, 394, 395, 396, 397, 0, 398, 974,
	399, 400, 401, 402, 511, 1019, 0, 404, 408, 409,
	410, 411, 412, 413, 414, 182, 420, 421, 415, 417,
	418, 419, 416, 422, 423, 424, 948, 425, 405, 406,
	426, 427, 975, 428, 429, 512, 430, 431, 0, 432,
	433, 434, 435, 407, 436, 440, 441, 437, 438, 439,
	982, 0, 443, 444, 442, 184, 445, 446, 447, 448,
	449, 278, 450, 0, 451, 514, 515, 516, 517, 0,
	458, 0, 452, 453, 983, 454, 984, 0, 455, 456,
	457, 0, 459, 460, 0, 0, 461, 462, 463, 464,
	465, 467, 949, 468, 0, 466, 469, 470, 471, 1332,
	521, 522, 0, 473, 472, 523, 2639, 0, 1025, 176,
	474, 475, 524, 476, 477, 478, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 1015, 951, 1628, 0,
	0, 0, 225, 227, 226, 228, 229, 480, 481, 230,
	482, 231, 232, 483, 0, 233, 234, 235, 236, 237,
	238, 0, 950, 239, 484, 485, 486, 0, 240, 957,
	0, 940, 0, 241, 242, 243, 244, 245, 246, 0,
	248, 249, 250, 247, 0, 251, 0, 252, 253, 254,
	0, 960, 255, 256, 943, 941, 942, 947, 945, 944,
	946, 257, 258, 259, 260, 261, 262, 488, 489, 0,
	263, 0, 265, 264, 0, 266, 0, 0, 267, 268,
	269, 0, 270, 0, 271, 272, 0, 273, 490, 274,
	275, 277, 279, 276, 280, 281, 282, 283, 978, 979,
	0, 216, 0, 0, 0, 0, 0, 284, 285, 286,
	493, 287, 288, 0, 289, 0, 290, 0, 0, 961,
	291, 292, 0, 293, 985, 0, 495, 294, 0, 295,
	296, 297, 298, 952, 953, 956, 350, 963, 299, 300,
	0, 301, 302, 304, 0, 0, 217, 303, 305, 312,
	0, 962, 306, 499, 308, 307, 309, 310, 311, 500,
	0, 501, 0, 313, 964, 954, 965, 314, 315, 316,
	966, 317, 318, 0, 0, 319, 320, 321, 322, 323,
	1011, 325, 324, 0, 326, 986, 967, 327, 328, 968,
	0, 329, 330, 0, 0, 331, 332, 333, 0, 334,
	335, 337, 339, 336, 338, 340, 342, 343, 341, 969,
	344, 345, 347, 970, 346, 0, 218, 971, 348, 0,
	955, 349, 505, 351, 352, 0, 353, 354, 355, 0,
	1017, 357, 358, 359, 0, 0, 360, 361, 506, 972,
	362, 973, 980, 363, 356, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 981, 373, 509, 374, 0,
	375, 0, 376, 377, 378, 379, 380, 381, 382, 510,
	383, 384, 0, 385, 386, 387, 388, 389, 0, 391,
	392, 393, 390, 394, 395, 396, 397, 0, 398, 974,
	399, 400, 401, 402, 511, 1019, 0, 404, 408, 409,
	410, 411, 412, 413, 414, 0, 420, 421, 415, 417,
	418, 419, 416, 422, 423, 424, 948, 425, 405, 406,
	426, 427, 975, 428, 429, 512, 430, 431, 0, 432,
	433, 434, 435, 407, 436, 440, 441, 437, 438, 439,
	982, 0, 443, 444, 442, 0, 445, 446, 447, 448,
	449, 278, 450, 0, 451, 514, 515, 516, 517, 0,
	458, 0, 452, 453, 983, 454, 984, 0, 455, 456,
	457, 0, 459, 460, 0, 0, 461, 462, 463, 464,
	465, 467, 949, 468, 0, 466, 469, 470, 471, 520,
	521, 522, 0, 473, 472, 523, 1007, 0, 1025, 0,
	474, 475, 524, 476, 477, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 1015, 951, 1013, 0,
	0, 0, 225, 227, 226, 228, 229, 480, 481, 230,
	482, 231, 232, 483, 0, 233, 234, 235, 236, 237,
	238, 0, 950, 239, 484, 485, 486, 0, 240, 957,
	0, 940, 0, 241, 242, 243, 244, 245, 246, 0,
	248, 249, 250, 247, 0, 251, 0, 252, 253, 254,
	0, 960, 255, 256, 943, 941, 942, 947, 945, 944,
	946, 257, 258, 259, 260, 261, 262, 488, 489, 0,
	263, 0, 265, 264, 0, 266, 0, 0, 267, 268,
	269, 0, 270, 0, 271, 272, 0, 273, 490, 274,
	275, 277, 279, 276, 280, 281, 282, 283, 978, 979,
	0, 216, 0, 0, 0, 0, 0, 284, 285, 286,
	493, 287, 288, 0, 289, 0, 290, 0, 0, 961,
	291, 292, 0, 293, 985, 0, 495, 294, 0, 295,
	296, 297, 298, 952, 953, 956, 350, 963, 299, 300,
	0, 301, 302, 304, 0, 0, 217, 303, 305, 312,
	0, 962, 306, 499, 308, 307, 309, 310, 311, 500,
	0, 501, 0, 313, 964, 954, 965, 314, 315, 316,
	966, 317, 318, 0, 0, 319, 320, 321, 322, 323,
	1011, 325, 324, 0, 326, 986, 967, 327, 328, 968,
	0, 329, 330, 0, 0, 331, 332, 333, 0, 334,
	335, 337, 339, 336, 338, 340, 342, 343, 341, 969,
	344, 345, 347, 970, 346, 0, 218, 971, 348, 0,
	955, 349, 505, 351, 352, 0, 353, 354, 355, 0,
	1017, 357, 358, 359, 0, 0, 360, 361, 506, 972,
	362, 973, 980, 363, 356, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 981, 373, 509, 374, 0,
	375, 0, 376, 377, 378, 379, 380, 381, 382, 510,
	383, 384, 0, 385, 386, 387, 388, 389, 0, 391,
	392, 393, 390, 394, 395, 396, 397, 0, 398, 974,
	399, 400, 401, 402, 511, 1019, 0, 404, 408, 409,
	410, 411, 412, 413, 414, 0, 420, 421, 415, 417,
	418, 419, 416, 422, 423, 424, 948, 425, 405, 406,
	426, 427, 975, 428, 429, 512, 430, 431, 0, 432,
	433, 434, 435, 407, 436, 440, 441, 437, 438, 439,
	982, 0, 443, 444, 442, 0, 445, 446, 447, 448,
	449, 278, 450, 0, 451, 514, 515, 516, 517, 0,
	458, 0, 452, 453, 983, 454, 984, 0, 455, 456,
	457, 0, 459, 460, 0, 0, 461, 462, 463, 464,
	465, 467, 949, 468, 0, 466, 469, 470, 471, 520,
	521, 522, 0, 473, 472, 523, 1025, 0, 0, 0,
	474, 475, 524, 476, 477, 478, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 951, 1015, 0, 1013, 0,
	225, 227, 226, 228, 229, 480, 481, 230, 482, 231,
	232, 483, 0, 233, 234, 235, 236, 237, 238, 0,
	950, 239, 484, 485, 486, 0, 240, 957, 0, 940,
	0, 241, 242, 243, 244, 245, 246, 0, 248, 249,
	250, 247, 0, 251, 0, 252, 253, 254, 0, 960,
	255, 256, 943, 941, 942, 947, 945, 944, 946, 257,
	258, 259, 260, 261, 262, 488, 489, 0, 263, 0,
	265, 264, 0, 266, 0, 0, 267, 268, 269, 0,
	270, 0, 271, 272, 0, 273, 490, 274, 275, 277,
	279, 276, 280, 281, 282, 283, 978, 979, 0, 216,
	0, 0, 0, 0, 0, 284, 285, 286, 493, 287,
	288, 0, 289, 0, 290, 0, 0, 961, 291, 292,
	0, 293, 985, 0, 495, 294, 0, 295, 296, 297,
	298, 952, 953, 956, 350, 963, 299, 300, 0, 301,
	302, 304, 0, 0, 217, 303, 305, 312, 0, 962,
	306, 499, 308, 307, 309, 310, 311, 500, 0, 501,
	0, 313, 964, 954, 965, 314, 315, 316, 966, 317,
	318, 0, 0, 319, 320, 321, 322, 323, 1011, 325,
	324, 0, 326, 986, 967, 327, 328, 968, 0, 329,
	330, 0, 0, 331, 332, 333, 0, 334, 335, 337,
	339, 336, 338, 340, 342, 343, 341, 969, 344, 345,
	347, 970, 346, 0, 218, 971, 348, 0, 955, 349,
	505, 351, 352, 0, 353, 354, 355, 0, 1017, 357,
	358, 359, 0, 0, 360, 361, 506, 972, 362, 973,
	980, 363, 356, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 981, 373, 509, 374, 0, 375, 0,
	376, 377, 378, 379, 380, 381, 382, 510, 383, 384,
	0, 385, 386, 387, 388, 389, 0, 391, 392, 393,
	390, 394, 395, 396, 397, 0, 398, 974, 399, 400,
	401, 402, 511, 1019, 0, 404, 408, 409, 410, 411,
	412, 413, 414, 0, 420, 421, 415, 417, 418, 419,
	416, 422, 423, 424, 948, 425, 405, 406, 426, 427,
	975, 428, 429, 512, 430, 431, 0, 432, 433, 434,
	435, 407, 436, 440, 441, 437, 438, 439, 982, 0,
	443, 444, 442, 0, 445, 446, 447, 448, 449, 278,
	450, 0, 451, 514, 515, 516, 517, 0, 458, 0,
	452, 453, 983, 454, 984, 0, 455, 456, 457, 0,
	459, 460, 0, 0, 461, 462, 463, 464, 465, 467,
	949, 468, 0, 466, 469, 470, 471, 520, 521, 522,
	0, 473, 472, 523, 1025, 0, 0, 0, 474, 475,
	524, 476, 477, 478, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 951, 1015, 0, 1013, 0, 225, 227,
	226, 228, 229, 480, 481, 230, 482, 231, 232, 483,
	0, 233, 234, 235, 236, 237, 238, 0, 950, 239,
	484, 485, 486, 0, 240, 957, 0, 940, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	943, 941, 942, 947, 945, 944, 946, 257, 258, 259,
	260, 261, 262, 488, 489, 0, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 268, 269, 0, 270, 0,
	271, 272, 0, 273, 490, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 978, 979, 0, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 493, 287, 288, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	985, 0, 495, 294, 0, 295, 296, 297, 298, 952,
	953, 956, 350, 963, 299, 300, 0, 301, 302, 304,
	0, 0, 217, 303, 305, 312, 0, 962, 306, 499,
	308, 307, 309, 310, 311, 500, 0, 501, 0, 313,
	964, 954, 965, 314, 315, 316, 966, 317, 318, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 986, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 343, 341, 969, 344, 345, 347, 970,
	346, 0, 218, 971, 348, 0, 955, 349, 505, 351,
	352, 0, 353, 354, 355, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 980, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 981, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 510, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	511, 1019, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 0, 420, 421, 415, 417, 418, 419, 416, 422,
	423, 424, 948, 425, 405, 406, 426, 427, 975, 428,
	429, 512, 430, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 441, 437, 438, 439, 982, 0, 443, 444,
	442, 0, 445, 446, 447, 448, 449, 278, 450, 0,
	451, 514, 515, 516, 517, 0, 458, 0, 452, 453,
	983, 454, 984, 0, 455, 456, 457, 0, 459, 460,
	0, 0, 461, 462, 463, 464, 465, 467, 949, 468,
	0, 466, 469, 470, 471, 520, 521, 522, 0, 473,
	472, 523, 835, 0, 1184, 0, 474, 475, 524, 476,
	477, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 479, 1531, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 481, 230, 482, 231, 232, 483,
	0, 233, 234, 235, 236, 237, 238, 0, 0, 239,
	484, 485, 486, 0, 240, 487, 0, 1088, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	0, 0, 0, 0, 0, 0, 0, 257, 258, 259,
	260, 261, 262, 488, 489, 0, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 268, 269, 0, 270, 0,
	271, 272, 0, 273, 490, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 491, 492, 0, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 493, 287, 288, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	494, 0, 495, 294, 0, 295, 296, 297, 298, 496,
	497, 498, 350, 963, 299, 300, 0, 301, 302, 304,
	0, 0, 0, 303, 305, 312, 0, 962, 306, 499,
	308, 307, 309, 310, 311, 500, 0, 501, 0, 313,
	964, 502, 965, 314, 315, 316, 966, 317, 318, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 503, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 343, 341, 969, 344, 345, 347, 970,
	346, 0, 0, 971, 348, 0, 504, 349, 505, 351,
	352, 0, 353, 354, 355, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 507, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 508, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 510, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	511, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 182, 420, 421, 415, 417, 418, 419, 416, 422,
	423, 424, 0, 425, 405, 406, 426, 427, 975, 428,
	429, 512, 430, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 441, 437, 438, 439, 513, 0, 443, 444,
	442, 184, 445, 446, 447, 448, 449, 278, 450, 0,
	451, 514, 515, 516, 517, 0, 458, 0, 452, 453,
	518, 454, 519, 0, 455, 456, 457, 0, 459, 460,
	0, 0, 461, 462, 463, 464, 465, 467, 0, 468,
	0, 466, 469, 470, 471, 1332, 521, 522, 0, 473,
	472, 523, 1329, 0, 1184, 176, 474, 475, 524, 476,
	477, 478, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 479, 151, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 481, 230, 482, 231, 232, 483,
	0, 233, 234, 235, 236, 237, 238, 0, 0, 239,
	484, 485, 486, 0, 240, 487, 0, 1088, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	0, 0, 0, 0, 0, 0, 0, 257, 258, 259,
	260, 261, 262, 488, 489, 0, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 268, 269, 0, 270, 0,
	271, 272, 0, 273, 490, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 491, 492, 0, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 493, 287, 288, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	494, 0, 495, 294, 0, 295, 296, 297, 298, 496,
	497, 498, 350, 963, 299, 300, 0, 301, 302, 304,
	0, 0, 0, 303, 305, 312, 0, 962, 306, 499,
	308, 307, 309, 310, 311, 500, 0, 501, 0, 313,
	964, 502, 965, 314, 315, 316, 966, 317, 318, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 503, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 343, 341, 969, 344, 345, 347, 970,
	346, 0, 0, 971, 348, 0, 504, 349, 505, 351,
	352, 0, 353, 354, 355, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 507, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 508, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 510, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	511, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 182, 420, 421, 415, 417, 418, 419, 416, 422,
	423, 424, 0, 425, 405, 406, 426, 427, 975, 428,
	429, 512, 430, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 441, 437, 438, 439, 513, 0, 443, 444,
	442, 184, 445, 446, 447, 448, 449, 278, 450, 0,
	451, 514, 515, 516, 517, 0, 458, 0, 452, 453,
	518, 454, 519, 0, 455, 456, 457, 0, 459, 460,
	0, 0, 461, 462, 463, 464, 465, 467, 0, 468,
	0, 466, 469, 470, 471, 1332, 521, 522, 0, 473,
	472, 523, 0, 0, 0, 176, 474, 475, 524, 476,
	477, 478, 0, 177, 0, 0, 0, 0, 1184, 1183,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 480, 481, 230,
	482, 231, 232, 483, 0, 233, 234, 235, 236, 237,
	238, 0, 0, 239, 484, 485, 486, 0, 240, 487,
	0, 1088, 0, 241, 242, 243, 244, 245, 246, 0,
	248, 249, 250, 247, 0, 251, 0, 252, 253, 254,
	0, 960, 255, 256, 0, 0, 0, 0, 0, 0,
	0, 257, 258, 259, 260, 261, 262, 488, 489, 0,
	263, 0, 265, 264, 0, 266, 0, 0, 267, 268,
	269, 0, 270, 0, 271, 272, 0, 273, 490, 274,
	275, 277, 279, 276, 280, 281, 282, 283, 491, 492,
	0, 216, 0, 0, 0, 0, 0, 284, 285, 286,
	493, 287, 288, 0, 289, 0, 290, 0, 0, 961,
	291, 292, 0, 293, 494, 0, 495, 294, 0, 295,
	296, 297, 298, 496, 497, 498, 350, 963, 299, 300,
	0, 301, 302, 304, 0, 0, 0, 303, 305, 312,
	0, 962, 306, 499, 308, 307, 309, 310, 311, 500,
	0, 501, 0, 313, 964, 502, 965, 314, 315, 316,
	966, 317, 318, 0, 0, 319, 320, 321, 322, 323,
	0, 325, 324, 0, 326, 503, 967, 327, 328, 968,
	0, 329, 330, 0, 0, 331, 332, 333, 0, 334,
	335, 337, 339, 336, 338, 340, 342, 343, 341, 969,
	344, 345, 347, 970, 346, 0, 0, 971, 348, 0,
	504, 349, 505, 351, 352, 0, 353, 354, 355, 0,
	0, 357, 358, 359, 0, 0, 360, 361, 506, 972,
	362, 973, 507, 363, 356, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 508, 373, 509, 374, 0,
	375, 0, 376, 377, 378, 379, 380, 381, 382, 510,
	383, 384, 0, 385, 386, 387, 388, 389, 0, 391,
	392, 393, 390, 394, 395, 396, 397, 0, 398, 974,
	399, 400, 401, 402, 511, 403, 0, 404, 408, 409,
	410, 411, 412, 413, 414, 0, 420, 421, 415, 417,
	418, 419, 416, 422, 423, 424, 0, 425, 405, 406,
	426, 427, 975, 428, 429, 512, 430, 431, 0, 432,
	433, 434, 435, 407, 436, 440, 441, 437, 438, 439,
	513, 0, 443, 444, 442, 0, 445, 446, 447, 448,
	449, 278, 450, 0, 451, 514, 515, 516, 517, 0,
	458, 0, 452, 453, 518, 454, 519, 0, 455, 456,
	457, 0, 459, 460, 0, 0, 461, 462, 463, 464,
	465, 467, 0, 468, 0, 466, 469, 470, 471, 520,
	521, 522, 0, 473, 472, 523, 0, 0, 0, 0,
	474, 475, 524, 476, 477, 478, 1184, 1183, 0, 0,
	0, 0, 1181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 1817, 224,
	0, 0, 0, 0, 0, 479, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 480, 481, 230, 482, 231,
	232, 483, 0, 233, 234, 235, 236, 237, 238, 0,
	0, 239, 484, 485, 486, 0, 240, 487, 0, 1088,
	0, 241, 242, 243, 244, 245, 246, 0, 248, 249,
	250, 247, 0, 251, 0, 252, 253, 254, 0, 960,
	255, 256, 0, 0, 0, 0, 0, 0, 0, 257,
	258, 259, 260, 261, 262, 488, 489, 0, 263, 0,
	265, 264, 0, 266, 0, 0, 267, 268, 269, 0,
	270, 0, 271, 272, 0, 273, 490, 274, 275, 277,
	279, 276, 280, 281, 282, 283, 491, 492, 0, 216,
	0, 0, 0, 0, 0, 284, 285, 286, 493, 287,
	288, 0, 289, 0, 290, 0, 0, 961, 291, 292,
	0, 293, 494, 0, 495, 294, 0, 295, 296, 297,
	298, 496, 497, 498, 350, 963, 299, 300, 0, 301,
	302, 304, 0, 0, 0, 303, 305, 312, 0, 962,
	306, 499, 308, 307, 309, 310, 311, 500, 0, 501,
	0, 313, 964, 502, 965, 314, 315, 316, 966, 317,
	318, 0, 0, 319, 320, 321, 322, 323, 0, 325,
	324, 0, 326, 503, 967, 327, 328, 968, 0, 329,
	330, 0, 0, 331, 332, 333, 0, 334, 335, 337,
	339, 336, 338, 340, 342, 343, 341, 969, 344, 345,
	347, 970, 346, 0, 0, 971, 348, 0, 504, 349,
	505, 351, 352, 0, 353, 354, 355, 0, 0, 357,
	358, 359, 0, 0, 360, 361, 506, 972, 362, 973,
	507, 363, 356, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 508, 373, 509, 374, 0, 375, 0,
	376, 377, 378, 379, 380, 381, 382, 510, 383, 384,
	0, 385, 386, 387, 388, 389, 0, 391, 392, 393,
	390, 394, 395, 396, 397, 0, 398, 974, 399, 400,
	401, 402, 511, 403, 0, 404, 408, 409, 410, 411,
	412, 413, 414, 0, 420, 421, 415, 417, 418, 419,
	416, 422, 423, 424, 0, 425, 405, 406, 426, 427,
	975, 428, 429, 512, 430, 431, 0, 432, 433, 434,
	435, 407, 436, 440, 441, 437, 438, 439, 513, 0,
	443, 444, 442, 0, 445, 446, 447, 448, 449, 278,
	450, 0, 451, 514, 515, 516, 517, 0, 458, 0,
	452, 453, 518, 454, 519, 0, 455, 456, 457, 0,
	459, 460, 0, 0, 461, 462, 463, 464, 465, 467,
	0, 468, 0, 466, 469, 470, 471, 520, 521, 522,
	0, 473, 472, 523, 0, 0, 0, 0, 474, 475,
	524, 476, 477, 478, 1184, 1183, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 2840, 224, 0, 0,
	0, 0, 0, 479, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 481, 230, 482, 231, 232, 483,
	0, 233, 234, 235, 236, 237, 238, 0, 0, 239,
	484, 485, 486, 0, 240, 487, 0, 1088, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 960, 255, 256,
	0, 0, 0, 0, 0, 0, 0, 257, 258, 259,
	260, 261, 262, 488, 489, 0, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 268, 269, 0, 270, 0,
	271, 272, 0, 273, 490, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 491, 492, 0, 216, 0, 0,
	0, 0, 0, 284, 285, 286, 493, 287, 288, 0,
	289, 0, 290, 0, 0, 961, 291, 292, 0, 293,
	494, 0, 495, 294, 0, 295, 296, 297, 298, 496,
	497, 498, 350, 963, 299, 300, 0, 301, 302, 304,
	0, 0, 0, 303, 305, 312, 0, 962, 306, 499,
	308, 307, 309, 310, 311, 500, 0, 501, 0, 313,
	964, 502, 965, 314, 315, 316, 966, 317, 318, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 503, 967, 327, 328, 968, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 343, 341, 969, 344, 345, 347, 970,
	346, 0, 0, 971, 348, 0, 504, 349, 505, 351,
	352, 0, 353, 354, 355, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 972, 362, 973, 507, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 508, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 510, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 974, 399, 400, 401, 402,
	511, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 0, 420, 421, 415, 417, 418, 419, 416, 422,
	423, 424, 0, 425, 405, 406, 426, 427, 975, 428,
	429, 512, 430, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 441, 437, 438, 439, 513, 0, 443, 444,
	442, 0, 445, 446, 447, 448, 449, 278, 450, 0,
	451, 514, 515, 516, 517, 0, 458, 0, 452, 453,
	518, 454, 519, 0, 455, 456, 457, 0, 459, 460,
	0, 0, 461, 462, 463, 464, 465, 467, 0, 468,
	0, 466, 469, 470, 471, 520, 521, 522, 0, 473,
	472, 523, 1025, 0, 0, 0, 474, 475, 524, 476,
	477, 478, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 951, 0, 0, 1338, 0, 225, 227, 226, 228,
	229, 480, 481, 230, 482, 231, 232, 483, 0, 233,
	234, 235, 236, 237, 238, 0, 950, 239, 484, 485,
	486, 0, 240, 957, 0, 940, 0, 241, 242, 243,
	244, 245, 246, 0, 248, 249, 250, 247, 0, 251,
	0, 252, 253, 254, 0, 960, 255, 256, 943, 941,
	942, 947, 945, 944, 946, 257, 258, 259, 260, 261,
	262, 488, 489, 0, 263, 0, 265, 264, 0, 266,
	0, 0, 267, 268, 269, 0, 270, 0, 271, 272,
	0, 273, 490, 274, 275, 277, 279, 276, 280, 281,
	282, 283, 978, 979, 0, 216, 0, 0, 0, 0,
	0, 284, 285, 286, 493, 287, 288, 0, 289, 0,
	290, 0, 0, 961, 291, 292, 0, 293, 985, 0,
	495, 294, 0, 295, 296, 297, 298, 952, 953, 956,
	350, 963, 299, 300, 0, 301, 302, 304, 0, 0,
	217, 303, 305, 312, 0, 962, 306, 499, 308, 307,
	309, 310, 311, 500, 0, 501, 0, 313, 964, 954,
	965, 314, 315, 316, 966, 317, 318, 0, 0, 319,
	320, 321, 322, 323, 0, 325, 324, 0, 326, 986,
	967, 327, 328, 968, 0, 329, 330, 0, 0, 331,
	332, 333, 0, 334, 335, 337, 339, 336, 338, 340,
	342, 343, 341, 969, 344, 345, 347, 970, 346, 0,
	218, 971, 348, 0, 955, 349, 505, 351, 352, 0,
	353, 354, 355, 0, 0, 357, 358, 359, 0, 0,
	360, 361, 506, 972, 362, 973, 980, 363, 356, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 981,
	373, 509, 374, 0, 375, 0, 376, 377, 378, 379,
	380, 381, 382, 510, 383, 384, 0, 385, 386, 387,
	388, 389, 0, 391, 392, 393, 390, 394, 395, 396,
	397, 0, 398, 974, 399, 400, 401, 402, 511, 403,
	0, 404, 408, 409, 410, 411, 412, 413, 414, 0,
	420, 421, 415, 417, 418, 419, 416, 422, 423, 424,
	948, 425, 405, 406, 426, 427, 975, 428, 429, 512,
	430, 431, 0, 432, 433, 434, 435, 407, 436, 440,
	441, 437, 438, 439, 982, 0, 443, 444, 442, 0,
	445, 446, 447, 448, 449, 278, 450, 0, 451, 514,
	515, 516, 517, 0, 458, 0, 452, 453, 983, 454,
	984, 0, 455, 456, 457, 0, 459, 460, 0, 0,
	461, 462, 463, 464, 465, 467, 949, 468, 0, 466,
	469, 470, 471, 520, 521, 522, 0, 473, 472, 523,
	835, 0, 213, 0, 474, 475, 524, 476, 477, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 480, 481, 230, 482, 231, 232, 483, 0, 233,
	234, 235, 236, 237, 238, 0, 0, 239, 484, 485,
	486, 0, 240, 487, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 248, 249, 250, 247, 0, 251,
	0, 252, 253, 254, 0, 0, 255, 256, 0, 0,
	0, 0, 0, 0, 0, 257, 258, 259, 260, 261,
	262, 488, 489, 0, 263, 0, 265, 264, 0, 266,
	0, 0, 267, 268, 269, 0, 270, 0, 271, 272,
	0, 273, 490, 274, 275, 277, 279, 276, 280, 281,
	282, 283, 491, 492, 0, 0, 0, 0, 0, 0,
	0, 284, 285, 286, 493, 287, 288, 0, 289, 0,
	290, 0, 0, 0, 291, 292, 0, 293, 494, 0,
	495, 294, 0, 295, 296, 297, 298, 496, 497, 498,
	350, 0, 299, 300, 0, 301, 302, 304, 0, 0,
	0, 303, 305, 312, 0, 0, 306, 499, 308, 307,
	309, 310, 311, 500, 0, 501, 0, 313, 0, 502,
	0, 314, 315, 316, 0, 317, 318, 0, 0, 319,
	320, 321, 322, 323, 0, 325, 324, 0, 326, 503,
	0, 327, 328, 0, 0, 329, 330, 0, 0, 331,
	332, 333, 0, 334, 335, 337, 339, 336, 338, 340,
	342, 343, 341, 0, 344, 345, 347, 0, 346, 0,
	0, 0, 348, 0, 504, 349, 505, 351, 352, 0,
	353, 354, 355, 0, 0, 357, 358, 359, 0, 0,
	360, 361, 506, 0, 362, 0, 507, 363, 356, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 508,
	373, 509, 374, 0, 375, 0, 376, 377, 378, 379,
	380, 381, 382, 510, 383, 384, 0, 385, 386, 387,
	388, 389, 0, 391, 392, 393, 390, 394, 395, 396,
	397, 0, 398, 0, 399, 400, 401, 402, 511, 403,
	0, 404, 408, 409, 410, 411, 412, 413, 414, 182,
	420, 421, 415, 417, 418, 419, 416, 422, 423, 424,
	0, 425, 405, 406, 426, 427, 0, 428, 429, 512,
	430, 431, 0, 432, 433, 434, 435, 407, 436, 440,
	441, 437, 438, 439, 513, 0, 443, 444, 442, 184,
	445, 446, 447, 448, 449, 278, 450, 0, 451, 514,
	515, 516, 517, 0, 458, 0, 452, 453, 518, 454,
	519, 0, 455, 456, 457, 0, 459, 460, 0, 0,
	461, 462, 463, 464, 465, 467, 0, 468, 0, 466,
	469, 470, 471, 1332, 521, 522, 0, 473, 472, 523,
	213, 0, 0, 176, 474, 475, 524, 476, 477, 478,
	0, 177, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 479,
	0, 0, 151, 0, 225, 227, 226, 228, 229, 480,
	481, 230, 482, 231, 232, 483, 0, 233, 234, 235,
	236, 237, 238, 0, 0, 239, 484, 485, 486, 0,
	240, 487, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 0, 255, 256, 0, 0, 0, 0,
	0, 0, 0, 257, 258, 259, 260, 261, 262, 488,
	489, 0, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 268, 269, 0, 270, 0, 271, 272, 0, 273,
	490, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	491, 492, 0, 216, 0, 0, 0, 0, 0, 284,
	285, 286, 493, 287, 288, 0, 289, 0, 290, 0,
	0, 0, 291, 292, 0, 293, 494, 0, 495, 294,
	0, 295, 296, 297, 298, 496, 497, 498, 350, 0,
	299, 300, 0, 301, 302, 304, 0, 0, 217, 303,
	305, 312, 0, 0, 306, 499, 308, 307, 309, 310,
	311, 500, 0, 501, 0, 313, 0, 502, 0, 314,
	315, 316, 0, 317, 318, 0, 0, 319, 320, 321,
	322, 323, 0, 325, 324, 0, 326, 503, 0, 327,
	328, 0, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 343,
	341, 0, 344, 345, 347, 0, 346, 0, 218, 0,
	348, 0, 504, 349, 505, 351, 352, 0, 353, 354,
	355, 0, 0, 357, 358, 359, 0, 0, 360, 361,
	506, 0, 362, 0, 507, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 508, 373, 509,
	374, 0, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 510, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 0, 399, 400, 401, 402, 511, 403, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 0, 420, 421,
	415, 417, 418, 419, 416, 422, 423, 424, 0, 425,
	405, 406, 426, 427, 0, 428, 429, 512, 430, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 441, 437,
	438, 439, 513, 0, 443, 444, 442, 0, 445, 446,
	447, 448, 449, 278, 450, 0, 451, 514, 515, 516,
	517, 0, 458, 0, 452, 453, 518, 454, 519, 0,
	455, 456, 457, 0, 459, 460, 0, 0, 461, 462,
	463, 464, 465, 467, 0, 468, 0, 466, 469, 470,
	471, 520, 521, 522, 0, 473, 472, 523, 1279, 0,
	213, 0, 474, 475, 524, 476, 477, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 479,
	1642, 0, 0, 0, 225, 227, 226, 228, 229, 480,
	481, 230, 482, 231, 232, 483, 0, 233, 234, 235,
	236, 237, 238, 0, 0, 239, 484, 485, 486, 0,
	240, 487, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 0, 255, 256, 0, 0, 0, 0,
	0, 0, 0, 257, 258, 259, 260, 261, 262, 488,
	489, 0, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 268, 269, 0, 270, 0, 271, 272, 0, 273,
	490, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	491, 492, 0, 216, 0, 0, 0, 0, 0, 284,
	285, 286, 493, 287, 288, 0, 289, 0, 290, 0,
	0, 0, 291, 292, 0, 293, 494, 0, 495, 294,
	0, 295, 296, 297, 298, 496, 497, 498, 350, 0,
	299, 300, 0, 301, 302, 304, 0, 0, 217, 303,
	305, 312, 0, 0, 306, 499, 308, 307, 309, 310,
	311, 500, 0, 501, 0, 313, 0, 502, 0, 314,
	315, 316, 0, 317, 318, 0, 0, 319, 320, 321,
	322, 323, 0, 325, 324, 0, 326, 503, 0, 327,
	328, 0, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 343,
	341, 0, 344, 345, 347, 0, 346, 0, 218, 0,
	348, 0, 504, 349, 505, 351, 352, 0, 353, 354,
	355, 0, 0, 357, 358, 359, 0, 0, 360, 361,
	506, 0, 362, 0, 507, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 508, 373, 509,
	374, 0, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 510, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 0, 399, 400, 401, 402, 511, 403, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 0, 420, 421,
	415, 417, 418, 419, 416, 422, 423, 424, 0, 425,
	405, 406, 426, 427, 0, 428, 429, 512, 430, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 441, 437,
	438, 439, 513, 0, 443, 444, 442, 0, 445, 446,
	447, 448, 449, 278, 450, 0, 451, 514, 515, 516,
	517, 0, 458, 0, 452, 453, 518, 454, 519, 0,
	455, 456, 457, 0, 459, 460, 0, 0, 461, 462,
	463, 464, 465, 467, 0, 468, 0, 466, 469, 470,
	471, 520, 521, 522, 0, 473, 472, 523, 213, 0,
	0, 0, 474, 475, 524, 476, 477, 478, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 479, 1283, 0,
	0, 0, 225, 227, 226, 228, 229, 480, 481, 230,
	482, 231, 232, 483, 0, 233, 234, 235, 236, 237,
	238, 0, 0, 239, 484, 485, 486, 0, 240, 487,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	248, 249, 250, 247, 0, 251, 0, 252, 253, 254,
	0, 0, 255, 256, 0, 0, 0, 0, 0, 0,
	0, 257, 258, 259, 260, 261, 262, 488, 489, 0,
	263, 0, 265, 264, 0, 266, 0, 0, 267, 268,
	269, 0, 270, 0, 271, 272, 0, 273, 490, 274,
	275, 277, 279, 276, 280, 281, 282, 283, 491, 492,
	0, 216, 0, 0, 0, 0, 0, 284, 285, 286,
	493, 287, 288, 0, 289, 0, 290, 0, 0, 0,
	291, 292, 0, 293, 494, 0, 495, 294, 0, 295,
	296, 297, 298, 496, 497, 498, 350, 0, 299, 300,
	0, 301, 302, 304, 0, 0, 217, 303, 305, 312,
	0, 0, 306, 499, 308, 307, 309, 310, 311, 500,
	0, 501, 0, 313, 0, 502, 0, 314, 315, 316,
	0, 317, 318, 0, 0, 319, 320, 321, 322, 323,
	0, 325, 324, 0, 326, 503, 0, 327, 328, 0,
	0, 329, 330, 0, 0, 331, 332, 333, 0, 334,
	335, 337, 339, 336, 338, 340, 342, 343, 341, 0,
	344, 345, 347, 0, 346, 0, 218, 0, 348, 0,
	504, 349, 505, 351, 352, 0, 353, 354, 355, 0,
	0, 357, 358, 359, 0, 0, 360, 361, 506, 0,
	362, 0, 507, 363, 356, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 508, 373, 509, 374, 0,
	375, 0, 376, 377, 378, 379, 380, 381, 382, 510,
	383, 384, 0, 385, 386, 387, 388, 389, 0, 391,
	392, 393, 390, 394, 395, 396, 397, 0, 398, 0,
	399, 400, 401, 402, 511, 403, 0, 404, 408, 409,
	410, 411, 412, 413, 414, 0, 420, 421, 415, 417,
	418, 419, 416, 422, 423, 424, 0, 425, 405, 406,
	426, 427, 0, 428, 429, 512, 430, 431, 0, 432,
	433, 434, 435, 407, 436, 440, 441, 437, 438, 439,
	513, 0, 443, 444, 442, 0, 445, 446, 447, 448,
	449, 278, 450, 0, 451, 514, 515, 516, 517, 0,
	458, 0, 452, 453, 518, 454, 519, 0, 455, 456,
	457, 0, 459, 460, 0, 0, 461, 462, 463, 464,
	465, 467, 0, 468, 0, 466, 469, 470, 471, 520,
	521, 522, 0, 473, 472, 523, 213, 0, 0, 0,
	474, 475, 524, 476, 477, 478, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 479, 2790, 0, 0, 0,
	225, 227, 226, 228, 229, 480, 481, 230, 482, 231,
	232, 483, 0, 233, 234, 235, 236, 237, 238, 0,
	0, 239, 484, 485, 486, 0, 240, 487, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 248, 249,
	250, 247, 0, 251, 0, 252, 253, 254, 0, 0,
	255, 256, 0, 0, 0, 0, 0, 0, 0, 257,
	258, 259, 260, 261, 262, 488, 489, 0, 263, 0,
	265, 264, 0, 266, 0, 0, 267, 268, 269, 0,
	270, 0, 271, 272, 0, 273, 490, 274, 275, 277,
	279, 276, 280, 281, 282, 283, 491, 492, 0, 216,
	0, 0, 0, 0, 0, 284, 285, 286, 493, 287,
	288, 0, 289, 0, 290, 0, 0, 0, 291, 292,
	0, 293, 494, 0, 495, 294, 0, 295, 296, 297,
	298, 496, 497, 498, 350, 0, 299, 300, 0, 301,
	302, 304, 0, 0, 217, 303, 305, 312, 0, 0,
	306, 499, 308, 307, 309, 310, 311, 500, 0, 501,
	0, 313, 0, 502, 0, 314, 315, 316, 0, 317,
	318, 0, 0, 319, 320, 321, 322, 323, 0, 325,
	324, 0, 326, 503, 0, 327, 328, 0, 0, 329,
	330, 0, 0, 331, 332, 333, 0, 334, 335, 337,
	339, 336, 338, 340, 342, 343, 341, 0, 344, 345,
	347, 0, 346, 0, 218, 0, 348, 0, 504, 349,
	505, 351, 352, 0, 353, 354, 355, 0, 0, 357,
	358, 359, 0, 0, 360, 361, 506, 0, 362, 0,
	507, 363, 356, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 508, 373, 509, 374, 0, 375, 0,
	376, 377, 378, 379, 380, 381, 382, 510, 383, 384,
	0, 385, 386, 387, 388, 389, 0, 391, 392, 393,
	390, 394, 395, 396, 397, 0, 398, 0, 399, 400,
	401, 402, 511, 403, 0, 404, 408, 409, 410, 411,
	412, 413, 414, 0, 420, 421, 415, 417, 418, 419,
	416, 422, 423, 424, 0, 425, 405, 406, 426, 427,
	0, 428, 429, 512, 430, 431, 0, 432, 433, 434,
	435, 407, 436, 440, 441, 437, 438, 439, 513, 0,
	443, 444, 442, 0, 445, 446, 447, 448, 449, 278,
	450, 0, 451, 514, 515, 516, 517, 0, 458, 0,
	452, 453, 518, 454, 519, 0, 455, 456, 457, 0,
	459, 460, 0, 0, 461, 462, 463, 464, 465, 467,
	0, 468, 0, 466, 469, 470, 471, 520, 521, 522,
	0, 473, 472, 523, 213, 0, 0, 0, 474, 475,
	524, 476, 477, 478, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 479, 1283, 0, 0, 0, 225, 227,
	226, 228, 229, 480, 481, 230, 482, 231, 232, 483,
	0, 233, 234, 235, 236, 237, 238, 0, 0, 239,
	484, 485, 486, 0, 240, 487, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 248, 249, 250, 247,
	0, 251, 0, 252, 253, 254, 0, 0, 255, 256,
	0, 0, 0, 0, 0, 0, 0, 257, 258, 259,
	260, 261, 262, 488, 489, 0, 263, 0, 265, 264,
	0, 266, 0, 0, 267, 268, 269, 0, 270, 0,
	271, 272, 0, 273, 490, 274, 275, 277, 279, 276,
	280, 281, 282, 283, 491, 492, 0, 0, 0, 0,
	0, 0, 0, 284, 285, 286, 493, 287, 288, 0,
	289, 0, 290, 0, 0, 0, 291, 292, 0, 293,
	494, 0, 495, 294, 0, 295, 296, 297, 298, 496,
	497, 498, 350, 0, 299, 300, 0, 301, 302, 304,
	0, 0, 0, 303, 305, 312, 0, 0, 306, 499,
	308, 307, 309, 310, 311, 500, 0, 501, 0, 313,
	0, 502, 0, 314, 315, 316, 0, 317, 318, 0,
	0, 319, 320, 321, 322, 323, 0, 325, 324, 0,
	326, 503, 0, 327, 328, 0, 0, 329, 330, 0,
	0, 331, 332, 333, 0, 334, 335, 337, 339, 336,
	338, 340, 342, 343, 341, 0, 344, 345, 347, 0,
	346, 0, 0, 0, 348, 0, 504, 349, 505, 351,
	352, 0, 353, 354, 355, 0, 0, 357, 358, 359,
	0, 0, 360, 361, 506, 0, 362, 0, 507, 363,
	356, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 508, 373, 509, 374, 0, 375, 0, 376, 377,
	378, 379, 380, 381, 382, 510, 383, 384, 0, 385,
	386, 387, 388, 389, 0, 391, 392, 393, 390, 394,
	395, 396, 397, 0, 398, 0, 399, 400, 401, 402,
	511, 403, 0, 404, 408, 409, 410, 411, 412, 413,
	414, 0, 420, 421, 415, 417, 418, 419, 416, 422,
	423, 424, 0, 425, 405, 406, 426, 427, 0, 428,
	429, 512, 430, 431, 0, 432, 433, 434, 435, 407,
	436, 440, 441, 437, 438, 439, 513, 0, 443, 444,
	442, 0, 445, 446, 447, 448, 449, 278, 450, 0,
	451, 514, 515, 516, 517, 0, 458, 0, 452, 453,
	518, 454, 519, 0, 455, 456, 457, 0, 459, 460,
	0, 0, 461, 462, 463, 464, 465, 467, 0, 468,
	0, 466, 469, 470, 471, 520, 521, 522, 0, 473,
	472, 523, 213, 0, 0, 0, 474, 475, 524, 476,
	477, 478, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 479, 0, 0, 2409, 0, 225, 227, 226, 228,
	229, 480, 481, 230, 482, 231, 232, 483, 0, 233,
	234, 235, 236, 237, 238, 0, 0, 239, 484, 485,
	486, 0, 240, 487, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 248, 249, 250, 247, 0, 251,
	0, 252, 253, 254, 0, 0, 255, 256, 0, 0,
	0, 0, 0, 0, 0, 257, 258, 259, 260, 261,
	262, 488, 489, 0, 263, 0, 265, 264, 0, 266,
	0, 0, 267, 268, 269, 0, 270, 0, 271, 272,
	0, 273, 490, 274, 275, 277, 279, 276, 280, 281,
	282, 283, 491, 492, 0, 0, 0, 0, 0, 0,
	0, 284, 285, 286, 493, 287, 288, 0, 289, 0,
	290, 0, 0, 0, 291, 292, 0, 293, 494, 0,
	495, 294, 0, 295, 296, 297, 298, 496, 497, 498,
	350, 0, 299, 300, 0, 301, 302, 304, 0, 0,
	0, 303, 305, 312, 0, 0, 306, 499, 308, 307,
	309, 310, 311, 500, 0, 501, 0, 313, 0, 502,
	0, 314, 315, 316, 0, 317, 318, 0, 0, 319,
	320, 321, 322, 323, 0, 325, 324, 0, 326, 503,
	0, 327, 328, 0, 0, 329, 330, 0, 0, 331,
	332, 333, 0, 334, 335, 337, 339, 336, 338, 340,
	342, 343, 341, 0, 344, 345, 347, 0, 346, 0,
	0, 0, 348, 0, 504, 349, 505, 351, 352, 0,
	353, 354, 355, 0, 0, 357, 358, 359, 0, 0,
	360, 361, 506, 0, 362, 0, 507, 363, 356, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 508,
	373, 509, 374, 0, 375, 0, 376, 377, 378, 379,
	380, 381, 382, 510, 383, 384, 0, 385, 386, 387,
	388, 389, 0, 391, 392, 393, 390, 394, 395, 396,
	397, 0, 398, 0, 399, 400, 401, 402, 511, 403,
	0, 404, 408, 409, 410, 411, 412, 413, 414, 0,
	420, 421, 415, 417, 418, 419, 416, 422, 423, 424,
	0, 425, 405, 406, 426, 427, 0, 428, 429, 512,
	430, 431, 0, 432, 433, 434, 435, 407, 436, 440,
	441, 437, 438, 439, 513, 0, 443, 444, 442, 0,
	445, 446, 447, 448, 449, 278, 450, 0, 451, 514,
	515, 516, 517, 0, 458, 0, 452, 453, 518, 454,
	519, 0, 455, 456, 457, 0, 459, 460, 0, 0,
	461, 462, 463, 464, 465, 467, 0, 468, 0, 466,
	469, 470, 471, 520, 521, 522, 0, 473, 472, 523,
	213, 0, 0, 0, 474, 475, 524, 476, 477, 478,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 479,
	0, 0, 2926, 0, 225, 227, 226, 228, 229, 480,
	481, 230, 482, 231, 232, 483, 0, 233, 234, 235,
	236, 237, 238, 0, 0, 239, 484, 485, 486, 0,
	240, 487, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 0, 255, 256, 0, 0, 0, 0,
	0, 0, 0, 257, 258, 259, 260, 261, 262, 488,
	489, 0, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 268, 269, 0, 270, 0, 271, 272, 0, 273,
	490, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	491, 492, 0, 0, 0, 0, 0, 0, 0, 284,
	285, 286, 493, 287, 288, 0, 289, 0, 290, 0,
	0, 0, 291, 292, 0, 293, 494, 0, 495, 294,
	0, 295, 296, 297, 298, 496, 497, 498, 350, 0,
	299, 300, 0, 301, 302, 304, 0, 0, 0, 303,
	305, 312, 0, 0, 306, 499, 308, 307, 309, 310,
	311, 500, 0, 501, 0, 313, 0, 502, 0, 314,
	315, 316, 0, 317, 318, 0, 0, 319, 320, 321,
	322, 323, 0, 325, 324, 0, 326, 503, 0, 327,
	328, 0, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 343,
	341, 0, 344, 345, 347, 0, 346, 0, 0, 0,
	348, 0, 504, 349, 505, 351, 352, 0, 353, 354,
	355, 0, 0, 357, 358, 359, 0, 0, 360, 361,
	506, 0, 362, 0, 507, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 508, 373, 509,
	374, 0, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 510, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 0, 399, 400, 401, 402, 511, 403, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 0, 420, 421,
	415, 417, 418, 419, 416, 422, 423, 424, 0, 425,
	405, 406, 426, 427, 0, 428, 429, 512, 430, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 441, 437,
	438, 439, 513, 0, 443, 444, 442, 0, 445, 446,
	447, 448, 449, 278, 450, 0, 451, 514, 515, 516,
	517, 0, 458, 0, 452, 453, 518, 454, 519, 0,
	455, 456, 457, 0, 459, 460, 0, 0, 461, 462,
	463, 464, 465, 467, 0, 468, 0, 466, 469, 470,
	471, 520, 521, 522, 0, 473, 472, 523, 702, 0,
	591, 0, 474, 475, 524, 476, 477, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 479,
	1910, 0, 0, 0, 225, 227, 226, 228, 229, 480,
	481, 230, 482, 231, 232, 483, 0, 233, 234, 235,
	236, 237, 238, 0, 0, 239, 484, 485, 486, 0,
	240, 487, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 248, 249, 250, 247, 0, 251, 0, 252,
	253, 254, 0, 0, 255, 256, 0, 0, 0, 0,
	0, 0, 0, 257, 258, 597, 260, 261, 262, 488,
	489, 0, 263, 0, 265, 264, 0, 266, 0, 0,
	267, 268, 269, 0, 270, 0, 271, 272, 0, 273,
	490, 274, 275, 277, 279, 276, 280, 281, 282, 283,
	491, 492, 0, 216, 0, 0, 0, 0, 0, 284,
	285, 286, 493, 287, 288, 0, 289, 0, 290, 0,
	0, 0, 291, 292, 0, 293, 494, 0, 495, 294,
	0, 295, 296, 297, 298, 496, 497, 498, 350, 0,
	299, 300, 0, 301, 302, 304, 0, 0, 217, 303,
	305, 312, 0, 0, 306, 499, 308, 307, 309, 310,
	311, 500, 0, 501, 0, 313, 0, 502, 0, 314,
	315, 316, 0, 317, 318, 0, 0, 319, 320, 321,
	322, 323, 0, 325, 324, 0, 326, 503, 0, 327,
	328, 0, 0, 329, 330, 0, 0, 331, 332, 333,
	0, 334, 335, 337, 339, 336, 338, 340, 342, 343,
	341, 0, 344, 345, 347, 0, 346, 0, 218, 0,
	348, 0, 504, 349, 505, 351, 352, 0, 353, 354,
	355, 0, 0, 357, 358, 359, 0, 0, 360, 361,
	506, 0, 362, 0, 507, 363, 356, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 508, 373, 509,
	374, 0, 375, 0, 376, 377, 378, 379, 380, 381,
	382, 510, 383, 384, 0, 385, 386, 387, 388, 389,
	0, 391, 392, 393, 390, 394, 395, 396, 397, 0,
	398, 0, 399, 400, 401, 402, 511, 403, 0, 404,
	408, 409, 410, 411, 412, 413, 414, 0, 420, 421,
	415, 417, 418, 419, 416, 422, 423, 424, 0, 425,
	405, 406, 426, 427, 0, 428, 429, 512, 430, 431,
	0, 432, 433, 434, 435, 407, 436, 440, 441, 437,
	438, 439, 513, 0, 443, 444, 442, 596, 445, 446,
	447, 448, 449, 278, 450, 0, 451, 514, 515, 516,
	517, 0, 458, 0, 452, 453, 518, 454, 519, 0,
	455, 456, 457, 0, 459, 460, 0, 0, 461, 462,
	463, 464, 465, 467, 0, 468, 0, 466, 469, 470,
	471, 520, 521, 522, 0, 473, 472, 523, 0, 590,
	0, 591, 474, 475, 524, 476, 477, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 600, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 597, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 216, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 217,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 218,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 596, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 591,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 600, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 597, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 1942, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 596, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 591, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 600, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 597, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 217, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 218, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 596, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 1363, 0, 1184, 1183, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	1088, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 1362, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 963, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 0, 0, 971, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 1361, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	1360, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 1327, 0, 1184, 1183, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	1088, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1326, 497, 498, 350, 963, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 0, 0, 971, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 1323, 0, 1184, 1183, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	1088, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1322, 497, 498, 350, 963, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 0, 0, 971, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 1259, 0, 1184, 1183, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	1088, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1258, 497, 498, 350, 963, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 0, 0, 971, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 1256, 0, 1184, 1183, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	1088, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1255, 497, 498, 350, 963, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 0, 0, 971, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 1177, 0, 1184, 1183, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	1088, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1179, 497, 498, 350, 963, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 0, 0, 971, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 1184, 1183, 0, 0, 0,
	0, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 1088, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 960, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 216, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 961, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 963, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 962, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 964, 502, 965, 314, 315, 316, 966, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 967, 327, 328, 968, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 969, 344, 345, 347,
	970, 346, 0, 0, 971, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 972, 362, 973, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 974, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 975,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 213,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1184, 1183, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 600, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	1088, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	960, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 1731, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 961, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 963, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	962, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 964, 502, 965, 314, 315, 316, 966,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 967, 327, 328, 968, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 969, 344,
	345, 347, 970, 346, 0, 0, 971, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 972, 362,
	973, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 974, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 975, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 1184, 1183, 0, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 1088, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 960, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 216, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 961, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 963, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 962, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 964, 502, 965, 314, 315, 316, 966, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 967, 327, 328, 968, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 969, 344, 345, 347,
	970, 346, 0, 0, 971, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 972, 362, 973, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 974, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 975,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 1184,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 1088, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 960, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	961, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 963, 299,
	300, 0, 301, 302, 304, 0, 0, 0, 303, 305,
	312, 0, 962, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 964, 502, 965, 314, 315,
	316, 966, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 967, 327, 328,
	968, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	969, 344, 345, 347, 970, 346, 0, 0, 971, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	972, 362, 973, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	974, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 975, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 213, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 0,
	233, 234, 235, 236, 237, 238, 0, 0, 239, 484,
	485, 486, 2297, 240, 487, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 2294,
	251, 0, 252, 253, 254, 0, 0, 255, 256, 0,
	0, 0, 0, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 488, 489, 0, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 268, 269, 0, 270, 0, 271,
	272, 0, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 0, 2445, 0, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	0, 290, 2300, 0, 0, 291, 292, 0, 293, 494,
	0, 495, 294, 0, 295, 296, 297, 298, 496, 497,
	498, 350, 0, 299, 300, 0, 301, 302, 304, 0,
	0, 2442, 303, 305, 312, 0, 0, 306, 499, 308,
	307, 309, 310, 311, 500, 0, 501, 0, 2444, 0,
	502, 0, 314, 315, 316, 0, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	503, 0, 327, 328, 2441, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 0, 344, 345, 347, 0, 346,
	0, 0, 0, 348, 0, 504, 349, 505, 351, 352,
	0, 353, 354, 355, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 0, 362, 0, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	508, 373, 509, 374, 2299, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 0, 425, 405, 406, 426, 427, 0, 428, 429,
	512, 430, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 450, 0, 451,
	514, 515, 516, 517, 0, 458, 0, 452, 453, 518,
	454, 519, 0, 455, 456, 457, 0, 459, 460, 0,
	2443, 461, 462, 463, 464, 465, 467, 0, 468, 0,
	466, 469, 470, 471, 520, 521, 522, 213, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 2297, 240, 487, 0,
	0, 2291, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 2294, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 2300, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 2290, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 0, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 2299, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 2298, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 1418, 0, 213, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 217, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 218, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 1421, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 1419, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 1420, 472, 523, 1172, 0, 213, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1174, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 217, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 218, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 1017,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 1169, 0, 213, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1171, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 217, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 218, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 1017,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 1076, 0, 213, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	216, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1078, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 217, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 218, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 1017,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 553, 0, 213, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 552, 223, 542,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 545,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 546, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 0, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 547, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 0, 473, 472, 523, 541, 0, 213, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 542,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 545,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 546, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 0, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 547, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 213, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 216, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 217,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 2755, 346, 0, 218,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 213, 473, 472, 523, 0,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 216, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 217, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 218, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 1017, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 0,
	473, 472, 523, 2380, 0, 213, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 216, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 217, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 218, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 0,
	473, 472, 523, 1919, 0, 213, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 216, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 217, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 218, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 213,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 1845, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1849, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 1848, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1838, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 1840, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1316, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 1315, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1313, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 1312, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1310, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 1309, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1306, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 1305, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 1194, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 1196, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 213, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 0,
	233, 234, 235, 236, 237, 238, 0, 0, 239, 484,
	485, 486, 0, 240, 487, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 0, 255, 256, 0,
	0, 0, 0, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 488, 489, 0, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 268, 269, 0, 270, 0, 271,
	272, 0, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 0, 216, 0, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	0, 290, 0, 0, 0, 291, 292, 0, 293, 494,
	0, 495, 294, 0, 295, 296, 297, 298, 496, 497,
	498, 350, 0, 299, 300, 0, 301, 302, 304, 0,
	0, 217, 303, 305, 312, 0, 0, 306, 499, 308,
	307, 309, 310, 311, 500, 0, 501, 0, 313, 0,
	502, 0, 314, 315, 316, 0, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	503, 0, 327, 328, 0, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 0, 344, 345, 347, 0, 346,
	0, 218, 0, 348, 0, 504, 349, 505, 351, 352,
	0, 353, 354, 355, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 0, 362, 0, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	508, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 0, 425, 405, 406, 426, 427, 0, 428, 429,
	512, 430, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 450, 0, 451,
	514, 515, 516, 517, 0, 458, 0, 452, 453, 518,
	454, 519, 0, 455, 456, 457, 0, 459, 460, 0,
	0, 461, 462, 463, 464, 465, 467, 0, 468, 0,
	466, 469, 470, 471, 520, 521, 522, 213, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 545,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 546, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 0, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 547, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 213, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 1949, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 216, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 217,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 218,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 213, 473, 472, 523, 0,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	1947, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 216, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 217, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 218, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 213,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 1945, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 216, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 217, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 218, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 694, 0, 213,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 0, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 693, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 0, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 692, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 213, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 0,
	233, 234, 235, 236, 237, 238, 0, 0, 239, 484,
	485, 486, 0, 240, 487, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 0, 255, 256, 0,
	0, 0, 0, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 488, 489, 0, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 268, 269, 0, 270, 0, 271,
	272, 0, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 0, 2445, 0, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	0, 290, 0, 0, 0, 291, 292, 0, 293, 494,
	0, 495, 294, 0, 295, 296, 297, 298, 496, 497,
	498, 350, 0, 299, 300, 0, 301, 302, 304, 0,
	0, 0, 303, 305, 312, 0, 0, 306, 499, 308,
	307, 309, 310, 311, 500, 0, 501, 0, 313, 0,
	502, 0, 314, 315, 316, 0, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	503, 0, 327, 328, 0, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 0, 344, 345, 347, 0, 346,
	0, 0, 0, 348, 0, 504, 349, 505, 351, 352,
	0, 353, 354, 355, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 0, 362, 0, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	508, 373, 509, 374, 3260, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 0, 425, 405, 406, 426, 427, 0, 428, 429,
	512, 430, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 450, 0, 451,
	514, 515, 516, 517, 0, 458, 0, 452, 453, 518,
	454, 519, 0, 455, 456, 457, 0, 459, 460, 0,
	0, 461, 462, 463, 464, 465, 467, 0, 468, 0,
	466, 469, 470, 471, 520, 521, 522, 0, 473, 472,
	523, 532, 0, 213, 0, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 531, 224, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 0,
	233, 234, 235, 236, 237, 238, 0, 0, 239, 484,
	485, 486, 0, 240, 487, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 0, 255, 256, 0,
	0, 0, 0, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 488, 489, 0, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 268, 269, 0, 270, 0, 271,
	272, 0, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	0, 290, 0, 0, 0, 291, 292, 0, 293, 494,
	0, 495, 294, 0, 295, 296, 297, 298, 496, 497,
	498, 350, 0, 299, 300, 0, 301, 302, 304, 0,
	0, 0, 303, 305, 312, 0, 0, 306, 499, 308,
	307, 309, 310, 311, 500, 0, 501, 0, 313, 0,
	502, 0, 314, 315, 316, 0, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	503, 0, 327, 328, 0, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 0, 344, 345, 347, 0, 346,
	0, 0, 0, 348, 0, 504, 349, 505, 351, 352,
	0, 353, 354, 355, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 0, 362, 0, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	508, 373, 509, 530, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 0, 425, 405, 406, 426, 427, 0, 428, 429,
	512, 430, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 450, 0, 451,
	514, 515, 516, 517, 0, 458, 0, 452, 453, 518,
	454, 519, 0, 455, 456, 457, 0, 459, 460, 0,
	0, 461, 462, 463, 464, 465, 467, 0, 468, 0,
	466, 469, 470, 471, 520, 521, 522, 0, 473, 472,
	523, 213, 2432, 0, 0, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 213, 473, 472, 523, 0,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 3051, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 213,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	2223, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 0, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 0, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 213, 2432, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 496, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 0, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 2429, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 213, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 219, 220,
	221, 222, 223, 1926, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 1917,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 573,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 1054, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 1052,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 574, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 570, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 1055, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 569, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 1862,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 1861, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 573,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 563, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 574, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 570, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 1337, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 569, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 1320,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 1319, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 1267,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 1266, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 1248,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 1188,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 0, 473, 472, 523, 573,
	0, 213, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 1054, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 1052,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 496, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 574, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 570, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 1055, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 569, 515,
	516, 517, 0, 458, 0, 452, 1053, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 213, 473, 472, 523, 0,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 219, 220, 221, 222, 223, 1036, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 0,
	473, 472, 523, 573, 0, 213, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 563, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 561, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 562,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 574, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 564, 403, 0, 404, 408, 409, 570, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 565, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 569, 515, 516, 517, 0, 458, 0, 452,
	567, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 0,
	473, 472, 523, 557, 0, 213, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 558, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 0,
	473, 472, 523, 555, 0, 213, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 0,
	473, 472, 523, 549, 0, 213, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 0,
	473, 472, 523, 527, 0, 213, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 213,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 0, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 0, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 213, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 0,
	233, 234, 235, 236, 237, 238, 0, 0, 239, 484,
	485, 486, 0, 240, 487, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 0, 255, 256, 0,
	0, 0, 0, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 488, 489, 0, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 268, 269, 0, 270, 0, 271,
	272, 0, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	0, 290, 0, 0, 0, 291, 292, 0, 293, 494,
	0, 495, 294, 0, 295, 296, 297, 298, 2731, 497,
	498, 350, 0, 299, 300, 0, 301, 302, 304, 0,
	0, 0, 303, 305, 312, 0, 0, 306, 499, 308,
	307, 309, 310, 311, 500, 0, 501, 0, 313, 0,
	502, 0, 314, 315, 316, 0, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	503, 0, 327, 328, 0, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 0, 344, 345, 347, 0, 346,
	0, 0, 0, 348, 0, 504, 349, 505, 351, 352,
	0, 353, 354, 355, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 0, 362, 0, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	508, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 0, 425, 405, 406, 426, 427, 0, 428, 429,
	512, 430, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 450, 0, 451,
	514, 515, 516, 517, 0, 458, 0, 452, 453, 518,
	454, 519, 0, 455, 456, 457, 0, 459, 460, 0,
	0, 461, 462, 463, 464, 465, 467, 0, 468, 0,
	466, 469, 470, 471, 520, 521, 522, 213, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 2729, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 0, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 213, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 2716, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 213, 473, 472, 523, 0,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	2392, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 383, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 213,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 294, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 0, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 0, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 380, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 403, 0, 404, 558,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 213, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 479, 0, 1875, 0, 0, 225, 227, 226,
	228, 229, 480, 481, 230, 482, 231, 232, 483, 0,
	233, 234, 235, 236, 237, 238, 0, 0, 239, 484,
	485, 486, 0, 240, 487, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 248, 249, 250, 247, 0,
	251, 0, 252, 253, 254, 0, 0, 255, 256, 0,
	0, 0, 0, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 488, 489, 0, 263, 0, 265, 264, 0,
	266, 0, 0, 267, 268, 269, 0, 270, 0, 271,
	272, 0, 273, 490, 274, 275, 277, 279, 276, 280,
	281, 282, 283, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 284, 285, 286, 493, 287, 288, 0, 289,
	0, 290, 0, 0, 0, 291, 292, 0, 293, 494,
	0, 495, 294, 0, 295, 296, 297, 298, 496, 497,
	498, 350, 0, 299, 300, 0, 301, 302, 304, 0,
	0, 0, 303, 305, 312, 0, 0, 306, 499, 308,
	307, 309, 310, 311, 500, 0, 501, 0, 313, 0,
	502, 0, 314, 315, 316, 0, 317, 318, 0, 0,
	319, 320, 321, 322, 323, 0, 325, 324, 0, 326,
	503, 0, 327, 328, 0, 0, 329, 330, 0, 0,
	331, 332, 333, 0, 334, 335, 337, 339, 336, 338,
	340, 342, 343, 341, 0, 344, 345, 347, 0, 346,
	0, 0, 0, 348, 0, 504, 349, 505, 351, 352,
	0, 353, 354, 355, 0, 0, 357, 358, 359, 0,
	0, 360, 361, 506, 0, 362, 0, 507, 363, 356,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	508, 373, 509, 374, 0, 375, 0, 376, 377, 378,
	379, 380, 381, 382, 510, 383, 384, 0, 385, 386,
	387, 388, 389, 0, 391, 392, 393, 390, 394, 395,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 511,
	403, 0, 404, 408, 409, 410, 411, 412, 413, 414,
	0, 420, 421, 415, 417, 418, 419, 416, 422, 423,
	424, 0, 0, 405, 406, 426, 427, 0, 428, 429,
	512, 430, 431, 0, 432, 433, 434, 435, 407, 436,
	440, 441, 437, 438, 439, 513, 0, 443, 444, 442,
	0, 445, 446, 447, 448, 449, 278, 450, 0, 451,
	514, 515, 516, 517, 0, 458, 0, 452, 453, 518,
	454, 519, 0, 455, 456, 457, 0, 459, 460, 0,
	0, 461, 462, 463, 464, 465, 467, 0, 468, 0,
	466, 469, 470, 471, 520, 521, 522, 213, 473, 472,
	523, 0, 0, 0, 0, 474, 475, 524, 476, 477,
	478, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 480, 481, 230, 482,
	231, 232, 483, 0, 233, 234, 235, 236, 237, 238,
	0, 0, 239, 484, 485, 486, 0, 240, 487, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 248,
	249, 250, 247, 0, 251, 0, 252, 253, 254, 0,
	0, 255, 256, 0, 0, 0, 0, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 488, 489, 0, 263,
	0, 265, 264, 0, 266, 0, 0, 267, 268, 269,
	0, 270, 0, 271, 272, 0, 273, 490, 274, 275,
	277, 279, 276, 280, 281, 282, 283, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 284, 285, 286, 493,
	287, 288, 0, 289, 0, 290, 0, 0, 0, 291,
	292, 0, 293, 494, 0, 495, 294, 0, 295, 296,
	297, 298, 1289, 497, 498, 350, 0, 299, 300, 0,
	301, 302, 304, 0, 0, 0, 303, 305, 312, 0,
	0, 306, 499, 308, 307, 309, 310, 311, 500, 0,
	501, 0, 313, 0, 502, 0, 314, 315, 316, 0,
	317, 318, 0, 0, 319, 320, 321, 322, 323, 0,
	325, 324, 0, 326, 503, 0, 327, 328, 0, 0,
	329, 330, 0, 0, 331, 332, 333, 0, 334, 335,
	337, 339, 336, 338, 340, 342, 343, 341, 0, 344,
	345, 347, 0, 346, 0, 0, 0, 348, 0, 504,
	349, 505, 351, 352, 0, 353, 354, 355, 0, 0,
	357, 358, 359, 0, 0, 360, 361, 506, 0, 362,
	0, 507, 363, 356, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 508, 373, 509, 374, 0, 375,
	0, 376, 377, 378, 379, 380, 381, 382, 510, 383,
	384, 0, 385, 386, 387, 388, 389, 0, 391, 392,
	393, 390, 394, 395, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 511, 403, 0, 404, 408, 409, 410,
	411, 412, 413, 414, 0, 420, 421, 415, 417, 418,
	419, 416, 422, 423, 424, 0, 425, 405, 406, 426,
	427, 0, 428, 429, 512, 430, 431, 0, 432, 433,
	434, 435, 407, 436, 440, 441, 437, 438, 439, 513,
	0, 443, 444, 442, 0, 445, 446, 447, 448, 449,
	278, 450, 0, 451, 514, 515, 516, 517, 0, 458,
	0, 452, 453, 518, 454, 519, 0, 455, 456, 457,
	0, 459, 460, 0, 0, 461, 462, 463, 464, 465,
	467, 0, 468, 0, 466, 469, 470, 471, 520, 521,
	522, 213, 473, 472, 523, 0, 0, 0, 0, 474,
	475, 524, 476, 477, 478, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	480, 481, 230, 482, 231, 232, 483, 0, 233, 234,
	235, 236, 237, 238, 0, 0, 239, 484, 485, 486,
	0, 240, 487, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 248, 249, 250, 247, 0, 251, 0,
	252, 253, 254, 0, 0, 255, 256, 0, 0, 0,
	0, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	488, 489, 0, 263, 0, 265, 264, 0, 266, 0,
	0, 267, 268, 269, 0, 270, 0, 271, 272, 0,
	273, 490, 274, 275, 277, 279, 276, 280, 281, 282,
	283, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	284, 285, 286, 493, 287, 288, 0, 289, 0, 290,
	0, 0, 0, 291, 292, 0, 293, 494, 0, 495,
	294, 0, 295, 296, 297, 298, 1229, 497, 498, 350,
	0, 299, 300, 0, 301, 302, 304, 0, 0, 0,
	303, 305, 312, 0, 0, 306, 499, 308, 307, 309,
	310, 311, 500, 0, 501, 0, 313, 0, 502, 0,
	314, 315, 316, 0, 317, 318, 0, 0, 319, 320,
	321, 322, 323, 0, 325, 324, 0, 326, 503, 0,
	327, 328, 0, 0, 329, 330, 0, 0, 331, 332,
	333, 0, 334, 335, 337, 339, 336, 338, 340, 342,
	343, 341, 0, 344, 345, 347, 0, 346, 0, 0,
	0, 348, 0, 504, 349, 505, 351, 352, 0, 353,
	354, 355, 0, 0, 357, 358, 359, 0, 0, 360,
	361, 506, 0, 362, 0, 507, 363, 356, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 508, 373,
	509, 374, 0, 375, 0, 376, 377, 378, 379, 380,
	381, 382, 510, 383, 384, 0, 385, 386, 387, 388,
	389, 0, 391, 392, 393, 390, 394, 395, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 511, 403, 0,
	404, 408, 409, 410, 411, 412, 413, 414, 0, 420,
	421, 415, 417, 418, 419, 416, 422, 423, 424, 0,
	425, 405, 406, 426, 427, 0, 428, 429, 512, 430,
	431, 0, 432, 433, 434, 435, 407, 436, 440, 441,
	437, 438, 439, 513, 0, 443, 444, 442, 0, 445,
	446, 447, 448, 449, 278, 450, 0, 451, 514, 515,
	516, 517, 0, 458, 0, 452, 453, 518, 454, 519,
	0, 455, 456, 457, 0, 459, 460, 0, 0, 461,
	462, 463, 464, 465, 467, 0, 468, 0, 466, 469,
	470, 471, 520, 521, 522, 213, 473, 472, 523, 0,
	0, 0, 0, 474, 475, 524, 476, 477, 478, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 480, 481, 230, 482, 231, 232,
	483, 0, 233, 234, 235, 236, 237, 238, 0, 0,
	239, 484, 485, 486, 0, 240, 487, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 248, 249, 250,
	247, 0, 251, 0, 252, 253, 254, 0, 0, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 488, 489, 0, 263, 0, 265,
	264, 0, 266, 0, 0, 267, 268, 269, 0, 270,
	0, 271, 272, 0, 273, 490, 274, 275, 277, 279,
	276, 280, 281, 282, 283, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 286, 493, 287, 288,
	0, 289, 0, 290, 0, 0, 0, 291, 292, 0,
	293, 494, 0, 495, 294, 0, 295, 296, 297, 298,
	496, 497, 498, 350, 0, 299, 300, 0, 301, 302,
	304, 0, 0, 0, 303, 305, 312, 0, 0, 306,
	499, 308, 307, 309, 310, 311, 500, 0, 501, 0,
	313, 0, 502, 0, 314, 315, 316, 0, 317, 318,
	0, 0, 319, 320, 321, 322, 323, 0, 325, 324,
	0, 326, 503, 0, 327, 328, 0, 0, 329, 330,
	0, 0, 331, 332, 333, 0, 334, 335, 337, 339,
	336, 338, 340, 342, 343, 341, 0, 344, 345, 347,
	0, 346, 0, 0, 0, 348, 0, 504, 349, 505,
	351, 352, 0, 353, 354, 355, 0, 0, 357, 358,
	359, 0, 0, 360, 361, 506, 0, 362, 0, 507,
	363, 356, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 508, 373, 509, 374, 0, 375, 0, 376,
	377, 378, 379, 380, 381, 382, 510, 990, 384, 0,
	385, 386, 387, 388, 389, 0, 391, 392, 393, 390,
	394, 395, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 511, 403, 0, 404, 408, 409, 410, 411, 412,
	413, 414, 0, 420, 421, 415, 417, 418, 419, 416,
	422, 423, 424, 0, 425, 405, 406, 426, 427, 0,
	428, 429, 512, 430, 431, 0, 432, 433, 434, 435,
	407, 436, 440, 441, 437, 438, 439, 513, 0, 443,
	444, 442, 0, 445, 446, 447, 448, 449, 278, 450,
	0, 451, 514, 515, 516, 517, 0, 458, 0, 452,
	453, 518, 454, 519, 0, 455, 456, 457, 0, 459,
	460, 0, 0, 461, 462, 463, 464, 465, 467, 0,
	468, 0, 466, 469, 470, 471, 520, 521, 522, 213,
	473, 472, 523, 0, 0, 0, 0, 474, 475, 524,
	476, 477, 478, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 480, 481,
	230, 482, 231, 232, 483, 0, 233, 234, 235, 236,
	237, 238, 0, 0, 239, 484, 485, 486, 0, 240,
	487, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 248, 249, 250, 247, 0, 251, 0, 252, 253,
	254, 0, 0, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 488, 489,
	0, 263, 0, 265, 264, 0, 266, 0, 0, 267,
	268, 269, 0, 270, 0, 271, 272, 0, 273, 490,
	274, 275, 277, 279, 276, 280, 281, 282, 283, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 284, 285,
	286, 493, 287, 288, 0, 289, 0, 290, 0, 0,
	0, 291, 292, 0, 293, 494, 0, 495, 0, 0,
	295, 296, 297, 298, 496, 497, 498, 350, 0, 299,
	300, 0, 301, 302, 304, 0, 0, 0, 303, 305,
	312, 0, 0, 306, 499, 308, 307, 309, 310, 311,
	500, 0, 501, 0, 313, 0, 502, 0, 314, 315,
	316, 0, 317, 318, 0, 0, 319, 320, 321, 322,
	323, 0, 325, 324, 0, 326, 503, 0, 327, 328,
	0, 0, 329, 330, 0, 0, 331, 332, 333, 0,
	334, 335, 337, 339, 336, 338, 340, 342, 343, 341,
	0, 344, 345, 347, 0, 346, 0, 0, 0, 348,
	0, 504, 349, 505, 351, 352, 0, 353, 354, 355,
	0, 0, 357, 358, 359, 0, 0, 360, 361, 506,
	0, 362, 0, 507, 363, 356, 364, 365, 0, 367,
	368, 369, 370, 0, 371, 372, 508, 373, 509, 374,
	0, 375, 0, 376, 377, 378, 379, 0, 381, 382,
	510, 383, 384, 0, 385, 386, 387, 388, 389, 0,
	391, 392, 393, 390, 394, 395, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 511, 0, 0, 404, 408,
	409, 410, 411, 412, 413, 414, 0, 420, 421, 415,
	417, 418, 419, 416, 422, 423, 424, 0, 425, 405,
	406, 426, 427, 0, 428, 429, 512, 430, 431, 0,
	432, 433, 434, 435, 407, 436, 440, 441, 437, 438,
	439, 513, 0, 443, 444, 442, 0, 445, 446, 447,
	448, 449, 278, 450, 0, 451, 514, 515, 516, 517,
	0, 458, 0, 452, 453, 518, 454, 519, 0, 455,
	456, 457, 0, 459, 460, 0, 0, 461, 462, 463,
	464, 465, 467, 0, 468, 0, 466, 469, 470, 471,
	520, 521, 522, 0, 473, 472, 523, 0, 0, 0,
	0, 474, 475, 524, 476, 477, 478, 1467, 1468, 0,
	1500, 1501, 1502, 1510, 1511, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 1498, 0, 0,
	0, 0, 0, 0, 1470, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510,
	1511, 1512, 1469, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 1503, 1498, 0, 0, 0, 0, 1486, 0,
	1470, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1469, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 1493, 1494, 1495, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 1517, 0, 0, 0, 1497, 1499, 0, 0,
	0, 1492, 1493, 1494, 1495, 0, 0, 0, 0, 0,
	0, 1475, 0, 0, 0, 0, 1513, 0, 1514, 0,
	0, 0, 0, 0, 0, 1484, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 1517, 0,
	0, 1505, 1497, 1499, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 1514, 0, 0, 0, 0, 1515,
	0, 1484, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510,
	1511, 1512, 0, 0, 1508, 0, 1496, 0, 0, 0,
	0, 0, 1503, 1498, 0, 0, 0, 0, 0, 0,
	1470, 0, 0, 0, 1491, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1469, 0,
	1508, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478,
	1479, 1471, 1472, 1473, 1474, 1476, 1477, 0, 0, 0,
	0, 0, 0, 0, 0, 2582, 0, 0, 0, 0,
	0, 1492, 1493, 1494, 1495, 0, 0, 0, 0, 0,
	0, 1475, 0, 0, 1506, 0, 0, 1481, 1482, 1488,
	1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473,
	1474, 1476, 1477, 0, 0, 1507, 0, 0, 1517, 0,
	0, 2579, 1497, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 1514, 0, 0, 0, 0, 0,
	0, 1484, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 1467, 1468, 0, 1500,
	1501, 1502, 1510, 1511, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 1498, 0, 0, 0,
	0, 0, 0, 1470, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 0, 0, 1491, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1467, 1468,
	1508, 1500, 1501, 1502, 1510, 1511, 1512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 1498, 0,
	0, 0, 0, 0, 0, 1470, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 1493, 1494, 1495, 0, 0,
	0, 0, 0, 1469, 1475, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 1517, 0, 0, 1506, 1497, 1499, 1481, 1482, 1488,
	1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473,
	1474, 1476, 1477, 0, 0, 1513, 0, 1514, 0, 0,
	0, 2578, 0, 0, 1484, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 1493, 1494, 1495,
	1505, 0, 0, 0, 0, 0, 1475, 0, 0, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	1507, 0, 0, 1517, 0, 0, 0, 1497, 1499, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 1514,
	0, 0, 0, 0, 0, 0, 1484, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 1496,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 1467, 1468, 1508, 1500, 1501, 1502, 1510, 1511, 1512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 1498, 0, 0, 0, 0, 0, 0, 1470, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 0, 0, 1491,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 1506, 0, 0,
	1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478, 1479,
	1471, 1472, 1473, 1474, 1476, 1477, 0, 0, 0, 0,
	0, 0, 0, 0, 2577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1493, 1494, 1495, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 1517, 0, 0, 1506,
	1497, 1499, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480,
	1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 0, 0,
	1513, 0, 1514, 0, 0, 0, 2103, 0, 0, 1484,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	1468, 0, 1500, 1501, 1502, 1510, 1511, 1512, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 1503, 1498,
	0, 0, 0, 0, 0, 0, 1470, 0, 0, 0,
	0, 1516, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 1468, 0, 1500, 1501,
	1502, 1510, 1511, 1512, 1469, 0, 0, 0, 1508, 0,
	0, 0, 0, 1489, 1503, 1498, 0, 0, 0, 0,
	1486, 0, 1470, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1469, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 1493, 1494,
	1495, 0, 0, 0, 0, 0, 0, 1475, 0, 0,
	0, 0, 1506, 0, 0, 1481, 1482, 1488, 1509, 1487,
	1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 1507, 0, 0, 1517, 3506, 0, 0, 1497, 1499,
	0, 0, 0, 1492, 1493, 1494, 1495, 0, 0, 0,
	0, 0, 0, 1475, 0, 0, 0, 0, 1513, 0,
	1514, 0, 0, 0, 0, 0, 0, 1484, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	1517, 0, 0, 1505, 1497, 1499, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 1514, 0, 0, 0,
	0, 1515, 0, 1484, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510,
	1511, 1512, 0, 0, 0, 0, 1508, 0, 1496, 0,
	0, 0, 1503, 1498, 0, 0, 0, 0, 0, 0,
	1470, 0, 0, 0, 0, 1516, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1469, 0,
	0, 0, 1508, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 1481, 1482, 1488, 1509, 1487, 1483, 0,
	1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 0,
	0, 0, 0, 3502, 0, 0, 0, 0, 0, 0,
	0, 1492, 1493, 1494, 1495, 0, 0, 0, 0, 0,
	0, 1475, 0, 0, 0, 0, 1506, 0, 0, 1481,
	1482, 1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471,
	1472, 1473, 1474, 1476, 1477, 1507, 0, 0, 1517, 3432,
	0, 0, 1497, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 1514, 0, 0, 0, 0, 0,
	0, 1484, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 0, 1500, 1501, 1502, 1510, 1511, 1512,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	1503, 1498, 0, 0, 0, 0, 0, 0, 1470, 0,
	0, 0, 0, 1516, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1467, 1468, 0,
	1500, 1501, 1502, 1510, 1511, 1512, 1469, 0, 0, 0,
	1508, 0, 0, 0, 0, 1489, 1503, 1498, 0, 0,
	0, 0, 1486, 0, 1470, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1469, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1493, 1494, 1495, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 1506, 0, 0, 1481, 1482, 1488,
	1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473,
	1474, 1476, 1477, 1507, 0, 0, 1517, 3431, 0, 0,
	1497, 1499, 0, 0, 0, 1492, 1493, 1494, 1495, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	1513, 0, 1514, 0, 0, 0, 0, 0, 0, 1484,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 1517, 0, 0, 1505, 1497, 1499, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 1514, 0,
	0, 0, 0, 1515, 0, 1484, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 1468, 0, 1500, 1501,
	1502, 1510, 1511, 1512, 0, 0, 0, 0, 1508, 0,
	1496, 0, 0, 0, 1503, 1498, 0, 0, 0, 0,
	0, 0, 1470, 0, 0, 0, 0, 1516, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1469, 0, 0, 0, 1508, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 1481, 1482, 1488, 1509, 1487,
	1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 0, 0, 0, 0, 3321, 0, 0, 0, 0,
	0, 0, 0, 1492, 1493, 1494, 1495, 0, 0, 0,
	0, 0, 0, 1475, 0, 0, 0, 0, 1506, 0,
	0, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478,
	1479, 1471, 1472, 1473, 1474, 1476, 1477, 1507, 0, 0,
	1517, 3221, 0, 0, 1497, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 1514, 0, 0, 0,
	0, 0, 0, 1484, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510,
	1511, 1512, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 1503, 1498, 0, 0, 0, 0, 0, 0,
	1470, 0, 0, 0, 0, 1516, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	1468, 0, 1500, 1501, 1502, 1510, 1511, 1512, 1469, 0,
	0, 0, 1508, 0, 0, 0, 0, 1489, 1503, 1498,
	0, 0, 0, 0, 1486, 0, 1470, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1469, 0, 0, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	1486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 1493, 1494, 1495, 0, 0, 0, 0, 0,
	0, 1475, 0, 0, 0, 0, 1506, 0, 0, 1481,
	1482, 1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471,
	1472, 1473, 1474, 1476, 1477, 1507, 0, 0, 1517, 3174,
	0, 0, 1497, 1499, 0, 0, 0, 1492, 1493, 1494,
	1495, 0, 0, 0, 0, 0, 0, 1475, 0, 0,
	0, 0, 1513, 0, 1514, 0, 0, 0, 0, 0,
	0, 1484, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 1517, 0, 0, 1505, 1497, 1499,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	1514, 0, 0, 0, 0, 1515, 0, 1484, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1467, 1468, 0,
	1500, 1501, 1502, 1510, 1511, 1512, 0, 0, 0, 0,
	1508, 0, 1496, 0, 0, 0, 1503, 1498, 0, 0,
	0, 0, 0, 0, 1470, 0, 0, 0, 0, 1516,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1469, 0, 0, 0, 1508, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 1481, 1482, 1488,
	1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473,
	1474, 1476, 1477, 0, 0, 0, 0, 3173, 0, 0,
	0, 0, 0, 0, 0, 1492, 1493, 1494, 1495, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	1506, 0, 0, 1481, 1482, 1488, 1509, 1487, 1483, 0,
	1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 1507,
	0, 0, 1517, 3172, 0, 0, 1497, 1499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 1514, 0,
	0, 0, 0, 0, 0, 1484, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 1468, 0, 1500, 1501,
	1502, 1510, 1511, 1512, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 1503, 1498, 0, 0, 0, 0,
	0, 0, 1470, 0, 0, 0, 0, 1516, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 0, 1500, 1501, 1502, 1510, 1511, 1512,
	1469, 0, 0, 0, 1508, 0, 0, 0, 0, 1489,
	1503, 1498, 0, 0, 0, 0, 1486, 0, 1470, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1492, 1493, 1494, 1495, 0, 0, 0,
	0, 0, 0, 1475, 0, 0, 0, 0, 1506, 0,
	0, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478,
	1479, 1471, 1472, 1473, 1474, 1476, 1477, 1507, 0, 0,
	1517, 3137, 0, 0, 1497, 1499, 0, 0, 0, 1492,
	1493, 1494, 1495, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 1513, 0, 1514, 0, 0, 0,
	0, 0, 0, 1484, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 1517, 0, 0, 1505,
	1497, 1499, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 1514, 0, 0, 0, 0, 1515, 0, 1484,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	1468, 0, 1500, 1501, 1502, 1510, 1511, 1512, 0, 0,
	0, 0, 1508, 0, 1496, 0, 0, 0, 1503, 1498,
	0, 0, 0, 0, 0, 0, 1470, 0, 0, 0,
	0, 1516, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1469, 0, 0, 0, 1508, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	1486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 1481,
	1482, 1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471,
	1472, 1473, 1474, 1476, 1477, 0, 0, 0, 0, 2933,
	0, 0, 0, 0, 0, 0, 0, 1492, 1493, 1494,
	1495, 0, 0, 0, 0, 0, 0, 1475, 0, 0,
	0, 0, 1506, 0, 0, 1481, 1482, 1488, 1509, 1487,
	1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 1507, 0, 0, 1517, 2575, 0, 0, 1497, 1499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	1514, 0, 0, 0, 0, 0, 0, 1484, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1467, 1468, 0,
	1500, 1501, 1502, 1510, 1511, 1512, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 1503, 1498, 0, 0,
	0, 0, 0, 0, 1470, 0, 0, 0, 0, 1516,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510,
	1511, 1512, 1469, 0, 0, 0, 1508, 0, 0, 0,
	0, 1489, 1503, 1498, 0, 0, 0, 0, 1486, 0,
	1470, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1469, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 1493, 1494, 1495, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	1506, 0, 0, 1481, 1482, 1488, 1509, 1487, 1483, 0,
	1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 1507,
	0, 0, 1517, 2574, 0, 0, 1497, 1499, 0, 0,
	0, 1492, 1493, 1494, 1495, 0, 0, 0, 0, 0,
	0, 1475, 3604, 0, 0, 0, 1513, 0, 1514, 0,
	0, 0, 0, 0, 0, 1484, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 1517, 0,
	0, 1505, 1497, 1499, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 1514, 0, 0, 0, 0, 1515,
	0, 1484, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 3603, 0, 0, 0, 0, 0,
	0, 1467, 1468, 0, 1500, 1501, 1502, 1510, 1511, 1512,
	0, 0, 0, 0, 1508, 0, 1496, 0, 0, 0,
	1503, 1498, 0, 0, 0, 0, 2503, 0, 1470, 0,
	0, 0, 0, 1516, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 0, 0, 0,
	1508, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	2504, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478,
	1479, 1471, 1472, 1473, 1474, 1476, 1477, 0, 0, 2532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1493, 1494, 1495, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 1506, 0, 0, 1481, 1482, 1488,
	1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473,
	1474, 1476, 1477, 1507, 0, 0, 1517, 0, 0, 0,
	1497, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 1514, 0, 0, 0, 0, 0, 0, 1484,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 1467, 1468, 0, 1500, 1501, 1502,
	1510, 1511, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 1498, 0, 0, 0, 0, 0,
	0, 1470, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 0, 1491, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 1486, 0, 0, 0, 2197,
	0, 0, 0, 0, 0, 0, 1467, 1468, 1508, 1500,
	1501, 1502, 1510, 1511, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 1498, 0, 0, 0,
	2196, 0, 0, 1470, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 1493, 1494, 1495, 0, 0, 0, 0,
	0, 1469, 1475, 0, 2622, 0, 0, 2621, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 1517,
	0, 0, 1506, 1497, 1499, 1481, 1482, 1488, 1509, 1487,
	1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476,
	1477, 0, 0, 1513, 0, 1514, 0, 0, 0, 0,
	0, 0, 1484, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 1493, 1494, 1495, 1505, 0,
	0, 0, 0, 0, 1475, 0, 0, 1490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 1507, 0,
	0, 1517, 0, 0, 0, 1497, 1499, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1513, 0, 1514, 0, 0,
	0, 0, 0, 0, 1484, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 1496, 0, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 1467,
	1468, 1508, 1500, 1501, 1502, 1510, 1511, 1512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 1498,
	0, 0, 0, 0, 0, 0, 1470, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1469, 0, 0, 1491, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	1486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 1506, 0, 0, 1481, 1482,
	1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472,
	1473, 1474, 1476, 1477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 1493, 1494,
	1495, 0, 0, 0, 0, 0, 0, 1475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 1517, 0, 0, 1506, 1497, 1499,
	1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478, 1479,
	1471, 1472, 1473, 1474, 1476, 1477, 0, 0, 1513, 0,
	1514, 0, 0, 0, 0, 0, 0, 1484, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 832,
	0, 0, 1467, 1468, 0, 1500, 1501, 1502, 1510, 1511,
	1512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 1498, 0, 0, 0, 0, 0, 0, 1470,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1469, 0, 0,
	1491, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1467, 1468, 1508, 1500, 1501, 1502,
	1510, 1511, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 1498, 0, 0, 0, 0, 0,
	0, 1470, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 1493, 1494, 1495, 0, 0, 0, 0, 0, 1469,
	1475, 0, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 1486, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 1517, 0, 0,
	1506, 1497, 1499, 1481, 1482, 1488, 1509, 1487, 1483, 0,
	1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 0,
	0, 1513, 0, 1514, 0, 0, 0, 0, 0, 0,
	1484, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 1493, 1494, 1495, 1505, 0, 0, 0,
	0, 0, 1475, 0, 0, 1490, 0, 2628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 1507, 0, 0, 1517,
	0, 0, 0, 1497, 1499, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 1514, 0, 0, 0, 0,
	0, 0, 1484, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 1496, 0, 1490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 1467, 1468, 1508,
	1500, 1501, 1502, 1510, 1511, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 1498, 0, 0,
	0, 2623, 0, 0, 1470, 0, 0, 0, 0, 1516,
	2921, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1469, 0, 0, 1491, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 1506, 0, 0, 1481, 1482, 1488, 1509,
	1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474,
	1476, 1477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 1493, 1494, 1495, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 1517, 0, 0, 1506, 1497, 1499, 1481, 1482,
	1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471, 1472,
	1473, 1474, 1476, 1477, 0, 0, 1513, 0, 1514, 0,
	0, 0, 0, 0, 0, 1484, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	1467, 1468, 0, 1500, 1501, 1502, 1510, 1511, 1512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	1498, 0, 0, 0, 0, 0, 0, 1470, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1469, 0, 0, 1491, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 1468, 1508, 1500, 1501, 1502, 1510, 1511,
	1512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 1498, 0, 0, 0, 2576, 0, 0, 1470,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 1493,
	1494, 1495, 0, 0, 0, 0, 0, 1469, 1475, 0,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 1517, 0, 0, 1506, 1497,
	1499, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480, 1478,
	1479, 1471, 1472, 1473, 1474, 1476, 1477, 0, 0, 1513,
	0, 1514, 0, 0, 0, 0, 0, 0, 1484, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 1493, 1494, 1495, 1505, 0, 0, 0, 0, 0,
	1475, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 1507, 0, 0, 1517, 0, 0,
	0, 1497, 1499, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 1514, 0, 0, 0, 2590, 0, 0,
	1484, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 1496, 0, 1490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 1467, 1468, 1508, 1500, 1501,
	1502, 1510, 1511, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 1498, 0, 0, 0, 0,
	0, 0, 1470, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1469, 0, 0, 1491, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 1506, 0, 0, 1481, 1482, 1488, 1509, 1487, 1483,
	0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1492, 1493, 1494, 1495, 0, 0, 0,
	0, 0, 0, 1475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	1517, 0, 0, 1506, 1497, 1499, 1481, 1482, 1488, 1509,
	1487, 1483, 0, 1480, 1478, 1479, 1471, 1472, 1473, 1474,
	1476, 1477, 0, 0, 1513, 0, 1514, 0, 0, 0,
	0, 0, 0, 1484, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 1467, 1468,
	0, 1500, 1501, 1502, 1510, 1511, 1512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 1498, 0,
	0, 0, 0, 0, 0, 1470, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1469, 0, 0, 1491, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1467, 1468, 1508, 1500, 1501, 1502, 1510, 1511, 1512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 1470, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 1493, 1494, 1495,
	0, 0, 0, 0, 0, 1469, 1475, 0, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 1517, 0, 0, 1506, 1497, 1499, 1481,
	1482, 1488, 1509, 1487, 1483, 0, 1480, 1478, 1479, 1471,
	1472, 1473, 1474, 1476, 1477, 0, 0, 1513, 0, 1514,
	0, 0, 0, 0, 0, 0, 1484, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 1493,
	1494, 1495, 1505, 0, 0, 0, 0, 0, 1475, 0,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 0, 1507, 0, 0, 1517, 0, 0, 0, 1497,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 1514, 0, 0, 0, 0, 0, 0, 1484, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 1496, 0, 1490, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 1701, 1678, 1685, 1668,
	1711, 1710, 0, 0, 1670, 1669, 0, 0, 0, 0,
	0, 0, 1721, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 1712, 0, 1708, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 1506,
	0, 0, 1481, 1482, 1488, 1509, 1487, 1483, 0, 1480,
	1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477, 1705, 1703,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 1683, 1696, 1698, 1699, 1700, 1695, 0, 1688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1717,
	1718, 1506, 0, 0, 1481, 1482, 1488, 1509, 1487, 1483,
	0, 1480, 1478, 1479, 1471, 1472, 1473, 1474, 1476, 1477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1672, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 772, 0, 0, 0,
	1709, 0, 0, 0, 1681, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 1691, 1689, 1690, 1693, 1692, 743, 0, 0, 0,
	0, 746, 0, 0, 0, 778, 0, 0, 0, 0,
	0, 0, 753, 754, 0, 615, 0, 0, 765, 0,
	0, 0, 0, 0, 0, 0, 1673, 1674, 1676, 1677,
	0, 773, 748, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 1697, 1675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1671, 617, 636, 1713, 1714, 1715, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 749, 0, 618, 0, 0, 619, 0, 0, 741,
	0, 0, 0, 1679, 0, 0, 0, 0, 1686, 1719,
	0, 0, 643, 0, 750, 751, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 758, 757, 0, 0,
	0, 0, 0, 0, 752, 0, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 0, 0, 0, 0, 622, 0, 0, 623,
	645, 0, 0, 0, 650, 0, 774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 769, 770, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 0, 762, 0, 0, 0, 0,
	0, 0, 739, 624, 775, 0, 0, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 628, 0, 760, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 0, 0, 0, 0, 0,
	0, 764, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 629,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 0, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 631, 0, 0, 648, 0, 647, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 640,
	0, 0, 0, 0, 651, 0, 646, 0, 0, 0,
	0, 638,
}
var sqlPact = [...]int{

	210, -1000, -1000, -1000, -1000, -1000, -1000, 193, 191, 188,
	187, 183, 182, 176, 167, -1000, -1000, -1000, 166, -1000,
	-1000, 164, -1000, 163, 162, 159, 158, -1000, 152, 151,
	150, -1000, -1000, -1000, -1000, 149, 148, 145, 55549, 1755,
	67101, 58529, 1807, 49983, 66671, 49553, 66241, 65811, 144, -1000,
	65381, 140, 136, 135, -1000, -1000, 133, 1580, 40917, 129,
	128, 127, 1966, 125, 123, -1000, 114, -1000, 78983, 1276,
	-1000, 113, 112, -1000, 8409, 346, 57675, 2187, 108, 105,
	40486, 2149, 2216, -1000, -1000, 1666, -1000, -1000, 103, 102,
	98, 97, 95, 91, 90, 88, 87, -1000, 86, 85,
	83, 82, 81, 80, 76, -1000, 75, 73, 72, 68,
	66, 59, 58, 57, 56, 55, 53, -1000, 78902, 1536,
	1385, 1377, 1366, 1357, 1358, 871, 52, 50, 49, 48,
	46, 44, 43, -1000, -1000, 39, 38, 36, 34, -1000,
	33, 32, 146, 30, 27, 26, 25, 19, 2020, 2146,
	1251, 774, 19959, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 71341, 67525, 18, -31,
	17, -1000, 2492, 892, 33164, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 468, -1000, -1000, -1000, 279,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1491, 689, -1000, -1000, -1000,
	64951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1752,
	-25, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 688, -1000,
	1751, 190, 1652, -1000, -1000, -1000, -1000, -1000, 67525, -1000,
	-1000, 2796, 2794, 1631, 687, 64527, -1000, 1237, -1000, 822,
	22689, -1000, 1034, -1000, 22689, 276, -1000, -1000, -1000, -1000,
	-1000, 49123, 15397, 48693, 48263, 44413, 64097, 14957, 55125, 1090,
	-1000, -1000, -1000, -1000, -1000, -10, 45275, 67525, -1000, 271,
	-1000, -1000, -1000, -1000, -1000, -1000, 29163, 510, 28698, 693,
	28233, 516, -1000, -1000, -1000, -1000, 2792, 2791, 945, 2790,
	2427, 70917, 1442, 2789, 1422, 1022, 895, 2788, 2787, 2784,
	2783, 2782, 2781, 2780, 1133, 63667, 2201, 1348, 43973, 43533,
	55549, 55549, 2002, 63237, 1127, 1111, -1000, -1000, -1000, -1000,
	-1000, -1000, 2299, 2210, 2181, 37916, -1000, -1000, 2779, 2777,
	2776, 2773, 2771, 70493, 1415, 2770, 1915, 2769, 2768, 2767,
	2764, 2761, 2760, 2753, 2751, 2749, -1000, 54695, 54265, 53835,
	53405, 62807, 43093, 42653, -1000, -1000, -1000, 34880, 6721, 6365,
	62377, 36200, 55549, 55549, -1000, -1000, 29616, 679, -1000, -1000,
	-1000, 2125, -1000, 29616, 679, -1000, 67525, -1000, 2198, 1535,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2034,
	1326, 2648, 42213, 1608, 1177, 2480, 2296, 2282, 1264, 1938,
	2279, 2275, 2274, 2270, 2269, 1351, 1951, 411, 19494, 1329,
	1289, 2268, 2263, 2672, 1517, 47833, 2748, 2744, 2448, 2248,
	2246, 2121, -1000, -1000, -1000, -1000, 1252, -1000, -1000, 50831,
	-1000, -1000, 1015, -1000, -1000, 1015, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1083, 69645, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1434, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1813, -1000, 1600, -1000, -1000, 1782, 1208, 2146, 1896, 2475,
	2475, 2475, 2514, 439, 436, -1000, 146, -1000, -1000, 78074,
	-1000, -1000, 29616, 29616, 29616, 29616, 29616, 1591, -1000, 686,
	-1000, -1000, 723, -1000, 685, 615, -1000, -1000, -1000, -1000,
	-1000, -1000, 684, 2675, -1000, 902, -1000, -1000, -1000, -1000,
	2632, -1000, 17646, -1000, -1000, -1000, 405, 683, 29616, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 259, 835, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 605, 1513, 604, 604, 604, -1000, -1000, 890, -1000,
	-1000, -1000, 311, 603, 310, 602, -1000, -1000, -1000, -1000,
	2180, 682, 681, -1000, 677, 676, 673, -1000, -1000, -1000,
	670, 667, 662, 661, 660, 659, 655, 653, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 888, -1000, 652, 643,
	639, 638, 635, 625, 624, 621, 620, -1000, -1000, -11,
	67525, -1000, 468, -11, -1000, -1000, 619, -1000, 23142, 23142,
	23142, -1000, -1000, 1748, 29616, -1000, 1955, -1000, -4, -4,
	794, 34020, -1000, 32304, 794, 410, 730, 37486, -1000, 2120,
	-1000, -1000, 617, 246, -1000, -1000, 2119, 67525, 15835, 67525,
	55549, 55549, 55549, 2387, 29616, -1000, -1000, 41773, 67525, 55973,
	2589, 78652, 41773, 67525, 2178, -1000, -1000, -1000, 67525, -1000,
	29616, -1000, 2586, 1227, 45703, 2531, -23, -1000, -1000, -1000,
	-1000, -1000, -1000, 1889, 1905, 1002, 1781, 1349, -1000, 22689,
	2420, -1000, -1000, -1000, 244, 15835, -1000, 1802, 2369, 1101,
	-1000, 1780, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1436, 2367, -1000, 1428, 2366, 1433, -1000, -1000, 872, 2365,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1665,
	-1000, -1000, 2444, -1000, -1000, 1330, 2364, -3, -1000, -1000,
	35324, 45275, -13, -1000, -1000, -72, -1000, 14517, 78074, -1000,
	-1000, -1000, 78074, 779, -1000, -1000, 2362, -1000, 78074, 752,
	-1000, -1000, 2356, -1000, -1000, -1000, 2742, -1000, 2741, 1843,
	2738, 2737, 2736, -1000, 1336, 1471, 2735, -1000, 2734, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52975, 1742, -1000, -1000,
	52115, 52545, 894, -1000, 858, 1842, -1000, -1000, 1841, -1000,
	798, -1000, 2733, 61947, 2033, 858, 1838, -1000, -1000, -1000,
	-1000, -1000, 38772, -1000, 38772, -1000, 38772, -1000, 1230, -1000,
	70069, -4, -4, 2632, -1000, -1000, -1000, -1000, -1000, 2352,
	2732, 2731, 2730, -1000, 67525, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 169, 2351, -1000, -1000, 169, 2350,
	-1000, 169, 2347, -1000, 168, 2346, -1000, -1000, 1689, 2342,
	-1000, -144, 2341, -1000, -1000, -144, 2337, -1000, -22, -1000,
	-1000, -1000, 892, -1000, 34450, -1000, 34450, 61517, 44851, 841,
	663, 40056, 78074, -1000, 35324, 78074, -1000, 44851, 52115, -1000,
	61087, 51691, -1000, -1000, 1130, 1936, -1000, -1000, -1000, -1000,
	44851, 44851, 44851, -1000, 60657, -1000, -1000, 1587, 1321, 2451,
	1578, 55549, -1000, 1533, -1000, -1000, -1000, 2463, 2167, -1000,
	41345, 57245, -1000, 56821, -1000, 56397, -1000, 55549, -1000, 55549,
	-1000, 2729, 2727, 2726, -1000, 2725, 2458, 78074, 2455, -1000,
	2267, 1396, 1392, 67525, -1000, -1000, 67525, -1000, 67525, -1000,
	-1000, -1000, 1884, -1000, -1000, -1000, -1000, 55549, -1000, -1000,
	-1000, -1000, -1000, -1000, 2163, -1000, 1397, -1000, 1476, -1000,
	1125, -1000, -1000, 177, -1000, -1000, -23, -1000, 69645, -1000,
	-1000, 2146, 1896, -1000, 67525, -1000, 1341, 55549, -1000, 1937,
	-1000, 1217, -1000, 2146, 1683, 1988, 27768, 1932, 29616, 146,
	-1000, -1000, 146, 146, 22236, -1000, -1000, 78652, 78652, 15835,
	1098, 29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616,
	29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616,
	29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616, 29616,
	29616, 29616, 29616, 29616, 29616, 29616, 1538, 29616, 1079, 29616,
	29616, 29616, 29616, 1265, -1000, -1000, 1510, 499, 1540, -1000,
	2631, 2631, 2631, 78419, 78419, 572, 2724, 723, -1000, 29616,
	-1000, 679, 29616, 16275, -1000, 2655, 1210, -1000, -1000, 436,
	9440, 1826, -1000, 435, 16740, -1000, -1000, -1000, 17646, 615,
	27303, 29616, 883, 78074, 14079, 2188, 2074, -1000, 2654, -1000,
	-1000, 2641, -1000, -1000, -1000, -1000, 2641, 1092, 1019, 2641,
	-1000, 2641, 2641, 613, 707, 704, 19029, 18564, 700, 29616,
	29616, 29616, 29616, 29616, 29616, 29616, 29616, -1000, 26850, 26385,
	25920, 30975, 25455, 29616, 18099, 24990, 24525, 67525, -11, 2582,
	29616, 154, -1000, 76595, -1000, 154, 154, 611, -30, 78074,
	1962, 1962, 33592, 1960, 1598, 1598, 1598, -1000, 794, 10559,
	794, 59805, 1606, 794, 794, 234, 258, 434, 31876, 1955,
	59805, 711, 609, 14, 13, 12, -1000, -1000, 6, 4,
	-1000, -1000, 55549, 608, 16275, 15835, 1183, -32, 224, 1972,
	1964, 1959, -1000, 1958, 1295, -35, 1070, -97, -1000, 4550,
	-40, -1000, 885, -1000, -1000, -1000, 368, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 887, 607, 606, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 605, 1513, 604, 604, 604,
	-1000, -1000, -1000, 311, 603, 310, 602, -1000, -1000, -1000,
	-1000, -1000, -1000, 2108, -72, 55973, 795, -41, 976, -23,
	-1000, -1000, -1000, 45703, 1015, -1000, 1487, -1000, -1000, -1000,
	-1000, -1000, -1000, 1139, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2673, -1000, 2638, -1000, -1000, 2651, -12, -1000, -1000,
	15835, -1000, -24, 1429, -1000, 47403, 1754, 2447, 2440, 1225,
	-1000, 1186, 2510, 50831, 2559, 2565, 552, -1000, 2107, -1000,
	-1000, 820, 1316, 1066, 50831, 1428, -1000, 78652, -1000, 2004,
	2508, 1181, 1204, 1181, 1181, 1159, -1000, 50831, 1063, 1551,
	44851, -1000, 1061, -1000, -42, 2536, 2551, 232, -1000, 2106,
	1057, -1000, -1000, 55549, 15835, 791, -1000, 44851, -13, 45275,
	67525, 220, -1000, 29616, 679, 29616, 679, -1000, -1000, 2332,
	-1000, -1000, -1000, 2723, 1443, 1914, -1000, -1000, -1000, 601,
	1836, 2105, 67525, 1983, -19, 55549, -1000, 1428, 1832, -1000,
	-1000, 51261, -1000, 1542, -1000, 2331, 2330, 454, 2722, -1000,
	1737, 1830, -1000, -1000, -1000, 69221, 1033, 2324, 914, 363,
	2578, -1000, 363, 39200, -1000, 67525, -1000, -1000, 67525, -1000,
	-1000, -1000, 2721, -1000, 55549, -1000, -1000, 55549, -1000, 55549,
	-1000, 55549, -1000, 55549, 55549, -1000, 67525, 44851, 44851, 44851,
	4624, 46555, -43, -48, 433, -1000, 60233, 67525, 913, 46979,
	67525, 2407, -154, -1000, 841, 841, 791, -1000, 791, -1000,
	55549, 2160, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2718,
	2717, -1000, -1000, -1000, 845, 55549, 67525, 55549, -1000, -1000,
	67525, -1000, 67525, -1000, 845, 67525, 845, 67525, 845, 67525,
	-1000, -1000, -1000, -1000, -1000, -1000, 679, 29616, 1267, -1000,
	2153, -1000, 2148, -1000, 41, -1000, -1000, -1000, -1000, 1528,
	55549, 55549, 55549, 55549, 67525, 55549, -1000, 50831, -1000, -1000,
	2146, -1000, -1000, 1875, -1000, -16, 926, -1000, -1000, -1000,
	-1000, -1000, 78074, 483, -1000, -1000, 78074, 1401, 1995, -1000,
	1995, -18, -1000, 76250, 1935, 55549, -1000, -1000, -1000, -1000,
	-1000, 808, 1042, 1042, 1100, 1100, 1100, 1100, 2557, 274,
	365, 471, 7750, 7750, 830, 830, 830, 830, 830, 7750,
	2175, 956, 956, 2175, 2175, 2175, 2175, 2175, 956, 956,
	956, 7750, 7750, 7750, 78419, 78337, 8206, 29616, 29616, 1054,
	1490, 499, 8158, 29616, 8412, 8412, 8412, 8412, -1000, 1310,
	-1000, -1000, -1000, -1000, 2104, 598, 30975, 30975, -1000, -1000,
	-1000, -1000, 17193, 29616, -1000, -1000, -1000, -1000, 24060, -1000,
	-1000, 75916, -249, 430, -201, 5, -1000, 29616, 29616, 29616,
	427, -1000, 425, -1000, -1000, 1039, -1000, 1031, 1030, 1026,
	-1000, 595, 207, 29616, 67525, -1000, 72877, 710, -146, -1000,
	-49, 1196, -1000, 29616, 205, -1000, 1593, 592, 584, 415,
	-50, -1000, 414, 807, 805, 412, 408, 407, 29616, -1000,
	-1000, -1000, -1000, -1000, 75628, -1000, -1000, 75340, -1000, -1000,
	-1000, 77811, 72795, 72532, 72242, 8952, 72196, 10076, -57, 401,
	-1000, 2103, -201, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 400, -1000, 399, -1000, 77729, -201, 398, 4850, -1000,
	30975, 30975, 30975, -1000, 395, -1000, 76513, -1000, 77466, 23607,
	23607, 23607, 393, 77203, 29616, -201, -58, -1000, -60, -1000,
	-1000, 583, -63, 873, 23142, 32734, 15835, -1000, 873, 873,
	29616, -1000, 29616, 1948, -1000, -1000, -1000, 1947, 1957, 1962,
	33592, -1000, -1000, -1000, -1000, 59805, -1000, 2632, 2306, -1000,
	59805, -1000, -1000, 67525, 468, -1000, 59805, 59805, 15835, 794,
	-1000, 794, 59805, 664, -1000, -1000, -1000, -1000, -1000, 384,
	36628, 5, 204, 841, -1000, 15835, 2071, 2071, 2071, 2071,
	-1000, -1000, 67525, 2602, -1000, 1527, -1000, 78652, -1000, 721,
	1005, -1000, 2650, 578, -1000, 2641, 2641, 67525, 107, 22689,
	-1000, 1015, -1000, -1000, 1271, -1000, 1456, -1000, 1006, -1000,
	-1000, -1000, 22689, -1000, 1681, 67525, 67525, 55549, -1000, -1000,
	1828, 68797, 1827, 78652, 67525, -1000, -1000, 577, 573, 1929,
	1928, 67525, 67525, 1925, 68373, 67949, 67525, 1547, 29616, 1762,
	1379, 679, 679, -1000, -1000, 679, 563, 1085, 55549, 55549,
	55549, 1432, -1000, -1000, -1000, -1000, -1000, 50407, -1000, -1000,
	2649, -1000, 1181, -1000, -1000, -1000, 1181, 1428, 1426, 55549,
	44851, 863, 67525, 1554, 679, 679, -1000, -1000, 679, 561,
	15835, 1467, -1000, 2039, -1000, -65, -1000, -1000, 13641, 78074,
	-1000, 78074, -1000, 67525, -1000, 893, 67525, 46979, 837, 2320,
	38344, -72, 841, 44851, 55549, -19, -1000, 1428, 2316, 468,
	-1000, -1000, 44851, 44851, 44851, 2716, 560, 2715, -1000, 55549,
	2315, 1736, 1823, 2276, 746, 67525, 873, 33592, 1413, -1000,
	37058, 901, 67525, 1406, 99, -1000, -1000, -1000, 22, 67525,
	-1000, 2714, -1000, -1000, 169, 169, 169, -1000, 168, 1689,
	-1000, -144, -144, -1000, -1000, 4624, 4624, 841, -20, 559,
	-1000, 767, 766, 35762, 44851, -70, -1000, -1000, -1000, -1000,
	-1000, 55549, 67525, 666, 2028, 67525, -71, -1000, 203, 555,
	841, 35324, 2101, -1000, -1000, 862, -1000, 1112, -1000, -1000,
	-1000, -1000, -1000, -1000, -5, -72, -72, -1000, 845, -1000,
	845, -1000, 845, -1000, 78074, -1000, 1266, 1243, 67525, -1000,
	15835, 67525, 55549, 15835, 55549, 2143, 2140, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1401, -1000, 29616, -1000, -1000,
	-1000, 22236, 1790, -1000, -1000, 55549, -7, 29616, 29616, 7798,
	6207, 29616, 30975, 30975, -1000, 29616, 6053, -1000, -1000, -1000,
	-1000, -1000, 2100, 550, 29616, 78652, 7165, 6245, -1000, 382,
	9994, 2175, -1000, 29616, -1000, 379, 21783, -1000, 76858, -27,
	-76, -1000, 2671, 1857, 1541, 1398, 1284, 2646, 13203, -201,
	-77, -1000, -1000, 720, -1000, 2311, -1000, 29616, 77121, 12765,
	-1000, 39628, 877, 1609, -1000, -1000, 2641, 793, -1000, -1000,
	-1000, 793, -1000, 75294, -1000, -1000, 78652, 78652, 29616, 29616,
	-1000, 29616, 29616, 29616, -1000, -1000, 29616, -1000, -1000, 2098,
	29616, -1000, 78652, 78652, 30975, 30975, 30975, 30975, 30975, 30975,
	30975, 30975, 30975, 30975, 30975, 30975, 30975, 30975, 30975, 30975,
	30975, 30975, 30975, 1917, 30975, 2626, 2626, 2626, -1000, 2132,
	2098, 29616, 29616, 78652, 369, 366, 364, -1000, 29616, -201,
	-1000, -1000, 4624, -1000, 2073, -1000, 29616, -1000, -215, -1000,
	1955, -1000, -1000, 2073, 2073, -79, 78074, 33592, 33592, -1000,
	548, 29616, 1943, -1000, -1000, 708, -250, -1000, 760, -1000,
	-1000, -1000, -1000, -1000, 468, -1000, -1000, -1000, 196, 59805,
	59805, 705, -1000, -85, -1000, -1000, -86, -1000, 2576, 354,
	15835, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -72,
	1651, 2670, -1000, 2643, 715, 698, 344, 2641, 342, 340,
	-72, 67525, -1000, -23, -1000, -1000, -1000, 29616, -1000, -1000,
	2443, 1025, 1004, -1000, 2314, -1000, 1821, -1000, 905, -1000,
	1381, -1000, 29616, 29616, 536, 535, 1475, 2711, 912, 2313,
	1689, 2308, 1689, -1000, -1000, 826, -1000, 78074, 532, 528,
	-1000, -24, 1323, 861, -1000, -1000, 29616, 29616, 59381, -1000,
	370, 2444, -8, -1000, 1001, -1000, -1000, -1000, -1000, 1428,
	998, -1000, -1000, 1534, -1000, -1000, 859, -1000, -1000, 29616,
	-1000, -42, 997, 841, 2097, -1000, -1000, 2708, 2707, 2706,
	337, -87, -55, 78652, 2575, 1760, 67525, 55549, 796, -1000,
	2632, -1000, -1000, -1000, 55549, 2567, -1000, 858, -1000, -1000,
	2705, -1000, 910, 15835, 55549, 2273, 1907, 746, 46131, -1000,
	858, 1609, -138, -1000, 1406, 21318, 2442, -98, -1000, -1000,
	-1000, 873, 39200, 33592, 29616, 2704, -103, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 58957, 58957, 44851, 44851,
	44851, 841, 67525, 67525, 46979, 2699, 526, 67525, 67525, 525,
	-1000, 67525, 67525, 2696, 44851, -1000, -1000, 679, -1000, 1620,
	55549, 12327, -1000, -1000, -1000, -1000, -1000, 845, -1000, -1000,
	1559, 1776, 1559, 1376, 1368, 1668, 75006, -1000, -1000, 1992,
	2461, 15835, 2546, 8412, 29616, 29616, 5689, 6169, 5475, 8412,
	29616, 29616, 78652, 5020, -104, 29616, 29616, -1000, 29616, 697,
	78074, 2663, 29616, 336, 335, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 332, -1000, -1000, -1000, -1000, -1000,
	78074, 29616, 195, -1000, -1000, -1000, 71765, -1000, 29616, 325,
	321, -1000, -1000, -1000, 319, 312, 9731, 7193, 74718, 74672,
	74384, 78074, 2132, 78074, -1000, -1000, 800, 800, 1169, 1169,
	1169, 1169, 2626, 429, 844, 455, 549, 549, 549, 261,
	636, 636, 549, 549, 549, 2093, 1921, 524, 5879, -1000,
	-1000, 78074, 78074, 308, -1000, -1000, -1000, -201, 305, 2068,
	2504, 78074, -1000, 33592, 2068, 2068, -1000, -1000, 1957, 67525,
	78074, 33592, -1000, 2306, -1000, 11009, -1000, 15835, -1000, -1000,
	-1000, -1000, 2632, -1000, 36628, -1000, 522, -1000, 155, -1000,
	-1000, 696, 2691, 713, -1000, 303, -1000, -1000, -72, 78074,
	67525, 67525, 67525, 2271, -1000, 2902, -1000, 74096, -105, -1000,
	76250, 29616, 67525, -1000, 1479, 1975, 938, -1000, 2011, 67525,
	-1000, 67525, -1000, -1000, 67525, 67525, 55549, 2239, -110, 78074,
	-88, -1000, 748, -1000, 1182, -1000, 11889, 55549, 55549, 44851,
	2235, -111, 15835, -1000, 44851, -1000, -1000, -1000, 2003, -1000,
	58099, 1671, 679, -1000, 2690, 521, -1000, 1615, -1000, 695,
	1428, 679, -1000, -1000, 520, 67525, 1728, 519, 15835, 1906,
	746, 46131, -1000, 1033, 1988, -1000, -100, -1000, 497, 679,
	1609, -1000, -138, 78074, -1000, 747, -1000, -112, -1000, -1000,
	295, -1000, 2406, 2405, -1000, -1000, 29616, 518, 511, 67525,
	2404, -1000, -1000, -113, -1000, 1778, -1000, -1000, -1000, -1000,
	-1000, 15835, 1308, -1000, 509, 502, -1000, -1000, -1000, -1000,
	-1000, 2461, 8412, 8412, 29616, 29616, 29616, 8412, 5020, -118,
	-1000, 8412, 8412, -201, -1000, -1000, 76858, -1000, -1000, -1000,
	78074, 11451, 1562, -1000, 74050, -1000, -1000, -1000, -1000, 29616,
	29616, -1000, -1000, -1000, -1000, -1000, 30975, 2090, 501, 78652,
	-1000, -1000, 874, 29616, 29616, 1955, 874, 874, -1000, -119,
	-1000, -1000, -1000, 2632, 155, -1000, -1000, 2686, 15835, 694,
	-1000, 2684, -1000, -1000, -1000, -1000, 67525, -1000, 67525, -1000,
	15835, 67525, 2094, 1814, -1000, -1000, 1924, 500, 30975, 55549,
	722, 2053, 1489, 29616, 1790, -120, -126, 1808, -1000, -1000,
	1803, 29616, -1000, 78652, 55549, 1689, 1689, -132, -135, -1000,
	29616, 988, 67525, 20865, -1000, 2683, 2444, -1000, -1000, -1000,
	29616, 985, -1000, -144, 1554, 2044, -1000, -1000, -1000, -1000,
	1923, -1000, -1000, 67525, 1919, 843, -1000, 46979, 837, 823,
	-1000, -1000, -1000, 29616, -1000, 55549, 29616, 1705, -1000, 746,
	46131, -1000, 2276, 1406, -1000, 2285, 67525, 2434, -1000, 1988,
	499, -1000, 841, 496, 494, -141, 29616, 29616, -151, 492,
	841, -147, -1000, 768, 756, -1000, -1000, 55549, 55549, 29616,
	29616, -1000, 8412, 8412, 8412, -1000, 292, -1000, -1000, 1609,
	2497, -1000, 73762, 73474, 7728, 30975, 78652, -156, -1000, 67525,
	78074, -201, -1000, -1000, -1000, 691, -1000, 2682, -1000, -1000,
	1504, -1000, -1000, -1000, 67525, 1786, -1000, -1000, 29616, 5879,
	491, 29616, -1000, -1000, 1976, 2122, 2003, 488, -1000, -1000,
	-1000, -1000, -1000, 1450, -1000, -1000, 78074, 2470, -1000, -1000,
	-1000, 486, 484, 78074, 480, 745, 2086, -1000, -1000, -1000,
	78074, 479, 837, -1000, 1573, 1671, 478, -1000, -1000, -1000,
	1998, 290, 2564, 823, -1000, 2639, -1000, -158, 910, -159,
	55549, 46131, -1000, 1907, -1000, 1088, -165, 67525, 1406, -1000,
	-1000, 44851, 44851, 1489, -166, -167, -1000, 44851, -1000, 1778,
	-1000, 67525, -1000, 67525, -1000, -1000, -168, -174, -1000, 1677,
	29616, -1000, -1000, 7728, -176, -1000, -200, -1000, 2563, -1000,
	-1000, -1000, -1000, 2249, 73428, 1867, 67525, 73140, 2115, -1000,
	-1000, 1554, 67525, 55549, 909, 15835, 1559, 1559, 29616, 20412,
	1568, 29616, -1000, 55549, 67525, -1000, 2402, 2003, 679, -1000,
	-1000, 1489, 476, 1489, 473, -1000, 1906, 1223, -1000, 873,
	-1000, -1000, -177, -182, 2003, 1489, -1000, -187, -1000, -190,
	-195, -1000, -1000, 281, 30522, 30522, 30522, -201, -1000, 67525,
	472, 2225, -1000, 1682, 1441, 275, 940, -1000, -1000, 2053,
	-202, 468, -1000, 29616, -1000, -203, -1000, 900, -205, -1000,
	896, -210, -1000, 2084, -1000, -219, 458, -222, -1000, -1000,
	-1000, 1554, 843, 2003, 29616, 2003, 29616, -1000, 39200, -1000,
	841, 841, 1554, 2003, 841, -1000, -1000, -1000, 2297, -1000,
	31428, 1698, 1333, 75962, 2297, 2297, -1000, -1000, 67525, -1000,
	1702, 1684, 1241, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1867, 78074, -1000, 1559, 2043, -1000, 1559, 2083, -1000,
	1566, -1000, 67525, -1000, 67525, 837, -1000, 1554, -224, 1554,
	-227, -211, -1000, -1000, -1000, 1554, -1000, -1000, 1523, 2595,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2390,
	-1000, 921, 1644, 1644, 1682, -1000, 457, -1000, 456, -1000,
	-229, -1000, -1000, 846, 1489, 846, 1489, -1000, -1000, 1312,
	-1000, -1000, 1602, 30069, -1000, 2614, -1000, -1000, 1950, -1000,
	2053, 29616, 29616, 1679, -1000, 2681, 2003, -1000, 2003, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -230, -235, -1000, -1000,
	-1000, -1000, 1554, 1554, 1554, 981, 846, 846, -1000, 442,
	-1000, -1000, 29616, -237, 1554, -1000,
}
var sqlPgo = [...]int{

	0, 3292, 3290, 3286, 3285, 3284, 3282, 3280, 3277, 3275,
	3273, 3271, 3267, 3266, 3265, 3263, 3262, 3260, 3259, 3258,
	3257, 3256, 3255, 3253, 3252, 3249, 3248, 3246, 3245, 3242,
	3239, 3238, 3237, 3236, 3233, 3232, 3229, 3221, 3213, 3208,
	3206, 3203, 3202, 3200, 3198, 3194, 3192, 3188, 28, 3184,
	3183, 3176, 3175, 3174, 3172, 3171, 3170, 3169, 3168, 3166,
	3164, 3160, 3158, 3155, 3150, 3148, 34, 3146, 210, 3144,
	3143, 3142, 3141, 3140, 3137, 3133, 3131, 3127, 3125, 209,
	3123, 181, 3118, 3117, 3116, 3115, 3113, 208, 3112, 3111,
	3110, 3109, 3106, 3105, 3104, 3102, 134, 3101, 3100, 218,
	3099, 3097, 3090, 3084, 3081, 3077, 3075, 3070, 3067, 3066,
	192, 3064, 207, 3062, 3061, 3056, 3055, 3054, 3053, 3051,
	3050, 3049, 3048, 3044, 3043, 3041, 3038, 3037, 3036, 3034,
	3032, 3031, 3030, 3029, 3027, 3026, 3025, 3020, 3019, 3018,
	214, 139, 3017, 3016, 206, 205, 3015, 3014, 96, 93,
	68, 3013, 86, 125, 189, 7299, 184, 3012, 3011, 3010,
	150, 3009, 3008, 3006, 3005, 83, 53, 136, 138, 129,
	135, 123, 3004, 3003, 69, 50, 31, 27, 95, 3002,
	3001, 3000, 2537, 100, 2999, 2997, 204, 186, 2995, 2173,
	2994, 170, 76, 92, 58, 90, 2993, 111, 25, 2992,
	142, 32, 2991, 128, 57, 29, 5781, 5025, 2987, 79,
	217, 78, 137, 168, 167, 172, 162, 132, 556, 2986,
	195, 2985, 87, 159, 2984, 2983, 2981, 56, 152, 73,
	2980, 8, 3, 120, 17, 89, 13, 2979, 12, 2978,
	2977, 2976, 2975, 24, 146, 2974, 105, 66, 2973, 37,
	2972, 62, 157, 2971, 173, 94, 2970, 2969, 198, 153,
	160, 2966, 10, 182, 2963, 2961, 2957, 2955, 2953, 97,
	19, 98, 2952, 2951, 116, 176, 2950, 43, 2948, 131,
	70, 117, 220, 121, 171, 84, 169, 140, 174, 2946,
	2945, 2944, 166, 2942, 2941, 119, 165, 2939, 2935, 212,
	33, 35, 185, 52, 2934, 124, 2928, 155, 2926, 2925,
	2924, 211, 143, 158, 6, 65, 91, 23, 9, 175,
	107, 193, 88, 2923, 2615, 1453, 1669, 2922, 109, 85,
	38, 108, 113, 201, 54, 2919, 2917, 1635, 2916, 2915,
	2914, 2908, 144, 2907, 2906, 2905, 104, 106, 148, 2904,
	114, 64, 11, 99, 194, 215, 80, 164, 154, 200,
	2903, 141, 2901, 40, 102, 2900, 151, 191, 118, 2899,
	1132, 122, 2898, 161, 2896, 2895, 2894, 2892, 67, 2891,
	2890, 1082, 2889, 110, 2888, 2887, 147, 115, 130, 75,
	30, 2886, 72, 216, 2885, 149, 55, 2883, 3191, 112,
	0, 6504, 4634, 6215, 2879, 475, 2876, 163, 103, 2875,
	2873, 2872, 74, 2871, 71, 2868, 2867, 36, 2865, 15,
	4, 7, 18, 16, 1742, 1641, 2863, 2860, 82, 101,
	126, 2859, 213, 179, 2857, 2850, 2847, 63, 2846, 26,
	2836, 21, 2835, 2833, 22, 5, 49, 2832, 2830, 190,
	2828, 180, 2827, 2825, 2573, 2822, 199, 60, 2820, 196,
	2819, 133, 188, 2818, 2817, 2816, 2815, 197, 2810, 2808,
	14, 20, 1, 2807, 2806, 2803, 156, 2, 2393, 2802,
	2801, 61, 2800, 2799, 145,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 12, 12, 7, 7, 8, 8, 8, 36,
	36, 10, 10, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 14, 14, 26,
	26, 15, 15, 28, 28, 16, 16, 29, 29, 456,
	456, 19, 31, 20, 32, 13, 457, 457, 457, 457,
	24, 21, 33, 22, 22, 22, 22, 22, 151, 151,
	151, 151, 18, 18, 27, 27, 168, 168, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	455, 455, 170, 170, 169, 164, 164, 458, 458, 171,
	171, 171, 173, 173, 37, 37, 95, 95, 96, 96,
	97, 97, 152, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 83, 83, 398, 398, 399, 399, 147, 147,
	148, 148, 148, 148, 149, 149, 150, 150, 150, 51,
	39, 39, 39, 39, 39, 39, 39, 40, 40, 40,
	40, 41, 41, 41, 41, 41, 41, 42, 42, 42,
	42, 42, 42, 49, 49, 49, 49, 141, 141, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 465,
	465, 466, 466, 467, 467, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	63, 63, 245, 245, 221, 221, 64, 64, 64, 65,
	65, 66, 66, 53, 53, 451, 451, 259, 259, 365,
	365, 68, 68, 278, 278, 69, 69, 69, 69, 69,
	69, 70, 70, 70, 70, 70, 70, 70, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 77, 77,
	77, 78, 78, 78, 75, 75, 75, 73, 73, 73,
	72, 72, 72, 76, 76, 76, 74, 74, 74, 260,
	260, 79, 79, 79, 79, 79, 79, 79, 79, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 367, 367, 80, 80, 80, 335,
	335, 84, 84, 84, 293, 293, 85, 85, 85, 85,
	85, 86, 86, 86, 86, 98, 98, 98, 98, 454,
	454, 252, 252, 186, 186, 186, 186, 91, 91, 91,
	91, 92, 92, 92, 93, 93, 146, 146, 104, 104,
	104, 104, 104, 103, 103, 103, 103, 103, 103, 43,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	48, 48, 48, 48, 48, 106, 106, 461, 461, 108,
	105, 105, 105, 107, 107, 107, 107, 109, 110, 110,
	110, 110, 110, 110, 110, 110, 111, 111, 392, 392,
	268, 268, 390, 390, 406, 406, 391, 391, 225, 225,
	225, 225, 225, 226, 226, 226, 397, 397, 397, 397,
	397, 397, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 131, 131, 131, 140, 140, 140,
	140, 140, 140, 140, 133, 133, 133, 121, 121, 113,
	113, 113, 113, 113, 117, 117, 117, 117, 117, 117,
	117, 117, 114, 114, 123, 123, 123, 123, 123, 118,
	118, 120, 120, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 115, 115, 115, 115, 125, 125, 125, 125,
	299, 299, 299, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 136, 136, 136, 136, 136, 136, 349,
	349, 132, 132, 132, 132, 135, 135, 135, 135, 283,
	283, 129, 129, 129, 130, 130, 130, 134, 134, 137,
	137, 137, 137, 116, 116, 116, 469, 469, 469, 138,
	138, 128, 128, 139, 139, 139, 139, 139, 139, 139,
	139, 127, 127, 127, 126, 126, 126, 126, 119, 452,
	452, 449, 449, 449, 449, 449, 449, 449, 450, 450,
	453, 453, 89, 89, 89, 58, 58, 470, 470, 470,
	59, 59, 471, 471, 471, 459, 459, 459, 460, 460,
	460, 460, 460, 460, 227, 227, 228, 228, 316, 316,
	316, 316, 316, 231, 231, 172, 172, 172, 234, 235,
	235, 232, 232, 233, 233, 233, 237, 237, 236, 239,
	239, 238, 315, 413, 413, 415, 415, 415, 415, 415,
	415, 415, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 411, 411, 411, 412, 407, 407, 408, 408,
	408, 408, 229, 229, 230, 230, 230, 230, 409, 410,
	250, 250, 352, 414, 414, 416, 416, 418, 472, 472,
	472, 472, 472, 472, 473, 473, 314, 314, 243, 243,
	419, 419, 419, 419, 420, 420, 420, 420, 420, 423,
	422, 421, 421, 421, 421, 421, 345, 345, 345, 62,
	62, 62, 280, 280, 279, 279, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 143, 143, 60, 60, 60, 178, 178, 57, 57,
	57, 475, 475, 61, 61, 61, 476, 476, 67, 67,
	67, 67, 67, 67, 56, 56, 56, 56, 56, 477,
	477, 300, 300, 298, 298, 249, 249, 351, 190, 190,
	165, 165, 165, 23, 25, 25, 17, 17, 34, 34,
	35, 35, 30, 30, 462, 462, 463, 463, 90, 90,
	94, 94, 94, 102, 102, 142, 142, 142, 142, 142,
	142, 142, 38, 38, 38, 38, 50, 50, 50, 50,
	100, 479, 479, 479, 101, 101, 478, 478, 185, 185,
	185, 185, 187, 187, 311, 311, 312, 312, 480, 480,
	313, 313, 313, 313, 180, 179, 181, 181, 55, 55,
	55, 174, 174, 175, 175, 176, 176, 177, 177, 481,
	481, 87, 87, 87, 145, 145, 220, 220, 220, 307,
	307, 307, 244, 244, 195, 195, 310, 310, 308, 308,
	308, 308, 277, 277, 277, 144, 144, 257, 257, 270,
	270, 271, 271, 362, 362, 272, 99, 99, 155, 155,
	153, 153, 153, 153, 153, 153, 160, 160, 261, 261,
	161, 161, 161, 161, 162, 162, 162, 154, 154, 154,
	156, 156, 156, 156, 156, 156, 156, 159, 159, 159,
	159, 163, 163, 163, 158, 158, 430, 430, 430, 432,
	432, 433, 429, 429, 431, 431, 474, 474, 282, 282,
	282, 241, 242, 240, 240, 247, 247, 246, 248, 248,
	350, 350, 350, 166, 166, 166, 275, 275, 275, 275,
	303, 303, 301, 301, 301, 302, 302, 304, 304, 304,
	305, 305, 306, 306, 274, 274, 331, 331, 157, 157,
	157, 254, 254, 254, 255, 255, 322, 322, 322, 322,
	322, 322, 323, 323, 321, 321, 321, 321, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 354, 355, 355,
	256, 256, 356, 309, 309, 447, 447, 447, 448, 448,
	348, 348, 357, 357, 357, 357, 357, 357, 346, 346,
	347, 347, 363, 364, 364, 286, 286, 286, 286, 284,
	284, 287, 287, 287, 287, 285, 285, 358, 358, 358,
	358, 276, 276, 359, 359, 359, 359, 360, 317, 318,
	318, 368, 368, 368, 368, 383, 253, 253, 253, 253,
	253, 482, 482, 369, 369, 369, 369, 369, 369, 369,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 373, 373, 373, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 382, 382, 382, 382, 382, 374, 374,
	379, 379, 380, 380, 380, 375, 376, 381, 381, 381,
	381, 483, 483, 385, 385, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 371, 371, 371, 378, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 294, 294, 295, 295, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	326, 326, 326, 326, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 424,
	424, 424, 424, 424, 424, 424, 424, 427, 427, 428,
	428, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 434, 434, 435, 435, 437, 437, 438, 438,
	439, 440, 440, 440, 441, 442, 442, 436, 436, 443,
	443, 443, 443, 444, 444, 445, 445, 445, 445, 445,
	446, 446, 446, 446, 446, 337, 337, 338, 338, 344,
	344, 344, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 188, 188,
	188, 188, 188, 266, 266, 264, 264, 264, 267, 267,
	265, 265, 263, 263, 262, 262, 334, 334, 332, 332,
	336, 336, 288, 288, 384, 384, 384, 384, 384, 384,
	384, 384, 289, 289, 289, 297, 290, 290, 291, 291,
	291, 291, 291, 328, 329, 292, 292, 292, 330, 330,
	339, 343, 343, 342, 341, 341, 340, 340, 319, 319,
	320, 320, 273, 273, 484, 484, 269, 269, 361, 361,
	361, 361, 223, 223, 258, 258, 222, 222, 215, 215,
	216, 216, 216, 216, 251, 251, 386, 386, 386, 387,
	388, 389, 333, 205, 204, 192, 193, 203, 202, 201,
	191, 194, 198, 199, 200, 196, 197, 211, 210, 209,
	207, 208, 366, 217, 217, 218, 218, 218, 219, 219,
	219, 219, 189, 189, 212, 212, 213, 214, 214, 206,
	206, 206, 182, 182, 182, 183, 183, 184, 184, 396,
	396, 394, 394, 394, 395, 395, 395, 395, 393, 393,
	393, 393, 393, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 402, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 405, 405,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 1, 3, 4,
	6, 1, 3, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 6, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 2, 6, 2, 1, 3,
	1, 3, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 6,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 3, 3,
	4, 3, 4, 7, 4, 4, 4, 3, 5, 7,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	3, 4, 6, 3, 4, 6, 3, 4, 6, 3,
	4, 6, 3, 3, 5, 3, 3, 5, 3, 1,
	3, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 6, 4, 7, 2, 6, 4, 7, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 2, 2, 5, 7, 3, 3, 3, 3,
	4, 4, 4, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 3, 2, 4, 3, 3, 5, 4,
	3, 5, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 1,
	2, 0, 3, 3, 2, 10, 13, 0, 2, 3,
	9, 12, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 4, 2, 5, 5,
	5, 2, 8, 9, 6, 5, 3, 1, 5, 8,
	5, 11, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 4, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 1, 2, 1, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 4, 7, 3, 3, 0, 3, 6,
	3, 1, 1, 8, 7, 5, 0, 1, 6, 7,
	6, 5, 3, 4, 14, 17, 14, 17, 4, 0,
	2, 2, 0, 1, 0, 1, 3, 3, 2, 0,
	1, 1, 0, 6, 6, 8, 6, 8, 6, 8,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 2, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 2, 1, 0, 1, 3,
	2, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	2, 3, 4, 3, 4, 5, 0, 3, 0, 2,
	2, 4, 2, 3, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 6, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 2, 2, 5, 2, 3, 1, 3, 0,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 1, 1, 1, 1, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	2, 1, 5, 1, 1, 1, 1, 2, 1, 5,
	5, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 2, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 467, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -142, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -143, -144, -145, 84, 70,
	125, 106, 111, 158, 294, 324, 334, 318, -107, -108,
	353, -38, -50, -101, -100, -4, -10, 27, 41, -40,
	-41, -42, 55, -60, -57, -54, -63, -464, 86, -431,
	-71, -74, -76, -468, 116, 131, 175, 286, -92, -93,
	320, 322, 132, -45, -44, 126, -153, -155, -105, -106,
	-146, -113, -114, -115, -116, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -139, 357, 404,
	42, 367, 71, 119, 328, 21, -5, -6, -7, -8,
	-9, -11, -12, -25, -53, -55, -56, -58, -59, -67,
	-61, -62, -430, -72, -73, -75, -77, -78, 319, -156,
	-154, 464, 417, -14, -19, -20, -15, -16, -18, -21,
	-17, -26, -31, -32, -28, -29, -27, -30, -33, -34,
	-35, -36, -23, -24, -13, -22, 435, 443, -159, -157,
	-158, -163, 341, 425, 381, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, -207, -212, -213, -214, -206,
	-182, -402, -405, 4, -400, -403, 137, 182, 252, 21,
	22, 23, 24, 25, 27, 38, 40, 39, 41, 42,
	45, 47, 48, 51, 52, 53, 54, 55, 56, 59,
	64, 69, 70, 71, 72, 73, 74, 79, 76, 77,
	78, 81, 83, 84, 85, 88, 89, 97, 98, 99,
	100, 101, 102, 106, 109, 108, 111, 114, 115, 116,
	118, 120, 121, 123, 125, 126, 129, 127, 387, 128,
	130, 131, 132, 133, 143, 144, 145, 147, 148, 150,
	152, 156, 157, 159, 163, 165, 166, 167, 168, 174,
	175, 177, 178, 183, 179, 184, 188, 191, 190, 192,
	193, 194, 185, 199, 203, 204, 205, 207, 208, 211,
	212, 213, 214, 215, 218, 217, 220, 223, 224, 227,
	228, 231, 232, 233, 235, 236, 239, 237, 240, 238,
	241, 244, 242, 243, 246, 247, 250, 248, 254, 257,
	172, 259, 260, 262, 263, 264, 280, 267, 268, 269,
	272, 273, 276, 279, 281, 282, 283, 284, 285, 286,
	287, 289, 290, 292, 294, 296, 298, 299, 300, 301,
	302, 303, 304, 306, 307, 309, 310, 311, 312, 313,
	318, 315, 316, 317, 319, 320, 321, 322, 324, 326,
	327, 328, 329, 331, 333, 354, 355, 369, 334, 335,
	336, 337, 338, 339, 340, 344, 348, 345, 346, 347,
	342, 343, 349, 350, 351, 353, 356, 357, 359, 360,
	362, 363, 365, 366, 367, 368, 370, 373, 374, 375,
	371, 372, 380, 378, 379, 382, 383, 384, 385, 386,
	388, 390, 398, 399, 401, 404, 405, 406, 396, 408,
	409, 412, 413, 414, 415, 416, 421, 417, 419, 422,
	423, 424, 430, 429, 436, 437, 439, 440, 441, 33,
	43, 44, 46, 49, 60, 61, 62, 65, 103, 104,
	124, 134, 135, 146, 160, 162, 169, 170, 171, 189,
	195, 197, 201, 221, 256, 258, 274, 278, 291, 293,
	305, 330, 361, 376, 391, 392, 393, 394, 400, 402,
	425, 426, 427, 431, 438, 265, -200, 2, -182, -182,
	294, 26, 2, 26, 290, 343, 383, 385, 2, -454,
	-252, 2, 26, -186, -182, 86, 158, 341, -200, 2,
	-454, -252, 24, 2, -182, 2, -187, 2, 334, -182,
	467, 81, 228, 64, 330, 350, -110, 399, -109, 391,
	336, -111, -392, 2, 244, -182, 467, 467, 467, 467,
	2, 381, 283, 429, 342, 418, 99, 302, 182, -449,
	2, 4, -403, -400, -216, -215, 381, 99, -214, -206,
	457, -213, 467, 467, 467, 2, 204, 205, 301, 300,
	350, 351, 467, 467, 467, 2, 25, 58, 80, 83,
	105, 133, 153, 156, 270, -465, 236, 280, 299, 336,
	349, 380, 388, 401, -460, 368, 59, -459, 418, -475,
	406, 114, -298, 99, 228, 157, 413, 385, 383, 326,
	161, 411, 109, 188, 416, 415, 467, 467, 25, 58,
	67, 83, 114, 133, 153, 156, -467, 280, 299, 333,
	336, 349, 380, 388, 406, 401, 2, 429, 342, 381,
	182, 99, 418, 326, 297, -81, 2, 464, 29, 28,
	353, -152, 381, 198, 2, -182, 204, 205, 2, 467,
	467, -449, 2, 204, 205, 2, 198, 2, 59, 338,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 2, -140, 350,
	368, 167, 41, 64, 26, 298, 69, 284, 100, 159,
	182, 183, 212, 80, 81, -299, 40, 205, 204, -349,
	382, 337, 343, 378, 399, 86, 419, 327, 441, 302,
	303, 127, 4, 99, 244, 352, 391, 228, 73, -474,
	2, 381, -478, 2, 399, 399, 2, -478, 2, -478,
	2, -185, 2, 399, 395, -479, 399, 438, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, -154, -156, -155, 467, 467, 467, 467, 467, -140,
	350, 2, 64, 26, -160, -161, 151, -246, -247, 410,
	196, 122, 271, -153, -155, 2, -430, -390, 2, -324,
	-406, -326, 455, 456, 448, 251, 442, -337, 105, 411,
	265, -405, -327, -339, 124, 330, -267, 8, 9, 5,
	6, 7, -189, -370, -333, -378, 403, 136, 255, -219,
	468, 10, 464, -427, -155, -338, 34, 162, 57, -394,
	-218, -372, -380, -376, -377, -482, 47, 53, 52, 388,
	243, 344, 345, 362, 346, 347, 45, 421, 179, 262,
	264, 190, 4, 197, -217, -206, -424, -425, -400, -401,
	189, 195, 191, 361, 192, 193, 194, 44, 305, 147,
	148, 146, 115, 104, 103, 258, 49, 48, 46, 426,
	-381, 101, 391, 392, 393, 394, 207, 208, -182, -402,
	67, 91, 92, 90, 95, 94, 96, 93, 352, 418,
	58, 33, 169, 170, 201, 256, 171, 65, -426, 372,
	87, 155, 187, 173, 200, 202, 206, 222, 225, 245,
	249, 253, 275, 277, 325, 358, -483, 427, 134, 135,
	278, 291, 376, 400, 402, 160, 221, 60, 61, -432,
	306, -433, -200, -432, 467, 467, 469, 467, -240, -241,
	-242, 2, 26, 112, 464, 2, -353, 2, -354, -358,
	-155, 216, -357, 464, -355, 462, -207, 266, -428, 331,
	-424, -425, -189, -206, -218, 4, -243, 464, 466, 99,
	381, 68, 182, -293, 464, -182, 26, 265, 395, 469,
	-335, 464, 265, 154, 268, -182, 2, 2, 354, 2,
	464, -110, 62, 399, 39, 350, -312, 2, -313, -179,
	-180, -181, -363, 203, 296, 304, 444, 441, -390, -461,
	154, 447, 395, -390, -268, 466, 2, -358, 169, -207,
	2, -204, -393, 4, -400, -403, -401, -404, 67, -402,
	26, 28, 29, 30, 32, 34, 35, 36, 37, 50,
	57, 58, 63, 66, 68, 80, 86, 90, 91, 93,
	92, 94, 95, 96, 105, 107, 110, 112, 113, 117,
	119, 122, 136, 138, 151, 153, 154, 158, 161, 164,
	176, 186, 196, 198, 216, 219, 226, 229, 230, 251,
	255, 261, 265, 266, 270, 271, 288, 295, 308, 323,
	341, 352, 364, 377, 381, 389, 395, 397, 403, 410,
	411, 418, 420, 428, 432, 433, 434, 435, -405, 2,
	-358, 169, 2, -209, 169, -358, -212, 2, -398, 169,
	-396, 10, -395, 5, 4, -400, -403, -401, 2, -191,
	-182, 2, -203, -393, 2, -222, 169, -207, -208, -212,
	395, 469, -258, -215, -216, -251, -182, 466, -324, 2,
	-99, 2, -324, 169, 2, -99, 169, 2, -324, 169,
	2, -99, 169, 2, 2, 2, 401, 2, 83, 169,
	-182, 381, 98, 2, 317, -466, 333, 405, 429, 2,
	2, 2, 2, 2, 2, 2, 381, -196, 2, -182,
	151, 342, -476, 306, -398, 169, 2, -398, 169, 2,
	-210, -212, -210, 182, 199, -191, 169, 2, 385, 383,
	385, 383, 154, 2, 198, 2, 198, 2, -359, 2,
	-360, -354, -207, 462, 2, 2, 2, 2, 2, 169,
	-182, 381, 98, 2, 214, 2, 2, 2, 2, 2,
	2, 2, 2, 2, -260, 169, 2, -207, -260, 169,
	2, -260, 169, 2, -223, 169, 2, -222, -191, 169,
	2, -399, 169, 2, -398, -399, 169, 2, -367, 2,
	-366, -395, 425, -81, 464, -81, 464, 350, 464, -398,
	-207, -207, -324, -99, 154, -324, -99, -152, 151, 2,
	99, 381, -140, 2, 151, 420, 2, 8, 2, -398,
	337, 303, 143, 2, 354, 2, 355, 64, -299, 441,
	64, 154, 2, 154, 2, -283, 2, 435, -452, 2,
	265, 154, 2, 154, 2, 154, 2, 154, 2, 154,
	2, 300, 351, 205, 2, -99, 432, -324, 432, 2,
	398, 213, 128, 154, -283, 2, 154, 2, 154, 2,
	5, 2, 203, 296, 369, 2, -207, -469, 2, 381,
	429, 342, 2, 2, 76, 77, 154, 2, 154, 2,
	154, 441, 2, -276, -358, -311, -312, -311, 395, -187,
	-160, -246, -247, -140, 354, 2, -261, 259, 415, 247,
	356, 211, -160, -275, -301, -302, 226, 138, 261, -282,
	26, 112, -282, -282, 51, 465, 465, 11, 12, 66,
	38, 455, 456, 457, 458, 149, 459, 460, 453, 454,
	452, 445, 446, 450, 209, 210, 82, 449, 447, 75,
	234, 332, 139, 140, 141, 142, 314, 180, 31, 181,
	14, 15, 16, 30, 270, 225, 442, 173, 358, 448,
	17, 18, 19, 200, 202, 253, 43, 176, -188, -224,
	-324, -324, -324, -324, -324, 277, 464, -273, -319, 462,
	-155, 464, 464, 464, 5, 464, 5, -389, 8, -155,
	-324, -337, 465, -265, 464, -155, -337, -332, 464, 330,
	462, 464, -340, -324, 466, -434, 436, -374, 464, 293,
	-373, 464, -373, -373, 430, -371, 464, 443, 437, 464,
	-371, 464, 464, 151, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 430, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 469, -432, -243,
	464, -269, -361, -324, 457, -269, -269, 265, -262, -324,
	87, -286, 206, 245, 155, 222, 325, 187, -321, 468,
	-321, -348, 443, -155, -355, -206, -155, -357, 464, -353,
	-348, -82, -389, -68, -79, -87, -99, -112, -144, -145,
	457, -207, 464, 154, 464, 466, 154, -251, -393, -191,
	-207, -217, -218, -222, 111, -262, -449, -251, -186, 35,
	-334, -368, -369, -370, -379, -375, -378, -382, 47, 53,
	52, 388, 243, 344, 345, 362, 346, 347, 45, 421,
	179, 262, 264, 190, 4, 46, 426, -381, 197, 310,
	311, 309, 313, 312, 189, 195, 191, 361, 192, 193,
	194, 44, 305, 147, 148, 146, 115, 104, 103, 258,
	49, 48, 101, 391, 392, 393, 394, 207, 208, 427,
	372, 60, 61, -449, -251, 151, -392, -262, 35, -312,
	2, 105, -396, 39, -480, 469, 224, -226, 233, 250,
	166, 266, 439, 259, -397, 5, 4, -333, -345, 105,
	228, -378, 9, 456, -386, 8, 455, -391, -390, 89,
	466, -393, -168, 315, -167, 23, 27, 116, 423, 129,
	-233, 184, 283, 124, 365, 414, -456, -457, 335, 386,
	387, 78, 259, 315, 124, -279, -281, 35, 97, 247,
	279, 54, 177, 238, 239, 367, 431, 124, 315, 435,
	124, -457, 315, -457, -170, 365, 414, -456, -457, 335,
	315, -169, -233, 124, 468, -96, -398, 464, -258, 469,
	469, -393, 457, 124, 124, 124, 124, 2, 2, 251,
	2, 2, 2, 156, -459, -467, 2, 2, 2, -207,
	169, -245, 265, -451, -259, 381, -207, -209, 169, 2,
	-212, 429, -178, -429, 435, 251, 251, 35, 464, 2,
	-193, 169, 2, -183, -182, 182, -429, 251, -359, -220,
	-207, -354, -220, 353, -200, 35, -321, -321, 124, 2,
	2, 2, -182, -171, 469, 56, 321, 124, -171, 124,
	-171, 124, -171, 469, 124, -171, 124, 469, 124, 124,
	465, 469, -367, -367, -398, -150, 435, 154, 86, 464,
	464, -152, -97, -96, -398, -451, -191, 2, -207, 2,
	381, 207, -398, -398, -398, -392, 26, 355, 2, 300,
	351, 77, 355, 2, -207, 381, 99, 182, 70, -453,
	151, -450, 326, -449, -207, 99, -207, 99, -207, 99,
	-207, -207, 2, 2, 2, 2, 74, 74, 151, 2,
	398, 2, 398, 2, -182, -182, -182, 224, -207, 151,
	381, 182, 381, 182, 99, 381, -171, 469, -187, -160,
	-275, -392, -162, 360, 254, -260, 211, 356, -160, -302,
	-301, 26, -324, -306, 145, 246, -324, -326, -154, -154,
	-154, -248, -350, -324, 295, 182, -383, -368, -368, -205,
	-393, 391, -324, -324, -324, -324, -324, -324, -324, -324,
	-324, -324, -324, -324, -324, -324, -324, -324, -324, -324,
	-324, -324, -324, -324, -324, -324, -324, -324, -324, -324,
	-324, -324, -324, -324, -324, -324, -324, 225, 173, 358,
	43, 176, -324, 395, -324, -324, -324, -324, 242, 251,
	255, 403, 136, 412, 112, 259, -484, 377, 37, -330,
	-155, -266, 464, -344, 32, 364, 26, -337, 464, 2,
	-319, -324, -320, -263, -262, -262, 465, 428, 26, 112,
	457, 2, 8, -294, -296, 440, 241, 102, 168, 240,
	-295, 340, 465, 469, 35, 465, -324, -263, -336, -332,
	-262, -343, -342, 432, -393, 457, -435, 144, 161, 8,
	-387, 8, -387, 391, 391, -387, -387, -387, 464, 465,
	2, 465, 2, 465, -324, 2, 465, -324, 2, 465,
	2, -324, -324, -324, -324, -324, -324, -324, -262, -288,
	2, -384, -262, 4, 440, 241, 102, 168, 240, 340,
	5, -288, 2, -289, 2, -324, -262, -290, -325, -326,
	455, 456, 448, -337, -291, 2, -324, -263, -324, 50,
	219, 397, -292, -324, 154, -262, -262, 2, -262, 2,
	-433, 35, -262, -254, 469, 154, 35, 4, -254, -254,
	464, 465, 469, -287, 165, 237, 232, -287, -353, -286,
	206, -284, 275, -284, -284, -348, -192, 462, 470, -393,
	-348, -347, -346, 35, -200, 272, -348, -348, 466, 465,
	-347, 463, -447, 464, 467, 467, 467, 467, 467, -207,
	464, -262, -393, 370, 465, 466, 200, 200, 200, 200,
	331, 465, 395, 435, -81, 267, 465, 469, -253, 34,
	462, -296, 464, -385, 430, 464, 464, 154, -252, -461,
	465, 399, -313, -225, 304, 363, 316, 348, 379, 9,
	8, 8, 469, -393, 469, -462, 80, 395, 68, -315,
	169, 68, -407, -194, 80, -408, -182, 63, 411, 295,
	153, -462, 80, 295, -462, 80, 80, 353, 368, 51,
	-358, 38, 38, 26, -99, 220, 154, 441, 381, 182,
	395, -358, -281, -368, 97, 238, 239, 51, -388, -386,
	456, -388, 51, -388, -388, -388, 435, -209, -358, 395,
	285, -398, 395, 469, 38, 38, 26, -99, 220, 154,
	395, -222, -192, -364, -363, -399, -215, -182, 466, -324,
	-99, -324, -99, 124, 2, -476, 214, 464, -229, 251,
	154, -251, -365, 198, 469, -259, -280, -279, 251, -211,
	2, -207, 285, 124, 124, 464, 120, 302, 2, 265,
	251, -193, 169, -174, 384, 124, -278, 420, -307, -99,
	464, 105, 35, -307, -270, -271, -362, -272, -194, 464,
	-200, -182, 2, -207, -260, -260, -260, -222, -223, -191,
	-398, -399, -399, -81, -366, 465, 465, 465, -149, 269,
	-148, -182, 5, -152, 420, -228, -316, -315, -411, -412,
	-407, 225, 182, 411, 199, 137, -244, -195, -194, 98,
	-364, 469, -150, -150, -364, -364, -207, 151, 2, 2,
	-283, -207, -191, -222, -207, -251, -251, -283, -191, -283,
	-191, -283, -191, -99, -324, 350, 151, 151, 466, -283,
	302, 99, 381, 283, 182, -207, -222, -207, -222, -191,
	-207, -358, -160, 231, 415, -304, -386, 464, -305, 330,
	331, 469, -165, 36, 110, 211, -207, 441, 121, -324,
	-324, 395, -484, 377, -330, 121, -324, 242, 255, 403,
	136, 412, 112, 259, 154, 464, -325, -325, 465, -264,
	-324, -324, 463, 472, 465, -247, 469, -246, -324, -262,
	-262, 465, 465, 395, 395, 395, 395, 464, 466, -262,
	-251, 463, 463, 469, 465, -341, -342, 117, -324, 466,
	-440, 276, 464, 464, 465, 465, 469, 465, 441, 441,
	465, 465, 465, -324, 465, 465, 35, 469, 469, 469,
	465, 469, 469, 469, 465, 465, 154, 465, 465, -297,
	288, 465, 11, 12, 455, 456, 457, 458, 149, 459,
	460, 453, 454, 452, 445, 446, 447, 75, 234, 332,
	14, 15, 16, 200, 176, -325, -325, -325, 465, -328,
	-329, 154, 151, 35, -292, -292, -292, 465, 154, -262,
	465, 465, 464, 465, -318, -317, 433, -361, -255, 2,
	-353, -202, -393, -318, -318, -262, -324, 206, 206, -285,
	420, 265, -287, -353, -347, -389, -323, -322, 152, 36,
	110, 248, 172, -347, -200, -243, -347, -347, -393, -348,
	-348, -346, 465, -448, -389, 465, -256, -356, -428, -247,
	466, -150, -393, -141, 5, 255, -141, -141, -141, -251,
	24, 289, -368, 462, 463, 8, 8, 464, -387, -387,
	-251, 154, -390, -312, 409, 72, 304, 391, -390, -167,
	315, -194, -194, -207, 251, -315, 169, -173, 251, -368,
	-201, -182, 464, 464, 211, 211, -194, -201, 211, 169,
	-194, 169, -201, -201, -455, 304, 260, -324, 227, 302,
	252, -168, 315, -99, -99, -99, 464, -461, 420, 111,
	-207, -222, -207, -211, 315, 249, -217, -388, -388, -279,
	315, -209, -398, 435, -191, -169, -99, -99, -99, 464,
	-192, -170, 315, -147, 178, 465, 457, -182, 429, -182,
	-227, -230, -228, -194, -470, 437, 435, 124, -221, -207,
	462, -150, -398, -207, 124, -243, -398, -398, -398, 2,
	464, 2, -207, 124, 265, 251, -175, 118, -481, 447,
	-191, -318, -255, -277, -310, 323, 265, -244, 425, -200,
	-277, -257, 469, 154, 447, 466, -244, 2, -171, -171,
	-171, -171, -171, -81, -81, -150, 469, 464, 447, 447,
	464, -398, -398, 465, 469, -207, -193, 182, 182, -199,
	-183, 465, 469, 466, 464, -150, -96, 154, -46, 435,
	381, 468, -283, -283, -283, 350, 350, -182, -203, -191,
	-207, -204, -222, 151, 151, -305, -324, -350, -166, 257,
	-207, 468, -324, -324, 121, 121, -324, -325, -325, -324,
	121, 154, 464, -324, -334, 30, 30, 465, 469, -320,
	-324, 465, 428, -247, -247, 465, 5, 241, 168, 240,
	-295, 240, -295, -295, 8, 457, -393, 465, -332, 119,
	-324, 389, -393, 457, -441, -197, 464, -182, 433, -246,
	-387, -371, -371, 465, -383, -368, -324, -324, -324, -324,
	-324, -324, -328, -324, -383, -368, -325, -325, -325, -325,
	-325, -325, -325, -325, -325, -325, -325, -325, -325, -325,
	-325, -325, -325, -325, -325, 112, 251, 259, -325, -329,
	-328, -324, -324, -368, 465, 465, 465, -262, -81, -274,
	161, -324, -364, 469, -274, -274, 465, -353, -353, 464,
	-324, 206, 463, 469, 471, 447, -243, 466, -346, -347,
	463, 465, 469, 465, 469, -309, 35, 465, -393, 268,
	5, 8, 462, 463, 465, -387, 465, 465, -251, -324,
	395, 395, 124, 251, 422, -413, -408, -324, -249, -351,
	-324, 464, 464, -164, 116, 353, -463, 2, 420, 124,
	-171, 124, -171, 439, 464, 464, 395, 435, -262, -324,
	-151, 105, -392, -457, 468, -457, 468, 395, 395, 285,
	435, -262, 395, -150, 154, 2, 2, 2, 465, 465,
	469, -414, 35, 263, -182, -207, -64, 435, -363, -389,
	-209, 35, -178, 2, -300, 420, -192, -207, 124, -176,
	218, -481, -396, -429, -247, -277, -269, 252, 79, 465,
	-318, -271, -255, -324, 2, 465, -148, -149, -398, -398,
	-398, -150, -152, -152, -316, 2, 464, -193, -183, 464,
	-152, -195, 2, -399, -99, 269, -207, 457, -283, -235,
	-234, 283, 259, -235, 330, 330, 266, 465, 145, 215,
	-165, -192, -324, -324, 121, 30, 30, -324, -324, -334,
	465, -324, -324, -262, 463, 5, -324, 465, 465, 465,
	-324, 466, -442, -182, -324, 465, 465, 465, 465, 469,
	469, 465, 465, 465, 465, -329, 154, 112, 259, 464,
	465, 465, -331, 164, 51, -353, -331, -331, -285, -251,
	-353, -322, -192, 462, -393, -389, -356, 464, 466, 463,
	2, 462, 465, -194, -194, -315, 124, -415, 80, -417,
	66, 137, 86, 251, 255, 411, 295, 63, 105, 308,
	35, 465, 465, 469, -165, -249, -251, 251, 374, 105,
	251, 105, 98, 406, 182, -194, -201, -251, -251, -207,
	130, 465, 469, 447, 2, 457, 457, -211, -209, -398,
	130, 465, -192, -399, -231, 185, -194, -412, -409, -410,
	295, -416, -418, 137, 295, -99, 2, 464, -229, 269,
	463, -280, -99, 464, -182, 265, 464, -192, -177, 217,
	-481, -396, -174, -303, -301, -308, 464, 265, -99, -247,
	447, 465, 465, 98, 98, -249, 464, 464, -251, 98,
	465, -47, -48, 182, 80, 287, -204, 381, 182, 464,
	464, -165, -324, -324, -324, 465, -247, -393, 457, -436,
	283, 465, -324, -324, -325, 154, 464, -334, -437, 434,
	-324, -262, -437, -437, 465, -389, 2, 462, 2, -315,
	-201, -205, -198, -182, 137, 169, 255, 211, 464, -325,
	-207, 464, 2, -472, 107, 186, -314, -473, 85, 375,
	-351, -166, 465, 465, 255, 255, -324, -368, -222, -171,
	-171, 465, 465, -324, 395, -392, 84, -390, 2, -457,
	-324, 395, -232, -233, 176, -414, 211, -198, 211, -471,
	435, -227, -470, -65, -66, 396, -363, -249, -207, -249,
	265, -481, -396, -175, -277, 113, -251, 80, -303, -330,
	-150, 464, 464, 465, -249, -249, 465, 464, -150, 469,
	26, 464, 26, 464, -207, -222, -262, -262, 465, -247,
	51, 465, 465, -325, -334, 465, -438, -439, -197, 463,
	2, -417, -198, 251, -324, -184, 464, -324, 186, 108,
	174, -231, 464, 308, -190, 66, 464, 464, 464, 447,
	154, 464, -470, 281, 464, 98, 247, 465, 35, -66,
	9, 465, -300, 465, -207, -396, -176, 415, 252, 465,
	-201, -277, -399, -399, -314, 465, 465, -399, -48, -251,
	-251, 465, 465, -443, 302, 331, 163, -262, 465, 469,
	35, 124, 465, -419, 235, -182, 465, 108, 174, -232,
	-251, -207, -458, 420, -205, -237, -236, -234, -239, -238,
	-234, -262, -390, 84, 281, -262, -207, -250, -352, -194,
	98, -231, -99, -314, 464, -314, 464, -177, 353, -317,
	465, 465, -231, -314, 465, 465, 465, 465, -444, -445,
	43, 408, 89, -324, -444, -444, -439, -441, 137, -420,
	-423, -422, 265, 359, 155, 282, 465, 374, 431, -472,
	465, -243, -324, 465, 469, 425, 465, 469, 425, 465,
	154, 465, 464, 465, 469, -232, -471, -231, -249, -231,
	-249, -270, -150, -150, -232, -231, -150, -446, 123, -445,
	292, 150, 330, 292, 150, -446, -446, -198, -422, 265,
	-423, 265, 415, 109, -419, -236, 176, -238, 154, 281,
	-251, -352, -470, -232, 465, -232, 465, -318, -232, 89,
	161, 390, 247, 30, -421, 247, 321, 56, 353, -421,
	-420, 464, 464, 465, -477, 433, -314, -477, -314, 330,
	273, -445, 22, 255, 105, -472, -262, -262, -172, 56,
	321, 2, -231, -231, 465, 465, -232, -232, -232, 395,
	-477, -477, 464, -262, 465, -232,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 369, 370, 372,
	373, 374, 376, 377, 379, 381, 383, 385, 386, 388,
	390, 392, 393, 394, 395, 396, 398, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 460,
	0, 935, 937, 939, 941, 25, 26, 0, 0, 190,
	192, 194, 0, 219, 221, 223, 224, 226, -2, 0,
	321, 322, 324, 326, -2, -2, 0, 0, 447, 449,
	0, 0, 0, 469, 470, 0, 1026, -2, 463, 465,
	467, 532, 534, 536, 538, 540, 542, 544, 545, 547,
	549, 551, 553, 555, 557, 559, 560, 562, 564, 566,
	568, 570, 572, 574, 576, 578, 580, 582, -2, -2,
	-2, 0, -2, -2, -2, 953, 29, 31, 33, 35,
	37, 39, 41, 61, 275, 276, 278, 280, 282, 285,
	286, 288, 1074, 328, 330, 332, 334, 336, 0, -2,
	1086, 0, 0, 43, 44, 45, 46, 47, 48, 49,
	50, 68, 69, 70, 71, 72, 73, 74, 75, 54,
	56, 57, 63, 64, 66, 52, 0, 0, 1050, 1052,
	1054, 1056, -2, 0, 0, 7, 9, 11, 13, 15,
	17, 19, 21, 371, 375, 378, 380, 382, 384, 387,
	389, 391, 397, 399, 401, 829, 1690, 1704, 1705, 1706,
	1709, 1710, 1711, 1712, 1713, 1714, 2057, 2137, 2138, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 0, 425, 423, 1684, 426,
	1888, 428, 430, 315, 316, 317, 318, 319, 320, 0,
	440, 434, 439, 441, 443, 444, 445, 446, 420, 418,
	0, 440, 1736, 438, 933, 934, 928, 929, 1922, 963,
	459, -2, -2, -2, 2025, -2, 491, -2, 498, 2028,
	1924, 503, 0, 505, -2, 508, 936, 938, 940, 27,
	28, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, -2, -2, -2, -2, 0, 0, 1773, 1660, 1706,
	1663, 1658, 191, 193, 195, 196, 0, 0, 0, 0,
	0, 0, 220, 222, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 735, 736, 881,
	882, 903, 0, 0, 0, 0, 323, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 253, 361, 362, 0, 1075, 1075,
	0, 0, 0, 0, 171, 162, 0, 0, 724, 448,
	450, 0, 157, 0, 0, 932, 0, 173, 0, 0,
	464, 466, 468, 533, 535, 537, 539, 541, 543, 546,
	548, 550, 552, 554, 556, 558, 561, 563, 565, 567,
	569, 571, 573, 575, 577, 579, 581, 583, 584, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	-2, -2, -2, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 587, 589, 590, 591, 0, 642, 659, 0,
	872, 1076, 965, 943, 956, 965, 945, 946, 947, 948,
	949, 954, 955, 958, 0, 950, 951, 952, 30, 32,
	34, 36, 38, 40, 42, 277, 279, 281, 283, 287,
	289, -2, 1048, 1049, 329, 331, 333, 335, 337, 451,
	0, 453, 0, 588, 1030, 1038, 0, -2, 0, 1080,
	1080, 1080, 0, 0, 1049, 1047, 0, 456, 457, 512,
	513, 1315, 0, 0, 0, 0, 0, 1557, 1399, 0,
	514, -2, 1430, 1432, 2004, 2025, 1556, 1434, 1435, 1436,
	1437, 1438, 0, 0, 1441, 0, 1443, 1444, 1445, 1446,
	0, 1448, 0, 1452, 1453, 1454, 0, 2009, 1637, 1702,
	-2, 1220, 1221, 1222, 1223, 1224, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1698, 0, 1523, 1468, -2, 1723,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1782, -2, -2, -2, -2, -2, -2, -2,
	1276, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2039, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	0, 1993, 2010, 2011, 2016, 2018, 2012, 2001, 1491, -2,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 1277, -2, 2005, 2006,
	2021, 2022, 2027, 2032, 2033, 2008, 2017, -2, -2, 1066,
	1897, 1069, 829, 1067, 1051, 1053, 0, 1055, 0, 0,
	0, 1060, 1083, 1081, 0, 1119, 1064, 1065, 1137, 1137,
	1161, 0, 1142, 0, 1161, 1075, 1187, 0, 1148, 1917,
	1469, 1470, 0, 1706, 1703, -2, 0, 0, 0, 0,
	0, 0, 0, 421, 0, 427, 429, 0, 0, 0,
	0, 0, 0, 0, 0, 962, 461, 462, 0, 486,
	0, 490, 2000, -2, 1741, 1937, -2, 494, 966, 970,
	971, 972, 973, 0, 0, 0, 0, 0, 500, 0,
	0, 487, 488, 506, 509, 0, 51, 0, 2010, 1187,
	53, 0, 1674, 1728, 1729, 1730, 1731, 1732, 2039, 2056,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 55,
	0, 2010, 58, 0, 2010, 0, -2, 62, 0, 2010,
	174, 175, 1719, 1720, 1724, 1725, 1726, 1727, 65, 0,
	1680, 67, 0, 1677, 76, 0, 2010, 0, 1657, -2,
	0, 0, 716, 1654, 1659, 717, 1664, 0, 197, 198,
	199, 200, 201, 2010, 203, 204, 0, 206, 207, 2010,
	209, 210, 0, 212, 228, 229, 0, 231, 0, 2010,
	0, 0, 0, 237, -2, 254, 0, 251, 0, 241,
	242, 244, 245, 246, 247, 248, 0, 293, 291, 1685,
	0, 0, 0, 887, -2, 2010, 875, 878, 2010, 880,
	892, 1688, 0, -2, 0, 1073, 2010, 980, 739, 740,
	741, 742, 0, 312, 0, 993, 0, 995, 0, 1016,
	1193, 1137, 1137, 0, 255, 256, 257, 258, 259, 2010,
	0, 0, 0, 264, 0, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 151, 2010, 340, 359, 151, 2010,
	343, 151, 2010, 346, 151, 2010, 349, 1652, 151, 2010,
	352, 353, 2010, 355, 176, 356, 2010, 358, 0, -2,
	414, 1692, -2, 364, 0, 365, 0, -2, 0, 188,
	0, 0, 722, 723, 0, 930, 931, 0, 0, 471,
	0, 0, 585, 586, 0, 0, 596, 597, 598, 599,
	1925, 1895, 1798, 603, 0, 606, 609, -2, 0, 0,
	0, 0, 613, 0, 618, 619, 620, 0, 721, 622,
	0, 0, 624, 0, 628, 0, 631, 0, 633, 0,
	635, -2, -2, -2, 646, -2, 0, 650, 0, 652,
	0, 0, 0, 0, 667, 668, 0, 673, 0, 676,
	677, 678, 0, 680, 681, 682, 683, 0, 685, 686,
	-2, -2, 690, 692, 0, 699, 0, 703, 0, 707,
	0, 592, 593, 151, 1191, 942, -2, 944, 0, 960,
	1033, -2, 0, 452, 0, 455, 1044, 0, 1040, 0,
	1042, 0, 1031, 1036, 1098, 1099, 0, 0, 0, 0,
	1078, 1079, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1568,
	1569, 1572, 1573, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1575, 1576, 1577, 0, 0, 1579, 0, 1581, 0, 0,
	0, 0, 0, 0, 1378, 1380, 1645, 0, 0, 1578,
	1320, 1321, 1322, 1357, 1358, 0, 0, 1431, 1642, 1641,
	1433, 0, 1593, 0, 1440, 0, 1312, 1447, 1671, -2,
	0, 1557, 1588, 0, 0, 1455, 1456, 1457, 0, 0,
	1593, 0, 0, 1636, 0, 1525, 0, 1256, 0, 1257,
	1258, 0, 1259, 1260, 1273, 1286, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 1617, -2, 0, 0, 0, 0, 0, 1068, 0,
	0, 1123, 1646, 1650, 1651, 1123, 1123, 0, 0, 1594,
	1184, 1184, 0, 0, 1180, 1180, 1180, 1178, 1161, 0,
	1161, 1171, 0, 1161, 1161, 0, -2, 1142, 0, 0,
	1171, 0, 1155, 402, 404, 406, 408, 409, 410, 412,
	1188, 1189, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 1694, 0, 0, 0, 0, 432, 442, 1075,
	0, 1596, 1210, 1213, 1214, 1215, 1216, 1219, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, -2, 1274, 1276, 1297, 1263,
	1264, 1265, 1266, 1267, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1269, 0, 1244, 1244, 1244,
	1261, 1262, 1285, 1296, 1288, 1296, 1292, 1211, 1212, 1279,
	1280, 1281, 1282, 0, 436, 0, 0, 0, 0, -2,
	496, 501, 502, 0, 0, 968, 0, 974, 523, 524,
	525, 976, 977, 0, 499, 526, 527, 528, 529, 530,
	531, 0, 846, 0, 848, 1666, 0, 497, 516, 504,
	0, 510, 77, 925, 116, 0, 925, 925, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 101, 112, 89,
	90, 0, 0, 0, 0, 59, 854, 0, 857, 0,
	0, 0, 0, 0, 0, 0, 870, 0, 0, 0,
	0, 100, 0, 95, 79, 0, 0, 0, 102, 114,
	0, 142, 144, 0, 0, 1174, 158, 0, 715, 0,
	0, 1707, 1662, 0, 0, 0, 0, 230, 232, 0,
	234, 235, 236, 0, 886, 0, 243, 240, 284, 803,
	2010, 0, 0, 310, 305, 0, 307, 853, 2010, 851,
	1689, 0, 873, 0, 1072, 0, 0, 0, 0, 893,
	0, 2010, 898, 1676, 1715, 1716, 982, 0, 314, 0,
	996, 998, 0, 0, 1194, 0, 1196, 1197, 0, 261,
	262, 263, 0, 338, 0, 149, 150, 0, 341, 0,
	344, 0, 347, 0, 0, 350, 0, 0, 0, 0,
	1075, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 1174, 160, 188, 188, 1174, 473, 1174, 475,
	0, 0, 600, 601, 602, 604, 605, 607, 608, -2,
	-2, 700, 610, 611, 670, 0, 0, 0, 669, 621,
	0, 709, 1913, 719, 670, 1773, 670, 1773, 670, 1773,
	632, 634, 637, 662, 645, 649, 0, 0, 0, 654,
	0, 656, 0, 658, 670, 671, 674, 679, 684, 0,
	0, 0, 0, 0, 0, 0, 871, 0, 959, 1034,
	1036, 454, 1037, 0, 1046, 1039, 0, 1043, 1032, 1096,
	1097, 1102, 1103, 1109, 1112, 1113, 1105, 1315, 1061, 1062,
	1063, 1087, 1088, 912, 0, 2137, 1316, 1205, 1317, 1318,
	1673, 0, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, -2, -2, -2, -2, -2, -2, -2, -2,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, -2, -2, -2, 1355, 1356, -2, 1580, 1582, 0,
	1645, 0, -2, 0, -2, -2, -2, -2, 1375, 0,
	1377, 1382, 1384, 1386, 0, 0, 0, 0, 1644, 1396,
	1628, 1629, 0, 0, 1559, 1560, 1561, 1381, 0, 1400,
	1643, 1640, 0, 0, 1592, 1086, 1459, 0, 0, 0,
	0, 1466, 0, 1672, 1311, 1298, 1299, 1300, 1301, 1302,
	1303, 1313, 1451, 1590, 0, 1589, 0, 0, 0, 1600,
	0, 1635, 1631, 0, 1695, 1701, 1533, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 1492,
	1493, 1494, 1495, 1496, 0, 1498, 1499, 0, 1501, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 1603, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1507, 0, 1509, 1594, 1614, 0, 0, 1401,
	0, 0, 0, 1557, 0, 1512, 1594, 1622, 0, 0,
	0, 0, 0, 1594, 0, 1627, 0, 1519, 0, 1521,
	1070, 0, 0, 1200, 0, 0, 0, 1649, 1200, 1200,
	0, 1118, 0, 0, 1181, 1182, 1183, 0, 0, 1184,
	0, 1175, 1179, 1176, 1177, 1171, 1134, 0, 0, 1675,
	1171, 1140, 1170, 0, 829, 1160, 1171, 1171, 0, -2,
	1144, 1161, 0, 0, 403, 405, 407, 411, 413, 0,
	0, 1086, -2, 188, 828, 0, 0, 0, 0, 0,
	422, 424, 0, 0, 416, 0, 419, 0, 1201, 1204,
	0, 1217, 0, 0, -2, 0, 0, 0, 0, 0,
	489, 0, 967, 975, 0, 520, 0, 522, 0, 847,
	1668, 1667, 0, 511, 0, 0, 0, 0, 924, 120,
	2010, 0, 153, 0, 0, 797, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 91, 0, 0, 0, 0, 0,
	0, 0, 855, 856, 858, 865, 867, 0, 861, 1670,
	0, 862, 0, 864, 866, 868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 92, 0, 0,
	0, 0, 1656, 179, 1173, 0, 1655, 1665, 0, 202,
	205, 208, 211, 0, 238, 0, 0, 745, 727, 0,
	0, 292, 188, 0, 0, 306, 849, 852, 0, 829,
	885, 1687, 0, 0, 0, 0, 0, 0, 891, 0,
	0, 0, 2010, 984, 990, 0, 1200, 0, 1014, 999,
	0, 0, 0, 1014, 1018, 1019, 1021, 1022, 0, 0,
	1195, 0, 265, 360, 151, 151, 151, 1653, 151, 151,
	177, 354, 357, 363, 415, 1075, 1075, 188, 186, 1873,
	184, 181, 183, 0, 0, 0, 746, 748, 749, 750,
	751, 0, 1716, 0, 1827, 1716, 0, 1002, 1004, 0,
	188, 0, 0, 304, 472, 477, 594, 0, 639, 664,
	612, 614, 615, 616, 0, 720, 718, 623, 670, 626,
	670, 629, 670, 648, 651, 653, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 704, 705, 706,
	708, 1192, 1035, 1045, 1041, 0, 1107, 0, 1106, 1110,
	1111, 0, 1095, 910, 911, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1397, 0, -2, 1376, 1379, 1383,
	1385, 1387, 0, 0, 0, 0, 0, 0, 1583, 0,
	1585, 1398, 1638, 1641, 1555, 0, 0, 1085, 1086, 1086,
	0, 1465, 0, 0, 0, 0, 0, 0, 0, 1591,
	0, 1598, 1599, 0, 1458, 0, 1632, 0, 0, 0,
	1467, 0, 0, 0, 1268, 1242, 0, 1296, 1294, 1295,
	1289, 1296, 1293, 0, 1497, 1500, 0, 0, 0, 0,
	1486, 0, 0, 0, 1490, 1504, 0, 1506, 1508, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 1405, 1406, 1511, 1620,
	1621, 0, 0, 0, 0, 0, 0, 1517, 0, 1626,
	1518, 1520, 1075, 1120, 1115, 1199, 0, 1647, 1174, 1122,
	1124, 1648, 1678, 1115, 1115, 0, 1595, 0, 0, 1165,
	0, 0, 0, 1167, 1138, 0, 0, 1132, 0, 1128,
	1129, 1130, 1131, 1139, 829, 1169, 1141, 1145, 1695, 0,
	1171, 0, 1156, 0, 1158, 1190, 0, 1150, 1153, 0,
	0, 189, 1708, 213, 217, 218, 214, 215, 216, 431,
	0, 0, 1597, 0, 1206, 0, 0, 0, 0, 0,
	435, 0, 485, -2, 518, 519, 521, 0, 517, 117,
	925, 0, 0, 916, 0, 122, 2010, 131, 0, 774,
	0, 1679, 0, 0, 0, 0, 927, 0, 0, 2010,
	151, 2010, 151, 134, 137, 0, 141, 139, 0, 0,
	765, 78, 925, 81, 85, 93, 0, 0, 0, 99,
	0, 0, 0, 918, 0, 859, 860, 863, 869, 60,
	0, 920, 914, 0, 913, 143, 83, 87, 94, 0,
	922, 80, 0, 188, 0, 159, 1661, 0, 0, 0,
	0, 0, 744, 814, 0, 0, 0, 0, 298, 294,
	0, 303, 309, 308, 0, 0, 876, -2, 879, 888,
	0, 890, 902, 0, 0, 0, 986, 990, 0, 989,
	1073, 1086, 313, 991, 1014, 0, 0, 0, 1001, 997,
	994, 1200, 0, 0, 0, 0, 0, 260, 339, 342,
	345, 348, 351, 366, 367, 163, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 1716, 1716, 0,
	1683, 0, 0, 0, 0, 156, 161, 0, 474, 0,
	0, 0, 625, 627, 630, 655, 657, 670, 693, 694,
	760, 0, 760, 0, 0, 0, 0, 1089, 1090, 0,
	912, 0, 1319, 1360, 0, 0, -2, 0, 0, 1364,
	0, 0, 0, -2, 0, 0, 0, 1584, 1586, 0,
	1640, 1460, 0, 0, 0, 1464, 1442, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 0, 1449, 1450, 1558, 1601, 1630,
	1634, 0, 1696, 1700, 1531, 1532, 1536, 1686, 0, 0,
	0, 1287, 1291, 1471, 0, 0, 0, 0, 0, 0,
	0, 1602, 1613, 1615, 1402, 1403, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, -2, -2, -2, 1420,
	1421, 1422, -2, -2, -2, 0, 0, 0, 1616, 1618,
	1619, 1623, 1624, 0, 1514, 1515, 1516, 1625, 0, 1117,
	0, 1198, 1121, 0, 1117, 1117, 1082, 1163, 0, 0,
	1186, 0, 1135, 0, 1136, 0, 1168, 0, 1143, 1146,
	1147, 1157, 0, 1149, 0, 1152, 0, 1460, -2, 433,
	417, 0, 0, 1208, 1218, 0, 1271, 1275, 437, 1172,
	0, 0, 0, 0, 152, 772, 796, 0, 0, 905,
	912, 0, 0, 124, 0, 0, 0, 132, 0, 0,
	129, 0, 136, 140, 0, 0, 0, 0, 0, 96,
	97, 98, 0, 103, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 233, 884, 239, 754, 802,
	0, 804, 0, 728, 0, 803, 290, 0, 297, 0,
	853, 0, 874, 889, 0, 0, 0, 0, 0, 988,
	990, 0, 981, 982, 1101, 992, 1012, -2, 1011, 0,
	1086, 1020, 1017, 1023, 1024, 0, 185, 0, 180, 182,
	0, 166, 0, 0, 747, 752, 0, 0, 0, 0,
	0, 1003, 1005, 0, 172, 0, 595, 617, 665, 695,
	759, 0, 0, 697, 0, 0, 1104, 1108, 1093, 1094,
	1091, 912, 1362, 1366, 0, 0, 0, 1368, -2, 0,
	1390, -2, -2, 1587, 1639, 1439, 1086, 1461, 1463, 1314,
	1633, 0, 1538, 1535, 0, 1522, 1243, 1481, 1482, 0,
	0, 1485, 1487, 1488, 1489, 1612, 0, 0, 0, 0,
	1513, 1071, 1527, 0, 0, 1125, 1527, 1527, 1164, 0,
	1166, 1133, 1126, 0, 1696, 1159, 1151, 0, 0, 1202,
	1207, 0, 1270, 118, 119, 121, 0, 773, 0, 776,
	0, 0, 0, 0, 783, 784, 0, 0, 0, 0,
	0, 818, 827, 0, 1095, 0, 0, 0, 126, 146,
	0, 0, 926, 0, 0, 151, 151, 0, 0, 917,
	0, 0, 0, 0, 106, 0, 0, 919, 921, 915,
	0, 0, 923, 178, 762, 0, 814, 806, 807, 808,
	0, 813, 815, 0, 0, 732, 729, 745, 727, 0,
	295, 850, 883, 0, 901, 0, 0, 0, 978, 990,
	0, 983, 984, 1014, 1100, 0, 0, 0, 1000, 1101,
	0, 187, 188, 0, 0, 0, 0, 0, 0, 0,
	188, 476, 478, 0, 0, 484, 758, 0, 0, 0,
	0, 1092, 1370, -2, -2, 1391, 0, 1697, 1699, 1086,
	0, 1524, 0, 0, -2, 0, 0, 0, 1057, 0,
	1116, 1114, 1058, 1059, 1185, 0, 1154, 0, 1209, 123,
	0, 777, 778, 1682, 780, 0, 782, 785, 0, 787,
	1718, 0, 791, 798, 819, 0, 754, 0, 824, 825,
	906, 907, 800, 0, 125, 127, 145, 909, 133, 128,
	135, 0, 0, 82, 0, 0, 1767, 109, 107, 105,
	84, 0, 727, 761, 0, 805, 0, 816, 817, 730,
	0, 0, 0, 296, 299, 0, 302, 0, 902, 0,
	0, 0, 985, 986, 311, 0, 0, 0, 1014, 1025,
	165, 0, 0, 827, 0, 0, 795, 0, 170, 0,
	480, 0, 482, 0, 696, 698, 0, 0, 1462, 1542,
	0, 1483, 1484, -2, 0, 1428, 1526, 1528, 0, 1127,
	1203, 775, 779, 0, 0, 833, 0, 0, 0, 822,
	823, 762, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 733, 0, 754, 0, 300,
	301, 827, 0, 827, 0, 987, 988, 0, 1007, 1008,
	1010, 1015, 0, 0, 754, 827, 794, 0, 479, 0,
	0, 701, 702, 0, 0, 0, 0, 1537, 1429, 0,
	0, 0, 786, 838, 0, 0, 0, 820, 821, 818,
	0, 829, 130, 0, 908, 0, 766, 0, 0, 769,
	0, 0, 110, 1767, 108, 0, 0, 0, 810, 812,
	734, 762, 732, 754, 0, 754, 0, 979, 0, 1009,
	188, 188, 762, 754, 188, 481, 483, 1534, 1554, 1543,
	-2, 1973, 1770, 0, 1554, 1554, 1529, 1530, 0, 788,
	834, 835, 0, 830, 831, 832, 1717, 789, 790, 799,
	826, 833, 147, 763, 0, 0, 764, 0, 0, 113,
	0, 115, 0, 809, 0, 727, 731, 762, 0, 762,
	0, 1200, 167, 168, 792, 762, 169, 1539, 0, 0,
	1545, 1546, 1547, 1548, 1549, 1540, 1541, 781, 836, 0,
	837, 0, 0, 0, 838, 767, 0, 770, 0, 111,
	0, 811, 726, 899, 827, 899, 827, 1006, 793, 0,
	1551, 1552, 0, 0, 839, 0, 842, 843, 0, 840,
	818, 0, 0, 757, 894, 0, 754, 896, 754, 1550,
	1553, 1544, 841, 844, 845, 801, 0, 0, 753, 755,
	756, 900, 762, 762, 762, 0, 899, 899, 768, 0,
	895, 897, 0, 0, 762, 771,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 453, 3, 459, 454, 3,
	464, 465, 457, 455, 469, 456, 466, 458, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 472, 3,
	445, 447, 446, 450, 468, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 462, 3, 463, 460, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 470, 452, 471, 448,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 449, 57788, 451, 57789, 461,
	57790, 467, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1092
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1097
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1101
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1102
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1103
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1104
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1105
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1106
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1107
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1108
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1112
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1121
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1122
		{
			return helpWith(sqllex, "ALTER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1185
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1241
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 60:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1245
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1287
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1323
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1327
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1333
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1337
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1343
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1352
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1363
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1367
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1373
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1381
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1395
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1405
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1416
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1423
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1435
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1442
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1450
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1455
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1459
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1464
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1470
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1478
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1489
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1499
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1509
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1518
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1529
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1535
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1543
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1561
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1566
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1581
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1587
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1603
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1628
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1633
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1638
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1643
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1686
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				TableIndex: sqlDollar[6].union.tableIndexName(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1733
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1858
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1919
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1928
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1934
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1939
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1944
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1949
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1954
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1958
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1977
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1985
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = nil
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2055
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2069
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2071
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2090
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2095
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2122
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2179
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2203
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2215
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2216
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2218
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2219
		{
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2220
		{
			return helpWith(sqllex, "CREATE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2223
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2224
		{
			return unimplemented(sqllex, "create cast")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2225
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2226
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2227
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2228
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2230
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2231
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2232
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2233
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2234
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2235
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{
			return unimplemented(sqllex, "create operator")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2237
		{
			return unimplemented(sqllex, "create publication")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2238
		{
			return unimplemented(sqllex, "create rule")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2239
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2240
		{
			return unimplemented(sqllex, "create server")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2241
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2242
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2247
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2251
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2255
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplemented(sqllex, "drop server")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2277
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2281
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2282
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2283
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2284
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2286
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2287
		{
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2288
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2289
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2357
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2368
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2396
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2431
		{

			sqlVAL.union.val = nil
		}
	case 311:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2455
		{
			return helpWith(sqllex, "DELETE")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2459
		{
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2470
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2471
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2472
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2473
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2483
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return helpWith(sqllex, "DROP")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2489
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2490
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2492
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2493
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2561
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2584
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2614
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2618
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2678
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
			return helpWith(sqllex, "DELETE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2683
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2684
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			return helpWith(sqllex, "INSERT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2686
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2688
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2689
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2690
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2699
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2700
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2705
		{
			return helpWith(sqllex, "DELETE")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "INSERT")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2740
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2773
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2781
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2814
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2845
		{
			return helpWith(sqllex, "GRANT")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2885
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "RESET")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "RESET")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2954
		{
			return helpWith(sqllex, "USE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			return helpWith(sqllex, "USE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3171
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplemented(sqllex, "set from current")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = tree.Low
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.Normal
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = tree.High
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3340
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "SHOW")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.str = "client_encoding"
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.str = "timezone"
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3399
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3453
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3549
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3617
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = true
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = true
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = false
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3694
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = true
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = false
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3713
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = true
		}
	case 670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = false
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3800
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3826
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3869
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3877
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3914
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3937
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3953
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4093
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4225
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:       name,
				IfNotExists: false,
				Interleave:  sqlDollar[8].union.interleave(),
				Defs:        sqlDollar[6].union.tblDefs(),
				AsSource:    nil,
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Temporary:   sqlDollar[2].union.persistenceType(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4238
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:       name,
				IfNotExists: true,
				Interleave:  sqlDollar[11].union.interleave(),
				Defs:        sqlDollar[9].union.tblDefs(),
				AsSource:    nil,
				PartitionBy: sqlDollar[12].union.partitionBy(),
				Temporary:   sqlDollar[2].union.persistenceType(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4252
		{
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4254
		{
			return unimplemented(sqllex, "create table with "+sqlDollar[2].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4258
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:       name,
				IfNotExists: false,
				Interleave:  nil,
				Defs:        sqlDollar[5].union.tblDefs(),
				AsSource:    sqlDollar[8].union.slct(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4269
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:       name,
				IfNotExists: true,
				Interleave:  nil,
				Defs:        sqlDollar[8].union.tblDefs(),
				AsSource:    sqlDollar[11].union.slct(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4281
		{
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4283
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = true
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = true
		}
	case 737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = false
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = true
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = true
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = true
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = true
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 753:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4345
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4361
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4366
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.str = ""
		}
	case 762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 768:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 771:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4548
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4562
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 792:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Storing:     sqlDollar[6].union.nameList(),
				Interleave:  sqlDollar[7].union.interleave(),
				PartitionBy: sqlDollar[8].union.partitionBy(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Storing:     sqlDollar[7].union.nameList(),
					Interleave:  sqlDollar[8].union.interleave(),
					PartitionBy: sqlDollar[9].union.partitionBy(),
				},
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4655
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4679
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4689
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4769
		{
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4771
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4773
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4933
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4942
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4976
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4983
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), Password: sqlDollar[4].union.expr()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), Password: sqlDollar[7].union.expr(), IfNotExists: true}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = nil
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5049
		{
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5050
		{
		}
	case 883:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5058
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5067
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5071
		{
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5072
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5078
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5080
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5082
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5084
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5104
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5118
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5133
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5147
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5161
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5164
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5169
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = false
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = true
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = false
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.str = ""
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = tree.Descending
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[3].union.expr(), Password: sqlDollar[6].union.expr()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[5].union.expr(), Password: sqlDollar[8].union.expr(), IfExists: true}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5271
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5277
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5285
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5291
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5299
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5305
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5323
		{
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5327
		{
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{
		}
	case 953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5430
		{
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			if sqlDollar[2].str != "" {
				sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
			} else {
				sqlVAL.union.val = &tree.RollbackTransaction{}
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5449
		{
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.str = ""
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.str = ""
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5508
		{
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5510
		{
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 978:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.str = ""
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.str = ""
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.str = ""
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.str = ""
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5622
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5623
		{
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 992:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "INSERT")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5671
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5729
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5746
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5755
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5793
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5825
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), ForLocked: sqlDollar[2].union.forLocked()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), ForLocked: sqlDollar[3].union.forLocked()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), ForLocked: sqlDollar[4].union.forLocked()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), ForLocked: sqlDollar[3].union.forLocked()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), ForLocked: sqlDollar[4].union.forLocked()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), ForLocked: sqlDollar[5].union.forLocked()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = tree.ForLocked{}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = tree.ForLocked{Strength: sqlDollar[1].union.lockingStrength(), Targets: sqlDollar[2].union.tableNames()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5939
		{
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			return unimplementedWithIssue(sqllex, 40476)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
			return unimplementedWithIssue(sqllex, 40476)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5983
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5984
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6089
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6135
		{
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = nil
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6148
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6149
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = true
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = false
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = false
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = true
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6179
		{
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6209
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6230
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6235
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.NewNumVal(constant.MakeInt64(1), "", false)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6339
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6396
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6398
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6435
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6440
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6456
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6468
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6487
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6526
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6536
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6582
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6612
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6645
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = nil
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = true
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = false
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.str = tree.AstFull
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.str = tree.AstRight
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.str = tree.AstInner
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6765
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.str = tree.AstHash
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.str = ""
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6827
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6832
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6914
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6922
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6941
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6951
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6963
		{
			return unimplemented(sqllex, "interval with unit qualifier")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6965
		{
			prec, err := sqlDollar[3].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if prec == 6 {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			} else {
				return unimplementedWithIssue(sqllex, 32564)
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = types.String
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = types.Name
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = types.INet
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = types.Oid
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7105
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = nil
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = types.Int2
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = types.Int2
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = types.Int4
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = types.Int
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = types.Int
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = types.Int
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = types.Float4
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = types.Float4
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = types.Float
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = types.Float
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7188
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = types.Bool
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = types.Bool
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = types.RegType
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7229
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = types.Float
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7248
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7254
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7276
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = types.String
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = true
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = false
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = types.Date
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7333
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7347
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7356
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7364
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = true
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = false
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = false
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = types.Interval
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.Year
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.Month
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = tree.Day
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.Hour
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.Minute
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = sqlDollar[1].union.durationField()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.Month
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = tree.Hour
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.Minute
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.Minute
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = nil
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = tree.Second
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7469
		{
			return unimplementedWithIssueDetail(sqllex, 32564, "interval second")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7760
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7826
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8047
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8056
		{
			return unimplementedWithIssue(sqllex, 32564)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8083
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8122
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8133
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8134
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8160
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8272
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8295
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8305
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8310
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8324
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8325
		{
			return unimplemented(sqllex, "treat")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8356
		{
			return unimplemented(sqllex, "within group")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8357
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.str = ""
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8494
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8562
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8591
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.Any
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = tree.Some
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = tree.All
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = tree.Div
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.LT
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = tree.GT
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = tree.LE
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.GE
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = tree.NE
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = tree.Like
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8953
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9099
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9119
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9128
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{

			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithField(sqlDollar[2].str, sqlDollar[3].union.durationField())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9321
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.str = ""
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
