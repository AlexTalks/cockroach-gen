// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12546

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1433,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 369,
	-2, 0,
	-1, 73,
	236, 221,
	497, 221,
	-2, 0,
	-1, 84,
	224, 1194,
	238, 1194,
	254, 365,
	380, 365,
	390, 973,
	425, 365,
	437, 973,
	481, 973,
	508, 365,
	534, 973,
	-2, 0,
	-1, 90,
	130, 1433,
	231, 1433,
	519, 1433,
	520, 1433,
	-2, 0,
	-1, 106,
	147, 1404,
	166, 1404,
	179, 1404,
	234, 1404,
	267, 1404,
	332, 1404,
	342, 1404,
	514, 1404,
	-2, 1375,
	-1, 145,
	155, 838,
	253, 838,
	383, 807,
	442, 807,
	500, 838,
	502, 807,
	-2, 0,
	-1, 147,
	4, 1435,
	21, 1435,
	22, 1435,
	23, 1435,
	24, 1435,
	25, 1435,
	26, 1435,
	27, 1435,
	28, 1435,
	30, 1435,
	31, 1435,
	37, 1435,
	42, 1435,
	43, 1435,
	45, 1435,
	46, 1435,
	47, 1435,
	48, 1435,
	49, 1435,
	50, 1435,
	51, 1435,
	53, 1435,
	54, 1435,
	55, 1435,
	56, 1435,
	58, 1435,
	59, 1435,
	60, 1435,
	61, 1435,
	62, 1435,
	63, 1435,
	64, 1435,
	68, 1435,
	69, 1435,
	70, 1435,
	71, 1435,
	73, 1435,
	74, 1435,
	75, 1435,
	79, 1435,
	80, 1435,
	81, 1435,
	82, 1435,
	83, 1435,
	84, 1435,
	85, 1435,
	88, 1435,
	89, 1435,
	90, 1435,
	91, 1435,
	92, 1435,
	94, 1435,
	96, 1435,
	97, 1435,
	98, 1435,
	99, 1435,
	100, 1435,
	101, 1435,
	103, 1435,
	104, 1435,
	105, 1435,
	107, 1435,
	108, 1435,
	116, 1435,
	117, 1435,
	118, 1435,
	119, 1435,
	121, 1435,
	122, 1435,
	123, 1435,
	125, 1435,
	126, 1435,
	127, 1435,
	129, 1435,
	130, 1435,
	132, 1435,
	133, 1435,
	134, 1435,
	137, 1435,
	138, 1435,
	139, 1435,
	141, 1435,
	142, 1435,
	144, 1435,
	145, 1435,
	146, 1435,
	148, 1435,
	149, 1435,
	150, 1435,
	151, 1435,
	152, 1435,
	153, 1435,
	154, 1435,
	155, 1435,
	156, 1435,
	157, 1435,
	158, 1435,
	159, 1435,
	160, 1435,
	161, 1435,
	162, 1435,
	163, 1435,
	165, 1435,
	171, 1435,
	172, 1435,
	173, 1435,
	174, 1435,
	178, 1435,
	180, 1435,
	184, 1435,
	185, 1435,
	186, 1435,
	187, 1435,
	188, 1435,
	189, 1435,
	190, 1435,
	191, 1435,
	192, 1435,
	193, 1435,
	194, 1435,
	195, 1435,
	196, 1435,
	198, 1435,
	199, 1435,
	201, 1435,
	202, 1435,
	204, 1435,
	205, 1435,
	206, 1435,
	207, 1435,
	208, 1435,
	209, 1435,
	210, 1435,
	211, 1435,
	212, 1435,
	214, 1435,
	215, 1435,
	217, 1435,
	218, 1435,
	219, 1435,
	220, 1435,
	224, 1435,
	225, 1435,
	226, 1435,
	227, 1435,
	228, 1435,
	231, 1435,
	232, 1435,
	233, 1435,
	235, 1435,
	237, 1435,
	238, 1435,
	240, 1435,
	242, 1435,
	243, 1435,
	244, 1435,
	246, 1435,
	250, 1435,
	251, 1435,
	252, 1435,
	253, 1435,
	254, 1435,
	255, 1435,
	257, 1435,
	258, 1435,
	259, 1435,
	261, 1435,
	262, 1435,
	264, 1435,
	265, 1435,
	268, 1435,
	272, 1435,
	273, 1435,
	274, 1435,
	277, 1435,
	278, 1435,
	279, 1435,
	280, 1435,
	282, 1435,
	283, 1435,
	284, 1435,
	285, 1435,
	286, 1435,
	287, 1435,
	288, 1435,
	289, 1435,
	290, 1435,
	291, 1435,
	292, 1435,
	293, 1435,
	294, 1435,
	295, 1435,
	296, 1435,
	297, 1435,
	298, 1435,
	299, 1435,
	300, 1435,
	301, 1435,
	302, 1435,
	303, 1435,
	305, 1435,
	307, 1435,
	308, 1435,
	309, 1435,
	310, 1435,
	311, 1435,
	312, 1435,
	313, 1435,
	314, 1435,
	315, 1435,
	316, 1435,
	317, 1435,
	318, 1435,
	320, 1435,
	322, 1435,
	324, 1435,
	325, 1435,
	327, 1435,
	328, 1435,
	329, 1435,
	330, 1435,
	331, 1435,
	334, 1435,
	337, 1435,
	338, 1435,
	339, 1435,
	340, 1435,
	343, 1435,
	344, 1435,
	345, 1435,
	347, 1435,
	349, 1435,
	350, 1435,
	351, 1435,
	352, 1435,
	353, 1435,
	354, 1435,
	355, 1435,
	356, 1435,
	357, 1435,
	358, 1435,
	359, 1435,
	360, 1435,
	362, 1435,
	363, 1435,
	364, 1435,
	365, 1435,
	366, 1435,
	367, 1435,
	368, 1435,
	369, 1435,
	370, 1435,
	371, 1435,
	372, 1435,
	373, 1435,
	374, 1435,
	375, 1435,
	376, 1435,
	378, 1435,
	379, 1435,
	381, 1435,
	382, 1435,
	383, 1435,
	384, 1435,
	385, 1435,
	386, 1435,
	387, 1435,
	388, 1435,
	389, 1435,
	390, 1435,
	391, 1435,
	392, 1435,
	394, 1435,
	396, 1435,
	397, 1435,
	398, 1435,
	403, 1435,
	405, 1435,
	406, 1435,
	407, 1435,
	408, 1435,
	409, 1435,
	410, 1435,
	411, 1435,
	412, 1435,
	414, 1435,
	415, 1435,
	416, 1435,
	418, 1435,
	419, 1435,
	420, 1435,
	421, 1435,
	422, 1435,
	423, 1435,
	425, 1435,
	426, 1435,
	427, 1435,
	428, 1435,
	429, 1435,
	430, 1435,
	431, 1435,
	432, 1435,
	433, 1435,
	434, 1435,
	435, 1435,
	437, 1435,
	438, 1435,
	439, 1435,
	440, 1435,
	441, 1435,
	442, 1435,
	444, 1435,
	445, 1435,
	446, 1435,
	447, 1435,
	448, 1435,
	449, 1435,
	451, 1435,
	452, 1435,
	453, 1435,
	454, 1435,
	455, 1435,
	456, 1435,
	457, 1435,
	459, 1435,
	461, 1435,
	462, 1435,
	463, 1435,
	464, 1435,
	465, 1435,
	466, 1435,
	467, 1435,
	468, 1435,
	469, 1435,
	470, 1435,
	471, 1435,
	472, 1435,
	473, 1435,
	474, 1435,
	475, 1435,
	477, 1435,
	478, 1435,
	480, 1435,
	482, 1435,
	483, 1435,
	484, 1435,
	485, 1435,
	486, 1435,
	487, 1435,
	488, 1435,
	489, 1435,
	490, 1435,
	492, 1435,
	493, 1435,
	494, 1435,
	495, 1435,
	496, 1435,
	498, 1435,
	500, 1435,
	501, 1435,
	502, 1435,
	503, 1435,
	504, 1435,
	505, 1435,
	507, 1435,
	508, 1435,
	509, 1435,
	510, 1435,
	512, 1435,
	513, 1435,
	516, 1435,
	517, 1435,
	518, 1435,
	519, 1435,
	520, 1435,
	521, 1435,
	522, 1435,
	524, 1435,
	527, 1435,
	528, 1435,
	529, 1435,
	530, 1435,
	531, 1435,
	532, 1435,
	534, 1435,
	535, 1435,
	536, 1435,
	537, 1435,
	542, 1435,
	543, 1435,
	544, 1435,
	545, 1435,
	546, 1435,
	547, 1435,
	-2, 0,
	-1, 148,
	1, 1291,
	128, 1291,
	242, 1291,
	321, 1291,
	378, 1291,
	387, 1291,
	551, 1291,
	575, 1291,
	-2, 0,
	-1, 150,
	1, 1291,
	575, 1291,
	-2, 0,
	-1, 151,
	1, 1291,
	575, 1291,
	-2, 0,
	-1, 152,
	1, 1291,
	497, 1291,
	575, 1291,
	-2, 0,
	-1, 181,
	147, 1403,
	166, 1403,
	179, 1403,
	234, 1403,
	267, 1403,
	332, 1403,
	342, 1403,
	514, 1403,
	-2, 1378,
	-1, 224,
	4, 1442,
	5, 1442,
	6, 1442,
	7, 1442,
	8, 1442,
	9, 1442,
	10, 1442,
	21, 1442,
	22, 1442,
	23, 1442,
	24, 1442,
	25, 1442,
	26, 1442,
	27, 1442,
	28, 1442,
	30, 1442,
	31, 1442,
	37, 1442,
	38, 1442,
	42, 1442,
	43, 1442,
	44, 1442,
	45, 1442,
	46, 1442,
	47, 1442,
	48, 1442,
	49, 1442,
	50, 1442,
	51, 1442,
	53, 1442,
	54, 1442,
	55, 1442,
	56, 1442,
	58, 1442,
	59, 1442,
	60, 1442,
	61, 1442,
	62, 1442,
	63, 1442,
	64, 1442,
	65, 1442,
	66, 1442,
	67, 1442,
	68, 1442,
	69, 1442,
	70, 1442,
	71, 1442,
	73, 1442,
	74, 1442,
	75, 1442,
	77, 1442,
	79, 1442,
	80, 1442,
	81, 1442,
	82, 1442,
	83, 1442,
	84, 1442,
	85, 1442,
	88, 1442,
	89, 1442,
	90, 1442,
	91, 1442,
	92, 1442,
	94, 1442,
	96, 1442,
	97, 1442,
	98, 1442,
	99, 1442,
	100, 1442,
	101, 1442,
	103, 1442,
	104, 1442,
	105, 1442,
	106, 1442,
	107, 1442,
	108, 1442,
	109, 1442,
	110, 1442,
	111, 1442,
	112, 1442,
	113, 1442,
	114, 1442,
	115, 1442,
	116, 1442,
	117, 1442,
	118, 1442,
	119, 1442,
	120, 1442,
	121, 1442,
	122, 1442,
	123, 1442,
	124, 1442,
	125, 1442,
	126, 1442,
	127, 1442,
	129, 1442,
	130, 1442,
	132, 1442,
	133, 1442,
	134, 1442,
	137, 1442,
	138, 1442,
	139, 1442,
	141, 1442,
	142, 1442,
	144, 1442,
	145, 1442,
	146, 1442,
	148, 1442,
	149, 1442,
	150, 1442,
	151, 1442,
	152, 1442,
	153, 1442,
	154, 1442,
	155, 1442,
	156, 1442,
	157, 1442,
	158, 1442,
	159, 1442,
	160, 1442,
	161, 1442,
	162, 1442,
	163, 1442,
	164, 1442,
	165, 1442,
	171, 1442,
	172, 1442,
	173, 1442,
	174, 1442,
	178, 1442,
	180, 1442,
	183, 1442,
	184, 1442,
	185, 1442,
	186, 1442,
	187, 1442,
	188, 1442,
	189, 1442,
	190, 1442,
	191, 1442,
	192, 1442,
	193, 1442,
	194, 1442,
	195, 1442,
	196, 1442,
	198, 1442,
	199, 1442,
	201, 1442,
	202, 1442,
	204, 1442,
	205, 1442,
	206, 1442,
	207, 1442,
	208, 1442,
	209, 1442,
	210, 1442,
	211, 1442,
	212, 1442,
	213, 1442,
	214, 1442,
	215, 1442,
	217, 1442,
	218, 1442,
	219, 1442,
	220, 1442,
	224, 1442,
	225, 1442,
	226, 1442,
	227, 1442,
	228, 1442,
	230, 1442,
	231, 1442,
	232, 1442,
	233, 1442,
	235, 1442,
	237, 1442,
	238, 1442,
	239, 1442,
	240, 1442,
	241, 1442,
	242, 1442,
	243, 1442,
	244, 1442,
	245, 1442,
	246, 1442,
	250, 1442,
	251, 1442,
	252, 1442,
	253, 1442,
	254, 1442,
	255, 1442,
	257, 1442,
	258, 1442,
	259, 1442,
	261, 1442,
	262, 1442,
	263, 1442,
	264, 1442,
	265, 1442,
	266, 1442,
	268, 1442,
	272, 1442,
	273, 1442,
	274, 1442,
	275, 1442,
	276, 1442,
	277, 1442,
	278, 1442,
	279, 1442,
	280, 1442,
	282, 1442,
	283, 1442,
	284, 1442,
	285, 1442,
	286, 1442,
	287, 1442,
	288, 1442,
	289, 1442,
	290, 1442,
	291, 1442,
	292, 1442,
	293, 1442,
	294, 1442,
	295, 1442,
	296, 1442,
	297, 1442,
	298, 1442,
	299, 1442,
	300, 1442,
	301, 1442,
	302, 1442,
	303, 1442,
	305, 1442,
	306, 1442,
	307, 1442,
	308, 1442,
	309, 1442,
	310, 1442,
	311, 1442,
	312, 1442,
	313, 1442,
	314, 1442,
	315, 1442,
	316, 1442,
	317, 1442,
	318, 1442,
	319, 1442,
	320, 1442,
	321, 1442,
	322, 1442,
	323, 1442,
	324, 1442,
	325, 1442,
	326, 1442,
	327, 1442,
	328, 1442,
	329, 1442,
	330, 1442,
	331, 1442,
	334, 1442,
	338, 1442,
	339, 1442,
	340, 1442,
	343, 1442,
	344, 1442,
	345, 1442,
	346, 1442,
	347, 1442,
	348, 1442,
	349, 1442,
	350, 1442,
	351, 1442,
	352, 1442,
	353, 1442,
	354, 1442,
	355, 1442,
	356, 1442,
	357, 1442,
	358, 1442,
	359, 1442,
	360, 1442,
	362, 1442,
	363, 1442,
	364, 1442,
	365, 1442,
	366, 1442,
	367, 1442,
	368, 1442,
	369, 1442,
	370, 1442,
	371, 1442,
	372, 1442,
	373, 1442,
	374, 1442,
	375, 1442,
	376, 1442,
	378, 1442,
	379, 1442,
	381, 1442,
	382, 1442,
	383, 1442,
	384, 1442,
	385, 1442,
	386, 1442,
	387, 1442,
	388, 1442,
	389, 1442,
	390, 1442,
	391, 1442,
	392, 1442,
	394, 1442,
	396, 1442,
	397, 1442,
	398, 1442,
	403, 1442,
	405, 1442,
	406, 1442,
	407, 1442,
	408, 1442,
	409, 1442,
	410, 1442,
	411, 1442,
	412, 1442,
	414, 1442,
	415, 1442,
	416, 1442,
	417, 1442,
	418, 1442,
	419, 1442,
	420, 1442,
	421, 1442,
	422, 1442,
	423, 1442,
	425, 1442,
	426, 1442,
	427, 1442,
	428, 1442,
	429, 1442,
	430, 1442,
	431, 1442,
	432, 1442,
	433, 1442,
	434, 1442,
	435, 1442,
	437, 1442,
	438, 1442,
	439, 1442,
	440, 1442,
	441, 1442,
	442, 1442,
	443, 1442,
	444, 1442,
	445, 1442,
	446, 1442,
	447, 1442,
	448, 1442,
	449, 1442,
	450, 1442,
	451, 1442,
	452, 1442,
	453, 1442,
	454, 1442,
	455, 1442,
	456, 1442,
	457, 1442,
	459, 1442,
	461, 1442,
	462, 1442,
	463, 1442,
	464, 1442,
	465, 1442,
	466, 1442,
	467, 1442,
	468, 1442,
	469, 1442,
	470, 1442,
	471, 1442,
	472, 1442,
	473, 1442,
	474, 1442,
	475, 1442,
	477, 1442,
	478, 1442,
	479, 1442,
	480, 1442,
	482, 1442,
	483, 1442,
	484, 1442,
	485, 1442,
	486, 1442,
	487, 1442,
	488, 1442,
	489, 1442,
	490, 1442,
	492, 1442,
	493, 1442,
	494, 1442,
	495, 1442,
	496, 1442,
	498, 1442,
	500, 1442,
	501, 1442,
	502, 1442,
	503, 1442,
	504, 1442,
	505, 1442,
	506, 1442,
	507, 1442,
	508, 1442,
	509, 1442,
	510, 1442,
	512, 1442,
	513, 1442,
	515, 1442,
	516, 1442,
	517, 1442,
	518, 1442,
	519, 1442,
	520, 1442,
	521, 1442,
	522, 1442,
	523, 1442,
	524, 1442,
	527, 1442,
	528, 1442,
	529, 1442,
	530, 1442,
	531, 1442,
	532, 1442,
	534, 1442,
	535, 1442,
	536, 1442,
	537, 1442,
	542, 1442,
	543, 1442,
	544, 1442,
	545, 1442,
	546, 1442,
	547, 1442,
	548, 1442,
	556, 1442,
	563, 1442,
	564, 1442,
	565, 1442,
	572, 1442,
	576, 1442,
	-2, 0,
	-1, 711,
	4, 1192,
	21, 1192,
	22, 1192,
	23, 1192,
	24, 1192,
	25, 1192,
	26, 1192,
	27, 1192,
	28, 1192,
	30, 1192,
	31, 1192,
	37, 1192,
	42, 1192,
	43, 1192,
	45, 1192,
	46, 1192,
	47, 1192,
	48, 1192,
	49, 1192,
	50, 1192,
	51, 1192,
	53, 1192,
	54, 1192,
	55, 1192,
	56, 1192,
	58, 1192,
	59, 1192,
	60, 1192,
	61, 1192,
	62, 1192,
	63, 1192,
	64, 1192,
	68, 1192,
	69, 1192,
	70, 1192,
	71, 1192,
	73, 1192,
	74, 1192,
	75, 1192,
	79, 1192,
	80, 1192,
	81, 1192,
	82, 1192,
	83, 1192,
	84, 1192,
	85, 1192,
	88, 1192,
	89, 1192,
	90, 1192,
	91, 1192,
	92, 1192,
	94, 1192,
	96, 1192,
	97, 1192,
	98, 1192,
	99, 1192,
	100, 1192,
	101, 1192,
	103, 1192,
	104, 1192,
	105, 1192,
	107, 1192,
	108, 1192,
	116, 1192,
	117, 1192,
	118, 1192,
	119, 1192,
	121, 1192,
	122, 1192,
	123, 1192,
	125, 1192,
	126, 1192,
	127, 1192,
	129, 1192,
	130, 1192,
	132, 1192,
	133, 1192,
	134, 1192,
	137, 1192,
	138, 1192,
	139, 1192,
	141, 1192,
	142, 1192,
	144, 1192,
	145, 1192,
	146, 1192,
	148, 1192,
	149, 1192,
	150, 1192,
	151, 1192,
	152, 1192,
	153, 1192,
	154, 1192,
	155, 1192,
	156, 1192,
	157, 1192,
	158, 1192,
	159, 1192,
	160, 1192,
	161, 1192,
	162, 1192,
	163, 1192,
	165, 1192,
	171, 1192,
	172, 1192,
	173, 1192,
	174, 1192,
	178, 1192,
	180, 1192,
	184, 1192,
	185, 1192,
	186, 1192,
	187, 1192,
	188, 1192,
	189, 1192,
	190, 1192,
	191, 1192,
	192, 1192,
	193, 1192,
	194, 1192,
	195, 1192,
	196, 1192,
	198, 1192,
	199, 1192,
	201, 1192,
	202, 1192,
	204, 1192,
	205, 1192,
	206, 1192,
	207, 1192,
	208, 1192,
	209, 1192,
	210, 1192,
	211, 1192,
	212, 1192,
	214, 1192,
	215, 1192,
	217, 1192,
	218, 1192,
	219, 1192,
	220, 1192,
	224, 1192,
	225, 1192,
	226, 1192,
	227, 1192,
	228, 1192,
	231, 1192,
	232, 1192,
	233, 1192,
	235, 1192,
	237, 1192,
	238, 1192,
	240, 1192,
	242, 1192,
	243, 1192,
	244, 1192,
	246, 1192,
	250, 1192,
	251, 1192,
	252, 1192,
	253, 1192,
	254, 1192,
	255, 1192,
	257, 1192,
	258, 1192,
	259, 1192,
	261, 1192,
	262, 1192,
	264, 1192,
	265, 1192,
	268, 1192,
	272, 1192,
	273, 1192,
	274, 1192,
	277, 1192,
	278, 1192,
	279, 1192,
	280, 1192,
	282, 1192,
	283, 1192,
	284, 1192,
	285, 1192,
	286, 1192,
	287, 1192,
	288, 1192,
	289, 1192,
	290, 1192,
	291, 1192,
	292, 1192,
	293, 1192,
	294, 1192,
	295, 1192,
	296, 1192,
	297, 1192,
	298, 1192,
	299, 1192,
	300, 1192,
	301, 1192,
	302, 1192,
	303, 1192,
	305, 1192,
	307, 1192,
	308, 1192,
	309, 1192,
	310, 1192,
	311, 1192,
	312, 1192,
	313, 1192,
	314, 1192,
	315, 1192,
	316, 1192,
	317, 1192,
	318, 1192,
	320, 1192,
	322, 1192,
	324, 1192,
	325, 1192,
	327, 1192,
	328, 1192,
	329, 1192,
	330, 1192,
	331, 1192,
	334, 1192,
	338, 1192,
	339, 1192,
	340, 1192,
	343, 1192,
	344, 1192,
	345, 1192,
	347, 1192,
	349, 1192,
	350, 1192,
	351, 1192,
	352, 1192,
	353, 1192,
	354, 1192,
	355, 1192,
	356, 1192,
	357, 1192,
	358, 1192,
	359, 1192,
	360, 1192,
	362, 1192,
	363, 1192,
	364, 1192,
	365, 1192,
	366, 1192,
	367, 1192,
	368, 1192,
	369, 1192,
	370, 1192,
	371, 1192,
	372, 1192,
	373, 1192,
	374, 1192,
	375, 1192,
	376, 1192,
	378, 1192,
	379, 1192,
	381, 1192,
	382, 1192,
	383, 1192,
	384, 1192,
	385, 1192,
	386, 1192,
	387, 1192,
	388, 1192,
	389, 1192,
	390, 1192,
	391, 1192,
	392, 1192,
	394, 1192,
	396, 1192,
	397, 1192,
	398, 1192,
	403, 1192,
	405, 1192,
	406, 1192,
	407, 1192,
	408, 1192,
	409, 1192,
	410, 1192,
	411, 1192,
	412, 1192,
	414, 1192,
	415, 1192,
	416, 1192,
	418, 1192,
	419, 1192,
	420, 1192,
	421, 1192,
	422, 1192,
	423, 1192,
	425, 1192,
	426, 1192,
	427, 1192,
	428, 1192,
	429, 1192,
	430, 1192,
	431, 1192,
	432, 1192,
	433, 1192,
	434, 1192,
	435, 1192,
	437, 1192,
	438, 1192,
	439, 1192,
	440, 1192,
	441, 1192,
	442, 1192,
	444, 1192,
	445, 1192,
	446, 1192,
	447, 1192,
	448, 1192,
	449, 1192,
	451, 1192,
	452, 1192,
	453, 1192,
	454, 1192,
	455, 1192,
	456, 1192,
	457, 1192,
	459, 1192,
	461, 1192,
	462, 1192,
	463, 1192,
	464, 1192,
	465, 1192,
	466, 1192,
	467, 1192,
	468, 1192,
	469, 1192,
	470, 1192,
	471, 1192,
	472, 1192,
	473, 1192,
	474, 1192,
	475, 1192,
	477, 1192,
	478, 1192,
	480, 1192,
	482, 1192,
	483, 1192,
	484, 1192,
	485, 1192,
	486, 1192,
	487, 1192,
	488, 1192,
	489, 1192,
	490, 1192,
	492, 1192,
	493, 1192,
	494, 1192,
	495, 1192,
	496, 1192,
	498, 1192,
	500, 1192,
	501, 1192,
	502, 1192,
	503, 1192,
	504, 1192,
	505, 1192,
	507, 1192,
	508, 1192,
	509, 1192,
	510, 1192,
	512, 1192,
	513, 1192,
	516, 1192,
	517, 1192,
	518, 1192,
	519, 1192,
	520, 1192,
	521, 1192,
	522, 1192,
	524, 1192,
	527, 1192,
	528, 1192,
	529, 1192,
	530, 1192,
	531, 1192,
	532, 1192,
	534, 1192,
	535, 1192,
	536, 1192,
	537, 1192,
	542, 1192,
	543, 1192,
	544, 1192,
	545, 1192,
	546, 1192,
	547, 1192,
	-2, 0,
	-1, 730,
	182, 2199,
	497, 2199,
	555, 2199,
	574, 2199,
	-2, 0,
	-1, 731,
	182, 2300,
	497, 2300,
	555, 2300,
	574, 2300,
	-2, 0,
	-1, 732,
	182, 2186,
	497, 2186,
	555, 2186,
	574, 2186,
	-2, 0,
	-1, 734,
	182, 2429,
	497, 2429,
	555, 2429,
	574, 2429,
	-2, 0,
	-1, 736,
	182, 2467,
	497, 2467,
	555, 2467,
	574, 2467,
	-2, 0,
	-1, 743,
	182, 2327,
	497, 2327,
	555, 2327,
	574, 2327,
	-2, 643,
	-1, 772,
	574, 2135,
	577, 2135,
	-2, 904,
	-1, 773,
	574, 2137,
	577, 2137,
	-2, 905,
	-1, 774,
	574, 2136,
	577, 2136,
	-2, 906,
	-1, 775,
	577, 2062,
	-2, 907,
	-1, 798,
	179, 235,
	-2, 0,
	-1, 821,
	44, 2109,
	-2, 0,
	-1, 822,
	534, 1170,
	-2, 974,
	-1, 838,
	4, 1571,
	21, 1571,
	22, 1571,
	23, 1571,
	24, 1571,
	25, 1571,
	26, 1571,
	27, 1571,
	28, 1571,
	30, 1571,
	31, 1571,
	37, 1571,
	42, 1571,
	43, 1571,
	45, 1571,
	46, 1571,
	47, 1571,
	48, 1571,
	49, 1571,
	50, 1571,
	51, 1571,
	53, 1571,
	54, 1571,
	55, 1571,
	56, 1571,
	58, 1571,
	59, 1571,
	60, 1571,
	61, 1571,
	62, 1571,
	63, 1571,
	64, 1571,
	68, 1571,
	69, 1571,
	70, 1571,
	71, 1571,
	73, 1571,
	74, 1571,
	75, 1571,
	79, 1571,
	80, 1571,
	81, 1571,
	82, 1571,
	83, 1571,
	84, 1571,
	85, 1571,
	88, 1571,
	89, 1571,
	90, 1571,
	91, 1571,
	92, 1571,
	94, 1571,
	96, 1571,
	97, 1571,
	98, 1571,
	99, 1571,
	100, 1571,
	101, 1571,
	103, 1571,
	104, 1571,
	105, 1571,
	107, 1571,
	108, 1571,
	116, 1571,
	117, 1571,
	118, 1571,
	119, 1571,
	121, 1571,
	122, 1571,
	123, 1571,
	125, 1571,
	126, 1571,
	127, 1571,
	129, 1571,
	130, 1571,
	132, 1571,
	133, 1571,
	134, 1571,
	137, 1571,
	138, 1571,
	139, 1571,
	141, 1571,
	142, 1571,
	144, 1571,
	145, 1571,
	146, 1571,
	148, 1571,
	149, 1571,
	150, 1571,
	151, 1571,
	152, 1571,
	153, 1571,
	154, 1571,
	155, 1571,
	156, 1571,
	157, 1571,
	158, 1571,
	159, 1571,
	160, 1571,
	161, 1571,
	162, 1571,
	163, 1571,
	165, 1571,
	171, 1571,
	172, 1571,
	173, 1571,
	174, 1571,
	178, 1571,
	180, 1571,
	184, 1571,
	185, 1571,
	186, 1571,
	187, 1571,
	188, 1571,
	189, 1571,
	190, 1571,
	191, 1571,
	192, 1571,
	193, 1571,
	194, 1571,
	195, 1571,
	196, 1571,
	198, 1571,
	199, 1571,
	201, 1571,
	202, 1571,
	204, 1571,
	205, 1571,
	206, 1571,
	207, 1571,
	208, 1571,
	209, 1571,
	210, 1571,
	211, 1571,
	212, 1571,
	214, 1571,
	215, 1571,
	217, 1571,
	218, 1571,
	219, 1571,
	220, 1571,
	224, 1571,
	225, 1571,
	226, 1571,
	227, 1571,
	228, 1571,
	231, 1571,
	232, 1571,
	233, 1571,
	235, 1571,
	237, 1571,
	238, 1571,
	240, 1571,
	242, 1571,
	243, 1571,
	244, 1571,
	246, 1571,
	250, 1571,
	251, 1571,
	252, 1571,
	253, 1571,
	254, 1571,
	255, 1571,
	257, 1571,
	258, 1571,
	259, 1571,
	261, 1571,
	262, 1571,
	264, 1571,
	265, 1571,
	268, 1571,
	272, 1571,
	273, 1571,
	274, 1571,
	277, 1571,
	278, 1571,
	279, 1571,
	280, 1571,
	282, 1571,
	283, 1571,
	284, 1571,
	285, 1571,
	286, 1571,
	287, 1571,
	288, 1571,
	289, 1571,
	290, 1571,
	291, 1571,
	292, 1571,
	293, 1571,
	294, 1571,
	295, 1571,
	296, 1571,
	297, 1571,
	298, 1571,
	299, 1571,
	300, 1571,
	301, 1571,
	302, 1571,
	303, 1571,
	305, 1571,
	307, 1571,
	308, 1571,
	309, 1571,
	310, 1571,
	311, 1571,
	312, 1571,
	313, 1571,
	314, 1571,
	315, 1571,
	316, 1571,
	317, 1571,
	318, 1571,
	320, 1571,
	322, 1571,
	324, 1571,
	325, 1571,
	327, 1571,
	328, 1571,
	329, 1571,
	330, 1571,
	331, 1571,
	334, 1571,
	338, 1571,
	339, 1571,
	340, 1571,
	343, 1571,
	344, 1571,
	345, 1571,
	347, 1571,
	349, 1571,
	350, 1571,
	351, 1571,
	352, 1571,
	353, 1571,
	354, 1571,
	355, 1571,
	356, 1571,
	357, 1571,
	358, 1571,
	359, 1571,
	360, 1571,
	362, 1571,
	363, 1571,
	364, 1571,
	365, 1571,
	366, 1571,
	367, 1571,
	368, 1571,
	369, 1571,
	370, 1571,
	371, 1571,
	372, 1571,
	373, 1571,
	374, 1571,
	375, 1571,
	376, 1571,
	378, 1571,
	379, 1571,
	381, 1571,
	382, 1571,
	383, 1571,
	384, 1571,
	385, 1571,
	386, 1571,
	387, 1571,
	388, 1571,
	389, 1571,
	390, 1571,
	391, 1571,
	392, 1571,
	394, 1571,
	396, 1571,
	397, 1571,
	398, 1571,
	403, 1571,
	405, 1571,
	406, 1571,
	407, 1571,
	408, 1571,
	409, 1571,
	410, 1571,
	411, 1571,
	412, 1571,
	414, 1571,
	415, 1571,
	416, 1571,
	418, 1571,
	419, 1571,
	420, 1571,
	421, 1571,
	422, 1571,
	423, 1571,
	425, 1571,
	426, 1571,
	427, 1571,
	428, 1571,
	429, 1571,
	430, 1571,
	431, 1571,
	432, 1571,
	433, 1571,
	434, 1571,
	435, 1571,
	437, 1571,
	438, 1571,
	439, 1571,
	440, 1571,
	441, 1571,
	442, 1571,
	444, 1571,
	445, 1571,
	446, 1571,
	447, 1571,
	448, 1571,
	449, 1571,
	451, 1571,
	452, 1571,
	453, 1571,
	454, 1571,
	455, 1571,
	456, 1571,
	457, 1571,
	459, 1571,
	461, 1571,
	462, 1571,
	463, 1571,
	464, 1571,
	465, 1571,
	466, 1571,
	467, 1571,
	468, 1571,
	469, 1571,
	470, 1571,
	471, 1571,
	472, 1571,
	473, 1571,
	474, 1571,
	475, 1571,
	477, 1571,
	478, 1571,
	480, 1571,
	482, 1571,
	483, 1571,
	484, 1571,
	485, 1571,
	486, 1571,
	487, 1571,
	488, 1571,
	489, 1571,
	490, 1571,
	492, 1571,
	493, 1571,
	494, 1571,
	495, 1571,
	496, 1571,
	498, 1571,
	500, 1571,
	501, 1571,
	502, 1571,
	503, 1571,
	504, 1571,
	505, 1571,
	507, 1571,
	508, 1571,
	509, 1571,
	510, 1571,
	512, 1571,
	513, 1571,
	516, 1571,
	517, 1571,
	518, 1571,
	519, 1571,
	520, 1571,
	521, 1571,
	522, 1571,
	524, 1571,
	527, 1571,
	528, 1571,
	529, 1571,
	530, 1571,
	531, 1571,
	532, 1571,
	534, 1571,
	535, 1571,
	536, 1571,
	537, 1571,
	542, 1571,
	543, 1571,
	544, 1571,
	545, 1571,
	546, 1571,
	547, 1571,
	-2, 0,
	-1, 846,
	254, 369,
	-2, 0,
	-1, 916,
	383, 808,
	442, 808,
	502, 808,
	-2, 0,
	-1, 917,
	383, 807,
	442, 807,
	502, 807,
	-2, 747,
	-1, 921,
	1, 852,
	571, 852,
	573, 852,
	575, 852,
	-2, 0,
	-1, 922,
	1, 782,
	571, 782,
	573, 782,
	575, 782,
	-2, 0,
	-1, 923,
	1, 786,
	571, 786,
	573, 786,
	575, 786,
	-2, 0,
	-1, 924,
	1, 903,
	179, 903,
	571, 903,
	573, 903,
	575, 903,
	-2, 0,
	-1, 932,
	1, 811,
	571, 811,
	573, 811,
	575, 811,
	-2, 0,
	-1, 938,
	1, 852,
	571, 852,
	573, 852,
	575, 852,
	-2, 0,
	-1, 939,
	1, 854,
	571, 854,
	573, 854,
	575, 854,
	-2, 0,
	-1, 940,
	1, 857,
	571, 857,
	573, 857,
	575, 857,
	-2, 0,
	-1, 946,
	1, 874,
	571, 874,
	573, 874,
	575, 874,
	-2, 0,
	-1, 947,
	1, 876,
	571, 876,
	573, 876,
	575, 876,
	-2, 0,
	-1, 998,
	166, 1446,
	179, 1446,
	267, 1446,
	332, 1446,
	-2, 1382,
	-1, 1013,
	166, 1445,
	179, 1445,
	267, 1445,
	332, 1445,
	-2, 1379,
	-1, 1039,
	574, 2134,
	-2, 651,
	-1, 1067,
	5, 2126,
	572, 2124,
	-2, 2115,
	-1, 1075,
	5, 2147,
	572, 2144,
	-2, 2135,
	-1, 1076,
	5, 2148,
	572, 2145,
	-2, 2136,
	-1, 1084,
	574, 2132,
	-2, 2114,
	-1, 1085,
	572, 2549,
	-2, 2133,
	-1, 1108,
	572, 2548,
	-2, 2149,
	-1, 1109,
	5, 1646,
	-2, 2519,
	-1, 1110,
	5, 1647,
	-2, 2520,
	-1, 1111,
	5, 1648,
	-2, 2534,
	-1, 1112,
	5, 1649,
	-2, 2498,
	-1, 1113,
	5, 1650,
	-2, 2532,
	-1, 1114,
	5, 1658,
	-2, 2511,
	-1, 1115,
	5, 1645,
	-2, 2507,
	-1, 1116,
	5, 1645,
	-2, 2506,
	-1, 1117,
	5, 1645,
	-2, 2525,
	-1, 1118,
	5, 1656,
	-2, 2500,
	-1, 1119,
	5, 1661,
	-2, 2499,
	-1, 1120,
	5, 1663,
	-2, 2544,
	-1, 1123,
	5, 1685,
	-2, 2537,
	-1, 1124,
	5, 1677,
	-2, 2538,
	-1, 1125,
	5, 1685,
	-2, 2539,
	-1, 1126,
	5, 1681,
	-2, 2540,
	-1, 1127,
	5, 1631,
	-2, 2512,
	-1, 1128,
	5, 1632,
	-2, 2513,
	-1, 1129,
	5, 1633,
	-2, 2501,
	-1, 1157,
	5, 1668,
	-2, 2545,
	-1, 1158,
	5, 1669,
	-2, 2535,
	-1, 1159,
	5, 1670,
	535, 1670,
	-2, 2502,
	-1, 1160,
	5, 1671,
	535, 1671,
	-2, 2503,
	-1, 1197,
	572, 2144,
	-2, 2135,
	-1, 1198,
	572, 2145,
	-2, 2136,
	-1, 1297,
	182, 2467,
	497, 2467,
	555, 2467,
	574, 2467,
	-2, 0,
	-1, 1300,
	1, 629,
	575, 629,
	-2, 1299,
	-1, 1427,
	405, 2110,
	444, 2110,
	565, 2110,
	-2, 2100,
	-1, 1438,
	576, 2110,
	-2, 2111,
	-1, 1443,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1431,
	-1, 1491,
	390, 973,
	534, 973,
	-2, 364,
	-1, 1507,
	44, 2108,
	-2, 939,
	-1, 1514,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1431,
	-1, 1522,
	4, 1192,
	21, 1192,
	22, 1192,
	23, 1192,
	24, 1192,
	25, 1192,
	26, 1192,
	27, 1192,
	28, 1192,
	30, 1192,
	31, 1192,
	37, 1192,
	42, 1192,
	43, 1192,
	45, 1192,
	46, 1192,
	47, 1192,
	48, 1192,
	49, 1192,
	50, 1192,
	51, 1192,
	53, 1192,
	54, 1192,
	55, 1192,
	56, 1192,
	58, 1192,
	59, 1192,
	60, 1192,
	61, 1192,
	62, 1192,
	63, 1192,
	64, 1192,
	68, 1192,
	69, 1192,
	70, 1192,
	71, 1192,
	73, 1192,
	74, 1192,
	75, 1192,
	79, 1192,
	80, 1192,
	81, 1192,
	82, 1192,
	83, 1192,
	84, 1192,
	85, 1192,
	88, 1192,
	89, 1192,
	90, 1192,
	91, 1192,
	92, 1192,
	94, 1192,
	96, 1192,
	97, 1192,
	98, 1192,
	99, 1192,
	100, 1192,
	101, 1192,
	103, 1192,
	104, 1192,
	105, 1192,
	107, 1192,
	108, 1192,
	116, 1192,
	117, 1192,
	118, 1192,
	119, 1192,
	121, 1192,
	122, 1192,
	123, 1192,
	125, 1192,
	126, 1192,
	127, 1192,
	129, 1192,
	130, 1192,
	132, 1192,
	133, 1192,
	134, 1192,
	137, 1192,
	138, 1192,
	139, 1192,
	141, 1192,
	142, 1192,
	144, 1192,
	145, 1192,
	146, 1192,
	148, 1192,
	149, 1192,
	150, 1192,
	151, 1192,
	152, 1192,
	153, 1192,
	154, 1192,
	155, 1192,
	156, 1192,
	157, 1192,
	158, 1192,
	159, 1192,
	160, 1192,
	161, 1192,
	162, 1192,
	163, 1192,
	171, 1192,
	172, 1192,
	173, 1192,
	174, 1192,
	178, 1192,
	180, 1192,
	184, 1192,
	185, 1192,
	186, 1192,
	187, 1192,
	188, 1192,
	189, 1192,
	190, 1192,
	191, 1192,
	192, 1192,
	193, 1192,
	194, 1192,
	195, 1192,
	196, 1192,
	198, 1192,
	199, 1192,
	201, 1192,
	202, 1192,
	204, 1192,
	205, 1192,
	206, 1192,
	207, 1192,
	208, 1192,
	209, 1192,
	210, 1192,
	211, 1192,
	212, 1192,
	214, 1192,
	215, 1192,
	217, 1192,
	218, 1192,
	219, 1192,
	220, 1192,
	225, 1192,
	226, 1192,
	227, 1192,
	228, 1192,
	231, 1192,
	232, 1192,
	233, 1192,
	235, 1192,
	237, 1192,
	238, 1192,
	240, 1192,
	242, 1192,
	243, 1192,
	244, 1192,
	246, 1192,
	250, 1192,
	251, 1192,
	252, 1192,
	253, 1192,
	254, 1192,
	255, 1192,
	257, 1192,
	258, 1192,
	259, 1192,
	261, 1192,
	262, 1192,
	264, 1192,
	265, 1192,
	268, 1192,
	272, 1192,
	273, 1192,
	274, 1192,
	277, 1192,
	278, 1192,
	279, 1192,
	280, 1192,
	282, 1192,
	283, 1192,
	284, 1192,
	285, 1192,
	286, 1192,
	287, 1192,
	288, 1192,
	289, 1192,
	290, 1192,
	291, 1192,
	292, 1192,
	293, 1192,
	294, 1192,
	295, 1192,
	296, 1192,
	297, 1192,
	298, 1192,
	299, 1192,
	300, 1192,
	301, 1192,
	302, 1192,
	303, 1192,
	305, 1192,
	307, 1192,
	308, 1192,
	309, 1192,
	310, 1192,
	311, 1192,
	312, 1192,
	313, 1192,
	314, 1192,
	315, 1192,
	316, 1192,
	317, 1192,
	318, 1192,
	320, 1192,
	324, 1192,
	325, 1192,
	327, 1192,
	328, 1192,
	329, 1192,
	330, 1192,
	331, 1192,
	334, 1192,
	336, 1192,
	338, 1192,
	339, 1192,
	340, 1192,
	343, 1192,
	344, 1192,
	345, 1192,
	347, 1192,
	349, 1192,
	350, 1192,
	351, 1192,
	352, 1192,
	353, 1192,
	354, 1192,
	355, 1192,
	356, 1192,
	357, 1192,
	358, 1192,
	359, 1192,
	360, 1192,
	362, 1192,
	363, 1192,
	364, 1192,
	365, 1192,
	366, 1192,
	367, 1192,
	368, 1192,
	369, 1192,
	370, 1192,
	371, 1192,
	372, 1192,
	373, 1192,
	374, 1192,
	375, 1192,
	376, 1192,
	378, 1192,
	379, 1192,
	381, 1192,
	382, 1192,
	383, 1192,
	384, 1192,
	385, 1192,
	386, 1192,
	387, 1192,
	388, 1192,
	389, 1192,
	390, 1192,
	391, 1192,
	392, 1192,
	394, 1192,
	396, 1192,
	397, 1192,
	398, 1192,
	403, 1192,
	405, 1192,
	406, 1192,
	407, 1192,
	408, 1192,
	409, 1192,
	410, 1192,
	411, 1192,
	412, 1192,
	414, 1192,
	415, 1192,
	416, 1192,
	418, 1192,
	419, 1192,
	420, 1192,
	421, 1192,
	422, 1192,
	423, 1192,
	425, 1192,
	426, 1192,
	427, 1192,
	428, 1192,
	429, 1192,
	430, 1192,
	431, 1192,
	432, 1192,
	433, 1192,
	434, 1192,
	435, 1192,
	437, 1192,
	438, 1192,
	439, 1192,
	440, 1192,
	441, 1192,
	442, 1192,
	444, 1192,
	445, 1192,
	446, 1192,
	447, 1192,
	448, 1192,
	449, 1192,
	451, 1192,
	452, 1192,
	453, 1192,
	454, 1192,
	455, 1192,
	456, 1192,
	457, 1192,
	459, 1192,
	461, 1192,
	462, 1192,
	463, 1192,
	464, 1192,
	465, 1192,
	466, 1192,
	467, 1192,
	468, 1192,
	469, 1192,
	470, 1192,
	471, 1192,
	472, 1192,
	473, 1192,
	474, 1192,
	475, 1192,
	477, 1192,
	478, 1192,
	480, 1192,
	482, 1192,
	483, 1192,
	484, 1192,
	485, 1192,
	486, 1192,
	487, 1192,
	488, 1192,
	489, 1192,
	490, 1192,
	492, 1192,
	493, 1192,
	494, 1192,
	495, 1192,
	496, 1192,
	498, 1192,
	500, 1192,
	501, 1192,
	502, 1192,
	503, 1192,
	504, 1192,
	505, 1192,
	507, 1192,
	508, 1192,
	509, 1192,
	510, 1192,
	512, 1192,
	513, 1192,
	516, 1192,
	517, 1192,
	518, 1192,
	519, 1192,
	520, 1192,
	521, 1192,
	522, 1192,
	524, 1192,
	527, 1192,
	528, 1192,
	529, 1192,
	530, 1192,
	531, 1192,
	532, 1192,
	534, 1192,
	535, 1192,
	536, 1192,
	537, 1192,
	542, 1192,
	543, 1192,
	544, 1192,
	545, 1192,
	546, 1192,
	547, 1192,
	-2, 0,
	-1, 1545,
	1, 502,
	571, 502,
	573, 502,
	575, 502,
	-2, 1402,
	-1, 1548,
	4, 2543,
	11, 2543,
	12, 2543,
	14, 2543,
	15, 2543,
	16, 2543,
	17, 2543,
	18, 2543,
	19, 2543,
	21, 2543,
	22, 2543,
	23, 2543,
	24, 2543,
	25, 2543,
	26, 2543,
	27, 2543,
	28, 2543,
	30, 2543,
	31, 2543,
	34, 2543,
	35, 2543,
	37, 2543,
	39, 2543,
	42, 2543,
	43, 2543,
	45, 2543,
	46, 2543,
	47, 2543,
	48, 2543,
	49, 2543,
	50, 2543,
	51, 2543,
	53, 2543,
	54, 2543,
	55, 2543,
	56, 2543,
	58, 2543,
	59, 2543,
	60, 2543,
	61, 2543,
	62, 2543,
	63, 2543,
	64, 2543,
	68, 2543,
	69, 2543,
	70, 2543,
	71, 2543,
	73, 2543,
	74, 2543,
	75, 2543,
	76, 2543,
	79, 2543,
	80, 2543,
	81, 2543,
	82, 2543,
	83, 2543,
	84, 2543,
	85, 2543,
	86, 2543,
	88, 2543,
	89, 2543,
	90, 2543,
	91, 2543,
	92, 2543,
	94, 2543,
	95, 2543,
	96, 2543,
	97, 2543,
	98, 2543,
	99, 2543,
	100, 2543,
	101, 2543,
	103, 2543,
	104, 2543,
	105, 2543,
	106, 2543,
	107, 2543,
	108, 2543,
	116, 2543,
	117, 2543,
	118, 2543,
	119, 2543,
	121, 2543,
	122, 2543,
	123, 2543,
	125, 2543,
	126, 2543,
	127, 2543,
	129, 2543,
	130, 2543,
	132, 2543,
	133, 2543,
	134, 2543,
	137, 2543,
	138, 2543,
	139, 2543,
	141, 2543,
	142, 2543,
	144, 2543,
	145, 2543,
	146, 2543,
	148, 2543,
	149, 2543,
	150, 2543,
	151, 2543,
	152, 2543,
	153, 2543,
	154, 2543,
	155, 2543,
	156, 2543,
	157, 2543,
	158, 2543,
	159, 2543,
	160, 2543,
	161, 2543,
	162, 2543,
	163, 2543,
	167, 2543,
	168, 2543,
	169, 2543,
	170, 2543,
	171, 2543,
	172, 2543,
	173, 2543,
	174, 2543,
	177, 2543,
	178, 2543,
	180, 2543,
	183, 2543,
	184, 2543,
	185, 2543,
	186, 2543,
	187, 2543,
	188, 2543,
	189, 2543,
	190, 2543,
	191, 2543,
	192, 2543,
	193, 2543,
	194, 2543,
	195, 2543,
	196, 2543,
	198, 2543,
	199, 2543,
	201, 2543,
	202, 2543,
	204, 2543,
	205, 2543,
	206, 2543,
	207, 2543,
	208, 2543,
	209, 2543,
	210, 2543,
	211, 2543,
	212, 2543,
	213, 2543,
	214, 2543,
	215, 2543,
	216, 2543,
	217, 2543,
	218, 2543,
	219, 2543,
	220, 2543,
	222, 2543,
	223, 2543,
	225, 2543,
	226, 2543,
	227, 2543,
	228, 2543,
	230, 2543,
	231, 2543,
	232, 2543,
	233, 2543,
	235, 2543,
	237, 2543,
	238, 2543,
	239, 2543,
	240, 2543,
	241, 2543,
	242, 2543,
	243, 2543,
	244, 2543,
	245, 2543,
	246, 2543,
	248, 2543,
	249, 2543,
	250, 2543,
	251, 2543,
	252, 2543,
	253, 2543,
	254, 2543,
	255, 2543,
	257, 2543,
	258, 2543,
	259, 2543,
	261, 2543,
	262, 2543,
	263, 2543,
	264, 2543,
	265, 2543,
	266, 2543,
	268, 2543,
	272, 2543,
	273, 2543,
	274, 2543,
	277, 2543,
	278, 2543,
	279, 2543,
	280, 2543,
	281, 2543,
	282, 2543,
	283, 2543,
	284, 2543,
	285, 2543,
	286, 2543,
	287, 2543,
	288, 2543,
	289, 2543,
	290, 2543,
	291, 2543,
	292, 2543,
	293, 2543,
	294, 2543,
	295, 2543,
	296, 2543,
	297, 2543,
	298, 2543,
	299, 2543,
	300, 2543,
	301, 2543,
	302, 2543,
	303, 2543,
	305, 2543,
	306, 2543,
	307, 2543,
	308, 2543,
	309, 2543,
	310, 2543,
	311, 2543,
	312, 2543,
	313, 2543,
	314, 2543,
	315, 2543,
	316, 2543,
	317, 2543,
	318, 2543,
	320, 2543,
	323, 2543,
	324, 2543,
	325, 2543,
	327, 2543,
	328, 2543,
	329, 2543,
	330, 2543,
	331, 2543,
	334, 2543,
	338, 2543,
	339, 2543,
	340, 2543,
	341, 2543,
	343, 2543,
	344, 2543,
	345, 2543,
	347, 2543,
	349, 2543,
	350, 2543,
	351, 2543,
	352, 2543,
	353, 2543,
	354, 2543,
	355, 2543,
	356, 2543,
	357, 2543,
	358, 2543,
	359, 2543,
	360, 2543,
	362, 2543,
	363, 2543,
	364, 2543,
	365, 2543,
	366, 2543,
	367, 2543,
	368, 2543,
	369, 2543,
	370, 2543,
	371, 2543,
	372, 2543,
	373, 2543,
	374, 2543,
	375, 2543,
	376, 2543,
	378, 2543,
	379, 2543,
	381, 2543,
	382, 2543,
	383, 2543,
	384, 2543,
	385, 2543,
	386, 2543,
	387, 2543,
	388, 2543,
	389, 2543,
	390, 2543,
	391, 2543,
	392, 2543,
	394, 2543,
	396, 2543,
	397, 2543,
	398, 2543,
	403, 2543,
	404, 2543,
	405, 2543,
	406, 2543,
	407, 2543,
	408, 2543,
	409, 2543,
	410, 2543,
	411, 2543,
	412, 2543,
	414, 2543,
	415, 2543,
	416, 2543,
	417, 2543,
	418, 2543,
	419, 2543,
	420, 2543,
	421, 2543,
	422, 2543,
	423, 2543,
	424, 2543,
	425, 2543,
	426, 2543,
	427, 2543,
	428, 2543,
	429, 2543,
	430, 2543,
	431, 2543,
	432, 2543,
	433, 2543,
	434, 2543,
	435, 2543,
	437, 2543,
	438, 2543,
	439, 2543,
	440, 2543,
	441, 2543,
	442, 2543,
	444, 2543,
	445, 2543,
	446, 2543,
	447, 2543,
	448, 2543,
	449, 2543,
	450, 2543,
	451, 2543,
	452, 2543,
	453, 2543,
	454, 2543,
	455, 2543,
	456, 2543,
	457, 2543,
	459, 2543,
	461, 2543,
	462, 2543,
	463, 2543,
	464, 2543,
	465, 2543,
	466, 2543,
	467, 2543,
	468, 2543,
	469, 2543,
	470, 2543,
	471, 2543,
	472, 2543,
	473, 2543,
	474, 2543,
	475, 2543,
	477, 2543,
	478, 2543,
	480, 2543,
	482, 2543,
	483, 2543,
	484, 2543,
	485, 2543,
	486, 2543,
	487, 2543,
	488, 2543,
	489, 2543,
	490, 2543,
	492, 2543,
	493, 2543,
	494, 2543,
	495, 2543,
	496, 2543,
	498, 2543,
	500, 2543,
	501, 2543,
	502, 2543,
	503, 2543,
	504, 2543,
	505, 2543,
	507, 2543,
	508, 2543,
	509, 2543,
	510, 2543,
	512, 2543,
	513, 2543,
	516, 2543,
	517, 2543,
	518, 2543,
	519, 2543,
	520, 2543,
	521, 2543,
	522, 2543,
	524, 2543,
	527, 2543,
	528, 2543,
	529, 2543,
	530, 2543,
	531, 2543,
	532, 2543,
	534, 2543,
	535, 2543,
	536, 2543,
	537, 2543,
	542, 2543,
	543, 2543,
	544, 2543,
	545, 2543,
	546, 2543,
	547, 2543,
	548, 2543,
	550, 2543,
	553, 2543,
	554, 2543,
	555, 2543,
	556, 2543,
	557, 2543,
	558, 2543,
	560, 2543,
	561, 2543,
	562, 2543,
	563, 2543,
	564, 2543,
	565, 2543,
	566, 2543,
	567, 2543,
	568, 2543,
	570, 2543,
	573, 2543,
	574, 2543,
	576, 2543,
	577, 2543,
	-2, 0,
	-1, 1553,
	182, 2429,
	497, 2429,
	555, 2429,
	574, 2429,
	-2, 0,
	-1, 1602,
	383, 808,
	442, 808,
	502, 808,
	-2, 0,
	-1, 1629,
	1, 803,
	571, 803,
	573, 803,
	575, 803,
	-2, 0,
	-1, 1630,
	1, 839,
	571, 839,
	573, 839,
	575, 839,
	-2, 0,
	-1, 1631,
	1, 847,
	571, 847,
	573, 847,
	575, 847,
	-2, 0,
	-1, 1632,
	1, 810,
	571, 810,
	573, 810,
	575, 810,
	-2, 0,
	-1, 1634,
	1, 814,
	571, 814,
	573, 814,
	575, 814,
	-2, 0,
	-1, 1640,
	1, 821,
	571, 821,
	573, 821,
	575, 821,
	-2, 0,
	-1, 1668,
	1, 2489,
	571, 2489,
	573, 2489,
	574, 2489,
	575, 2489,
	-2, 872,
	-1, 1669,
	1, 2426,
	571, 2426,
	573, 2426,
	574, 2426,
	575, 2426,
	-2, 873,
	-1, 1687,
	1, 1294,
	575, 1294,
	-2, 1299,
	-1, 1690,
	166, 1445,
	179, 1445,
	267, 1445,
	332, 1445,
	-2, 1383,
	-1, 1784,
	147, 1404,
	166, 1404,
	179, 1404,
	234, 1404,
	267, 1404,
	332, 1404,
	342, 1404,
	514, 1404,
	-2, 1846,
	-1, 1844,
	573, 1996,
	-2, 0,
	-1, 1879,
	147, 1404,
	166, 1404,
	179, 1404,
	234, 1404,
	267, 1404,
	332, 1404,
	342, 1404,
	514, 1404,
	-2, 1532,
	-1, 1928,
	572, 1673,
	-2, 1661,
	-1, 2006,
	1, 631,
	575, 631,
	-2, 1299,
	-1, 2126,
	216, 236,
	-2, 2143,
	-1, 2127,
	216, 237,
	-2, 280,
	-1, 2229,
	1, 805,
	571, 805,
	573, 805,
	575, 805,
	-2, 0,
	-1, 2230,
	1, 841,
	571, 841,
	573, 841,
	575, 841,
	-2, 0,
	-1, 2231,
	1, 849,
	571, 849,
	573, 849,
	575, 849,
	-2, 0,
	-1, 2265,
	1, 823,
	571, 823,
	573, 823,
	575, 823,
	-2, 0,
	-1, 2315,
	422, 1472,
	423, 1472,
	-2, 1706,
	-1, 2346,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1726,
	-1, 2347,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1727,
	-1, 2348,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1728,
	-1, 2349,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1729,
	-1, 2350,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1730,
	-1, 2351,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1731,
	-1, 2352,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1732,
	-1, 2353,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1733,
	-1, 2365,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1745,
	-1, 2366,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1746,
	-1, 2367,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1747,
	-1, 2370,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1752,
	-1, 2376,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1756,
	-1, 2378,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1764,
	-1, 2379,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1765,
	-1, 2380,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1766,
	-1, 2381,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1767,
	-1, 2517,
	5, 2147,
	182, 2007,
	572, 2144,
	-2, 2135,
	-1, 2518,
	182, 2008,
	-2, 2494,
	-1, 2519,
	182, 2009,
	-2, 2326,
	-1, 2520,
	182, 2010,
	-2, 2215,
	-1, 2521,
	182, 2011,
	-2, 2267,
	-1, 2522,
	182, 2012,
	-2, 2311,
	-1, 2523,
	182, 2013,
	-2, 2424,
	-1, 2524,
	182, 2014,
	-2, 1829,
	-1, 2594,
	1, 1533,
	2, 1533,
	106, 1533,
	147, 1533,
	166, 1533,
	179, 1533,
	183, 1533,
	200, 1533,
	203, 1533,
	230, 1533,
	234, 1533,
	245, 1533,
	263, 1533,
	267, 1533,
	306, 1533,
	332, 1533,
	336, 1533,
	342, 1533,
	413, 1533,
	417, 1533,
	514, 1533,
	525, 1533,
	539, 1533,
	540, 1533,
	541, 1533,
	551, 1533,
	571, 1533,
	573, 1533,
	575, 1533,
	577, 1533,
	-2, 1532,
	-1, 2607,
	572, 2116,
	-2, 2130,
	-1, 2609,
	53, 1431,
	132, 1431,
	-2, 296,
	-1, 2634,
	572, 1672,
	-2, 1662,
	-1, 2806,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1431,
	-1, 2971,
	337, 1475,
	-2, 2533,
	-1, 2972,
	337, 1476,
	-2, 2410,
	-1, 2976,
	422, 2073,
	423, 2073,
	-2, 1827,
	-1, 2977,
	422, 2077,
	423, 2077,
	-2, 1828,
	-1, 2978,
	422, 2074,
	423, 2074,
	-2, 1827,
	-1, 2979,
	422, 2078,
	423, 2078,
	-2, 1828,
	-1, 2992,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1754,
	-1, 2993,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1758,
	-1, 2999,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1760,
	-1, 3239,
	1, 628,
	571, 628,
	573, 628,
	575, 628,
	-2, 1299,
	-1, 3381,
	44, 2108,
	-2, 940,
	-1, 3386,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1431,
	-1, 3490,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1762,
	-1, 3497,
	239, 0,
	241, 0,
	323, 0,
	-2, 1781,
	-1, 3564,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1810,
	-1, 3565,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1811,
	-1, 3566,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1812,
	-1, 3570,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1816,
	-1, 3571,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1817,
	-1, 3572,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1818,
	-1, 3618,
	572, 2117,
	-2, 2131,
	-1, 3772,
	574, 2650,
	-2, 1357,
	-1, 3829,
	239, 0,
	241, 0,
	323, 0,
	-2, 1782,
	-1, 3832,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1785,
	-1, 3833,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1787,
	-1, 3928,
	574, 2132,
	-2, 1202,
	-1, 4058,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1786,
	-1, 4059,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1788,
	-1, 4070,
	239, 0,
	-2, 1819,
	-1, 4233,
	239, 0,
	-2, 1820,
	-1, 4413,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 2497,
}

const sqlPrivate = 57344

const sqlLast = 120218

var sqlAct = [...]int{
	260, 4508, 3371, 2869, 2882, 3150, 4291, 4261, 2698, 4309,
	4112, 4423, 4465, 3812, 4412, 4287, 4269, 4534, 4382, 2123,
	3370, 4346, 4394, 4158, 4366, 1190, 4424, 4477, 1455, 4363,
	3924, 4425, 4186, 4099, 2757, 2197, 4165, 3529, 4010, 1201,
	4237, 4015, 3981, 1023, 4117, 2325, 3482, 4079, 4411, 4047,
	3963, 3264, 1273, 3764, 3756, 4174, 1269, 3995, 3705, 3925,
	2739, 3403, 3909, 1067, 1915, 2985, 1988, 4200, 2206, 1262,
	1699, 3397, 3366, 2769, 774, 2393, 3739, 2326, 4020, 3723,
	3267, 4075, 2333, 3725, 1333, 1078, 741, 1569, 2891, 3444,
	2904, 1885, 2858, 2549, 3316, 2839, 2061, 2829, 774, 3442,
	2893, 1424, 1255, 3193, 1275, 3621, 3811, 3173, 3156, 1022,
	172, 3868, 848, 2901, 3356, 3250, 3133, 3165, 1014, 2853,
	2884, 2855, 2870, 2118, 2890, 1963, 2117, 2071, 1610, 2700,
	2587, 4, 2204, 3589, 2330, 3154, 3132, 4509, 1830, 2435,
	2170, 1792, 1854, 2406, 4238, 1267, 1431, 3261, 2586, 2900,
	1509, 769, 1121, 2783, 2112, 1916, 2096, 254, 2103, 1181,
	2738, 2969, 1687, 2840, 2042, 1071, 2426, 1074, 2546, 2589,
	2437, 1986, 1316, 4288, 2032, 2045, 3200, 1069, 2390, 2567,
	1855, 1241, 1567, 2314, 2297, 1076, 2295, 2863, 1546, 1512,
	253, 1264, 2619, 3368, 775, 1252, 776, 2158, 2894, 672,
	172, 1302, 1825, 1874, 2683, 1184, 2618, 2429, 2557, 1864,
	1163, 2513, 2479, 2576, 2407, 1871, 1777, 181, 1700, 658,
	2296, 1701, 841, 680, 2298, 2157, 1640, 1198, 2183, 1180,
	723, 780, 771, 182, 735, 1537, 105, 2060, 1450, 4466,
	1964, 4310, 2319, 675, 1052, 1961, 44, 43, 41, 32,
	30, 28, 1544, 1161, 683, 780, 1186, 1706, 910, 3020,
	1461, 1686, 930, 3603, 783, 3604, 1073, 3016, 4605, 698,
	3152, 3413, 2566, 1977, 822, 1977, 4595, 1018, 4581, 1977,
	3422, 1454, 2566, 3223, 1977, 1977, 3222, 1977, 783, 4580,
	1196, 4570, 4552, 2566, 3422, 2132, 4116, 4550, 1975, 4496,
	4454, 4116, 4447, 2132, 4455, 4445, 2566, 4442, 3412, 2566,
	4439, 4443, 4409, 4408, 4440, 4407, 2132, 2132, 4402, 1998,
	4401, 4392, 1998, 4390, 1998, 4116, 1018, 4116, 4361, 4334,
	863, 2559, 4116, 2625, 4327, 1178, 4326, 4321, 2566, 1633,
	2566, 4116, 4320, 4314, 4283, 4235, 4116, 2132, 3973, 2625,
	4217, 4214, 4211, 4167, 3799, 2132, 4116, 4168, 1311, 4132,
	4131, 4123, 1475, 2132, 2132, 2132, 4122, 4115, 1219, 2132,
	4116, 4116, 1714, 1715, 842, 4086, 4060, 4039, 4028, 2132,
	2625, 1998, 3422, 3958, 2205, 2984, 3208, 2566, 1164, 1164,
	999, 3946, 3029, 3831, 1193, 2566, 1745, 2625, 3030, 1311,
	2644, 2566, 72, 1717, 845, 844, 998, 3105, 3106, 3780,
	3123, 3124, 3125, 3439, 1167, 3774, 1168, 3737, 73, 3439,
	1019, 3738, 3613, 3611, 3596, 3593, 3614, 3612, 2566, 3513,
	3827, 90, 3509, 2132, 77, 1212, 2566, 1716, 4335, 1008,
	3438, 4239, 1013, 3429, 3439, 1714, 1715, 3430, 1747, 1748,
	1749, 1757, 1758, 1759, 3149, 3144, 3143, 3096, 2566, 2566,
	2566, 3097, 4230, 3070, 3105, 3106, 1995, 3071, 1750, 1745,
	4218, 3062, 2621, 1165, 84, 3063, 1717, 3060, 1998, 3031,
	2643, 2566, 3120, 2566, 1763, 2908, 2880, 2879, 2667, 1998,
	2193, 2193, 2566, 1192, 2624, 2616, 2610, 3593, 2625, 2566,
	2132, 3105, 3106, 2565, 3123, 3124, 3125, 2566, 2132, 2192,
	1716, 846, 2566, 2193, 2558, 1213, 1463, 4008, 3973, 3947,
	1736, 3799, 2432, 224, 3826, 104, 3430, 2760, 2682, 1733,
	90, 101, 2011, 1976, 1992, 1995, 2065, 2835, 1722, 3120,
	1714, 1715, 2131, 1747, 1748, 1749, 1757, 1758, 1759, 2777,
	2680, 1850, 3105, 3106, 1449, 3693, 3485, 3461, 1872, 2106,
	1612, 3019, 3414, 2603, 1745, 2602, 2601, 2600, 226, 1474,
	2599, 1717, 1169, 3111, 224, 1166, 3120, 1007, 1006, 1763,
	1005, 3415, 3884, 1744, 1746, 1004, 1003, 91, 1002, 1001,
	1714, 1715, 997, 2946, 1454, 996, 1714, 1715, 995, 994,
	993, 1739, 1740, 1741, 1742, 1716, 992, 1050, 2433, 991,
	990, 1722, 989, 988, 1745, 1736, 987, 225, 986, 226,
	1978, 1717, 1978, 985, 1733, 984, 1978, 1717, 218, 983,
	3111, 1978, 1978, 982, 1978, 3126, 981, 219, 908, 907,
	1576, 906, 1737, 3105, 3106, 905, 904, 1754, 903, 902,
	1764, 901, 900, 899, 898, 1716, 1744, 1746, 897, 183,
	896, 1716, 4022, 895, 3843, 1736, 3412, 3111, 225, 894,
	893, 892, 891, 1760, 1733, 1761, 3631, 3121, 1213, 2462,
	890, 1995, 1731, 1732, 889, 888, 887, 886, 885, 2434,
	884, 2431, 883, 882, 881, 1562, 1739, 1740, 1741, 1742,
	1752, 880, 879, 878, 877, 876, 1722, 866, 865, 224,
	183, 861, 860, 2448, 854, 1737, 1278, 1076, 3111, 853,
	840, 839, 145, 1469, 3607, 3825, 2558, 797, 796, 3126,
	94, 795, 794, 786, 3121, 785, 784, 756, 747, 746,
	1076, 745, 1754, 729, 1076, 1764, 1739, 1740, 1741, 1742,
	248, 1744, 1746, 247, 226, 246, 1722, 1762, 245, 244,
	1336, 3440, 1722, 1213, 1336, 243, 242, 241, 1278, 240,
	239, 3121, 238, 224, 237, 1751, 236, 1731, 1732, 235,
	234, 180, 97, 1315, 100, 1738, 2654, 1320, 1976, 1076,
	3196, 1076, 1995, 1076, 233, 1752, 224, 1992, 2643, 1278,
	2290, 1744, 1746, 225, 232, 1306, 231, 230, 224, 3111,
	1737, 229, 228, 227, 218, 3042, 847, 1463, 226, 2866,
	3122, 145, 3121, 219, 1278, 3025, 1580, 1731, 1732, 1462,
	2929, 1434, 2816, 2629, 1194, 1439, 2436, 2608, 1743, 1833,
	2593, 226, 2446, 3147, 1278, 183, 1832, 1833, 2040, 1278,
	1875, 1997, 1898, 226, 1832, 1803, 1457, 1076, 1738, 1076,
	1737, 2200, 4024, 1278, 1322, 1429, 1200, 225, 1836, 1076,
	1453, 1076, 1463, 1713, 4430, 1635, 1831, 3122, 218, 147,
	4410, 3148, 4389, 4298, 1755, 4242, 4227, 219, 4221, 4110,
	225, 1246, 1249, 1566, 184, 1518, 1521, 2848, 4074, 1300,
	4219, 218, 225, 4029, 4007, 3891, 1259, 3866, 3865, 183,
	219, 3859, 1441, 218, 3122, 1794, 1278, 3858, 1329, 3857,
	1421, 1426, 219, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	1468, 1524, 183, 1743, 1076, 780, 3850, 1076, 3849, 3847,
	3842, 2199, 3839, 3838, 843, 3742, 3736, 2430, 1547, 3117,
	3118, 3119, 3635, 1738, 172, 172, 3116, 3114, 3115, 3107,
	3108, 3109, 3110, 3112, 3113, 3122, 3634, 1507, 783, 1295,
	3633, 3617, 1452, 2638, 1451, 3584, 1549, 1551, 3583, 1755,
	3582, 3505, 1753, 1743, 3501, 1581, 1286, 1728, 1729, 1735,
	1756, 1734, 1730, 3191, 1727, 1725, 1726, 1718, 1719, 1720,
	1721, 1723, 1724, 1738, 3140, 3131, 1463, 3853, 3104, 3101,
	3100, 3852, 1796, 3116, 3114, 3115, 3107, 3108, 3109, 3110,
	3112, 3113, 3691, 3098, 3069, 3068, 1801, 3067, 3064, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1306, 3061, 3041, 1306,
	3024, 2765, 1021, 3117, 3118, 3119, 3017, 2881, 3105, 3106,
	3116, 3114, 3115, 3107, 3108, 3109, 3110, 3112, 3113, 2594,
	1076, 3105, 3106, 1795, 2419, 1793, 1076, 1649, 1540, 1713,
	1794, 2139, 2137, 1177, 224, 1712, 4599, 1753, 2724, 4544,
	1019, 2173, 1728, 1729, 1735, 1756, 1734, 1730, 4543, 1727,
	1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 4023, 4510,
	3743, 3116, 3114, 3115, 3107, 3108, 3109, 3110, 3112, 3113,
	3105, 3106, 4464, 3123, 3124, 3125, 4462, 1691, 1561, 226,
	1202, 3531, 4353, 4290, 1685, 1714, 1715, 4279, 4276, 224,
	1575, 224, 3145, 3500, 4275, 4274, 1734, 1730, 2850, 1727,
	1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 4255, 1783,
	1720, 1721, 1723, 1724, 4241, 4240, 1717, 224, 4243, 3188,
	4215, 4199, 4198, 2396, 4184, 4181, 4180, 4128, 225, 4106,
	1586, 1076, 1076, 1076, 226, 4072, 226, 1076, 4055, 218,
	1603, 4054, 4036, 3743, 1198, 3120, 1198, 4035, 219, 3998,
	1716, 3974, 3883, 1636, 3864, 3107, 3108, 3109, 3110, 3112,
	3113, 1336, 226, 3800, 1852, 3794, 3791, 3680, 3679, 1076,
	183, 3666, 774, 3665, 3111, 3663, 224, 3599, 1933, 774,
	2402, 3587, 1278, 225, 3496, 225, 1781, 3111, 3441, 3423,
	3389, 1901, 1688, 3328, 218, 1696, 218, 3295, 3266, 1695,
	999, 1912, 3216, 219, 3214, 219, 3046, 1196, 1959, 1196,
	2461, 225, 3045, 224, 3040, 3008, 998, 2828, 1690, 1839,
	224, 226, 218, 224, 1835, 183, 1838, 2865, 1692, 1905,
	1861, 219, 1837, 1906, 1709, 1710, 3111, 1834, 1826, 1824,
	1714, 1715, 2636, 4001, 2447, 2635, 2605, 2598, 1278, 2564,
	2444, 1722, 1897, 183, 1882, 1076, 1019, 172, 226, 1278,
	1853, 1848, 1908, 1927, 1745, 226, 1902, 1847, 226, 1846,
	225, 1717, 1845, 1844, 1858, 1859, 1843, 1076, 3121, 1827,
	1828, 218, 1842, 1336, 1841, 2849, 1967, 224, 1714, 1715,
	219, 2201, 1164, 1840, 1821, 1820, 1819, 1818, 3126, 1817,
	1816, 1815, 1814, 1813, 1812, 1716, 1811, 225, 1810, 1809,
	1808, 1193, 183, 1193, 225, 1807, 1796, 225, 218, 1717,
	2038, 1782, 1780, 1775, 1294, 218, 1306, 219, 218, 780,
	1930, 1904, 226, 1217, 219, 2029, 780, 219, 1208, 2003,
	3121, 3887, 3835, 3630, 3610, 3602, 3028, 2596, 2004, 183,
	1883, 1880, 1967, 1716, 2627, 1921, 183, 1873, 1543, 183,
	4090, 3889, 783, 1967, 3629, 3105, 3106, 1795, 3212, 783,
	3418, 1778, 1893, 2445, 3105, 3106, 1851, 3123, 3124, 3125,
	224, 225, 1019, 4541, 3949, 3105, 3106, 1980, 1319, 2031,
	4533, 4222, 218, 1538, 1892, 1891, 1890, 1888, 1887, 1886,
	1877, 219, 4175, 4220, 1909, 2758, 1722, 4277, 1278, 1278,
	1192, 1956, 1192, 4170, 1312, 1317, 2031, 1913, 1336, 4109,
	2006, 3122, 4169, 183, 4027, 226, 3976, 3975, 3948, 3886,
	3803, 3802, 2031, 3801, 3605, 3425, 224, 3746, 3424, 1311,
	1875, 2743, 3483, 1833, 3321, 2002, 1318, 1311, 3066, 3120,
	1832, 1744, 1746, 1816, 1816, 1311, 3065, 1683, 2990, 1602,
	3298, 2726, 1314, 2053, 3678, 3373, 2017, 3372, 3268, 979,
	1805, 1650, 4406, 2198, 225, 2221, 4166, 4450, 1611, 4435,
	3434, 226, 4422, 3122, 3357, 218, 2090, 2905, 2095, 1612,
	2119, 2100, 3702, 2000, 219, 2124, 2129, 3698, 3684, 2009,
	3458, 3237, 4076, 3152, 3533, 1982, 2634, 2427, 1984, 1849,
	1737, 1278, 980, 1278, 1989, 1278, 183, 2034, 1991, 2024,
	4431, 1829, 3364, 1994, 2167, 1517, 1446, 1289, 1308, 1245,
	225, 1278, 1278, 4444, 4441, 3408, 39, 2774, 3658, 4270,
	3111, 218, 1278, 2771, 4011, 4360, 2305, 4252, 2070, 3271,
	219, 3111, 1590, 1802, 1278, 1027, 1278, 1278, 1278, 3115,
	3107, 3108, 3109, 3110, 3112, 3113, 2121, 780, 2104, 3673,
	2888, 3034, 183, 2163, 2174, 3109, 3110, 3112, 3113, 774,
	2862, 3350, 4493, 2065, 4494, 3477, 4432, 2208, 4524, 3715,
	2220, 1542, 4149, 3937, 1485, 3322, 2668, 977, 4594, 4142,
	783, 2168, 3126, 1176, 1452, 2303, 1451, 1313, 2180, 2271,
	4134, 4095, 3117, 3118, 3119, 1547, 975, 1547, 973, 3116,
	3114, 3115, 3107, 3108, 3109, 3110, 3112, 3113, 3971, 2088,
	2203, 2089, 2099, 2269, 971, 3711, 3241, 1718, 1719, 1720,
	1721, 1723, 1724, 3710, 3121, 3704, 2225, 2213, 2130, 1493,
	968, 1648, 2432, 1738, 3714, 3121, 3697, 3695, 960, 1447,
	3645, 3644, 3353, 1076, 1309, 1076, 3207, 3039, 3038, 2188,
	3037, 3036, 1076, 1310, 2018, 1933, 1933, 1336, 2177, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 2209, 1076, 2190, 1076, 1076, 1076,
	1076, 1540, 2150, 2185, 2186, 2185, 2149, 2182, 1543, 1588,
	1319, 2307, 1494, 3921, 2994, 2781, 780, 2780, 2433, 1076,
	2294, 2776, 1076, 1076, 2304, 835, 2767, 1019, 1295, 1019,
	1076, 1194, 2756, 1194, 1076, 2755, 1076, 1076, 2229, 2686,
	1927, 1927, 2752, 2194, 1336, 2195, 3917, 3213, 2212, 783,
	1076, 1076, 1076, 1076, 2684, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1017, 3005, 4525, 2751, 3122, 1318, 1727,
	1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 3122, 3268,
	2198, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	2730, 2247, 2717, 3003, 1076, 2302, 1647, 2230, 3918, 2434,
	2617, 2431, 2377, 1319, 1689, 2686, 1198, 1930, 1930, 2265,
	2331, 2332, 3243, 1336, 2475, 2408, 2409, 1311, 2474, 2318,
	2684, 2335, 1198, 2023, 2022, 1724, 836, 2031, 2033, 2408,
	2424, 3297, 1921, 1921, 2859, 1530, 4528, 1529, 1076, 1336,
	3105, 3106, 1528, 2392, 1527, 4053, 965, 2148, 1714, 1715,
	1016, 3459, 2293, 1489, 2288, 2470, 2292, 2231, 2306, 2299,
	2291, 1318, 2728, 1583, 999, 2217, 2628, 999, 999, 1196,
	1502, 2675, 1745, 2093, 2516, 2516, 2530, 2423, 2408, 1717,
	2322, 2550, 2552, 2323, 2324, 1196, 2581, 2556, 2609, 2716,
	1231, 2275, 2283, 2392, 1646, 2305, 3117, 3118, 3119, 2007,
	1448, 2062, 3113, 3116, 3114, 3115, 3107, 3108, 3109, 3110,
	3112, 3113, 1604, 1716, 2573, 3114, 3115, 3107, 3108, 3109,
	3110, 3112, 3113, 2289, 2740, 2741, 3896, 3950, 4529, 2747,
	1882, 2606, 3000, 2404, 2058, 2982, 1205, 2472, 2280, 1278,
	1278, 1542, 2473, 2026, 2237, 2476, 2436, 2477, 2478, 2427,
	2421, 2740, 2741, 4493, 2303, 3001, 3933, 1019, 1018, 3006,
	1164, 2063, 2064, 1659, 172, 1629, 1019, 2740, 2741, 2967,
	1019, 2773, 2595, 1193, 2046, 4263, 1203, 3467, 2234, 1584,
	2047, 1336, 1682, 4554, 2572, 3895, 2622, 1694, 2715, 1193,
	1612, 2059, 2512, 2525, 2689, 3913, 2663, 1612, 2282, 2541,
	3914, 2554, 2657, 2772, 1714, 1715, 3111, 2562, 2563, 2770,
	2584, 3921, 2228, 1933, 1722, 2580, 2574, 2585, 2702, 1306,
	2591, 2592, 2578, 2579, 1630, 1312, 1835, 1880, 1745, 2691,
	2630, 1663, 2301, 2656, 4428, 1717, 2187, 4531, 1893, 1293,
	3466, 2388, 2943, 2620, 3917, 1301, 3240, 1336, 3910, 2436,
	2238, 3916, 3669, 3970, 2028, 1589, 3696, 2430, 1019, 1744,
	1746, 1278, 2981, 3694, 1035, 3908, 3352, 3919, 1600, 1716,
	2386, 3319, 1192, 1513, 3912, 2694, 969, 1076, 1076, 2637,
	1076, 2659, 1206, 2665, 1631, 1827, 1828, 2270, 1192, 2048,
	2641, 4265, 2027, 2304, 3661, 969, 3918, 969, 1927, 2775,
	2642, 2648, 4052, 1278, 2640, 2651, 2052, 2652, 2949, 2750,
	3121, 2268, 2768, 970, 838, 837, 2666, 2690, 1737, 2727,
	1511, 3721, 2688, 3522, 2748, 2832, 2658, 2705, 2660, 969,
	1015, 874, 2729, 2400, 1278, 3002, 2873, 3911, 2732, 1308,
	2398, 1645, 2693, 1642, 2065, 3004, 1278, 833, 1278, 832,
	2846, 2902, 2669, 3931, 2136, 2135, 670, 2719, 3681, 754,
	3720, 4505, 1278, 4513, 2302, 1930, 4512, 3312, 2733, 2731,
	1722, 1312, 2615, 3305, 2974, 2975, 2049, 2054, 2742, 2744,
	2745, 2746, 2749, 665, 2808, 2697, 2072, 2911, 2912, 3915,
	1921, 2084, 2707, 2710, 2086, 2279, 3519, 2811, 2918, 2919,
	2920, 2692, 2813, 1076, 2068, 4429, 3311, 1967, 2076, 2382,
	955, 2930, 3304, 2931, 2952, 1744, 1746, 1488, 1313, 2649,
	4530, 2689, 4557, 2807, 2685, 2653, 3922, 2383, 2838, 780,
	2083, 4482, 2384, 2906, 1285, 1012, 2389, 2532, 1547, 2664,
	3900, 3405, 172, 2067, 3817, 2927, 4537, 3816, 2842, 4584,
	3406, 1076, 2887, 3122, 1230, 2281, 2691, 1076, 1076, 2050,
	2065, 1738, 783, 2073, 2877, 752, 1452, 1491, 2814, 2091,
	2436, 1660, 2374, 1977, 1737, 1309, 3655, 3520, 2996, 2826,
	2926, 3654, 2909, 4331, 1310, 1308, 2913, 2954, 2914, 2956,
	2056, 3255, 2935, 3913, 2937, 4342, 2939, 2836, 3914, 2875,
	3252, 2055, 4427, 3932, 2924, 2056, 1460, 2236, 1467, 2087,
	1473, 4341, 1076, 1076, 2868, 2857, 2689, 2934, 1076, 2936,
	4093, 2938, 2878, 2704, 956, 966, 2957, 3405, 2391, 2959,
	2907, 1076, 1076, 3901, 4396, 2889, 4397, 1076, 1076, 1204,
	3331, 2947, 1585, 1076, 2690, 2951, 4264, 2876, 2759, 3916,
	2754, 2691, 1076, 1076, 1076, 3246, 2116, 3670, 1076, 2753,
	4271, 4285, 3242, 1513, 1313, 3919, 2077, 1657, 1076, 2693,
	4481, 719, 2094, 1215, 1560, 2948, 1565, 2932, 3682, 2933,
	1822, 3283, 2035, 2036, 3210, 1076, 1574, 3027, 1579, 3990,
	2962, 2997, 3107, 3108, 3109, 3110, 3112, 3113, 1725, 1726,
	1718, 1719, 1720, 1721, 1723, 1724, 787, 1661, 2671, 2056,
	2115, 2056, 2385, 1194, 3813, 3286, 2973, 1738, 2964, 2963,
	4065, 1309, 2387, 2233, 2436, 2318, 1658, 2673, 2692, 1194,
	1310, 1693, 2078, 2079, 2968, 2372, 2107, 3282, 2375, 2690,
	4504, 4380, 2114, 2983, 4457, 4049, 3022, 3023, 1311, 1634,
	867, 3026, 4371, 4458, 3956, 1774, 2074, 2227, 688, 2102,
	2674, 2703, 3044, 2577, 2693, 3288, 4329, 2418, 3018, 4558,
	3728, 2950, 753, 2687, 855, 1076, 1076, 1076, 2051, 3726,
	2672, 2590, 2101, 1292, 1076, 1076, 1076, 3915, 2371, 1076,
	1018, 4535, 3535, 2995, 1662, 4545, 875, 2075, 4000, 1076,
	1198, 1336, 3253, 2686, 4330, 1076, 3807, 1076, 3159, 3160,
	3626, 957, 1599, 1601, 1220, 2097, 1198, 666, 2708, 755,
	3818, 2085, 751, 2692, 3922, 3479, 2965, 1587, 3287, 955,
	1617, 4292, 3033, 4426, 1336, 4492, 4490, 4308, 4183, 1863,
	3762, 3393, 2063, 2064, 2156, 3741, 1198, 2094, 1860, 1336,
	1010, 2113, 955, 1218, 1012, 1211, 1718, 1719, 1720, 1721,
	1723, 1724, 657, 1196, 2399, 4480, 1933, 1704, 3814, 3181,
	1336, 3194, 2098, 1019, 2321, 2092, 4048, 1012, 3862, 1196,
	2066, 2019, 3142, 3201, 1278, 1278, 3206, 4125, 4563, 3729,
	4124, 4103, 667, 4536, 1311, 4192, 4585, 4251, 3161, 3763,
	3708, 3991, 3657, 3262, 3936, 3394, 3573, 1076, 3220, 1196,
	2080, 3935, 3385, 1703, 3171, 3258, 1867, 2847, 3728, 2841,
	1978, 1076, 1011, 2830, 3169, 2181, 4538, 3726, 2175, 2169,
	3190, 2161, 3247, 3248, 2142, 4293, 3518, 1482, 668, 1933,
	669, 1222, 3588, 956, 2093, 728, 4347, 788, 789, 958,
	3238, 1927, 3137, 3138, 3139, 3480, 3272, 1076, 1278, 3276,
	1703, 3231, 3641, 1870, 3244, 3195, 956, 1193, 3187, 3170,
	2311, 4094, 2373, 3199, 3179, 4311, 3902, 1306, 1865, 3153,
	3182, 3183, 3257, 1193, 2081, 2016, 3256, 2276, 1967, 1967,
	4456, 868, 869, 1278, 3168, 2012, 1868, 3765, 3180, 959,
	3273, 2218, 4016, 3278, 1889, 2827, 3280, 1233, 1336, 3224,
	3225, 2734, 4050, 1193, 1702, 856, 857, 1278, 1930, 1703,
	3334, 3211, 1278, 3337, 1927, 3259, 4164, 3342, 3344, 3203,
	3204, 3205, 1698, 1867, 3323, 3300, 4162, 3729, 3185, 1866,
	3186, 1905, 4105, 1921, 3175, 1278, 3217, 3218, 3274, 3219,
	3819, 1278, 3727, 1278, 3270, 3269, 2988, 1336, 2966, 3601,
	2014, 1702, 1967, 2110, 774, 3164, 1192, 3232, 3163, 3167,
	1334, 3239, 3228, 3863, 1432, 1278, 1774, 3369, 1632, 1704,
	1870, 3329, 1192, 3285, 4258, 3302, 1278, 791, 790, 3318,
	4562, 1930, 3574, 3314, 3263, 2575, 2053, 1967, 3245, 3320,
	2015, 3575, 2709, 1198, 2614, 2312, 3313, 3401, 3934, 3378,
	2613, 3303, 1192, 1868, 2902, 2612, 1921, 2108, 3315, 2611,
	1702, 1967, 3384, 2902, 3289, 3724, 1967, 4294, 1278, 1278,
	957, 3338, 3820, 2053, 3399, 3176, 3345, 252, 3355, 3296,
	3358, 1522, 3339, 3307, 3308, 792, 793, 3346, 3309, 1536,
	1869, 1278, 3310, 957, 3642, 1523, 2109, 3421, 1534, 3324,
	873, 3733, 3392, 2834, 1618, 3330, 1196, 1016, 4113, 4159,
	3410, 3982, 3340, 3351, 2104, 2713, 3347, 870, 871, 3664,
	2735, 2736, 2104, 3435, 3174, 1704, 2179, 3227, 3360, 1336,
	3229, 3230, 1336, 3460, 4033, 3233, 4501, 3234, 4289, 3235,
	3727, 858, 859, 3400, 3202, 4092, 2910, 2812, 2732, 3354,
	2568, 2810, 757, 2207, 1593, 3362, 3178, 3395, 4350, 4357,
	4259, 780, 4344, 3381, 3869, 1076, 727, 4101, 3382, 172,
	172, 1076, 1076, 3590, 3332, 1076, 1076, 1076, 3402, 1076,
	3454, 2443, 1678, 4375, 2571, 1680, 4503, 4446, 1076, 1933,
	1677, 3419, 3420, 1675, 783, 3407, 3433, 1076, 3166, 3473,
	1076, 3437, 1654, 4032, 3416, 4278, 1336, 1869, 958, 4114,
	1193, 4102, 1652, 2267, 4071, 1076, 3472, 3409, 1628, 1626,
	3453, 1624, 3431, 1336, 1622, 2570, 1620, 3861, 3732, 1009,
	2569, 958, 3470, 1933, 1933, 1076, 1076, 3134, 1076, 1076,
	1076, 3476, 3481, 4351, 3463, 4260, 3464, 1614, 3465, 3495,
	3456, 3221, 3099, 3498, 1609, 3007, 1607, 2831, 959, 2766,
	1532, 2725, 3177, 2639, 2284, 1900, 1896, 1681, 762, 3135,
	1571, 3475, 3474, 3455, 1927, 3469, 1698, 2442, 2945, 2944,
	1076, 959, 1019, 2916, 1076, 2300, 1933, 1933, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 2278, 1076, 1192,
	3478, 1641, 3547, 2242, 2141, 1076, 1076, 1933, 1927, 1927,
	3507, 3508, 1076, 1535, 1960, 1806, 1582, 1506, 4421, 4209,
	3700, 3699, 1533, 1076, 872, 3957, 1863, 3945, 3548, 4343,
	3503, 1930, 4014, 3962, 1198, 1198, 3906, 1194, 1076, 967,
	721, 3761, 3514, 3752, 3713, 3676, 3674, 3521, 3523, 3524,
	2020, 4478, 3656, 1194, 1786, 1679, 1921, 3537, 1791, 3530,
	1676, 1927, 1927, 1674, 764, 3388, 3383, 1336, 3333, 3374,
	4009, 4201, 1653, 3545, 3619, 1930, 1930, 3546, 2331, 3538,
	2266, 3525, 1651, 1194, 4202, 1907, 2860, 2852, 1627, 1625,
	3606, 1623, 1927, 2845, 1621, 2837, 1619, 1196, 1196, 2824,
	1921, 1921, 2809, 1867, 3544, 3585, 3624, 3625, 2655, 3550,
	3552, 2650, 2140, 2138, 1076, 4203, 2120, 1613, 3452, 3577,
	3636, 3637, 3638, 768, 1608, 172, 1606, 3445, 1930, 1930,
	1531, 2331, 3553, 2105, 2082, 3515, 2069, 1076, 2057, 1999,
	3578, 1899, 3597, 3598, 1996, 1993, 1990, 3586, 1985, 1983,
	1870, 1979, 1970, 1921, 1921, 3398, 4470, 3592, 2986, 1930,
	1173, 4494, 3581, 3594, 3595, 1865, 1076, 1076, 3341, 3623,
	2315, 3452, 1707, 2960, 2114, 4205, 2958, 4385, 4038, 2287,
	3445, 4031, 4030, 1868, 1921, 3969, 3608, 1174, 1084, 3892,
	972, 974, 976, 2903, 2039, 759, 1487, 2686, 4204, 1076,
	4194, 1193, 1193, 2686, 2714, 3609, 4187, 2239, 3773, 2178,
	2065, 2232, 2684, 1254, 2262, 4206, 1672, 1673, 2711, 3650,
	1253, 1278, 3447, 2261, 2285, 763, 1866, 4384, 3938, 3964,
	1605, 715, 4229, 3870, 256, 256, 256, 3446, 660, 661,
	1933, 676, 660, 676, 686, 1714, 1715, 726, 3622, 2987,
	3848, 744, 3646, 2737, 3689, 2718, 750, 3632, 720, 3685,
	1711, 1287, 256, 2041, 3660, 1221, 3690, 3692, 2286, 4497,
	1278, 766, 4488, 671, 3709, 3447, 1076, 761, 1708, 249,
	852, 3707, 4451, 2113, 1198, 1076, 256, 3775, 3701, 2823,
	3446, 2873, 3703, 1175, 1254, 1278, 1278, 1278, 3782, 3683,
	1192, 1192, 3706, 3766, 767, 1254, 2264, 3749, 2732, 2533,
	1716, 2162, 1278, 1298, 3747, 2771, 823, 2779, 2902, 1714,
	1715, 758, 3767, 2778, 2761, 1927, 654, 2720, 682, 2763,
	2722, 4336, 1336, 3786, 4302, 4299, 3770, 1869, 3718, 3748,
	1194, 4257, 2762, 2721, 3731, 4178, 4157, 1196, 3759, 765,
	1717, 3751, 3740, 3616, 3387, 3750, 1336, 2867, 3722, 1076,
	1076, 3730, 2555, 722, 3719, 1076, 1076, 1933, 3798, 2005,
	1076, 1076, 1914, 1076, 760, 3734, 4532, 1076, 3443, 4111,
	4377, 3904, 3903, 3753, 1716, 4378, 3653, 3254, 1076, 3209,
	3769, 4561, 1930, 4301, 3768, 3263, 1454, 3639, 2133, 3755,
	3840, 3640, 3105, 3106, 1076, 3776, 4507, 660, 660, 1714,
	1715, 3787, 3788, 3781, 3804, 256, 1592, 1921, 3771, 3777,
	3821, 3795, 1591, 3796, 3792, 3789, 2438, 3793, 4377, 3822,
	3628, 3830, 2678, 4378, 2678, 2679, 2676, 2677, 3448, 3449,
	3450, 3451, 2676, 2471, 3758, 3675, 1656, 3677, 4179, 1655,
	3815, 1193, 1927, 4143, 4207, 3965, 3961, 3960, 3805, 4208,
	3836, 3627, 3526, 3335, 1198, 1800, 3834, 3810, 1799, 4547,
	4514, 4340, 1198, 4339, 4338, 4244, 1336, 4160, 1336, 4138,
	4091, 1263, 4088, 3993, 3888, 1198, 3797, 3779, 3735, 3672,
	3667, 3448, 3449, 3450, 3451, 3391, 3390, 3279, 3875, 3226,
	3095, 3094, 1336, 3093, 3092, 3091, 3090, 2723, 3089, 3088,
	3194, 3712, 3087, 3086, 3085, 3084, 3083, 3082, 3081, 1930,
	3080, 3079, 3078, 3893, 3894, 3077, 3076, 1196, 3075, 1427,
	3074, 3073, 1438, 1263, 1198, 1196, 1198, 3860, 3072, 2942,
	2923, 2922, 2921, 2851, 1921, 2825, 2764, 2712, 1196, 3878,
	1192, 2646, 2632, 3939, 2631, 2403, 2263, 2260, 2259, 3926,
	2258, 3926, 2257, 2256, 1336, 3930, 3929, 172, 2176, 2151,
	2147, 2146, 3871, 2145, 3881, 1336, 3872, 3873, 3941, 3942,
	3876, 3877, 2817, 2144, 2143, 2820, 3874, 2822, 3882, 3867,
	3966, 1973, 3967, 1263, 1263, 1972, 3885, 1196, 3940, 1196,
	1971, 1969, 1671, 1278, 1278, 1670, 1615, 1501, 1500, 1499,
	1498, 1497, 3898, 1496, 1495, 3905, 1490, 3983, 1486, 1484,
	1278, 1483, 1327, 1326, 1325, 1324, 1323, 1291, 1290, 1240,
	2864, 1193, 1336, 2864, 1239, 1238, 1237, 1278, 1236, 1193,
	1235, 1194, 1194, 1234, 3980, 1232, 1227, 1226, 3959, 1225,
	1224, 1223, 1193, 1156, 3968, 2010, 978, 2334, 964, 3978,
	4262, 3920, 1198, 1665, 89, 4006, 1492, 810, 3944, 3955,
	4017, 83, 1278, 1278, 1278, 2111, 3671, 935, 4374, 1476,
	3952, 4284, 3954, 818, 1336, 4359, 3281, 3926, 2782, 4018,
	2241, 3979, 4034, 4037, 1616, 2243, 1076, 1076, 1076, 3189,
	2597, 1193, 4328, 1193, 3844, 4012, 3953, 3972, 2940, 3984,
	4021, 3043, 3999, 4236, 1336, 3977, 4003, 4064, 2441, 1076,
	1804, 3146, 1076, 1076, 1967, 1196, 85, 1060, 1106, 3989,
	1192, 4019, 1076, 3988, 3907, 1933, 3659, 2892, 1192, 3986,
	1076, 1076, 3985, 1918, 2439, 4002, 1920, 1026, 1339, 4395,
	2021, 1192, 1066, 2037, 2030, 1336, 2633, 1278, 4056, 4040,
	4043, 2515, 1083, 4005, 4026, 1080, 4045, 1922, 4051, 2401,
	4041, 1924, 1082, 1081, 1923, 1823, 2970, 1079, 1917, 3757,
	2833, 1336, 2871, 3417, 1786, 1541, 1539, 937, 2025, 1076,
	2397, 2425, 3032, 1797, 1041, 1062, 4067, 2422, 1076, 4073,
	1192, 1216, 1192, 1051, 1040, 3172, 1076, 3151, 1933, 3404,
	3615, 2310, 827, 3102, 2428, 1207, 1076, 2538, 2531, 1076,
	1927, 2527, 3236, 2861, 4084, 4085, 4061, 1684, 1076, 1193,
	4097, 4078, 1776, 2872, 1321, 1336, 1044, 2395, 2537, 2607,
	1788, 4087, 3012, 4121, 2320, 3411, 1278, 1278, 3192, 2626,
	4381, 1209, 3534, 2155, 1172, 1171, 2533, 2533, 1214, 1170,
	4365, 4362, 4137, 4098, 3790, 4096, 4104, 3367, 2013, 2670,
	1766, 3375, 1056, 1437, 3157, 3436, 1503, 3369, 749, 4118,
	1068, 1765, 2803, 2802, 1229, 1336, 4254, 1930, 1278, 4148,
	4172, 1194, 1307, 1927, 4163, 1305, 256, 1304, 256, 256,
	1303, 1258, 256, 1268, 4135, 4521, 1198, 1198, 4583, 2128,
	3668, 223, 1921, 2980, 1288, 4177, 1705, 4145, 4139, 1697,
	220, 4188, 4193, 744, 4153, 1076, 1076, 4152, 1192, 4140,
	4161, 3926, 3926, 222, 4155, 4197, 4212, 4213, 221, 4176,
	4189, 4171, 1076, 1933, 3994, 4216, 3620, 256, 3198, 256,
	256, 1258, 4191, 256, 256, 1268, 4150, 4449, 4185, 3687,
	1930, 4190, 3359, 4127, 4156, 23, 256, 4021, 1456, 1196,
	1196, 4210, 22, 4196, 1438, 4195, 21, 1076, 109, 42,
	1076, 2681, 4151, 20, 125, 1921, 144, 1198, 143, 1480,
	4224, 117, 142, 141, 140, 139, 146, 138, 137, 1198,
	2533, 2533, 2533, 132, 136, 4250, 135, 4234, 1505, 134,
	1268, 133, 3926, 131, 256, 256, 129, 1258, 4225, 4226,
	1438, 130, 124, 128, 3926, 127, 126, 123, 1927, 4273,
	4249, 122, 121, 120, 119, 118, 744, 116, 256, 256,
	1076, 1076, 115, 114, 113, 112, 4266, 111, 4272, 110,
	1196, 740, 1198, 4228, 4267, 1198, 737, 4245, 61, 1278,
	4247, 852, 1196, 60, 108, 107, 19, 40, 14, 1278,
	1278, 1194, 4280, 1193, 1193, 65, 66, 3926, 18, 1194,
	3926, 13, 4305, 4296, 4297, 4307, 1278, 35, 88, 4282,
	99, 98, 1194, 36, 96, 1930, 4295, 95, 4319, 4300,
	1076, 1076, 34, 17, 16, 4304, 15, 93, 4129, 4130,
	1076, 4312, 4176, 92, 4313, 1196, 4315, 33, 1196, 4324,
	1921, 4325, 31, 11, 9, 4317, 4318, 4316, 8, 37,
	1884, 12, 4144, 5, 256, 4146, 4147, 177, 4323, 176,
	179, 1194, 4322, 1194, 175, 178, 4333, 1076, 1076, 87,
	1076, 174, 173, 256, 1193, 4352, 86, 4337, 4364, 4367,
	29, 10, 169, 4356, 4173, 3745, 1193, 3292, 3293, 4383,
	80, 3294, 1192, 1192, 171, 4376, 170, 168, 4379, 167,
	166, 81, 78, 4355, 4354, 165, 82, 164, 79, 163,
	4400, 4369, 27, 4332, 4405, 6, 64, 4403, 7, 4046,
	1076, 1076, 1076, 4373, 3457, 102, 103, 4404, 3325, 3326,
	38, 4386, 3327, 76, 75, 4391, 4398, 74, 26, 1193,
	63, 25, 1193, 207, 206, 4399, 205, 204, 203, 202,
	197, 1076, 196, 201, 199, 198, 200, 195, 4433, 210,
	4368, 209, 215, 4372, 4420, 214, 4419, 213, 4438, 4417,
	4418, 212, 4434, 1192, 211, 208, 4452, 217, 194, 193,
	191, 187, 186, 190, 192, 1192, 189, 188, 4436, 1194,
	4463, 185, 216, 161, 162, 71, 160, 4461, 159, 2166,
	4459, 4475, 4474, 158, 1076, 157, 156, 155, 154, 70,
	24, 2, 1, 0, 4460, 0, 0, 4473, 4479, 0,
	4467, 0, 4469, 0, 0, 2537, 0, 4471, 4472, 0,
	0, 0, 0, 4476, 4495, 4485, 4486, 4281, 1192, 0,
	0, 1192, 4491, 0, 4364, 4487, 4489, 4367, 4498, 4468,
	0, 0, 4499, 1198, 4383, 1198, 0, 4516, 4502, 4517,
	4500, 4506, 2046, 0, 4511, 4515, 0, 0, 2047, 4523,
	0, 660, 0, 0, 0, 0, 0, 4519, 3926, 4526,
	3926, 0, 0, 4518, 0, 4520, 4522, 0, 4527, 0,
	0, 4540, 256, 0, 256, 0, 0, 0, 256, 0,
	4542, 0, 4539, 0, 0, 2537, 2537, 0, 0, 0,
	0, 1456, 1258, 256, 0, 256, 1196, 0, 1196, 4555,
	256, 1456, 676, 1076, 1076, 4551, 4548, 256, 1456, 4546,
	0, 4549, 1076, 4556, 1076, 1076, 4553, 4559, 0, 0,
	4568, 0, 1974, 4565, 4574, 4571, 0, 0, 4577, 4579,
	4575, 4578, 0, 2873, 256, 4572, 4576, 4573, 0, 0,
	0, 256, 0, 4586, 4582, 4587, 0, 0, 0, 0,
	4589, 4588, 0, 4591, 0, 4592, 0, 2048, 0, 0,
	0, 2533, 2533, 4596, 0, 0, 4593, 0, 0, 4590,
	1076, 4601, 0, 4603, 2052, 0, 4598, 4604, 0, 4606,
	0, 744, 4597, 4600, 0, 0, 0, 0, 0, 0,
	258, 4607, 0, 0, 0, 0, 0, 0, 0, 0,
	1193, 3158, 1193, 0, 0, 0, 0, 4566, 4567, 0,
	0, 0, 0, 1194, 1194, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 2537,
	2537, 2537, 0, 0, 3184, 0, 73, 0, 0, 0,
	0, 0, 4448, 0, 2049, 2054, 0, 0, 0, 3197,
	0, 0, 77, 0, 0, 0, 0, 0, 3009, 3010,
	0, 0, 0, 4602, 0, 0, 0, 0, 0, 0,
	3215, 0, 0, 2533, 2533, 2533, 2533, 2533, 2533, 2533,
	2533, 2533, 2533, 2533, 2533, 2533, 2533, 2533, 2533, 2533,
	2533, 2533, 84, 2533, 1194, 0, 0, 0, 0, 1192,
	0, 1192, 0, 0, 0, 0, 1194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 0, 2050, 0, 846,
	0, 0, 0, 0, 0, 256, 0, 0, 256, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 90, 101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 1194, 0, 0, 2046, 0, 0, 0, 2055,
	0, 2047, 0, 2056, 0, 1039, 0, 1443, 1263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 256, 0, 0, 0, 0,
	256, 0, 3128, 3129, 3130, 91, 256, 2798, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 3290, 256, 1263, 0, 0, 660, 0,
	256, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	2790, 2788, 744, 0, 0, 0, 852, 2792, 2794, 2784,
	0, 0, 0, 0, 0, 0, 0, 3197, 1555, 0,
	1263, 1263, 3291, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 1568, 1258, 256, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 256, 0, 2052, 0, 0,
	0, 0, 2240, 0, 0, 0, 0, 256, 256, 0,
	256, 0, 256, 0, 256, 0, 256, 0, 0, 0,
	0, 0, 0, 72, 0, 1594, 0, 0, 2623, 0,
	0, 0, 0, 0, 3754, 0, 0, 2272, 0, 73,
	2273, 0, 2274, 0, 0, 0, 2051, 0, 94, 0,
	1427, 0, 0, 0, 256, 77, 0, 0, 0, 0,
	3105, 3106, 0, 3123, 3124, 3125, 0, 2049, 2054, 0,
	0, 0, 0, 1438, 0, 0, 0, 0, 726, 0,
	0, 0, 744, 3499, 0, 0, 0, 0, 0, 1432,
	0, 0, 1334, 0, 0, 84, 0, 0, 0, 180,
	97, 0, 100, 3806, 0, 3105, 3106, 0, 3123, 3124,
	3125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2786, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 846, 2800, 847, 3120, 0, 0, 0, 145,
	1194, 0, 1194, 0, 0, 0, 104, 0, 0, 0,
	2050, 90, 101, 0, 2799, 2791, 2789, 2793, 2795, 2785,
	2787, 2801, 0, 0, 0, 0, 3511, 0, 2797, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	3120, 0, 0, 3527, 0, 0, 0, 0, 0, 0,
	2537, 2537, 2055, 0, 0, 0, 2056, 147, 0, 0,
	0, 2804, 0, 0, 0, 0, 1438, 0, 91, 0,
	0, 0, 184, 0, 1263, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 3111, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 660,
	219, 0, 0, 0, 0, 0, 2043, 0, 1438, 0,
	1438, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 183, 660, 0, 0, 0, 0, 0, 0,
	256, 3111, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 2044, 0, 0, 3126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	1268, 0, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,
	2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,
	2537, 0, 2537, 0, 0, 0, 0, 0, 0, 0,
	3121, 0, 0, 0, 0, 0, 0, 3618, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 1268, 0, 676,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 2645,
	0, 0, 0, 3491, 3492, 256, 0, 0, 256, 2051,
	0, 2805, 256, 0, 256, 3121, 0, 0, 0, 1258,
	2796, 256, 256, 0, 1268, 1268, 2661, 3992, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 4004, 0,
	0, 0, 180, 97, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4025, 0, 0, 0, 0, 0, 0, 0, 224,
	1039, 0, 0, 0, 1039, 2701, 0, 847, 0, 0,
	0, 0, 145, 0, 0, 0, 256, 0, 0, 0,
	1419, 0, 0, 0, 1419, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 3122, 226, 3554, 3555, 3556, 3557, 3558,
	3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568,
	3569, 3570, 3571, 3572, 256, 3576, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 3122, 0,
	256, 2815, 0, 225, 0, 0, 0, 2533, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 1456, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 2856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2701, 0, 660, 0,
	0, 0, 0, 0, 2533, 0, 0, 2885, 852, 0,
	2701, 2701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3117, 3118, 3119, 0, 256, 0, 0, 3116,
	3114, 3115, 3107, 3108, 3109, 3110, 3112, 3113, 0, 0,
	0, 0, 1438, 1438, 0, 256, 1258, 256, 0, 0,
	0, 1456, 0, 1456, 1268, 256, 0, 0, 1258, 0,
	1258, 0, 1258, 0, 0, 0, 0, 3117, 3118, 3119,
	0, 0, 0, 0, 3116, 3114, 3115, 3107, 3108, 3109,
	3110, 3112, 3113, 0, 2196, 0, 0, 0, 256, 256,
	256, 256, 1258, 0, 0, 1258, 0, 256, 0, 256,
	1272, 2210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2211, 0, 0, 0, 0, 1438, 0, 0, 0,
	0, 0, 0, 2219, 0, 2222, 2223, 2224, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 256, 2166,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2533, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 3880, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 4286, 1733, 0, 1456, 0, 1714,
	1715, 0, 0, 0, 0, 1757, 1758, 1759, 0, 0,
	1263, 0, 0, 0, 0, 4303, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 3494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 1739, 1740, 1741,
	1742, 0, 0, 0, 1736, 0, 0, 1722, 0, 0,
	0, 1419, 0, 1733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4387, 0, 256, 4388,
	0, 0, 0, 0, 1334, 0, 0, 0, 1731, 1732,
	0, 0, 0, 0, 256, 1739, 1740, 1741, 1742, 660,
	0, 0, 0, 0, 660, 1722, 0, 660, 0, 0,
	660, 660, 0, 0, 4062, 0, 660, 0, 0, 0,
	0, 1737, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1456, 1039, 0, 0,
	0, 1754, 0, 1419, 1764, 0, 0, 0, 0, 0,
	1744, 1746, 0, 0, 0, 4062, 0, 0, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 256, 256, 0, 1731, 1732, 0, 0,
	0, 2334, 0, 0, 0, 0, 2537, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 2701, 2701, 256, 0, 3251, 0, 0, 1737,
	0, 0, 0, 0, 0, 2701, 0, 0, 3265, 0,
	0, 0, 0, 0, 0, 0, 2701, 3265, 0, 2701,
	3265, 0, 0, 3265, 0, 2334, 0, 0, 2662, 1272,
	0, 0, 0, 2537, 1743, 0, 256, 256, 3251, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 0, 0, 0, 0, 3251,
	256, 0, 3317, 3317, 0, 1258, 0, 0, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2701, 0, 3336, 2701, 3251, 0, 0, 2701, 2701, 3251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 3363, 0, 0, 3365, 2701, 0, 0,
	256, 0, 1738, 0, 256, 0, 1268, 0, 0, 4070,
	2806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 1188, 0, 0, 2856, 0, 1755, 1258,
	0, 256, 0, 0, 2701, 0, 660, 0, 0, 0,
	0, 0, 0, 2701, 0, 0, 2537, 1734, 1730, 0,
	1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 0,
	0, 0, 0, 0, 256, 2856, 4107, 0, 2856, 251,
	251, 656, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 1263, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 1747, 1748, 1749, 1757, 1758, 1759, 3462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2917, 1750, 1745, 0, 3468, 0, 0, 1258, 256,
	1717, 256, 0, 0, 1714, 1715, 1753, 1258, 1763, 0,
	0, 2166, 0, 0, 1756, 1734, 1730, 0, 1727, 1725,
	1726, 1718, 1719, 1720, 1721, 1723, 1724, 0, 1745, 0,
	0, 0, 1714, 1715, 1716, 1717, 0, 256, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 1419, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	3105, 3106, 0, 3123, 3124, 3125, 0, 0, 1733, 0,
	0, 0, 0, 3532, 0, 0, 0, 1716, 0, 4233,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 1740, 1741, 1742, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 3489,
	0, 0, 0, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 3120, 0, 0, 0, 0,
	1739, 1740, 1741, 1742, 0, 0, 0, 0, 0, 0,
	1722, 1754, 0, 0, 1764, 0, 0, 0, 0, 0,
	1744, 1746, 0, 0, 0, 0, 0, 0, 1739, 1740,
	1741, 1742, 0, 0, 0, 0, 0, 1760, 1722, 1761,
	0, 0, 0, 0, 0, 0, 1731, 1732, 0, 0,
	0, 0, 256, 256, 0, 1744, 1746, 0, 0, 0,
	0, 0, 0, 1419, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 660, 0, 0, 0, 1737,
	0, 1731, 1732, 1744, 1746, 0, 3111, 0, 0, 1419,
	0, 0, 0, 0, 0, 0, 1456, 1456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1456, 1456, 1456, 0, 1737, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 3127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 1737, 3317, 0, 0, 0, 0, 3126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 0, 0, 744, 0, 0, 0,
	3121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 256, 0, 0, 0, 0, 0, 0,
	0, 1419, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 3251, 256, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 256, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 256, 0, 1743, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 256, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1419, 0, 0,
	0, 2701, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 2885, 2885, 0, 0, 0, 0, 852, 852, 2701,
	0, 0, 0, 2856, 2856, 0, 0, 852, 2701, 0,
	0, 0, 0, 3122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 256, 0,
	0, 1728, 1729, 1735, 1756, 1734, 1730, 0, 1727, 1725,
	1726, 1718, 1719, 1720, 1721, 1723, 1724, 0, 0, 0,
	0, 3056, 0, 0, 0, 3057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721,
	1723, 1724, 0, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3348, 0, 0, 0, 0, 0,
	3845, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3379, 0, 0, 0, 0, 0,
	0, 1244, 0, 1244, 1244, 3386, 0, 0, 0, 0,
	0, 0, 3117, 3118, 3119, 0, 0, 0, 0, 3116,
	3114, 3115, 3107, 3108, 3109, 3110, 3112, 3113, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 1456, 0,
	256, 0, 0, 0, 0, 0, 0, 3427, 3428, 0,
	0, 0, 1331, 256, 0, 0, 0, 0, 1436, 0,
	0, 0, 0, 0, 0, 1283, 0, 0, 0, 0,
	0, 1438, 0, 0, 706, 0, 0, 0, 0, 0,
	0, 0, 0, 2701, 2701, 0, 3317, 0, 1025, 0,
	0, 0, 1025, 0, 689, 2701, 0, 0, 0, 0,
	690, 0, 3928, 0, 3928, 1456, 0, 0, 0, 0,
	0, 0, 0, 2701, 0, 3265, 0, 0, 1456, 1456,
	256, 3251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 1715, 3251, 256, 3251, 256, 1458, 691, 1464,
	0, 1470, 0, 1556, 1557, 0, 0, 0, 0, 692,
	2701, 0, 2701, 256, 0, 1745, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 1263, 0, 0,
	693, 0, 0, 0, 0, 0, 0, 2701, 0, 0,
	1199, 0, 3996, 0, 0, 0, 0, 0, 0, 0,
	712, 256, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 256, 0, 0, 0, 1558, 1736, 1563, 0, 694,
	0, 0, 0, 0, 0, 1733, 0, 1572, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3928, 0, 695, 1456, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 0, 0, 697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3488, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 0, 0, 1643, 0, 1739, 1740, 1741,
	1742, 0, 0, 0, 0, 0, 711, 1722, 0, 0,
	0, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 1744, 1746, 0, 2701, 0, 3265, 0, 1419,
	4100, 0, 0, 0, 0, 708, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 4119, 0, 4119, 1731, 1732,
	1419, 0, 0, 0, 0, 0, 0, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 1039, 1785, 3251,
	256, 0, 0, 0, 1798, 0, 0, 0, 0, 0,
	0, 1039, 718, 0, 699, 0, 0, 0, 0, 4100,
	0, 0, 0, 0, 0, 0, 0, 2701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4182, 0, 719, 0, 700, 0, 0, 0, 0, 0,
	0, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3928, 3928, 0, 0, 0, 0,
	0, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	720, 256, 256, 0, 0, 0, 0, 701, 1903, 0,
	1436, 716, 717, 714, 0, 0, 0, 0, 1419, 709,
	3716, 0, 702, 0, 0, 3532, 0, 72, 0, 1856,
	1856, 1856, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 3317, 0, 73, 3317, 0, 0, 0, 0, 1244,
	4100, 0, 0, 0, 1738, 0, 1436, 0, 0, 77,
	0, 0, 703, 710, 0, 3928, 0, 1419, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 3928, 0, 1714,
	1715, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 713, 0, 0, 3783, 3784, 3785, 0, 256, 84,
	0, 0, 0, 1745, 0, 722, 0, 0, 0, 0,
	1717, 1272, 0, 0, 0, 0, 707, 3996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3928, 0, 256, 3928, 0, 0, 846, 0, 0, 0,
	0, 0, 0, 3265, 1716, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 1736, 90, 101, 0, 0, 0,
	0, 0, 0, 1733, 0, 0, 0, 0, 0, 1456,
	0, 1456, 0, 0, 0, 1025, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 1734, 1730, 0,
	1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 1419,
	0, 0, 1419, 0, 4348, 0, 0, 0, 0, 0,
	0, 0, 91, 0, 2998, 0, 0, 4119, 0, 0,
	256, 0, 0, 1199, 0, 0, 0, 1199, 0, 0,
	0, 1199, 0, 0, 0, 1739, 1740, 1741, 1742, 2701,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 0, 0, 3532, 0, 0, 1199, 0, 0,
	1744, 1746, 0, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 1456, 0, 0, 0, 2153, 1199, 0, 0,
	2160, 0, 1199, 0, 0, 0, 1731, 1732, 0, 0,
	0, 2172, 0, 0, 0, 0, 1199, 0, 72, 256,
	0, 0, 0, 0, 0, 0, 0, 2184, 0, 2184,
	0, 0, 0, 0, 73, 2191, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4100, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 2160, 0, 0, 2215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 1272, 0, 2701, 0, 180, 97, 0, 100,
	2235, 3928, 0, 3928, 0, 0, 1456, 0, 0, 0,
	0, 0, 0, 2248, 0, 2250, 0, 2252, 0, 2254,
	0, 2255, 0, 224, 0, 0, 0, 846, 0, 0,
	0, 847, 0, 0, 0, 0, 145, 1419, 0, 0,
	0, 104, 0, 0, 0, 0, 90, 101, 0, 1456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2277,
	0, 4042, 1743, 4044, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 0, 2885, 0, 0, 0, 0, 0,
	0, 0, 0, 2701, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 2885, 184,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 4089, 0, 0, 0,
	0, 2309, 0, 2313, 0, 0, 0, 0, 0, 1552,
	2327, 0, 0, 0, 0, 0, 0, 2336, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 0, 2376, 0, 2378, 2379, 2380, 2381, 0,
	0, 0, 0, 0, 0, 1734, 1730, 0, 1727, 1725,
	1726, 1718, 1719, 1720, 1721, 1723, 1724, 2405, 0, 0,
	0, 0, 0, 0, 0, 4154, 0, 1199, 1785, 1199,
	0, 0, 2420, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 2450, 2453,
	2456, 2459, 0, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	0, 1934, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 1715, 0, 0, 0, 2604,
	0, 2529, 0, 2540, 2542, 2547, 0, 180, 97, 0,
	100, 0, 1419, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 1419, 0, 0, 0,
	0, 0, 847, 0, 0, 0, 0, 145, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 1733, 226,
	2647, 0, 0, 1244, 0, 0, 1199, 1244, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 2172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 225, 2991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	1739, 1740, 1741, 1742, 0, 0, 1419, 0, 1419, 0,
	1722, 0, 0, 0, 0, 0, 0, 0, 1272, 1272,
	1550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1419, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 1746, 0, 0, 1436,
	0, 1199, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 1732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1419, 0, 0, 0, 0,
	0, 0, 0, 2160, 1737, 0, 0, 0, 0, 0,
	0, 2172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2818, 2819, 0, 2821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1419, 0, 1199, 0, 1199, 0, 1199, 0,
	0, 2915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 1199, 0, 0, 0, 0,
	2925, 0, 2928, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 1199,
	1199, 1199, 0, 0, 1419, 0, 0, 1714, 1715, 0,
	1747, 1748, 1749, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 0, 2953, 1436, 2955, 1436, 1743, 0, 0,
	1750, 1745, 2961, 0, 1419, 0, 0, 0, 1717, 0,
	0, 0, 0, 0, 0, 0, 1763, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2941, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 1716, 2989, 0, 1419, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1768, 0, 1934, 1934,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 2508, 2509, 2510, 2511,
	2504, 2505, 2506, 2507, 0, 1419, 0, 0, 0, 0,
	0, 0, 0, 1739, 1740, 1741, 1742, 0, 0, 0,
	2992, 2993, 0, 1722, 0, 0, 2999, 0, 0, 0,
	1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721,
	1723, 1724, 0, 0, 0, 3013, 3014, 0, 0, 0,
	0, 2420, 0, 0, 0, 1419, 0, 1199, 0, 1754,
	3021, 0, 1764, 0, 0, 1714, 1715, 0, 1744, 1746,
	0, 0, 0, 0, 0, 0, 3035, 2484, 2485, 2486,
	2487, 0, 0, 0, 0, 1760, 0, 1761, 0, 1745,
	0, 0, 0, 3047, 1731, 1732, 1717, 0, 0, 0,
	2496, 2497, 2498, 2499, 2492, 2493, 2494, 2495, 2500, 2501,
	2502, 2503, 1752, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 1199, 1737, 0, 0,
	1716, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 2480, 2481, 2482, 2483, 2488, 2489, 2490,
	2491, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 2547, 2547, 2547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	1039, 1039, 0, 0, 0, 3162, 0, 0, 0, 0,
	0, 1739, 1740, 1741, 1742, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1244, 0, 0, 0, 1436, 1436,
	1743, 0, 1199, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 1744, 1746, 0, 3249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 1755, 0, 0, 0,
	0, 0, 1731, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1025, 0, 0, 1039, 0,
	0, 3299, 3301, 0, 2172, 0, 1934, 0, 0, 1025,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 3284, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 1728,
	1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718,
	1719, 1720, 1721, 1723, 1724, 0, 1199, 0, 0, 2416,
	0, 0, 0, 2417, 0, 3376, 0, 0, 0, 3380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 1743, 1199,
	0, 1199, 0, 72, 1072, 46, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 1738, 73,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 3432,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 67, 0, 0, 0,
	255, 255, 255, 48, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 47, 0, 84, 0, 0, 781, 0,
	0, 0, 0, 0, 3471, 0, 1436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	68, 0, 781, 0, 0, 0, 0, 51, 0, 0,
	0, 0, 57, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 3484, 0, 49, 0, 104, 0, 0, 0,
	0, 90, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720,
	1721, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 2327, 0, 0, 0, 0, 0, 3486,
	3487, 0, 0, 3490, 0, 0, 0, 3493, 91, 0,
	0, 0, 0, 0, 0, 0, 3497, 0, 0, 0,
	0, 0, 0, 0, 0, 3504, 0, 0, 3162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3516, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3539, 3540, 0, 3541, 3542, 3543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3549, 0,
	0, 0, 3551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3579, 3580, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3591, 0, 0, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 1199, 1199, 0, 3600, 0, 0, 0,
	0, 0, 56, 0, 0, 0, 0, 59, 0, 1199,
	706, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 58, 180, 97, 0, 100, 0, 1199, 0, 54,
	689, 0, 0, 152, 0, 0, 690, 0, 0, 1199,
	55, 0, 1199, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 62, 0, 1934,
	0, 0, 145, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 3643, 0, 691, 0, 149, 1199, 1199, 0,
	0, 0, 0, 0, 0, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 3662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 3686, 712, 2172, 0, 0,
	0, 0, 1934, 0, 0, 184, 0, 0, 2172, 0,
	0, 0, 0, 225, 0, 694, 0, 0, 3744, 0,
	0, 1199, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 2172, 219, 0, 0, 0, 3760, 695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 1199, 0, 3, 696,
	0, 0, 697, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 721, 0,
	1199, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 3808, 1856, 0, 0, 0, 1199, 0,
	0, 0, 0, 3778, 1199, 0, 1199, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3823, 3824, 0,
	0, 1199, 1199, 3828, 3829, 0, 0, 0, 3832, 3833,
	0, 0, 0, 0, 0, 3837, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 3841, 0, 0, 0,
	0, 0, 255, 0, 255, 255, 0, 0, 255, 0,
	699, 0, 3846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 0, 1199, 0, 0, 719, 0,
	700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 255, 255, 0, 0, 255,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 716, 717, 714,
	0, 0, 1934, 0, 0, 709, 0, 0, 702, 0,
	0, 0, 0, 0, 0, 3943, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2172,
	255, 255, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1934, 703, 710,
	0, 0, 0, 0, 255, 255, 0, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 2172, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 4013, 0, 0, 1934,
	1934, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 1715,
	1934, 1747, 1748, 1749, 1757, 1758, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 1750, 1745, 0, 0, 0, 0, 1199, 1199, 1717,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 4057, 4058, 4059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2327, 0, 0,
	4068, 4069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4108, 0, 0, 0, 0, 4077, 4080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 1740, 1741, 1742, 0, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4120, 0, 0, 0,
	0, 0, 0, 0, 4126, 0, 0, 0, 0, 0,
	1754, 0, 0, 1764, 4133, 0, 0, 1025, 0, 1744,
	1746, 0, 0, 0, 1199, 0, 4141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 1761, 0,
	0, 0, 0, 1934, 0, 1731, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 4223, 1436, 1878, 0,
	1195, 0, 0, 1199, 255, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 255,
	1878, 255, 0, 0, 0, 0, 781, 0, 1199, 1199,
	1199, 0, 0, 781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 1199, 0, 255, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 4253, 0, 0, 4256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4306, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1025, 1025,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 0, 1199,
	0, 1199, 0, 0, 0, 4358, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2327,
	0, 0, 0, 0, 0, 1199, 0, 0, 4080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4393, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 781, 0, 0, 1199, 0, 1199,
	0, 0, 0, 0, 0, 1753, 1025, 0, 0, 0,
	1728, 1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726,
	1718, 1719, 1720, 1721, 1723, 1724, 0, 1199, 0, 0,
	0, 0, 0, 0, 3851, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 255, 0, 0, 4453, 0, 255, 0, 4416, 4416,
	4416, 0, 255, 0, 0, 0, 1199, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	255, 0, 0, 1199, 0, 0, 255, 0, 0, 4437,
	0, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 255, 0, 0,
	255, 0, 0, 0, 0, 1199, 1199, 1199, 0, 0,
	0, 0, 4416, 0, 0, 0, 0, 1199, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 781, 255, 0, 255, 0, 255, 0,
	255, 0, 255, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 1714, 1715, 0, 1747, 1748, 1749,
	1757, 1758, 1759, 1085, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 1745, 0,
	255, 0, 0, 0, 0, 1717, 0, 0, 1199, 0,
	1199, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	257, 257, 0, 0, 1199, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 4416, 4560, 0, 0, 0, 0, 257, 1733, 0,
	4564, 1934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 1740, 1741, 1742, 0, 0, 0, 0, 1199, 0,
	1722, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1764,
	0, 0, 0, 0, 0, 1744, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	1195, 0, 1760, 0, 1761, 0, 0, 0, 0, 0,
	0, 1731, 1732, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 1737, 255, 0, 0, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 1199, 0, 0, 1199, 0,
	0, 255, 1199, 0, 255, 0, 0, 0, 255, 0,
	255, 0, 1199, 1199, 0, 0, 0, 255, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756,
	1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	3502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1061, 106, 255, 1714, 1715, 0, 1747, 1748, 1749, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 255, 0, 0, 1750, 1745, 0, 0,
	0, 255, 0, 0, 1717, 0, 1199, 0, 1199, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 255, 255, 255, 1716, 0,
	0, 0, 0, 255, 0, 255, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 257, 257, 0, 0, 257, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	1740, 1741, 1742, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1020, 0, 0, 0, 0, 0,
	0, 0, 257, 1281, 257, 257, 0, 1281, 257, 257,
	0, 1281, 0, 0, 0, 1754, 0, 0, 1764, 0,
	0, 257, 0, 0, 1744, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 0,
	0, 1760, 1281, 1761, 0, 0, 0, 0, 0, 0,
	1731, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 1752, 257,
	257, 0, 0, 1714, 1715, 0, 1747, 1748, 1749, 1757,
	1758, 1759, 0, 1737, 0, 0, 0, 1281, 0, 0,
	0, 0, 1281, 257, 257, 0, 1750, 1745, 0, 0,
	0, 0, 0, 0, 1717, 0, 1281, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 1195, 0, 0, 1733, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 773, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 1743, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 1739,
	1740, 1741, 1742, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 255,
	255, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1764, 0,
	255, 0, 0, 0, 1744, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 1761, 0, 0, 0, 0, 0, 0,
	1731, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 255, 0, 255, 0, 0, 1752, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 255, 0, 0, 0,
	1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734,
	1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 3059,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	255, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 255, 257, 257,
	257, 0, 0, 0, 0, 257, 0, 1195, 0, 0,
	0, 0, 257, 0, 0, 1281, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 257,
	255, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 1747, 1748, 1749, 1757, 1758, 1759, 106, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 1745, 0, 255, 0, 255, 0, 0,
	1717, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	106, 0, 106, 1733, 106, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734,
	1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 3058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1020, 106, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	106, 0, 0, 0, 0, 1739, 1740, 1741, 1742, 0,
	106, 0, 106, 0, 0, 1722, 0, 0, 0, 0,
	257, 1281, 1281, 257, 0, 0, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1764, 0, 0, 0, 0, 0,
	1744, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 257, 1760, 0, 1761,
	257, 0, 0, 0, 0, 257, 1731, 1732, 1195, 1195,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 257, 0, 257,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 1737,
	0, 0, 0, 0, 1281, 0, 1281, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 257, 0, 0, 257,
	0, 1762, 0, 1000, 0, 1279, 0, 1281, 0, 1281,
	1281, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 257, 0, 257, 0, 257, 0, 257,
	1784, 257, 0, 0, 1790, 0, 0, 0, 0, 1337,
	0, 0, 0, 1337, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 1077, 1743, 0, 0, 0, 0, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 255,
	1281, 0, 0, 1279, 0, 0, 0, 0, 1279, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 1279, 255, 0, 0, 799, 0, 255, 0,
	0, 0, 0, 0, 1876, 0, 1879, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 801, 0, 1195, 0,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	803, 0, 820, 0, 255, 0, 1753, 0, 0, 0,
	0, 1728, 1729, 1735, 1756, 1734, 1730, 0, 1727, 1725,
	1726, 1718, 1719, 1720, 1721, 1723, 1724, 804, 0, 0,
	0, 0, 805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 828, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 1281, 0, 800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 0, 0, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 830,
	0, 0, 0, 0, 721, 0, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 257, 0, 0, 0, 257, 0, 257,
	0, 0, 0, 0, 0, 0, 257, 257, 0, 0,
	0, 0, 1281, 1281, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 1878, 0,
	1878, 0, 0, 0, 0, 0, 0, 824, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	255, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 809, 257, 0, 0, 0,
	0, 773, 0, 0, 0, 0, 811, 0, 773, 0,
	0, 1279, 0, 0, 0, 0, 0, 255, 0, 257,
	1281, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 1020, 0, 1020, 1281, 0, 812, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 257, 0, 0, 1281, 1279, 0, 0,
	0, 257, 0, 798, 0, 821, 0, 0, 1279, 0,
	0, 0, 0, 0, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 819, 1281,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 814, 1281, 0, 815, 833, 0,
	832, 0, 0, 0, 816, 0, 0, 0, 0, 0,
	257, 0, 257, 0, 0, 0, 0, 0, 817, 0,
	257, 0, 0, 825, 0, 0, 0, 0, 0, 834,
	0, 831, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 1000, 0, 0,
	1000, 1000, 0, 257, 257, 257, 257, 0, 0, 0,
	0, 0, 257, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 255, 1279, 1279, 0,
	0, 0, 0, 257, 0, 2394, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1020, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	1878, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 1338, 1279, 0, 1279, 1338, 1182, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 1279, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 1878, 0, 1279, 0, 1279, 1279, 1279, 0, 0,
	0, 0, 0, 1878, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 773, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 1878, 0, 255, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 106, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 1281, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 257, 257,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 106,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 257, 0, 257, 255, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 106, 257, 1281, 106, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 1337, 0,
	1281, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 257, 1281, 0, 1281, 1878, 0, 1878,
	1281, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 106, 0, 0, 257, 0, 0, 1281, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 1279, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1281, 1281, 1280, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2394, 0, 0, 0,
	0, 0, 1281, 0, 257, 1281, 257, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 257, 0, 1338, 0, 0, 0, 0, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 1747, 1748, 1749, 1757, 1758, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 1750, 1745, 0, 0, 0, 0, 0, 0,
	1717, 0, 1279, 0, 0, 0, 1281, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1279, 0, 1279, 0, 0,
	0, 0, 0, 1733, 0, 0, 0, 0, 0, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 1740, 1741, 1742, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1764, 0, 0, 0, 0, 0,
	1744, 1746, 1280, 0, 1280, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 1761,
	0, 0, 1280, 1280, 0, 0, 1731, 1732, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1280, 0, 1280, 1280, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 106, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 106, 0, 0, 106, 0, 257, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 1338, 0,
	0, 0, 257, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 1743, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 0, 0, 0, 0, 0, 1281, 1281,
	1281, 0, 0, 1182, 0, 0, 1020, 0, 0, 0,
	1337, 0, 0, 0, 0, 1281, 0, 0, 1755, 0,
	106, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 1753, 0, 0, 0,
	0, 1728, 1729, 1735, 1756, 1734, 1730, 0, 1727, 1725,
	1726, 1718, 1719, 1720, 1721, 1723, 1724, 0, 0, 0,
	1338, 0, 0, 0, 0, 3055, 0, 0, 0, 0,
	0, 0, 0, 1714, 1715, 0, 1747, 1748, 1749, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 1745, 0, 1281,
	0, 1281, 0, 0, 1717, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 1716, 0,
	0, 0, 0, 0, 0, 0, 1279, 0, 1736, 0,
	0, 1279, 0, 0, 0, 0, 0, 1733, 0, 0,
	1280, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 257, 0, 0, 0, 0,
	1279, 0, 1279, 0, 0, 0, 1337, 1281, 0, 257,
	0, 257, 0, 773, 0, 0, 0, 0, 1281, 0,
	0, 0, 1338, 0, 1279, 0, 106, 0, 257, 0,
	0, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 1182, 1182, 1281, 1281, 0, 1739,
	1740, 1741, 1742, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 1281, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 257, 1279, 1279, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1764, 0,
	1279, 0, 1280, 0, 1744, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 1281, 0, 0,
	0, 1760, 0, 1761, 0, 0, 0, 1281, 0, 0,
	1731, 1732, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 1337, 0, 0, 1280, 0, 0, 0, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	1281, 0, 0, 1280, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 1751, 1281, 0, 0, 0, 0, 0,
	0, 0, 1337, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 257, 1743, 0, 0, 1281,
	1281, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 1281, 1755, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734,
	1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 3054,
	0, 0, 0, 257, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 1715, 1338, 1747, 1748, 1749, 1757,
	1758, 1759, 0, 0, 0, 257, 0, 0, 0, 1279,
	1338, 0, 0, 0, 0, 0, 1750, 1745, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 0, 0,
	0, 1338, 1763, 0, 1279, 1279, 1279, 0, 0, 0,
	0, 106, 257, 0, 0, 1280, 1280, 0, 0, 0,
	0, 1279, 106, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 1337, 0, 0, 0, 106, 0, 1733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	1740, 1741, 1742, 0, 1280, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1764, 0,
	0, 0, 0, 0, 1744, 1746, 1280, 0, 0, 0,
	0, 0, 1280, 0, 1280, 1337, 0, 1337, 1338, 0,
	0, 1760, 0, 1761, 0, 0, 0, 0, 0, 0,
	1731, 1732, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 1280, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 1762, 0, 0, 0, 0,
	0, 0, 1280, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 2394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 1279, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 1338, 0, 0, 0, 0, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 1279, 1279, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 1338, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734,
	1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 3053,
	0, 0, 0, 0, 0, 1714, 1715, 0, 1747, 1748,
	1749, 1757, 1758, 1759, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 1279, 0, 1750, 1745,
	0, 0, 0, 0, 0, 0, 1717, 0, 1338, 0,
	106, 0, 0, 106, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 0, 0, 1279, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 1715, 0, 1747, 1748, 1749, 1757, 1758, 1759, 0,
	0, 1739, 1740, 1741, 1742, 0, 0, 0, 0, 0,
	0, 1722, 0, 1750, 1745, 0, 0, 0, 0, 0,
	0, 1717, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1764, 0, 0, 0, 0, 1716, 1744, 1746, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 1760, 1733, 1761, 0, 0, 1279, 0,
	0, 1280, 1731, 1732, 0, 0, 0, 0, 1279, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 0, 0, 0, 1279, 1280, 1280, 1280, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 1739, 1740, 1741, 1742,
	0, 0, 0, 0, 0, 0, 1722, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1764, 0, 0, 0, 0,
	0, 1744, 1746, 0, 0, 0, 0, 0, 1714, 1715,
	0, 1747, 1748, 1749, 1757, 1758, 1759, 0, 1760, 0,
	1761, 0, 0, 0, 0, 0, 0, 1731, 1732, 0,
	0, 1750, 1745, 0, 0, 0, 0, 0, 1743, 1717,
	0, 0, 0, 0, 0, 1752, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 1755, 0, 0, 1338, 0, 1338,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 1740, 1741, 1742, 0, 0,
	0, 0, 0, 0, 1722, 1338, 0, 0, 0, 0,
	0, 0, 1753, 1743, 0, 0, 1338, 1728, 1729, 1735,
	1756, 1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720,
	1721, 1723, 1724, 1738, 0, 0, 0, 0, 0, 0,
	1754, 2417, 0, 1764, 1280, 1280, 0, 0, 0, 1744,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 1280, 0, 0, 0, 0, 1760, 0, 1761, 0,
	0, 0, 0, 1338, 0, 1731, 1732, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 1280, 1280, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 1338, 0, 1753, 0, 0,
	0, 0, 1728, 1729, 1735, 1756, 1734, 1730, 1751, 1727,
	1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 0, 0,
	0, 0, 4349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	1728, 1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726,
	1718, 1719, 1720, 1721, 1723, 1724, 0, 0, 0, 0,
	4345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 1280, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 1340, 273, 274, 1341, 1342, 1343, 1280, 1344, 602,
	1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 1349,
	607, 284, 285, 286, 287, 288, 289, 1350, 1351, 0,
	290, 608, 609, 610, 1352, 291, 292, 611, 1353, 1282,
	1354, 293, 294, 295, 296, 297, 298, 299, 0, 1355,
	301, 302, 303, 300, 304, 1356, 305, 0, 306, 307,
	308, 309, 310, 311, 1357, 312, 313, 314, 1140, 315,
	316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318,
	319, 320, 0, 321, 612, 613, 1365, 325, 322, 323,
	1366, 326, 324, 1367, 327, 328, 329, 1368, 1369, 330,
	331, 332, 1370, 333, 334, 1371, 335, 336, 337, 1372,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 1373, 262, 1374, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 1375, 356, 1376, 1377, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1378,
	368, 620, 1379, 621, 369, 1380, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 1381, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1382, 1142, 384, 625, 626, 1383, 627, 1384, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1385, 398,
	400, 399, 1386, 401, 629, 1147, 402, 403, 1148, 1387,
	404, 0, 0, 0, 405, 406, 409, 1388, 1389, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1390, 264, 1151, 448, 449, 1391, 630,
	450, 631, 452, 453, 1392, 0, 454, 0, 1393, 1394,
	456, 457, 458, 1395, 1396, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1397, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 1398,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 1399, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1400, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1401, 532,
	533, 531, 534, 535, 536, 1402, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 1403, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 1404, 561,
	562, 0, 558, 1405, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 1406, 571, 643, 644, 645, 646, 1407,
	580, 1408, 572, 573, 574, 647, 575, 648, 1409, 576,
	577, 578, 579, 0, 581, 582, 1410, 1411, 583, 584,
	585, 587, 588, 586, 589, 1412, 590, 1413, 0, 591,
	592, 593, 649, 650, 651, 1414, 595, 594, 596, 652,
	1415, 1416, 1417, 1418, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 2582, 0, 0, 0, 0, 0, 0, 0,
	2583, 265, 267, 266, 268, 269, 270, 271, 272, 1340,
	273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345, 1346,
	1347, 1348, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 1349, 607, 284,
	285, 286, 287, 288, 289, 1350, 1351, 0, 290, 608,
	609, 610, 1352, 291, 292, 611, 1353, 1282, 1354, 293,
	294, 295, 296, 297, 298, 299, 0, 1355, 301, 302,
	303, 300, 304, 1356, 305, 0, 306, 307, 308, 309,
	310, 311, 1357, 312, 313, 314, 1140, 315, 316, 1358,
	1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319, 320,
	0, 321, 612, 613, 1365, 325, 322, 323, 1366, 326,
	324, 1367, 327, 328, 329, 1368, 1369, 330, 331, 332,
	1370, 333, 334, 1371, 335, 336, 337, 1372, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 1373, 262, 1374, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 1375,
	356, 1376, 1377, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 1378, 368, 620,
	1379, 621, 369, 1380, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 1143, 375, 376, 1381, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 1382,
	1142, 384, 625, 626, 1383, 627, 1384, 386, 387, 1144,
	628, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1385, 398, 400, 399,
	1386, 401, 629, 1147, 402, 403, 1148, 1387, 404, 0,
	0, 0, 405, 406, 409, 1388, 1389, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1390, 264, 1151, 448, 449, 1391, 630, 450, 631,
	452, 453, 1392, 0, 454, 0, 1393, 1394, 456, 457,
	458, 1395, 1396, 459, 460, 632, 1152, 461, 1153, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 1397, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 1398, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 1399, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 1400, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 1401, 532, 533, 531,
	534, 535, 536, 1402, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	1403, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 1404, 561, 562, 0,
	558, 1405, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 1406, 571, 643, 644, 645, 646, 1407, 580, 1408,
	572, 573, 574, 647, 575, 648, 1409, 576, 577, 578,
	579, 0, 581, 582, 1410, 1411, 583, 584, 585, 587,
	588, 586, 589, 1412, 590, 1413, 0, 591, 592, 593,
	649, 650, 651, 1414, 595, 594, 596, 652, 1415, 1416,
	1417, 1418, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 0, 0, 0, 0, 3510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3512, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3879, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4063, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3951, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3809, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3528, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3361, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2440, 265, 267, 266,
	268, 269, 270, 271, 272, 1340, 273, 274, 1341, 1342,
	1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 1349, 607, 284, 285, 286, 287, 288,
	289, 1350, 1351, 0, 290, 608, 609, 610, 1352, 291,
	292, 611, 1353, 1282, 1354, 293, 294, 295, 296, 297,
	298, 299, 0, 1355, 301, 302, 303, 300, 304, 1356,
	305, 0, 306, 307, 308, 309, 310, 311, 1357, 312,
	313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360, 1362,
	1363, 1364, 317, 318, 319, 320, 0, 321, 612, 613,
	1365, 325, 322, 323, 1366, 326, 324, 1367, 327, 328,
	329, 1368, 1369, 330, 331, 332, 1370, 333, 334, 1371,
	335, 336, 337, 1372, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	1373, 262, 1374, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 1375, 356, 1376, 1377, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1378, 368, 620, 1379, 621, 369, 1380,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 1381, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1382, 1142, 384, 625, 626,
	1383, 627, 1384, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1385, 398, 400, 399, 1386, 401, 629, 1147,
	402, 403, 1148, 1387, 404, 0, 0, 0, 405, 406,
	409, 1388, 1389, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1390, 264, 1151,
	448, 449, 1391, 630, 450, 631, 452, 453, 1392, 0,
	454, 0, 1393, 1394, 456, 457, 458, 1395, 1396, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1397, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 1398, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 1399,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1400,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1401, 532, 533, 531, 534, 535, 536, 1402,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 1403, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 1404, 561, 562, 0, 558, 1405, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 1406, 571, 643,
	644, 645, 646, 1407, 580, 1408, 572, 573, 574, 647,
	575, 648, 1409, 576, 577, 578, 579, 0, 581, 582,
	1410, 1411, 583, 584, 585, 587, 588, 586, 589, 1412,
	590, 1413, 0, 591, 592, 593, 649, 650, 651, 1414,
	595, 594, 596, 652, 1415, 1416, 1417, 1418, 597, 598,
	653, 599, 600, 601, 1430, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2134, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602,
	1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 1349,
	607, 284, 285, 286, 287, 288, 289, 1350, 1351, 0,
	290, 608, 609, 610, 1352, 291, 292, 611, 1353, 1282,
	1354, 293, 294, 295, 296, 297, 298, 299, 0, 1355,
	301, 302, 303, 300, 304, 1356, 305, 0, 306, 307,
	308, 309, 310, 311, 1357, 312, 313, 314, 1140, 315,
	316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318,
	319, 320, 0, 321, 612, 613, 1365, 325, 322, 323,
	1366, 326, 324, 1367, 327, 328, 329, 1368, 1369, 330,
	331, 332, 1370, 333, 334, 1371, 335, 336, 337, 1372,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 1373, 262, 1374, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 1375, 356, 1376, 1377, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1378,
	368, 620, 1379, 621, 369, 1380, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 1381, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1382, 1142, 384, 625, 626, 1383, 627, 1384, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1385, 398,
	400, 399, 1386, 401, 629, 1147, 402, 403, 1148, 1387,
	404, 0, 0, 0, 405, 406, 409, 1388, 1389, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1390, 264, 1151, 448, 449, 1391, 630,
	450, 631, 452, 453, 1392, 0, 454, 0, 1393, 1394,
	456, 457, 458, 1395, 1396, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1397, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 1398,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 1399, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1400, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1401, 532,
	533, 531, 534, 535, 536, 1402, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 1403, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 1404, 561,
	562, 0, 558, 1405, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 1406, 571, 643, 644, 645, 646, 1407,
	580, 1408, 572, 573, 574, 647, 575, 648, 1409, 576,
	577, 578, 579, 0, 581, 582, 1410, 1411, 583, 584,
	585, 587, 588, 586, 589, 1412, 590, 1413, 0, 591,
	592, 593, 649, 650, 651, 1414, 595, 594, 596, 652,
	1415, 1416, 1417, 1418, 597, 598, 653, 599, 600, 601,
	1332, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 1340, 273, 274,
	1341, 1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 1349, 607, 284, 285, 286,
	287, 288, 289, 1350, 1351, 0, 290, 608, 609, 610,
	1352, 291, 292, 611, 1353, 1282, 1354, 293, 294, 295,
	296, 297, 298, 299, 0, 1355, 301, 302, 303, 300,
	304, 1356, 305, 0, 306, 307, 308, 309, 310, 311,
	1357, 312, 313, 314, 1140, 315, 316, 1358, 1359, 1361,
	1360, 1362, 1363, 1364, 317, 318, 319, 320, 0, 321,
	612, 613, 1365, 325, 322, 323, 1366, 326, 324, 1367,
	327, 328, 329, 1368, 1369, 330, 331, 332, 1370, 333,
	334, 1371, 335, 336, 337, 1372, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 1373, 262, 1374, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 1375, 356, 1376,
	1377, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 1378, 368, 620, 1379, 621,
	369, 1380, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 1143, 375, 376, 1381, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 1382, 1142, 384,
	625, 626, 1383, 627, 1384, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 1385, 398, 400, 399, 1386, 401,
	629, 1147, 402, 403, 1148, 1387, 404, 0, 0, 0,
	405, 406, 409, 1388, 1389, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1390,
	264, 1151, 448, 449, 1391, 630, 450, 631, 452, 453,
	1392, 0, 454, 0, 1393, 1394, 456, 457, 458, 1395,
	1396, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 1397,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 1398, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 1399, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 1400, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 1401, 532, 533, 531, 534, 535,
	536, 1402, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 1403, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 1404, 561, 562, 0, 558, 1405,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 1406,
	571, 643, 644, 645, 646, 1407, 580, 1408, 572, 573,
	574, 647, 575, 648, 1409, 576, 577, 578, 579, 0,
	581, 582, 1410, 1411, 583, 584, 585, 587, 588, 586,
	589, 1412, 590, 1413, 0, 591, 592, 593, 649, 650,
	651, 1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418,
	597, 598, 653, 599, 600, 601, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602,
	1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 1349,
	607, 284, 285, 286, 287, 288, 289, 1350, 1351, 0,
	290, 608, 609, 610, 1352, 291, 292, 611, 1353, 1282,
	1354, 293, 294, 295, 296, 297, 298, 299, 0, 1355,
	301, 302, 303, 300, 304, 1356, 305, 0, 306, 307,
	308, 309, 310, 311, 1357, 312, 313, 314, 1140, 315,
	316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318,
	319, 320, 0, 321, 612, 613, 1365, 325, 322, 323,
	1366, 326, 324, 1367, 327, 328, 329, 1368, 1369, 330,
	331, 332, 1370, 333, 334, 1371, 335, 336, 337, 1372,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 1373, 262, 1374, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 1375, 356, 1376, 1377, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1378,
	368, 620, 1379, 621, 369, 1380, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 1381, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1382, 1142, 384, 625, 626, 1383, 627, 1384, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1385, 398,
	400, 399, 1386, 401, 629, 1147, 402, 403, 1148, 1387,
	404, 0, 0, 0, 405, 406, 409, 1388, 1389, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1390, 264, 1151, 448, 449, 1391, 630,
	450, 631, 452, 453, 1392, 0, 454, 0, 1393, 1394,
	456, 457, 458, 1395, 1396, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1397, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 1398,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 1399, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1400, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1401, 532,
	533, 531, 534, 535, 536, 1402, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 1403, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 1404, 561,
	562, 0, 558, 1405, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 1406, 571, 643, 644, 645, 646, 1407,
	580, 1408, 572, 573, 574, 647, 575, 648, 1409, 576,
	577, 578, 579, 0, 581, 582, 1410, 1411, 583, 584,
	585, 587, 588, 586, 589, 1412, 590, 1413, 0, 591,
	592, 593, 649, 650, 651, 1414, 595, 594, 596, 652,
	1415, 1416, 1417, 1418, 597, 598, 653, 599, 600, 601,
	2415, 0, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 2412, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 2413, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 2411, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 2414, 0, 0, 0, 0, 0, 0,
	1059, 2410, 0, 1021, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 224, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 226, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 1548, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 218, 597, 598, 653, 599, 600, 601, 1034,
	0, 219, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1789, 1787, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 224, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 226, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 1548, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 218, 597, 598, 653, 599, 600, 601,
	1034, 0, 219, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 1789, 3011, 0, 0, 1057, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 226, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 1548, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 218, 597, 598, 653, 599, 600,
	601, 1034, 0, 219, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 1789, 1787, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 2543, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 2548, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 2544, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 2545, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 2460,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 1059,
	2458, 0, 2457, 1057, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 2455, 0, 2454, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 0,
	0, 0, 0, 0, 0, 1059, 2452, 0, 2451, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 2449,
	0, 1639, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 1638, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 1024, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 1038, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 4370, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 1038,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 2329, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 2328, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 1038, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 4136, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 1038, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 3772,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1857, 0, 0, 0, 0, 0, 0, 1059,
	0, 0, 0, 1057, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 3506, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 1059, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1857, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 0, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 2548, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 1787, 0,
	2553, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 2551, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 2539, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 2528,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 1059,
	0, 0, 2526, 1057, 2517, 2524, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 2520, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 2521, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 2522, 419,
	2519, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 2523, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 2518, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 2514, 1057, 2517, 2524, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 2520, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	2521, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 2522, 419, 2519, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 2523, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 2518,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 1795, 0, 1059, 0, 0, 0,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 2308, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 1059,
	0, 0, 1644, 1057, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 1578, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 1573, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 1564, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 1559, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 1472, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1471, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	1466, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1465, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 1459, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 1284, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 4415, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 4414, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 4413, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 4415, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 4414,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 4082, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 4083,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 4081,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 2978, 2979, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 2976, 2977,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 1059, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 2316, 2317, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 0,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 2536, 0,
	0, 0, 0, 0, 0, 2534, 2535, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	0, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 2971, 2972, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 2036, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 0, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 4415, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 0, 1102, 0, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 0, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 4414, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 1197, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 0,
	1057, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 1098, 0, 290, 608,
	609, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1183, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 264, 1151, 448, 449, 0, 1103, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 1189, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 1191, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 224, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 0,
	558, 226, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	1548, 650, 651, 0, 595, 594, 596, 652, 1197, 0,
	0, 218, 597, 598, 653, 599, 600, 601, 0, 0,
	219, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	1187, 1099, 1881, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	1098, 0, 290, 608, 609, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 625, 626, 0, 627,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	1183, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 0, 264, 1151, 448, 449,
	0, 1103, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 1189, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 639, 1191, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	224, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 0, 558, 226, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 1548, 650, 651, 0, 595, 594,
	596, 652, 3155, 0, 1197, 218, 597, 598, 653, 599,
	600, 601, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 1187, 0, 1881, 1099, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 1098, 0, 290, 608,
	609, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1183, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 264, 1151, 448, 449, 0, 1103, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 1189, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 1191, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1179, 0,
	1197, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	1187, 0, 1185, 1099, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 1098, 0, 290, 608, 609, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1183, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 264, 1151,
	448, 449, 0, 1103, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 1189, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 1191,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1197, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 1187, 1099, 1185, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 1098, 0, 290, 608,
	609, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1183, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 264, 1151, 448, 449, 0, 1103, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 1189, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 1191, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1197, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	1187, 1099, 1185, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	1098, 0, 290, 608, 609, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 625, 626, 0, 627,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 0, 264, 1151, 448, 449,
	0, 1103, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1197, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 3927, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 1098, 0, 290, 608, 609, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	264, 1151, 448, 449, 0, 1103, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 1191, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1021, 0, 1277, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	1780, 602, 0, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 1282, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1142, 384, 625, 626, 0, 627,
	0, 386, 387, 1144, 628, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 0, 0, 1151, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	224, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 226, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 1548, 650, 651, 0, 595, 594,
	596, 652, 1545, 0, 1277, 218, 597, 598, 653, 599,
	600, 601, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 183, 602, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 1282, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	628, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 0, 1151, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 224, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 226, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	1548, 650, 651, 0, 595, 594, 596, 652, 0, 0,
	0, 218, 597, 598, 653, 599, 600, 601, 0, 0,
	219, 0, 0, 0, 0, 0, 1277, 1276, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 1276,
	0, 0, 0, 0, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 1282, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1142, 384, 625, 626, 0, 627,
	0, 386, 387, 1144, 628, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 0, 0, 1151, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 2126, 0, 0, 0, 0, 2127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3426, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 1282, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 2125, 400, 399, 0, 401, 629, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 0, 1151,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 1276, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1570, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1197, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1554, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 1098, 0,
	290, 608, 609, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 264, 1151, 448, 449, 0, 1103,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1021, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 224, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 226,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 1548, 650,
	651, 0, 595, 594, 596, 652, 259, 0, 0, 218,
	597, 598, 653, 599, 600, 601, 0, 0, 219, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	183, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	259, 2886, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 1895, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 259, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 4569, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	3377, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 1542,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 259, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	2874, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	259, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 3531, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 864, 0, 772, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 2202, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	779, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 862, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 777, 563, 564, 565, 566, 567, 778,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	770, 0, 772, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 782, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 779, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 777,
	563, 564, 565, 566, 567, 778, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 1932, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 782, 0, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 0, 1938, 0,
	282, 1928, 283, 1944, 0, 1951, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 1954, 1955, 0, 0,
	291, 292, 0, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 1122, 321, 1942,
	1941, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 0, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 1940, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1949, 1950, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 0, 0, 0, 369,
	0, 370, 371, 372, 373, 374, 0, 0, 0, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 1935,
	1936, 0, 1931, 0, 386, 387, 1144, 0, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 0,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 0, 450, 1943, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 0, 1152, 461, 1153, 0, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 1925, 474, 475, 476, 1926, 477, 478, 479, 0,
	480, 0, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1939, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 0,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1937, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1953, 553, 554, 555, 556,
	0, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1945, 1946, 1947, 1948, 0, 580, 0, 572, 573, 574,
	0, 575, 0, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 0, 1929, 1952,
	0, 595, 594, 596, 0, 0, 772, 0, 0, 597,
	598, 0, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 1919, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	779, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 777, 563, 564, 565, 566, 567, 778,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 772, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 782, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 779,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 2244,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 2245, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 777, 563, 564, 565, 566, 567, 778, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	2246, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 2001,
	0, 1277, 1968, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 782, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 1965, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1966, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1962, 0, 1277, 1968, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 1965, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1966, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 772, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	779, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 1958, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 777, 563, 564, 565, 566, 567, 778,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 1957, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 772, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 782, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 779,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 1911, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 777, 563, 564, 565, 566, 567, 778, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	1910, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 1277, 1968, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 782, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 1965, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1966, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1277, 1276, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 3717, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1277,
	1276, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 3349, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1598, 0, 1277, 1276, 0, 0, 0, 0,
	1274, 0, 0, 0, 0, 0, 0, 0, 0, 782,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 1282, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 1597, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1142, 384, 625, 626, 0, 627, 0, 386, 387, 1144,
	628, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 0, 0, 1151, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 1596, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 1595, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1516, 0,
	1277, 1276, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 1282, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1515, 623, 624, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 0, 1151,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1477, 0, 1277, 1276, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1445, 0, 1277, 1276, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1444, 623, 624,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1271, 0, 1277, 1276,
	0, 0, 0, 0, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 1282, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1270, 623, 624, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1142, 384, 625, 626, 0, 627,
	0, 386, 387, 1144, 628, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 0, 0, 1151, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1277, 1276, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1277, 1968, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 2008, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1277, 1276, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 1282, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 0, 1151,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 1277,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 2702, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 2699, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 2706, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 2899,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 2705, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 2896, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 2898, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	2895, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 2704, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 2897,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 2702, 291, 292, 611, 0,
	0, 2696, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 2699, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 2706, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 2705, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 2695, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	2704, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 2703, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1666, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 1669, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	1667, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 1668, 594, 596, 652, 1423, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1425, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1420, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1422, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 1189, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1328,
	0, 259, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1330, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 1189, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 685, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 684, 270,
	271, 272, 674, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 677, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	678, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 679,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 673, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 674, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 677, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 678, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 679, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 1189, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 3306, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 2844, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 2843, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 2216, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 2159,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 2165, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 2164, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 2152, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 2154,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 2122, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 1189, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1520, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1519, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1440, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1433,
	0, 259, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1435, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1261, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 1260, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1251, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1250, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1248, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1247, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1243, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1242, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 655,
	0, 259, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 250, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 3648, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	3649, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 3651, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 3652, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 3647, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 677, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 678, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 679, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 2253, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 2251, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 2249, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 2171, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1987, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1981, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 851, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 850, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 849, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 2899, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 3987, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 3897, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 3899, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 742, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 1298, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 1296, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 743,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 739, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 1299, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 738, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 742, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 1298, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 1296, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 743, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 739, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 1299, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 738, 644, 645, 646, 0, 580, 0,
	572, 1297, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 664, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 663, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 662, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 259, 2886, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 259, 3997,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	4248, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 4246,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 3688, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 2588,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 259, 2886,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 2883, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 2226, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 2214, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 742, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 732,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	743, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 739, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 1553, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 738, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1526, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1525, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1510,
	0, 259, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1508, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1504, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1481, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1479, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1442, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1428, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1266,
	0, 259, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1265, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1257, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 1256, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 1210, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	748, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 742,
	0, 259, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 732, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 730, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	731, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 743, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 733,
	516, 0, 517, 518, 524, 525, 519, 520, 739, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 734, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	738, 644, 645, 646, 0, 580, 0, 572, 736, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 724, 0, 259, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	725, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 687, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 681, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 659, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 3396, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 3343, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 3277, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 3275, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 3260, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 2854, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	725, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 2189, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 0, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1228, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	1162, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 0, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 0, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 0, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 0, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1714, 1715, 0,
	1747, 1748, 1749, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 1745, 0, 0, 0, 0, 1714, 1715, 1717, 1747,
	1748, 1749, 1757, 1758, 1759, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	1745, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 0, 1716, 1714, 1715, 1763, 1747, 1748, 1749, 1757,
	1758, 1759, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 1750, 1745, 0, 0,
	0, 1716, 1714, 1715, 1717, 1747, 1748, 1749, 1757, 1758,
	1759, 1736, 1763, 0, 0, 0, 0, 0, 0, 0,
	1733, 0, 0, 0, 0, 1750, 1745, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 1716, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 0, 0,
	0, 0, 0, 1739, 1740, 1741, 1742, 1716, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 1739, 1740, 1741, 1742, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 1764, 0, 0, 0, 0, 0, 1744, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	1740, 1741, 1742, 0, 0, 1760, 0, 1761, 1754, 1722,
	0, 1764, 0, 0, 1731, 1732, 0, 1744, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 1740,
	1741, 1742, 1752, 0, 1760, 0, 1761, 0, 1722, 0,
	0, 0, 0, 1731, 1732, 1754, 0, 1737, 1764, 0,
	0, 0, 0, 0, 1744, 1746, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 1761, 1754, 0, 1737, 1764, 0, 0,
	1731, 1732, 0, 1744, 1746, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	1760, 0, 1761, 0, 0, 0, 0, 1751, 0, 1731,
	1732, 0, 0, 1737, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 1753, 0, 0, 0, 0, 1728,
	1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718,
	1719, 1720, 1721, 1723, 1724, 0, 0, 0, 0, 4268,
	0, 0, 0, 1753, 0, 0, 0, 0, 1728, 1729,
	1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718, 1719,
	1720, 1721, 1723, 1724, 0, 0, 0, 0, 4232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734,
	1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723,
	1724, 0, 0, 0, 0, 4231, 0, 0, 0, 1753,
	0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730,
	0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	0, 0, 1714, 1715, 4066, 1747, 1748, 1749, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 1745, 0, 0, 0,
	0, 1714, 1715, 1717, 1747, 1748, 1749, 1757, 1758, 1759,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 1745, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 1716, 1714, 1715,
	1763, 1747, 1748, 1749, 1757, 1758, 1759, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 1750, 1745, 0, 0, 0, 1716, 1714, 1715, 1717,
	1747, 1748, 1749, 1757, 1758, 1759, 1736, 1763, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 0, 0,
	1750, 1745, 0, 0, 0, 0, 0, 0, 1717, 0,
	0, 0, 0, 1716, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 1739, 1740,
	1741, 1742, 1716, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 0, 1739, 1740, 1741,
	1742, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 1764, 0, 0,
	0, 0, 0, 1744, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 1740, 1741, 1742, 0, 0,
	1760, 0, 1761, 1754, 1722, 0, 1764, 0, 0, 1731,
	1732, 0, 1744, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 1740, 1741, 1742, 1752, 0, 1760,
	0, 1761, 0, 1722, 0, 0, 0, 0, 1731, 1732,
	1754, 0, 1737, 1764, 0, 0, 0, 0, 0, 1744,
	1746, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 1761, 1754,
	0, 1737, 1764, 0, 0, 1731, 1732, 0, 1744, 1746,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 1760, 0, 1761, 0, 0,
	0, 0, 1751, 0, 1731, 1732, 0, 0, 1737, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 1753,
	0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730,
	0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	0, 0, 0, 0, 3923, 0, 0, 0, 1753, 0,
	0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730, 0,
	1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 0,
	0, 0, 0, 3856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	1728, 1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726,
	1718, 1719, 1720, 1721, 1723, 1724, 0, 0, 0, 0,
	3855, 0, 0, 0, 1753, 0, 0, 0, 0, 1728,
	1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718,
	1719, 1720, 1721, 1723, 1724, 0, 0, 1714, 1715, 3854,
	1747, 1748, 1749, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 1745, 0, 0, 0, 0, 1714, 1715, 1717, 1747,
	1748, 1749, 1757, 1758, 1759, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	1745, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 0, 1716, 1714, 1715, 1763, 1747, 1748, 1749, 1757,
	1758, 1759, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 1750, 1745, 0, 0,
	0, 1716, 1714, 1715, 1717, 1747, 1748, 1749, 1757, 1758,
	1759, 1736, 1763, 0, 0, 0, 0, 0, 0, 0,
	1733, 0, 0, 0, 0, 1750, 1745, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 1716, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 0, 0,
	0, 0, 0, 1739, 1740, 1741, 1742, 1716, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 1739, 1740, 1741, 1742, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 1764, 0, 0, 0, 0, 0, 1744, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	1740, 1741, 1742, 0, 0, 1760, 0, 1761, 1754, 1722,
	0, 1764, 0, 0, 1731, 1732, 0, 1744, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 1740,
	1741, 1742, 1752, 0, 1760, 0, 1761, 0, 1722, 0,
	0, 0, 0, 1731, 1732, 1754, 0, 1737, 1764, 0,
	0, 0, 0, 0, 1744, 1746, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 1761, 1754, 0, 1737, 1764, 0, 0,
	1731, 1732, 0, 1744, 1746, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	1760, 0, 1761, 0, 0, 0, 0, 1751, 0, 1731,
	1732, 0, 0, 1737, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 1753, 0, 0, 0, 0, 1728,
	1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718,
	1719, 1720, 1721, 1723, 1724, 0, 0, 0, 0, 3536,
	0, 0, 0, 1753, 0, 0, 0, 0, 1728, 1729,
	1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718, 1719,
	1720, 1721, 1723, 1724, 0, 0, 0, 0, 3051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734,
	1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723,
	1724, 0, 0, 0, 0, 3050, 0, 0, 0, 1753,
	0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730,
	0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	0, 0, 1714, 1715, 3049, 1747, 1748, 1749, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 1745, 0, 0, 0,
	0, 1714, 1715, 1717, 1747, 1748, 1749, 1757, 1758, 1759,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 1745, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 1716, 1714, 1715,
	1763, 1747, 1748, 1749, 1757, 1758, 1759, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 1750, 1745, 0, 0, 0, 1716, 0, 0, 1717,
	0, 0, 0, 0, 0, 0, 1736, 1763, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 1739, 1740,
	1741, 1742, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 1740, 1741,
	1742, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 1764, 0, 0,
	0, 0, 0, 1744, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 1740, 1741, 1742, 0, 0,
	1760, 0, 1761, 1754, 1722, 4484, 1764, 0, 0, 1731,
	1732, 0, 1744, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 1760,
	0, 1761, 0, 0, 0, 0, 0, 0, 1731, 1732,
	1754, 0, 1737, 1764, 0, 0, 0, 0, 0, 1744,
	1746, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 1761, 0,
	0, 1737, 0, 0, 0, 1731, 1732, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	4483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 1714, 1715, 0, 1747, 1748,
	1749, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 1750, 1745,
	0, 0, 0, 0, 0, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730,
	1716, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	1736, 0, 0, 0, 3048, 0, 0, 0, 1753, 1733,
	0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730, 0,
	1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 0,
	0, 3015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	1728, 1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726,
	1718, 1719, 1720, 1721, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 1740, 1741, 1742, 0, 0, 0, 0, 0,
	0, 1722, 0, 3135, 0, 0, 3134, 0, 0, 0,
	0, 0, 1714, 1715, 0, 1747, 1748, 1749, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 1745, 1754, 0, 0,
	1764, 2986, 0, 1717, 0, 0, 1744, 1746, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 1761, 0, 0, 0, 0,
	0, 0, 1731, 1732, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	1752, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 1739, 1740,
	1741, 1742, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 1764, 0, 0,
	0, 0, 0, 1744, 1746, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 1761, 0, 0, 0, 0, 0, 1738, 1731,
	1732, 0, 0, 0, 0, 0, 0, 0, 2561, 0,
	0, 0, 0, 0, 0, 1714, 1715, 1752, 1747, 1748,
	1749, 1757, 1758, 1759, 1755, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 1750, 1745,
	0, 0, 0, 2560, 0, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 1751, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 1728, 1729, 1735,
	1756, 1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720,
	1721, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 1740, 1741, 1742, 1738, 0, 0, 0, 0,
	0, 1722, 1714, 1715, 0, 1747, 1748, 1749, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 1750, 1745, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 1754, 0, 0,
	1764, 1763, 0, 0, 0, 0, 1744, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 1761, 0, 1716, 0, 0,
	0, 0, 1731, 1732, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730,
	0, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 1740,
	1741, 1742, 0, 0, 0, 1751, 0, 0, 1722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 1715, 0, 1747, 1748, 1749,
	1757, 1758, 1759, 0, 1754, 0, 0, 1764, 0, 0,
	0, 0, 0, 1744, 1746, 0, 0, 1750, 1745, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 1743, 0,
	1760, 0, 1761, 1763, 0, 0, 0, 0, 0, 1731,
	1732, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 1737, 0, 1755, 0, 0, 0, 1733, 0,
	1714, 1715, 0, 1747, 1748, 1749, 1757, 1758, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 1745, 0, 0, 0, 0, 0,
	0, 1717, 0, 0, 1762, 0, 0, 0, 0, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 1018, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	1739, 1740, 1741, 1742, 0, 1736, 0, 0, 0, 0,
	1722, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 1728, 1729, 1735,
	1756, 1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720,
	1721, 1723, 1724, 0, 0, 1743, 1754, 0, 0, 1764,
	0, 0, 0, 0, 0, 1744, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 1760, 0, 1761, 0, 0, 0, 0, 0,
	0, 1731, 1732, 0, 0, 0, 1739, 1740, 1741, 1742,
	0, 1755, 0, 0, 0, 0, 1722, 0, 0, 1752,
	0, 3141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1764, 0, 0, 0, 0,
	0, 1744, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 1760, 0,
	1761, 0, 0, 0, 0, 0, 0, 1731, 1732, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 1753,
	0, 0, 0, 0, 1728, 1729, 1735, 1756, 1734, 1730,
	1737, 1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 1714, 1715, 0, 1747,
	1748, 1749, 1757, 1758, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	1745, 0, 0, 0, 3136, 0, 0, 1717, 0, 0,
	0, 0, 0, 1743, 3517, 1763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 1755,
	1733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756,
	1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 1747, 1748, 1749, 1757, 1758, 1759,
	0, 0, 1739, 1740, 1741, 1742, 0, 0, 0, 0,
	0, 0, 1722, 0, 1750, 1745, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 1753, 0, 0,
	1763, 0, 1728, 1729, 1735, 1756, 1734, 1730, 0, 1727,
	1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 1754, 0,
	0, 1764, 0, 0, 0, 0, 1716, 1744, 1746, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 1760, 1733, 1761, 0, 0, 0,
	0, 0, 0, 1731, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 1740, 1741,
	1742, 0, 0, 0, 0, 0, 0, 1722, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 1764, 0, 0, 0,
	0, 0, 1744, 1746, 0, 0, 0, 0, 0, 1714,
	1715, 0, 1747, 1748, 1749, 1757, 1758, 1759, 0, 1760,
	0, 1761, 0, 0, 0, 0, 0, 0, 1731, 1732,
	0, 0, 1750, 1745, 0, 0, 0, 3052, 0, 1743,
	1717, 0, 0, 0, 0, 0, 1752, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1755, 0, 0, 0, 0,
	0, 0, 0, 1733, 1714, 1715, 0, 1747, 1748, 1749,
	1757, 1758, 1759, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 1745, 0,
	0, 1751, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 3103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 1739, 1740, 1741, 1742, 1736,
	0, 0, 0, 0, 0, 1722, 0, 0, 1733, 0,
	0, 0, 0, 1753, 1743, 0, 0, 0, 1728, 1729,
	1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718, 1719,
	1720, 1721, 1723, 1724, 1738, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 1764, 0, 0, 0, 0, 0,
	1744, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 1760, 0, 1761,
	0, 0, 0, 0, 0, 0, 1731, 1732, 0, 0,
	1739, 1740, 1741, 1742, 0, 0, 0, 0, 0, 0,
	1722, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 1714, 1715, 0,
	1747, 1748, 1749, 1757, 1758, 1759, 1754, 0, 0, 1764,
	0, 0, 0, 0, 0, 1744, 1746, 0, 0, 0,
	1750, 1745, 0, 0, 0, 0, 0, 0, 1717, 0,
	0, 1762, 1760, 0, 1761, 0, 1763, 0, 1753, 0,
	0, 1731, 1732, 1728, 1729, 1735, 1756, 1734, 1730, 1751,
	1727, 1725, 1726, 1718, 1719, 1720, 1721, 1723, 1724, 1752,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 1737, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 1740, 1741, 1742, 0, 1755, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 1754,
	0, 0, 1764, 0, 0, 0, 0, 0, 1744, 1746,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 1761, 0, 0,
	0, 0, 0, 0, 1731, 1732, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 1753, 0, 0, 0,
	0, 1728, 1729, 1735, 1756, 1734, 1730, 1737, 1727, 1725,
	1726, 1718, 1719, 1720, 1721, 1723, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 1728, 1729, 1735, 1756,
	1734, 1730, 0, 1727, 1725, 1726, 1718, 1719, 1720, 1721,
	1723, 1724, 909, 0, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 917,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 931, 915, 914, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 916, 0, 1755, 0, 0, 919,
	0, 0, 0, 0, 963, 0, 0, 0, 0, 0,
	0, 0, 0, 928, 929, 0, 0, 0, 0, 0,
	0, 0, 945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 956, 921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 922, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 1728,
	1729, 1735, 1756, 1734, 1730, 0, 1727, 1725, 1726, 1718,
	1719, 1720, 1721, 1723, 1724, 0, 0, 0, 924, 0,
	0, 0, 0, 0, 0, 0, 913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 925, 926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 933, 932, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 960, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 920, 0, 0, 962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 918, 0, 0, 0, 949, 950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 961, 943, 0, 936,
	934, 0, 939, 0, 0, 0, 0, 0, 940, 0,
	0, 911, 0, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 951, 0, 941, 0, 0,
	0, 0, 938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948,
}

var sqlPact = [...]int{
	9013, -1000, -1000, -1000, -1000, 238, -1000, -1000, 237, 236,
	232, 231, 229, 219, 205, 204, 201, 199, 197, -1000,
	-1000, -1000, -1000, -1000, -1000, 195, -1000, -1000, 194, -1000,
	192, 191, 190, -1000, -1000, 184, -1000, 183, -1000, -1000,
	-1000, -1000, 180, 178, 175, 86783, 86247, 87312, 2286, 108091,
	94746, 2214, 77699, 107555, 77163, 107019, 2168, 6952, 106483, 2703,
	168, -1000, 105947, 166, 164, 163, -1000, 105411, -1000, 2101,
	-1000, 162, 2970, 62678, 161, 160, 158, 2464, 157, -1000,
	156, 153, 152, -1000, 12434, 1655, -1000, 146, 145, -1000,
	372, 92080, 144, 139, 2532, 137, 136, 62142, 133, 132,
	2508, 2918, -1000, -1000, 2123, -1000, -1000, 130, 129, 128,
	127, 126, 119, 118, 117, 115, 113, 112, -1000, 111,
	110, 109, 105, 97, -1000, 96, 95, 94, -1000, 88,
	-1000, 85, 83, 79, 78, 77, 76, 74, 73, 71,
	70, 66, 64, 63, -1000, 119670, -1000, 1904, 1688, 1672,
	1656, 1654, 1635, 1008, 61, 58, 54, 50, 48, 43,
	41, 38, 37, -1000, 35, 34, 31, 25, 24, 23,
	20, 17, 138, 14, 13, 11, 10, 5, 3, 2,
	2608, -1000, 1676, 1040, 29352, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 113910, 108620,
	0, -161, -3, -1000, 3288, 1071, 51926, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 292, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 548, 1918, 806, -1000,
	-1000, -1000, 104882, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2279, -62, -1000, 2054, -1000, -1000, -1000, -1000, -1000,
	801, -1000, 2277, 186, 2235, -1000, -1000, -1000, 3335, 2414,
	3779, 3778, 3777, 3775, 3774, 113381, 1833, 3773, 2513, 3771,
	3768, 3766, 3764, 3763, 3762, 3757, -1000, 85711, 1035, 85175,
	84639, 3348, 104353, 84103, 103817, 71284, 44154, 984, 3331, -1000,
	-1000, -1000, -1000, -1000, -1000, 108620, -1000, 1033, -1000, -1000,
	3756, 3755, 2097, 792, 94210, -1000, 2103, -1000, 955, 31035,
	-1000, 1273, -1000, 31035, 290, -1000, -1000, -1000, -1000, -1000,
	-1000, 3754, 3753, 3752, 3751, 3750, -1000, -1000, 76627, 22568,
	76091, 75555, 103281, 22022, 83567, 83031, 102745, 70738, 1032, 1463,
	-1000, -1000, -1000, -1000, -1000, -1000, -23, 68554, 3518, 108620,
	-1000, 282, -1000, -1000, -1000, -1000, -1000, -1000, 43581, 827,
	43008, 721, 42435, 360, -1000, -1000, -1000, -1000, 70192, -1000,
	102209, 2410, 3749, 3747, 1130, 3746, 3228, 1796, 3744, 1920,
	1264, 3742, 3741, 3739, 3738, 3737, 3736, 3735, 1449, 101673,
	2968, 101137, 1743, 69646, 1031, 82495, 87312, 2677, 100601, 1418,
	1411, -1000, -1000, -1000, -1000, 3078, 2916, 2907, 1431, -1000,
	-1000, -1000, -1000, 54600, 7668, 7367, 9408, 100065, 56808, 87312,
	87312, -1000, -1000, -1000, -1000, -1000, 41862, 693, 41289, 891,
	-1000, -1000, 55152, 2908, -1000, -1000, -1000, -1000, 40716, 638,
	40143, 824, 108620, -1000, 2967, 1921, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2585, 1590, 3544, 2758, 69100, 2126, 1425, 3286, 3074,
	3072, 1516, 3065, 3734, 2588, 3044, 3042, 3039, 3037, 3036,
	1642, 2594, 337, 28779, 2952, 1773, 39570, 1701, 1509, 3030,
	3020, 3574, 2043, 2021, 2089, 75019, 3733, 3730, 3258, 3011,
	3008, 2806, 3003, -1000, 2905, -1000, -1000, -1000, -1000, 1495,
	-1000, -1000, -1000, -1000, 78228, -1000, -1000, 1326, -1000, -1000,
	1326, -1000, -1000, -1000, -1000, -1000, 1367, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1676, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2266,
	-1000, 2045, -1000, -1000, 2613, 3273, 3273, 3273, 3330, 502,
	496, -1000, 138, -1000, -1000, 119103, -1000, -1000, 44715, 44715,
	44715, 44715, 44715, 44715, 44715, 2167, -1000, 791, -1000, -1000,
	841, -1000, 790, 654, -1000, -1000, -1000, -1000, -1000, -1000,
	789, -1000, -1000, -1000, -1000, -1000, -1000, 3518, -1000, 25353,
	-1000, -1000, -1000, 493, 784, 44715, -1000, -1000, 3593, 3590,
	1021, -1000, 281, 968, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2966, 783, 778, -1000,
	777, 776, 774, 772, 771, -1000, -1000, -1000, 770, 769,
	768, 767, 765, 764, 763, 762, -1000, 2066, -1000, -1000,
	-1000, -1000, -1000, -1000, 707, 706, 706, 706, -1000, 1026,
	-1000, -1000, -1000, 304, 705, 296, 700, 694, 687, -1000,
	761, 752, 750, 744, 741, 740, 737, 735, 729, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1014, -1000, -1000, -1000,
	-1000, -26, 108620, -1000, 548, -26, -1000, -1000, 728, -1000,
	33291, 33291, 33291, -1000, -1000, 2272, 44715, -1000, 3050, -1000,
	-18, -18, 930, 53528, -1000, 50854, 930, 273, 847, 58412,
	-1000, 2904, -1000, -1000, 720, 278, -1000, -1000, -1000, -1000,
	23112, 2903, 108620, 108620, 87312, 87312, 87312, 3081, 44715, -1000,
	-1000, 66401, 108620, 88370, -1000, -1000, 3463, 63207, 65872, 108620,
	2965, 65343, 3729, -1000, -1000, -1000, -1000, -1000, 3132, 3728,
	3723, 3719, -1000, 108620, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 211, 3131, -1000, -1000, 91544, 211, 3129, -1000, 211,
	3128, -1000, 91015, -1000, -1000, 2269, 3126, -1000, -1000, 220,
	3125, -1000, -1000, -1000, 215, 3124, -1000, -1000, 277, -99,
	3119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 119103, -1000, -1000, -1000, 64807, -1000, 3256,
	-1000, -1000, 108620, -1000, 44715, -1000, 3460, 1957, 72362, 3399,
	-45, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2490, 2540,
	1169, 2311, -1000, 3052, 1879, -1000, 31035, 3216, -1000, -1000,
	-1000, 274, 23112, -1000, -1000, -1000, -1000, -1000, -1000, 4771,
	3118, 1533, -1000, 2310, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1859, 3116, -1000, 2207, 3114, 1846, -1000, -1000, 2230,
	-1000, 3250, -1000, -1000, 2114, 3113, -17, -1000, -1000, 2472,
	-1000, 2065, -1000, 989, 3096, -1000, 81959, 56256, 55152, 68554,
	-35, -1000, -1000, -1000, -1000, -208, -1000, 21476, 119103, -1000,
	-1000, -1000, -1000, 1785, 119103, 922, -1000, -1000, 3093, -1000,
	119103, 921, -1000, -1000, 3092, -1000, 2955, -1000, -1000, 2373,
	-1000, -1000, 3712, -1000, -1000, 3711, -1000, 3701, 3699, 3698,
	-1000, 1723, 2051, 3697, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 81430, 2268, -1000, -1000, 80358, -1000, 2370, 3397,
	-1000, 80894, 1030, -1000, 989, 2368, -1000, 90486, 1042, 2367,
	-1000, 3696, 3337, 2722, 989, 2364, -1000, -1000, -1000, -1000,
	-1000, 1061, -1000, 60009, -1000, 60009, -1000, 1652, -1000, 112852,
	-18, 87312, 3518, -1000, -64, -1000, -1000, -1000, 1071, -1000,
	54064, -1000, 54064, 93674, 71828, 972, 759, 61606, 119103, -1000,
	-1000, -1000, -1000, 119103, -1000, -1000, -1000, -193, 2757, -1000,
	71828, 55152, 119103, -1000, -1000, -1000, -1000, 119103, -1000, -1000,
	-1000, 71828, 80358, -1000, 99529, 79829, -1000, -1000, 1444, 2515,
	-1000, -1000, -1000, 71828, 1299, 71828, 71828, 71828, -1000, 98993,
	-1000, -1000, 2070, 1415, 3252, 2036, 87312, -1000, 1886, -1000,
	-1000, -1000, 3257, 108620, -1000, -1000, 2954, -1000, 64271, 89957,
	-1000, 89428, -1000, 88899, -1000, 87312, -1000, 87312, -1000, 3691,
	3690, 3688, 3686, -1000, 3685, 3268, -1000, 119103, 3259, -1000,
	3684, 3390, 2952, 119103, -1000, 3031, 1671, 1647, 108620, -1000,
	-1000, 108620, -1000, 108620, -1000, -1000, -1000, 1487, -1000, -1000,
	2482, -1000, -1000, -1000, -1000, 87312, -1000, -1000, -1000, -1000,
	-1000, -1000, 2948, -1000, 1774, -1000, 1834, -1000, 2902, 3280,
	-1000, 1433, -1000, -1000, 223, -1000, -1000, -45, -1000, 112323,
	-1000, 2613, -1000, 108620, -1000, 2507, 2917, 2926, 1705, 2295,
	2554, -1000, 38997, 2557, 48081, 2304, 138, -1000, -1000, 138,
	138, 30474, -1000, -1000, 63207, 63207, 23112, 1388, 44715, 44715,
	44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715,
	44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715,
	44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715, 44715,
	44715, 44715, 44715, 2282, 44715, 1365, 44715, 44715, 44715, 44715,
	1966, -1000, -1000, 1912, 591, 2164, -1000, 3528, 3528, 3528,
	1114, 1114, 11958, 11958, 648, 3683, 841, -1000, 44715, -1000,
	87, 44715, 23658, -1000, 496, 8426, 2488, -1000, 491, 24231,
	-1000, -1000, -1000, 25353, 654, 38424, 44715, 1009, 119103, -1000,
	-1000, 1571, 3548, 20931, 2925, 2801, 718, 840, 711, 28206,
	27633, 27060, 26487, 677, 44715, 44715, 44715, 44715, 44715, 44715,
	44715, 44715, -1000, -1000, 3565, -1000, 3548, -1000, -1000, -1000,
	-1000, 3548, 1385, 1381, 3548, -1000, 3548, 3548, 8389, 8389,
	37863, 37290, 36717, 48642, 36144, 44715, 25914, 35571, 34998, -1000,
	108620, -26, 3453, 44715, 149, -1000, 117854, -1000, 149, 149,
	717, -70, 119103, 2766, 2766, 52460, 2610, 2177, 2177, 2177,
	-1000, 930, 16542, 930, 97930, 2198, 930, 930, 266, 300,
	486, 50320, 3050, 97930, 816, 715, -5, -8, -9, -1000,
	-1000, -10, -12, -1000, -1000, 87312, 714, 23658, 23112, 263,
	1482, -77, 2640, 2636, 2631, -1000, 2625, 1809, -78, 1363,
	87312, 108620, -69, -1000, 4620, -79, -1000, 1356, 259, 3548,
	-1000, -1000, -1000, -1000, -1000, 3682, 3680, -1000, 1011, 713,
	710, 401, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	707, 706, 706, 706, -1000, 304, 705, 296, 700, 694,
	687, -1000, -1000, -1000, -1000, -1000, 2901, 87312, 108620, -208,
	88370, -97, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	108620, -1000, -1000, -1000, 3679, -1000, 87312, -1000, -1000, 87312,
	211, 3091, -1000, 87312, -1000, 87312, 209, 3088, -1000, -1000,
	108620, -1000, 87312, 87312, -1000, 108620, 108620, 108620, 71828, 71828,
	221, -1000, 87312, 931, -85, 1135, -45, -1000, -1000, -1000,
	1326, -1000, 2081, -1000, -1000, -1000, -1000, -1000, -1000, 1453,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1021, -1000,
	-1000, -1000, -1000, -1000, -1000, 3558, 3556, -27, -1000, -1000,
	23112, -1000, -49, 1787, 2102, -1000, 74483, 2485, 3255, 3675,
	2709, 3241, 1604, -1000, 1485, 1355, 3325, 78228, 3415, 3431,
	817, -1000, 2899, -1000, -1000, 954, 1698, 1761, 1353, 78228,
	2207, -1000, 63207, -1000, 2655, 3323, 1464, 1421, 1464, 1464,
	1448, -1000, 78228, 1738, 1329, 1305, 2023, 2014, -1000, -1000,
	-1000, 1298, 1295, 890, 2012, -1000, -50, 3412, 3430, 780,
	-1000, 2897, 1289, -1000, -1000, 87312, 23112, 1540, 1534, 1728,
	1284, -28, -1000, 3410, 3404, 1280, 1278, -1000, 4774, -1000,
	71828, 1839, 3082, 2755, 928, 2751, -1000, -1000, -1000, 928,
	-35, 68554, 108620, 258, -1000, 87, 44715, 44715, 87, 44715,
	87, 3373, 3079, -1000, -1000, -1000, -1000, -1000, 3673, 2033,
	2511, -1000, -1000, 685, 2362, 2895, 108620, 2687, -40, 87312,
	-1000, 3075, 66937, 2207, 2358, -1000, -1000, 79293, -1000, 3073,
	548, 2356, -1000, 753, 3671, 3067, -1000, 111794, -1000, 3256,
	1409, 3066, 1095, 695, 3448, -1000, 695, 60538, -1000, 108620,
	-1000, -18, 4923, 73425, -86, -87, 474, -1000, 98464, 108620,
	1085, 73954, 108620, 3206, 986, 55152, -1000, 55152, -88, -193,
	2750, 972, 972, 928, -1000, 928, -1000, 87312, 2924, -1000,
	-1000, 71828, 972, 972, 972, -1000, -1000, -1000, -1000, 3670,
	3669, 3668, -1000, -1000, -1000, 988, 87312, 108620, 87312, -1000,
	256, -1000, 108620, -1000, 108620, 108620, 87312, -1000, 988, 108620,
	988, 108620, 988, 108620, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 87, 44715, -1000, -1000, 3667, 1661, -1000, 2920, -1000,
	2919, -1000, 19, -1000, -1000, -1000, -1000, -1000, 2050, 87312,
	87312, 87312, 87312, 108620, 3188, -1000, 108620, 3184, 87312, -1000,
	78228, -1000, 2507, 2917, -1000, -1000, -1000, -1000, -1000, -1000,
	1336, 2249, -1000, 2568, -1000, 1581, -1000, -1000, -1000, 119103,
	49203, -1000, -1000, 119103, 1812, -1000, 47520, 46959, -1000, -1000,
	1670, 87312, 2693, -1000, 2693, -192, -1000, 117601, 2566, 87312,
	-1000, -1000, -1000, -1000, -1000, 951, 585, 585, 1317, 1317,
	1317, 1317, 3438, 361, 2053, 1897, 5728, 5728, 6291, 6291,
	6291, 6291, 6291, 5728, 1269, 1114, 1114, 1269, 1269, 1269,
	1269, 1269, 1114, 1114, 1114, 5728, 5728, 5728, 11958, 119296,
	8053, 44715, 44715, 1277, 1862, 591, 7438, 44715, 8634, 8634,
	8634, 8634, -1000, 1689, -1000, -1000, -1000, -1000, 2893, 683,
	48642, 48642, -1000, -1000, -1000, -1000, 24792, 44715, -1000, -1000,
	-1000, -1000, 34425, -1000, -1000, 116970, -313, 473, -176, -16,
	-1000, 44715, 44715, 44715, 467, -1000, 251, 44715, 108620, -1000,
	15514, 815, -179, -1000, -94, 1471, -1000, 44715, -1000, -1000,
	1214, -1000, 1213, 1211, 1210, -1000, 682, 465, -1000, 241,
	-1000, 2175, 680, 674, 44715, -1000, -1000, -1000, -1000, -1000,
	116941, -1000, -1000, 116381, -1000, -1000, 116352, -1000, -1000, 116315,
	-1000, -1000, -1000, 119018, 14942, 14262, 13688, 6228, 11512, 11252,
	-96, 464, -102, 455, 949, 941, 454, 452, 451, -110,
	-1000, 3666, 3659, 3658, -1000, 3656, 3654, 3653, -1000, 3650,
	3649, 3648, -1000, 3646, 3645, 3644, -1000, 3643, 3642, 3641,
	-1000, 3640, 3637, 3636, -1000, 3634, 3633, 3632, -1000, 3631,
	3629, 3628, -116, 450, -1000, 2890, -176, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 437, -1000, 436, -1000, 118800,
	-176, 435, 6339, -1000, 48642, 48642, 48642, -1000, 432, -1000,
	117424, -1000, 118655, 33864, 33864, 33864, 431, 118299, 44715, -176,
	-117, -1000, -118, -1000, -1000, 560, -119, 1004, 33291, 51390,
	23112, -1000, 1004, 1004, 44715, -1000, 44715, 2583, -1000, -1000,
	-1000, -1000, 2580, 2493, 2766, 52460, -1000, -1000, -1000, -1000,
	97930, -1000, 3518, 2764, -1000, 97930, -1000, -1000, 108620, 548,
	-1000, 97930, 97930, 23112, 930, -1000, 930, 97930, 586, -1000,
	-1000, -1000, -1000, -1000, 420, 57342, -16, 216, 23112, 989,
	-1000, 2638, 2638, 2638, 2638, -1000, -1000, 108620, 1209, -43,
	-111, 3494, -1000, 2082, -1000, 63207, -1000, 838, 1236, 23112,
	-1000, -1000, -1000, 670, -1000, 3548, 3548, -1000, 3548, 108620,
	2889, 104, 101, 66937, 66937, 3627, -1000, -1000, 211, -1000,
	87312, 211, 211, -1000, 87312, 87312, 2269, -1000, 220, -1000,
	215, -1000, -1000, -99, -1000, 1000, 31035, -1000, 1326, -1000,
	-1000, 1593, -1000, 2035, -1000, 1379, -1000, -1000, -1000, -1000,
	31035, -1000, 2010, 108620, 108620, 87312, -1000, 108620, -1000, 2165,
	3491, 1954, 2481, 2477, -1000, 2354, 111265, 2342, 63207, 108620,
	-1000, -1000, 666, 965, 2565, 2564, 1064, 108620, 108620, 2558,
	110736, 110207, -1000, 3625, 108620, 2110, 44715, 66937, 2203, 4448,
	87, 87, -1000, -1000, 87, 665, 1366, 87312, 87312, 108620,
	87312, 1828, -1000, -1000, -1000, -1000, -1000, 78757, -1000, -1000,
	3564, 3554, -1000, 1464, -1000, -1000, -1000, 1464, 2207, 1822,
	108620, 87312, 66937, 108620, 108620, 1700, 108620, 1088, -1000, 890,
	2116, 87, 87, -1000, -1000, 87, 661, 23112, 1995, -1000,
	2989, 108620, 3588, 108620, 108620, 108620, 66937, 3274, 109678, 108620,
	108620, 66937, 4774, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 68025, 1100, 989, 1695, 1205, 78228,
	55152, 983, 55152, 2728, -1000, -1000, 20386, -1000, 119103, 119103,
	-1000, 119103, -1000, 63742, 108620, -1000, 1028, 108620, 73954, 964,
	3049, 59480, -208, 972, 71828, 87312, -40, 108620, -1000, -1000,
	2207, 3046, 548, 2351, -1000, 71828, 3445, 3045, 658, 3624,
	3623, -1000, 87312, 2265, 2344, -1000, -1000, 109149, 3144, 890,
	108620, 1004, 52460, 1974, -1000, 57878, 1045, 108620, 1888, 89,
	-1000, -1000, -1000, 7, 108620, -1000, 845, -1000, -1000, 4923,
	4923, 972, -283, 657, -1000, 923, 920, 55704, 71828, -130,
	-1000, -1000, -1000, -1000, 2342, 87312, 108620, 1296, 2719, 108620,
	-133, -1000, 187, 656, -1000, 3168, -1000, -193, -1000, 986,
	55152, 2888, -1000, -1000, 999, -1000, 1430, 972, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -19, 108620,
	-208, -208, -42, -43, -1000, 988, -1000, 988, -1000, 988,
	-1000, 119103, -1000, -1000, 1659, 1596, 108620, -1000, 23112, 108620,
	87312, 23112, 87312, 2913, 2912, -1000, -1000, -1000, 108620, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1106, -1000, 1812, 2248,
	-1000, 654, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2438, -1000, -44, 30474, 933, -1000, -1000, 87312, -20,
	44715, 44715, 7000, 6263, 44715, 48642, 48642, -1000, 44715, 5640,
	-1000, -1000, -1000, -1000, -1000, 2887, 652, 44715, 63207, 4979,
	1099, -1000, 411, 10673, 1269, -1000, 44715, -1000, 408, 32730,
	-1000, 118021, -65, -141, -1000, 17100, -176, -144, -1000, -1000,
	837, -1000, 3122, -1000, 44715, 118213, 2406, 2049, 1895, 1674,
	3548, 3587, 19841, -1000, 61072, 1005, 2210, 116286, -1000, -1000,
	-1000, -1000, 63207, 63207, 44715, 44715, -1000, 44715, 44715, 44715,
	-1000, -1000, -1000, 3548, 940, -1000, -1000, -1000, 940, -1000,
	-1000, 1464, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1464, -1000, 44715,
	-1000, -1000, 2875, 44715, -1000, 63207, 63207, 48642, 48642, 48642,
	48642, 48642, 48642, 48642, 48642, 48642, 48642, 48642, 48642, 48642,
	48642, 48642, 48642, 48642, 48642, 48642, 2531, 48642, 3521, 3521,
	3521, -1000, 2910, 2875, 44715, 44715, 63207, 407, 405, 402,
	-1000, 44715, -176, -1000, -1000, 4923, 649, -1000, 2419, -1000,
	2793, -1000, 44715, -1000, -152, -1000, 3050, -1000, -1000, 2793,
	2793, -149, 119103, 52460, 52460, -1000, 645, 44715, 2574, -1000,
	-1000, 814, -314, -1000, 919, -1000, -1000, -1000, -1000, -1000,
	548, -1000, -1000, -1000, 150, 97930, 97930, 813, -1000, -150,
	-1000, -1000, -151, -1000, 3444, 398, 23112, -1000, 1004, 3246,
	-1000, -1000, -1000, -1000, -1000, -1000, -208, 108620, 108620, 2231,
	3586, -1000, 3552, 834, 812, 102, 3548, 397, 393, 379,
	-208, 108620, 108620, 108620, -1000, -1000, -1000, -1000, 211, -1000,
	-1000, -1000, 209, -1000, -1000, -1000, -1000, 2605, -1000, -45,
	-1000, -1000, -1000, 44715, -1000, -1000, 3249, 1204, 1203, -1000,
	-1000, -1000, -1000, 3322, 87841, 3490, 1944, 1939, 3032, -1000,
	2341, -1000, 1051, -1000, 2006, -1000, 44715, 643, 2715, 641,
	639, 3618, 1973, 3617, 1084, 3026, 2269, 3025, 2269, -1000,
	-1000, -1000, 959, -1000, 119103, -1000, 636, 635, -1000, -49,
	1721, 2007, 997, -1000, -1000, 44715, 44715, 97401, -1000, 446,
	3250, -21, -1000, -1000, 1692, 1200, -1000, -1000, -1000, -1000,
	2207, 1685, 1199, -1000, -1000, -1000, -1000, -1000, -1000, 996,
	-1000, 2988, 2987, 108620, -1000, 991, -1000, -1000, 44715, -1000,
	-50, 1188, 3384, 2339, 87312, 1186, -1000, 1178, -1000, -1000,
	-1000, 3402, 2269, 3024, 1185, -1000, -1000, -1000, -1000, -1000,
	67481, -1000, 108620, 87312, 1776, 928, -1000, 2545, 928, 983,
	2866, -1000, 2685, -1000, 87312, 3616, 373, -156, -51, 63207,
	3443, -1000, 2271, 611, 87312, 936, -1000, 3518, -1000, -1000,
	-1000, -1000, 3393, 87312, 3442, 3023, 989, 87, 87312, 3569,
	-1000, -1000, 3439, 87312, 3021, 2264, 2338, 2498, 890, 72896,
	989, 2208, -80, -1000, 1888, 32157, 3247, -158, -1000, -1000,
	-1000, 1004, 60538, 52460, 44715, 3615, -164, -1000, -1000, -1000,
	-1000, -1000, 95280, 95280, 71828, 71828, 71828, 972, 108620, 108620,
	73954, -1000, -1000, 634, 108620, 108620, 633, -1000, 108620, 108620,
	3614, 71828, -56, 631, -1000, 918, 916, 915, -1000, -1000,
	-1000, -1000, -1000, 986, -1000, -193, 87, -1000, 2226, 87312,
	-1000, 19296, -1000, -1000, -1000, -1000, -1000, -1000, 988, -1000,
	-1000, 2119, 2298, 2119, 1885, 1882, -1000, -1000, 2243, -1000,
	-1000, -1000, -1000, 2637, 3248, 23112, 3364, 8634, 44715, 44715,
	579, 490, 396, 8634, 44715, 44715, 63207, 529, -180, 44715,
	44715, -1000, 44715, 811, 119103, 3585, 44715, 370, 369, -1000,
	-1000, -1000, 3522, -1000, -1000, -1000, 119103, 44715, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 367, -1000, 90, -1000, -1000,
	-1000, 114439, -1000, 44715, 366, 3320, -1000, 365, 363, 9957,
	434, 115726, 115697, 115660, 346, -1000, -1000, 344, 338, 119103,
	2910, 119103, -1000, -1000, 1050, 1050, 1394, 1394, 1394, 1394,
	3521, 1037, 1889, 1414, 453, 453, 453, 541, 632, 632,
	453, 453, 453, 2865, 2503, 622, 1403, -1000, -1000, 119103,
	119103, 335, -1000, -1000, -1000, -176, 334, 4923, -1000, 2781,
	3303, 119103, -1000, 52460, 2781, 2781, -1000, -1000, 2493, 108620,
	119103, 52460, -1000, 2764, -1000, 17656, -1000, 23112, -1000, -1000,
	-1000, -1000, 3518, -1000, 57342, -1000, 620, -1000, 8, -1000,
	3246, -1000, 914, -1000, -208, -208, -1000, -1000, 810, 3612,
	831, 23112, 332, -1000, -1000, -1000, -208, -208, -208, -1000,
	-1000, -1000, 3202, 119103, 108620, 108620, 1564, 93138, 1878, -1000,
	-1000, 1997, 2471, -1000, 3486, 3485, 108620, 3016, -1000, 2032,
	-1000, 1064, 115631, 52994, -1000, 52994, 108620, -1000, -1000, 1892,
	2547, 1124, -1000, 3279, 108620, -1000, 108620, -1000, -1000, 108620,
	108620, 87312, 108620, -1000, 3000, -182, 119103, -58, -1000, 913,
	-1000, 1422, -1000, 18751, 108620, 87312, 108620, 87312, 2161, -1000,
	-1000, -1000, 2998, -190, 23112, -1000, 3582, 3581, 3013, 3283,
	3580, 108620, -1000, 108620, 87312, 3198, -1000, -1000, -1000, -1000,
	1682, 1171, 983, -59, 619, -1000, 912, -1000, -1000, 911,
	983, -1000, 71828, 55152, 548, -1000, 2705, -1000, 92609, 2284,
	87, -1000, 3611, 95814, 617, -1000, 2218, -1000, 712, 66937,
	2207, 87, 87312, -1000, -1000, 548, 331, -60, -1000, 3056,
	1059, 23112, 87312, 3012, 2504, 890, 72896, -1000, 1409, 2554,
	-1000, -63, -1000, 526, 87, 2208, -1000, -80, 119103, -1000,
	909, -1000, -195, -1000, -1000, 330, -1000, 3195, 3194, -1000,
	2805, 52994, 615, 610, 108620, 3191, -1000, -1000, -196, 3115,
	3115, 71828, 55152, 71828, -1000, 986, -1000, 2412, -1000, -1000,
	-1000, -1000, -1000, 23112, 1681, -1000, 609, 606, -1000, -1000,
	-1000, -1000, 3248, 8634, 8634, 44715, 44715, 44715, 8634, 529,
	-197, -1000, 8634, 8634, -176, -1000, -1000, 118021, -1000, -1000,
	-1000, 119103, -1000, 18206, 2125, -1000, 115071, -1000, 30474, -1000,
	-1000, 44715, 44715, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48642, 2852, 603, 63207, -1000, -1000, 325, 1002, 44715,
	46398, 3050, 1002, 1002, -1000, -198, -1000, -1000, -1000, 3518,
	8, -1000, -1000, 3610, 23112, -1000, 71828, 830, -1000, 3608,
	-1000, -1000, -1000, -1000, -1000, 2749, -1000, -1000, -1000, 1984,
	2466, -1000, -1000, 1154, -1000, -1000, 108620, -1000, 108620, -1000,
	23112, 108620, 2822, 2325, -1000, 965, 2552, 597, 48642, 87312,
	887, -1000, 3478, 2800, -206, -1000, 108620, 44715, 108620, -207,
	-212, 2324, -1000, -1000, 2321, 44715, -1000, 63207, 595, 2269,
	2269, -213, -214, -1000, -1000, 44715, 1153, 108620, 31596, -1000,
	3607, 3250, -1000, -1000, -1000, -1000, 108620, 44715, 1142, -1000,
	-1000, -1000, 3578, 2269, 23112, -1000, 2269, 2269, 3283, 1123,
	108620, 87312, -1000, 2397, 2397, 71828, 55152, -1000, -99, 983,
	3437, 2701, 3605, -1000, -1000, -1000, -1000, 2546, -1000, -1000,
	108620, 2536, 975, -1000, -220, -1000, 907, 898, 73954, 964,
	944, -1000, -1000, -1000, -1000, 548, 3436, -1000, 3573, 594,
	593, 108620, 2262, 592, 23112, 3244, 890, 72896, -1000, 3144,
	1888, -1000, 2333, 108620, 3237, -1000, 2554, 591, -1000, 972,
	590, 589, 3120, 3120, -221, 52994, 52994, -222, 588, 972,
	-1000, -223, -1000, -1000, -1000, -1000, -107, -1000, 871, 859,
	-1000, -1000, 87312, 87312, 44715, 44715, -1000, 8634, 8634, 8634,
	-1000, 313, -1000, -1000, 2208, 3302, -1000, -115, 115042, 115005,
	5024, 48642, 63207, -228, -1000, -1000, 108620, 119103, -136, -1000,
	119103, 583, 582, 440, -1000, -1000, -1000, 587, -1000, -1000,
	3603, -1000, 96872, -1000, -1000, 96343, -1000, 1734, -1000, -1000,
	-1000, 108620, 2336, -1000, -1000, 1062, 44715, 1403, 576, 44715,
	-1000, 3432, -1000, 2615, 2851, 1934, 52994, -1000, 3248, -1000,
	114976, -1000, 1054, 2027, -1000, -1000, 119103, 3283, 52994, -1000,
	-1000, 563, 562, 119103, 556, 892, 2843, -1000, -1000, -1000,
	-1000, 119103, 555, 3384, -1000, -1000, -1000, -1000, 2269, 87312,
	-1000, -1000, -1000, -229, -1000, -1000, 2030, 87, 2116, 2742,
	-1000, 2284, 551, -1000, -1000, 2255, 2578, -1000, 95814, 31035,
	31035, 310, 3426, 944, -1000, 3514, -1000, 3425, 87, -1000,
	3569, 52994, -1000, 87312, 52994, 2261, 2055, 2468, 72896, -1000,
	2498, -1000, -1000, -230, 108620, 1888, -1000, -1000, 71828, 71828,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1054, -231, -236, -1000, 71828, -1000, -1000, 2412, -1000,
	108620, -1000, 108620, -1000, -1000, -237, -239, -1000, 2141, 44715,
	30474, -1000, -1000, 5024, -244, -1000, -139, -1000, 3422, 46398,
	3602, 3601, 3599, -1000, -1000, -1000, 1975, -1000, 1959, -1000,
	-1000, 3009, 2778, 15877, 2424, 108620, 15659, -1000, 2849, -1000,
	-1000, 2701, 550, -1000, -1000, -1000, -1000, 933, 108620, 2701,
	2775, 87312, 1060, -245, 2119, 2119, 44715, 29913, 2159, 44715,
	-1000, -1000, 3283, -1000, 2820, 3553, -1000, 964, -1000, 2148,
	108620, -1000, 3275, -1000, 3190, -1000, -1000, -1000, 2705, 87,
	-1000, -1000, 87, -1000, 309, -250, 1059, -252, 87312, 1998,
	-1000, 890, -1000, 2504, 1004, -1000, -1000, -253, -255, 1934,
	1054, 971, -258, -1000, -260, -261, -1000, -1000, 307, 45837,
	45837, 45837, -176, -192, -1000, 108620, 549, -1000, -1000, -1000,
	-1000, -1000, -1000, 2983, 981, -1000, 2257, 1911, 301, 1089,
	-1000, -1000, 2116, 108620, -1000, -1000, -1000, 978, 548, -1000,
	44715, 1054, -263, -1000, 1044, -266, -1000, 1043, -268, -1000,
	2825, -1000, -271, 2269, 976, 3366, -1000, -1000, -1000, 2255,
	87312, -273, -1000, -1000, 2374, -1000, 2701, 975, -1000, -1000,
	1054, 544, 1934, 540, 1459, 890, -1000, -1000, 1464, 3244,
	3150, 972, 972, 2701, 1934, 1004, 528, 972, -1000, -1000,
	-1000, 3033, -1000, 49764, 2252, 1869, 117007, 3033, 3033, -1000,
	-1000, 108620, 3347, -1000, 2260, 2259, 1494, -1000, -1000, -1000,
	-1000, -1000, -1000, 2800, -274, 3344, 2424, 119103, 2701, -1000,
	2119, 2740, -1000, 2119, 2824, -1000, 2147, -1000, -1000, -1000,
	1792, 3505, 1780, 527, -1000, 108620, 1803, 1800, 3598, 2116,
	2255, 1934, 52994, 2701, 52994, -1000, -1000, 108620, -1000, 2055,
	1306, -1000, -1000, 2116, 2701, -1000, -1000, -1000, 1788, 3472,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 875, -1000,
	3161, -1000, 1103, 2242, 2242, 1004, -1000, 868, 2257, -1000,
	-1000, 516, -1000, 507, -1000, 2215, -1000, -1000, -1000, -1000,
	108620, -1000, -1000, 3597, -1000, 964, -1000, 2701, -276, 2116,
	-281, -1000, -208, 1998, -1000, 1599, 971, 2116, 1860, -1000,
	-1000, 2185, 45276, 44715, -1000, 3498, -1000, -1000, 2524, -1000,
	-1000, 44715, 2800, 44715, 44715, 58946, -282, -1000, 2255, 2116,
	1054, 971, 1934, 1459, 60538, 1004, 971, -1000, -1000, -1000,
	119103, -1000, -1000, -1000, 119103, -1000, -284, -295, -283, 95280,
	2245, 1780, 971, 1934, 1004, 2701, -1000, -269, -1000, 1004,
	2116, 1141, -297, -1000, -1000, -1000, -1000, 1004, 2701, -1000,
	2116, -1000, -1000, -1000, 504, -1000, -1000, 2116, 971, 44715,
	971, 1004, -305, 1004, -1000, 2116, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4422, 4421, 4420, 4419, 4418, 4417, 4416, 4415, 4413,
	4408, 4406, 4405, 4404, 4403, 4402, 4401, 4397, 4396, 4394,
	4393, 4392, 4391, 4390, 4389, 4388, 4387, 4385, 4384, 4381,
	4377, 4375, 4372, 4371, 4369, 4367, 4366, 4365, 4364, 4363,
	4362, 4360, 4359, 4358, 4357, 4356, 4354, 4353, 4351, 4350,
	4348, 4347, 4344, 4343, 4340, 4336, 4335, 4334, 4329, 49,
	4328, 4326, 4325, 4322, 4319, 4318, 4317, 4316, 4315, 4312,
	4311, 4310, 4309, 4307, 4306, 4304, 4300, 4295, 4294, 55,
	4292, 251, 4291, 4290, 4286, 4282, 4281, 4279, 4275, 4274,
	4270, 4269, 4267, 4263, 250, 4261, 131, 4260, 4259, 4258,
	4254, 4253, 249, 4252, 4247, 4243, 4237, 260, 4236, 4234,
	4233, 4232, 4227, 4224, 4223, 4221, 4220, 4218, 4217, 87,
	182, 4211, 4208, 1576, 4206, 4205, 4198, 4197, 4196, 4195,
	4194, 4193, 4188, 4186, 234, 4181, 248, 4179, 4177, 4175,
	4174, 4173, 4172, 4167, 4165, 4164, 4163, 4162, 4161, 4157,
	4156, 4155, 4153, 4152, 4151, 4146, 4143, 4141, 4139, 4136,
	4134, 4133, 4128, 4127, 4126, 4125, 4124, 4123, 4122, 4121,
	4118, 4116, 4114, 258, 176, 4113, 4109, 247, 246, 4108,
	4106, 4102, 4095, 4092, 120, 4, 35, 4089, 4087, 114,
	83, 79, 90, 89, 99, 4078, 105, 4076, 112, 57,
	4074, 20, 2, 236, 233, 11260, 217, 4068, 4063, 4050,
	224, 184, 4049, 221, 4046, 4043, 4041, 4040, 65, 46,
	175, 164, 158, 156, 298, 4038, 147, 92, 71, 53,
	41, 22, 94, 241, 9, 4035, 239, 12, 137, 1,
	32, 4030, 4027, 4025, 4022, 3318, 121, 4016, 243, 230,
	153, 4013, 4012, 4011, 607, 4010, 4009, 50, 4008, 102,
	73, 119, 8, 113, 4006, 144, 33, 4005, 169, 51,
	4004, 146, 84, 82, 9044, 6173, 4003, 101, 69, 140,
	2897, 190, 157, 192, 115, 145, 150, 191, 196, 194,
	165, 63, 4002, 228, 4001, 3409, 66, 171, 4000, 3999,
	3998, 72, 193, 97, 3997, 3994, 67, 6, 23, 15,
	173, 13, 106, 42, 29, 3991, 24, 3990, 3989, 3988,
	3985, 3984, 39, 149, 3983, 259, 3982, 118, 45, 30,
	3980, 28, 199, 3979, 208, 135, 3978, 3975, 238, 197,
	181, 3974, 93, 214, 3972, 3970, 3967, 3966, 3964, 142,
	3, 122, 3963, 3962, 133, 3961, 47, 220, 186, 3957,
	61, 3953, 3952, 163, 95, 127, 257, 128, 213, 117,
	209, 179, 211, 3951, 3948, 3947, 168, 3945, 3944, 207,
	139, 3943, 3942, 195, 262, 80, 38, 70, 218, 78,
	183, 161, 3941, 187, 3940, 3939, 261, 162, 201, 16,
	7, 88, 124, 3937, 5, 216, 143, 215, 107, 3935,
	6228, 2297, 1595, 3934, 3933, 136, 116, 75, 111, 141,
	244, 64, 3931, 3927, 2124, 3925, 3924, 3923, 3922, 166,
	3921, 3920, 3918, 130, 148, 203, 3917, 77, 59, 44,
	18, 108, 229, 256, 103, 205, 159, 235, 3916, 3915,
	3913, 180, 3912, 68, 132, 3910, 188, 252, 54, 3909,
	155, 3908, 134, 177, 58, 138, 3907, 202, 3905, 3904,
	3903, 3902, 3901, 3897, 3895, 152, 212, 3892, 3891, 3886,
	60, 174, 3884, 242, 170, 160, 91, 43, 3883, 86,
	2070, 3882, 85, 104, 52, 240, 125, 245, 3880, 4039,
	56, 3879, 0, 12361, 6833, 10693, 11569, 3878, 4620, 3877,
	3876, 3873, 198, 129, 3872, 3869, 3867, 100, 3866, 76,
	3864, 3863, 62, 3859, 21, 11, 17, 31, 26, 266,
	167, 3858, 3857, 25, 123, 109, 3856, 253, 210, 3851,
	3850, 3848, 3847, 81, 3843, 40, 3841, 37, 3834, 3832,
	48, 14, 27, 3830, 3829, 232, 3825, 206, 225, 3824,
	151, 3820, 3403, 126, 3818, 3816, 237, 96, 3815, 274,
	3813, 3361, 3811, 3809, 19, 3808, 3807, 226, 172, 204,
	3806, 3805, 154, 3801, 3797, 3796, 269, 3794, 3793, 36,
	3791, 10, 3790, 3788, 189, 3169, 3786, 3785, 34, 3783,
	178,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 566, 566, 21,
	40, 22, 41, 15, 567, 567, 567, 567, 33, 23,
	42, 26, 26, 26, 26, 26, 187, 187, 187, 187,
	20, 20, 36, 36, 221, 221, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 565, 565, 223, 223, 222, 217, 217, 568, 568,
	224, 224, 224, 226, 226, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 464, 464, 464, 497, 497, 496,
	496, 496, 495, 495, 581, 581, 582, 582, 582, 582,
	582, 122, 122, 362, 362, 362, 48, 48, 48, 48,
	48, 560, 560, 189, 189, 189, 191, 191, 190, 190,
	190, 190, 70, 70, 573, 573, 574, 574, 572, 575,
	575, 575, 188, 188, 188, 118, 118, 118, 118, 118,
	119, 119, 120, 120, 192, 192, 192, 194, 194, 193,
	193, 193, 193, 193, 193, 193, 193, 198, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 98, 98, 499,
	499, 500, 500, 183, 183, 184, 184, 184, 184, 185,
	185, 186, 186, 186, 62, 195, 195, 197, 197, 196,
	196, 50, 50, 50, 50, 50, 50, 50, 51, 51,
	51, 51, 51, 52, 52, 52, 52, 52, 52, 53,
	53, 53, 53, 53, 53, 60, 60, 60, 60, 174,
	174, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 67, 67, 67, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 584, 584, 585, 585, 586, 586,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 76, 76, 324,
	324, 294, 294, 77, 77, 77, 78, 78, 79, 79,
	64, 64, 558, 558, 339, 339, 455, 455, 81, 81,
	361, 361, 82, 82, 82, 82, 82, 82, 83, 83,
	83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 91,
	91, 91, 91, 91, 92, 92, 92, 89, 89, 89,
	86, 86, 86, 85, 85, 85, 90, 90, 90, 557,
	283, 283, 88, 88, 88, 87, 87, 87, 340, 340,
	93, 93, 93, 93, 295, 94, 94, 94, 94, 94,
	94, 94, 94, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 457, 457, 95, 95,
	95, 422, 422, 99, 99, 99, 377, 377, 100, 100,
	100, 100, 100, 101, 101, 101, 101, 101, 101, 121,
	121, 121, 121, 121, 121, 562, 562, 332, 332, 248,
	248, 248, 248, 111, 111, 111, 111, 112, 112, 112,
	113, 113, 179, 179, 128, 128, 128, 128, 128, 127,
	127, 127, 127, 127, 127, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 58, 58, 59, 59, 59, 59,
	59, 130, 130, 578, 578, 132, 129, 129, 129, 131,
	131, 131, 131, 133, 134, 134, 134, 134, 134, 134,
	134, 134, 135, 135, 489, 489, 348, 348, 487, 487,
	509, 509, 488, 488, 299, 299, 299, 299, 299, 300,
	300, 300, 498, 498, 498, 498, 498, 498, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 180, 180, 181, 182, 182,
	182, 182, 182, 159, 159, 159, 173, 173, 173, 173,
	173, 173, 173, 162, 162, 162, 146, 146, 137, 137,
	137, 137, 137, 137, 137, 141, 141, 141, 141, 141,
	141, 141, 141, 138, 138, 148, 148, 148, 148, 148,
	142, 142, 143, 143, 143, 143, 169, 169, 145, 145,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 139,
	139, 139, 139, 150, 150, 150, 150, 384, 384, 384,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 172, 172, 172, 172, 172, 172, 576, 576, 577,
	577, 166, 166, 166, 166, 166, 166, 436, 436, 160,
	160, 160, 160, 165, 165, 165, 165, 168, 168, 168,
	168, 367, 367, 157, 157, 157, 158, 158, 158, 163,
	163, 164, 161, 161, 167, 167, 167, 167, 140, 140,
	140, 588, 588, 588, 170, 170, 156, 156, 171, 171,
	171, 171, 171, 171, 171, 171, 152, 152, 152, 151,
	151, 151, 151, 154, 154, 155, 155, 155, 155, 155,
	153, 144, 559, 559, 555, 555, 555, 555, 555, 555,
	555, 555, 556, 556, 556, 556, 561, 561, 104, 104,
	104, 104, 104, 114, 114, 114, 114, 114, 105, 105,
	105, 105, 105, 107, 107, 106, 106, 106, 106, 71,
	71, 71, 71, 71, 14, 14, 14, 72, 72, 239,
	239, 201, 201, 201, 313, 313, 202, 202, 307, 307,
	307, 307, 199, 199, 200, 200, 73, 73, 589, 589,
	589, 569, 569, 569, 570, 570, 570, 570, 570, 570,
	301, 301, 302, 302, 402, 402, 402, 402, 402, 305,
	305, 305, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 308, 308, 225, 225, 225, 311, 312, 312, 309,
	309, 310, 310, 310, 315, 315, 314, 317, 317, 316,
	401, 518, 518, 520, 520, 520, 520, 520, 520, 520,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 385, 385, 590, 590, 516, 516, 516, 517, 512,
	512, 513, 513, 513, 513, 513, 303, 303, 304, 304,
	304, 304, 514, 515, 330, 330, 440, 519, 519, 521,
	521, 523, 591, 591, 591, 591, 591, 591, 592, 592,
	592, 400, 400, 399, 399, 322, 322, 524, 524, 524,
	524, 525, 525, 525, 525, 525, 528, 527, 526, 526,
	526, 526, 526, 75, 75, 75, 364, 364, 363, 363,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 176, 176, 251, 251, 69,
	69, 69, 12, 12, 12, 571, 571, 571, 74, 74,
	74, 74, 74, 74, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 564, 564, 563, 563, 252, 252,
	594, 594, 80, 80, 80, 80, 80, 80, 80, 80,
	458, 458, 459, 459, 68, 68, 68, 68, 68, 386,
	386, 383, 383, 382, 382, 329, 329, 438, 438, 438,
	439, 256, 256, 257, 257, 218, 218, 218, 28, 27,
	19, 19, 24, 24, 25, 25, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 44, 44, 44, 44, 47, 47, 43,
	43, 43, 43, 45, 45, 39, 39, 579, 579, 580,
	580, 110, 110, 115, 115, 115, 115, 115, 116, 116,
	116, 116, 117, 117, 117, 117, 126, 126, 175, 175,
	175, 175, 175, 175, 175, 49, 49, 49, 49, 61,
	61, 61, 61, 124, 596, 596, 596, 125, 125, 125,
	595, 595, 249, 249, 396, 396, 397, 397, 597, 597,
	398, 398, 398, 398, 398, 242, 241, 243, 243, 244,
	244, 66, 66, 66, 234, 234, 233, 231, 231, 501,
	501, 236, 236, 237, 237, 227, 227, 228, 228, 229,
	229, 230, 230, 240, 240, 598, 598, 102, 102, 102,
	178, 178, 293, 293, 293, 393, 393, 393, 323, 323,
	263, 263, 395, 395, 395, 395, 360, 360, 360, 177,
	177, 337, 337, 350, 350, 351, 351, 452, 452, 352,
	108, 108, 109, 109, 123, 123, 205, 205, 203, 203,
	203, 203, 203, 203, 203, 203, 210, 210, 211, 211,
	212, 212, 213, 214, 214, 214, 214, 341, 341, 215,
	215, 215, 204, 204, 204, 206, 206, 206, 206, 206,
	206, 206, 209, 209, 209, 209, 216, 216, 216, 208,
	208, 535, 535, 535, 537, 537, 539, 539, 538, 538,
	534, 534, 536, 536, 593, 593, 366, 366, 366, 320,
	321, 318, 318, 319, 319, 327, 327, 325, 326, 326,
	328, 328, 437, 437, 437, 219, 219, 219, 357, 357,
	357, 357, 358, 358, 389, 389, 387, 387, 387, 387,
	388, 388, 390, 390, 390, 391, 391, 392, 392, 354,
	354, 355, 355, 356, 356, 356, 356, 418, 418, 207,
	207, 207, 334, 334, 334, 335, 335, 408, 408, 408,
	408, 408, 408, 409, 409, 407, 407, 407, 407, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 442, 443,
	443, 336, 336, 444, 394, 394, 553, 553, 553, 554,
	554, 435, 435, 445, 445, 445, 445, 445, 445, 433,
	433, 434, 434, 453, 454, 454, 370, 370, 370, 370,
	368, 368, 371, 371, 371, 371, 371, 369, 369, 446,
	446, 446, 446, 359, 359, 447, 447, 447, 447, 448,
	449, 449, 450, 450, 403, 404, 404, 460, 460, 460,
	460, 462, 333, 333, 333, 333, 333, 511, 510, 510,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 477, 477, 477, 477, 477, 477, 477, 463, 463,
	463, 463, 463, 467, 467, 467, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 468, 468, 473,
	473, 474, 474, 474, 469, 470, 475, 475, 475, 475,
	599, 599, 479, 479, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 465, 465, 465, 472, 472, 472, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 378, 378, 380, 380, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 412, 412, 412, 412, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 529, 529, 529, 529, 529, 529, 529, 529,
	414, 414, 532, 532, 533, 533, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 540, 540, 541, 541, 543,
	543, 544, 544, 545, 546, 546, 546, 547, 548, 548,
	542, 542, 549, 549, 549, 549, 550, 550, 551, 551,
	551, 551, 551, 552, 552, 552, 552, 552, 424, 424,
	425, 425, 431, 431, 431, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 253, 253, 253, 253, 253, 346, 346, 344, 344,
	344, 347, 347, 345, 345, 343, 343, 342, 342, 421,
	421, 419, 419, 423, 423, 372, 372, 478, 478, 478,
	478, 478, 478, 478, 478, 373, 373, 373, 381, 374,
	374, 375, 375, 375, 375, 375, 415, 416, 376, 376,
	376, 417, 417, 426, 430, 430, 429, 428, 428, 427,
	427, 405, 405, 406, 406, 353, 353, 600, 600, 349,
	349, 451, 451, 451, 451, 297, 297, 338, 338, 296,
	296, 288, 288, 289, 289, 289, 289, 331, 331, 432,
	432, 480, 480, 481, 481, 482, 482, 483, 483, 484,
	485, 486, 420, 420, 273, 272, 260, 261, 271, 270,
	269, 259, 262, 266, 267, 268, 264, 265, 279, 278,
	277, 232, 235, 284, 285, 285, 287, 287, 286, 286,
	275, 276, 456, 258, 290, 290, 291, 291, 291, 292,
	292, 292, 292, 254, 254, 255, 255, 280, 280, 281,
	282, 282, 274, 274, 274, 245, 245, 245, 246, 246,
	247, 247, 494, 494, 491, 491, 491, 492, 492, 492,
	493, 493, 493, 493, 490, 490, 490, 490, 490, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 503, 503,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 505, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 508,
	508,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 2, 6,
	4, 7, 7, 7, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 3,
	2, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 13, 16, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 8, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 4, 4, 5, 5, 3, 3, 4, 4, 3,
	6, 7, 4, 6, 7, 8, 9, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 12, 15, 3, 1, 0, 4, 3, 0, 1,
	1, 4, 4, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 575, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-175, -180, -181, -182, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -176, -177, -178, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-131, -132, 444, -49, -61, -125, -124, 73, 127, 403,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -583, 102, -536, -84, -87, -117, -587,
	158, 215, -105, -106, 358, -112, -113, 410, -115, -116,
	412, 159, -56, -55, 153, -203, -205, -129, -130, -179,
	-137, -138, -139, -140, -141, -142, -143, -169, -144, -145,
	-146, -147, -148, -149, -153, -172, -150, -151, -152, -155,
	-154, -156, -161, -157, -158, -159, -160, -162, -163, -165,
	-166, -167, -168, -170, -171, 449, -164, 507, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -64, -66, -68, -71, -72, -73, -80,
	-74, -75, -535, -85, -86, -89, -91, -92, -88, -90,
	409, -206, -204, 572, 522, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -35, -40, -41, -37, -38,
	-36, -39, -42, -43, -44, -45, -46, -47, -27, -33,
	-34, -28, -29, -30, -31, -32, -15, -26, 541, 550,
	-209, -207, -208, -216, 436, 530, 481, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, -295,
	2, -275, -280, -281, -282, -274, -245, -505, -508, 4,
	-502, -506, 165, 224, 322, 21, 23, 22, 24, 25,
	26, 27, 28, 30, 31, 42, 43, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 116, 117, 118,
	119, 121, 126, 127, 130, 125, 129, 132, 133, 134,
	137, 138, 139, 141, 142, 144, 145, 146, 148, 149,
	151, 152, 153, 156, 154, 489, 155, 157, 158, 159,
	160, 163, 171, 172, 173, 178, 180, 184, 185, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 198, 202,
	204, 205, 206, 207, 208, 214, 215, 217, 218, 219,
	220, 225, 226, 227, 231, 228, 237, 238, 242, 243,
	244, 246, 250, 251, 252, 253, 254, 255, 257, 259,
	258, 261, 264, 265, 268, 272, 273, 277, 278, 274,
	279, 280, 282, 283, 286, 284, 287, 288, 285, 289,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 290, 305, 303, 307, 308, 309, 320, 318,
	313, 314, 310, 315, 311, 312, 316, 317, 324, 325,
	328, 212, 330, 331, 334, 352, 338, 339, 340, 343,
	344, 347, 350, 351, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 363, 365, 366, 367, 369, 370, 371,
	373, 375, 376, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 389, 391, 390, 392, 394, 396, 397, 398,
	403, 408, 405, 406, 407, 409, 410, 411, 412, 414,
	415, 416, 418, 419, 420, 421, 423, 425, 426, 429,
	430, 446, 447, 465, 427, 428, 431, 432, 433, 434,
	435, 439, 437, 438, 440, 441, 442, 444, 445, 448,
	449, 451, 452, 453, 454, 455, 456, 459, 461, 462,
	463, 464, 466, 469, 470, 471, 472, 467, 480, 474,
	475, 477, 478, 482, 483, 484, 485, 486, 487, 488,
	490, 492, 500, 501, 502, 504, 507, 508, 509, 510,
	498, 512, 513, 516, 517, 518, 521, 519, 520, 522,
	524, 527, 528, 529, 535, 534, 536, 542, 543, 545,
	546, 547, 37, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 122, 123, 150, 161, 162, 174, 186, 187,
	199, 201, 209, 210, 211, 232, 233, 235, 240, 262,
	327, 329, 345, 349, 364, 368, 372, 374, 388, 422,
	457, 468, 473, 493, 494, 495, 496, 503, 505, 530,
	531, 532, 537, 544, -295, 2, -275, 336, -268, 2,
	-245, -245, 375, 29, 2, 29, 363, 438, 484, 486,
	2, -562, -332, 2, 29, -248, -245, 102, 197, 436,
	-268, 2, -562, -332, 25, 2, -245, 2, 350, 22,
	28, 66, 77, 98, 137, 160, 181, 184, -586, 352,
	382, 425, 440, 480, 490, 504, 2, 534, 283, 437,
	481, 224, 118, 509, 431, -571, 429, 430, 350, 380,
	418, 200, 523, -249, 2, 427, -245, 283, 2, 575,
	94, 273, 74, 422, 441, -134, 501, -133, 493, 431,
	-135, -489, 2, 305, -245, 575, 575, 575, 29, -258,
	-245, 481, 224, 431, 118, 478, 575, 2, 481, 355,
	534, 437, 118, 385, 224, 509, 431, -571, 283, -560,
	2, -555, 4, -506, -502, -289, -288, 481, 487, 118,
	-282, -274, 565, -281, 575, 575, 575, 2, 243, 244,
	384, 383, 441, 442, 575, 575, 575, 575, 429, 2,
	160, 22, 28, 66, 93, 98, 124, 181, 184, 341,
	-584, 352, 382, 440, 480, 483, 490, 504, -570, 464,
	68, 431, -569, -571, 283, 509, 137, -382, 118, 273,
	195, 517, 486, 484, 515, 130, 231, 520, 519, 575,
	575, -96, 2, 572, 33, 32, 139, 444, -198, 481,
	236, 2, -245, 575, 575, 2, 243, 244, 429, 430,
	575, 575, 182, -555, 2, 575, 575, 2, 243, 244,
	429, 430, 236, 2, 68, 433, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 2,
	-173, 441, 464, 206, 47, 46, 74, 29, 381, 79,
	356, 119, 145, 510, 198, 224, 225, 251, 93, 94,
	-384, 45, 244, 243, 430, -576, 429, -436, 482, 432,
	438, 477, 255, 427, 501, 102, 524, 419, 547, 385,
	386, 475, 398, 274, 154, 4, 118, 305, 443, 493,
	273, 426, 359, 84, -593, 2, 481, -595, 2, 501,
	501, 2, -595, 2, -595, 2, -595, 2, -596, 501,
	544, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, -204, -206,
	-205, 575, 575, 575, 575, 575, 575, 575, -173, 441,
	2, 74, 29, -325, -327, 514, 234, 147, 342, -203,
	-205, 2, -535, -487, 2, -410, -509, -412, 563, 564,
	556, 479, 67, 321, 548, -424, 124, 515, 336, -508,
	-413, -426, 150, 422, -347, 8, 9, 5, 6, 7,
	-254, -414, -420, 506, 164, 326, -292, 576, 10, 572,
	-532, -205, -425, 38, 201, 65, -491, -291, -255, -463,
	235, -290, -274, -529, -530, 4, -502, -503, -492, -466,
	-474, -470, -471, -477, -245, -505, 77, 110, 111, 109,
	114, 113, 276, 275, 115, 112, 443, 523, 66, 37,
	209, 210, 240, 327, 211, 75, -531, 138, -504, 232,
	233, 457, 51, 388, 174, 123, 122, 329, 56, 54,
	531, -475, 120, 493, 494, 495, 496, 186, 187, 58,
	161, 162, 349, 372, 473, 503, 505, 199, 262, 44,
	106, 183, 230, 213, 239, 241, 245, 263, 266, 306,
	319, 323, 346, 348, 417, 450, -599, 532, 468, 69,
	70, -537, 390, -538, -268, -537, 575, 575, 577, 575,
	-318, -320, -321, 2, 29, 135, 572, 2, -441, 2,
	-442, -446, -205, 256, -445, 572, -443, 570, -275, 337,
	-533, 423, -529, -530, -254, -274, -291, 4, -502, -504,
	574, -322, 572, 118, 481, 78, 224, -377, 572, -245,
	29, 336, 497, 577, -319, 379, -422, 572, 336, 182,
	339, 60, 287, 2, 2, 2, 2, 2, 209, -245,
	481, 117, 2, 254, 2, 2, 2, 2, 2, 2,
	2, -340, 209, 2, -275, 534, -340, 209, 2, -340,
	209, 2, -383, 2, 87, -259, 209, 2, -245, -283,
	209, 2, -278, -280, -287, 209, 2, -285, -245, -500,
	209, 2, -499, -494, 10, -493, 5, 4, -502, -506,
	-503, -505, 77, -410, 2, -123, 2, 60, -245, 534,
	2, 2, 446, 2, 572, -134, 71, 501, 44, 441,
	-397, 2, -398, -241, -242, -243, -453, -244, 242, 378,
	387, 551, 128, 321, 547, -487, -578, 182, 555, 497,
	-487, -348, 574, 2, 2, 2, 2, 2, 2, -446,
	209, -275, 2, -272, -490, 4, -502, -506, -503, -507,
	29, 32, 33, 34, 36, 38, 39, 40, 41, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 109, 110,
	112, 111, 113, 114, 115, 124, 128, 131, 135, 136,
	140, 143, 147, 164, 166, 179, 181, 182, 197, 200,
	203, 216, 229, 234, 236, 256, 260, 267, 275, 276,
	321, 326, 332, 336, 337, 341, 342, 361, 377, 393,
	413, 436, 443, 460, 476, 481, 491, 497, 499, 506,
	514, 515, 523, 525, 533, 538, 539, 540, 541, -508,
	2, -446, 209, 2, -277, 209, -446, -280, 2, -259,
	2, -271, -490, 2, -296, 209, -275, -276, -280, -278,
	2, -285, 2, -499, 209, 2, 534, 236, 497, 577,
	-338, -288, -289, -486, 8, -331, -245, 574, -410, 2,
	-123, -107, 2, 179, -410, 209, 2, -123, 209, 2,
	-410, 209, 2, -123, 209, 2, -573, 2, -499, 209,
	-245, 2, 287, 2, 2, 504, 2, 98, 481, 117,
	2, 407, -585, 425, 508, 2, 2, 2, 2, 2,
	2, 2, 481, -264, 2, -245, 179, -285, 209, -286,
	2, 437, -594, 390, -499, 209, 2, 534, -278, 209,
	2, -278, 224, 238, -259, 209, 2, 486, 484, 486,
	484, 182, 2, 236, 2, 236, 2, -447, 2, -448,
	-442, -449, 570, 337, -457, 2, -456, -493, 530, -96,
	572, -96, 572, 441, 572, -499, -275, -275, -410, 2,
	-123, -107, 2, -410, 2, -123, 2, -120, -499, -119,
	572, 182, -410, 2, -123, -107, 2, -410, 2, -123,
	2, -198, 179, 2, 118, 481, -173, 2, 179, 525,
	2, 8, 2, 216, -499, 432, 386, 171, 2, 446,
	2, 447, 74, -384, 547, 74, 182, 2, 182, 2,
	-367, 2, 541, 182, 2, 2, -559, 2, 336, 182,
	2, 182, 2, 182, 2, 182, 2, 182, 2, 383,
	442, 502, 244, 2, -123, 538, -107, -410, 538, 2,
	-577, 179, 430, -410, 2, 500, 253, 155, 182, -367,
	2, 182, 2, 182, 2, 5, 2, 384, 465, 2,
	242, 378, 465, 2, -275, -588, 2, 481, 534, 437,
	2, 2, 88, 89, 182, 2, 182, 2, 196, 182,
	2, 182, 547, 2, -359, -446, -396, -397, -396, 497,
	-325, -327, -173, 446, 2, -210, -357, -212, 179, -387,
	-388, -213, 267, 166, 332, -214, -366, 29, 135, -366,
	-366, 60, 573, 573, 11, 12, 76, 42, 563, 564,
	565, 566, 177, 567, 568, 561, 562, 560, 553, 554,
	558, 248, 249, 95, 557, 555, 86, 281, 424, 167,
	168, 169, 170, 404, 222, 35, 223, 14, 15, 16,
	34, 341, 266, 548, 213, 450, 556, 17, 18, 19,
	239, 241, 323, 50, 216, -253, -298, -410, -410, -410,
	-410, -410, -410, -410, 348, 572, -353, -405, 570, -205,
	572, 572, 572, -486, -205, -410, -424, 573, -345, 572,
	-205, -424, -419, 572, 422, 570, 572, -427, -410, 5,
	5, 5, 572, 574, -540, 542, 179, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 374, -468, 572, -467, 572, -467, -467, 535,
	-465, 572, 550, 543, 572, -465, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 535,
	577, -537, -322, 572, -349, -451, -410, 565, -349, -349,
	336, -342, -410, 106, -370, 245, 306, 183, 263, 417,
	230, -407, 576, -407, -435, 550, -205, -443, -274, -205,
	-445, 572, -441, -435, -97, -486, -81, -94, -102, -123,
	-136, -177, -178, 565, -275, 572, 182, 572, 574, -490,
	182, -331, -259, -275, -290, -291, -296, 134, -342, -555,
	509, 431, -331, -248, 39, -421, -460, -461, -511, 576,
	-510, -463, -473, -469, -472, 364, 368, -492, 54, 531,
	-475, 235, 4, -502, -504, 232, 233, 457, 51, 388,
	174, 123, 122, 329, 56, 493, 494, 495, 496, 186,
	187, 58, 532, 468, 69, 70, -555, 509, 431, -331,
	179, -497, 2, -496, -495, 115, 443, -493, 5, 2,
	150, 2, 2, 2, -245, -224, 577, 64, 411, 150,
	-340, 209, -224, 150, -224, 150, -297, 209, -296, -224,
	150, -224, 577, 150, -224, 577, 150, 574, 577, 150,
	-497, 2, -383, -489, -342, 39, -397, 2, 124, -495,
	-597, 577, 265, -300, 280, 320, 205, 337, 545, 330,
	128, -498, 5, 4, -420, -432, 124, 273, 235, -480,
	-482, 8, -481, 9, -483, 563, 564, -488, -487, 108,
	574, -490, -221, 405, 444, -220, 24, 30, 139, 226,
	309, 528, 156, -310, 227, 351, 355, 150, 461, 518,
	-566, -567, 428, 488, 489, 90, 330, 444, 405, 150,
	-363, -365, 39, 116, 309, 350, 61, 219, 285, 286,
	463, 537, 150, 444, 405, 351, 24, 139, -236, -233,
	-567, 99, 405, 474, 377, -567, -223, 461, 518, -566,
	-567, 428, 405, -222, -310, 150, 576, 24, 405, 444,
	351, -581, -582, 139, 30, 405, 351, -563, -534, 541,
	150, -446, 209, -574, -119, 257, 5, 10, -499, -119,
	-338, 577, 577, -490, 565, 430, 429, 150, 150, 150,
	150, 179, 321, 2, 2, 2, 2, 2, 184, -569,
	-586, 2, 2, -275, 209, -324, 336, -558, -339, 481,
	-275, 321, 44, -277, 209, 2, -280, 534, -563, 321,
	-279, 209, -275, 39, 572, 321, 2, -383, 2, 224,
	-534, 321, -447, -293, -275, -442, -293, 444, -268, 39,
	-407, -275, 573, 577, -457, -457, -499, -186, 541, 182,
	102, 572, 572, -198, -454, 577, -453, 216, -500, -120,
	-499, -499, -558, -259, 2, -275, 2, 481, 246, -499,
	-186, 216, -499, -499, -499, -489, 29, 447, 2, 383,
	442, 502, 89, 447, 2, -275, 481, 118, 224, 80,
	-245, -561, 179, -556, 418, 431, 509, -555, -275, 118,
	-275, 118, -275, 118, -275, -275, 2, 2, 2, 2,
	2, 85, 85, 2, 46, -577, 179, 2, 500, 2,
	500, 2, -245, -245, -245, 464, 265, -275, 179, 481,
	224, 481, 224, 118, 182, 74, 118, 29, 481, -224,
	577, -249, -210, -357, -489, -358, -357, -211, -210, -213,
	179, 387, 519, 309, 448, 250, -388, -387, 29, -410,
	-392, 173, 308, -410, -390, -412, 563, 564, -481, -483,
	-341, 330, -204, -204, -204, -328, -437, -410, 377, 224,
	-462, -460, -460, -273, -490, 493, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, 266, 213, 450, 50, 216, -410, 497, -410, -410,
	-410, -410, 303, 321, 326, 506, 164, 516, 135, 330,
	-600, 476, 41, -417, -205, -346, 572, -431, 36, 460,
	29, -424, 572, 2, -405, -410, -406, -343, -342, -342,
	573, 533, 29, 135, 565, 2, 573, 577, 39, 573,
	-410, -343, -423, -419, -342, -430, -429, 538, -378, -379,
	546, 290, 121, 207, 288, -380, 435, -484, 8, -490,
	565, -541, 172, 200, 572, 573, 2, 573, 2, 573,
	-410, 2, 573, -410, 2, 573, -410, 2, 573, -410,
	2, 573, 2, -410, -410, -410, -410, -410, -410, -410,
	-342, 8, -484, -484, 493, 493, -484, -484, -484, -476,
	364, 365, 366, 367, 268, 269, 270, 271, 368, 369,
	370, 371, 295, 296, 297, 298, 291, 292, 293, 294,
	299, 300, 301, 302, 191, 192, 193, 194, 187, 188,
	189, 190, -476, -372, 2, -478, -342, 4, 546, 290,
	121, 207, 288, 435, 5, -372, 2, -373, 2, -410,
	-342, -374, -411, -412, 563, 564, 556, -424, -375, 2,
	-410, -343, -410, 57, 260, 499, -376, -410, 182, -342,
	-342, 2, -342, 2, -538, 39, -342, -334, 577, 182,
	39, 4, -334, -334, 572, 573, 577, -371, 204, 284,
	279, 238, -371, -441, -370, 245, -368, 346, -368, -368,
	-435, -260, 570, 578, -490, -435, -434, -433, 39, -268,
	343, -435, -435, 574, 573, -434, 571, -553, 572, 575,
	575, 575, 575, 575, -275, 572, -342, -490, 574, 466,
	573, 239, 239, 239, 239, 423, 573, 497, -557, -283,
	-287, 541, -96, 338, 573, 577, -333, 38, 570, 574,
	-484, 2, 2, -479, 535, 572, 572, -379, 572, 182,
	-557, -287, -332, 577, 497, -245, 2, -275, -340, -224,
	150, -340, -340, -224, 577, 150, -259, -278, -283, -285,
	-287, -245, -499, -500, -224, -279, -578, 573, 501, -398,
	-299, 387, 459, 406, 439, 478, 8, 9, 8, 9,
	577, -490, 577, -579, 93, 497, 78, 431, -238, 274,
	397, 309, 481, 422, -401, 209, 78, -512, -262, 93,
	-513, -245, 72, 515, 377, 181, 148, -579, 93, 377,
	-579, 93, 2, 226, 93, 444, 464, 497, 60, -446,
	42, 42, 29, -123, 261, 182, 547, 481, 224, 431,
	497, -446, -365, -460, 116, 285, 286, 60, -485, -480,
	563, 564, -485, 60, -485, -485, -485, 541, -277, -446,
	431, 497, 497, 396, 396, 497, 497, -598, 555, 396,
	577, 42, 42, 29, -123, 261, 182, 497, -296, -260,
	529, 43, 529, 497, 43, 431, 497, 577, 43, 43,
	497, 497, -564, -250, 105, 315, 278, 316, 97, 312,
	96, 311, 103, 313, 104, 314, 536, 324, 63, 310,
	289, 317, -251, -252, 357, 527, -499, 444, 405, 150,
	216, -454, 216, -454, -288, -245, 574, -123, -410, -410,
	-123, -410, -123, 46, 150, 2, -594, 254, 572, -303,
	321, 182, -331, -455, 236, 577, -339, 150, -496, -364,
	-363, 321, -279, 209, 2, 150, -322, 321, 144, 572,
	385, 2, 150, -261, 209, -246, -245, -383, -227, 485,
	150, -361, 525, -393, -123, 572, 124, 39, -393, -350,
	-351, -452, -352, -262, 572, -268, -407, -96, -456, 573,
	573, 573, -185, 340, -184, -245, 5, -198, 525, -302,
	-402, -401, -516, -517, -512, 266, 224, 515, 238, 165,
	-323, -263, -262, 117, -192, 541, -119, -120, 573, -454,
	216, -186, -186, -454, -454, -275, 179, -499, -186, -186,
	-186, 2, 2, 2, -367, -275, -259, -296, -275, 574,
	-331, -331, -287, -283, -367, -259, -367, -259, -367, -259,
	-123, -410, 2, 441, 179, 179, 574, -367, 385, 118,
	481, 355, 224, -275, -296, -275, -296, -259, 118, -259,
	119, -275, -446, -358, -211, 337, 250, 448, -390, -391,
	-412, 422, 423, -391, 422, 423, 8, 9, 8, 9,
	-215, 452, 325, -340, 577, -218, 40, 131, 250, -275,
	547, 146, -410, -410, 497, -600, 476, -417, 146, -410,
	303, 326, 506, 164, 516, 135, 330, 182, 572, -411,
	-411, 573, -344, -410, -410, 571, 580, 573, -327, 577,
	-325, -410, -342, -342, 573, 574, -342, -331, 571, 571,
	577, 573, -428, -429, 140, -410, 497, 497, 497, 497,
	572, 573, 574, -546, 347, 572, 572, -410, 573, 573,
	573, 573, 39, 577, 577, 577, 573, 577, 577, 577,
	573, 573, 573, 577, 573, 547, 547, 573, 573, 573,
	573, 577, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 573, 577, 573, 182,
	573, 573, -381, 361, 573, 11, 12, 563, 564, 565,
	566, 177, 567, 568, 561, 562, 560, 553, 554, 555,
	86, 281, 424, 14, 15, 16, 239, 216, -411, -411,
	-411, 573, -415, -416, 182, 179, 39, -376, -376, -376,
	573, 182, -342, 573, 573, 572, -539, 283, 321, 573,
	-404, -403, 539, -451, -335, 2, -441, -270, -490, -404,
	-404, -342, -410, 245, 245, -369, 525, 336, -371, -441,
	-434, -486, -409, -408, 180, 40, 131, 318, 212, -434,
	-268, -322, -434, -434, -490, -435, -435, -433, 573, -554,
	-486, 573, -336, -444, -533, -327, 574, -490, -195, -534,
	-174, 5, 326, -174, -174, -174, -331, 497, 497, 25,
	362, -460, 570, 571, 8, -490, 572, -484, -484, -484,
	-331, 182, 182, 182, -496, -496, 2, -224, -340, -224,
	-224, -296, -297, -224, -224, -224, -362, 541, -487, -397,
	513, 83, 387, 493, -487, -220, 405, -262, -262, -275,
	-284, -245, 195, 397, 26, 397, 265, 265, 321, -401,
	209, -226, 321, -460, -269, -245, 572, -385, 543, 250,
	250, 525, -262, -269, 250, 209, -262, 209, -269, 2,
	-269, -565, 387, 331, -410, -496, 272, 385, 322, -221,
	405, 444, -123, -123, -123, 572, -578, 525, 134, -275,
	-296, -275, -284, -279, 444, 405, 319, -290, -485, -485,
	-363, 444, 405, -284, -277, -496, -232, -245, -232, 431,
	-259, 396, 547, -598, -222, -123, -123, -123, 572, -260,
	-223, 405, 5, 209, -262, 5, -245, -262, -284, -496,
	-582, 24, -262, 209, -262, -284, -496, -250, -499, 326,
	521, -563, 431, 497, -446, -119, -189, 541, -119, -183,
	220, 565, -560, -245, 534, -245, -301, -304, -302, -262,
	-201, -202, 543, 541, 150, -294, -275, 570, -186, -499,
	-275, -285, -286, 150, -322, 321, -499, 39, 150, 572,
	2, 2, -278, 336, 321, -261, 209, -228, 141, -598,
	-259, -404, -335, -360, -395, 413, 336, -323, 530, -268,
	-360, -337, 577, 182, 555, 574, -323, -450, 565, -96,
	-96, -186, 577, 572, 555, 555, 572, -499, -499, 573,
	577, -226, -275, -261, 224, 224, -267, -246, 573, 577,
	574, 572, -194, 340, -193, 142, 252, 237, 453, 454,
	455, 456, 133, -454, -192, -120, 182, -57, 541, 481,
	-186, 576, -245, -367, -367, -367, 441, 441, -245, -271,
	-259, -275, -272, -296, 179, 179, -259, 519, -391, 337,
	277, -437, -219, 549, -275, 576, -410, -410, 146, 146,
	-410, -411, -411, -410, 146, 182, 572, -410, -421, 34,
	34, 573, 577, -406, -410, 573, 533, -327, -327, 573,
	565, -490, 576, 573, -419, 143, -410, 491, 290, 207,
	288, -380, 288, -380, -380, -484, 5, -490, 565, -547,
	-265, 572, -245, 539, -326, 342, 573, -462, -460, -410,
	-410, -410, -410, -410, -484, -465, -465, -480, -480, -410,
	-415, -410, -462, -460, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, 135, 321, 330, -411, -416, -415, -410,
	-410, -460, 573, 573, 573, -342, -96, 572, 283, -354,
	200, -410, -454, 577, -354, -354, 573, -441, -441, 572,
	-410, 245, 571, 577, 579, 555, -322, 574, -433, -434,
	571, 573, 577, 573, 577, -394, 39, 573, -490, -404,
	-197, -196, 132, 53, -331, -331, 339, 5, 8, 570,
	571, 574, -484, 573, 573, 573, -331, -331, -331, -224,
	-224, 117, 309, -410, 497, 497, 60, 497, 42, 319,
	-232, 377, 422, 26, 397, 397, 150, 321, 527, -518,
	-513, 148, -410, 572, 224, 572, 572, 2, -217, 139,
	444, -580, 2, 525, 150, -224, 150, -224, 545, 572,
	572, 497, 431, -238, 541, -342, -410, -187, 124, -489,
	-567, 576, -567, 576, 431, 497, 431, 497, 541, 163,
	163, -232, 541, -342, 497, -464, 48, 27, 321, -278,
	497, 497, -224, 150, 509, 444, -499, 326, -284, -279,
	444, 405, -454, -191, 340, -190, 142, 415, 133, 252,
	-454, -189, 182, 236, -279, 2, 573, 573, 577, -519,
	39, 334, 334, 572, -275, -77, 541, -453, -486, 44,
	-277, 39, 150, -563, -123, -279, -458, -459, 5, 39,
	-275, 150, 336, 321, -229, 259, -598, -494, -534, -327,
	-360, -349, 322, 91, 573, -404, -351, -335, -410, 2,
	573, -184, -185, -499, -499, -499, -186, -198, -198, -402,
	-305, 572, -261, -246, 572, -198, -263, 2, -500, 577,
	572, 555, 555, 555, -192, -454, -123, 340, -275, 565,
	-367, -312, -311, 355, 330, -312, 422, 422, 337, 173,
	255, -218, -260, -410, -410, 146, 34, 34, -410, -410,
	-421, 573, -410, -410, -342, 571, 5, -410, 573, 573,
	8, -410, 573, 574, -548, -245, -410, 573, 60, 573,
	573, 577, 577, 573, 573, 573, 573, 573, 573, 573,
	-416, 182, 135, 330, 572, 573, 573, -96, -418, 203,
	60, -441, -418, -418, -369, -331, -441, -408, -260, 570,
	-490, -486, -444, 572, 574, -196, 555, 571, 2, 570,
	-490, 573, 117, -262, -262, 481, 422, 319, -232, 377,
	422, 396, 265, 26, 26, -401, 150, -520, 93, -522,
	76, 165, 102, 321, 326, 515, 377, 72, 124, 393,
	-590, 39, 552, 573, -329, -438, -533, 572, -245, -329,
	-331, 321, 471, 124, 321, 124, 117, 509, 79, -262,
	-269, -331, -331, -275, -284, 157, 573, 577, 555, 2,
	565, 565, -284, -279, -284, -277, 353, 157, 573, -260,
	5, 5, 150, -257, 76, 5, -262, -262, -278, 117,
	431, 497, -189, 577, 572, 555, 555, -189, -500, -119,
	-322, -313, 226, -262, -517, -514, -515, 377, -521, -523,
	165, 377, -123, 2, -200, -199, -245, 5, 572, -303,
	340, 571, -496, -364, -123, -279, -322, 573, 577, 144,
	-386, 525, -260, -275, 150, -230, 258, -598, -494, -227,
	-389, -387, 136, 572, 336, -123, -327, 555, 573, 573,
	117, 117, 218, 149, -329, 572, 572, -331, 117, 573,
	-193, -194, -499, -119, -499, -192, -58, -59, 224, 93,
	360, -272, 481, 224, 572, 572, -218, -410, -410, -410,
	573, -327, -490, 565, -542, 355, 573, -437, -410, -410,
	-411, 182, 572, -421, 573, -543, 540, -410, -355, -356,
	-410, 421, 107, 201, -543, -543, 573, -486, 2, -499,
	570, 2, 216, 396, 265, 497, -401, -269, -273, -266,
	-245, 165, 209, 326, -385, 250, 572, -411, -275, 572,
	2, 31, -591, 128, 229, 573, 577, -439, -256, -245,
	-410, -439, 573, 573, 326, 326, -410, -460, 572, -224,
	-224, 573, 573, -410, 497, -489, 100, -487, 2, -567,
	-259, -410, 497, 5, -224, -273, -224, -224, -257, 509,
	-284, -279, -190, -191, -499, -119, -189, 39, -308, 228,
	2, -519, 250, -266, 250, -589, 541, 573, 577, 555,
	555, -301, -201, -78, -79, 498, -453, -322, 39, 5,
	572, 572, -245, 336, 572, -260, -240, 92, -598, -494,
	-228, -360, 322, -331, 93, -389, -417, -186, 572, 572,
	-306, 81, 94, 125, 208, 185, 225, 464, 469, 29,
	-306, 573, -329, -329, 573, 572, -186, 573, 577, 29,
	572, 29, 572, -275, -296, -342, -342, 573, -327, 60,
	577, 573, 573, -411, -421, 573, -544, -545, -265, 577,
	572, 572, 445, 571, 2, -232, 377, -232, 377, -522,
	-266, 321, 525, -410, -247, 572, -410, 39, 229, 129,
	214, -400, -592, 101, 472, 217, -438, -218, 573, -399,
	525, 393, -257, -329, 572, 572, 572, 555, 182, 572,
	-464, -224, -278, 573, -572, 391, -123, -309, -310, 216,
	572, -307, 336, 117, 309, -199, -487, -487, 573, 39,
	-79, 9, 39, -123, -458, -329, -275, -329, 336, -234,
	-233, 267, -494, -229, 573, -269, -360, -500, -500, -399,
	573, 573, -500, -59, -331, -331, 573, 573, -549, 385,
	423, 202, -342, -328, 573, 577, 39, -356, 2, 2,
	2, 396, 396, 150, 204, 573, -524, 282, -245, 573,
	129, 214, -308, 572, -219, -439, -308, 204, -275, -568,
	525, 573, -315, -314, -311, -317, -316, -311, -342, -487,
	100, 353, -342, -257, -575, 183, -574, 5, 10, -201,
	353, -330, -440, -262, 82, 117, -313, -123, -123, 573,
	573, -386, 573, -275, -231, -501, 396, 398, -598, -230,
	-404, 573, 573, -400, -399, -202, 541, 573, 573, 573,
	573, -550, -551, 50, 512, 108, -410, -550, -550, -545,
	-547, 165, 541, -525, -528, -527, 336, 451, 183, 354,
	573, 471, 537, -309, -331, 541, -322, -410, -399, 573,
	577, 530, 573, 577, 530, 573, 182, 573, -224, -188,
	541, 46, -307, -275, 573, 577, 376, 130, 139, -308,
	-589, -399, 572, -400, 572, -237, -236, -598, -480, -240,
	136, -186, -186, -308, -400, -404, -186, -552, 148, -551,
	373, 178, 422, 373, 178, -552, -552, -266, 55, -527,
	336, -528, 336, 519, 130, -591, 573, 55, -524, -308,
	-314, 216, -316, 182, 353, 429, -574, 31, -239, -238,
	572, -440, 423, 423, 2, -309, -307, -400, -329, -308,
	-329, -235, -331, -234, 322, 519, -309, -308, 108, 200,
	492, 309, 34, 555, -526, 309, 411, 64, 444, -526,
	-404, 555, -525, 572, 572, 340, -331, 2, -201, -308,
	573, -309, 573, -231, 444, -202, -309, 422, 344, -551,
	-410, 23, 326, 124, -410, -591, -342, -342, -185, 572,
	573, -307, -309, -399, -202, -400, -237, -350, -404, -202,
	573, 573, -185, -225, 64, 411, -239, -202, -400, -404,
	-308, -404, -404, -309, 497, 573, -404, -308, -309, 572,
	-309, -202, -342, -202, -404, 573, -404, -309,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 503, 504, 506, 507, 508, 510,
	511, 513, 515, 517, 518, 519, 521, 522, 524, 525,
	526, 527, 528, 530, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	594, 596, 0, 1268, 1270, 1272, 1274, 0, 737, 0,
	36, 37, 0, -2, 301, 303, 305, 0, 331, 333,
	334, 336, 338, 340, -2, 0, 438, 439, 441, 443,
	-2, 0, 918, 920, 0, 583, 585, 0, 923, 925,
	0, 0, 605, 606, 0, 1374, -2, 599, 601, 603,
	668, 670, 672, 674, 676, 678, 680, 682, 684, 685,
	687, 689, 691, 693, 695, 696, 698, 700, 702, 703,
	705, 706, 708, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, -2, 734, -2, -2, 0,
	-2, -2, -2, 1286, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 389, 390, 392, 394, 396, 398, 401,
	403, 405, 1432, 445, 447, 449, 451, 453, 455, 457,
	0, -2, 1446, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 96, 97, 98, 99, 100,
	101, 102, 103, 71, 72, 74, 75, 76, 80, 81,
	82, 83, 84, 85, 86, 87, 94, 69, 0, 0,
	1405, 1407, 1409, 1411, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 505,
	509, 512, 514, 516, 520, 523, 529, 531, 533, 490,
	491, 494, 2110, 2127, 2128, 2129, 2132, 2133, 2134, 2135,
	2136, 2137, 2568, 2649, 2650, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 492, 493, 1086, 0, 557, 555,
	2095, 558, 2375, 560, 562, 432, 433, 434, 435, 436,
	437, 0, 576, 568, 1444, 577, 579, 580, 581, 582,
	552, 550, 0, 576, 2163, 574, 1266, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 368,
	1135, 1136, 1137, 1251, 1252, 2418, 1293, 0, 212, 595,
	-2, -2, -2, 2533, -2, 627, -2, 634, 2537, 2420,
	639, 0, 641, -2, 644, 1269, 1271, 1273, 735, 736,
	2113, 0, 0, 0, 0, 0, 38, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 222, -2, -2, -2, -2, 0, 0, 2462, 2213,
	2063, 2129, 2066, 2061, 302, 304, 306, 307, 0, 0,
	0, 0, 0, 0, 332, 335, 337, 339, -2, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 979, 971, 972, 1193, 0, 0, 0, -2, 440,
	442, 495, 496, 0, 1433, 1433, -2, 0, 0, 0,
	0, 276, 267, 919, 921, 922, 0, 0, 0, 0,
	584, 586, 0, 0, 249, 924, 926, 927, 0, 0,
	0, 0, 0, 278, 0, 0, 600, 602, 604, 669,
	671, 673, 675, 677, 679, 681, 683, 686, 688, 690,
	692, 694, 697, 699, 701, 704, 707, 709, 711, 713,
	715, 717, 719, 721, 723, 725, 727, 729, 731, 733,
	743, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 829, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 900, 0, 746, 748, 749, 750, 0,
	809, 827, 828, 837, 0, 1126, 1434, 1295, 1276, 1290,
	1295, 1278, 1279, 1280, 1281, 1282, 1287, 1289, 1283, 1284,
	1285, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	391, 393, 395, 397, 399, 402, 404, 406, -2, 1403,
	1404, 446, 448, 450, 452, 454, 456, 458, 587, 0,
	589, 0, 747, -2, 0, 1438, 1438, 1438, 0, 0,
	1404, 1402, 0, 592, 593, 648, 649, 1706, 0, 0,
	0, 0, 0, 0, 0, 1960, 1792, 0, 650, -2,
	1823, 1825, 2508, 2533, 1959, 1827, 1828, 1829, 1830, 1831,
	0, 1833, 1834, 1835, 1836, 1837, 1838, 0, 1840, 0,
	1845, 1846, 1847, 0, 2515, 2040, 2123, -2, 0, 0,
	2521, 2119, 0, 1926, 1863, -2, -2, 2146, 2125, 1638,
	1639, 1640, 1641, 1642, -2, -2, 2551, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 0, 2496,
	2516, 2517, 2522, 2524, 2518, 2505, 1888, 2225, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1665, 1674, -2, -2, -2, -2, -2, -2, -2,
	2509, 2510, 2527, 2530, 2536, 2541, 2542, 2514, 2523, 2550,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 1666, -2, -2, -2,
	-2, 1421, 2388, 1424, 1086, 1422, 1406, 1408, 0, 1410,
	0, 0, 0, 1415, 1441, 1439, 0, 1490, 1419, 1420,
	1508, 1508, 1532, 0, 1513, 0, 1532, 1433, 1559, 0,
	1519, 2410, 1864, 1865, 0, 2129, 2124, -2, -2, 2548,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 559,
	561, 0, 0, 0, 575, 1443, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 374, 375, 2516, 0,
	0, 0, 380, 0, 382, 383, 384, 385, 386, 387,
	388, 182, 2516, 463, 488, 0, 182, 2516, 466, 182,
	2516, 469, 0, 472, 1191, 182, 2516, 475, 2091, 182,
	2516, 478, 480, 2099, 182, 2516, 484, 2106, 2104, 485,
	2516, 487, 281, 279, 280, 2142, 2143, 2150, 2151, 2152,
	2153, 2549, 2551, 1262, 1263, 1264, 1265, 0, 1292, 1192,
	597, 598, 0, 622, 0, 626, 2504, -2, 0, 2429,
	-2, 630, 1296, 1300, 1301, 1302, 1303, 1304, 0, 0,
	0, 0, 1309, 0, 0, 636, 0, 0, 623, 624,
	642, 645, 0, 738, 739, 740, 741, 742, 68, 0,
	2516, 1559, 70, 0, 2085, 2154, 2155, 2156, 2157, 2158,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	73, 0, 2516, 77, 0, 2516, 0, -2, 88, 0,
	95, 0, 2088, 104, 0, 2516, 0, 2060, -2, 0,
	193, 0, 946, -2, 2516, 1134, 0, 0, 0, 0,
	909, 2057, 2062, 910, 2081, 911, 2067, 0, 308, 309,
	310, 311, 312, 0, 313, 2516, 315, 316, 0, 318,
	319, 2516, 321, 322, 0, 324, 0, 233, 234, 2516,
	343, 344, 0, 346, 347, 0, 349, 0, 0, 0,
	353, -2, 369, 0, 366, 356, 357, 359, 360, 361,
	362, 363, 0, 410, 408, 2096, 0, -2, 2516, 0,
	943, 0, 0, 1171, -2, 2516, 1131, 0, 1178, 2516,
	1174, 0, -2, 0, 1431, 2516, 1313, 975, 976, 977,
	978, 1571, 429, 0, 1339, 0, 1341, 0, 1360, 1565,
	1508, 0, 0, 1570, 0, -2, 546, 2112, -2, 498,
	0, 499, 0, -2, 0, 293, 0, 0, 928, 929,
	930, 931, 932, 935, 936, 937, 938, 1545, 250, 252,
	0, 0, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 0, 0, 607, 0, 0, 744, 745, 0, 0,
	755, 756, 757, 0, 293, 2421, 2384, 2246, 764, 0,
	767, 770, -2, 0, 0, 0, 0, 774, 0, 779,
	780, 781, 0, 0, 785, 787, 917, 789, 0, 0,
	791, 0, 795, 0, 798, 0, 800, 0, 802, -2,
	-2, -2, -2, 813, -2, 0, 816, 818, 0, 820,
	-2, 0, 829, 825, 826, 0, 0, 0, 0, 845,
	846, 0, 855, 0, 858, 859, 860, 0, 862, 863,
	0, 865, 866, 867, 868, 0, 870, 871, -2, -2,
	875, 877, 0, 884, 0, 888, 0, 892, 0, 0,
	899, 0, 751, 752, 182, 1563, 1275, -2, 1277, 0,
	-2, 0, 588, 0, 591, 1463, 1389, 1386, 0, 1460,
	1461, 1390, 0, 0, 0, 1397, 0, 1436, 1437, 0,
	0, 0, 1376, 1377, 0, 0, 0, 0, 1965, 1966,
	1967, 1968, 1969, 1970, 1973, 1974, 1971, 1972, 1975, 1976,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 1979, 1980,
	0, 0, 1982, 0, 1984, 0, 0, 0, 0, 0,
	0, 1771, 1773, 2048, 0, 0, 1981, 1711, 1712, 1713,
	1714, 1715, 1750, 1751, 0, 0, 1824, 2045, 2044, 1826,
	0, 1996, 0, 1839, -2, 0, 1960, 1991, 0, 0,
	1848, 1849, 1850, 0, 0, 1996, 0, 0, 2039, 1860,
	1861, 1703, 0, 0, 1928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 1651, 0, 1653, 0, 1654, 1655, 1662,
	1675, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 2020, -2, 0, 0, 0, 0, 1667,
	0, 1423, 0, 0, 1494, 2049, 2053, 2054, 1494, 1494,
	0, 0, 1997, 1556, 1556, 0, 0, 1551, 1551, 1551,
	1549, 1532, 0, 1532, 1542, 0, 1532, 1532, 0, -2,
	1513, 0, 0, 1542, 0, 1526, 534, 536, 538, 540,
	541, 542, 544, 1560, 1561, 0, 0, 0, 0, 2130,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	2472, 2420, 564, 578, 1433, 0, 1999, 1586, 1590, 0,
	1592, 1593, 1594, 1595, 1596, 0, 0, 1587, -2, 1663,
	1665, 1686, 2147, 2148, 2149, 1646, 1647, 1648, 1649, 1650,
	1658, 1645, 1645, 1645, 1656, 1685, 1677, 1685, 1681, 1631,
	1632, 1633, 1668, 1669, 1670, 1671, 0, 2472, 2420, 570,
	0, 0, 1371, 197, 199, 200, 201, 202, 203, 370,
	0, 377, 378, 379, 0, 459, 0, 180, 181, 0,
	182, 2516, 464, 0, 467, 0, 182, 2516, 2055, 473,
	0, 476, 0, 0, 482, 0, 0, 0, 0, 0,
	182, 1373, 0, 0, 0, 0, -2, 632, 637, 638,
	0, 1298, 0, 1305, 659, 660, 661, 1307, 1308, 0,
	1310, 635, 662, 663, 664, 665, 666, 667, 0, 2069,
	2070, 2071, 2072, 2075, 2076, 0, 0, 633, 652, 640,
	0, 646, 105, 1248, 0, 144, 0, 1248, 1248, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 129, 140, 117, 118, 0, 0, 0, 0, 0,
	78, 1108, 0, 1111, 0, 0, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 0, 0, 0, 92, 93,
	128, 0, 0, 1336, 0, 123, 107, 0, 0, 0,
	130, 142, 0, 173, 175, 0, 0, 0, 0, 0,
	0, 192, 204, 0, 0, 0, 0, 1132, 0, 1430,
	0, 0, 2516, 0, 1545, 2292, -2, -2, 250, 1545,
	908, 0, 0, 2130, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 348, 350, 351, 352, 0, 1170,
	0, 358, 400, 1057, 2516, 0, 0, 427, 422, 0,
	424, 0, 0, 1107, 2516, 1105, 2100, 0, 1129, 0,
	1086, 2516, 2098, 0, 0, 0, 1179, 2139, 1188, 1192,
	1326, 0, 431, 0, 1342, 1344, 0, 0, 1566, 0,
	1568, 1508, 1433, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 256, 0, 1544, 0, 0, 1545,
	250, 293, 293, 1545, 609, 1545, 611, 0, 0, 758,
	759, 0, 293, 293, 293, 765, 766, 768, 769, -2,
	-2, -2, 885, 771, 772, 852, 0, 0, 0, 851,
	784, 788, 0, 902, 2406, 2420, 2472, 915, 852, 2213,
	852, 2213, 852, 2213, 799, 801, 804, 840, 848, 812,
	817, 0, 0, 822, 830, -2, 0, 832, 0, 834,
	0, 836, 852, 853, 856, 861, 864, 869, 0, 0,
	0, 0, 0, 0, 0, 895, 896, 0, 0, 1125,
	0, 1288, 1463, 1389, 590, 1380, 1462, 1381, 1388, 1391,
	0, 0, 1393, 0, 1395, 0, 1458, 1459, 1466, 1467,
	0, 1477, 1478, 1470, 0, -2, 0, 0, 1473, 1474,
	1399, 0, 1416, 1417, 1418, 1447, 1450, 1207, 0, 2649,
	1707, 1581, 1708, 1709, 2084, 0, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, -2, -2, -2, -2,
	-2, -2, -2, -2, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, -2, -2, -2, 1748, 1749,
	-2, 1983, 1985, 0, 2048, 0, -2, 0, -2, -2,
	-2, -2, 1768, 0, 1770, 1775, 1777, 1779, 0, 0,
	0, 0, 2047, 1789, 2031, 2032, 0, 0, 1962, 1963,
	1964, 1774, 0, 1793, 2046, 2043, 0, 0, 1995, 1446,
	1852, 0, 0, 0, 0, 1859, 1844, 1993, 0, 1992,
	0, 0, 0, 2003, 0, 2038, 2034, 0, 2082, 1702,
	1689, 1690, 1691, 1692, 1693, 1694, 1704, 0, 2079, 2116,
	2122, 1936, 0, 0, 0, 1889, 1890, 1891, 1892, 1893,
	0, 1895, 1896, 0, 1898, 1899, 0, 1901, 1902, 0,
	1904, 1905, 1906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 1603, 0, 0, 0, 1607, 0,
	0, 0, 1611, 0, 0, 0, 1615, 0, 0, 0,
	1619, 0, 0, 0, 1623, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 1908, 0, 2006, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1910, 0, 1912, 1997,
	2017, 0, 0, 1794, 0, 0, 0, 1960, 0, 1915,
	1997, 2025, 0, 0, 0, 0, 0, 1997, 0, 2030,
	0, 1922, 0, 1924, 1425, 0, 0, 1576, 0, 0,
	0, 2052, 1576, 1576, 0, 1489, 0, 0, 1552, 1553,
	1554, 1555, 0, 0, 1556, 0, 1546, 1550, 1547, 1548,
	1542, 1505, 0, 0, 2086, 1542, 1511, 1541, 0, 1086,
	1531, 1542, 1542, 0, -2, 1515, 1532, 0, 0, 535,
	537, 539, 543, 545, 0, 0, 1446, -2, 0, -2,
	1085, 0, 0, 0, 0, 554, 556, 0, 0, 479,
	0, 0, 548, 0, 551, 0, 1577, 1580, 0, 0,
	1591, 1597, 1598, 0, -2, 0, 0, 1687, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 489, 182, 461,
	0, 182, 182, 470, 0, 0, 182, 481, 182, 2107,
	182, 2105, 282, 486, 1372, 215, 0, 625, 0, 1297,
	1306, 0, 656, 0, 658, 0, 2073, 2077, 2074, 2078,
	0, 647, 0, 0, 0, 0, 1247, 0, 1214, 0,
	0, 0, 0, 0, 148, 2516, 0, 184, 0, 0,
	1050, 2092, 0, 1042, 0, 0, 2232, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 1110, 1112, 1119, 1121, 0, 1115, 2080,
	0, 0, 1116, 0, 1118, 1120, 1122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 1336,
	0, 0, 0, 116, 120, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 1164, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 0, 0, -2, 0, 0, 0,
	0, 225, 0, 284, 2058, 2068, 0, 933, 934, 314,
	317, 320, 323, 221, 0, 354, 0, 0, 981, 956,
	0, 0, 409, 293, 0, 0, 423, 2109, 941, 1103,
	1106, 0, 1086, 2516, 1143, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 2516, 2087, 2138, 2139, 1328, 1336,
	0, 1576, 0, 1358, 1345, 0, 0, 0, 1358, 1362,
	1363, 1365, 1366, 0, 0, 1567, 1573, 497, 547, 1433,
	1433, 293, 291, 2352, 289, 286, 288, 0, 0, 0,
	982, 984, 985, 986, 184, 0, 2139, 1042, 2281, 2139,
	0, 1348, 1350, 0, 245, 0, 253, 1545, 251, 256,
	0, 0, 421, 608, 613, 753, 0, 293, 761, 762,
	763, 806, 842, 850, 773, 775, 776, 777, 0, 0,
	916, 912, 913, 914, 790, 852, 793, 852, 796, 852,
	815, 819, 824, 831, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 889, 890, 891, 893, 898,
	897, 901, 1564, 1384, 1385, 1387, 0, 1396, 0, 0,
	1472, -2, -2, 1471, 1475, 1476, -2, -2, -2, -2,
	1392, 0, 1401, 1398, 0, 1457, 1205, 1206, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1790, 0, -2,
	1769, 1772, 1776, 1778, 1780, 0, 0, 0, 0, 0,
	0, 1986, 0, 1988, 1791, 2041, 2044, 1958, 0, 0,
	1445, 1446, 1446, 0, 1858, 0, 1994, 0, 2001, 2002,
	0, 1851, 0, 2035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 1894, 1897,
	1900, 1903, 0, 0, 0, 0, 1883, 0, 0, 0,
	1887, 1657, 1643, 0, 1685, 1683, 1684, 1678, 1685, 1682,
	1635, 0, 1600, 1601, 1602, 1604, 1605, 1606, 1608, 1609,
	1610, 1612, 1613, 1614, 1616, 1617, 1618, 1620, 1621, 1622,
	1624, 1625, 1626, 1628, 1629, 1630, 1634, 0, 1907, 0,
	1909, 1911, 0, 0, 1913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1799, 1914, 2023, 2024, 0, 0, 0, 0, 0, 0,
	1920, 0, 2029, 1921, 1923, 1433, 0, 1426, 0, 1491,
	1480, 1575, 0, 2050, 1545, 1493, 1495, 2051, 2089, 1480,
	1480, 0, 1998, 0, 0, 1536, 0, 0, 0, 1538,
	1509, 0, 0, 1503, 0, 1499, 1500, 1501, 1502, 1510,
	1086, 1540, 1512, 1516, 2116, 0, 1542, 0, 1527, 0,
	1529, 1562, 0, 1521, 1524, 0, 0, 2131, 1576, 0,
	325, 329, 330, 326, 327, 328, 563, 0, 0, 0,
	0, 2000, 0, 1582, 0, 1588, 0, 0, 0, 0,
	569, 0, 0, 0, 198, 1370, 376, 460, 182, 465,
	468, 2056, 182, 474, 477, 483, 211, 0, 621, -2,
	654, 655, 657, 0, 653, 145, 1248, 0, 0, 1210,
	1212, 2103, 1216, 0, 0, 0, 0, 0, 0, 150,
	2516, 159, 0, 1022, 0, 2090, 0, 0, 0, 0,
	0, 0, 1250, 0, 0, 2516, 182, 2516, 182, 162,
	164, 167, 0, 172, 169, 170, 0, 0, 1013, 106,
	1248, 0, 109, 113, 121, 0, 0, 0, 127, 0,
	0, 0, 1233, 1239, 0, 0, 1113, 1114, 1117, 1123,
	79, 0, 0, 1237, 1243, 89, 90, 2101, 91, 0,
	1209, 0, 0, 0, 174, 111, 115, 122, 0, 1245,
	108, 0, 196, 0, 0, 0, 188, 0, 189, 190,
	205, 0, 182, 2516, 0, 944, 945, 1165, 1127, 1128,
	0, 1133, 0, 0, 0, 1545, 217, 0, 1545, 225,
	0, 2064, 0, 342, 0, 0, 0, 0, 980, 1068,
	0, 951, 0, 0, 0, 415, 411, 0, 420, 426,
	425, -2, 0, 0, 0, 0, -2, 0, 0, 1181,
	1175, 1176, 0, 0, 0, 0, 2516, 1330, 1336, 0,
	1431, 1446, 430, 1337, 1358, 0, 0, 0, 1347, 1343,
	1340, 1576, 0, 0, 0, 0, 0, 1569, 1572, 500,
	501, 268, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 987, 991, 0, 2139, 2139, 0, 2094, 0, 0,
	0, 0, 254, 0, 257, 0, 0, 0, 262, 263,
	264, 265, 266, 256, 247, 1545, 0, 610, 0, 0,
	760, 0, 783, 792, 794, 797, 833, 835, 852, 878,
	879, 1008, 0, 1008, 0, 0, 894, 1394, 0, 1469,
	1400, 1451, 1452, 0, 1207, 0, 1710, 1753, 0, 0,
	-2, 0, 0, 1757, 0, 0, 0, -2, 0, 0,
	0, 1987, 1989, 0, 2043, 1853, 0, 0, 0, 1857,
	1841, 1842, 0, 1961, 2004, 2033, 2037, 0, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 0, 2083, 2117, 2121, 1934,
	1935, 1939, 2097, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1676, 1680, 0, 0, 2005,
	2016, 2018, 1795, 1796, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, -2, -2, -2, 1813, 1814, 1815,
	-2, -2, -2, 0, 0, 0, 2019, 2021, 2022, 2026,
	2027, 0, 1917, 1918, 1919, 2028, 0, 1433, 1427, 1488,
	0, 1574, 1492, 0, 1488, 1488, 1440, 1534, 0, 0,
	1558, 0, 1506, 0, 1507, 0, 1539, 0, 1514, 1517,
	1518, 1528, 0, 1520, 0, 1523, 0, 1853, -2, 294,
	295, 297, 0, 300, 566, 567, 565, 549, 0, 0,
	1584, 0, 0, 1660, 1664, 1688, 572, 573, 571, 462,
	471, 213, 0, 1543, 0, 0, 0, 0, 2169, 1225,
	1226, 0, 2533, 1229, 0, 0, 0, 0, 183, 1020,
	1049, 0, 0, 0, 1041, 0, 0, 1055, 152, 0,
	0, 0, 160, 0, 0, 157, 0, 166, 171, 0,
	0, 0, 0, 1215, 0, 0, 124, 125, 126, 0,
	131, 0, 132, 0, 0, 0, 0, 0, 0, 1321,
	1322, 1316, 0, 0, 0, 185, 0, 0, 0, 1204,
	0, 0, 207, 0, 0, 0, 1168, 1169, 1234, 1240,
	0, 0, 225, 223, 0, 226, 0, 229, 230, 0,
	225, 219, 0, 0, 1086, 355, 954, 1056, 0, 1058,
	0, 952, 0, 0, 1057, 407, 0, 414, 0, 0,
	1107, 0, 0, 1130, 1141, 1086, 0, 1180, 1182, 0,
	1190, 0, 0, 0, 1332, 1336, 0, 1325, 1326, 1465,
	1338, 1356, -2, 0, 0, 1446, 1364, 1361, 1367, 1368,
	0, 290, 0, 285, 287, 0, 271, 0, 0, 983,
	988, 0, 0, 0, 0, 0, 1349, 1351, 0, 0,
	0, 0, 0, 0, 246, 256, 277, 0, 754, 778,
	843, 880, 1007, 0, 0, 882, 0, 0, 1468, 1455,
	1456, 1453, 1207, 1755, 1759, 0, 0, 0, 1761, -2,
	0, 1783, -2, -2, 1990, 2042, 1832, 1446, 1854, 1856,
	1843, 2036, 1705, 0, 1941, 1938, 0, 1925, 0, 1878,
	1879, 0, 0, 1882, 1884, 1885, 1886, 1644, 1637, 1636,
	2015, 0, 0, 0, 0, 1916, 1428, 0, 1930, 0,
	0, 1496, 1930, 1930, 1535, 0, 1537, 1504, 1497, 0,
	2117, 1530, 1522, 0, 0, 298, 0, 1578, 1583, 0,
	1589, 1659, 214, 146, 147, 1219, 1220, 1221, 1222, 0,
	0, 1227, 1228, 0, 1232, 149, 0, 1021, 0, 1024,
	0, 0, 0, 0, 1031, 1042, 0, 0, 0, 0,
	0, 1043, 0, 1072, 0, 1195, 1202, 0, -2, 0,
	0, 0, 154, 177, 0, 0, 1249, 0, 0, 182,
	182, 0, 0, 1211, 1213, 0, 0, 0, 0, 134,
	0, 0, 1235, 1241, 1238, 1244, 0, 0, 0, 1246,
	194, 195, 0, 182, 0, 187, 182, 182, 1204, 0,
	0, 0, 216, 0, 0, 0, 0, 218, 283, 225,
	0, 1002, 0, 1068, 1060, 1061, 1062, 0, 1067, 1069,
	0, 0, 968, 953, 0, 964, 0, 0, 981, 956,
	0, 412, 942, 1104, 1138, 1086, 0, 1172, 0, 0,
	0, 0, 0, 0, 0, 1334, 1336, 0, 1327, 1328,
	1358, 1464, 0, 0, 0, 1346, 1465, 0, 292, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	258, 0, 259, 260, 261, 248, 612, 614, 0, 0,
	620, 1006, 0, 0, 0, 0, 1454, 1763, -2, -2,
	1784, 0, 2118, 2120, 1446, 0, 1927, 1448, 0, 0,
	-2, 0, 0, 0, 1429, 1412, 0, 1487, 1479, 1481,
	1483, 2409, 2209, 2515, 1413, 1414, 1557, 0, 1525, 299,
	0, 1585, 0, 1223, 1224, 0, 151, 0, 1025, 1026,
	2093, 1028, 0, 1030, 1032, 1033, 0, 1036, 2141, 0,
	1040, 0, 1051, 1073, 0, 1082, 0, 1197, 1207, 1201,
	0, 1199, 1084, 0, 153, 155, 176, 1204, 0, 156,
	165, 0, 0, 110, 0, 0, 2204, 137, 135, 133,
	1208, 112, 0, 196, 206, 1203, 191, 208, 182, 0,
	1236, 1242, 227, 0, 228, 231, 0, 0, 1010, 0,
	955, 1059, 0, 1070, 1071, 958, 0, 957, 0, 0,
	0, 0, 0, 413, 416, 0, 419, 0, 0, 1183,
	1181, 0, 1189, 0, 0, 0, 1315, 0, 0, 1329,
	1330, 428, 1352, 0, 0, 1358, 1369, 270, 0, 0,
	989, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	990, 1084, 0, 0, 1048, 0, 275, 255, 0, 616,
	0, 618, 0, 881, 883, 0, 0, 1855, 1945, 0,
	0, 1880, 1881, -2, 0, 1821, 1929, 1931, 0, 0,
	0, 0, 0, 1498, 1579, 1217, 0, 1230, 0, 1023,
	1027, 0, 0, 0, 1090, 0, 0, 1044, 0, 1076,
	1077, 1002, 0, 1078, 1079, 1080, 1196, 1457, 1202, 1002,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	186, 209, 1204, 224, 241, 0, 1139, 956, 1009, 0,
	0, 966, 0, 969, 0, 965, 962, 963, 954, 0,
	417, 418, 0, 1142, 0, 0, 1190, 0, 0, 1318,
	1314, 1336, 1331, 1332, 1576, 1355, 1359, 0, 0, 1082,
	1084, 956, 0, 615, 0, 0, 886, 887, 0, 0,
	0, 0, 1940, 1449, 1822, 0, 0, 1482, 1484, 1485,
	1486, 1218, 1231, 0, 0, 1035, 1095, 0, 0, 0,
	1074, 1075, 1010, 0, 1200, 1198, 1053, 0, 1086, 158,
	0, 1084, 0, 1014, 0, 0, 1017, 0, 0, 138,
	2204, 136, 0, 182, 244, 0, 238, 236, 237, 958,
	0, 0, 1064, 1066, 0, 970, 1002, 968, 1140, 1173,
	1084, 0, 1082, 0, 1324, 1336, 1319, 1320, 0, 1334,
	0, 293, 293, 1002, 1082, 1576, 0, 293, 617, 619,
	1937, 1957, 1946, -2, 2475, 2210, 0, 1957, 1957, 1932,
	1933, 0, 0, 1037, 1091, 1092, 0, 1087, 1088, 1089,
	2140, 1038, 1039, 1072, 0, 0, 1090, 178, 1002, 1011,
	0, 0, 1012, 0, 0, 141, 0, 143, 210, 232,
	0, 0, 950, 0, 1063, 0, 0, 0, 0, 1010,
	958, 1082, 0, 1002, 0, 1311, 1323, 0, 1333, 1315,
	0, 272, 273, 1010, 1002, 1047, 274, 1942, 0, 0,
	1948, 1949, 1950, 1951, 1952, 1943, 1944, 1029, 0, 1093,
	0, 1094, 0, 0, 0, 1576, 1081, 0, 1095, 163,
	1015, 0, 1018, 0, 139, 0, 239, 240, 947, 949,
	0, 1065, 959, 0, 961, 956, 967, 1002, 0, 1010,
	0, 1317, 2102, 1318, 1353, 0, 956, 1010, 0, 1954,
	1955, 0, 0, 0, 1096, 0, 1099, 1100, 0, 1097,
	1052, 0, 1072, 0, 0, 0, 0, 960, 958, 1010,
	1084, 956, 1082, 1324, 0, 1576, 956, 1953, 1956, 1947,
	1034, 1098, 1101, 1102, 1083, 1054, 0, 0, 242, 0,
	1005, 950, 956, 1082, 1576, 1002, 1312, 1576, 1045, 1576,
	1010, 0, 0, 1001, 1003, 1004, 948, 1576, 1002, 1186,
	1010, 1354, 1046, 1016, 0, 243, 1184, 1010, 956, 0,
	956, 1576, 0, 1576, 1187, 1010, 1185, 1019,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 561, 3, 567, 562, 3,
	572, 573, 565, 563, 577, 564, 574, 566, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 580, 3,
	553, 555, 554, 558, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 570, 3, 571, 568, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 578, 560, 579, 556,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 557, 57896, 559, 57897, 569, 57898, 575, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1281
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1308
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1387
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1443
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1447
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1624
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1632
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1667
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1721
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1750
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1760
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1769
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1780
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1786
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1812
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1817
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2159
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2163
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2166
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2206
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2221
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2343
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2370
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2606
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2730
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2739
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2750
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2755
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2760
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2765
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2788
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2796
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2872
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3036
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3055
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3060
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3072
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3077
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CREATE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3091
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3094
		{
			return unimplemented(sqllex, "create access method")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			return unimplemented(sqllex, "create cast")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3097
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3103
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplemented(sqllex, "create operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplemented(sqllex, "create publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "create rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "create server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3116
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3120
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3124
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "drop server")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3265
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3300
		{

			sqlVAL.union.val = nil
		}
	case 428:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			return helpWith(sqllex, "DELETE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3327
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3328
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3340
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "DROP")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3620
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3644
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3652
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			return helpWith(sqllex, "DELETE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "INSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "DELETE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "INSERT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3702
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3729
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "GRANT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3906
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "RESET")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "RESET")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "USE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3979
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3980
		{
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3982
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "USE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return unimplemented(sqllex, "set from current")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4223
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.Low
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = tree.Normal
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = tree.High
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4400
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4419
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.str = "client_encoding"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.str = "timezone"
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4532
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4541
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4678
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = true
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = false
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = true
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = false
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4945
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = true
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = false
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4989
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5044
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5087
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5095
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5132
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5155
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5229
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5369
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5483
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5484
		{
			return helpWith(sqllex, "RESUME")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5502
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5511
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5653
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[13].union.locality(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5669
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[16].union.locality(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{

			sqlVAL.union.val = nil
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.str = ""
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = nil
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5737
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 966:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5767
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5781
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5796
		{
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5853
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5890
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5893
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5896
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5897
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5903
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.str = ""
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6115
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = true
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6150
		{
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6251
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6262
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6289
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6369
		{
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6372
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6374
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6530
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6539
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6547
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6558
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6576
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6580
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6586
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6601
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = true
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{

			sqlVAL.union.val = true
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = false
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6666
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6680
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6692
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6704
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6714
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6724
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = nil
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6834
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6835
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6860
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6862
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6864
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6866
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6870
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6908
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6926
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6945
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6962
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6979
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = false
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7043
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.str = ""
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.str = ""
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7116
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7122
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7318
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7324
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7336
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7342
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7356
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7362
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7379
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7380
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7384
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7395
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7443
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7480
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7495
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7497
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7539
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7550
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7570
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7571
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7599
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7614
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.str = ""
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7731
		{

		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.str = ""
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.str = ""
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.str = ""
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.str = ""
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7795
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7809
		{
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7860
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7918
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7945
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7949
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8040
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8055
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8234
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8235
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8236
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8297
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8357
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = true
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = false
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8411
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = nil
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8425
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = true
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = false
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = false
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = true
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8455
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8459
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8521
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8526
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8588
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8682
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8716
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8731
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8753
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8763
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8786
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8805
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8844
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8854
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8900
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8930
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8963
		{
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8965
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = nil
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = true
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = false
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.str = tree.AstFull
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.str = tree.AstRight
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.str = tree.AstInner
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9083
		{
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.str = tree.AstHash
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.str = ""
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9181
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9197
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = true
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = false
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = true
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = false
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9259
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9267
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9286
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9296
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9316
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9325
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9388
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9392
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9396
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9404
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9410
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = types.Geography
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9427
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9435
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9461
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9469
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = nil
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = types.Int2
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = types.Int
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = types.Float4
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = types.Float
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = types.Bool
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = types.Float
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9561
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9567
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9589
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = types.String
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = true
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = false
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = types.Date
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9638
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9646
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9660
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9669
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9677
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9694
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = true
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = false
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = false
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = types.Interval
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9718
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = nil
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9847
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10159
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10225
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10446
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10496
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10526
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10537
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10538
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10553
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10628
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10753
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10824
		{
			return unimplemented(sqllex, "treat")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.str = ""
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10999
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11096
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = tree.Any
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = tree.Some
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.All
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = tree.Div
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = tree.LT
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = tree.GT
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = tree.LE
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = tree.GE
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = tree.NE
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = tree.Like
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11458
		{
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11538
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11611
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11627
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11656
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11664
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11676
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11909
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.str = ""
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
