// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:880
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13710

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1595,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 415,
	-2, 0,
	-1, 74,
	244, 244,
	519, 244,
	-2, 0,
	-1, 88,
	232, 1331,
	246, 1331,
	262, 411,
	393, 411,
	404, 1085,
	443, 411,
	456, 1085,
	503, 1085,
	530, 411,
	556, 1085,
	-2, 0,
	-1, 94,
	133, 1595,
	239, 1595,
	541, 1595,
	542, 1595,
	-2, 0,
	-1, 112,
	151, 1566,
	170, 1566,
	183, 1566,
	242, 1566,
	275, 1566,
	344, 1566,
	354, 1566,
	536, 1566,
	-2, 1537,
	-1, 153,
	159, 925,
	261, 925,
	396, 886,
	461, 886,
	502, 886,
	522, 925,
	524, 886,
	-2, 0,
	-1, 157,
	4, 1597,
	21, 1597,
	22, 1597,
	23, 1597,
	24, 1597,
	25, 1597,
	26, 1597,
	27, 1597,
	29, 1597,
	30, 1597,
	36, 1597,
	41, 1597,
	42, 1597,
	44, 1597,
	45, 1597,
	46, 1597,
	47, 1597,
	48, 1597,
	49, 1597,
	50, 1597,
	51, 1597,
	53, 1597,
	54, 1597,
	55, 1597,
	56, 1597,
	58, 1597,
	59, 1597,
	60, 1597,
	61, 1597,
	62, 1597,
	63, 1597,
	64, 1597,
	68, 1597,
	69, 1597,
	70, 1597,
	71, 1597,
	73, 1597,
	74, 1597,
	75, 1597,
	79, 1597,
	80, 1597,
	81, 1597,
	82, 1597,
	83, 1597,
	84, 1597,
	85, 1597,
	88, 1597,
	89, 1597,
	90, 1597,
	91, 1597,
	92, 1597,
	94, 1597,
	96, 1597,
	97, 1597,
	98, 1597,
	99, 1597,
	100, 1597,
	101, 1597,
	103, 1597,
	104, 1597,
	105, 1597,
	107, 1597,
	108, 1597,
	109, 1597,
	117, 1597,
	118, 1597,
	119, 1597,
	120, 1597,
	121, 1597,
	123, 1597,
	124, 1597,
	125, 1597,
	126, 1597,
	128, 1597,
	129, 1597,
	130, 1597,
	132, 1597,
	133, 1597,
	134, 1597,
	136, 1597,
	137, 1597,
	138, 1597,
	141, 1597,
	142, 1597,
	143, 1597,
	145, 1597,
	146, 1597,
	148, 1597,
	149, 1597,
	150, 1597,
	152, 1597,
	153, 1597,
	154, 1597,
	155, 1597,
	156, 1597,
	157, 1597,
	158, 1597,
	159, 1597,
	160, 1597,
	161, 1597,
	162, 1597,
	163, 1597,
	164, 1597,
	165, 1597,
	166, 1597,
	167, 1597,
	169, 1597,
	175, 1597,
	176, 1597,
	177, 1597,
	178, 1597,
	182, 1597,
	184, 1597,
	185, 1597,
	186, 1597,
	190, 1597,
	191, 1597,
	192, 1597,
	193, 1597,
	194, 1597,
	195, 1597,
	196, 1597,
	197, 1597,
	198, 1597,
	199, 1597,
	200, 1597,
	201, 1597,
	202, 1597,
	203, 1597,
	205, 1597,
	206, 1597,
	208, 1597,
	209, 1597,
	211, 1597,
	212, 1597,
	213, 1597,
	214, 1597,
	215, 1597,
	216, 1597,
	217, 1597,
	218, 1597,
	219, 1597,
	221, 1597,
	222, 1597,
	224, 1597,
	225, 1597,
	226, 1597,
	227, 1597,
	228, 1597,
	232, 1597,
	233, 1597,
	234, 1597,
	235, 1597,
	236, 1597,
	239, 1597,
	240, 1597,
	241, 1597,
	243, 1597,
	245, 1597,
	246, 1597,
	248, 1597,
	250, 1597,
	251, 1597,
	252, 1597,
	254, 1597,
	258, 1597,
	259, 1597,
	260, 1597,
	261, 1597,
	262, 1597,
	263, 1597,
	265, 1597,
	266, 1597,
	267, 1597,
	269, 1597,
	270, 1597,
	272, 1597,
	273, 1597,
	276, 1597,
	277, 1597,
	278, 1597,
	279, 1597,
	280, 1597,
	281, 1597,
	282, 1597,
	285, 1597,
	286, 1597,
	287, 1597,
	288, 1597,
	290, 1597,
	291, 1597,
	292, 1597,
	293, 1597,
	294, 1597,
	295, 1597,
	296, 1597,
	297, 1597,
	298, 1597,
	299, 1597,
	300, 1597,
	301, 1597,
	302, 1597,
	303, 1597,
	304, 1597,
	305, 1597,
	306, 1597,
	307, 1597,
	308, 1597,
	309, 1597,
	310, 1597,
	311, 1597,
	313, 1597,
	315, 1597,
	316, 1597,
	317, 1597,
	318, 1597,
	319, 1597,
	320, 1597,
	321, 1597,
	322, 1597,
	323, 1597,
	324, 1597,
	325, 1597,
	326, 1597,
	327, 1597,
	328, 1597,
	329, 1597,
	331, 1597,
	332, 1597,
	334, 1597,
	336, 1597,
	337, 1597,
	339, 1597,
	340, 1597,
	341, 1597,
	342, 1597,
	343, 1597,
	346, 1597,
	349, 1597,
	350, 1597,
	351, 1597,
	352, 1597,
	355, 1597,
	356, 1597,
	357, 1597,
	359, 1597,
	361, 1597,
	362, 1597,
	363, 1597,
	364, 1597,
	365, 1597,
	366, 1597,
	367, 1597,
	368, 1597,
	369, 1597,
	370, 1597,
	371, 1597,
	372, 1597,
	373, 1597,
	375, 1597,
	376, 1597,
	377, 1597,
	378, 1597,
	379, 1597,
	380, 1597,
	381, 1597,
	382, 1597,
	383, 1597,
	384, 1597,
	385, 1597,
	386, 1597,
	387, 1597,
	388, 1597,
	389, 1597,
	391, 1597,
	392, 1597,
	394, 1597,
	395, 1597,
	396, 1597,
	397, 1597,
	398, 1597,
	399, 1597,
	400, 1597,
	401, 1597,
	402, 1597,
	403, 1597,
	404, 1597,
	405, 1597,
	406, 1597,
	408, 1597,
	410, 1597,
	411, 1597,
	412, 1597,
	418, 1597,
	420, 1597,
	421, 1597,
	422, 1597,
	423, 1597,
	424, 1597,
	425, 1597,
	426, 1597,
	427, 1597,
	428, 1597,
	429, 1597,
	431, 1597,
	432, 1597,
	433, 1597,
	435, 1597,
	436, 1597,
	437, 1597,
	438, 1597,
	439, 1597,
	440, 1597,
	441, 1597,
	443, 1597,
	444, 1597,
	445, 1597,
	446, 1597,
	447, 1597,
	448, 1597,
	449, 1597,
	450, 1597,
	451, 1597,
	452, 1597,
	453, 1597,
	454, 1597,
	456, 1597,
	457, 1597,
	458, 1597,
	459, 1597,
	460, 1597,
	461, 1597,
	463, 1597,
	464, 1597,
	465, 1597,
	466, 1597,
	467, 1597,
	468, 1597,
	470, 1597,
	471, 1597,
	472, 1597,
	473, 1597,
	474, 1597,
	475, 1597,
	476, 1597,
	477, 1597,
	479, 1597,
	481, 1597,
	482, 1597,
	483, 1597,
	484, 1597,
	485, 1597,
	486, 1597,
	487, 1597,
	488, 1597,
	489, 1597,
	490, 1597,
	491, 1597,
	492, 1597,
	493, 1597,
	494, 1597,
	495, 1597,
	496, 1597,
	498, 1597,
	499, 1597,
	501, 1597,
	502, 1597,
	504, 1597,
	505, 1597,
	506, 1597,
	507, 1597,
	508, 1597,
	509, 1597,
	510, 1597,
	511, 1597,
	512, 1597,
	514, 1597,
	515, 1597,
	516, 1597,
	517, 1597,
	518, 1597,
	520, 1597,
	522, 1597,
	523, 1597,
	524, 1597,
	525, 1597,
	526, 1597,
	527, 1597,
	529, 1597,
	530, 1597,
	531, 1597,
	532, 1597,
	534, 1597,
	535, 1597,
	538, 1597,
	539, 1597,
	540, 1597,
	541, 1597,
	542, 1597,
	543, 1597,
	544, 1597,
	546, 1597,
	549, 1597,
	550, 1597,
	551, 1597,
	552, 1597,
	553, 1597,
	554, 1597,
	556, 1597,
	557, 1597,
	558, 1597,
	559, 1597,
	560, 1597,
	561, 1597,
	566, 1597,
	567, 1597,
	568, 1597,
	569, 1597,
	570, 1597,
	571, 1597,
	-2, 0,
	-1, 158,
	1, 1448,
	131, 1448,
	250, 1448,
	333, 1448,
	391, 1448,
	400, 1448,
	575, 1448,
	604, 1448,
	-2, 0,
	-1, 160,
	1, 1448,
	604, 1448,
	-2, 0,
	-1, 161,
	1, 1448,
	604, 1448,
	-2, 0,
	-1, 162,
	1, 1448,
	519, 1448,
	604, 1448,
	-2, 0,
	-1, 191,
	151, 1565,
	170, 1565,
	183, 1565,
	242, 1565,
	275, 1565,
	344, 1565,
	354, 1565,
	536, 1565,
	-2, 1540,
	-1, 239,
	4, 1604,
	5, 1604,
	6, 1604,
	7, 1604,
	8, 1604,
	9, 1604,
	10, 1604,
	21, 1604,
	22, 1604,
	23, 1604,
	24, 1604,
	25, 1604,
	26, 1604,
	27, 1604,
	29, 1604,
	30, 1604,
	36, 1604,
	37, 1604,
	41, 1604,
	42, 1604,
	43, 1604,
	44, 1604,
	45, 1604,
	46, 1604,
	47, 1604,
	48, 1604,
	49, 1604,
	50, 1604,
	51, 1604,
	53, 1604,
	54, 1604,
	55, 1604,
	56, 1604,
	58, 1604,
	59, 1604,
	60, 1604,
	61, 1604,
	62, 1604,
	63, 1604,
	64, 1604,
	65, 1604,
	66, 1604,
	67, 1604,
	68, 1604,
	69, 1604,
	70, 1604,
	71, 1604,
	73, 1604,
	74, 1604,
	75, 1604,
	77, 1604,
	79, 1604,
	80, 1604,
	81, 1604,
	82, 1604,
	83, 1604,
	84, 1604,
	85, 1604,
	88, 1604,
	89, 1604,
	90, 1604,
	91, 1604,
	92, 1604,
	94, 1604,
	96, 1604,
	97, 1604,
	98, 1604,
	99, 1604,
	100, 1604,
	101, 1604,
	103, 1604,
	104, 1604,
	105, 1604,
	106, 1604,
	107, 1604,
	108, 1604,
	109, 1604,
	110, 1604,
	111, 1604,
	112, 1604,
	113, 1604,
	114, 1604,
	115, 1604,
	116, 1604,
	117, 1604,
	118, 1604,
	119, 1604,
	120, 1604,
	121, 1604,
	122, 1604,
	123, 1604,
	124, 1604,
	125, 1604,
	126, 1604,
	127, 1604,
	128, 1604,
	129, 1604,
	130, 1604,
	132, 1604,
	133, 1604,
	134, 1604,
	136, 1604,
	137, 1604,
	138, 1604,
	141, 1604,
	142, 1604,
	143, 1604,
	145, 1604,
	146, 1604,
	148, 1604,
	149, 1604,
	150, 1604,
	152, 1604,
	153, 1604,
	154, 1604,
	155, 1604,
	156, 1604,
	157, 1604,
	158, 1604,
	159, 1604,
	160, 1604,
	161, 1604,
	162, 1604,
	163, 1604,
	164, 1604,
	165, 1604,
	166, 1604,
	167, 1604,
	168, 1604,
	169, 1604,
	175, 1604,
	176, 1604,
	177, 1604,
	178, 1604,
	182, 1604,
	184, 1604,
	185, 1604,
	186, 1604,
	189, 1604,
	190, 1604,
	191, 1604,
	192, 1604,
	193, 1604,
	194, 1604,
	195, 1604,
	196, 1604,
	197, 1604,
	198, 1604,
	199, 1604,
	200, 1604,
	201, 1604,
	202, 1604,
	203, 1604,
	205, 1604,
	206, 1604,
	208, 1604,
	209, 1604,
	211, 1604,
	212, 1604,
	213, 1604,
	214, 1604,
	215, 1604,
	216, 1604,
	217, 1604,
	218, 1604,
	219, 1604,
	220, 1604,
	221, 1604,
	222, 1604,
	224, 1604,
	225, 1604,
	226, 1604,
	227, 1604,
	228, 1604,
	232, 1604,
	233, 1604,
	234, 1604,
	235, 1604,
	236, 1604,
	238, 1604,
	239, 1604,
	240, 1604,
	241, 1604,
	243, 1604,
	245, 1604,
	246, 1604,
	247, 1604,
	248, 1604,
	249, 1604,
	250, 1604,
	251, 1604,
	252, 1604,
	253, 1604,
	254, 1604,
	258, 1604,
	259, 1604,
	260, 1604,
	261, 1604,
	262, 1604,
	263, 1604,
	265, 1604,
	266, 1604,
	267, 1604,
	269, 1604,
	270, 1604,
	271, 1604,
	272, 1604,
	273, 1604,
	274, 1604,
	276, 1604,
	277, 1604,
	278, 1604,
	279, 1604,
	280, 1604,
	281, 1604,
	282, 1604,
	283, 1604,
	284, 1604,
	285, 1604,
	286, 1604,
	287, 1604,
	288, 1604,
	290, 1604,
	291, 1604,
	292, 1604,
	293, 1604,
	294, 1604,
	295, 1604,
	296, 1604,
	297, 1604,
	298, 1604,
	299, 1604,
	300, 1604,
	301, 1604,
	302, 1604,
	303, 1604,
	304, 1604,
	305, 1604,
	306, 1604,
	307, 1604,
	308, 1604,
	309, 1604,
	310, 1604,
	311, 1604,
	313, 1604,
	314, 1604,
	315, 1604,
	316, 1604,
	317, 1604,
	318, 1604,
	319, 1604,
	320, 1604,
	321, 1604,
	322, 1604,
	323, 1604,
	324, 1604,
	325, 1604,
	326, 1604,
	327, 1604,
	328, 1604,
	329, 1604,
	330, 1604,
	331, 1604,
	332, 1604,
	333, 1604,
	334, 1604,
	335, 1604,
	336, 1604,
	337, 1604,
	338, 1604,
	339, 1604,
	340, 1604,
	341, 1604,
	342, 1604,
	343, 1604,
	346, 1604,
	350, 1604,
	351, 1604,
	352, 1604,
	355, 1604,
	356, 1604,
	357, 1604,
	358, 1604,
	359, 1604,
	360, 1604,
	361, 1604,
	362, 1604,
	363, 1604,
	364, 1604,
	365, 1604,
	366, 1604,
	367, 1604,
	368, 1604,
	369, 1604,
	370, 1604,
	371, 1604,
	372, 1604,
	373, 1604,
	375, 1604,
	376, 1604,
	377, 1604,
	378, 1604,
	379, 1604,
	380, 1604,
	381, 1604,
	382, 1604,
	383, 1604,
	384, 1604,
	385, 1604,
	386, 1604,
	387, 1604,
	388, 1604,
	389, 1604,
	391, 1604,
	392, 1604,
	394, 1604,
	395, 1604,
	396, 1604,
	397, 1604,
	398, 1604,
	399, 1604,
	400, 1604,
	401, 1604,
	402, 1604,
	403, 1604,
	404, 1604,
	405, 1604,
	406, 1604,
	408, 1604,
	410, 1604,
	411, 1604,
	412, 1604,
	418, 1604,
	420, 1604,
	421, 1604,
	422, 1604,
	423, 1604,
	424, 1604,
	425, 1604,
	426, 1604,
	427, 1604,
	428, 1604,
	429, 1604,
	431, 1604,
	432, 1604,
	433, 1604,
	434, 1604,
	435, 1604,
	436, 1604,
	437, 1604,
	438, 1604,
	439, 1604,
	440, 1604,
	441, 1604,
	443, 1604,
	444, 1604,
	445, 1604,
	446, 1604,
	447, 1604,
	448, 1604,
	449, 1604,
	450, 1604,
	451, 1604,
	452, 1604,
	453, 1604,
	454, 1604,
	456, 1604,
	457, 1604,
	458, 1604,
	459, 1604,
	460, 1604,
	461, 1604,
	462, 1604,
	463, 1604,
	464, 1604,
	465, 1604,
	466, 1604,
	467, 1604,
	468, 1604,
	469, 1604,
	470, 1604,
	471, 1604,
	472, 1604,
	473, 1604,
	474, 1604,
	475, 1604,
	476, 1604,
	477, 1604,
	479, 1604,
	481, 1604,
	482, 1604,
	483, 1604,
	484, 1604,
	485, 1604,
	486, 1604,
	487, 1604,
	488, 1604,
	489, 1604,
	490, 1604,
	491, 1604,
	492, 1604,
	493, 1604,
	494, 1604,
	495, 1604,
	496, 1604,
	498, 1604,
	499, 1604,
	500, 1604,
	501, 1604,
	502, 1604,
	504, 1604,
	505, 1604,
	506, 1604,
	507, 1604,
	508, 1604,
	509, 1604,
	510, 1604,
	511, 1604,
	512, 1604,
	514, 1604,
	515, 1604,
	516, 1604,
	517, 1604,
	518, 1604,
	520, 1604,
	522, 1604,
	523, 1604,
	524, 1604,
	525, 1604,
	526, 1604,
	527, 1604,
	528, 1604,
	529, 1604,
	530, 1604,
	531, 1604,
	532, 1604,
	534, 1604,
	535, 1604,
	537, 1604,
	538, 1604,
	539, 1604,
	540, 1604,
	541, 1604,
	542, 1604,
	543, 1604,
	544, 1604,
	545, 1604,
	546, 1604,
	549, 1604,
	550, 1604,
	551, 1604,
	552, 1604,
	553, 1604,
	554, 1604,
	556, 1604,
	557, 1604,
	558, 1604,
	559, 1604,
	560, 1604,
	561, 1604,
	566, 1604,
	567, 1604,
	568, 1604,
	569, 1604,
	570, 1604,
	571, 1604,
	572, 1604,
	585, 1604,
	592, 1604,
	593, 1604,
	594, 1604,
	601, 1604,
	605, 1604,
	-2, 0,
	-1, 752,
	4, 1329,
	21, 1329,
	22, 1329,
	23, 1329,
	24, 1329,
	25, 1329,
	26, 1329,
	27, 1329,
	29, 1329,
	30, 1329,
	36, 1329,
	41, 1329,
	42, 1329,
	44, 1329,
	45, 1329,
	46, 1329,
	47, 1329,
	48, 1329,
	49, 1329,
	50, 1329,
	51, 1329,
	53, 1329,
	54, 1329,
	55, 1329,
	56, 1329,
	58, 1329,
	59, 1329,
	60, 1329,
	61, 1329,
	62, 1329,
	63, 1329,
	64, 1329,
	68, 1329,
	69, 1329,
	70, 1329,
	71, 1329,
	73, 1329,
	74, 1329,
	75, 1329,
	79, 1329,
	80, 1329,
	81, 1329,
	82, 1329,
	83, 1329,
	84, 1329,
	85, 1329,
	88, 1329,
	89, 1329,
	90, 1329,
	91, 1329,
	92, 1329,
	94, 1329,
	96, 1329,
	97, 1329,
	98, 1329,
	99, 1329,
	100, 1329,
	101, 1329,
	103, 1329,
	104, 1329,
	105, 1329,
	107, 1329,
	108, 1329,
	109, 1329,
	117, 1329,
	118, 1329,
	119, 1329,
	120, 1329,
	121, 1329,
	123, 1329,
	124, 1329,
	125, 1329,
	126, 1329,
	128, 1329,
	129, 1329,
	130, 1329,
	132, 1329,
	133, 1329,
	134, 1329,
	136, 1329,
	137, 1329,
	138, 1329,
	141, 1329,
	142, 1329,
	143, 1329,
	145, 1329,
	146, 1329,
	148, 1329,
	149, 1329,
	150, 1329,
	152, 1329,
	153, 1329,
	154, 1329,
	155, 1329,
	156, 1329,
	157, 1329,
	158, 1329,
	159, 1329,
	160, 1329,
	161, 1329,
	162, 1329,
	163, 1329,
	164, 1329,
	165, 1329,
	166, 1329,
	167, 1329,
	169, 1329,
	175, 1329,
	176, 1329,
	177, 1329,
	178, 1329,
	182, 1329,
	184, 1329,
	185, 1329,
	186, 1329,
	190, 1329,
	191, 1329,
	192, 1329,
	193, 1329,
	194, 1329,
	195, 1329,
	196, 1329,
	197, 1329,
	198, 1329,
	199, 1329,
	200, 1329,
	201, 1329,
	202, 1329,
	203, 1329,
	205, 1329,
	206, 1329,
	208, 1329,
	209, 1329,
	211, 1329,
	212, 1329,
	213, 1329,
	214, 1329,
	215, 1329,
	216, 1329,
	217, 1329,
	218, 1329,
	219, 1329,
	221, 1329,
	222, 1329,
	224, 1329,
	225, 1329,
	226, 1329,
	227, 1329,
	228, 1329,
	232, 1329,
	233, 1329,
	234, 1329,
	235, 1329,
	236, 1329,
	239, 1329,
	240, 1329,
	241, 1329,
	243, 1329,
	245, 1329,
	246, 1329,
	248, 1329,
	250, 1329,
	251, 1329,
	252, 1329,
	254, 1329,
	258, 1329,
	259, 1329,
	260, 1329,
	261, 1329,
	262, 1329,
	263, 1329,
	265, 1329,
	266, 1329,
	267, 1329,
	269, 1329,
	270, 1329,
	272, 1329,
	273, 1329,
	276, 1329,
	277, 1329,
	278, 1329,
	279, 1329,
	280, 1329,
	281, 1329,
	282, 1329,
	285, 1329,
	286, 1329,
	287, 1329,
	288, 1329,
	290, 1329,
	291, 1329,
	292, 1329,
	293, 1329,
	294, 1329,
	295, 1329,
	296, 1329,
	297, 1329,
	298, 1329,
	299, 1329,
	300, 1329,
	301, 1329,
	302, 1329,
	303, 1329,
	304, 1329,
	305, 1329,
	306, 1329,
	307, 1329,
	308, 1329,
	309, 1329,
	310, 1329,
	311, 1329,
	313, 1329,
	315, 1329,
	316, 1329,
	317, 1329,
	318, 1329,
	319, 1329,
	320, 1329,
	321, 1329,
	322, 1329,
	323, 1329,
	324, 1329,
	325, 1329,
	326, 1329,
	327, 1329,
	328, 1329,
	329, 1329,
	331, 1329,
	332, 1329,
	334, 1329,
	336, 1329,
	337, 1329,
	339, 1329,
	340, 1329,
	341, 1329,
	342, 1329,
	343, 1329,
	346, 1329,
	350, 1329,
	351, 1329,
	352, 1329,
	355, 1329,
	356, 1329,
	357, 1329,
	359, 1329,
	361, 1329,
	362, 1329,
	363, 1329,
	364, 1329,
	365, 1329,
	366, 1329,
	367, 1329,
	368, 1329,
	369, 1329,
	370, 1329,
	371, 1329,
	372, 1329,
	373, 1329,
	375, 1329,
	376, 1329,
	377, 1329,
	378, 1329,
	379, 1329,
	380, 1329,
	381, 1329,
	382, 1329,
	383, 1329,
	384, 1329,
	385, 1329,
	386, 1329,
	387, 1329,
	388, 1329,
	389, 1329,
	391, 1329,
	392, 1329,
	394, 1329,
	395, 1329,
	396, 1329,
	397, 1329,
	398, 1329,
	399, 1329,
	400, 1329,
	401, 1329,
	402, 1329,
	403, 1329,
	404, 1329,
	405, 1329,
	406, 1329,
	408, 1329,
	410, 1329,
	411, 1329,
	412, 1329,
	418, 1329,
	420, 1329,
	421, 1329,
	422, 1329,
	423, 1329,
	424, 1329,
	425, 1329,
	426, 1329,
	427, 1329,
	428, 1329,
	429, 1329,
	431, 1329,
	432, 1329,
	433, 1329,
	435, 1329,
	436, 1329,
	437, 1329,
	438, 1329,
	439, 1329,
	440, 1329,
	441, 1329,
	443, 1329,
	444, 1329,
	445, 1329,
	446, 1329,
	447, 1329,
	448, 1329,
	449, 1329,
	450, 1329,
	451, 1329,
	452, 1329,
	453, 1329,
	454, 1329,
	456, 1329,
	457, 1329,
	458, 1329,
	459, 1329,
	460, 1329,
	461, 1329,
	463, 1329,
	464, 1329,
	465, 1329,
	466, 1329,
	467, 1329,
	468, 1329,
	470, 1329,
	471, 1329,
	472, 1329,
	473, 1329,
	474, 1329,
	475, 1329,
	476, 1329,
	477, 1329,
	479, 1329,
	481, 1329,
	482, 1329,
	483, 1329,
	484, 1329,
	485, 1329,
	486, 1329,
	487, 1329,
	488, 1329,
	489, 1329,
	490, 1329,
	491, 1329,
	492, 1329,
	493, 1329,
	494, 1329,
	495, 1329,
	496, 1329,
	498, 1329,
	499, 1329,
	501, 1329,
	502, 1329,
	504, 1329,
	505, 1329,
	506, 1329,
	507, 1329,
	508, 1329,
	509, 1329,
	510, 1329,
	511, 1329,
	512, 1329,
	514, 1329,
	515, 1329,
	516, 1329,
	517, 1329,
	518, 1329,
	520, 1329,
	522, 1329,
	523, 1329,
	524, 1329,
	525, 1329,
	526, 1329,
	527, 1329,
	529, 1329,
	530, 1329,
	531, 1329,
	532, 1329,
	534, 1329,
	535, 1329,
	538, 1329,
	539, 1329,
	540, 1329,
	541, 1329,
	542, 1329,
	543, 1329,
	544, 1329,
	546, 1329,
	549, 1329,
	550, 1329,
	551, 1329,
	552, 1329,
	553, 1329,
	554, 1329,
	556, 1329,
	557, 1329,
	558, 1329,
	559, 1329,
	560, 1329,
	561, 1329,
	566, 1329,
	567, 1329,
	568, 1329,
	569, 1329,
	570, 1329,
	571, 1329,
	-2, 0,
	-1, 771,
	188, 2396,
	519, 2396,
	584, 2396,
	603, 2396,
	-2, 0,
	-1, 772,
	188, 2383,
	519, 2383,
	584, 2383,
	603, 2383,
	-2, 0,
	-1, 774,
	188, 2647,
	519, 2647,
	584, 2647,
	603, 2647,
	-2, 0,
	-1, 777,
	188, 2508,
	519, 2508,
	584, 2508,
	603, 2508,
	-2, 0,
	-1, 778,
	188, 2688,
	519, 2688,
	584, 2688,
	603, 2688,
	-2, 0,
	-1, 786,
	188, 2535,
	519, 2535,
	584, 2535,
	603, 2535,
	-2, 710,
	-1, 821,
	603, 2332,
	606, 2332,
	-2, 1006,
	-1, 822,
	603, 2334,
	606, 2334,
	-2, 1007,
	-1, 823,
	603, 2333,
	606, 2333,
	-2, 1008,
	-1, 824,
	606, 2258,
	-2, 1009,
	-1, 849,
	183, 263,
	-2, 0,
	-1, 873,
	43, 2305,
	-2, 0,
	-1, 874,
	556, 1307,
	-2, 1086,
	-1, 890,
	4, 1738,
	21, 1738,
	22, 1738,
	23, 1738,
	24, 1738,
	25, 1738,
	26, 1738,
	27, 1738,
	29, 1738,
	30, 1738,
	36, 1738,
	41, 1738,
	42, 1738,
	44, 1738,
	45, 1738,
	46, 1738,
	47, 1738,
	48, 1738,
	49, 1738,
	50, 1738,
	51, 1738,
	53, 1738,
	54, 1738,
	55, 1738,
	56, 1738,
	58, 1738,
	59, 1738,
	60, 1738,
	61, 1738,
	62, 1738,
	63, 1738,
	64, 1738,
	68, 1738,
	69, 1738,
	70, 1738,
	71, 1738,
	73, 1738,
	74, 1738,
	75, 1738,
	79, 1738,
	80, 1738,
	81, 1738,
	82, 1738,
	83, 1738,
	84, 1738,
	85, 1738,
	88, 1738,
	89, 1738,
	90, 1738,
	91, 1738,
	92, 1738,
	94, 1738,
	96, 1738,
	97, 1738,
	98, 1738,
	99, 1738,
	100, 1738,
	101, 1738,
	103, 1738,
	104, 1738,
	105, 1738,
	107, 1738,
	108, 1738,
	109, 1738,
	117, 1738,
	118, 1738,
	119, 1738,
	120, 1738,
	121, 1738,
	123, 1738,
	124, 1738,
	125, 1738,
	126, 1738,
	128, 1738,
	129, 1738,
	130, 1738,
	132, 1738,
	133, 1738,
	134, 1738,
	136, 1738,
	137, 1738,
	138, 1738,
	141, 1738,
	142, 1738,
	143, 1738,
	145, 1738,
	146, 1738,
	148, 1738,
	149, 1738,
	150, 1738,
	152, 1738,
	153, 1738,
	154, 1738,
	155, 1738,
	156, 1738,
	157, 1738,
	158, 1738,
	159, 1738,
	160, 1738,
	161, 1738,
	162, 1738,
	163, 1738,
	164, 1738,
	165, 1738,
	166, 1738,
	167, 1738,
	169, 1738,
	175, 1738,
	176, 1738,
	177, 1738,
	178, 1738,
	182, 1738,
	184, 1738,
	185, 1738,
	186, 1738,
	190, 1738,
	191, 1738,
	192, 1738,
	193, 1738,
	194, 1738,
	195, 1738,
	196, 1738,
	197, 1738,
	198, 1738,
	199, 1738,
	200, 1738,
	201, 1738,
	202, 1738,
	203, 1738,
	205, 1738,
	206, 1738,
	208, 1738,
	209, 1738,
	211, 1738,
	212, 1738,
	213, 1738,
	214, 1738,
	215, 1738,
	216, 1738,
	217, 1738,
	218, 1738,
	219, 1738,
	221, 1738,
	222, 1738,
	224, 1738,
	225, 1738,
	226, 1738,
	227, 1738,
	228, 1738,
	232, 1738,
	233, 1738,
	234, 1738,
	235, 1738,
	236, 1738,
	239, 1738,
	240, 1738,
	241, 1738,
	243, 1738,
	245, 1738,
	246, 1738,
	248, 1738,
	250, 1738,
	251, 1738,
	252, 1738,
	254, 1738,
	258, 1738,
	259, 1738,
	260, 1738,
	261, 1738,
	262, 1738,
	263, 1738,
	265, 1738,
	266, 1738,
	267, 1738,
	269, 1738,
	270, 1738,
	272, 1738,
	273, 1738,
	276, 1738,
	277, 1738,
	278, 1738,
	279, 1738,
	280, 1738,
	281, 1738,
	282, 1738,
	285, 1738,
	286, 1738,
	287, 1738,
	288, 1738,
	290, 1738,
	291, 1738,
	292, 1738,
	293, 1738,
	294, 1738,
	295, 1738,
	296, 1738,
	297, 1738,
	298, 1738,
	299, 1738,
	300, 1738,
	301, 1738,
	302, 1738,
	303, 1738,
	304, 1738,
	305, 1738,
	306, 1738,
	307, 1738,
	308, 1738,
	309, 1738,
	310, 1738,
	311, 1738,
	313, 1738,
	315, 1738,
	316, 1738,
	317, 1738,
	318, 1738,
	319, 1738,
	320, 1738,
	321, 1738,
	322, 1738,
	323, 1738,
	324, 1738,
	325, 1738,
	326, 1738,
	327, 1738,
	328, 1738,
	329, 1738,
	331, 1738,
	332, 1738,
	334, 1738,
	336, 1738,
	337, 1738,
	339, 1738,
	340, 1738,
	341, 1738,
	342, 1738,
	343, 1738,
	346, 1738,
	350, 1738,
	351, 1738,
	352, 1738,
	355, 1738,
	356, 1738,
	357, 1738,
	359, 1738,
	361, 1738,
	362, 1738,
	363, 1738,
	364, 1738,
	365, 1738,
	366, 1738,
	367, 1738,
	368, 1738,
	369, 1738,
	370, 1738,
	371, 1738,
	372, 1738,
	373, 1738,
	375, 1738,
	376, 1738,
	377, 1738,
	378, 1738,
	379, 1738,
	380, 1738,
	381, 1738,
	382, 1738,
	383, 1738,
	384, 1738,
	385, 1738,
	386, 1738,
	387, 1738,
	388, 1738,
	389, 1738,
	391, 1738,
	392, 1738,
	394, 1738,
	395, 1738,
	396, 1738,
	397, 1738,
	398, 1738,
	399, 1738,
	400, 1738,
	401, 1738,
	402, 1738,
	403, 1738,
	404, 1738,
	405, 1738,
	406, 1738,
	408, 1738,
	410, 1738,
	411, 1738,
	412, 1738,
	418, 1738,
	420, 1738,
	421, 1738,
	422, 1738,
	423, 1738,
	424, 1738,
	425, 1738,
	426, 1738,
	427, 1738,
	428, 1738,
	429, 1738,
	431, 1738,
	432, 1738,
	433, 1738,
	435, 1738,
	436, 1738,
	437, 1738,
	438, 1738,
	439, 1738,
	440, 1738,
	441, 1738,
	443, 1738,
	444, 1738,
	445, 1738,
	446, 1738,
	447, 1738,
	448, 1738,
	449, 1738,
	450, 1738,
	451, 1738,
	452, 1738,
	453, 1738,
	454, 1738,
	456, 1738,
	457, 1738,
	458, 1738,
	459, 1738,
	460, 1738,
	461, 1738,
	463, 1738,
	464, 1738,
	465, 1738,
	466, 1738,
	467, 1738,
	468, 1738,
	470, 1738,
	471, 1738,
	472, 1738,
	473, 1738,
	474, 1738,
	475, 1738,
	476, 1738,
	477, 1738,
	479, 1738,
	481, 1738,
	482, 1738,
	483, 1738,
	484, 1738,
	485, 1738,
	486, 1738,
	487, 1738,
	488, 1738,
	489, 1738,
	490, 1738,
	491, 1738,
	492, 1738,
	493, 1738,
	494, 1738,
	495, 1738,
	496, 1738,
	498, 1738,
	499, 1738,
	501, 1738,
	502, 1738,
	504, 1738,
	505, 1738,
	506, 1738,
	507, 1738,
	508, 1738,
	509, 1738,
	510, 1738,
	511, 1738,
	512, 1738,
	514, 1738,
	515, 1738,
	516, 1738,
	517, 1738,
	518, 1738,
	520, 1738,
	522, 1738,
	523, 1738,
	524, 1738,
	525, 1738,
	526, 1738,
	527, 1738,
	529, 1738,
	530, 1738,
	531, 1738,
	532, 1738,
	534, 1738,
	535, 1738,
	538, 1738,
	539, 1738,
	540, 1738,
	541, 1738,
	542, 1738,
	543, 1738,
	544, 1738,
	546, 1738,
	549, 1738,
	550, 1738,
	551, 1738,
	552, 1738,
	553, 1738,
	554, 1738,
	556, 1738,
	557, 1738,
	558, 1738,
	559, 1738,
	560, 1738,
	561, 1738,
	566, 1738,
	567, 1738,
	568, 1738,
	569, 1738,
	570, 1738,
	571, 1738,
	-2, 0,
	-1, 900,
	262, 415,
	-2, 0,
	-1, 977,
	396, 887,
	461, 887,
	502, 887,
	524, 887,
	-2, 0,
	-1, 978,
	396, 886,
	461, 886,
	502, 886,
	524, 886,
	-2, 820,
	-1, 982,
	1, 939,
	600, 939,
	602, 939,
	604, 939,
	-2, 0,
	-1, 984,
	1, 861,
	600, 861,
	602, 861,
	604, 861,
	-2, 0,
	-1, 985,
	1, 865,
	600, 865,
	602, 865,
	604, 865,
	-2, 0,
	-1, 986,
	1, 1005,
	183, 1005,
	600, 1005,
	602, 1005,
	604, 1005,
	-2, 0,
	-1, 994,
	1, 892,
	600, 892,
	602, 892,
	604, 892,
	-2, 0,
	-1, 1001,
	1, 939,
	600, 939,
	602, 939,
	604, 939,
	-2, 0,
	-1, 1002,
	1, 941,
	600, 941,
	602, 941,
	604, 941,
	-2, 0,
	-1, 1003,
	1, 944,
	600, 944,
	602, 944,
	604, 944,
	-2, 0,
	-1, 1009,
	1, 969,
	600, 969,
	602, 969,
	604, 969,
	-2, 0,
	-1, 1010,
	1, 971,
	600, 971,
	602, 971,
	604, 971,
	-2, 0,
	-1, 1015,
	1, 999,
	600, 999,
	602, 999,
	604, 999,
	-2, 0,
	-1, 1067,
	170, 1608,
	183, 1608,
	275, 1608,
	344, 1608,
	-2, 1544,
	-1, 1082,
	170, 1607,
	183, 1607,
	275, 1607,
	344, 1607,
	-2, 1541,
	-1, 1109,
	603, 2331,
	-2, 718,
	-1, 1138,
	5, 2323,
	601, 2321,
	-2, 2312,
	-1, 1146,
	5, 2344,
	601, 2341,
	-2, 2332,
	-1, 1147,
	5, 2345,
	601, 2342,
	-2, 2333,
	-1, 1155,
	603, 2329,
	-2, 2311,
	-1, 1156,
	601, 2772,
	-2, 2330,
	-1, 1179,
	601, 2771,
	-2, 2346,
	-1, 1180,
	5, 1813,
	-2, 2742,
	-1, 1181,
	5, 1814,
	-2, 2743,
	-1, 1182,
	5, 1815,
	-2, 2757,
	-1, 1183,
	5, 1816,
	-2, 2721,
	-1, 1184,
	5, 1817,
	-2, 2755,
	-1, 1185,
	5, 1825,
	-2, 2734,
	-1, 1186,
	5, 1812,
	-2, 2730,
	-1, 1187,
	5, 1812,
	-2, 2729,
	-1, 1188,
	5, 1812,
	-2, 2748,
	-1, 1189,
	5, 1823,
	-2, 2723,
	-1, 1190,
	5, 1828,
	-2, 2722,
	-1, 1191,
	5, 1830,
	-2, 2767,
	-1, 1194,
	5, 1852,
	-2, 2760,
	-1, 1195,
	5, 1844,
	-2, 2761,
	-1, 1196,
	5, 1852,
	-2, 2762,
	-1, 1197,
	5, 1848,
	-2, 2763,
	-1, 1198,
	5, 1798,
	-2, 2735,
	-1, 1199,
	5, 1799,
	-2, 2736,
	-1, 1200,
	5, 1800,
	-2, 2724,
	-1, 1228,
	5, 1835,
	-2, 2768,
	-1, 1229,
	5, 1836,
	-2, 2758,
	-1, 1230,
	5, 1837,
	557, 1837,
	-2, 2725,
	-1, 1231,
	5, 1838,
	557, 1838,
	-2, 2726,
	-1, 1268,
	601, 2341,
	-2, 2332,
	-1, 1269,
	601, 2342,
	-2, 2333,
	-1, 1365,
	188, 2688,
	519, 2688,
	584, 2688,
	603, 2688,
	-2, 0,
	-1, 1370,
	1, 694,
	604, 694,
	-2, 1456,
	-1, 1500,
	363, 2306,
	420, 2306,
	463, 2306,
	594, 2306,
	-2, 2296,
	-1, 1511,
	605, 2306,
	-2, 2308,
	-1, 1519,
	1, 1304,
	425, 1268,
	463, 1268,
	578, 1268,
	600, 1304,
	602, 1304,
	604, 1304,
	-2, 1593,
	-1, 1525,
	204, 1401,
	223, 1401,
	433, 1401,
	-2, 0,
	-1, 1581,
	404, 1085,
	556, 1085,
	-2, 410,
	-1, 1598,
	43, 2304,
	-2, 1051,
	-1, 1605,
	1, 1304,
	600, 1304,
	602, 1304,
	604, 1304,
	-2, 1593,
	-1, 1613,
	4, 1329,
	21, 1329,
	22, 1329,
	23, 1329,
	24, 1329,
	25, 1329,
	26, 1329,
	27, 1329,
	29, 1329,
	30, 1329,
	36, 1329,
	41, 1329,
	42, 1329,
	44, 1329,
	45, 1329,
	46, 1329,
	47, 1329,
	48, 1329,
	49, 1329,
	50, 1329,
	51, 1329,
	53, 1329,
	54, 1329,
	55, 1329,
	56, 1329,
	58, 1329,
	59, 1329,
	60, 1329,
	61, 1329,
	62, 1329,
	63, 1329,
	64, 1329,
	68, 1329,
	69, 1329,
	70, 1329,
	71, 1329,
	73, 1329,
	74, 1329,
	75, 1329,
	79, 1329,
	80, 1329,
	81, 1329,
	82, 1329,
	83, 1329,
	84, 1329,
	85, 1329,
	88, 1329,
	89, 1329,
	90, 1329,
	91, 1329,
	92, 1329,
	94, 1329,
	96, 1329,
	97, 1329,
	98, 1329,
	99, 1329,
	100, 1329,
	101, 1329,
	103, 1329,
	104, 1329,
	105, 1329,
	107, 1329,
	108, 1329,
	109, 1329,
	117, 1329,
	118, 1329,
	119, 1329,
	120, 1329,
	121, 1329,
	123, 1329,
	124, 1329,
	125, 1329,
	126, 1329,
	128, 1329,
	129, 1329,
	130, 1329,
	132, 1329,
	133, 1329,
	134, 1329,
	136, 1329,
	137, 1329,
	138, 1329,
	141, 1329,
	142, 1329,
	143, 1329,
	145, 1329,
	146, 1329,
	148, 1329,
	149, 1329,
	150, 1329,
	152, 1329,
	153, 1329,
	154, 1329,
	155, 1329,
	156, 1329,
	157, 1329,
	158, 1329,
	159, 1329,
	160, 1329,
	161, 1329,
	162, 1329,
	163, 1329,
	164, 1329,
	165, 1329,
	166, 1329,
	167, 1329,
	175, 1329,
	176, 1329,
	177, 1329,
	178, 1329,
	182, 1329,
	184, 1329,
	185, 1329,
	186, 1329,
	190, 1329,
	191, 1329,
	192, 1329,
	193, 1329,
	194, 1329,
	195, 1329,
	196, 1329,
	197, 1329,
	198, 1329,
	199, 1329,
	200, 1329,
	201, 1329,
	202, 1329,
	203, 1329,
	205, 1329,
	206, 1329,
	208, 1329,
	209, 1329,
	211, 1329,
	212, 1329,
	213, 1329,
	214, 1329,
	215, 1329,
	216, 1329,
	217, 1329,
	218, 1329,
	219, 1329,
	221, 1329,
	222, 1329,
	224, 1329,
	225, 1329,
	226, 1329,
	227, 1329,
	228, 1329,
	233, 1329,
	234, 1329,
	235, 1329,
	236, 1329,
	239, 1329,
	240, 1329,
	241, 1329,
	243, 1329,
	245, 1329,
	246, 1329,
	248, 1329,
	250, 1329,
	251, 1329,
	252, 1329,
	254, 1329,
	258, 1329,
	259, 1329,
	260, 1329,
	261, 1329,
	262, 1329,
	263, 1329,
	265, 1329,
	266, 1329,
	267, 1329,
	269, 1329,
	270, 1329,
	272, 1329,
	273, 1329,
	276, 1329,
	277, 1329,
	278, 1329,
	279, 1329,
	280, 1329,
	281, 1329,
	282, 1329,
	285, 1329,
	286, 1329,
	287, 1329,
	288, 1329,
	290, 1329,
	291, 1329,
	292, 1329,
	293, 1329,
	294, 1329,
	295, 1329,
	296, 1329,
	297, 1329,
	298, 1329,
	299, 1329,
	300, 1329,
	301, 1329,
	302, 1329,
	303, 1329,
	304, 1329,
	305, 1329,
	306, 1329,
	307, 1329,
	308, 1329,
	309, 1329,
	310, 1329,
	311, 1329,
	313, 1329,
	315, 1329,
	316, 1329,
	317, 1329,
	318, 1329,
	319, 1329,
	320, 1329,
	321, 1329,
	322, 1329,
	323, 1329,
	324, 1329,
	325, 1329,
	326, 1329,
	327, 1329,
	328, 1329,
	329, 1329,
	331, 1329,
	332, 1329,
	336, 1329,
	337, 1329,
	339, 1329,
	340, 1329,
	341, 1329,
	342, 1329,
	343, 1329,
	346, 1329,
	348, 1329,
	350, 1329,
	351, 1329,
	352, 1329,
	355, 1329,
	356, 1329,
	357, 1329,
	359, 1329,
	361, 1329,
	362, 1329,
	363, 1329,
	364, 1329,
	365, 1329,
	366, 1329,
	367, 1329,
	368, 1329,
	369, 1329,
	370, 1329,
	371, 1329,
	372, 1329,
	373, 1329,
	375, 1329,
	376, 1329,
	377, 1329,
	378, 1329,
	379, 1329,
	380, 1329,
	381, 1329,
	382, 1329,
	383, 1329,
	384, 1329,
	385, 1329,
	386, 1329,
	387, 1329,
	388, 1329,
	389, 1329,
	391, 1329,
	392, 1329,
	394, 1329,
	395, 1329,
	396, 1329,
	397, 1329,
	398, 1329,
	399, 1329,
	400, 1329,
	401, 1329,
	402, 1329,
	403, 1329,
	404, 1329,
	405, 1329,
	406, 1329,
	408, 1329,
	410, 1329,
	411, 1329,
	412, 1329,
	418, 1329,
	420, 1329,
	421, 1329,
	422, 1329,
	423, 1329,
	424, 1329,
	425, 1329,
	426, 1329,
	427, 1329,
	428, 1329,
	429, 1329,
	431, 1329,
	432, 1329,
	433, 1329,
	435, 1329,
	436, 1329,
	437, 1329,
	438, 1329,
	439, 1329,
	440, 1329,
	441, 1329,
	443, 1329,
	444, 1329,
	445, 1329,
	446, 1329,
	447, 1329,
	448, 1329,
	449, 1329,
	450, 1329,
	451, 1329,
	452, 1329,
	453, 1329,
	454, 1329,
	456, 1329,
	457, 1329,
	458, 1329,
	459, 1329,
	460, 1329,
	461, 1329,
	463, 1329,
	464, 1329,
	465, 1329,
	466, 1329,
	467, 1329,
	468, 1329,
	470, 1329,
	471, 1329,
	472, 1329,
	473, 1329,
	474, 1329,
	475, 1329,
	476, 1329,
	477, 1329,
	479, 1329,
	481, 1329,
	482, 1329,
	483, 1329,
	484, 1329,
	485, 1329,
	486, 1329,
	487, 1329,
	488, 1329,
	489, 1329,
	490, 1329,
	491, 1329,
	492, 1329,
	493, 1329,
	494, 1329,
	495, 1329,
	496, 1329,
	498, 1329,
	499, 1329,
	501, 1329,
	502, 1329,
	504, 1329,
	505, 1329,
	506, 1329,
	507, 1329,
	508, 1329,
	509, 1329,
	510, 1329,
	511, 1329,
	512, 1329,
	514, 1329,
	515, 1329,
	516, 1329,
	517, 1329,
	518, 1329,
	520, 1329,
	522, 1329,
	523, 1329,
	524, 1329,
	525, 1329,
	526, 1329,
	527, 1329,
	529, 1329,
	530, 1329,
	531, 1329,
	532, 1329,
	534, 1329,
	535, 1329,
	538, 1329,
	539, 1329,
	540, 1329,
	541, 1329,
	542, 1329,
	543, 1329,
	544, 1329,
	546, 1329,
	549, 1329,
	550, 1329,
	551, 1329,
	552, 1329,
	553, 1329,
	554, 1329,
	556, 1329,
	557, 1329,
	558, 1329,
	559, 1329,
	560, 1329,
	561, 1329,
	566, 1329,
	567, 1329,
	568, 1329,
	569, 1329,
	570, 1329,
	571, 1329,
	-2, 0,
	-1, 1636,
	1, 555,
	600, 555,
	602, 555,
	604, 555,
	-2, 1564,
	-1, 1639,
	4, 2766,
	11, 2766,
	12, 2766,
	14, 2766,
	15, 2766,
	16, 2766,
	17, 2766,
	18, 2766,
	19, 2766,
	21, 2766,
	22, 2766,
	23, 2766,
	24, 2766,
	25, 2766,
	26, 2766,
	27, 2766,
	29, 2766,
	30, 2766,
	33, 2766,
	34, 2766,
	36, 2766,
	38, 2766,
	41, 2766,
	42, 2766,
	44, 2766,
	45, 2766,
	46, 2766,
	47, 2766,
	48, 2766,
	49, 2766,
	50, 2766,
	51, 2766,
	53, 2766,
	54, 2766,
	55, 2766,
	56, 2766,
	58, 2766,
	59, 2766,
	60, 2766,
	61, 2766,
	62, 2766,
	63, 2766,
	64, 2766,
	67, 2766,
	68, 2766,
	69, 2766,
	70, 2766,
	71, 2766,
	73, 2766,
	74, 2766,
	75, 2766,
	76, 2766,
	79, 2766,
	80, 2766,
	81, 2766,
	82, 2766,
	83, 2766,
	84, 2766,
	85, 2766,
	86, 2766,
	88, 2766,
	89, 2766,
	90, 2766,
	91, 2766,
	92, 2766,
	94, 2766,
	95, 2766,
	96, 2766,
	97, 2766,
	98, 2766,
	99, 2766,
	100, 2766,
	101, 2766,
	103, 2766,
	104, 2766,
	105, 2766,
	106, 2766,
	107, 2766,
	108, 2766,
	109, 2766,
	117, 2766,
	118, 2766,
	119, 2766,
	120, 2766,
	121, 2766,
	123, 2766,
	124, 2766,
	125, 2766,
	126, 2766,
	128, 2766,
	129, 2766,
	130, 2766,
	132, 2766,
	133, 2766,
	134, 2766,
	136, 2766,
	137, 2766,
	138, 2766,
	141, 2766,
	142, 2766,
	143, 2766,
	145, 2766,
	146, 2766,
	148, 2766,
	149, 2766,
	150, 2766,
	152, 2766,
	153, 2766,
	154, 2766,
	155, 2766,
	156, 2766,
	157, 2766,
	158, 2766,
	159, 2766,
	160, 2766,
	161, 2766,
	162, 2766,
	163, 2766,
	164, 2766,
	165, 2766,
	166, 2766,
	167, 2766,
	171, 2766,
	172, 2766,
	173, 2766,
	174, 2766,
	175, 2766,
	176, 2766,
	177, 2766,
	178, 2766,
	181, 2766,
	182, 2766,
	184, 2766,
	185, 2766,
	186, 2766,
	189, 2766,
	190, 2766,
	191, 2766,
	192, 2766,
	193, 2766,
	194, 2766,
	195, 2766,
	196, 2766,
	197, 2766,
	198, 2766,
	199, 2766,
	200, 2766,
	201, 2766,
	202, 2766,
	203, 2766,
	205, 2766,
	206, 2766,
	208, 2766,
	209, 2766,
	211, 2766,
	212, 2766,
	213, 2766,
	214, 2766,
	215, 2766,
	216, 2766,
	217, 2766,
	218, 2766,
	219, 2766,
	220, 2766,
	221, 2766,
	222, 2766,
	223, 2766,
	224, 2766,
	225, 2766,
	226, 2766,
	227, 2766,
	228, 2766,
	230, 2766,
	231, 2766,
	233, 2766,
	234, 2766,
	235, 2766,
	236, 2766,
	238, 2766,
	239, 2766,
	240, 2766,
	241, 2766,
	243, 2766,
	245, 2766,
	246, 2766,
	247, 2766,
	248, 2766,
	249, 2766,
	250, 2766,
	251, 2766,
	252, 2766,
	253, 2766,
	254, 2766,
	256, 2766,
	257, 2766,
	258, 2766,
	259, 2766,
	260, 2766,
	261, 2766,
	262, 2766,
	263, 2766,
	265, 2766,
	266, 2766,
	267, 2766,
	269, 2766,
	270, 2766,
	271, 2766,
	272, 2766,
	273, 2766,
	274, 2766,
	276, 2766,
	277, 2766,
	278, 2766,
	279, 2766,
	280, 2766,
	281, 2766,
	282, 2766,
	285, 2766,
	286, 2766,
	287, 2766,
	288, 2766,
	289, 2766,
	290, 2766,
	291, 2766,
	292, 2766,
	293, 2766,
	294, 2766,
	295, 2766,
	296, 2766,
	297, 2766,
	298, 2766,
	299, 2766,
	300, 2766,
	301, 2766,
	302, 2766,
	303, 2766,
	304, 2766,
	305, 2766,
	306, 2766,
	307, 2766,
	308, 2766,
	309, 2766,
	310, 2766,
	311, 2766,
	313, 2766,
	314, 2766,
	315, 2766,
	316, 2766,
	317, 2766,
	318, 2766,
	319, 2766,
	320, 2766,
	321, 2766,
	322, 2766,
	323, 2766,
	324, 2766,
	325, 2766,
	326, 2766,
	327, 2766,
	328, 2766,
	329, 2766,
	331, 2766,
	332, 2766,
	335, 2766,
	336, 2766,
	337, 2766,
	339, 2766,
	340, 2766,
	341, 2766,
	342, 2766,
	343, 2766,
	346, 2766,
	350, 2766,
	351, 2766,
	352, 2766,
	353, 2766,
	355, 2766,
	356, 2766,
	357, 2766,
	359, 2766,
	361, 2766,
	362, 2766,
	363, 2766,
	364, 2766,
	365, 2766,
	366, 2766,
	367, 2766,
	368, 2766,
	369, 2766,
	370, 2766,
	371, 2766,
	372, 2766,
	373, 2766,
	375, 2766,
	376, 2766,
	377, 2766,
	378, 2766,
	379, 2766,
	380, 2766,
	381, 2766,
	382, 2766,
	383, 2766,
	384, 2766,
	385, 2766,
	386, 2766,
	387, 2766,
	388, 2766,
	389, 2766,
	391, 2766,
	392, 2766,
	394, 2766,
	395, 2766,
	396, 2766,
	397, 2766,
	398, 2766,
	399, 2766,
	400, 2766,
	401, 2766,
	402, 2766,
	403, 2766,
	404, 2766,
	405, 2766,
	406, 2766,
	408, 2766,
	410, 2766,
	411, 2766,
	412, 2766,
	418, 2766,
	419, 2766,
	420, 2766,
	421, 2766,
	422, 2766,
	423, 2766,
	424, 2766,
	425, 2766,
	426, 2766,
	427, 2766,
	428, 2766,
	429, 2766,
	431, 2766,
	432, 2766,
	433, 2766,
	434, 2766,
	435, 2766,
	436, 2766,
	437, 2766,
	438, 2766,
	439, 2766,
	440, 2766,
	441, 2766,
	442, 2766,
	443, 2766,
	444, 2766,
	445, 2766,
	446, 2766,
	447, 2766,
	448, 2766,
	449, 2766,
	450, 2766,
	451, 2766,
	452, 2766,
	453, 2766,
	454, 2766,
	456, 2766,
	457, 2766,
	458, 2766,
	459, 2766,
	460, 2766,
	461, 2766,
	463, 2766,
	464, 2766,
	465, 2766,
	466, 2766,
	467, 2766,
	468, 2766,
	469, 2766,
	470, 2766,
	471, 2766,
	472, 2766,
	473, 2766,
	474, 2766,
	475, 2766,
	476, 2766,
	477, 2766,
	479, 2766,
	481, 2766,
	482, 2766,
	483, 2766,
	484, 2766,
	485, 2766,
	486, 2766,
	487, 2766,
	488, 2766,
	489, 2766,
	490, 2766,
	491, 2766,
	492, 2766,
	493, 2766,
	494, 2766,
	495, 2766,
	496, 2766,
	498, 2766,
	499, 2766,
	500, 2766,
	501, 2766,
	502, 2766,
	504, 2766,
	505, 2766,
	506, 2766,
	507, 2766,
	508, 2766,
	509, 2766,
	510, 2766,
	511, 2766,
	512, 2766,
	514, 2766,
	515, 2766,
	516, 2766,
	517, 2766,
	518, 2766,
	520, 2766,
	522, 2766,
	523, 2766,
	524, 2766,
	525, 2766,
	526, 2766,
	527, 2766,
	529, 2766,
	530, 2766,
	531, 2766,
	532, 2766,
	534, 2766,
	535, 2766,
	538, 2766,
	539, 2766,
	540, 2766,
	541, 2766,
	542, 2766,
	543, 2766,
	544, 2766,
	546, 2766,
	549, 2766,
	550, 2766,
	551, 2766,
	552, 2766,
	553, 2766,
	554, 2766,
	556, 2766,
	557, 2766,
	558, 2766,
	559, 2766,
	560, 2766,
	561, 2766,
	566, 2766,
	567, 2766,
	568, 2766,
	569, 2766,
	570, 2766,
	571, 2766,
	572, 2766,
	574, 2766,
	582, 2766,
	583, 2766,
	584, 2766,
	585, 2766,
	586, 2766,
	587, 2766,
	589, 2766,
	590, 2766,
	591, 2766,
	592, 2766,
	593, 2766,
	594, 2766,
	595, 2766,
	596, 2766,
	597, 2766,
	599, 2766,
	602, 2766,
	603, 2766,
	605, 2766,
	606, 2766,
	-2, 0,
	-1, 1644,
	188, 2647,
	519, 2647,
	584, 2647,
	603, 2647,
	-2, 0,
	-1, 1697,
	396, 887,
	461, 887,
	502, 887,
	524, 887,
	-2, 0,
	-1, 1708,
	1, 1401,
	600, 1401,
	602, 1401,
	604, 1401,
	-2, 0,
	-1, 1725,
	1, 882,
	600, 882,
	602, 882,
	604, 882,
	-2, 0,
	-1, 1726,
	1, 926,
	600, 926,
	602, 926,
	604, 926,
	-2, 0,
	-1, 1727,
	1, 934,
	600, 934,
	602, 934,
	604, 934,
	-2, 0,
	-1, 1730,
	1, 891,
	600, 891,
	602, 891,
	604, 891,
	-2, 0,
	-1, 1732,
	1, 897,
	600, 897,
	602, 897,
	604, 897,
	-2, 0,
	-1, 1735,
	1, 893,
	600, 893,
	602, 893,
	604, 893,
	-2, 0,
	-1, 1740,
	1, 907,
	600, 907,
	602, 907,
	604, 907,
	-2, 0,
	-1, 1771,
	1, 2630,
	600, 2630,
	602, 2630,
	603, 2630,
	604, 2630,
	-2, 0,
	-1, 1775,
	1, 980,
	600, 980,
	602, 980,
	604, 980,
	-2, 0,
	-1, 1790,
	1, 1451,
	604, 1451,
	-2, 1456,
	-1, 1793,
	170, 1607,
	183, 1607,
	275, 1607,
	344, 1607,
	-2, 1545,
	-1, 1893,
	151, 1566,
	170, 1566,
	183, 1566,
	242, 1566,
	275, 1566,
	344, 1566,
	354, 1566,
	536, 1566,
	-2, 2017,
	-1, 1954,
	602, 2192,
	-2, 0,
	-1, 1989,
	151, 1566,
	170, 1566,
	183, 1566,
	242, 1566,
	275, 1566,
	344, 1566,
	354, 1566,
	536, 1566,
	-2, 1699,
	-1, 2028,
	519, 2644,
	603, 2644,
	606, 2644,
	-2, 0,
	-1, 2045,
	601, 1840,
	-2, 1828,
	-1, 2077,
	188, 2644,
	603, 2644,
	606, 2644,
	-2, 0,
	-1, 2119,
	1, 696,
	604, 696,
	-2, 1456,
	-1, 2258,
	223, 258,
	-2, 2340,
	-1, 2259,
	223, 259,
	-2, 312,
	-1, 2370,
	1, 884,
	600, 884,
	602, 884,
	604, 884,
	-2, 0,
	-1, 2371,
	1, 928,
	600, 928,
	602, 928,
	604, 928,
	-2, 0,
	-1, 2372,
	1, 936,
	600, 936,
	602, 936,
	604, 936,
	-2, 0,
	-1, 2373,
	1, 982,
	600, 982,
	602, 982,
	604, 982,
	-2, 0,
	-1, 2414,
	1, 909,
	600, 909,
	602, 909,
	604, 909,
	-2, 0,
	-1, 2433,
	1, 965,
	600, 965,
	602, 965,
	604, 965,
	-2, 0,
	-1, 2478,
	440, 1634,
	441, 1634,
	-2, 1873,
	-1, 2509,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1893,
	-1, 2510,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1894,
	-1, 2511,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1895,
	-1, 2512,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1896,
	-1, 2513,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1897,
	-1, 2514,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1898,
	-1, 2515,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1899,
	-1, 2516,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1900,
	-1, 2528,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1912,
	-1, 2529,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1913,
	-1, 2530,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1914,
	-1, 2534,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1921,
	-1, 2540,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1925,
	-1, 2542,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1933,
	-1, 2543,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1934,
	-1, 2544,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1935,
	-1, 2545,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1936,
	-1, 2719,
	5, 2344,
	188, 2203,
	601, 2341,
	-2, 2332,
	-1, 2720,
	188, 2204,
	-2, 2717,
	-1, 2721,
	188, 2205,
	-2, 2534,
	-1, 2722,
	188, 2206,
	-2, 2414,
	-1, 2723,
	188, 2207,
	-2, 2471,
	-1, 2724,
	188, 2208,
	-2, 2519,
	-1, 2725,
	188, 2209,
	-2, 2642,
	-1, 2726,
	188, 2210,
	-2, 2000,
	-1, 2797,
	1, 1700,
	2, 1700,
	106, 1700,
	151, 1700,
	170, 1700,
	183, 1700,
	189, 1700,
	207, 1700,
	210, 1700,
	238, 1700,
	242, 1700,
	253, 1700,
	271, 1700,
	275, 1700,
	314, 1700,
	344, 1700,
	348, 1700,
	354, 1700,
	430, 1700,
	434, 1700,
	536, 1700,
	547, 1700,
	563, 1700,
	564, 1700,
	565, 1700,
	575, 1700,
	600, 1700,
	602, 1700,
	604, 1700,
	606, 1700,
	-2, 1699,
	-1, 2810,
	601, 2313,
	-2, 2327,
	-1, 2812,
	1, 329,
	563, 329,
	-2, 1593,
	-1, 2842,
	601, 1839,
	-2, 1829,
	-1, 3027,
	1, 1304,
	425, 1268,
	463, 1268,
	578, 1268,
	600, 1304,
	602, 1304,
	604, 1304,
	-2, 1593,
	-1, 3213,
	349, 1637,
	-2, 2756,
	-1, 3214,
	349, 1638,
	-2, 2627,
	-1, 3218,
	440, 2269,
	441, 2269,
	-2, 1998,
	-1, 3219,
	440, 2273,
	441, 2273,
	-2, 1999,
	-1, 3220,
	440, 2270,
	441, 2270,
	-2, 1998,
	-1, 3221,
	440, 2274,
	441, 2274,
	-2, 1999,
	-1, 3234,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1923,
	-1, 3235,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1927,
	-1, 3241,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1929,
	-1, 3467,
	1, 691,
	600, 691,
	602, 691,
	604, 691,
	-2, 1456,
	-1, 3631,
	43, 2304,
	-2, 1052,
	-1, 3636,
	1, 1304,
	600, 1304,
	602, 1304,
	604, 1304,
	-2, 1593,
	-1, 3749,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1931,
	-1, 3756,
	247, 0,
	249, 0,
	335, 0,
	-2, 1950,
	-1, 3824,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1979,
	-1, 3825,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1980,
	-1, 3826,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1981,
	-1, 3830,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1985,
	-1, 3831,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1986,
	-1, 3832,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1987,
	-1, 3880,
	601, 2314,
	-2, 2328,
	-1, 4055,
	603, 2873,
	-2, 1519,
	-1, 4117,
	247, 0,
	249, 0,
	335, 0,
	-2, 1951,
	-1, 4120,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1954,
	-1, 4121,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1956,
	-1, 4222,
	603, 2329,
	-2, 1339,
	-1, 4377,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1955,
	-1, 4378,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1957,
	-1, 4389,
	247, 0,
	-2, 1990,
	-1, 4577,
	247, 0,
	-2, 1991,
	-1, 4778,
	50, 0,
	220, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 2720,
}

const sqlPrivate = 57344

const sqlLast = 134291

var sqlAct = [...]int{
	275, 4771, 3620, 4974, 4895, 4882, 3112, 3099, 3372, 4647,
	4439, 4836, 4759, 4770, 4777, 2904, 4611, 4788, 4911, 2168,
	4619, 1534, 4668, 4724, 2255, 3619, 4643, 4100, 4218, 4746,
	4789, 4499, 4727, 4530, 4790, 4704, 4849, 2948, 4421, 4506,
	4484, 1343, 1272, 2752, 1261, 3789, 4331, 4581, 4326, 4267,
	4292, 4444, 3069, 4039, 4776, 3741, 4398, 2973, 2488, 4366,
	2346, 2019, 4047, 4313, 4515, 3975, 3653, 4306, 1561, 712,
	2344, 1336, 4315, 4219, 3227, 823, 4199, 4544, 1092, 2088,
	2557, 4020, 1802, 4336, 1083, 3647, 4002, 2176, 3615, 2986,
	3547, 3490, 783, 4004, 3604, 4394, 1662, 2032, 2496, 3088,
	3694, 1404, 3136, 823, 3121, 1995, 3696, 3123, 3418, 1338,
	3058, 3597, 3596, 3883, 3387, 4099, 3378, 3395, 3120, 2033,
	2101, 2342, 3376, 3114, 723, 3355, 3100, 2489, 898, 4,
	3131, 4156, 1497, 902, 1964, 3034, 3083, 1091, 182, 3425,
	2242, 2203, 3509, 2187, 4883, 2906, 2637, 2789, 3850, 2790,
	3085, 2244, 3354, 1940, 4582, 1901, 2635, 3211, 2305, 2493,
	1871, 2570, 3130, 3485, 893, 1504, 818, 1341, 1600, 1252,
	779, 3003, 2243, 3062, 2238, 2226, 2219, 2156, 1142, 2947,
	3070, 1790, 1385, 1138, 1315, 2792, 2013, 2626, 2160, 2099,
	1329, 2770, 269, 1965, 2554, 1147, 2146, 2477, 2460, 2825,
	268, 3617, 2458, 1637, 1705, 3093, 1346, 1326, 1660, 756,
	1603, 2292, 2929, 824, 4669, 825, 1563, 1984, 971, 3124,
	1372, 820, 2824, 2749, 3996, 1255, 2629, 1935, 2779, 2892,
	1234, 2681, 182, 1974, 1803, 699, 2715, 1981, 1885, 721,
	1804, 2459, 1269, 2607, 2760, 2461, 764, 1725, 191, 775,
	1740, 2252, 1251, 192, 1635, 2291, 2318, 1628, 2175, 1529,
	4837, 4896, 2482, 1123, 716, 44, 43, 829, 1257, 1232,
	41, 32, 30, 28, 1809, 832, 3264, 713, 1789, 724,
	992, 1540, 739, 813, 874, 3864, 3258, 3865, 1533, 2090,
	73, 2090, 4987, 3374, 2090, 829, 2769, 111, 875, 4817,
	2332, 4414, 2090, 832, 4977, 1817, 1818, 74, 3672, 4961,
	1087, 4960, 4950, 2769, 2090, 2769, 2264, 4931, 2090, 3663,
	1087, 4443, 4929, 79, 919, 1145, 4443, 4868, 4825, 4814,
	4812, 2264, 4826, 2769, 2769, 1820, 3662, 4809, 4806, 4774,
	2111, 4810, 4807, 2264, 1144, 4773, 4772, 4767, 4766, 2264,
	3141, 3141, 3141, 4757, 4411, 4755, 4752, 4443, 1249, 4443,
	4518, 4722, 4693, 88, 1121, 4443, 2833, 4180, 894, 4686,
	1819, 1671, 4685, 2769, 4680, 4679, 2769, 4673, 4443, 4443,
	4639, 2264, 4579, 4561, 4283, 4558, 2833, 4084, 4555, 2264,
	4508, 3435, 4443, 3452, 4509, 73, 4462, 897, 896, 4461,
	2264, 4450, 4449, 2264, 900, 2264, 4443, 4442, 2111, 1077,
	4405, 4443, 74, 4379, 2264, 1554, 49, 2833, 110, 1235,
	1235, 3325, 3326, 94, 107, 1267, 4355, 1381, 79, 4344,
	3141, 1068, 1381, 3672, 4262, 4245, 1067, 3450, 2769, 2769,
	4119, 2108, 94, 4063, 2833, 1653, 4057, 3689, 4018, 3875,
	3689, 3873, 4019, 3876, 3672, 3874, 3857, 3773, 2343, 3273,
	2769, 2264, 3769, 3854, 2853, 3274, 2769, 3688, 88, 1082,
	3679, 3689, 3371, 3366, 3680, 1825, 2769, 2769, 2108, 2829,
	3365, 3316, 3314, 95, 2769, 3317, 3315, 1286, 3306, 3304,
	2264, 1088, 3307, 2769, 3325, 3326, 3275, 3343, 3344, 3345,
	2769, 3140, 3110, 3109, 1236, 3141, 2328, 2328, 2876, 900,
	2832, 2822, 2769, 2814, 2833, 2769, 4115, 2264, 2768, 2762,
	2111, 49, 2769, 110, 1293, 1238, 2327, 1239, 94, 107,
	2328, 3226, 2769, 2111, 4694, 4583, 4574, 4562, 4518, 3141,
	3854, 3325, 3326, 2761, 4324, 4283, 2108, 2632, 1287, 4246,
	4084, 2111, 1542, 3680, 2976, 2891, 239, 2125, 2089, 2105,
	3064, 2263, 2769, 2996, 2889, 1960, 1528, 1264, 2180, 3340,
	3958, 3664, 3263, 1707, 1287, 3744, 3718, 1982, 2231, 2806,
	2805, 2804, 2803, 2802, 1548, 1731, 1263, 1240, 95, 1237,
	3665, 3331, 1076, 1075, 1074, 2583, 2584, 2585, 2602, 2603,
	2604, 239, 1073, 1072, 241, 1071, 1265, 1070, 1066, 1065,
	1064, 3185, 4565, 1063, 1062, 2605, 3340, 1061, 1060, 1059,
	1058, 1057, 1056, 1055, 1054, 1053, 1542, 1052, 1051, 1553,
	1050, 99, 1049, 1031, 969, 968, 967, 966, 2633, 1817,
	1818, 965, 1850, 1851, 1852, 1861, 1862, 1863, 1873, 241,
	964, 963, 2091, 240, 2091, 962, 961, 2091, 1870, 960,
	959, 1854, 1848, 958, 3331, 2091, 233, 2595, 957, 1820,
	956, 955, 954, 953, 952, 234, 2591, 2091, 1867, 951,
	950, 2091, 949, 3325, 3326, 948, 190, 102, 947, 946,
	106, 945, 944, 1149, 943, 1873, 942, 941, 240, 3341,
	940, 939, 193, 938, 1819, 1533, 937, 936, 935, 934,
	923, 3331, 922, 921, 1839, 917, 239, 4799, 916, 2108,
	2634, 909, 2631, 1836, 901, 908, 907, 892, 891, 153,
	3347, 848, 847, 846, 845, 239, 99, 3662, 3325, 3326,
	836, 835, 834, 833, 799, 790, 789, 193, 153, 788,
	1903, 770, 2596, 2597, 2598, 2599, 263, 1348, 1147, 262,
	261, 260, 2590, 259, 241, 258, 1542, 257, 256, 255,
	254, 253, 3341, 252, 1870, 251, 250, 249, 248, 247,
	246, 245, 244, 241, 243, 1147, 1147, 1147, 242, 4174,
	157, 190, 102, 4131, 3898, 106, 3869, 3690, 1547, 1842,
	1843, 1844, 1845, 1407, 3421, 194, 3286, 1407, 2664, 1825,
	4338, 1287, 3269, 240, 1348, 3260, 3165, 3044, 2837, 3341,
	2811, 239, 2796, 2662, 239, 2648, 233, 2646, 4798, 901,
	4795, 2111, 240, 2863, 153, 234, 2089, 2600, 2601, 1147,
	2335, 1147, 2154, 1147, 2108, 233, 2110, 1870, 1858, 1376,
	1566, 1868, 3342, 3331, 234, 2108, 2105, 3078, 1847, 1849,
	2453, 2008, 193, 1389, 1390, 1391, 1943, 1943, 239, 241,
	2593, 3369, 241, 1942, 1942, 1864, 1348, 1865, 2636, 1985,
	1512, 193, 1912, 4775, 1834, 1835, 1821, 1822, 1823, 1824,
	1826, 1827, 1536, 1393, 1870, 157, 1566, 4754, 239, 1271,
	1946, 1941, 1856, 1566, 4654, 3096, 4586, 1816, 3331, 1904,
	194, 1902, 1147, 3370, 1147, 4571, 241, 1840, 240, 1566,
	4393, 240, 4563, 4345, 4323, 3342, 2334, 1147, 1507, 1147,
	4186, 233, 4154, 1532, 233, 1320, 1323, 2761, 1910, 4434,
	234, 4153, 1287, 234, 4147, 4146, 241, 4145, 1368, 1609,
	1612, 4138, 4137, 4135, 1333, 4130, 4127, 4126, 4017, 3902,
	1370, 3341, 3901, 1866, 3900, 240, 3879, 895, 1903, 3845,
	193, 1400, 3342, 1494, 1499, 3844, 4023, 1566, 233, 3843,
	1517, 1855, 3765, 3760, 3416, 3362, 2406, 234, 3353, 3324,
	1675, 3321, 1870, 3320, 2630, 240, 1502, 1147, 1541, 3318,
	1147, 3335, 3327, 3328, 3329, 3330, 3332, 3333, 233, 3313,
	3312, 3311, 2308, 3308, 193, 2271, 3341, 234, 4340, 829,
	1519, 1657, 3305, 2594, 1362, 2846, 1248, 832, 3325, 3326,
	3285, 3268, 3261, 3259, 182, 182, 1870, 239, 239, 3111,
	1531, 1598, 1530, 1905, 193, 2269, 2797, 1846, 2619, 1816,
	1815, 4981, 4921, 4920, 4024, 1354, 4884, 4835, 4833, 1273,
	3791, 1640, 1642, 4714, 1676, 3337, 3338, 3339, 4646, 4630,
	1841, 1615, 3336, 3334, 3335, 3327, 3328, 3329, 3330, 3332,
	3333, 1872, 1605, 3956, 3442, 241, 241, 4627, 1817, 1818,
	4626, 1870, 4625, 4605, 4604, 4602, 4585, 1859, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1376, 3080, 4584, 1376,
	4559, 1848, 1638, 4543, 3342, 4542, 2560, 4528, 1820, 3336,
	3334, 3335, 3327, 3328, 3329, 3330, 3332, 3333, 1872, 2566,
	4525, 1147, 4524, 4519, 240, 240, 4458, 1147, 4429, 4391,
	4374, 3325, 3326, 1631, 1873, 1733, 4373, 233, 233, 4352,
	1090, 4351, 1794, 1819, 4309, 4284, 234, 234, 4173, 4152,
	4085, 4077, 4074, 2580, 2581, 2582, 2606, 2592, 2586, 3342,
	2588, 2589, 2587, 2574, 2575, 2576, 2577, 2578, 2579, 1542,
	3944, 3367, 1634, 193, 193, 4566, 3943, 3926, 3925, 3923,
	3860, 1681, 3848, 1088, 1652, 3755, 1890, 3691, 3331, 3673,
	1857, 3639, 1788, 3564, 3522, 3489, 1749, 3444, 3290, 1670,
	1831, 1832, 1838, 1860, 1837, 1833, 3289, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 3284, 3250, 3325, 3326,
	4707, 4024, 3057, 239, 1892, 1949, 1948, 1947, 1944, 1936,
	1934, 2844, 1147, 1147, 1147, 2843, 2808, 2801, 1147, 2767,
	2644, 1889, 2007, 1963, 1958, 1269, 1957, 1269, 1825, 1698,
	1956, 3336, 3334, 3335, 3327, 3328, 3329, 3330, 3332, 3333,
	1955, 4339, 1407, 4791, 1954, 1953, 1734, 1952, 1962, 1951,
	1950, 241, 1931, 1147, 1930, 1929, 823, 1348, 1817, 1818,
	1928, 1971, 2050, 823, 1348, 2011, 1348, 1795, 1629, 3413,
	1927, 1926, 1925, 1924, 1923, 1922, 3341, 1847, 1849, 1921,
	3079, 3331, 1920, 1919, 1918, 1917, 1916, 1791, 1820, 3327,
	3328, 3329, 3330, 3332, 3333, 1799, 2023, 1905, 2029, 1798,
	240, 1891, 1888, 1883, 1361, 2078, 1291, 2080, 1282, 2336,
	1068, 4588, 4587, 233, 1793, 1067, 4312, 4182, 4123, 3897,
	1945, 3872, 234, 1819, 3863, 3272, 1348, 2799, 4412, 4184,
	1812, 1813, 1147, 3896, 3325, 3326, 1840, 1904, 3440, 1886,
	4248, 3668, 1386, 1992, 2003, 4918, 4910, 1968, 1969, 3095,
	2835, 1870, 2145, 2137, 2136, 2145, 1147, 2145, 2147, 1388,
	1381, 2974, 4628, 4520, 1407, 4511, 182, 2113, 3331, 2018,
	2095, 4510, 2170, 2097, 2145, 2117, 4343, 267, 2663, 2102,
	4286, 4285, 4247, 2104, 4176, 1937, 1938, 4516, 2107, 1235,
	4090, 4089, 2143, 2661, 4088, 2647, 4087, 2645, 1088, 4086,
	3867, 3866, 1633, 3693, 2952, 3692, 1376, 3675, 1267, 239,
	1267, 1870, 3674, 239, 4864, 3325, 3326, 4862, 3343, 3344,
	3345, 239, 2116, 4027, 1387, 2632, 2016, 1985, 3742, 3342,
	3970, 2017, 1926, 1381, 2152, 2012, 1786, 4114, 1697, 1943,
	1817, 1818, 1381, 2214, 239, 1993, 1942, 3310, 829, 3309,
	3232, 2934, 1990, 1384, 2131, 829, 832, 241, 3941, 3491,
	1983, 241, 1926, 832, 1047, 4564, 3622, 4847, 3621, 241,
	1820, 3525, 1750, 1961, 2093, 1914, 2140, 2024, 239, 2228,
	1706, 3001, 2333, 4507, 2073, 4821, 3556, 4802, 4787, 1841,
	3340, 3605, 241, 1987, 2002, 2001, 3137, 1566, 1566, 2000,
	1998, 1997, 1996, 3684, 1911, 1819, 240, 1407, 4433, 1048,
	240, 1707, 2246, 2245, 4031, 4014, 2633, 2119, 240, 233,
	3972, 2362, 2030, 233, 1088, 1192, 241, 3967, 234, 3949,
	3715, 233, 234, 3465, 2340, 2115, 4395, 3374, 3793, 3278,
	234, 240, 2627, 4453, 4425, 2309, 4796, 1872, 2842, 2982,
	1264, 1870, 1264, 1959, 233, 193, 1939, 3613, 2302, 193,
	2210, 1608, 2218, 234, 1524, 2223, 2931, 193, 1357, 1263,
	1319, 1263, 2993, 239, 4811, 240, 4808, 3334, 3335, 3327,
	3328, 3329, 3330, 3332, 3333, 3331, 3658, 2990, 233, 1265,
	193, 1265, 2142, 2256, 2261, 1247, 2213, 234, 2634, 3918,
	2631, 2988, 4620, 4327, 4721, 4598, 3494, 3936, 3118, 3092,
	1825, 2981, 1566, 4797, 1566, 1634, 1566, 2148, 2138, 2120,
	3588, 241, 4865, 4456, 193, 4452, 4866, 2180, 2930, 4431,
	2141, 3736, 3469, 3985, 1566, 1566, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 1027, 3441, 1566, 2186, 1575,
	4480, 3347, 4235, 1583, 2877, 4976, 4634, 887, 1748, 1566,
	4473, 1566, 1566, 1566, 2250, 2248, 2249, 4464, 4276, 2468,
	240, 2895, 1045, 1388, 2132, 4900, 1043, 1041, 1039, 1685,
	2420, 1526, 4275, 233, 1036, 823, 2893, 2208, 3983, 2418,
	3982, 829, 234, 3341, 3329, 3330, 3332, 3333, 3974, 832,
	3164, 3984, 3964, 2895, 3963, 2298, 3089, 1147, 3036, 3961,
	3960, 3948, 1531, 3913, 1530, 3912, 2303, 3594, 2893, 193,
	3593, 3434, 3283, 3282, 4192, 1371, 3281, 3280, 3236, 2466,
	2999, 2998, 2995, 2207, 2204, 2984, 2222, 2315, 1387, 2968,
	1584, 2967, 1147, 2962, 2961, 2960, 2939, 2938, 1382, 2899,
	2823, 2541, 2338, 1792, 3471, 2677, 2636, 2366, 2262, 2676,
	2498, 2850, 4233, 888, 2827, 4454, 4426, 1621, 1870, 1620,
	4230, 1619, 1747, 1618, 2282, 4372, 1147, 3716, 1147, 3327,
	3328, 3329, 3330, 3332, 3333, 1147, 2323, 4191, 2050, 2050,
	1407, 2312, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1638, 1147,
	1638, 1147, 1147, 1147, 1147, 2284, 2283, 2452, 3491, 2325,
	2354, 2932, 3247, 2348, 1827, 1631, 3342, 2320, 1382, 2320,
	2317, 3554, 1388, 2321, 1382, 2246, 2470, 1147, 2932, 2457,
	1683, 1147, 1147, 2333, 1362, 1633, 2329, 1378, 2330, 1147,
	2936, 3245, 2630, 1147, 1746, 1147, 1147, 829, 2467, 762,
	3524, 4214, 4901, 1407, 1033, 832, 2442, 762, 2450, 1147,
	1147, 1147, 1147, 1579, 2358, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 2353, 2608, 2609, 2391, 2494, 2495, 1088,
	1729, 1088, 2836, 1305, 2884, 4207, 2370, 1387, 2608, 2624,
	3333, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	2381, 2956, 4249, 1784, 1147, 1699, 2949, 2950, 1592, 2949,
	2950, 2149, 2150, 2468, 2556, 2672, 1269, 2433, 4489, 2432,
	1383, 1678, 2465, 1407, 2216, 2044, 1527, 2627, 2949, 2950,
	2361, 3144, 1269, 2414, 2718, 2718, 2732, 1378, 2608, 2813,
	4208, 2753, 2755, 1378, 2481, 2371, 4229, 2759, 1147, 1407,
	2734, 4905, 3191, 1597, 2177, 1759, 3337, 3338, 3339, 797,
	2445, 4231, 3180, 3336, 3334, 3335, 3327, 3328, 3329, 3330,
	3332, 3333, 2431, 2466, 1086, 1785, 2456, 2469, 1379, 2454,
	2455, 2462, 3555, 4227, 3242, 2556, 1728, 1380, 2173, 2922,
	2572, 2809, 1729, 1823, 1824, 1826, 1827, 2412, 1068, 3209,
	2623, 1068, 1068, 2485, 4865, 1707, 2486, 2487, 2372, 2424,
	1797, 3243, 2784, 1707, 4613, 3248, 4371, 2178, 2179, 2992,
	1383, 4933, 2564, 2674, 3933, 4793, 1383, 2908, 2675, 2562,
	1360, 2678, 2776, 2679, 2680, 890, 889, 2921, 2322, 1679,
	3725, 3724, 2375, 2636, 2369, 2161, 1763, 2174, 1992, 4906,
	2162, 2991, 1348, 1348, 3468, 2464, 3224, 1726, 3182, 1140,
	885, 4274, 884, 2568, 3194, 1085, 2989, 2180, 3962, 3959,
	2378, 795, 2444, 3905, 1742, 3782, 2826, 761, 1379, 2260,
	2987, 2798, 3945, 2898, 1379, 761, 1235, 1380, 2621, 3892,
	3719, 3600, 3993, 1380, 2872, 1407, 4936, 4879, 1728, 1267,
	2830, 2003, 1337, 3592, 2898, 1745, 2775, 3921, 3552, 182,
	2994, 2935, 2959, 2858, 2894, 1267, 2937, 2866, 2451, 2862,
	1727, 2714, 2467, 2838, 1695, 2849, 1088, 2441, 2727, 2050,
	4887, 2757, 4886, 2873, 1604, 1376, 1088, 4615, 2744, 2783,
	1088, 2788, 2911, 3931, 2794, 2795, 4203, 2781, 2782, 3994,
	2777, 4204, 1500, 2765, 2766, 1511, 1337, 1990, 1945, 2869,
	4908, 4209, 1381, 1037, 2163, 2821, 4490, 1037, 1037, 1038,
	2419, 2161, 1407, 4232, 2188, 1037, 2162, 1087, 4488, 2417,
	4854, 2167, 2379, 4690, 4486, 932, 1602, 763, 1348, 4225,
	3223, 4105, 3992, 1277, 1684, 763, 2465, 2192, 4104, 3193,
	3655, 3244, 4794, 4206, 4228, 3601, 2900, 3188, 1279, 1147,
	1147, 3246, 1147, 1581, 2874, 2845, 2868, 2857, 1019, 3779,
	4210, 2860, 2972, 2861, 3541, 1337, 1337, 1937, 1938, 1088,
	3190, 4485, 73, 2636, 2865, 1274, 823, 2848, 1348, 2875,
	3656, 1264, 1081, 2897, 2852, 4700, 2867, 1578, 2942, 74,
	3598, 3946, 3061, 4417, 2189, 2164, 2169, 1264, 2871, 4487,
	1263, 4621, 1381, 2975, 4214, 79, 837, 1304, 1381, 1566,
	2941, 2957, 2896, 4964, 2205, 2090, 1263, 2964, 3103, 1280,
	1265, 3542, 2925, 2880, 1566, 2878, 1566, 2963, 3076, 796,
	2163, 2985, 844, 3132, 1760, 2940, 1265, 2241, 4207, 2268,
	2267, 3780, 4200, 1566, 2882, 88, 4792, 2167, 2958, 3216,
	3217, 711, 4641, 2951, 2953, 2954, 2955, 3135, 3039, 4198,
	2966, 2903, 3655, 3041, 3540, 3000, 2229, 1348, 4202, 1348,
	3028, 3029, 2913, 2916, 1020, 3192, 3479, 706, 798, 2165,
	2180, 2883, 794, 2443, 2229, 2910, 900, 1278, 4226, 2211,
	4205, 1147, 2232, 4208, 2240, 1034, 4907, 2239, 49, 1084,
	110, 3470, 2881, 2193, 2965, 94, 107, 4761, 3166, 4762,
	3167, 3238, 4688, 2970, 1604, 2980, 2538, 4914, 3134, 3567,
	3138, 2164, 2169, 2552, 3516, 1757, 3533, 1708, 2171, 4215,
	4216, 760, 3506, 2206, 3027, 4201, 829, 2225, 1525, 3031,
	1932, 3072, 1289, 3037, 832, 182, 4614, 2217, 3117, 3438,
	3142, 2200, 2550, 2183, 1147, 4689, 3147, 1531, 3148, 3042,
	1147, 1147, 1680, 2812, 2224, 95, 273, 4828, 829, 2194,
	2195, 2895, 3107, 2413, 3055, 1761, 832, 4829, 1758, 3168,
	3162, 3514, 2555, 3534, 3068, 3065, 2914, 4301, 4853, 3505,
	3105, 2044, 2044, 2377, 2190, 2215, 3032, 3066, 2220, 2636,
	4368, 2229, 3087, 3932, 2171, 2165, 4101, 3098, 2201, 4384,
	2184, 2233, 3108, 1796, 2563, 4876, 1147, 1147, 3119, 3599,
	1025, 1024, 1147, 4744, 3515, 1638, 3532, 2178, 2179, 4732,
	4259, 729, 2909, 1359, 3139, 1147, 1147, 2618, 2191, 3030,
	1882, 1147, 1147, 3196, 3106, 3198, 2374, 1147, 2368, 3161,
	3288, 2199, 924, 2182, 2171, 838, 839, 2221, 2780, 4937,
	2793, 3159, 1087, 2971, 3171, 1973, 3173, 1021, 3175, 1762,
	3169, 3795, 3037, 4924, 4311, 3510, 4095, 3170, 925, 3172,
	4922, 3174, 4279, 3176, 3177, 3480, 2536, 3893, 1294, 2539,
	3018, 4106, 1147, 1147, 1147, 2546, 3738, 3207, 1147, 4203,
	3239, 4648, 4022, 3204, 4204, 1275, 3186, 3474, 1147, 933,
	4737, 2166, 4667, 99, 4209, 3215, 3199, 2547, 4527, 3201,
	3271, 1977, 2548, 3010, 3008, 1147, 2553, 1694, 1696, 3512,
	3012, 3014, 3004, 3145, 3146, 3206, 3266, 3267, 3205, 4367,
	2535, 3270, 4316, 4102, 3152, 3153, 3154, 4278, 1977, 3225,
	2481, 3210, 1807, 2202, 4451, 910, 4206, 1713, 1276, 2196,
	4277, 1109, 4317, 2215, 1973, 4045, 1511, 3643, 190, 102,
	1980, 4912, 106, 4210, 3262, 2820, 4965, 2290, 2091, 1970,
	2217, 915, 4007, 1292, 1285, 2778, 4007, 698, 2484, 1022,
	2181, 4005, 4852, 3511, 2133, 4005, 3834, 1980, 239, 4150,
	841, 840, 4942, 1978, 4536, 1806, 901, 4597, 4302, 3426,
	2212, 153, 1975, 3237, 1511, 2214, 1023, 1147, 1147, 1147,
	1147, 1806, 4046, 4827, 3978, 707, 1572, 1147, 1147, 1147,
	1978, 2236, 1147, 3965, 1801, 2197, 1682, 2166, 1019, 3917,
	3778, 3486, 1147, 1269, 1407, 2130, 241, 1977, 1147, 3644,
	1147, 3635, 1096, 2209, 3381, 3382, 3482, 3077, 3071, 1269,
	3059, 2316, 1081, 2310, 842, 843, 2304, 2296, 2276, 1026,
	4009, 2275, 157, 1976, 4009, 3364, 4649, 1407, 2474, 4369,
	4913, 1296, 769, 2915, 3909, 2216, 3849, 194, 2234, 1269,
	4705, 3383, 1407, 3277, 3739, 240, 1980, 2898, 4670, 2425,
	4332, 926, 927, 4205, 1348, 4008, 708, 3389, 233, 4008,
	1805, 1975, 2549, 3006, 2050, 3406, 4915, 234, 1407, 1806,
	2126, 2128, 2551, 4048, 3020, 3056, 1805, 2047, 1348, 1978,
	1307, 2235, 2943, 3419, 1348, 2537, 4505, 4503, 1088, 4428,
	3497, 3493, 4215, 4216, 1643, 3433, 3019, 3011, 3009, 3013,
	3015, 3005, 3007, 3021, 1020, 709, 1147, 710, 3492, 1882,
	39, 3230, 2044, 3017, 3208, 2129, 1979, 4107, 2213, 3448,
	1147, 3393, 1976, 2170, 3420, 3391, 2359, 4314, 3862, 1807,
	1348, 3386, 3385, 1736, 1735, 2050, 2351, 3415, 3475, 3476,
	3835, 2341, 2273, 1979, 1730, 1807, 3024, 4003, 3889, 3836,
	4013, 2819, 4151, 1147, 911, 912, 2818, 2170, 2817, 3495,
	2816, 3392, 3499, 4941, 2815, 1627, 3404, 3455, 2475, 1348,
	3457, 3458, 3407, 3408, 1805, 3461, 1267, 3462, 1376, 3463,
	3412, 1613, 3063, 3439, 3466, 3375, 3428, 3429, 3430, 3431,
	1085, 1348, 1267, 1348, 3424, 1614, 1625, 3488, 3472, 3390,
	3359, 3360, 3361, 4108, 4608, 4440, 3496, 3405, 2228, 3501,
	3885, 931, 3503, 4500, 3459, 1407, 4293, 2228, 3924, 1559,
	3445, 3446, 1267, 3447, 2771, 4650, 1348, 4006, 2919, 3685,
	1348, 4006, 2314, 3910, 3570, 3608, 3572, 3483, 4873, 3576,
	2301, 4349, 1979, 3582, 4645, 3410, 3914, 3411, 928, 929,
	1025, 1024, 4415, 1714, 3487, 1566, 3388, 2944, 2945, 2774,
	3035, 3451, 3436, 3557, 3886, 3143, 3040, 3038, 1348, 1566,
	2345, 1566, 1646, 2245, 3456, 1407, 1688, 4436, 4423, 3568,
	4711, 4609, 823, 1566, 3460, 3550, 4435, 3527, 1661, 3467,
	3453, 3887, 3427, 3884, 1566, 4718, 4702, 1021, 3851, 4157,
	2773, 2643, 4877, 3618, 3565, 2772, 1348, 1780, 4739, 3602,
	3473, 4441, 3397, 3478, 4348, 4878, 4875, 4813, 1264, 4637,
	4629, 768, 1782, 1269, 3545, 4424, 3025, 4390, 3531, 1779,
	3651, 4149, 4012, 3513, 1264, 3016, 3481, 1263, 1777, 3356,
	1754, 3132, 3754, 3713, 3712, 3634, 1689, 3523, 1566, 1566,
	3132, 913, 914, 1263, 3529, 3536, 2437, 1265, 1752, 3449,
	2017, 1724, 3537, 1722, 1264, 3603, 3538, 3606, 3539, 4712,
	4610, 3319, 1566, 1265, 1566, 3530, 3543, 3649, 3249, 3060,
	2983, 2933, 3558, 1263, 3642, 2847, 2446, 2010, 2006, 3553,
	1783, 1105, 3566, 1664, 4492, 3660, 3357, 3544, 3590, 3546,
	3706, 3579, 2966, 1265, 3585, 1720, 2430, 1626, 3398, 3915,
	1718, 3577, 3734, 3704, 2416, 3583, 2383, 3733, 2254, 1022,
	1801, 1407, 3697, 1716, 1407, 3184, 3183, 1710, 1704, 1702,
	3591, 3150, 3578, 3595, 2463, 1741, 3584, 2386, 1624, 1623,
	3727, 2295, 2274, 2079, 2941, 3652, 1023, 3589, 3610, 1915,
	1677, 1596, 4786, 930, 3645, 2642, 4260, 1147, 3396, 3403,
	3969, 3968, 4261, 1147, 1147, 3631, 3632, 1147, 1147, 1147,
	3630, 1147, 1035, 4244, 829, 3710, 4701, 182, 182, 4330,
	1147, 2050, 832, 4266, 4257, 4196, 4044, 4035, 3657, 1147,
	3569, 3708, 3402, 3683, 1147, 3888, 3981, 3666, 3966, 1026,
	1407, 1109, 1109, 1109, 3669, 3670, 1267, 3939, 1781, 1147,
	3687, 3650, 3636, 3659, 3937, 1778, 3916, 1407, 3681, 1491,
	3638, 3699, 3633, 1491, 1776, 3731, 1753, 2050, 2050, 1147,
	1147, 3623, 1147, 1147, 1147, 3090, 3698, 2439, 3082, 3075,
	3067, 3053, 2438, 3052, 1751, 3732, 3033, 1723, 2864, 1721,
	1147, 2859, 2272, 2270, 1147, 2247, 2050, 2050, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 3757, 1147,
	3767, 3768, 3711, 3807, 3740, 3808, 3728, 1147, 1147, 2050,
	2230, 1719, 3707, 3627, 1147, 2415, 1717, 2382, 3737, 2253,
	3399, 3400, 3401, 2047, 2047, 1147, 3721, 2198, 3722, 1715,
	3723, 4553, 3729, 1709, 1703, 1701, 1269, 1269, 2185, 2172,
	1147, 3735, 2112, 1088, 2109, 1622, 2106, 2103, 3695, 2098,
	2096, 2092, 2083, 1040, 1042, 1044, 4850, 3846, 4325, 3775,
	3648, 2038, 3671, 4841, 3580, 1244, 2494, 3798, 1264, 2239,
	3762, 3764, 1407, 1810, 4316, 2022, 4866, 2134, 2122, 2123,
	3774, 3785, 3881, 1337, 4545, 1348, 1348, 1263, 3781, 3783,
	3784, 1245, 3228, 3790, 4317, 2494, 3813, 4546, 3868, 4607,
	1348, 1348, 3717, 1348, 3804, 2449, 3797, 1265, 3202, 3200,
	3026, 4749, 3805, 4354, 4347, 4346, 3806, 4273, 4188, 3133,
	2153, 1577, 1147, 4538, 2895, 3810, 3890, 3891, 3842, 2920,
	3838, 4547, 1337, 4531, 2895, 3812, 1774, 1775, 4056, 2893,
	1147, 3903, 3904, 2373, 3906, 2180, 3847, 2313, 3853, 2917,
	1327, 2447, 3858, 3859, 1328, 182, 2410, 2405, 3839, 2380,
	4748, 4236, 4268, 1337, 1337, 1817, 1818, 1700, 3705, 3700,
	3701, 3702, 3703, 1147, 1147, 1817, 1818, 2044, 4573, 2923,
	3855, 3856, 4438, 3581, 1811, 4158, 3907, 4136, 3229, 3508,
	3908, 2924, 2946, 1814, 1355, 4549, 1295, 2448, 4869, 4860,
	3977, 2121, 1246, 264, 4822, 1820, 3051, 2977, 4032, 3871,
	3870, 2924, 2297, 1366, 2990, 1147, 3950, 2988, 4548, 1267,
	1267, 2997, 3976, 2926, 2979, 2928, 4710, 4695, 4661, 3938,
	1819, 3940, 1328, 4655, 4909, 1328, 4550, 2978, 2927, 1566,
	1819, 3899, 4606, 4522, 1348, 4498, 4416, 4042, 2044, 4034,
	695, 4021, 3878, 3637, 2161, 3097, 1500, 2758, 3973, 2162,
	2118, 2031, 4437, 2969, 3955, 3957, 4741, 3954, 1523, 2050,
	1522, 4742, 3437, 4940, 3325, 3326, 1817, 1818, 4741, 2887,
	2888, 4657, 1533, 4742, 3920, 2885, 2886, 1687, 1511, 1353,
	4128, 4881, 3979, 1686, 2638, 3895, 2887, 2885, 3971, 2673,
	1566, 3942, 3980, 4041, 1756, 4523, 1147, 1755, 4474, 4270,
	3947, 4265, 4264, 4124, 1269, 1147, 3894, 3786, 3995, 3997,
	4058, 3574, 3571, 1909, 1908, 1566, 1566, 1566, 3103, 4926,
	4065, 4888, 4699, 2941, 4698, 4697, 4636, 4635, 4590, 4501,
	4468, 4413, 1566, 1566, 1566, 4028, 4410, 4408, 4304, 4290,
	4234, 4183, 4011, 4080, 4062, 3132, 4049, 4016, 3935, 3927,
	3999, 1264, 1264, 1566, 3641, 3640, 3502, 3454, 4050, 1407,
	1539, 4053, 1546, 2163, 1552, 4001, 3189, 3181, 4010, 3158,
	1263, 1263, 4029, 3988, 3157, 3156, 4052, 4000, 3487, 3155,
	2167, 3081, 3054, 2918, 2047, 1407, 2855, 2851, 1147, 1147,
	1265, 1265, 4081, 3991, 1147, 1147, 2050, 2840, 1491, 1147,
	1147, 2839, 1147, 2828, 2567, 2440, 4033, 1147, 2411, 2404,
	2403, 2402, 4015, 2401, 2400, 2311, 2285, 4036, 1147, 3989,
	2281, 2280, 2279, 2278, 2277, 2331, 4060, 1511, 2086, 4059,
	4054, 2085, 2084, 1651, 1147, 1656, 4064, 4038, 1337, 4072,
	3990, 2082, 4051, 2347, 2349, 4122, 2021, 1773, 1669, 4093,
	1674, 4091, 4070, 4071, 2164, 2169, 2352, 1772, 4109, 1711,
	4079, 4075, 4078, 1591, 1590, 1589, 1588, 1587, 2360, 2787,
	2363, 2364, 2365, 4092, 4110, 1586, 4076, 4551, 1585, 1580,
	1576, 1574, 1573, 4552, 1516, 1515, 1514, 1267, 4103, 1398,
	1511, 1397, 1511, 4118, 1396, 1269, 1395, 1394, 1358, 1155,
	1314, 1313, 1312, 1269, 1311, 1310, 1309, 1407, 1407, 1308,
	1407, 1306, 1109, 1301, 1300, 1732, 1299, 1269, 1298, 1297,
	1491, 1227, 4163, 899, 8, 2124, 1046, 1032, 1566, 1566,
	4612, 4213, 4212, 4211, 2436, 93, 1582, 861, 2165, 1407,
	87, 2237, 3934, 4816, 998, 271, 271, 271, 4738, 701,
	702, 4640, 717, 701, 717, 727, 1557, 869, 767, 4720,
	4030, 3419, 787, 3504, 1269, 3002, 1269, 793, 4189, 4190,
	2385, 4098, 1712, 2387, 271, 3414, 4148, 2038, 2038, 2800,
	4687, 4132, 3287, 2159, 2044, 4580, 4383, 2171, 4224, 1348,
	2641, 1913, 3368, 4237, 4223, 906, 4166, 4168, 89, 1407,
	1131, 1348, 271, 1177, 1348, 4239, 4240, 4300, 4220, 4299,
	4220, 4159, 4197, 3919, 4162, 1407, 3122, 4155, 4069, 4164,
	4171, 4297, 4165, 4296, 2035, 4172, 182, 4160, 4161, 1264,
	2044, 2044, 2037, 1095, 1410, 4760, 4175, 4269, 2135, 4271,
	2157, 4238, 4181, 1137, 2151, 2144, 4193, 2841, 1263, 2717,
	1154, 1151, 2039, 1566, 1566, 4187, 2041, 1153, 1152, 2044,
	2044, 4195, 2040, 1491, 1933, 1150, 2034, 4040, 1265, 4179,
	3101, 3667, 1632, 1348, 1630, 4294, 1000, 2139, 1267, 2561,
	2625, 3276, 1906, 2158, 1111, 1407, 1267, 1133, 2622, 1290,
	1566, 1122, 2044, 1110, 3394, 3373, 4272, 4258, 4291, 3654,
	1267, 3877, 2473, 879, 4263, 3322, 2628, 1281, 2741, 2733,
	2729, 3464, 3091, 4288, 1787, 1269, 4397, 1884, 3102, 1392,
	1115, 4322, 2559, 1897, 3254, 2483, 4319, 1566, 1566, 1566,
	1566, 1566, 3661, 701, 701, 3417, 4282, 4256, 2834, 4353,
	4745, 271, 1407, 4350, 3794, 4287, 4333, 1267, 3187, 1267,
	4289, 2289, 4281, 4280, 1147, 1147, 1147, 1243, 4334, 4220,
	4253, 1242, 1288, 1241, 4726, 4723, 2227, 4295, 4073, 3616,
	2166, 2127, 1407, 4242, 4328, 4337, 4310, 1147, 2879, 1999,
	1147, 1147, 2571, 4342, 3624, 1127, 4251, 1510, 2429, 4254,
	1147, 4335, 3379, 2050, 3686, 4243, 1593, 792, 1147, 1147,
	4445, 1139, 1869, 3023, 3022, 4601, 1377, 4252, 1375, 1374,
	4255, 1373, 4897, 4963, 3930, 1407, 3929, 1566, 3928, 238,
	1264, 3222, 1808, 1800, 4359, 4375, 4357, 235, 1264, 237,
	236, 4356, 4305, 3882, 4321, 4363, 3423, 4820, 3952, 1263,
	3607, 1407, 1264, 4370, 23, 22, 21, 1263, 116, 1147,
	4380, 42, 20, 155, 133, 4364, 152, 151, 125, 1265,
	150, 1263, 1147, 149, 148, 147, 154, 1265, 146, 145,
	140, 1147, 144, 143, 142, 141, 2050, 139, 137, 4318,
	138, 1265, 132, 136, 135, 1147, 134, 131, 1147, 1264,
	4392, 1264, 130, 129, 128, 127, 4403, 4404, 1267, 126,
	4419, 124, 1147, 156, 4386, 123, 122, 121, 1263, 1407,
	1263, 1511, 1511, 4406, 4448, 4407, 1348, 120, 119, 118,
	117, 780, 781, 61, 60, 115, 1566, 1566, 1265, 113,
	1265, 114, 1895, 19, 40, 14, 1900, 4427, 65, 4420,
	66, 4418, 18, 13, 35, 92, 1491, 105, 2038, 104,
	103, 36, 2044, 101, 100, 34, 17, 4459, 4460, 4491,
	16, 15, 4479, 98, 97, 3618, 4467, 96, 33, 31,
	11, 1407, 9, 37, 1566, 1994, 4513, 12, 4469, 4465,
	4504, 5, 187, 186, 1511, 189, 185, 4475, 4470, 4477,
	188, 4478, 1269, 1269, 91, 4457, 184, 183, 90, 29,
	10, 4537, 179, 4514, 4521, 4026, 82, 4476, 181, 2301,
	180, 4494, 178, 177, 1147, 1147, 4502, 4493, 176, 83,
	4556, 4557, 4517, 4496, 4497, 80, 175, 86, 174, 2047,
	4532, 1147, 2050, 81, 85, 84, 4220, 4220, 4512, 1491,
	1264, 27, 4533, 4535, 6, 64, 7, 4365, 3714, 108,
	109, 38, 1348, 78, 77, 1348, 76, 4569, 4570, 1263,
	4529, 4534, 75, 26, 4540, 4337, 4539, 4554, 63, 25,
	1147, 173, 1147, 220, 1147, 4483, 219, 218, 217, 1265,
	216, 215, 214, 213, 1269, 208, 207, 212, 210, 2044,
	4471, 209, 211, 4589, 206, 230, 4591, 1147, 229, 1269,
	2047, 4481, 4596, 223, 222, 228, 227, 226, 4572, 1491,
	225, 224, 221, 232, 205, 204, 203, 201, 197, 196,
	200, 202, 4482, 199, 198, 195, 231, 4624, 4220, 4578,
	1337, 72, 171, 4568, 172, 1491, 4595, 71, 170, 169,
	168, 2170, 3151, 4220, 167, 166, 4592, 4623, 165, 164,
	70, 1147, 1147, 24, 2, 1, 0, 4616, 0, 4644,
	4617, 1147, 0, 0, 0, 0, 1269, 0, 0, 1269,
	0, 0, 0, 1566, 0, 1267, 1267, 0, 0, 0,
	4631, 0, 0, 1566, 1566, 0, 0, 0, 0, 0,
	0, 0, 4633, 0, 4664, 0, 0, 4666, 0, 4632,
	1566, 0, 4638, 1283, 0, 3251, 3252, 0, 0, 0,
	4220, 0, 0, 4220, 1147, 1147, 4678, 4651, 4663, 4656,
	2478, 0, 0, 4659, 1147, 4517, 4683, 0, 4684, 4652,
	4653, 4658, 0, 0, 0, 0, 1303, 4672, 0, 0,
	4674, 4671, 1511, 4676, 4677, 0, 4675, 0, 271, 0,
	271, 271, 0, 1332, 271, 1342, 2407, 4691, 0, 0,
	4681, 0, 4682, 0, 0, 0, 1356, 1267, 1147, 1147,
	0, 1147, 1405, 4692, 787, 1348, 1505, 787, 1348, 0,
	4696, 1491, 1267, 4713, 0, 0, 4541, 0, 0, 0,
	0, 4717, 0, 4725, 4728, 0, 4560, 4708, 4709, 0,
	0, 271, 4747, 271, 271, 1332, 4740, 271, 271, 4743,
	4716, 4729, 1342, 4715, 4733, 0, 4735, 1264, 1264, 4736,
	0, 0, 4765, 4734, 0, 0, 271, 0, 1535, 1147,
	1147, 1147, 0, 0, 0, 4768, 1263, 1263, 0, 0,
	4769, 0, 0, 0, 1555, 4750, 0, 4730, 0, 1267,
	0, 1570, 1267, 0, 4756, 0, 1265, 1265, 1491, 4764,
	0, 0, 1147, 0, 0, 0, 2735, 4800, 4763, 0,
	1595, 0, 0, 1342, 0, 0, 4801, 271, 271, 0,
	1332, 4785, 4784, 4805, 4782, 4783, 0, 3349, 3350, 3351,
	3352, 0, 0, 4823, 0, 0, 0, 0, 0, 0,
	0, 787, 4803, 271, 271, 0, 0, 0, 0, 1264,
	0, 0, 0, 4846, 4834, 1658, 4832, 0, 4819, 1147,
	0, 0, 4830, 0, 1264, 1665, 4845, 0, 1263, 0,
	906, 4831, 0, 4851, 0, 0, 0, 0, 4840, 0,
	4844, 4839, 0, 1263, 0, 0, 2047, 0, 1265, 0,
	0, 4867, 0, 0, 4815, 0, 4818, 0, 4838, 4857,
	4858, 4863, 0, 1265, 4861, 4859, 0, 0, 0, 0,
	0, 4872, 2170, 0, 1269, 4725, 1269, 4871, 4728, 4870,
	0, 4890, 4747, 4874, 0, 0, 2044, 4880, 0, 4891,
	4644, 1264, 2047, 2047, 1264, 4904, 4885, 4889, 4902, 0,
	4898, 0, 4892, 4899, 4894, 0, 4893, 0, 271, 0,
	1263, 0, 0, 1263, 0, 0, 4917, 4903, 4220, 1348,
	4220, 2047, 2047, 0, 0, 4916, 0, 0, 4919, 0,
	1265, 0, 271, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4934, 4925, 4930, 0, 0,
	1147, 1147, 4932, 3706, 2047, 4927, 0, 4935, 0, 1147,
	4923, 1147, 1147, 4928, 4938, 1079, 3704, 1019, 0, 2044,
	4944, 4948, 0, 4954, 0, 3697, 0, 4951, 4959, 0,
	0, 4957, 4952, 4958, 4956, 0, 0, 0, 4955, 3103,
	4953, 1081, 0, 2038, 0, 4967, 4962, 4966, 0, 0,
	0, 4971, 4975, 4969, 4945, 4946, 4972, 0, 4973, 0,
	4968, 0, 0, 0, 0, 0, 4978, 0, 1337, 0,
	0, 0, 1147, 4983, 4980, 4985, 0, 4970, 0, 4975,
	0, 4989, 4986, 4982, 4988, 0, 0, 1080, 0, 0,
	4979, 0, 0, 4947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 1267,
	0, 0, 0, 0, 2038, 4984, 0, 0, 0, 0,
	0, 0, 0, 0, 3699, 0, 0, 0, 0, 0,
	0, 2301, 0, 1020, 2565, 0, 0, 0, 0, 3698,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 0,
	1895, 0, 0, 0, 0, 0, 0, 4842, 4843, 0,
	0, 0, 0, 4848, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 2044, 1820, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 2009, 0, 0, 0, 3707, 0, 0, 0, 0,
	0, 0, 1873, 0, 271, 2740, 271, 0, 0, 0,
	271, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1535, 1332, 2014, 271, 0, 271, 2020,
	0, 0, 0, 0, 0, 271, 0, 717, 3045, 0,
	0, 3048, 271, 3050, 0, 0, 0, 0, 0, 1264,
	0, 1264, 0, 0, 3586, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 1263, 271,
	1263, 0, 0, 0, 0, 0, 271, 0, 0, 1025,
	1024, 0, 3611, 0, 0, 0, 0, 0, 1265, 3094,
	1265, 0, 3094, 3628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1818, 787,
	0, 0, 0, 2155, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	1848, 0, 0, 0, 1817, 1818, 3212, 1820, 3750, 3751,
	1491, 0, 0, 0, 0, 0, 0, 3677, 3678, 0,
	0, 3705, 3700, 3701, 3702, 3703, 0, 1848, 0, 0,
	0, 0, 0, 1873, 1820, 1847, 1849, 0, 0, 0,
	0, 3709, 1819, 1491, 0, 0, 3178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 2735, 2735, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 3814, 3815,
	3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825,
	3826, 3827, 3828, 3829, 3830, 3831, 3832, 3833, 1022, 3837,
	0, 0, 1109, 0, 0, 0, 2265, 0, 0, 0,
	2038, 0, 2301, 0, 0, 0, 1109, 0, 0, 0,
	0, 0, 0, 1078, 271, 1023, 0, 1825, 271, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 1825, 0, 2038, 2038, 0, 0,
	0, 3325, 3326, 0, 3343, 3344, 3345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 1849, 1026, 0,
	0, 0, 0, 3759, 0, 2038, 2038, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 271, 1847, 1849, 0, 0, 0, 271, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 271, 0, 271, 1841, 0, 0,
	701, 0, 271, 0, 0, 1840, 3340, 0, 0, 0,
	0, 0, 0, 0, 787, 0, 0, 0, 906, 2735,
	2735, 2735, 2735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 271, 0, 1332,
	271, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 787, 0, 0, 0, 0, 1817,
	1818, 271, 1850, 1851, 1852, 1861, 1862, 1863, 0, 2384,
	1870, 0, 0, 0, 271, 271, 0, 271, 0, 271,
	0, 271, 1848, 271, 0, 0, 0, 0, 0, 1820,
	0, 3331, 0, 0, 0, 0, 0, 1870, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2421, 0,
	0, 2422, 0, 2423, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 271, 271, 271, 271, 0,
	0, 0, 0, 0, 1839, 2740, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 1836, 0, 0, 0, 0, 1841, 2497,
	0, 0, 767, 0, 0, 0, 787, 3347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 1491, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3341,
	0, 0, 0, 0, 0, 0, 1872, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 2740, 2740, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 3986, 1825,
	0, 0, 0, 1872, 0, 0, 0, 0, 2038, 0,
	0, 0, 2639, 0, 0, 0, 0, 0, 0, 2573,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 1868, 0, 1491, 1870, 0, 0, 0, 1847, 1849,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 1864, 0, 1865, 1821, 1822,
	1823, 1824, 1826, 1827, 1834, 1835, 0, 3517, 3518, 0,
	3519, 3520, 3521, 0, 4066, 4067, 4068, 0, 0, 0,
	701, 0, 1856, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 2347, 4082, 4083, 0, 271, 0, 1840, 2810, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	0, 271, 3342, 701, 0, 0, 0, 0, 3559, 3560,
	0, 3561, 3562, 3563, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 271, 1342, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2740, 2740,
	2740, 2740, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 1342, 0, 0, 0, 717,
	0, 0, 0, 2854, 0, 0, 0, 2047, 0, 271,
	0, 0, 271, 0, 0, 0, 271, 0, 271, 0,
	0, 0, 0, 1332, 0, 271, 271, 1846, 1342, 1342,
	2870, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 2890, 0, 0, 0, 0, 0,
	1841, 0, 3337, 3338, 3339, 0, 0, 0, 0, 3336,
	3334, 3335, 3327, 3328, 3329, 3330, 3332, 3333, 0, 0,
	2735, 2735, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 2907, 0, 0, 0, 0, 0, 4177, 4178, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 3325, 3326, 0, 3343, 3344, 3345, 0,
	2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735,
	2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735,
	1857, 2735, 0, 271, 3043, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0,
	1535, 0, 2347, 271, 0, 271, 0, 0, 0, 0,
	4389, 0, 271, 0, 0, 0, 0, 0, 3340, 0,
	0, 0, 3086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2907, 0, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 3115, 906, 0, 2907, 2907, 0, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 4430,
	0, 0, 0, 0, 0, 0, 4358, 0, 4360, 4361,
	4362, 1491, 0, 0, 0, 0, 0, 271, 1332, 271,
	0, 0, 0, 0, 0, 0, 1102, 0, 0, 1342,
	271, 0, 0, 1332, 0, 1332, 0, 1332, 0, 0,
	0, 1817, 1818, 3331, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 271, 271, 271, 1332, 0, 0, 1332, 0,
	271, 0, 0, 271, 0, 0, 4409, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 3347,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 271, 1491, 1491, 2038, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2740,
	2740, 4577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 4495, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	800, 0, 4600, 0, 0, 1491, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 811, 0, 4622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1535, 0,
	1847, 1849, 0, 0, 0, 0, 0, 0, 0, 2740,
	2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740,
	2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 2740, 0,
	2740, 2038, 0, 0, 0, 0, 0, 0, 4037, 0,
	0, 0, 0, 0, 3342, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 805, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	1854, 1848, 0, 0, 0, 0, 0, 0, 1820, 810,
	0, 0, 0, 0, 0, 0, 0, 1867, 1491, 0,
	0, 0, 0, 3380, 4094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1870, 0, 0, 0, 1491, 0,
	0, 0, 271, 1839, 0, 0, 3409, 0, 809, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 271, 0,
	0, 3422, 0, 701, 0, 762, 0, 0, 701, 0,
	0, 701, 0, 0, 701, 701, 0, 0, 0, 0,
	701, 1491, 0, 0, 3337, 3338, 3339, 3443, 271, 1846,
	807, 3336, 3334, 3335, 3327, 3328, 3329, 3330, 3332, 3333,
	271, 0, 2347, 2347, 0, 0, 0, 1491, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 2347,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 0, 0, 1825, 271,
	0, 0, 0, 271, 271, 0, 0, 0, 0, 816,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 2907, 2907, 271, 1491, 2014, 1858, 0, 0,
	1868, 0, 2907, 0, 0, 2020, 0, 1847, 1849, 0,
	0, 0, 0, 2907, 2020, 0, 2907, 2020, 0, 0,
	2020, 0, 0, 0, 1864, 0, 1865, 0, 0, 0,
	0, 0, 0, 1834, 1835, 271, 271, 2014, 0, 271,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 1491, 0, 2014,
	0, 271, 0, 3549, 3549, 0, 1840, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 806, 0, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 2907, 0,
	2907, 0, 3575, 2907, 2014, 0, 0, 2907, 2014, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 761, 3422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 812, 0,
	1855, 0, 0, 271, 804, 0, 0, 0, 0, 0,
	0, 1870, 4303, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 3612, 0, 4320, 3614, 2907, 0, 0,
	271, 0, 2735, 0, 271, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4341, 0,
	0, 801, 271, 0, 0, 0, 0, 3086, 0, 0,
	1332, 0, 271, 0, 0, 2907, 1846, 701, 0, 0,
	0, 0, 0, 0, 2907, 0, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 2735, 0, 763, 0, 271, 3086, 0, 0, 3086,
	0, 0, 0, 0, 803, 0, 0, 1109, 1109, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 814, 815, 0,
	1505, 0, 0, 1405, 0, 3720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 3726, 0, 0, 1535, 0,
	0, 1332, 271, 0, 271, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3325, 3326, 0, 3343, 3344, 3345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 3758, 0, 0, 3771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 1109, 3787, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 4141,
	0, 0, 0, 4140, 0, 0, 0, 0, 3792, 3340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	46, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2735, 74, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 2735,
	0, 0, 67, 0, 0, 0, 0, 0, 0, 48,
	0, 160, 0, 0, 3331, 271, 271, 0, 0, 0,
	0, 3880, 0, 0, 0, 0, 0, 0, 0, 47,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 701, 0, 0, 0, 1817, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 68,
	0, 0, 0, 0, 0, 73, 0, 51, 1848, 0,
	0, 0, 57, 0, 0, 1820, 161, 0, 0, 0,
	3347, 2740, 74, 0, 49, 0, 110, 0, 0, 0,
	0, 94, 107, 0, 0, 0, 0, 0, 79, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 3341, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 52, 0, 0, 0, 0, 88, 0,
	2740, 0, 0, 0, 0, 0, 0, 0, 0, 4642,
	0, 95, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4662, 0, 0, 0, 0, 0, 900,
	0, 0, 0, 0, 4113, 0, 0, 3549, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 1870, 94, 107,
	271, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 2014, 0, 271, 0, 0, 0, 717, 717,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 271, 1847, 1849, 0, 0, 271, 0,
	0, 0, 0, 271, 0, 3342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 1835, 2907, 271, 0, 0, 0, 0, 0, 99,
	0, 0, 3115, 3115, 0, 0, 4751, 0, 906, 906,
	2907, 0, 4753, 0, 3086, 3086, 0, 53, 906, 2907,
	0, 0, 2740, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 69, 0, 0,
	0, 0, 0, 58, 190, 102, 0, 0, 106, 0,
	0, 0, 54, 2740, 0, 0, 162, 0, 1853, 0,
	0, 0, 0, 0, 55, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 2831, 0, 2740, 0,
	0, 0, 62, 0, 0, 0, 0, 153, 1870, 0,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 159, 0, 0, 3337, 3338, 3339, 0, 0,
	0, 4133, 3336, 3334, 3335, 3327, 3328, 3329, 3330, 3332,
	3333, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 157, 0,
	0, 190, 102, 0, 0, 106, 0, 0, 0, 4170,
	0, 0, 0, 194, 0, 0, 1841, 0, 0, 0,
	0, 240, 0, 0, 271, 0, 0, 0, 0, 0,
	1535, 239, 271, 0, 233, 0, 0, 0, 4185, 901,
	0, 0, 0, 234, 153, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 3, 1872, 1342, 0, 0, 0, 241,
	0, 0, 2907, 2907, 0, 3549, 2907, 0, 0, 0,
	0, 0, 0, 4222, 1853, 4222, 1535, 0, 0, 0,
	1853, 0, 0, 0, 0, 157, 1853, 2907, 0, 2020,
	0, 0, 0, 1535, 1535, 271, 2014, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 240, 2014,
	0, 271, 2014, 0, 271, 0, 3549, 0, 0, 0,
	73, 233, 3325, 3326, 0, 3343, 3344, 3345, 0, 0,
	234, 2907, 0, 2907, 271, 0, 0, 74, 73, 0,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 79, 0, 74, 0, 193, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 2907,
	0, 79, 0, 0, 4307, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 271, 1853, 0, 0, 0,
	0, 1853, 0, 88, 0, 271, 0, 3340, 1848, 0,
	0, 0, 0, 0, 1853, 1820, 0, 0, 0, 1853,
	0, 88, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 4222, 0, 0, 1535, 0, 0,
	0, 1873, 0, 0, 900, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 49, 0, 110, 0,
	1839, 4381, 900, 94, 107, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 94, 107, 0, 1853, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3331, 0, 4381, 0, 0, 0, 0, 0,
	0, 3325, 3326, 0, 3343, 3344, 3345, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	2497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 3348, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 0, 1825, 2907, 0, 2020, 0,
	0, 4422, 0, 0, 0, 0, 1094, 0, 3347, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4446, 0, 4446, 0, 0, 0, 3340, 0, 0, 0,
	1817, 1818, 0, 0, 1858, 0, 0, 1868, 2497, 0,
	0, 0, 0, 0, 1847, 1849, 787, 0, 0, 0,
	3341, 0, 0, 1848, 0, 0, 0, 3549, 0, 1332,
	1820, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 0,
	1834, 1835, 0, 0, 2014, 0, 271, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 1873, 0, 1856, 0,
	0, 0, 0, 0, 1853, 1819, 0, 0, 0, 0,
	0, 4422, 0, 1840, 0, 1839, 0, 0, 0, 2907,
	0, 99, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 3331, 0, 0, 0, 1870, 0, 4526, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1535,
	2739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4222, 4222, 1853, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 190, 102, 0, 3753,
	106, 271, 271, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 190, 102, 0, 0, 106, 0,
	1842, 1843, 1844, 1845, 0, 3792, 239, 0, 0, 0,
	1825, 0, 0, 3342, 901, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 239, 3549, 4594, 0, 0, 0,
	0, 0, 901, 4422, 0, 0, 0, 153, 0, 3341,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4222, 241, 0, 0, 0, 0, 1847,
	1849, 0, 0, 0, 0, 0, 1841, 0, 4222, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 1834, 1835, 0, 0, 0,
	271, 0, 0, 1859, 0, 194, 0, 0, 157, 0,
	0, 0, 717, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 1870, 0, 233, 0, 1840, 4307,
	0, 240, 0, 0, 1872, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 4222, 0, 271, 4222, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 2020, 0,
	0, 0, 1641, 3337, 3338, 3339, 0, 0, 0, 0,
	3336, 3334, 3335, 3327, 3328, 3329, 3330, 3332, 3333, 0,
	193, 0, 0, 0, 1535, 0, 1535, 2710, 2711, 2712,
	2713, 2706, 2707, 2708, 2709, 0, 0, 0, 0, 0,
	0, 0, 3342, 1870, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 4706, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 0, 0, 4446, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 2907, 0, 0, 2686,
	2687, 2688, 2689, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 2698, 2699, 2700, 2701, 2694, 2695, 2696, 2697,
	2702, 2703, 2704, 2705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1535, 0, 0, 0, 0, 1872,
	0, 0, 3337, 3338, 3339, 0, 0, 0, 0, 3336,
	3334, 3335, 3327, 3328, 3329, 3330, 3332, 3333, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	2682, 2683, 2684, 2685, 2690, 2691, 2692, 2693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4422, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 1094, 1094, 1094, 0,
	0, 0, 0, 0, 0, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 2907, 0, 0, 0,
	0, 0, 0, 4222, 0, 4222, 0, 0, 1535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 1543, 0, 1549, 0, 0, 0, 0, 1853,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 1535, 0, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 0, 1649, 3115, 1654, 0, 1853, 0, 1853,
	1853, 1853, 1853, 2907, 0, 0, 0, 0, 1667, 0,
	1672, 2739, 2739, 0, 0, 0, 0, 0, 0, 3115,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 1853, 1737, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 1853, 0, 0,
	1853, 0, 0, 1853, 0, 0, 1853, 0, 0, 0,
	0, 0, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 0, 0, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 0, 1853, 0,
	0, 3346, 0, 2739, 2739, 2739, 2739, 1848, 0, 0,
	1853, 0, 1853, 0, 1820, 0, 0, 1853, 0, 0,
	0, 0, 1894, 3748, 0, 0, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 1819,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 1849, 0, 0, 0, 1854, 1848,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 3747, 0, 1867, 0, 0, 0, 1834,
	1835, 0, 0, 1966, 1966, 1966, 0, 0, 0, 0,
	0, 0, 1873, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 1819, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 1839, 1840, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 1143, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 0, 0,
	0, 0, 270, 270, 270, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 1858, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 1847, 1849, 0, 0, 0,
	0, 830, 0, 1853, 1853, 1841, 1853, 0, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 0, 1870, 0, 830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 1872, 0, 0, 0, 0, 1266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 1853, 1853, 0, 2739, 2739, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 3346, 3346,
	0, 0, 1853, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2739, 2739, 2739, 2739, 2739, 2739,
	2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739,
	2739, 2739, 2739, 2739, 0, 2739, 3346, 3346, 3346, 3346,
	0, 0, 0, 0, 0, 0, 0, 0, 2408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 2434, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 3300, 0, 0,
	0, 3301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2472, 0, 2476,
	0, 0, 0, 0, 0, 0, 2490, 0, 0, 0,
	0, 0, 0, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 0,
	2540, 0, 2542, 2543, 2544, 2545, 0, 0, 0, 1817,
	1818, 0, 0, 0, 0, 1861, 1862, 1863, 0, 0,
	0, 0, 0, 0, 1853, 850, 0, 0, 2569, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 1820,
	1894, 0, 0, 0, 2620, 852, 0, 0, 1867, 0,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2650, 2653, 2656, 2659, 0, 1873, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 854,
	0, 871, 0, 1836, 2731, 0, 2743, 2745, 2750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 855, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 0, 0,
	0, 0, 0, 880, 0, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 878, 0, 1820, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	858, 1839, 0, 859, 0, 0, 0, 0, 1858, 0,
	1836, 1868, 0, 0, 0, 882, 0, 0, 1847, 1849,
	762, 0, 0, 0, 0, 270, 0, 270, 270, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 1853, 1853, 0, 0, 1853, 3346, 3346, 1853,
	0, 0, 1856, 1853, 0, 3240, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 1840, 270, 0,
	270, 270, 0, 1853, 270, 270, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 881, 0, 1825, 0, 0, 0,
	0, 0, 0, 830, 876, 0, 1853, 1853, 1853, 1853,
	1853, 0, 0, 0, 0, 0, 1853, 0, 1853, 0,
	0, 3346, 3346, 3346, 3346, 3346, 3346, 3346, 3346, 3346,
	3346, 3346, 3346, 3346, 3346, 3346, 3346, 3346, 3346, 3346,
	3346, 0, 0, 0, 3346, 1847, 1849, 1853, 1853, 0,
	0, 0, 1870, 0, 270, 270, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 860, 0, 1853, 0,
	0, 1834, 1835, 0, 0, 0, 0, 862, 0, 0,
	270, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3046, 3047, 0, 3049, 1840, 0, 0, 1846, 863, 0,
	0, 0, 1179, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	1841, 0, 0, 0, 0, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1853, 0,
	0, 849, 0, 873, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 270, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 865, 0, 0, 0, 866, 885,
	0, 884, 0, 0, 0, 867, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 868,
	0, 0, 3179, 0, 877, 0, 0, 0, 0, 0,
	886, 0, 883, 0, 0, 0, 0, 1841, 763, 0,
	1857, 0, 0, 0, 1817, 1818, 0, 0, 1853, 0,
	0, 0, 0, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 1875, 0, 0, 1872, 0, 0, 1853, 1853,
	1873, 0, 0, 1853, 1853, 0, 0, 1853, 1853, 1819,
	0, 0, 1853, 0, 0, 0, 1853, 0, 0, 1839,
	0, 1853, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 1270, 0, 2739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3234, 3235, 0,
	0, 0, 0, 3241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3255, 3256, 0, 0, 0, 0, 2620, 0,
	0, 1837, 1833, 3233, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 2739, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 1988, 0, 1266, 1825, 0, 0, 270, 0, 0,
	0, 0, 0, 3265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1988, 270, 0, 0, 0, 3279,
	0, 0, 830, 0, 1817, 1818, 0, 0, 0, 830,
	747, 0, 0, 0, 0, 0, 3291, 0, 0, 0,
	0, 0, 0, 1847, 1849, 0, 0, 1848, 0, 0,
	730, 0, 0, 0, 1820, 731, 270, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 1839,
	0, 0, 1840, 0, 0, 733, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2750, 2750,
	2750, 0, 0, 1853, 1853, 1853, 0, 0, 753, 0,
	0, 0, 0, 1966, 1853, 1853, 3346, 2739, 0, 0,
	0, 3384, 0, 1853, 0, 0, 1853, 0, 0, 735,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 0, 736, 0, 1825, 0, 0, 3346, 2739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 737, 0, 0, 738, 0,
	0, 0, 1853, 2739, 0, 0, 0, 0, 0, 0,
	1853, 0, 1846, 0, 0, 762, 0, 0, 0, 1853,
	0, 0, 0, 1847, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	752, 270, 0, 0, 0, 830, 0, 1094, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 3507, 0, 0, 0, 0, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 3346, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 0, 0, 1853, 3346, 0, 270,
	1853, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3346,
	759, 0, 740, 0, 0, 0, 0, 0, 0, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 270, 0, 0, 270, 0, 0,
	0, 760, 0, 741, 0, 0, 0, 1853, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 270, 0, 270, 1841, 270, 0, 270, 0,
	270, 0, 0, 761, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 1270, 757, 758, 755, 1270,
	0, 0, 0, 0, 750, 0, 0, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 270, 270, 270, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 744,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 1853, 0, 763, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 2490, 0,
	0, 0, 0, 0, 3745, 3746, 0, 0, 3749, 0,
	0, 0, 3752, 0, 0, 0, 0, 0, 0, 0,
	0, 3756, 0, 747, 0, 0, 0, 0, 0, 1270,
	3763, 0, 0, 0, 0, 3384, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 731, 0,
	3776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3799, 3800, 0, 3801, 3802, 3803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 732, 0, 0,
	1853, 3809, 1266, 0, 0, 3811, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	0, 0, 270, 0, 0, 0, 0, 0, 3840, 3841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 270, 0, 0, 0, 3852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3861, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 736, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 1854, 1848, 0,
	0, 0, 0, 0, 0, 1820, 270, 0, 737, 270,
	0, 738, 0, 270, 1867, 270, 0, 0, 0, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 762, 0,
	0, 1873, 270, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 3911, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 752, 0, 0, 0, 0, 0, 1836,
	0, 3922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 3951, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 1270, 0, 1270,
	0, 0, 749, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 2051, 1825, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	830, 0, 0, 0, 1858, 740, 0, 1868, 0, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 1864, 830, 1865, 760, 0, 741, 0, 0, 270,
	1834, 1835, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 4061, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 0, 757,
	758, 755, 0, 0, 0, 270, 0, 750, 0, 0,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 270, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 4111,
	4112, 0, 744, 0, 751, 4116, 4117, 0, 1870, 0,
	4120, 4121, 0, 745, 0, 0, 0, 0, 4125, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 4129,
	0, 0, 754, 0, 0, 0, 0, 0, 270, 270,
	270, 270, 0, 0, 0, 4134, 763, 270, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 748, 0, 1270,
	1270, 0, 0, 1846, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 1841, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 1270, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 1270, 0, 1270, 1270, 1270, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 2616, 0, 0, 0,
	2617, 0, 272, 272, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 0, 0, 0, 0, 0, 1820, 0,
	2051, 2051, 1270, 0, 0, 0, 0, 1867, 0, 1266,
	0, 0, 0, 0, 0, 4376, 4377, 4378, 0, 0,
	0, 0, 0, 0, 1873, 1266, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 2490, 0,
	0, 4387, 4388, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 1988, 0, 0, 0, 4396,
	4399, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	270, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4447, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 4455, 0, 0, 0, 0, 0, 1825, 0,
	0, 270, 0, 0, 0, 0, 4463, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 4472, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 1858, 0, 0,
	1868, 0, 270, 270, 0, 0, 270, 1847, 1849, 0,
	0, 1270, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 1865, 0, 270, 0,
	0, 0, 0, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	1855, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 4599, 0, 0, 0, 4603, 0, 1270, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 270, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 1094, 1270, 0, 0, 0, 0, 0,
	0, 0, 4660, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2490, 270, 0, 0,
	0, 0, 0, 0, 0, 4399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 1270, 1857,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 1270, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 4139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4781, 4781, 4781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 272, 272, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4804, 0, 0, 0, 0, 0, 0,
	0, 0, 1266, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1259, 0, 272, 1411,
	272, 272, 0, 1411, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4781, 0, 0, 272, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 0, 266, 266, 697, 0, 1411, 0, 0, 0,
	1854, 1848, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 1411, 1819, 0, 0, 0, 0, 0, 1411,
	272, 272, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4781, 4939, 0, 0, 0, 0, 270, 0, 0,
	4943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 0, 0, 1825, 0,
	270, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 270, 0, 0, 0, 272,
	270, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 1847, 1849, 0,
	1266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 1865, 0, 0, 0,
	0, 0, 0, 1834, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 1270, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 270, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 2051, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 1266, 0, 0, 0, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 1841,
	0, 0, 0, 1988, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 1859, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	1988, 0, 1988, 0, 0, 0, 272, 1872, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 270, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 1270, 0, 0, 0, 1270, 0, 0,
	0, 270, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 1857,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 1270, 0, 0, 0, 0,
	0, 0, 270, 3761, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	1270, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 1270, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 1270, 0, 0, 0,
	0, 272, 0, 1411, 1411, 272, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1318, 0, 1318, 1318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 1270, 272, 0, 0, 0, 270, 1402, 272,
	0, 0, 0, 0, 1509, 272, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2051,
	2051, 272, 0, 272, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	1411, 0, 1411, 0, 0, 0, 0, 0, 2051, 2051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 1411, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 272, 0, 0, 272, 0, 0,
	0, 2051, 0, 0, 0, 1411, 0, 1411, 1411, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	1647, 1648, 0, 0, 0, 0, 1132, 112, 1270, 1270,
	0, 272, 272, 0, 272, 0, 272, 0, 272, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 1988,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 272, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1069,
	0, 0, 0, 0, 0, 0, 0, 822, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 1270, 1988, 0, 270, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 0, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 1270, 1270,
	0, 0, 272, 0, 0, 1411, 0, 0, 270, 0,
	0, 0, 0, 0, 1270, 1270, 1270, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 272, 0, 2015, 0, 1509, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 272,
	0, 0, 0, 272, 0, 272, 0, 0, 0, 0,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 1318, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 272, 0, 0, 1270, 0, 0, 0, 1270,
	1270, 0, 1270, 0, 0, 272, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 1270, 1988, 0, 0, 0, 0, 272, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 272, 0, 0, 0, 0, 1270, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 1270, 0, 0, 0,
	1411, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 1270, 0, 272, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 2287,
	0, 0, 0, 2294, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 2307, 0, 0, 0, 1270,
	1270, 1270, 1270, 1270, 0, 0, 0, 0, 0, 0,
	0, 2319, 0, 2319, 1270, 0, 0, 0, 0, 2326,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	272, 272, 0, 0, 0, 0, 0, 272, 0, 0,
	272, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 2294, 2051, 0, 2356, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 1270, 2376, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2392, 0, 2394, 0, 2396, 0, 2398, 0,
	2399, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 112, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 2051, 0,
	0, 0, 2426, 2427, 2428, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 1408, 1089, 112, 112, 0, 0, 0, 1270, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 2051, 1148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 1069, 0,
	0, 0, 2807, 0, 0, 0, 1817, 1818, 1411, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 272, 0, 1887,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1848,
	0, 0, 0, 0, 1411, 0, 1820, 1893, 0, 0,
	0, 1899, 0, 0, 0, 1867, 0, 0, 1270, 0,
	0, 1270, 0, 0, 0, 1270, 272, 0, 0, 0,
	272, 272, 1873, 0, 0, 1270, 1270, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 1270, 0, 0, 0, 2856, 0, 0, 1318,
	1836, 272, 0, 1318, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 272, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 1986, 0, 1989, 0, 112, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 1868, 0,
	0, 1411, 0, 0, 0, 1847, 1849, 1509, 0, 0,
	272, 0, 0, 0, 0, 1411, 0, 1411, 0, 0,
	0, 1411, 1864, 0, 1865, 0, 0, 0, 272, 1411,
	0, 1834, 1835, 0, 0, 0, 0, 272, 0, 0,
	1411, 272, 0, 0, 0, 0, 1408, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	822, 0, 0, 0, 1840, 0, 0, 822, 0, 0,
	2294, 0, 0, 0, 0, 0, 0, 0, 0, 2307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 1411, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 3149, 1270, 0, 1270, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3160, 0, 3163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 1408, 272,
	1411, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 3195, 1509,
	3197, 1509, 0, 0, 0, 0, 0, 3203, 0, 0,
	0, 0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 1859, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1848, 0, 0,
	0, 1318, 0, 1411, 1820, 0, 0, 0, 0, 3231,
	0, 0, 0, 1867, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 1567, 1567, 0, 0, 0, 0, 0, 0, 1839,
	0, 1408, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 3303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 1411, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 1567, 0,
	1567, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1567, 1567,
	0, 0, 0, 1858, 0, 0, 1868, 0, 0, 0,
	0, 1567, 0, 1847, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 1567, 1567, 1567, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 0, 0, 0, 0, 1069, 1856, 1409, 1069,
	1069, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 2558, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 1089, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 1893, 0, 1870, 0, 1893,
	272, 1568, 0, 0, 1408, 0, 0, 3432, 1568, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 1568, 272, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1318, 0, 0, 0,
	1509, 1509, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 1411, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 1253, 0, 0, 1841, 0, 0, 1411, 1411,
	1411, 3477, 1568, 0, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 1411,
	0, 0, 1859, 272, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3526, 3528, 0, 0, 2307, 0, 112, 0,
	0, 1411, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 3302,
	0, 0, 0, 0, 0, 0, 0, 3625, 0, 0,
	0, 3629, 0, 1411, 1411, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 1411, 0, 0, 272, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 112, 0, 0, 112, 0, 112,
	0, 272, 0, 0, 0, 0, 0, 1409, 0, 3730,
	0, 1509, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	1411, 0, 0, 0, 1854, 1848, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 112, 1408, 3743, 112, 0,
	0, 1867, 272, 0, 112, 0, 0, 0, 0, 0,
	0, 1411, 272, 0, 0, 0, 1411, 0, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 1411, 1411, 1411, 1411, 1411, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1567, 0,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 0, 1567, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 1858, 0, 0, 1868, 0, 0, 272, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1865, 0, 0, 0, 0, 0, 0, 1834, 1835, 0,
	0, 0, 1568, 1568, 0, 0, 2558, 0, 0, 0,
	0, 0, 1409, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 1893, 0, 0,
	1840, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	1411, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 0, 1568,
	0, 1568, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2307, 1568, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 1568, 0, 1568, 1568, 1568, 0,
	2307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4025, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2307, 0, 0, 0, 0,
	4043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 1872, 0, 0, 0, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 1411,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 1411, 0, 1408, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 3299, 0, 0,
	0, 1408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 1408, 112, 112, 0, 112, 112, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1848, 0, 0, 0, 0,
	0, 0, 1820, 0, 112, 112, 0, 112, 112, 112,
	0, 1867, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 272, 4241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 112, 112, 0, 1567,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2307, 1567, 0, 1567, 0, 0, 0, 1408,
	0, 0, 4329, 0, 0, 0, 822, 1567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1567, 0,
	0, 1858, 0, 0, 1868, 0, 0, 0, 0, 0,
	1409, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1865, 0, 0, 0, 0, 0, 0, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 1567, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 1567, 0, 1567, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 1408, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 4432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1848, 0, 0, 0, 1568,
	1846, 1568, 1820, 0, 1408, 0, 0, 0, 0, 0,
	0, 1867, 0, 2307, 112, 0, 0, 0, 1568, 0,
	0, 1408, 0, 1841, 0, 0, 0, 0, 1873, 0,
	0, 0, 1253, 1253, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1859, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4567, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 1858, 0, 0, 1868, 0, 0, 3298, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1865, 0, 0, 0, 0, 0, 0, 1834, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4719, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 4758, 0, 0, 0, 0, 1567,
	1567, 1567, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 1567, 1567, 1567, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	0, 0, 1409, 1408, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1408,
	0, 4824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 112, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 3297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 1408, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1568, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 1568, 0, 1568, 0, 0, 0,
	1409, 0, 0, 0, 112, 0, 0, 0, 1568, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1567, 1567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 1568, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 0, 1568,
	0, 0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 1567, 1567, 1567, 1567, 1567, 1854, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 1408, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 1409, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 1408, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1408,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 1868, 0, 0, 0,
	1567, 1567, 0, 1847, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 1856, 1567, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1848, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 1841, 0, 0, 0, 1867,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 1859, 0, 0, 1819, 0, 1567, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 1567, 1567, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 1567, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 1568, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1568, 1568, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 1568, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 1857, 0, 0, 1568, 0,
	1825, 0, 0, 0, 1409, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 2617,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 1847,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1865, 0,
	0, 0, 0, 0, 0, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1818, 1840, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1848,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 1409, 1409, 1866, 1409, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1855, 1568, 1568, 0, 0, 0, 0, 0,
	0, 1839, 0, 1870, 1409, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 1841, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 1868, 1872,
	0, 0, 0, 0, 0, 1847, 1849, 0, 0, 0,
	1409, 0, 0, 0, 0, 1568, 0, 0, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 1568, 1568, 1568, 1568, 1568, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 1409, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 1409, 0, 0,
	0, 4703, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	1409, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 1568, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 4618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 1568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 1568,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 1412,
	287, 288, 1413, 1414, 1415, 1568, 1416, 643, 1417, 1418,
	1419, 1420, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 1421, 648,
	299, 300, 301, 302, 303, 304, 1422, 1423, 0, 305,
	649, 650, 651, 1424, 306, 307, 652, 1425, 1492, 1426,
	308, 309, 310, 311, 312, 313, 314, 0, 1427, 316,
	317, 318, 315, 319, 1428, 320, 0, 321, 322, 323,
	324, 325, 326, 1429, 327, 328, 329, 1211, 330, 331,
	332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 1437, 343,
	339, 341, 1438, 344, 342, 345, 1439, 346, 347, 348,
	1440, 1441, 349, 350, 351, 1442, 352, 353, 1443, 354,
	355, 356, 1444, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 1445,
	277, 1446, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1447, 375, 376, 377, 1448, 1449,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1450, 390, 661, 1451, 662,
	391, 1452, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 1453, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1454, 1213,
	407, 666, 667, 1455, 668, 1456, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1457, 421, 423, 422, 1458,
	424, 670, 1218, 425, 426, 1219, 1459, 427, 428, 429,
	430, 431, 432, 435, 1460, 1461, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1462, 279, 1222, 478, 479, 1463,
	671, 480, 672, 482, 483, 1464, 0, 484, 0, 1465,
	1466, 486, 487, 488, 1467, 1468, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1469, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 1470, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 1471, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 1472, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1473, 568, 569, 567,
	570, 571, 572, 1474, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1475, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1476, 600,
	601, 0, 597, 588, 1477, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 1478, 610, 684, 685, 686, 687,
	1479, 619, 1480, 611, 612, 613, 688, 614, 689, 1481,
	615, 616, 617, 618, 0, 620, 621, 1482, 1483, 622,
	623, 624, 626, 627, 625, 628, 1484, 629, 1485, 0,
	630, 631, 632, 690, 691, 692, 1486, 634, 633, 635,
	693, 636, 637, 1487, 1488, 1489, 1490, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	2785, 0, 0, 0, 0, 0, 0, 0, 2786, 280,
	282, 281, 283, 284, 285, 286, 1412, 287, 288, 1413,
	1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 1421, 648, 299, 300, 301,
	302, 303, 304, 1422, 1423, 0, 305, 649, 650, 651,
	1424, 306, 307, 652, 1425, 1492, 1426, 308, 309, 310,
	311, 312, 313, 314, 0, 1427, 316, 317, 318, 315,
	319, 1428, 320, 0, 321, 322, 323, 324, 325, 326,
	1429, 327, 328, 329, 1211, 330, 331, 332, 1430, 1431,
	1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 1437, 343, 339, 341, 1438,
	344, 342, 345, 1439, 346, 347, 348, 1440, 1441, 349,
	350, 351, 1442, 352, 353, 1443, 354, 355, 356, 1444,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 1445, 277, 1446, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 1447, 375, 376, 377, 1448, 1449, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1450, 390, 661, 1451, 662, 391, 1452, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1214, 397,
	398, 1453, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1454, 1213, 407, 666, 667,
	1455, 668, 1456, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1457, 421, 423, 422, 1458, 424, 670, 1218,
	425, 426, 1219, 1459, 427, 428, 429, 430, 431, 432,
	435, 1460, 1461, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1462, 279, 1222, 478, 479, 1463, 671, 480, 672,
	482, 483, 1464, 0, 484, 0, 1465, 1466, 486, 487,
	488, 1467, 1468, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1469, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 1470, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 1471, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 1472, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 1473, 568, 569, 567, 570, 571, 572,
	1474, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 1475, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 1476, 600, 601, 0, 597,
	588, 1477, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 1478, 610, 684, 685, 686, 687, 1479, 619, 1480,
	611, 612, 613, 688, 614, 689, 1481, 615, 616, 617,
	618, 0, 620, 621, 1482, 1483, 622, 623, 624, 626,
	627, 625, 628, 1484, 629, 1485, 0, 630, 631, 632,
	690, 691, 692, 1486, 634, 633, 635, 693, 636, 637,
	1487, 1488, 1489, 1490, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 3770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3772, 280, 282, 281, 283, 284, 285,
	286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643,
	1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	1421, 648, 299, 300, 301, 302, 303, 304, 1422, 1423,
	0, 305, 649, 650, 651, 1424, 306, 307, 652, 1425,
	1492, 1426, 308, 309, 310, 311, 312, 313, 314, 0,
	1427, 316, 317, 318, 315, 319, 1428, 320, 0, 321,
	322, 323, 324, 325, 326, 1429, 327, 328, 329, 1211,
	330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	1437, 343, 339, 341, 1438, 344, 342, 345, 1439, 346,
	347, 348, 1440, 1441, 349, 350, 351, 1442, 352, 353,
	1443, 354, 355, 356, 1444, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 1445, 277, 1446, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 1447, 375, 376, 377,
	1448, 1449, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1450, 390, 661,
	1451, 662, 391, 1452, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 1453, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1454, 1213, 407, 666, 667, 1455, 668, 1456, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1457, 421, 423,
	422, 1458, 424, 670, 1218, 425, 426, 1219, 1459, 427,
	428, 429, 430, 431, 432, 435, 1460, 1461, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1462, 279, 1222, 478,
	479, 1463, 671, 480, 672, 482, 483, 1464, 0, 484,
	0, 1465, 1466, 486, 487, 488, 1467, 1468, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1469, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 1470, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	1471, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 1472, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1473, 568,
	569, 567, 570, 571, 572, 1474, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1475, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1476, 600, 601, 0, 597, 588, 1477, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 1478, 610, 684, 685,
	686, 687, 1479, 619, 1480, 611, 612, 613, 688, 614,
	689, 1481, 615, 616, 617, 618, 0, 620, 621, 1482,
	1483, 622, 623, 624, 626, 627, 625, 628, 1484, 629,
	1485, 0, 630, 631, 632, 690, 691, 692, 1486, 634,
	633, 635, 693, 636, 637, 1487, 1488, 1489, 1490, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4169, 280, 282, 281, 283, 284, 285, 286,
	1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643, 1417,
	1418, 1419, 1420, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 1421,
	648, 299, 300, 301, 302, 303, 304, 1422, 1423, 0,
	305, 649, 650, 651, 1424, 306, 307, 652, 1425, 1492,
	1426, 308, 309, 310, 311, 312, 313, 314, 0, 1427,
	316, 317, 318, 315, 319, 1428, 320, 0, 321, 322,
	323, 324, 325, 326, 1429, 327, 328, 329, 1211, 330,
	331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 1437,
	343, 339, 341, 1438, 344, 342, 345, 1439, 346, 347,
	348, 1440, 1441, 349, 350, 351, 1442, 352, 353, 1443,
	354, 355, 356, 1444, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	1445, 277, 1446, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1447, 375, 376, 377, 1448,
	1449, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1450, 390, 661, 1451,
	662, 391, 1452, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 1453, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1454,
	1213, 407, 666, 667, 1455, 668, 1456, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1457, 421, 423, 422,
	1458, 424, 670, 1218, 425, 426, 1219, 1459, 427, 428,
	429, 430, 431, 432, 435, 1460, 1461, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1462, 279, 1222, 478, 479,
	1463, 671, 480, 672, 482, 483, 1464, 0, 484, 0,
	1465, 1466, 486, 487, 488, 1467, 1468, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1469, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 1470, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 1471,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 1472, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1473, 568, 569,
	567, 570, 571, 572, 1474, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1475, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1476,
	600, 601, 0, 597, 588, 1477, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 1478, 610, 684, 685, 686,
	687, 1479, 619, 1480, 611, 612, 613, 688, 614, 689,
	1481, 615, 616, 617, 618, 0, 620, 621, 1482, 1483,
	622, 623, 624, 626, 627, 625, 628, 1484, 629, 1485,
	0, 630, 631, 632, 690, 691, 692, 1486, 634, 633,
	635, 693, 636, 637, 1487, 1488, 1489, 1490, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4167, 280, 282, 281, 283, 284, 285, 286, 1412,
	287, 288, 1413, 1414, 1415, 0, 1416, 643, 1417, 1418,
	1419, 1420, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 1421, 648,
	299, 300, 301, 302, 303, 304, 1422, 1423, 0, 305,
	649, 650, 651, 1424, 306, 307, 652, 1425, 1492, 1426,
	308, 309, 310, 311, 312, 313, 314, 0, 1427, 316,
	317, 318, 315, 319, 1428, 320, 0, 321, 322, 323,
	324, 325, 326, 1429, 327, 328, 329, 1211, 330, 331,
	332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 1437, 343,
	339, 341, 1438, 344, 342, 345, 1439, 346, 347, 348,
	1440, 1441, 349, 350, 351, 1442, 352, 353, 1443, 354,
	355, 356, 1444, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 1445,
	277, 1446, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1447, 375, 376, 377, 1448, 1449,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1450, 390, 661, 1451, 662,
	391, 1452, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 1453, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1454, 1213,
	407, 666, 667, 1455, 668, 1456, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1457, 421, 423, 422, 1458,
	424, 670, 1218, 425, 426, 1219, 1459, 427, 428, 429,
	430, 431, 432, 435, 1460, 1461, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1462, 279, 1222, 478, 479, 1463,
	671, 480, 672, 482, 483, 1464, 0, 484, 0, 1465,
	1466, 486, 487, 488, 1467, 1468, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1469, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 1470, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 1471, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 1472, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1473, 568, 569, 567,
	570, 571, 572, 1474, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1475, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1476, 600,
	601, 0, 597, 588, 1477, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 1478, 610, 684, 685, 686, 687,
	1479, 619, 1480, 611, 612, 613, 688, 614, 689, 1481,
	615, 616, 617, 618, 0, 620, 621, 1482, 1483, 622,
	623, 624, 626, 627, 625, 628, 1484, 629, 1485, 0,
	630, 631, 632, 690, 691, 692, 1486, 634, 633, 635,
	693, 636, 637, 1487, 1488, 1489, 1490, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4382, 280, 282, 281, 283,
	284, 285, 286, 1412, 287, 288, 1413, 1414, 1415, 0,
	1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 1421, 648, 299, 300, 301, 302, 303, 304,
	1422, 1423, 0, 305, 649, 650, 651, 1424, 306, 307,
	652, 1425, 1492, 1426, 308, 309, 310, 311, 312, 313,
	314, 0, 1427, 316, 317, 318, 315, 319, 1428, 320,
	0, 321, 322, 323, 324, 325, 326, 1429, 327, 328,
	329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432, 1434,
	1435, 1436, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 1437, 343, 339, 341, 1438, 344, 342, 345,
	1439, 346, 347, 348, 1440, 1441, 349, 350, 351, 1442,
	352, 353, 1443, 354, 355, 356, 1444, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 1445, 277, 1446, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1447, 375,
	376, 377, 1448, 1449, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1450,
	390, 661, 1451, 662, 391, 1452, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 1453, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 1454, 1213, 407, 666, 667, 1455, 668, 1456,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1457,
	421, 423, 422, 1458, 424, 670, 1218, 425, 426, 1219,
	1459, 427, 428, 429, 430, 431, 432, 435, 1460, 1461,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1462, 279,
	1222, 478, 479, 1463, 671, 480, 672, 482, 483, 1464,
	0, 484, 0, 1465, 1466, 486, 487, 488, 1467, 1468,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1469,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 1470, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 1471, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 1472, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1473, 568, 569, 567, 570, 571, 572, 1474, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1475, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1476, 600, 601, 0, 597, 588, 1477, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 1478, 610,
	684, 685, 686, 687, 1479, 619, 1480, 611, 612, 613,
	688, 614, 689, 1481, 615, 616, 617, 618, 0, 620,
	621, 1482, 1483, 622, 623, 624, 626, 627, 625, 628,
	1484, 629, 1485, 0, 630, 631, 632, 690, 691, 692,
	1486, 634, 633, 635, 693, 636, 637, 1487, 1488, 1489,
	1490, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4250,
	280, 282, 281, 283, 284, 285, 286, 1412, 287, 288,
	1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 1421, 648, 299, 300,
	301, 302, 303, 304, 1422, 1423, 0, 305, 649, 650,
	651, 1424, 306, 307, 652, 1425, 1492, 1426, 308, 309,
	310, 311, 312, 313, 314, 0, 1427, 316, 317, 318,
	315, 319, 1428, 320, 0, 321, 322, 323, 324, 325,
	326, 1429, 327, 328, 329, 1211, 330, 331, 332, 1430,
	1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 1437, 343, 339, 341,
	1438, 344, 342, 345, 1439, 346, 347, 348, 1440, 1441,
	349, 350, 351, 1442, 352, 353, 1443, 354, 355, 356,
	1444, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 1445, 277, 1446,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 1447, 375, 376, 377, 1448, 1449, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1450, 390, 661, 1451, 662, 391, 1452,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 1453, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1454, 1213, 407, 666,
	667, 1455, 668, 1456, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1457, 421, 423, 422, 1458, 424, 670,
	1218, 425, 426, 1219, 1459, 427, 428, 429, 430, 431,
	432, 435, 1460, 1461, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1462, 279, 1222, 478, 479, 1463, 671, 480,
	672, 482, 483, 1464, 0, 484, 0, 1465, 1466, 486,
	487, 488, 1467, 1468, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1469, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 1470,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 1471, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 1472,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1473, 568, 569, 567, 570, 571,
	572, 1474, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1475,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1476, 600, 601, 0,
	597, 588, 1477, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 1478, 610, 684, 685, 686, 687, 1479, 619,
	1480, 611, 612, 613, 688, 614, 689, 1481, 615, 616,
	617, 618, 0, 620, 621, 1482, 1483, 622, 623, 624,
	626, 627, 625, 628, 1484, 629, 1485, 0, 630, 631,
	632, 690, 691, 692, 1486, 634, 633, 635, 693, 636,
	637, 1487, 1488, 1489, 1490, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4097, 280, 282, 281, 283, 284, 285,
	286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643,
	1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	1421, 648, 299, 300, 301, 302, 303, 304, 1422, 1423,
	0, 305, 649, 650, 651, 1424, 306, 307, 652, 1425,
	1492, 1426, 308, 309, 310, 311, 312, 313, 314, 0,
	1427, 316, 317, 318, 315, 319, 1428, 320, 0, 321,
	322, 323, 324, 325, 326, 1429, 327, 328, 329, 1211,
	330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	1437, 343, 339, 341, 1438, 344, 342, 345, 1439, 346,
	347, 348, 1440, 1441, 349, 350, 351, 1442, 352, 353,
	1443, 354, 355, 356, 1444, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 1445, 277, 1446, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 1447, 375, 376, 377,
	1448, 1449, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1450, 390, 661,
	1451, 662, 391, 1452, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 1453, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1454, 1213, 407, 666, 667, 1455, 668, 1456, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1457, 421, 423,
	422, 1458, 424, 670, 1218, 425, 426, 1219, 1459, 427,
	428, 429, 430, 431, 432, 435, 1460, 1461, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1462, 279, 1222, 478,
	479, 1463, 671, 480, 672, 482, 483, 1464, 0, 484,
	0, 1465, 1466, 486, 487, 488, 1467, 1468, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1469, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 1470, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	1471, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 1472, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1473, 568,
	569, 567, 570, 571, 572, 1474, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1475, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1476, 600, 601, 0, 597, 588, 1477, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 1478, 610, 684, 685,
	686, 687, 1479, 619, 1480, 611, 612, 613, 688, 614,
	689, 1481, 615, 616, 617, 618, 0, 620, 621, 1482,
	1483, 622, 623, 624, 626, 627, 625, 628, 1484, 629,
	1485, 0, 630, 631, 632, 690, 691, 692, 1486, 634,
	633, 635, 693, 636, 637, 1487, 1488, 1489, 1490, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3788, 280, 282,
	281, 283, 284, 285, 286, 1412, 287, 288, 1413, 1414,
	1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 1421, 648, 299, 300, 301, 302,
	303, 304, 1422, 1423, 0, 305, 649, 650, 651, 1424,
	306, 307, 652, 1425, 1492, 1426, 308, 309, 310, 311,
	312, 313, 314, 0, 1427, 316, 317, 318, 315, 319,
	1428, 320, 0, 321, 322, 323, 324, 325, 326, 1429,
	327, 328, 329, 1211, 330, 331, 332, 1430, 1431, 1433,
	1432, 1434, 1435, 1436, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 1437, 343, 339, 341, 1438, 344,
	342, 345, 1439, 346, 347, 348, 1440, 1441, 349, 350,
	351, 1442, 352, 353, 1443, 354, 355, 356, 1444, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 1445, 277, 1446, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1447, 375, 376, 377, 1448, 1449, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1450, 390, 661, 1451, 662, 391, 1452, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	1453, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1454, 1213, 407, 666, 667, 1455,
	668, 1456, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1457, 421, 423, 422, 1458, 424, 670, 1218, 425,
	426, 1219, 1459, 427, 428, 429, 430, 431, 432, 435,
	1460, 1461, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1462, 279, 1222, 478, 479, 1463, 671, 480, 672, 482,
	483, 1464, 0, 484, 0, 1465, 1466, 486, 487, 488,
	1467, 1468, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1469, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 1470, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 1471, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 1472, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1473, 568, 569, 567, 570, 571, 572, 1474,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1475, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1476, 600, 601, 0, 597, 588,
	1477, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	1478, 610, 684, 685, 686, 687, 1479, 619, 1480, 611,
	612, 613, 688, 614, 689, 1481, 615, 616, 617, 618,
	0, 620, 621, 1482, 1483, 622, 623, 624, 626, 627,
	625, 628, 1484, 629, 1485, 0, 630, 631, 632, 690,
	691, 692, 1486, 634, 633, 635, 693, 636, 637, 1487,
	1488, 1489, 1490, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3609, 280, 282, 281, 283, 284, 285, 286, 1412,
	287, 288, 1413, 1414, 1415, 0, 1416, 643, 1417, 1418,
	1419, 1420, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 1421, 648,
	299, 300, 301, 302, 303, 304, 1422, 1423, 0, 305,
	649, 650, 651, 1424, 306, 307, 652, 1425, 1492, 1426,
	308, 309, 310, 311, 312, 313, 314, 0, 1427, 316,
	317, 318, 315, 319, 1428, 320, 0, 321, 322, 323,
	324, 325, 326, 1429, 327, 328, 329, 1211, 330, 331,
	332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 1437, 343,
	339, 341, 1438, 344, 342, 345, 1439, 346, 347, 348,
	1440, 1441, 349, 350, 351, 1442, 352, 353, 1443, 354,
	355, 356, 1444, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 1445,
	277, 1446, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1447, 375, 376, 377, 1448, 1449,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1450, 390, 661, 1451, 662,
	391, 1452, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 1453, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1454, 1213,
	407, 666, 667, 1455, 668, 1456, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1457, 421, 423, 422, 1458,
	424, 670, 1218, 425, 426, 1219, 1459, 427, 428, 429,
	430, 431, 432, 435, 1460, 1461, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1462, 279, 1222, 478, 479, 1463,
	671, 480, 672, 482, 483, 1464, 0, 484, 0, 1465,
	1466, 486, 487, 488, 1467, 1468, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1469, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 1470, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 1471, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 1472, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1473, 568, 569, 567,
	570, 571, 572, 1474, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1475, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1476, 600,
	601, 0, 597, 588, 1477, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 1478, 610, 684, 685, 686, 687,
	1479, 619, 1480, 611, 612, 613, 688, 614, 689, 1481,
	615, 616, 617, 618, 0, 620, 621, 1482, 1483, 622,
	623, 624, 626, 627, 625, 628, 1484, 629, 1485, 0,
	630, 631, 632, 690, 691, 692, 1486, 634, 633, 635,
	693, 636, 637, 1487, 1488, 1489, 1490, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2640, 280, 282, 281, 283,
	284, 285, 286, 1412, 287, 288, 1413, 1414, 1415, 0,
	1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 1421, 648, 299, 300, 301, 302, 303, 304,
	1422, 1423, 0, 305, 649, 650, 651, 1424, 306, 307,
	652, 1425, 1492, 1426, 308, 309, 310, 311, 312, 313,
	314, 0, 1427, 316, 317, 318, 315, 319, 1428, 320,
	0, 321, 322, 323, 324, 325, 326, 1429, 327, 328,
	329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432, 1434,
	1435, 1436, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 1437, 343, 339, 341, 1438, 344, 342, 345,
	1439, 346, 347, 348, 1440, 1441, 349, 350, 351, 1442,
	352, 353, 1443, 354, 355, 356, 1444, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 1445, 277, 1446, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1447, 375,
	376, 377, 1448, 1449, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1450,
	390, 661, 1451, 662, 391, 1452, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 1453, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 1454, 1213, 407, 666, 667, 1455, 668, 1456,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1457,
	421, 423, 422, 1458, 424, 670, 1218, 425, 426, 1219,
	1459, 427, 428, 429, 430, 431, 432, 435, 1460, 1461,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1462, 279,
	1222, 478, 479, 1463, 671, 480, 672, 482, 483, 1464,
	0, 484, 0, 1465, 1466, 486, 487, 488, 1467, 1468,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1469,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 1470, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 1471, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 1472, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1473, 568, 569, 567, 570, 571, 572, 1474, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1475, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1476, 600, 601, 0, 597, 588, 1477, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 1478, 610,
	684, 685, 686, 687, 1479, 619, 1480, 611, 612, 613,
	688, 614, 689, 1481, 615, 616, 617, 618, 0, 620,
	621, 1482, 1483, 622, 623, 624, 626, 627, 625, 628,
	1484, 629, 1485, 0, 630, 631, 632, 690, 691, 692,
	1486, 634, 633, 635, 693, 636, 637, 1487, 1488, 1489,
	1490, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 1503, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2266,
	280, 282, 281, 283, 284, 285, 286, 1412, 287, 288,
	1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 1421, 648, 299, 300,
	301, 302, 303, 304, 1422, 1423, 0, 305, 649, 650,
	651, 1424, 306, 307, 652, 1425, 1492, 1426, 308, 309,
	310, 311, 312, 313, 314, 0, 1427, 316, 317, 318,
	315, 319, 1428, 320, 0, 321, 322, 323, 324, 325,
	326, 1429, 327, 328, 329, 1211, 330, 331, 332, 1430,
	1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 1437, 343, 339, 341,
	1438, 344, 342, 345, 1439, 346, 347, 348, 1440, 1441,
	349, 350, 351, 1442, 352, 353, 1443, 354, 355, 356,
	1444, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 1445, 277, 1446,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 1447, 375, 376, 377, 1448, 1449, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1450, 390, 661, 1451, 662, 391, 1452,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 1453, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1454, 1213, 407, 666,
	667, 1455, 668, 1456, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1457, 421, 423, 422, 1458, 424, 670,
	1218, 425, 426, 1219, 1459, 427, 428, 429, 430, 431,
	432, 435, 1460, 1461, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1462, 279, 1222, 478, 479, 1463, 671, 480,
	672, 482, 483, 1464, 0, 484, 0, 1465, 1466, 486,
	487, 488, 1467, 1468, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1469, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 1470,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 1471, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 1472,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1473, 568, 569, 567, 570, 571,
	572, 1474, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1475,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1476, 600, 601, 0,
	597, 588, 1477, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 1478, 610, 684, 685, 686, 687, 1479, 619,
	1480, 611, 612, 613, 688, 614, 689, 1481, 615, 616,
	617, 618, 0, 620, 621, 1482, 1483, 622, 623, 624,
	626, 627, 625, 628, 1484, 629, 1485, 0, 630, 631,
	632, 690, 691, 692, 1486, 634, 633, 635, 693, 636,
	637, 1487, 1488, 1489, 1490, 638, 639, 694, 640, 641,
	642, 1403, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 1412, 287, 288,
	1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 1421, 648, 299, 300,
	301, 302, 303, 304, 1422, 1423, 0, 305, 649, 650,
	651, 1424, 306, 307, 652, 1425, 1492, 1426, 308, 309,
	310, 311, 312, 313, 314, 0, 1427, 316, 317, 318,
	315, 319, 1428, 320, 0, 321, 322, 323, 324, 325,
	326, 1429, 327, 328, 329, 1211, 330, 331, 332, 1430,
	1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 1437, 343, 339, 341,
	1438, 344, 342, 345, 1439, 346, 347, 348, 1440, 1441,
	349, 350, 351, 1442, 352, 353, 1443, 354, 355, 356,
	1444, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 1445, 277, 1446,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 1447, 375, 376, 377, 1448, 1449, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1450, 390, 661, 1451, 662, 391, 1452,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 1453, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1454, 1213, 407, 666,
	667, 1455, 668, 1456, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1457, 421, 423, 422, 1458, 424, 670,
	1218, 425, 426, 1219, 1459, 427, 428, 429, 430, 431,
	432, 435, 1460, 1461, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1462, 279, 1222, 478, 479, 1463, 671, 480,
	672, 482, 483, 1464, 0, 484, 0, 1465, 1466, 486,
	487, 488, 1467, 1468, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1469, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 1470,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 1471, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 1472,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1473, 568, 569, 567, 570, 571,
	572, 1474, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1475,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1476, 600, 601, 0,
	597, 588, 1477, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 1478, 610, 684, 685, 686, 687, 1479, 619,
	1480, 611, 612, 613, 688, 614, 689, 1481, 615, 616,
	617, 618, 0, 620, 621, 1482, 1483, 622, 623, 624,
	626, 627, 625, 628, 1484, 629, 1485, 0, 630, 631,
	632, 690, 691, 692, 1486, 634, 633, 635, 693, 636,
	637, 1487, 1488, 1489, 1490, 638, 639, 694, 640, 641,
	642, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 1412, 287, 288, 1413, 1414,
	1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 1421, 648, 299, 300, 301, 302,
	303, 304, 1422, 1423, 0, 305, 649, 650, 651, 1424,
	306, 307, 652, 1425, 1492, 1426, 308, 309, 310, 311,
	312, 313, 314, 0, 1427, 316, 317, 318, 315, 319,
	1428, 320, 0, 321, 322, 323, 324, 325, 326, 1429,
	327, 328, 329, 1211, 330, 331, 332, 1430, 1431, 1433,
	1432, 1434, 1435, 1436, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 1437, 343, 339, 341, 1438, 344,
	342, 345, 1439, 346, 347, 348, 1440, 1441, 349, 350,
	351, 1442, 352, 353, 1443, 354, 355, 356, 1444, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 1445, 277, 1446, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1447, 375, 376, 377, 1448, 1449, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1450, 390, 661, 1451, 662, 391, 1452, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	1453, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1454, 1213, 407, 666, 667, 1455,
	668, 1456, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1457, 421, 423, 422, 1458, 424, 670, 1218, 425,
	426, 1219, 1459, 427, 428, 429, 430, 431, 432, 435,
	1460, 1461, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1462, 279, 1222, 478, 479, 1463, 671, 480, 672, 482,
	483, 1464, 0, 484, 0, 1465, 1466, 486, 487, 488,
	1467, 1468, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1469, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 1470, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 1471, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 1472, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1473, 568, 569, 567, 570, 571, 572, 1474,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1475, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1476, 600, 601, 0, 597, 588,
	1477, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	1478, 610, 684, 685, 686, 687, 1479, 619, 1480, 611,
	612, 613, 688, 614, 689, 1481, 615, 616, 617, 618,
	0, 620, 621, 1482, 1483, 622, 623, 624, 626, 627,
	625, 628, 1484, 629, 1485, 0, 630, 631, 632, 690,
	691, 692, 1486, 634, 633, 635, 693, 636, 637, 1487,
	1488, 1489, 1490, 638, 639, 694, 640, 641, 642, 2615,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 2612, 287, 288, 0, 0,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 2613, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 2611, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 2614, 0, 0, 0, 0, 0, 0, 1130, 2610,
	0, 1090, 1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 239, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 241, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 1639, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 233, 638, 639, 694, 640, 641,
	642, 1104, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	1898, 1896, 0, 0, 1128, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 239, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 241, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 1639, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 233, 638, 639, 694, 640, 641,
	642, 1104, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	1898, 3253, 0, 0, 1128, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 239, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 241, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 1639, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 233, 638, 639, 694, 640, 641,
	642, 1104, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	1898, 1896, 0, 0, 1128, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 2746, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 2751, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 2747, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	2748, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 2660, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 0, 0, 0, 0,
	0, 0, 0, 1130, 2658, 0, 2657, 1128, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 0, 0,
	0, 0, 0, 0, 0, 1130, 2655, 0, 2654, 1128,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	0, 0, 0, 0, 0, 0, 0, 1130, 2652, 0,
	2651, 1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 0, 0, 0, 0, 0, 0, 0, 1130,
	2649, 0, 1739, 1128, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 1738, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 1093, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 1108, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 4731, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 1108, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 2492, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 2491,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	1108, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 0, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 4466, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 1108, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 4055, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 1967, 0, 0, 0, 0, 0, 0, 1130,
	0, 0, 0, 1128, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 3766, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 1967, 0, 0,
	0, 0, 0, 0, 1130, 0, 0, 0, 1128, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 2751, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 0, 0, 0, 0, 0, 0, 0, 1130,
	1896, 0, 2756, 1128, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 2754, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 2742, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 2730, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 2728, 0, 2719, 2726, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 2722, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 2723, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 2724, 445,
	2721, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 2725, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 2720, 642, 1104, 0, 0, 2716, 0, 2719,
	2726, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 2722, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 2723,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 2724, 445, 2721, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 2725,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 2720, 642, 1104, 0, 0,
	0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 0, 0, 0, 0, 0, 1904, 0, 1130,
	0, 0, 0, 1128, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 2471, 287,
	288, 0, 0, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 2435, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 2409, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 1744, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 1673, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 1668, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	1655, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 1650, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 1551, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1550, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 1545,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1544, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 1538, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 1352, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 4780, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 4779, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 4778, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 4780, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 4779, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 0, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 4401, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 4402, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 4400, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	0, 0, 1146, 1118, 1119, 1120, 3220, 3221, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120, 3218,
	3219, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 0, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 0,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 2479, 2480, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 0, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 2738, 0, 0, 0, 0, 0, 0, 2736,
	2737, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 0, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 0, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	3213, 3214, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 0, 0, 0, 0, 0,
	0, 0, 2149, 2150, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 0, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 4780, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	0, 1173, 0, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 0, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 4779, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 1090, 0,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 0, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 1169, 0, 305, 649, 650, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 666, 667, 0, 668,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1254, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 0,
	279, 1222, 478, 479, 0, 1174, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 1260, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 1262, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 239, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 0, 597, 588, 241,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 1639, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 233, 638, 639, 694, 640, 641, 642, 1268, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 1258, 0, 1991, 0, 0,
	1170, 0, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	1169, 0, 305, 649, 650, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 666, 667, 0, 668, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1254, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 0, 279, 1222,
	478, 479, 0, 1174, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1260, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 1262, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 0, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 1639, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 3377, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1258, 0, 1991, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1170, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 1169, 0, 305, 649, 650, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1254,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 279,
	1222, 478, 479, 0, 1174, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 1260, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 1262, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 1250, 0,
	1268, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1170, 0, 1258, 0, 1256, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 1169, 0, 305, 649, 650, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 666, 667, 0, 668,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1254, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 0,
	279, 1222, 478, 479, 0, 1174, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 1260, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 1262, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 1268, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1170, 0, 1258, 0, 1256, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 1169, 0, 305, 649, 650, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1254, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 279, 1222, 478, 479, 0, 1174, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 1260, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 1262, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 1268, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1170, 0, 1258, 0, 1256, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 1169, 0, 305, 649, 650, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 666, 667,
	0, 668, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 279, 1222, 478, 479, 0, 1174, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 1268, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1170, 0, 0, 0, 4221,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 1169, 0, 305, 649, 650,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 666,
	667, 0, 668, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 0, 279, 1222, 478, 479, 0, 1174, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	1262, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 274, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 2583, 2584, 2585, 2602, 2603, 2604, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 2605, 0, 643, 0, 0, 0, 0, 289, 290,
	1888, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 1873, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 2595, 0, 316, 317, 318, 315, 319,
	0, 320, 2591, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 2596, 2597,
	2598, 2599, 371, 372, 373, 658, 0, 0, 2590, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 2600, 2601, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 2593, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 2594,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 1872, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 1565, 2580,
	2581, 2582, 2606, 2592, 2586, 0, 2588, 2589, 2587, 2574,
	2575, 2576, 2577, 2578, 2579, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 1492, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1213, 407, 666, 667, 0, 668, 0, 409,
	410, 1215, 669, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 0, 0, 1222,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 1639, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 0, 0, 234, 1636,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 193, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 1492, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 0, 1222, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 239, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	241, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 1639,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 233, 638, 639, 694, 640, 641, 642, 1565,
	1564, 234, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 193, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1492, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 0,
	1222, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1565, 1564, 0,
	0, 0, 0, 1562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 1663, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	1492, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1213, 407, 666, 667, 0, 668, 0, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 0, 0, 1222, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1565, 1564, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 3676, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 1492, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1213,
	407, 666, 667, 0, 668, 0, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 0, 0, 1222, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 2350, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1565, 2258, 0, 0, 0, 0, 2259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 1663, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 1492, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1213, 407, 666,
	667, 0, 668, 0, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 2257, 423, 422, 0, 424, 670,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 0, 0, 1222, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1565, 1564, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	1663, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 1492, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 0, 1222, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	1090, 0, 274, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 1645, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 239, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 241, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	1639, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	274, 0, 0, 233, 638, 639, 694, 640, 641, 642,
	0, 0, 234, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 193,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 1268, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1170, 0, 0, 0, 2005, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 1169, 0, 305, 649, 650, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 279, 1222, 478, 479, 0, 1174, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 274,
	3116, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 274, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 4949, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 274, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 3626, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 274, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 1633, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 274, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 3104, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 274, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	3791, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	920, 0, 821, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 2337, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 828, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 918, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 826, 602, 603, 604, 605, 606, 827, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 821, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 2076, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 831, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 828,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 2075,
	563, 564, 565, 566, 0, 2077, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 826, 602, 603, 604, 605, 606, 827, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	2074, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 821, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 2027, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 831, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	828, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	2026, 563, 564, 565, 566, 0, 2028, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 826, 602, 603, 604, 605, 606, 827,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 2025, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 819, 0, 821, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 831, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	828, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 826, 602, 603, 604, 605, 606, 827,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 2049, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 831, 0, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 0, 2055,
	0, 297, 2045, 298, 2061, 0, 2068, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 2071, 2072, 0,
	0, 306, 307, 0, 0, 1492, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	1193, 338, 340, 2059, 2058, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 2057, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 2066, 2067, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1213, 407, 2052, 2053,
	0, 2048, 0, 409, 410, 1215, 0, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 0, 1222, 478, 479, 0, 0, 480, 2060,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 1223, 491, 1224, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 2042, 505, 506, 507, 2043,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 2056,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 0, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 2054, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 2070, 591, 592,
	593, 594, 0, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 2062, 2063, 2064, 2065, 0, 619, 0,
	611, 612, 613, 0, 614, 0, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	0, 2046, 2069, 0, 634, 633, 635, 0, 636, 637,
	0, 0, 0, 0, 638, 639, 0, 640, 641, 642,
	821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 2036, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 828, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 826,
	602, 603, 604, 605, 606, 827, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 821, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	831, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 828, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 2388, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 2389, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	826, 602, 603, 604, 605, 606, 827, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 2390, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 831, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 1565, 1564, 0, 0,
	0, 0, 1562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 831, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1492,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 0, 1222, 478, 479,
	3987, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1565, 1564, 0, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 1492, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1213, 407,
	666, 667, 0, 668, 0, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 0, 0, 1222, 478, 479, 3587, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1693, 0, 1565, 1564, 0, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 1492, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 1692, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1213, 407,
	666, 667, 0, 668, 0, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 0, 0, 1222, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 1691,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 1690, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1558, 0, 1565, 1564, 0, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 1492, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1560, 664, 665, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1213, 407,
	666, 667, 0, 668, 0, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 0, 0, 1222, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1565, 1564, 0, 0, 0, 0, 1562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 1492, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1213, 407, 666, 667,
	0, 668, 0, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 0, 1222, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1565, 1564, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 1492, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1213, 407, 666, 667, 0, 668,
	0, 409, 410, 1215, 669, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 0,
	0, 1222, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 1565, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 1492, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 0, 1222, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	2908, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 2905, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	2912, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 3129, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 2911, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	3126, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 3128, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 3125, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 2910, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 3127, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 2908, 306, 307, 652, 0, 0, 2902, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 2905, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 2912, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 2911, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2901, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 2910,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 2909, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1770, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 1769, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 1768,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 1771, 555, 562,
	563, 564, 565, 566, 0, 1767, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 1765, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 1766, 633, 635, 693, 636,
	637, 1496, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1498, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 1260, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1493, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1495, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 1260, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1399, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1401, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 1260, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 726, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 725, 285, 286, 715, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 718, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 719, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 720, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 714, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 715, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 718, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 719, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 720, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 715, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 718, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 719, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 720, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 715,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 718, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 3998, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 720, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 1260, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 3535, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 3074, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3073,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 2357, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 2293, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 2300, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	2299, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 2286, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	2288, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 2251, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 1260, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1611, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1610, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1513, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1506, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1508, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1335, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1334, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1325, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1324, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1322, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1321, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1317, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1316, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 696, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 265, 0, 274,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 718,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 719, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 720, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 2397, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 2395,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	2393, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 2306, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 2100, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 2094,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 905, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 904, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 903, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 3129, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 4298, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1363, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 1366, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 1364, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 786, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 785,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 784, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 1367, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 782,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1363, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 1366, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 1364, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 786, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 785,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 784, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 1367, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 782,
	685, 686, 687, 0, 619, 0, 611, 1365, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 705, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 704, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 703, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 274, 3116, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 274, 4308, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 4593, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 4194, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	3953, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 2791, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 274, 3116, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 3113, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 2217, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 785, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 784, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 782, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 2367, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 2355, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1666, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1659, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 776, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 772, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 777, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 786, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 785,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 784, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 1644, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 782,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1617, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1616, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1601, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1599, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1594, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1571, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1569, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1556, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1518, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1501, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1369, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 785,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 784, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 782,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1340, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1339, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1331, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1330, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 1284, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 791, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 776, 0,
	274, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	772, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	771, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 777, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 786,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 785, 547, 548, 549, 550, 773, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 784, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 774, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 782, 685, 686, 687, 0, 619, 0, 611, 778,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 765, 0,
	274, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 766, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 728, 0,
	274, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 722, 0,
	274, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 700, 0,
	274, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3646, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 3573, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3551, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 3548, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3500,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	3498, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 3484, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 3084, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 766, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 2324, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 0, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1302, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 1233, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	0, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 0, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 0,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 0, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1607, 0, 1347, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	0, 0, 0, 0, 306, 307, 0, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 1349, 333, 334,
	335, 336, 337, 0, 338, 340, 0, 0, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 1606, 0, 0,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 0, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	0, 480, 0, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 0, 0,
	491, 0, 0, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 0, 508, 509, 510, 0, 511, 0, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 0, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 0, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1350, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 0, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	0, 591, 592, 593, 594, 0, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 0, 0, 0, 0,
	0, 619, 0, 611, 612, 613, 0, 614, 0, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 0, 1521, 0, 1347, 634, 633, 635,
	0, 636, 637, 0, 0, 0, 0, 638, 639, 0,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 0, 0, 0, 0, 306, 307, 0, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 1349, 333,
	334, 335, 336, 337, 0, 338, 340, 0, 0, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 1520, 0,
	0, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 0, 0, 0, 0, 0, 409, 410, 0,
	0, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 0, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 0, 480, 0, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 0,
	0, 491, 0, 0, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 0, 508, 509, 510, 0, 511, 0,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 0, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 0, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1350, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 0,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 0, 591, 592, 593, 594, 0, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 0, 0, 0,
	0, 0, 619, 0, 611, 612, 613, 0, 614, 0,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 0, 1345, 0, 1347, 634, 633,
	635, 0, 636, 637, 0, 0, 0, 0, 638, 639,
	0, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 0, 0, 0, 0, 306, 307, 0, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 1349,
	333, 334, 335, 336, 337, 0, 338, 340, 0, 0,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 1344,
	0, 0, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 0, 0, 0, 0, 0, 409, 410,
	0, 0, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 0, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 0, 480, 0, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	0, 0, 491, 0, 0, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 0, 508, 509, 510, 0, 511,
	0, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 0, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 0, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1350, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	0, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 0, 591, 592, 593, 594, 0, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 0, 0,
	0, 0, 0, 619, 0, 611, 612, 613, 0, 614,
	0, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 0, 2114, 0, 1347, 634,
	633, 635, 0, 636, 637, 0, 0, 0, 0, 638,
	639, 0, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 0, 0, 0, 0, 306, 307, 0,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	1349, 333, 334, 335, 336, 337, 0, 338, 340, 0,
	0, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 0, 0, 0, 0, 0, 409,
	410, 0, 0, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 0, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 0, 480, 0, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 0, 0, 491, 0, 0, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 0, 508, 509, 510, 0,
	511, 0, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 0, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 0, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1350, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 0, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 0, 591, 592, 593, 594, 0, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 0,
	0, 0, 0, 0, 619, 0, 611, 612, 613, 0,
	614, 0, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 0, 2081, 0, 1347,
	634, 633, 635, 0, 636, 637, 0, 0, 0, 0,
	638, 639, 0, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 0, 0, 0, 0, 306, 307,
	0, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 1349, 333, 334, 335, 336, 337, 0, 338, 340,
	0, 0, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 0,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 0, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 0, 0, 0, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 0, 0, 0, 0, 0,
	409, 410, 0, 0, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 0, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 0, 480, 0, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 0, 0, 491, 0, 0, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 0, 508, 509, 510,
	0, 511, 0, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 0, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 0, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1350, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 0, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 0, 591, 592, 593, 594, 0,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	0, 0, 0, 0, 0, 619, 0, 611, 612, 613,
	0, 614, 0, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 0, 0, 0,
	1347, 634, 633, 635, 0, 636, 637, 0, 0, 0,
	0, 638, 639, 0, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 0, 0, 0, 0, 306,
	307, 0, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 1349, 333, 334, 335, 336, 337, 0, 338,
	340, 0, 0, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 0, 480, 0, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 0, 0, 491, 0, 0, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 0, 508, 509,
	510, 0, 511, 0, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 0, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 0, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1350, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 0, 591, 592, 593, 594,
	0, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 0, 0, 0, 0, 0, 619, 0, 611, 612,
	613, 0, 614, 0, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 0, 0,
	0, 0, 634, 633, 635, 0, 636, 637, 0, 0,
	0, 0, 638, 639, 0, 640, 641, 642, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 1854, 1848, 1819, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 1839, 0, 0, 0, 0, 1867, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 1858, 0, 1825,
	1868, 0, 0, 0, 0, 0, 0, 1847, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 1865, 0, 0, 0,
	0, 0, 0, 1834, 1835, 0, 0, 0, 1858, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 1847, 1849,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 1840, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1854, 1848, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	1841, 0, 0, 0, 1867, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 1872, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 1859, 1854, 1848,
	1819, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	1839, 0, 0, 0, 0, 1867, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 1857,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 4576,
	0, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	1857, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0,
	4575, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 0, 0, 0, 1858, 0, 1825, 1868, 0, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1865, 0, 0, 0, 0, 0, 0,
	1834, 1835, 0, 0, 0, 1858, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 1847, 1849, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 1840, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862,
	1863, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1854, 1848, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 1841, 0, 0,
	0, 1867, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 1872, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 1859, 1854, 1848, 1819, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 1839, 0, 0,
	0, 0, 1867, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 1857, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 4385, 0, 0, 0,
	0, 0, 1842, 1843, 1844, 1845, 0, 1857, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 4217, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	0, 1858, 0, 1825, 1868, 0, 0, 0, 0, 0,
	0, 1847, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1865, 0, 0, 0, 0, 0, 0, 1834, 1835, 0,
	0, 0, 1858, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 1847, 1849, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	1840, 1865, 0, 0, 0, 0, 0, 0, 1834, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 1854, 1848, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 1841, 0, 0, 0, 1867, 0,
	1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0,
	0, 1872, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 1859, 1854, 1848, 1819, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 1839, 0, 0, 0, 0, 1867,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 1857, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0,
	1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0,
	0, 0, 0, 4144, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 1857, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 4143, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 0, 0, 0, 1858, 0,
	1825, 1868, 0, 0, 0, 0, 0, 0, 1847, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 1858,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 1847,
	1849, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 1840, 1865, 0,
	0, 0, 0, 0, 0, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 1817, 1818, 0, 1850,
	1851, 1852, 1861, 1862, 1863, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1854, 1848,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 1841, 0, 0, 0, 1867, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 1872, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 1859, 1854,
	1848, 1819, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 1839, 0, 0, 0, 0, 1867, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	1857, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0,
	4142, 0, 0, 0, 0, 0, 1842, 1843, 1844, 1845,
	0, 1857, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0,
	0, 3796, 0, 0, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 1858, 0, 1825, 1868, 0,
	0, 0, 0, 0, 0, 1847, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 1865, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 0, 1858, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 1847, 1849, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 1840, 1865, 0, 0, 0, 0,
	0, 0, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 1854, 1848, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 1841, 0,
	0, 0, 1867, 0, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 0, 1872, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 1859, 1854, 1848, 1819, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 1839, 0,
	0, 0, 0, 1867, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 1857, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 1838,
	1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823,
	1824, 1826, 1827, 0, 0, 0, 0, 3295, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 1857, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 3294, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 0, 1858, 0, 1825, 1868, 0, 0, 0, 0,
	0, 0, 1847, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 1865, 0, 0, 0, 0, 0, 0, 1834, 1835,
	0, 0, 0, 1858, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 1847, 1849, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1840, 1865, 0, 0, 0, 0, 0, 0, 1834,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1854, 1848, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 1841, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 1859, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 3293, 0, 0, 0, 0, 0,
	1842, 1843, 1844, 1845, 0, 1857, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 0, 0, 0, 0, 3292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 1847,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 1865, 0,
	0, 0, 0, 0, 0, 1834, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1817, 1818, 0, 1850, 1851, 1852,
	1861, 1862, 1863, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 1854, 1848, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1866, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 1855, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1845, 0, 0,
	0, 1841, 0, 0, 1825, 4856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1818,
	0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1848, 0, 1858, 0, 0, 1868, 0, 1820, 0,
	0, 0, 0, 1847, 1849, 0, 0, 1867, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 1865, 0, 1873, 0, 0, 0, 0, 1834,
	1835, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 1856, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828,
	1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 1866, 3257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 1842, 1843,
	1844, 1845, 0, 0, 0, 0, 0, 1870, 1825, 0,
	3357, 0, 0, 0, 0, 3356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 1847, 1849, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 1865, 0, 0, 0,
	0, 0, 0, 1834, 1835, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 1840, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1848, 0, 0, 1872, 0, 3228, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	1855, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837,
	1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826,
	1827, 3229, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 2764, 0, 1859, 0, 0, 0,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1848, 0, 1858, 1872, 2763, 1868,
	0, 1820, 0, 0, 0, 0, 1847, 1849, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 1865, 0, 1873, 0, 0,
	0, 0, 1834, 1835, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	1856, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821,
	1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 0, 0,
	1870, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	1858, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	1847, 1849, 0, 1854, 1848, 1846, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 1864, 0, 1865,
	1867, 0, 0, 0, 0, 0, 1834, 1835, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 1856, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1839, 0, 0, 1840,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 0, 1846,
	1858, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	1847, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 1864, 0, 1865,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 1856, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 1854, 1848, 0,
	1872, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1866, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1855, 1087, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 1841, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1848, 0, 1858, 0, 0, 1868, 0, 1820,
	0, 0, 0, 0, 1847, 1849, 0, 0, 1867, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1865, 0, 1873, 0, 0, 0, 0,
	1834, 1835, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 1856, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 1870, 1825,
	0, 0, 0, 0, 0, 0, 3363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1818, 0, 1850, 1851, 1852, 1861, 1862, 1863, 1858, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 1847, 1849,
	0, 1854, 1848, 1846, 0, 0, 3358, 0, 0, 1820,
	0, 0, 0, 0, 0, 1864, 0, 1865, 1867, 0,
	0, 0, 0, 0, 1834, 1835, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 1856, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1839, 0, 0, 1840, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3777, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 1842,
	1843, 1844, 1845, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 0, 1846, 1858, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 1847, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 1864, 0, 1865, 0, 0,
	0, 0, 0, 0, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 1856, 1817, 1818, 0, 1850, 1851, 1852, 1861,
	1862, 1863, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 1854, 1848, 0, 1872, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1866, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 1855, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 0, 0, 0,
	1841, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1848, 0, 1858, 0, 3296, 1868, 0, 1820, 0, 0,
	0, 0, 1847, 1849, 0, 0, 1867, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 1865, 0, 1873, 0, 0, 0, 0, 1834, 1835,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 1856, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 1832, 1838, 1860, 1837, 1833, 0, 1830, 1828, 1829,
	1821, 1822, 1823, 1824, 1826, 1827, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 0, 1870, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 3323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1818, 0,
	1850, 1851, 1852, 1861, 1862, 1863, 1858, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 1847, 1849, 0, 1854,
	1848, 1846, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 1864, 0, 1865, 1867, 0, 0, 0,
	0, 0, 1834, 1835, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	1856, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1839, 0, 0, 1840, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 1842, 1843, 1844,
	1845, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1832, 1838, 1860, 1837, 1833,
	0, 1830, 1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827,
	0, 0, 0, 0, 0, 1846, 1858, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 1847, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 1864, 0, 1865, 0, 0, 0, 0,
	0, 0, 1834, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	1856, 1817, 1818, 0, 1850, 1851, 1852, 1861, 1862, 1863,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 1854, 1848, 0, 1872, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1866, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 1855,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1843, 1844, 1845, 0, 0, 0, 1841, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1818, 0, 1850, 1851,
	1852, 1861, 1862, 1863, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1848, 0,
	1858, 0, 0, 1868, 0, 1820, 0, 0, 0, 0,
	1847, 1849, 0, 0, 1867, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 1865,
	0, 1873, 0, 0, 0, 0, 1834, 1835, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 1856, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2339, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 1832,
	1838, 1860, 1837, 1833, 0, 1830, 1828, 1829, 1821, 1822,
	1823, 1824, 1826, 1827, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 1870, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 1847, 1849, 0, 0, 0, 1846,
	0, 970, 0, 1019, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1865, 0, 0, 0, 0, 0, 0,
	1834, 1835, 1841, 0, 0, 0, 0, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 993, 0, 976, 975, 0, 0, 1859,
	0, 0, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 0, 977, 0, 0, 0, 0, 980, 0,
	1872, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	0, 0, 990, 991, 0, 0, 0, 0, 0, 1866,
	0, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	982, 0, 0, 0, 0, 0, 983, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 984, 0,
	0, 0, 1857, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 1831, 1832, 1838, 1860, 1837, 1833, 0, 1830,
	1828, 1829, 1821, 1822, 1823, 1824, 1826, 1827, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 1018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 986, 0, 1841, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 987, 988, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 994, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 1005, 0, 1872, 1025, 1024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1027, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1838, 1860,
	1837, 1833, 0, 1830, 1828, 1829, 1821, 1822, 1823, 1824,
	1826, 1827, 0, 0, 0, 0, 0, 981, 0, 0,
	1029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 0, 0, 0, 1012, 1013, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1022, 1010, 0, 0, 0, 0,
	0, 0, 0, 1028, 1006, 0, 0, 999, 997, 0,
	1002, 0, 0, 0, 0, 0, 1003, 0, 0, 972,
	0, 1023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1014, 0, 1004, 0, 0,
	0, 0, 0, 1001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1026, 0, 0, 0, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1011,
}

var sqlPact = [...]int{
	7159, -1000, -1000, -1000, -1000, 184, -1000, -1000, 180, 178,
	177, 176, 175, 174, 173, 172, 171, 169, 167, -1000,
	-1000, -1000, -1000, -1000, -1000, 166, -1000, -1000, 165, -1000,
	164, 163, 161, -1000, -1000, 159, -1000, 157, -1000, -1000,
	-1000, -1000, 156, 155, 152, 91945, 91385, 92496, 2359, 115866,
	99144, 2369, 81359, 115306, 80799, 114746, 2189, 10508, 114186, 2800,
	147, -1000, 113626, 145, 142, 141, -1000, 113066, -1000, 1899,
	-1000, 140, -1000, 6438, 70710, 139, 138, 137, 136, 2324,
	130, -1000, 129, 128, -1000, -1000, 127, -1000, 9753, 1554,
	-1000, 124, 123, -1000, 366, 96913, 122, 121, 117, 2673,
	114, 111, 69048, 109, 108, 106, 2570, 2979, -1000, -1000,
	2177, -1000, -1000, 105, 104, 103, 102, 99, 97, 96,
	93, 92, 90, 88, 87, 85, -1000, 84, 81, 78,
	76, 75, -1000, 70, 69, 68, -1000, 67, -1000, 66,
	64, 59, 56, 55, 52, 51, 47, 46, 37, 33,
	32, 31, 30, 133719, -1000, -1000, 29, 1912, 1712, 1706,
	1705, 1704, 1700, 971, 28, 26, 24, 23, 21, 20,
	19, 18, 17, 16, 15, 14, 13, 10, 9, 6,
	5, 4, 146, 3, 1, -1, -2, -10, -11, -12,
	4923, -1000, 1883, 1148, 33053, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 123580, 116417, -15, -79, -17, -1000, 3413,
	1024, 57226, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	296, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 458, 2175, 737,
	-1000, -1000, -1000, 112515, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2356, -32, -1000, 2070, -1000, -1000, -1000, -1000,
	-1000, 735, -1000, 2355, 336, 2257, -1000, -1000, -1000, 3486,
	2506, 3877, 3876, 3874, 3872, 3871, 123029, 1824, 3869, 2588,
	3867, 3864, 3863, 3862, 3860, 3859, 3858, -1000, 90825, 1044,
	90265, 89705, 3498, 111964, 89145, 111404, 125793, 49213, 1053, 3484,
	-1000, -1000, -1000, -1000, -1000, -1000, 116417, -1000, 1042, -1000,
	-1000, 3856, 2088, 733, 98584, -1000, -1000, 110844, 1753, -1000,
	-1000, -1000, 912, 1184, 34772, 34772, 34772, 290, -1000, -1000,
	-1000, -1000, -1000, -1000, 3855, 3854, 3852, 3849, 3847, -1000,
	-1000, 80239, 25989, 79679, 79119, 110284, 25419, 88585, 88025, 3844,
	3843, 3842, 109724, 125242, 3592, 3590, 1038, 2066, 1467, -1000,
	-1000, -1000, -1000, -1000, -1000, -40, 72938, 3624, 116417, -1000,
	289, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 48640, 996,
	48067, 582, 47494, 413, 109164, -1000, -1000, -1000, -1000, 75220,
	-1000, 108604, 2451, 3840, 3839, 1153, 3838, 3373, 1804, 3837,
	1851, 1240, 3836, 3833, 3825, 3824, 3823, 3822, 3821, 1465,
	108044, 3038, 1526, 107484, 1790, 124691, 1035, 87465, 92496, 2719,
	106924, 1295, 1291, -1000, -1000, -1000, -1000, 3207, 2964, 2933,
	1296, -1000, -1000, -1000, -1000, 60617, 7801, 2263, -1000, -1000,
	11121, 106364, 63457, 92496, 92496, -1000, -1000, -1000, -1000, -1000,
	-1000, 46921, 443, 46348, 1019, 105804, -1000, -1000, 61185, 2975,
	-1000, -1000, -1000, -1000, -1000, 105244, 45775, 369, 45202, 988,
	116417, -1000, 3037, 1979, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2754, 1707, 3635, 2823, 74650, 2182, 1394, 3443,
	3197, 3196, 1508, 2055, 3195, 3817, 2675, 3191, 3178, 3173,
	3131, 3129, 1656, 2662, 583, 2652, 32480, 3022, 1685, 44629,
	1643, 1500, 3126, 3108, 3652, 2048, 2013, 2104, 78559, 3815,
	3805, 3398, 3106, 3097, 2874, 3090, -1000, 2972, 1460, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1464, -1000, -1000, -1000,
	-1000, -1000, 83012, -1000, -1000, 1747, -1000, -1000, 1747, -1000,
	-1000, -1000, -1000, -1000, 1264, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1883, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2274, -1000,
	2068, -1000, -1000, 2571, 3395, 3395, 3395, 3483, 448, 447,
	-1000, 146, -1000, -1000, 133300, -1000, -1000, 49786, 49786, 49786,
	49786, 49786, 49786, 49786, 49786, 2200, -1000, 732, -1000, -1000,
	770, -1000, 731, 650, 595, -1000, -1000, -1000, -1000, -1000,
	-1000, 730, -1000, -1000, -1000, -1000, -1000, -1000, 3624, -1000,
	28909, -1000, -1000, -1000, 310, 726, 49786, -1000, -1000, 3669,
	3668, 933, -1000, 279, 939, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3036, 715, 714,
	-1000, 713, 712, 711, 708, 704, -1000, 703, -1000, 702,
	701, 700, 699, 689, 684, 683, 681, -1000, 2073, -1000,
	-1000, -1000, -1000, -1000, -1000, 639, 638, 638, 638, -1000,
	1029, -1000, -1000, -1000, 300, 637, 299, 636, 635, 634,
	-1000, 679, 678, 676, 674, 673, 669, 659, 655, 653,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1026, -1000, -1000,
	-1000, -1000, -41, 116417, -1000, 458, -41, -1000, -1000, 652,
	-1000, 37093, 37093, 37093, -1000, -1000, 2351, 49786, -1000, 2578,
	-1000, -28, -28, 883, 58909, -1000, 56084, 883, 280, 780,
	64576, -1000, 2970, -1000, -1000, 651, 258, -1000, -1000, -1000,
	-1000, 26557, 2969, 116417, 116417, 116417, 92496, 92496, 92496, 116417,
	3804, 3287, 49786, -1000, -1000, 70150, 127446, 93047, -1000, -1000,
	3573, 71268, 69599, 127446, 3030, 126895, 3799, -1000, -1000, -1000,
	-1000, -1000, 3248, 3790, 3789, 3786, -1000, 116417, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 230, 3247, -1000, -1000, 96353,
	230, 3246, -1000, 230, 3245, -1000, 95802, -1000, -1000, 2271,
	3243, -1000, -1000, 250, 3242, -1000, -1000, -1000, 238, 3240,
	-1000, -1000, 243, -73, 3238, -1000, -1000, -1000, -1000, -1000,
	-1000, 133300, -1000, -1000, -1000, 126344, -1000, 3417, -1000, 116417,
	-1000, 49786, -1000, -1000, 3572, 1647, 3424, 3520, -1000, -1000,
	-49, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2567, 2553,
	1135, 2372, -1000, 3296, 1379, 34772, 3361, -1000, -1000, -1000,
	-1000, -1000, 239, 26557, -1000, -1000, -1000, -1000, -1000, -1000,
	3580, 3235, 1567, -1000, 2368, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2110, 3234, -1000, 2196, 3223, 2108,
	-1000, -1000, 2310, -1000, 3405, -1000, -1000, 2037, 3206, -27,
	-1000, -1000, 2388, -1000, -1000, -1000, -1000, 1994, -1000, 1320,
	3171, -1000, 2820, 2820, 86905, 3186, 62889, 61185, 72938, -45,
	-1000, -1000, -1000, -1000, -116, -1000, 24845, 133300, -1000, -1000,
	-1000, -1000, 1911, 133300, 891, -1000, -1000, 3169, -1000, 133300,
	861, -1000, -1000, 3168, -1000, 2660, -1000, 3029, -1000, -1000,
	2458, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2455,
	-1000, -1000, 3782, -1000, -1000, 3781, -1000, 3780, 3779, 3778,
	-1000, 1614, 2058, 3774, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 86354, 2349, -1000, -1000, 85234, 3028, -1000, 2454,
	3519, -1000, 85794, 1032, -1000, 977, 2453, -1000, 95251, 974,
	2450, -1000, 3773, 3495, 2770, 977, 2448, -1000, -1000, -1000,
	-1000, -1000, 833, -1000, 66812, -1000, 66812, -1000, 1635, -1000,
	122478, -28, 92496, 3624, -1000, -76, -1000, -1000, -1000, 1024,
	-1000, 60044, -1000, 60044, 98024, 75788, 947, 738, 68487, 133036,
	-1000, 999, -1000, -1000, 133300, -1000, -1000, -1000, 2659, -1000,
	-148, 2817, -1000, 75788, 62321, 2654, -1000, 133300, -1000, -1000,
	-1000, -1000, 133300, -1000, -1000, -1000, 75788, 85234, -1000, 104684,
	84683, -1000, -1000, 1421, 2642, -1000, -1000, -1000, 75788, 1328,
	75788, 75788, 75788, -1000, 104124, -1000, -1000, 2102, 1544, 3404,
	2100, 92496, -1000, 2010, -1000, -1000, -1000, 3429, 3184, 116417,
	-1000, -1000, 3024, -1000, 72387, 94700, -1000, 94149, -1000, 93598,
	-1000, 92496, -1000, 92496, -1000, 3772, 3771, 3769, -1000, -1000,
	3768, -1000, 3767, 3422, -1000, 984, 44056, 133300, 3421, -1000,
	3766, 2011, 3022, 133300, -1000, 3182, 1717, 1708, 116417, -1000,
	-1000, 116417, -1000, 116417, -1000, -1000, -1000, 1585, -1000, -1000,
	2546, -1000, -1000, -1000, -1000, 92496, 92496, 92496, 92496, 1528,
	-1000, 43483, -1000, -1000, 3124, 3763, 1684, -1000, 1900, -1000,
	2968, 3427, -1000, 1415, 1732, -1000, -1000, 254, -1000, -1000,
	-49, -1000, 121927, -1000, 2571, -1000, 116417, -1000, 2555, 3007,
	3021, 1715, 2328, 2669, -1000, 42910, 2621, 53224, 2366, 146,
	-1000, -1000, 146, 146, 34199, -1000, -1000, 71268, 71268, 26557,
	1275, 49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786,
	49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786,
	49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786, 49786,
	49786, 49786, 49786, 49786, 49786, 49786, 49786, 2386, 49786, 1262,
	49786, 49786, 49786, 49786, 2304, -1000, -1000, 2005, 515, 2054,
	650, -1000, -1000, -1000, 3615, 3615, 3615, 294, 294, 294,
	5548, 5548, 528, 3762, 770, -1000, 49786, -1000, 101, 59467,
	49786, 27127, -1000, 447, 11264, 2519, -1000, 446, 27729, -1000,
	-1000, -1000, 28909, 595, 42308, 49786, 1010, 133300, -1000, -1000,
	1332, 3636, 24271, 3049, 2864, 649, 825, 823, 31878, 31276,
	30674, 30072, 821, 806, 49786, 49786, 49786, 49786, 49786, 49786,
	49786, 49786, -1000, -1000, 3641, -1000, 3636, -1000, -1000, -1000,
	-1000, 3636, 1274, 1270, 3636, -1000, 3636, 3636, 8233, 8233,
	41735, 41162, 40589, 53797, 40016, 49786, 29499, 39443, 38870, -1000,
	116417, -41, 3569, 49786, 331, -1000, 131540, -1000, 331, 331,
	648, -84, 133300, 2783, 2783, 57787, 2452, 2220, 2220, 2220,
	-1000, 883, 19071, 883, 102464, 2225, 883, 883, 219, 305,
	444, 55516, 2578, 102464, 757, 646, -21, -22, -23, -1000,
	-1000, -24, -25, -1000, -1000, 92496, 645, 27127, 26557, 217,
	1997, -89, 2687, 2683, -1000, 2681, 2679, -1000, 2674, 2347,
	-1000, -1000, 1784, -91, 1261, 92496, 116417, 1290, 3761, -86,
	-1000, 7266, -92, -1000, 1343, 215, 3636, -1000, -1000, -1000,
	-1000, -1000, 3759, 3755, -1000, 1021, 644, 640, 424, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 639, 638, 638,
	638, -1000, 300, 637, 299, 636, 635, 634, -1000, -1000,
	-1000, -1000, -1000, 2967, 92496, 116417, 1287, 3745, -73, 93047,
	-55, -1000, -1000, 116417, -1000, -1000, -1000, 3744, -1000, 92496,
	-1000, -1000, 92496, 230, 3167, -1000, 92496, -1000, 92496, 227,
	3164, -1000, -1000, 116417, -1000, 92496, 92496, -1000, 116417, 116417,
	116417, 127446, 127446, 225, -1000, 92496, 870, -94, 1161, -49,
	-1000, -1000, -1000, -1000, 1747, -1000, 1943, -1000, -1000, -1000,
	-1000, -1000, -1000, 1445, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 933, -1000, -1000, -1000, -1000, -1000, -1000, 3627,
	3621, -42, -1000, -1000, 26557, -1000, -51, 1655, 1882, 1260,
	-1000, 77999, 2413, 3406, 3741, 2764, 3386, 1634, -1000, 1565,
	-1000, 3501, 83012, 3532, 3547, 1327, -1000, 2963, -1000, -1000,
	910, 1668, 1726, 1258, 1257, 83012, 2196, -1000, 71268, -1000,
	2734, 3482, 1377, 1374, 1377, 1377, 1396, -1000, 83012, 1722,
	1256, 1255, 1254, -1000, -1000, 1937, 1927, -1000, -1000, 103573,
	-1000, 1252, 1250, 3585, 2274, 2155, 807, 1913, -1000, -52,
	3516, 3546, 1310, -1000, 2962, 1246, -1000, -1000, -1000, 3481,
	92496, 26557, 1589, 1575, 1560, 1720, 1243, -43, -1000, 3529,
	1242, 1241, -1000, 1048, 2547, 3340, -1000, 127446, 1048, 1048,
	2096, 3162, 2807, 1710, -1000, 2814, 815, 2813, -1000, -1000,
	-1000, 815, -45, 72938, 116417, 214, -1000, 101, 49786, 49786,
	101, 49786, 101, -1000, 3510, 3159, 3157, -1000, -1000, -1000,
	-1000, -1000, 3740, 2030, 2583, -1000, -1000, 631, 2447, 2961,
	116417, 2708, -46, 92496, -1000, 71836, 3156, 127446, 2196, 2445,
	-1000, -1000, 84123, -1000, 3155, 458, 2444, -1000, 709, 3739,
	3154, -1000, 121376, -1000, 3417, 1229, 3151, 1092, 778, 3567,
	-1000, 778, 67371, -1000, 116417, -1000, -28, 261, 76897, -99,
	-100, 437, -1000, 103022, 116417, 1091, 77448, 116417, 3350, 2036,
	1975, -1000, 961, 61185, -1000, 61185, -101, -1000, -148, 2812,
	1504, -1000, 947, 947, 815, -1000, 815, -1000, 92496, 3018,
	-1000, -1000, 75788, 947, 947, 947, -1000, -1000, -1000, -1000,
	3737, 3733, 3732, 3727, -1000, -1000, 976, 92496, 116417, 92496,
	-1000, -1000, 1702, -1000, 213, -1000, 127446, -1000, 127446, 116417,
	92496, -1000, 976, 116417, 976, 116417, 976, 116417, 976, 976,
	-1000, -1000, -1000, -1000, -1000, 101, -1000, -1000, 133300, -1000,
	49786, -1000, -1000, 1538, 3725, 1658, -1000, 3013, -1000, 3012,
	-1000, 8, -1000, -1000, 1837, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3724, 133300, -1000, 1892, -1000, -1000, -1000,
	-1000, 92496, 92496, 92496, 92496, 116417, 3339, -1000, 116417, 3337,
	92496, -1000, -1000, 83012, -1000, 2555, 3007, -1000, -1000, -1000,
	-1000, -1000, -1000, 1441, 2268, -1000, 2626, -1000, 1592, -1000,
	-1000, -1000, 133300, 54370, -1000, -1000, 133300, 1929, -1000, 52651,
	52078, -1000, -1000, 1779, 92496, 2718, -1000, 2718, -75, -1000,
	131356, 2623, 92496, -1000, -1000, -1000, -1000, -1000, 909, 1459,
	1459, 1277, 1277, 1277, 1277, 3514, 5045, 5206, 5233, 9728,
	9728, 6250, 6250, 6250, 6250, 6250, 9728, 1077, 294, 294,
	1077, 1077, 1077, 1077, 1077, 294, 294, 294, 9728, 9728,
	9728, 294, 5548, 133484, 10293, 49786, 49786, 1239, 1934, 515,
	9855, 49786, 10493, 10493, 10493, 10493, -1000, 1733, -1000, -1000,
	-1000, -1000, 2960, 626, 53797, 53797, -1000, -1000, -1000, -1000,
	28319, 49786, -1000, -1000, -1000, -1000, 38268, -1000, -1000, 130629,
	-323, 431, -1000, 212, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 430, -74, -34,
	-1000, 49786, 49786, 49786, 429, -1000, 209, 49786, 116417, -1000,
	17683, 755, -141, -1000, -106, 1425, -1000, 49786, -1000, -1000,
	1238, -1000, 1237, 1234, 1233, -1000, 625, 428, -1000, 203,
	-1000, 2211, 615, 607, 49786, -1000, -1000, -1000, -1000, -1000,
	130233, -1000, -1000, 130192, -1000, -1000, 129796, -1000, -1000, 129755,
	-1000, -1000, -1000, -1000, -1000, 132836, 16851, 16471, 15811, 9055,
	15073, 14625, -113, 420, -114, 411, 908, 906, 409, 408,
	407, -120, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -121, 397, -1000, 2953, -74, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 391, -1000, 389,
	-1000, 132652, -74, 387, 7821, -1000, 53797, 53797, 53797, 53797,
	-1000, 386, -1000, 131077, -1000, 132388, 37695, 37695, 37695, 383,
	132188, 49786, -74, -122, -1000, -129, -1000, -1000, 580, -130,
	1004, 37093, 56665, 26557, -1000, 1004, 1004, 49786, -1000, 49786,
	2649, -1000, -1000, -1000, -1000, 2648, 2479, 2783, 57787, -1000,
	-1000, -1000, -1000, 102464, -1000, 3624, 3043, -1000, 102464, -1000,
	-1000, 116417, 458, -1000, 102464, 102464, 26557, 883, -1000, 883,
	102464, 697, -1000, -1000, -1000, -1000, -1000, 382, 65137, -34,
	201, 26557, 977, -1000, -1000, 2724, 2724, 2724, 2724, 2724,
	92496, -1000, -1000, 127446, 1232, -47, -128, 2809, -1000, 3597,
	-1000, 2094, -1000, 71268, -1000, 769, 1076, 26557, -1000, -1000,
	-1000, 606, -1000, 3636, 3636, -1000, 3636, 127446, 2941, 249,
	2808, -1000, 205, 127446, 3715, -1000, -1000, 230, -1000, 92496,
	230, 230, -1000, 92496, 92496, 2271, -1000, 250, -1000, 238,
	-1000, -1000, -73, -1000, 998, 34772, -1000, 1747, -1000, -1000,
	1579, -1000, 2021, -1000, 1269, -1000, -1000, -1000, -1000, 34772,
	-1000, 2207, 116417, 116417, 92496, -1000, 116417, -1000, 2194, 127446,
	-1000, 2443, 120825, 2428, 71268, 116417, -1000, -1000, 604, 922,
	2620, 2603, 1089, 116417, 116417, 2602, 120274, 119723, -1000, 3714,
	116417, 2109, 49786, 3479, 2315, 2081, 101, 101, -1000, 101,
	101, 101, -1000, 603, 1363, 92496, 92496, 116417, 127446, 92496,
	2083, -1000, -1000, -1000, -1000, -1000, 83563, -1000, -1000, 3639,
	3638, -1000, 1377, -1000, -1000, -1000, 1377, 2196, 1921, 116417,
	127446, 92496, 127446, 119172, 118621, -1000, -1000, 1718, 116417, -1000,
	-1000, -1000, -1000, 1471, -1000, 807, 2154, 101, 101, -1000,
	101, 101, 101, 602, 26557, 2019, -1000, 3044, 116417, 3667,
	118070, 3666, 116417, 116417, 116417, 127446, 3390, 116417, 116417, 127446,
	-1000, 117519, 2547, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 74080, 1107, 116417, 1320, -1000, -1000,
	1713, 1231, 1228, 83012, 2106, 1701, 1829, 127446, 61185, 956,
	61185, 2777, -1000, -1000, 23697, -1000, 133300, 133300, -1000, 133300,
	-1000, 71836, 75788, 116417, -1000, 1031, 116417, 77448, 931, 3147,
	66253, -116, 947, 75788, 92496, -46, 2708, 116417, -1000, -1000,
	2196, 3138, 458, 2438, -1000, 127446, 3565, 3136, 600, 3713,
	3712, -1000, 92496, 2339, 2436, -1000, -1000, 116968, 3265, 807,
	116417, 1004, 57787, 1952, -1000, 64018, 1064, 116417, 1830, 131,
	-1000, -1000, -1000, -13, 116417, -1000, 777, -1000, -1000, 261,
	261, 947, -152, 598, -1000, 858, 853, 61753, 75788, -132,
	-1000, -1000, -1000, -1000, 2428, 92496, 116417, 1301, 2767, 116417,
	-135, -1000, 194, 596, 851, 849, -1000, 3046, -1000, -148,
	-1000, 75788, 961, 61185, 2926, 2925, -1000, -1000, 995, -1000,
	1304, 947, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -29, 1714, 116417, -73, -73, -60, -47,
	-1000, 976, -1000, 976, -1000, 976, -1000, -1000, -1000, 133300,
	-1000, -1000, -1000, 1641, 1640, 116417, -1000, -1000, 116417, -1000,
	26557, 116417, 92496, 26557, 92496, 3004, 2999, -1000, -1000, -1000,
	116417, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1120, -1000,
	1929, 2267, -1000, 595, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2529, -1000, -48, 34199, 885, -1000, -1000,
	92496, -30, 49786, 49786, 8953, 8853, 49786, 53797, 53797, -1000,
	49786, 8079, -1000, -1000, -1000, -1000, -1000, 2924, 594, 49786,
	71268, 7063, 5410, -1000, 381, 12647, 1077, -1000, 49786, -1000,
	581, -1000, 380, 36520, -1000, 131740, -44, -140, -1000, 19658,
	-74, -145, -1000, -1000, 768, -1000, 3262, -1000, 49786, 132004,
	2462, 2065, 1839, 1649, 3636, 3662, 23123, -1000, 67929, 1005,
	2237, 129359, -1000, -1000, -1000, -1000, 71268, 71268, 49786, 49786,
	-1000, 49786, 49786, 49786, -1000, -1000, -1000, 3636, 902, -1000,
	-1000, -1000, 902, -1000, -1000, 1377, -1000, 1377, -1000, 49786,
	-1000, -1000, 2921, 49786, -1000, 71268, 71268, 53797, 53797, 53797,
	53797, 53797, 53797, 53797, 53797, 53797, 53797, 53797, 53797, 53797,
	53797, 53797, 53797, 53797, 53797, 53797, 53797, 2577, 53797, 3613,
	3613, 3613, 1217, -1000, 2983, 2921, 49786, 49786, 71268, 377,
	373, 367, -1000, 49786, -74, -1000, -1000, 7819, 591, -1000,
	2515, -1000, 2861, -1000, 49786, -1000, -143, -1000, 2578, -1000,
	-1000, 2861, 2861, -146, 133300, 57787, 57787, -1000, 589, 49786,
	2645, -1000, -1000, 754, -321, -1000, 847, -1000, -1000, -1000,
	-1000, -1000, -1000, 846, -1000, 458, -1000, -1000, -1000, 193,
	102464, 102464, 751, -1000, -151, -1000, -1000, -153, -1000, 3564,
	364, 26557, -1000, 1004, 2927, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2671, -73, 127446, 127446, 1699, 2256, 3661, -1000,
	3637, 764, 749, 191, 3636, 362, 360, 357, -73, 127446,
	127446, 1683, 127446, -1000, -1000, -1000, 230, -1000, -1000, -1000,
	227, -1000, -1000, -1000, -1000, 2685, -1000, -49, -1000, -1000,
	-1000, 49786, -1000, -1000, 3396, 1226, 1224, -1000, -1000, -1000,
	2956, -1000, 3132, -1000, 2426, -1000, 1080, -1000, 2015, 49786,
	588, 2756, 587, 586, 3707, 2060, 3706, 1090, 3130, 2271,
	3123, 2271, -1000, -1000, -1000, 919, -1000, 133300, 2315, -1000,
	585, 579, -1000, -51, 1623, 1861, 1222, 994, -1000, -1000,
	-1000, -1000, 49786, 49786, 101913, -1000, 478, 3405, -35, -1000,
	-1000, -1000, 1679, 1221, 1220, -1000, -1000, -1000, -1000, 2196,
	1678, 1215, 1213, -1000, -1000, -1000, -1000, -1000, 2420, -1000,
	-1000, 3114, 992, -1000, 3064, 3063, 889, 116417, -1000, 985,
	-1000, -1000, -1000, -1000, 49786, -1000, -52, 1209, 3524, 2411,
	92496, -1000, 2271, 3112, 1201, -1000, 1199, -1000, -1000, -1000,
	3525, 3522, 1200, -1000, -1000, -1000, -1000, -1000, 73512, -1000,
	-1000, 1048, 116417, 127446, 92496, 1789, -1000, -1000, 81910, 82461,
	116417, 2807, -73, 815, -1000, 2565, 815, 956, 2914, -1000,
	2676, -1000, 980, 92496, 3705, 356, -154, -53, 71268, 3563,
	-1000, 2276, 630, 92496, 888, -1000, 3624, -1000, -1000, -1000,
	979, -1000, 3515, 92496, 3561, 3103, 977, 101, 92496, 3648,
	-1000, -1000, 3559, 92496, 3102, 2337, 2409, 2576, 807, 76346,
	977, 2228, -66, -1000, 1830, 35918, 3397, -156, -1000, -1000,
	-1000, 1004, 67371, 57787, 49786, 3702, -159, -1000, -1000, -1000,
	-1000, -1000, 99702, 99702, 75788, 75788, 75788, 947, 116417, 116417,
	77448, -1000, -1000, 561, 116417, 116417, 560, -1000, 116417, 116417,
	3701, 75788, 75788, 75788, -56, 559, -1000, 845, 842, 840,
	-1000, -1000, -1000, -1000, -1000, -1000, 837, 836, 961, -1000,
	-1000, -148, 61185, 101, -1000, 2244, 92496, -1000, 22549, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 976, -116, -1000, -1000,
	2159, 2321, 2159, 1818, 1811, -1000, -1000, 2262, -1000, -1000,
	-1000, -1000, 2710, 3403, 26557, 3504, 10493, 49786, 49786, 7264,
	1434, 483, 10493, 49786, 49786, 71268, 7874, -162, 49786, 49786,
	-1000, 49786, 748, 133300, -1000, 3658, 49786, 355, 354, -1000,
	-1000, -1000, 3632, -1000, -1000, -1000, 133300, 49786, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 353, -1000, 190, -1000, -1000,
	-1000, 124131, -1000, 49786, 351, 3477, -1000, 350, 349, 11927,
	6537, 129318, 128922, 128881, 345, -1000, -1000, 343, 342, 133300,
	2983, 133300, -1000, -1000, 1130, 1130, 1353, 1353, 1353, 1353,
	3613, 410, 727, 1017, 530, 530, 530, 672, 1217, 1217,
	530, 530, 530, 1217, 2913, 2580, 558, 6082, -1000, -1000,
	133300, 133300, 339, -1000, -1000, -1000, -74, 330, 7819, -1000,
	2859, 3475, 133300, -1000, 57787, 2859, 2859, -1000, -1000, 2479,
	116417, 133300, 57787, -1000, 3043, -1000, 20822, 20243, -1000, 26557,
	-1000, -1000, -1000, -1000, 3624, -1000, 65137, -1000, 557, -1000,
	186, -1000, 2927, -1000, 830, -1000, -1000, 75788, 75788, 2724,
	-73, -198, 116417, -1000, -1000, 747, 3699, 760, 26557, 328,
	-1000, -1000, -1000, -73, -73, 116417, -73, -1000, -1000, -1000,
	3349, 133300, 116417, 116417, 1314, 101362, 116417, 3101, -1000, 2286,
	-1000, 1089, 128485, 58348, -1000, 58348, 116417, -1000, -1000, -1000,
	-1000, 1916, 1673, 3698, 1151, -1000, 3432, 116417, -1000, 116417,
	-1000, -1000, -1000, 116417, 116417, 92496, 116417, -1000, 127446, 3082,
	-167, 133300, -57, -1000, 828, -1000, 1368, -1000, 21975, 116417,
	127446, 92496, 116417, 127446, 92496, 3100, 116417, 2185, -1000, -1000,
	3059, -1000, 3071, -168, 26557, -1000, 3657, 3656, 3099, 3436,
	-1000, 116417, 3654, 116417, 92496, 3348, -1000, -1000, -1000, -1000,
	-1000, -1000, 1671, 1193, 1179, 2332, -58, 2319, 2251, -60,
	2106, 956, -61, 554, -1000, 827, -1000, -1000, 826, -1000,
	956, -1000, 75788, 61185, 3697, 458, -1000, 2752, -1000, 97464,
	2338, 101, -1000, 3696, 100260, 553, -1000, 2242, -1000, 746,
	-1000, 2545, 127446, 2196, 101, 92496, -1000, -1000, 458, 322,
	-62, -1000, 3260, 1086, 26557, 92496, 3095, 2554, 807, 76346,
	-1000, 1229, 2669, -1000, -63, -1000, 670, 101, 2228, -1000,
	-66, 133300, -1000, 822, -1000, -173, -1000, -1000, 321, -1000,
	3346, 3345, -1000, 2858, 58348, 550, 548, 116417, 3344, -1000,
	-1000, -176, -1000, -1000, 4789, 4789, 75788, 61185, 75788, 75788,
	75788, -1000, 961, 815, -1000, 2427, -1000, -1000, -1000, -1000,
	-1000, 26557, 1573, -1000, 545, 539, -1000, -1000, -1000, -1000,
	3403, 10493, 10493, 49786, 49786, 49786, 10493, 7874, -189, -1000,
	10493, 10493, -74, -1000, -1000, 131740, -1000, -1000, -1000, 133300,
	-1000, 21401, 2162, -1000, 128444, -1000, 34199, -1000, -1000, 49786,
	49786, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53797,
	2909, 538, 71268, -1000, -1000, 318, 1002, 49786, 51505, 2578,
	1002, 1002, -1000, -192, -1000, -1000, -1000, 3624, -1000, 3624,
	186, -1000, -1000, 3695, 26557, -1000, 75788, -1000, -1000, -1000,
	3694, -165, 759, -1000, 3689, -1000, -1000, 113, -1000, -1000,
	-1000, 2799, 3558, -1000, 1903, -1000, 116417, -1000, 116417, -1000,
	26557, 116417, 2879, 1236, -1000, 922, 2601, 537, 53797, 1118,
	92496, 937, 2841, 2832, -1000, 3582, 3472, 2844, -195, -1000,
	116417, 49786, 116417, -200, -201, 2336, -1000, -1000, 1114, 1235,
	49786, 1112, -1000, -1000, -1000, 71268, 535, 2271, 2271, -203,
	-206, -1000, -1000, -1000, 49786, 1178, 116417, 35345, -1000, 3688,
	3405, -1000, -1000, -1000, -1000, -1000, -1000, 116417, -1000, 116417,
	-1000, 49786, 1171, -1000, -1000, -1000, 3653, 2271, 26557, 2271,
	-1000, 2271, 3436, 1149, 116417, 127446, 92496, 1787, 1787, 2981,
	-1000, -1000, -1000, 2569, 2569, 75788, 61185, -1000, -67, 956,
	-1000, 3557, 2747, 3687, -1000, -1000, -1000, -1000, 2599, -1000,
	-1000, 116417, 2598, 948, -1000, -212, -1000, 817, 811, 77448,
	931, 897, -1000, -68, 532, -1000, 809, -1000, -1000, -1000,
	-1000, 458, 3555, -1000, 3650, 531, 529, 116417, 2290, 516,
	26557, 3391, 807, 76346, -1000, 3265, 1830, -1000, 2390, 116417,
	3380, -1000, 2669, 515, -1000, 947, 514, 512, 3353, 3353,
	-214, 58348, 58348, -217, 509, 947, -1000, -219, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -69, -1000, 894, 584, -1000,
	-1000, 92496, 92496, 49786, 49786, -1000, 10493, 10493, 10493, -1000,
	313, -1000, -1000, 2228, 3468, -1000, -70, 128048, 128007, 8000,
	53797, 71268, -220, -1000, -1000, 116417, 133300, -71, -1000, 133300,
	507, 495, 442, -1000, -1000, -1000, 742, 741, -1000, -1000,
	-1000, 127446, 3686, -1000, 127446, 100811, 116417, -1000, -1000, 1873,
	-1000, -1000, -1000, 116417, 2394, -1000, -1000, -1000, 1088, 49786,
	6082, 53797, 494, 49786, -1000, 493, 492, 3554, 3322, -1000,
	2737, 2919, 1973, 58348, -1000, 3403, -1000, 18355, -1000, 1085,
	1914, -1000, -1000, -1000, -1000, 133300, 53797, 3436, 58348, -1000,
	-1000, 491, 489, 133300, 486, 808, 2902, -1000, -1000, -1000,
	-1000, -1000, 133300, 468, 3524, -1000, -1000, -1000, -1000, 2271,
	92496, -1000, -1000, -1000, 1167, -1000, -1000, -1000, -1000, 3685,
	3684, 2901, 81910, -1000, -222, -1000, -1000, 1967, 101, 2157,
	2791, -1000, 2338, 467, -1000, -1000, 2273, 2677, -1000, 100260,
	34772, 34772, 302, 3545, 897, -1000, 3622, -1000, 3307, 3307,
	49786, 3540, 101, -1000, 3648, 58348, -1000, 92496, 58348, 2284,
	2077, 2543, 76346, -1000, 2576, -1000, -1000, -225, 116417, 1830,
	-1000, -1000, 75788, 75788, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1085, -227, -228, -1000, 75788,
	-1000, -1000, 2427, -1000, 116417, -1000, 116417, -1000, -1000, -230,
	-233, -1000, 2034, 49786, 34199, -1000, -1000, 8000, -240, -1000,
	-72, -1000, 3539, 51505, 3683, 3682, 3680, -1000, -1000, -73,
	-1000, -73, -1000, 1895, -1000, -1000, -1000, 3092, 2855, 18079,
	6082, 2520, 116417, 628, 2196, 2196, -1000, 3538, 2918, -1000,
	-1000, 2747, 462, -1000, -1000, -1000, -1000, 885, 116417, 2747,
	2854, 92496, 6082, 1087, -241, 2159, 2159, 49786, 33626, 2184,
	49786, -1000, -1000, 3436, 127446, -1000, -1000, 127446, 2282, -1000,
	2889, 3623, -1000, 931, -1000, 2178, 116417, -1000, 3428, -1000,
	3342, -1000, -1000, -1000, 2752, 101, -1000, -1000, -1000, -246,
	133300, 101, -1000, 295, -247, 1086, -249, 92496, 2017, -1000,
	807, -1000, 2554, 1004, -1000, -1000, -254, -255, 1973, 1085,
	2154, -256, -1000, -257, -263, -1000, -1000, 281, 50932, 50932,
	50932, -74, -75, -1000, 116417, 459, -1000, -1000, -1000, -1000,
	-1000, 3053, 953, -1000, 692, 1896, 228, 1084, 226, 115,
	-1000, -1000, -1000, 2154, 116417, -1000, -1000, -1000, 952, 458,
	-1000, 49786, 1085, -264, -1000, 1054, -265, -1000, 1052, -272,
	-1000, 2899, -1000, -273, 2271, -266, 225, 1787, 950, 3508,
	-1000, -1000, -1000, 2273, 92496, -274, -1000, -1000, 2354, -1000,
	2747, 948, -1000, -1000, -1000, 1085, 457, 1973, 456, 1489,
	807, -1000, -1000, 1377, 3391, 3273, 947, 947, 2747, 1973,
	932, -1000, 947, -1000, -1000, -1000, 3254, -1000, 54943, 2326,
	1800, 130893, 3254, 3254, -1000, -1000, 116417, 3494, -1000, 866,
	863, 1523, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2844, -275, 3493, 2520, 133300, 2747, -1000, 2159, 2785, -1000,
	2159, 2898, -1000, 2170, -1000, -1000, -1000, 2868, -1000, 2897,
	-1000, 1709, 3611, 2535, 455, -1000, 116417, 1751, 1749, 3679,
	2157, 2273, 1973, 58348, 2747, 58348, 2142, -1000, 116417, -1000,
	2077, 1371, -1000, -1000, 2154, 2747, 1004, 453, -1000, -1000,
	1902, 3551, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	792, -1000, 3293, -1000, 1111, 2373, 2373, 1004, -1000, 791,
	692, -1000, -1000, 452, -1000, 451, -1000, 2249, 127446, 2241,
	-1000, -1000, -1000, -1000, 116417, -1000, -1000, 3677, -1000, 931,
	-1000, 2747, -280, 2154, -285, -1000, -1000, -1000, -116, 2017,
	-1000, 1618, 932, 2154, -1000, 1716, -1000, -1000, 2223, 50359,
	49786, -1000, 3600, -1000, -1000, 2595, -1000, -1000, 49786, 2844,
	49786, 49786, -1000, 225, 65695, -290, -1000, 2273, 2154, 1085,
	932, 1973, 1489, 67371, 1004, 932, -1000, -1000, -1000, 133300,
	-1000, -1000, -1000, 133300, -1000, -291, -293, -1000, -152, 99702,
	2269, 2535, 932, 1973, 1004, 2747, 2142, -270, -1000, 1004,
	2154, 1166, -298, -1000, -1000, -1000, -1000, 1004, 2747, -1000,
	2154, -1000, -1000, -1000, -1000, -1000, 450, -1000, -1000, 2154,
	932, 49786, 932, 1004, -310, 1004, -1000, 2154, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4515, 4514, 4513, 4510, 4509, 4508, 4505, 4504, 4500,
	4499, 4498, 4497, 141, 4494, 4492, 4491, 4486, 4485, 4484,
	4483, 4481, 4480, 4479, 4478, 4477, 4476, 4475, 4474, 4473,
	4472, 4471, 4470, 4467, 4466, 4465, 4464, 4463, 4458, 4455,
	4454, 4452, 4451, 4448, 4447, 4446, 4445, 4443, 4442, 4441,
	4440, 4438, 4437, 4436, 4433, 4431, 4429, 4428, 4423, 4422,
	4416, 4414, 4413, 4411, 4410, 4409, 4408, 4407, 59, 4406,
	4405, 4404, 4401, 4395, 4394, 4393, 4388, 4387, 4386, 4385,
	4379, 4378, 4373, 4372, 4370, 4368, 4366, 4365, 4363, 64,
	4362, 273, 4360, 4359, 4358, 4357, 4356, 4354, 4350, 4346,
	4345, 4343, 4342, 4341, 272, 4337, 128, 164, 4335, 4333,
	3883, 4332, 4330, 271, 4329, 4328, 4327, 4324, 4323, 281,
	4321, 4320, 4316, 4315, 4314, 4313, 4311, 4310, 4309, 4307,
	4305, 4304, 96, 208, 4303, 4302, 2880, 4300, 4298, 4295,
	4294, 4293, 4291, 4289, 4285, 4284, 4283, 4282, 249, 170,
	4281, 270, 4280, 4279, 4278, 4277, 4267, 4266, 4265, 4263,
	4261, 4259, 4255, 4254, 4253, 4252, 4247, 4246, 4244, 4243,
	4242, 4240, 4238, 4237, 4235, 4234, 4233, 4232, 4230, 4229,
	4228, 4226, 4225, 4224, 4223, 4220, 4218, 4217, 4216, 4214,
	4213, 247, 218, 139, 4212, 4211, 266, 265, 4208, 4206,
	4205, 4204, 4200, 123, 6, 300, 4198, 4197, 94, 93,
	86, 102, 106, 100, 4196, 113, 4193, 133, 67, 4192,
	25, 2, 297, 253, 13536, 248, 4190, 4189, 4187, 245,
	198, 4183, 240, 4182, 4181, 4179, 4178, 4176, 4174, 74,
	55, 188, 177, 175, 176, 79, 4173, 163, 99, 85,
	62, 46, 12, 90, 214, 22, 4, 261, 4172, 260,
	11, 144, 5, 33, 4171, 4169, 4168, 4166, 3859, 150,
	4165, 264, 246, 171, 4164, 4163, 4162, 364, 4161, 4160,
	49, 4157, 190, 89, 136, 15, 130, 4156, 154, 172,
	38, 4154, 185, 61, 4152, 165, 101, 98, 9216, 12626,
	4148, 4147, 132, 71, 158, 1407, 200, 192, 199, 186,
	167, 168, 109, 215, 213, 178, 183, 4145, 256, 4144,
	3553, 120, 189, 160, 6246, 4142, 4138, 4131, 88, 201,
	110, 4129, 4128, 77, 9, 31, 3, 1, 142, 26,
	19, 13, 4126, 27, 115, 50, 23, 4125, 32, 4124,
	4123, 4122, 4121, 4117, 42, 162, 4111, 4108, 276, 4104,
	84, 58, 28, 4100, 21, 224, 4098, 244, 122, 4095,
	4092, 259, 211, 184, 4085, 43, 243, 4084, 4083, 4082,
	4080, 4079, 134, 7, 126, 4078, 4077, 148, 4076, 56,
	241, 202, 4074, 66, 4072, 4071, 180, 52, 143, 274,
	204, 228, 114, 233, 191, 236, 4070, 4069, 4068, 223,
	4067, 4066, 226, 156, 4065, 4063, 207, 280, 91, 48,
	82, 234, 83, 197, 157, 4062, 205, 4061, 4059, 278,
	181, 220, 20, 16, 104, 118, 4055, 8, 238, 161,
	237, 117, 4054, 7871, 2010, 2772, 4053, 4051, 152, 125,
	80, 131, 155, 263, 97, 4049, 4048, 3161, 4047, 4044,
	4042, 4041, 187, 4040, 4039, 4037, 149, 147, 217, 4036,
	127, 73, 51, 29, 116, 252, 268, 108, 225, 169,
	257, 4034, 4032, 4031, 193, 4030, 70, 121, 173, 203,
	254, 53, 4027, 119, 4026, 159, 2119, 65, 153, 4025,
	227, 4024, 4022, 4018, 4017, 4016, 4012, 4011, 1555, 231,
	4010, 4009, 4007, 37, 196, 4005, 262, 146, 179, 105,
	78, 4004, 92, 3829, 4003, 693, 216, 68, 206, 41,
	3998, 2139, 60, 3995, 0, 14545, 10152, 11826, 13624, 3994,
	2486, 3993, 3992, 3984, 219, 145, 3983, 3981, 3976, 107,
	3973, 81, 3972, 3969, 76, 3967, 35, 17, 18, 34,
	30, 344, 325, 3963, 3960, 44, 151, 137, 3958, 269,
	230, 3952, 3951, 3950, 3946, 95, 3945, 47, 3942, 45,
	3941, 3940, 54, 14, 36, 3939, 3935, 221, 3933, 222,
	255, 3932, 166, 3930, 69, 140, 3925, 3923, 3920, 72,
	63, 258, 87, 3919, 284, 3917, 209, 3916, 3911, 24,
	3908, 3904, 250, 112, 111, 3903, 251, 135, 40, 212,
	182, 229, 3902, 3901, 174, 3900, 3897, 3896, 282, 3895,
	3894, 39, 3893, 3892, 3891, 10, 3890, 3887, 210, 3242,
	3886, 3885, 57, 3881, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	601, 601, 619, 619, 23, 23, 45, 45, 24, 46,
	17, 602, 602, 602, 602, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	597, 597, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 603, 603, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 497, 497,
	497, 528, 528, 528, 528, 529, 529, 623, 623, 624,
	624, 624, 624, 624, 135, 135, 395, 395, 395, 56,
	56, 56, 56, 56, 592, 592, 208, 208, 208, 210,
	210, 209, 209, 209, 209, 209, 80, 80, 609, 609,
	608, 607, 607, 607, 610, 610, 610, 207, 207, 207,
	131, 131, 131, 131, 131, 131, 132, 132, 133, 133,
	211, 211, 211, 213, 213, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 217, 16, 16, 16,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 109,
	109, 531, 531, 532, 532, 202, 202, 203, 203, 203,
	203, 204, 204, 205, 205, 205, 71, 71, 214, 214,
	216, 216, 215, 215, 215, 215, 215, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 62, 62, 69, 69, 69, 69, 69,
	69, 69, 193, 193, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 77, 77, 77,
	77, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	626, 626, 627, 627, 628, 628, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 86, 86, 356, 356, 319, 319, 87, 87,
	87, 88, 88, 89, 89, 73, 73, 590, 590, 372,
	372, 488, 488, 74, 598, 598, 598, 600, 600, 599,
	599, 91, 91, 394, 394, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 101, 101, 101, 101, 101, 102, 102, 102,
	99, 99, 99, 96, 96, 96, 95, 95, 95, 100,
	100, 100, 589, 308, 308, 98, 98, 98, 97, 97,
	97, 373, 373, 103, 103, 103, 103, 320, 104, 104,
	104, 104, 104, 104, 104, 104, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 490, 490, 105, 105, 105, 455, 455, 110, 110,
	110, 410, 410, 111, 111, 111, 111, 111, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 134, 134, 134,
	134, 134, 134, 134, 134, 594, 594, 365, 365, 271,
	271, 271, 271, 123, 123, 123, 123, 124, 124, 124,
	125, 125, 198, 198, 141, 141, 141, 141, 140, 140,
	140, 140, 140, 140, 140, 140, 63, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 68, 68, 68,
	68, 68, 144, 144, 620, 620, 146, 143, 143, 143,
	143, 143, 142, 142, 145, 145, 145, 145, 147, 149,
	149, 149, 149, 149, 148, 148, 148, 148, 148, 150,
	150, 522, 522, 381, 381, 520, 520, 541, 541, 521,
	521, 326, 326, 326, 326, 326, 327, 327, 327, 530,
	530, 530, 530, 530, 530, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 199, 199,
	200, 201, 201, 201, 201, 201, 176, 176, 176, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 179,
	179, 179, 163, 163, 152, 152, 152, 152, 152, 152,
	152, 157, 157, 157, 157, 157, 157, 157, 157, 153,
	153, 165, 165, 165, 165, 165, 158, 158, 159, 159,
	159, 160, 160, 160, 160, 186, 186, 162, 162, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 154, 154,
	154, 154, 167, 167, 167, 167, 417, 417, 417, 191,
	191, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 189, 189, 189,
	189, 189, 189, 611, 611, 612, 612, 612, 183, 183,
	183, 183, 183, 183, 469, 469, 177, 177, 177, 177,
	182, 182, 182, 182, 185, 185, 185, 185, 400, 400,
	174, 174, 174, 175, 175, 175, 180, 180, 181, 357,
	357, 178, 178, 184, 184, 184, 184, 155, 155, 155,
	155, 155, 155, 155, 155, 156, 156, 156, 156, 187,
	187, 173, 173, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 630, 630, 169, 169, 169, 168,
	168, 168, 168, 171, 171, 172, 172, 172, 172, 172,
	172, 170, 161, 190, 591, 591, 587, 587, 587, 587,
	587, 587, 587, 587, 588, 588, 588, 588, 593, 593,
	115, 115, 115, 115, 115, 115, 115, 126, 126, 126,
	126, 126, 126, 126, 129, 129, 116, 116, 116, 116,
	116, 116, 116, 119, 119, 117, 117, 117, 117, 118,
	118, 81, 81, 81, 81, 81, 15, 15, 15, 82,
	82, 262, 262, 220, 220, 220, 345, 345, 221, 221,
	334, 334, 334, 334, 218, 218, 219, 219, 83, 83,
	631, 631, 631, 604, 604, 604, 605, 605, 605, 605,
	605, 605, 328, 328, 329, 329, 435, 435, 435, 435,
	435, 332, 332, 332, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 335, 335, 246, 246, 246, 343, 344,
	344, 336, 336, 342, 341, 341, 340, 340, 339, 339,
	337, 338, 338, 338, 347, 347, 346, 349, 349, 348,
	434, 550, 550, 552, 552, 552, 552, 552, 552, 552,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 418, 418, 632,
	632, 633, 634, 548, 548, 548, 549, 544, 544, 545,
	545, 545, 545, 545, 330, 330, 331, 331, 331, 331,
	546, 547, 363, 363, 473, 551, 551, 553, 553, 555,
	635, 635, 635, 635, 635, 635, 636, 636, 636, 433,
	433, 432, 432, 354, 354, 556, 556, 556, 556, 557,
	557, 557, 557, 557, 560, 559, 558, 558, 558, 558,
	558, 85, 85, 85, 397, 397, 396, 396, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 195, 195, 274, 274, 79, 79, 79,
	12, 12, 12, 12, 12, 12, 12, 289, 289, 13,
	13, 13, 606, 606, 606, 84, 84, 84, 84, 84,
	84, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 596, 596, 595, 595, 275, 275, 638, 638, 90,
	90, 90, 90, 90, 90, 90, 90, 491, 491, 492,
	492, 78, 78, 78, 78, 78, 419, 419, 416, 416,
	415, 415, 362, 362, 471, 471, 471, 472, 279, 279,
	280, 280, 239, 239, 239, 31, 30, 21, 21, 26,
	26, 27, 27, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 28, 28, 49, 49, 49, 49, 50, 50,
	50, 50, 53, 53, 54, 54, 48, 48, 48, 48,
	51, 51, 44, 44, 55, 55, 55, 55, 55, 613,
	615, 615, 614, 614, 618, 618, 618, 618, 618, 618,
	616, 616, 617, 617, 621, 621, 622, 622, 122, 122,
	127, 127, 127, 127, 127, 128, 128, 128, 128, 130,
	130, 130, 130, 139, 139, 194, 194, 194, 194, 194,
	194, 194, 57, 57, 57, 57, 70, 70, 70, 70,
	137, 640, 640, 640, 138, 138, 138, 639, 639, 272,
	272, 429, 429, 430, 430, 641, 641, 431, 431, 431,
	431, 431, 265, 264, 266, 266, 267, 267, 76, 76,
	76, 255, 255, 254, 256, 256, 257, 257, 252, 252,
	533, 533, 259, 259, 259, 260, 260, 248, 248, 249,
	249, 250, 250, 251, 251, 263, 263, 642, 642, 113,
	113, 113, 197, 197, 318, 318, 318, 426, 426, 426,
	355, 355, 286, 286, 428, 428, 428, 428, 393, 393,
	393, 196, 196, 370, 370, 383, 383, 384, 384, 485,
	485, 385, 120, 120, 121, 121, 136, 136, 224, 224,
	222, 222, 222, 222, 222, 222, 222, 222, 229, 229,
	230, 230, 231, 231, 232, 233, 233, 233, 233, 374,
	374, 234, 234, 234, 223, 223, 223, 225, 225, 225,
	225, 225, 225, 225, 228, 228, 228, 228, 235, 235,
	235, 227, 227, 567, 567, 567, 569, 569, 571, 571,
	570, 570, 566, 566, 568, 568, 637, 637, 399, 399,
	399, 352, 353, 350, 350, 351, 351, 360, 360, 358,
	359, 359, 361, 361, 470, 470, 470, 240, 240, 240,
	390, 390, 390, 390, 391, 391, 422, 422, 420, 420,
	420, 420, 421, 421, 423, 423, 423, 424, 424, 425,
	425, 387, 387, 388, 388, 389, 389, 389, 389, 451,
	451, 226, 226, 226, 367, 367, 367, 368, 368, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	442, 442, 440, 440, 440, 440, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 475, 476, 476, 369, 369,
	477, 427, 427, 585, 585, 585, 586, 586, 468, 468,
	478, 478, 478, 478, 478, 478, 466, 466, 467, 467,
	486, 487, 487, 403, 403, 403, 403, 401, 401, 404,
	404, 404, 404, 404, 402, 402, 479, 479, 479, 479,
	392, 392, 480, 480, 480, 480, 481, 482, 482, 483,
	483, 436, 437, 437, 493, 493, 493, 493, 495, 366,
	366, 366, 366, 366, 543, 542, 542, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 510, 510,
	510, 510, 510, 510, 510, 496, 496, 496, 496, 496,
	500, 500, 500, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 501, 501, 506, 506, 507, 507,
	507, 502, 503, 508, 508, 508, 508, 643, 643, 512,
	512, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	498, 498, 498, 505, 505, 505, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 411,
	411, 413, 413, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 445, 445, 445, 445, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 561, 561, 561, 561, 561, 561, 561,
	561, 447, 447, 564, 564, 565, 565, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 572, 572,
	573, 573, 575, 575, 576, 576, 577, 578, 578, 578,
	579, 580, 580, 574, 574, 581, 581, 581, 581, 582,
	582, 583, 583, 583, 583, 583, 584, 584, 584, 584,
	584, 457, 457, 458, 458, 464, 464, 464, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 325, 325, 324, 276, 276, 276, 276,
	276, 276, 379, 379, 377, 377, 377, 380, 380, 378,
	378, 376, 376, 375, 375, 454, 454, 452, 452, 456,
	456, 405, 405, 511, 511, 511, 511, 511, 511, 511,
	511, 406, 406, 406, 414, 407, 407, 408, 408, 408,
	408, 408, 448, 449, 409, 409, 409, 450, 450, 459,
	463, 463, 462, 461, 461, 460, 460, 438, 438, 439,
	439, 386, 386, 644, 644, 382, 382, 484, 484, 484,
	484, 322, 322, 371, 371, 321, 321, 313, 313, 314,
	314, 314, 314, 364, 364, 465, 465, 513, 513, 514,
	514, 515, 515, 516, 516, 517, 518, 519, 453, 453,
	297, 296, 283, 284, 295, 294, 293, 282, 285, 290,
	291, 292, 287, 288, 304, 303, 302, 253, 258, 309,
	310, 310, 312, 312, 311, 311, 299, 300, 301, 489,
	281, 315, 315, 316, 316, 316, 317, 317, 317, 317,
	277, 277, 278, 278, 305, 305, 306, 307, 307, 298,
	298, 298, 268, 268, 268, 269, 269, 270, 270, 527,
	527, 524, 524, 524, 525, 525, 525, 526, 526, 526,
	526, 523, 523, 523, 523, 523, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 535, 535, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 537, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 9, 10, 5, 2, 6, 4, 7,
	7, 7, 10, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 3, 2,
	2, 6, 3, 3, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 2, 1, 3, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 2, 8, 4, 2, 3, 5,
	5, 5, 2, 5, 5, 2, 2, 2, 0, 1,
	1, 3, 4, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 13, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 604, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 388, 433, 445, 403, 143, 424, 408,
	-145, -146, 463, -57, -70, -138, -137, 73, 130, 418,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -625, 102, -568,
	-94, -97, -130, -629, 162, 222, -116, -117, -118, 370,
	-124, -125, 426, -127, -128, -129, 429, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 468, -181, -190, -159, 529, 49, 483,
	82, 147, 437, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -567, -95, -96, -99, -101, -102, -98, -100,
	425, -225, -223, 601, 544, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 565, 574, -228, -226, -227, -235, 455,
	552, 503, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, -320, 2, -299, -305, -306, -307,
	-298, -268, -537, -540, 4, -534, -538, 169, 232, 334,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 511, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 277, 278,
	279, 280, 281, 285, 286, 282, 287, 288, 290, 291,
	294, 292, 295, 296, 293, 297, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 298, 313,
	311, 315, 316, 317, 318, 332, 327, 328, 329, 322,
	323, 319, 324, 320, 321, 325, 326, 331, 336, 337,
	340, 219, 342, 343, 346, 364, 350, 351, 352, 355,
	356, 359, 362, 363, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 375, 376, 378, 379, 380, 382, 383,
	384, 386, 388, 389, 391, 392, 394, 395, 396, 397,
	398, 399, 400, 402, 403, 405, 404, 406, 408, 410,
	411, 412, 418, 424, 420, 421, 422, 423, 425, 426,
	427, 428, 429, 431, 432, 433, 435, 436, 437, 438,
	439, 441, 443, 444, 448, 449, 465, 466, 485, 445,
	446, 447, 450, 451, 452, 453, 454, 458, 456, 457,
	459, 460, 461, 463, 464, 467, 468, 470, 471, 472,
	473, 474, 475, 476, 479, 481, 482, 483, 502, 484,
	486, 490, 491, 492, 493, 487, 488, 501, 495, 496,
	498, 499, 504, 505, 506, 507, 508, 509, 510, 512,
	514, 522, 523, 524, 526, 529, 530, 531, 532, 520,
	534, 535, 538, 539, 540, 543, 541, 542, 544, 546,
	549, 550, 551, 557, 556, 558, 560, 561, 566, 567,
	569, 570, 571, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 154, 165, 166, 178, 193,
	194, 206, 208, 216, 217, 218, 240, 241, 243, 248,
	270, 339, 341, 357, 361, 377, 381, 385, 387, 401,
	440, 477, 489, 494, 515, 516, 517, 518, 525, 527,
	552, 553, 554, 559, 568, -320, 2, -299, 348, -292,
	2, -268, -268, 388, 28, 2, 28, 376, 457, 506,
	508, 2, -594, -365, 2, 28, -271, -268, 102, 204,
	455, -292, 2, -594, -365, 25, 2, -268, 2, 362,
	22, 27, 66, 77, 98, 141, 164, 187, 190, -628,
	364, 395, 443, 459, 501, 512, 526, 2, 556, 291,
	456, 503, 232, 120, 531, 450, -606, 448, 449, 362,
	393, 435, 207, 545, -272, 2, 445, -268, 291, 2,
	604, 94, 74, 440, 460, -148, 2, 281, 523, -149,
	-150, -147, 515, -522, 450, 435, 313, -268, 604, 604,
	604, 28, -281, -268, 503, 232, 450, 120, 499, 604,
	2, 503, 367, 556, 456, 120, 398, 232, 531, 190,
	141, 27, 450, -606, 579, 580, 291, 127, -592, 2,
	-587, 4, -538, -534, -314, -313, 503, 509, 120, -307,
	-298, 594, -306, 604, 604, 604, 604, 2, 251, 252,
	397, 396, 460, 461, 28, 604, 604, 604, 604, 448,
	2, 164, 22, 27, 66, 93, 98, 127, 187, 190,
	353, -626, 364, 395, 459, 501, 505, 512, 526, -605,
	484, 68, 423, 450, -604, -606, 291, 531, 141, -415,
	120, 281, 202, 539, 508, 506, 537, 133, 239, 542,
	541, 604, 604, -107, 2, 601, 32, 31, -106, -110,
	143, 463, -217, 503, 244, 2, -268, 604, 604, 604,
	2, 251, 252, 448, 449, 28, 604, 604, 188, -587,
	2, 604, 604, 604, 2, 28, 251, 252, 448, 449,
	244, 2, 68, 452, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	2, -192, 460, 484, 213, 47, 46, 74, 28, 394,
	79, 368, 121, 127, 149, 532, 205, 232, 233, 259,
	93, 94, -417, 44, 252, 68, 251, 449, -611, 448,
	-469, 504, 451, 457, 498, 263, 445, 523, 102, 546,
	436, 571, 398, 399, 496, 412, 282, 158, 189, 4,
	120, 313, 435, 462, 267, 266, 515, 281, 444, 371,
	84, 604, -637, 2, 503, -639, 2, 523, 523, 2,
	-639, 2, -639, 2, -639, 2, -640, 523, 568, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, -223, -225, -224,
	604, 604, 604, 604, 604, 604, 604, -192, 460, 2,
	74, 28, -358, -360, 536, 242, 151, 354, -222, -224,
	2, -567, -520, 2, -443, -541, -445, 592, 593, 585,
	500, 67, -324, 333, 572, -457, 127, 537, 348, -540,
	-446, -459, 154, 364, 440, -380, 8, 9, 5, 6,
	7, -277, -447, -453, 528, 168, 338, -317, 605, 10,
	601, -564, -224, -458, 37, 208, 65, -524, -316, -278,
	-496, 243, -315, -298, -561, -562, 4, -534, -535, -525,
	-499, -507, -503, -504, -510, -268, -537, 77, 111, 112,
	110, 115, 114, 284, 283, 116, 113, 462, 545, 66,
	36, 216, 217, 248, 339, 218, 75, -563, 142, -536,
	240, 241, 477, 51, 401, 178, 126, 125, 341, 56,
	54, 553, -508, 122, 515, 516, 517, 518, 193, 194,
	58, 165, 166, 361, 385, 494, 525, 527, 206, 270,
	43, 106, 189, 238, 220, 247, 249, 253, 271, 274,
	314, 330, 335, 358, 360, 434, 469, -643, 554, 489,
	69, 70, -569, 404, -570, -292, -569, 604, 604, 606,
	604, -350, -352, -353, 2, 28, 139, 601, 2, -474,
	2, -475, -479, -224, 264, -478, 601, -476, 599, -299,
	349, -565, 441, -561, -562, -277, -298, -316, 4, -534,
	-536, 603, -354, 601, 120, 450, 503, 78, 232, 93,
	164, -410, 601, -268, 28, 348, 519, 606, -351, 392,
	-455, 601, 348, 188, 351, 60, 295, 2, 2, 2,
	2, 2, 216, -268, 503, 119, 2, 262, 2, 2,
	2, 2, 2, 2, 2, -373, 216, 2, -299, 556,
	-373, 216, 2, -373, 216, 2, -416, 2, 87, -282,
	216, 2, -268, -308, 216, 2, -303, -305, -312, 216,
	2, -310, -268, -529, 216, 2, -528, 4, -534, 116,
	462, -443, 2, -136, 2, 60, -268, 556, 2, 465,
	2, 601, -148, 2, 71, 523, 43, 460, -149, 2,
	-430, 2, -431, -264, -265, -266, -486, -267, 250, 391,
	400, 575, 131, 333, 571, -620, 188, 584, 519, -520,
	-520, -520, -381, 603, 2, 2, 2, 2, 2, 2,
	-479, 216, -299, 2, -296, -523, 4, -534, -538, -535,
	-539, -537, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	110, 111, 113, 112, 114, 115, 116, 127, 131, 135,
	139, 140, 144, 147, 151, 168, 170, 183, 187, 188,
	204, 207, 210, 223, 237, 242, 244, 264, 268, 275,
	283, 284, 333, 338, 344, 348, 349, 353, 354, 374,
	390, 407, 430, 455, 462, 480, 497, 503, 513, 519,
	521, 528, 536, 537, 545, 547, 555, 562, 563, 564,
	565, -540, 77, 2, -479, 216, 2, -302, 216, -479,
	-305, 2, -282, 2, -295, -523, 2, -321, 216, -299,
	-301, -305, -303, 2, 2, 2, 2, -310, 2, -528,
	216, 2, 28, 28, 556, 392, 244, 519, 606, -371,
	-313, -314, -519, 8, -364, -268, 603, -443, 2, -136,
	-119, 2, 183, -443, 216, 2, -136, 216, 2, -443,
	216, 2, -136, 216, 2, -268, 2, -607, 2, -531,
	216, -527, 10, -526, 5, 4, -534, -538, -535, 216,
	-268, 2, 295, 2, 2, 526, 2, 98, 503, 119,
	2, 422, -627, 443, 530, 2, 2, 2, 2, 2,
	2, 2, 503, -287, 2, -268, 183, 487, -310, 216,
	-311, 2, 456, -638, 404, -528, 216, 2, 556, -303,
	216, 2, -303, 232, 246, -282, 216, 2, 508, 506,
	508, 506, 188, 2, 244, 2, 244, 2, -480, 2,
	-481, -475, -482, 599, 349, -490, 2, -489, -526, 552,
	-107, 601, -107, 601, 460, 601, -531, -299, -299, -443,
	2, -136, -119, 2, -443, 2, -136, 2, -268, 2,
	-133, -531, -132, 601, 188, -268, 2, -443, 2, -136,
	-119, 2, -443, 2, -136, 2, -217, 183, 2, 120,
	503, -192, 2, 183, 547, 2, 8, 2, 223, -531,
	451, 399, 175, 2, 465, 2, 466, 74, -417, 571,
	74, 188, 2, 188, 2, -400, 2, 565, 392, 188,
	2, 2, -591, 2, 348, 188, 2, 188, 2, 188,
	2, 188, 2, 188, 2, -191, 461, 524, 502, 396,
	252, 2, -136, 562, -119, 252, 251, -443, 562, 2,
	-612, 183, 449, -443, 2, 522, 261, 159, 188, -400,
	2, 188, 2, 188, 2, 5, 2, 397, 485, 2,
	250, 391, 485, 2, -299, 503, 556, 456, 120, 28,
	2, 448, 2, 2, 88, 89, 188, 2, 188, 2,
	203, 188, 2, 188, 503, 571, 2, -392, -479, -429,
	-430, -429, 519, -358, -360, -192, 465, 2, -229, -390,
	-231, 183, -420, -421, -232, 275, 170, 344, -233, -399,
	28, 139, -399, -399, 60, 602, 602, 11, 12, 76,
	41, 592, 593, 594, 595, 181, 596, 597, 590, 591,
	589, 582, 583, 587, 256, 257, 95, 586, 584, 86,
	289, 442, 171, 172, 173, 174, 419, 230, 34, 231,
	14, 15, 16, -324, 33, 353, 274, 572, 220, 469,
	585, 17, 18, 19, 247, 249, 335, 50, 223, -276,
	364, -323, 500, 67, -443, -443, -443, -443, -443, -443,
	-443, -443, 360, 601, -386, -438, 599, -224, 601, 601,
	601, 601, -519, -224, -443, -457, 602, -378, 601, -224,
	-457, -452, 601, 440, 599, 601, -460, -443, 5, 5,
	5, 601, 603, -572, 566, 183, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 387, -501, 601, -500, 601, -500, -500, 557,
	-498, 601, 574, 567, 601, -498, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 557,
	606, -569, -354, 601, -382, -484, -443, 594, -382, -382,
	348, -375, -443, 106, -403, 253, 314, 189, 271, 434,
	238, -440, 605, -440, -468, 574, -224, -476, -298, -224,
	-478, 601, -474, -468, -108, -519, -91, -104, -113, -136,
	-151, -196, -197, 594, -299, 601, 188, 601, 603, -523,
	188, -364, -282, -309, -268, -299, -315, -316, -321, -293,
	-268, 2, 138, -375, -587, 531, 450, 28, 456, -529,
	-271, 38, -454, -493, -494, -543, 605, -542, -496, -506,
	-502, -505, 377, 381, -525, 54, 553, -508, 243, 4,
	-534, -536, 240, 241, 477, 51, 401, 178, 126, 125,
	341, 56, 515, 516, 517, 518, 193, 194, 58, 554,
	489, 69, 70, -587, 531, 450, 28, 456, -529, 183,
	-529, 2, 2, 154, 2, 2, 2, -268, -245, 606,
	64, 427, 154, -373, 216, -245, 154, -245, 154, -322,
	216, -321, -245, 154, -245, 606, 154, -245, 606, 154,
	603, 606, 154, -529, 2, -416, -522, -375, 38, -430,
	2, 127, 4, 5, -641, 606, 273, -327, 288, 332,
	212, 349, 569, 342, 131, -530, 5, 4, -453, -465,
	127, 281, 243, -513, -515, 8, -514, 9, -516, 592,
	593, -521, -520, 109, 603, -523, -242, 420, 463, 363,
	-241, 24, 29, 143, 234, 318, 550, 160, -340, 235,
	-337, 367, 154, 481, 540, -601, -602, 447, 510, 511,
	90, 342, 463, 363, 420, 154, -396, -398, 38, 118,
	318, 362, 61, 227, 293, 294, 483, 559, 154, 463,
	363, 420, 363, -13, -257, 24, 143, -259, -254, 463,
	-602, 99, 420, 578, 425, 373, 495, 390, -602, -244,
	481, 540, -601, -602, 447, 420, -243, -342, -337, 367,
	154, 605, 24, 143, 420, 463, 363, -623, -624, 29,
	420, 363, -595, -289, -566, 223, 565, 154, -289, -289,
	-479, 216, -616, 183, 2, -609, -132, 265, 5, 10,
	-531, -132, -371, 606, 606, -523, 594, 449, 448, 154,
	154, 154, 154, 252, 183, 333, 333, 2, 2, 2,
	2, 2, 190, -604, -628, 2, 2, -299, 216, -356,
	348, -590, -372, 503, -299, 183, 333, 43, -302, 216,
	2, -305, 556, -595, 333, -304, 216, -299, 38, 601,
	333, 2, -416, 2, 232, -566, 333, -480, -318, -299,
	-475, -318, 463, -292, 38, -440, -299, 602, 606, -490,
	-490, -531, -205, 565, 188, 102, 601, 601, -217, 565,
	565, 252, -487, 606, -486, 223, -532, -531, -133, -531,
	423, 252, -531, -590, -282, 2, -299, 2, 503, 254,
	-531, -205, 223, -531, -531, -531, -522, 28, 466, 2,
	-191, 461, 524, 89, 466, 2, -299, 503, 120, 232,
	80, -616, 183, 2, -268, -593, 183, -588, 435, 450,
	531, -587, -299, 120, -299, 120, -299, 120, -299, -299,
	2, 2, 2, 2, 2, 85, 2, -136, -443, 2,
	85, 2, 46, 482, -612, 183, 2, 522, 2, 522,
	2, -268, -268, -268, 484, 273, -299, -299, -299, -300,
	-305, 504, 451, 449, -443, 2, -630, 2, 188, 183,
	2, 503, 232, 503, 232, 120, 188, 74, 120, 28,
	503, 446, -245, 606, -272, -229, -390, -522, -391, -390,
	-230, -229, -232, 183, 400, 541, 318, 467, 258, -421,
	-420, 28, -443, -425, 177, 317, -443, -423, -445, 592,
	593, -514, -516, -374, 342, -223, -223, -223, -361, -470,
	-443, 390, 232, -495, -493, -493, -297, -523, 515, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, 274, 220, 469, 50, 223,
	-443, 519, -443, -443, -443, -443, 311, 333, 338, 528,
	168, 538, 139, 342, -644, 497, 40, -450, -224, -379,
	601, -464, 35, 480, 28, -457, 601, 2, -438, -443,
	-439, -325, -323, -268, 592, 593, 594, 595, 596, 597,
	582, 583, 584, 14, 15, 16, 587, 591, 589, 590,
	181, 95, 586, 289, 442, 86, 171, 172, 173, 174,
	256, 257, 17, 18, 19, 34, 585, -376, -375, -375,
	602, 555, 28, 139, 594, 2, 602, 606, 38, 602,
	-443, -376, -456, -452, -375, -463, -462, 562, -411, -412,
	570, 298, 123, 214, 296, -413, 454, -517, 8, -523,
	594, -573, 176, 207, 601, 602, 2, 602, 2, 602,
	-443, 2, 602, -443, 2, 602, -443, 2, 602, -443,
	2, 602, 2, 602, 2, -443, -443, -443, -443, -443,
	-443, -443, -375, 8, -517, -517, 515, 515, -517, -517,
	-517, -509, 377, 378, 379, 380, 276, 277, 278, 279,
	381, 382, 383, 384, 303, 304, 305, 306, 299, 300,
	301, 302, 307, 308, 309, 310, 198, 199, 200, 201,
	194, 195, 196, 197, -509, -405, 2, -511, -375, 4,
	570, 298, 123, 214, 296, 454, 5, -405, 2, -406,
	2, -443, -375, -407, -444, -445, 592, 593, 585, -324,
	-457, -408, 2, -443, -376, -443, 57, 268, 521, -409,
	-443, 188, -375, -375, 2, -375, 2, -570, 38, -375,
	-367, 606, 188, 38, 4, -367, -367, 601, 602, 606,
	-404, 211, 292, 287, 246, -404, -474, -403, 253, -401,
	358, -401, -401, -468, -283, 599, 607, -523, -468, -467,
	-466, 38, -292, 355, -468, -468, 603, 602, -467, 600,
	-585, 601, 604, 604, 604, 604, 604, -299, 601, -375,
	-523, 603, 486, 2, 602, 247, 247, 247, 247, 247,
	348, 441, 602, 519, -589, -308, -312, 504, 2, 565,
	-106, 350, 602, 606, -366, 37, 599, 603, -517, 2,
	2, -512, 557, 601, 601, -412, 601, 188, -589, -312,
	504, 2, -365, 519, -268, 2, -299, -373, -245, 154,
	-373, -373, -245, 606, 154, -282, -303, -308, -310, -312,
	-268, -528, -529, -245, -304, -620, 602, 523, -431, -326,
	400, 479, 421, 458, 499, 8, 9, 8, 9, 606,
	-523, 606, -621, 93, 519, 78, 450, -261, 282, 519,
	-434, 216, 78, -544, -285, 93, -545, -268, 72, 537,
	390, 187, 152, -621, 93, 390, -621, 93, 2, 234,
	93, 463, 484, 28, 60, -479, 41, 41, 28, -619,
	331, 269, 561, 188, 571, 503, 232, 450, 519, 519,
	-479, -398, -493, 118, 293, 294, 60, -518, -513, 592,
	593, -518, 60, -518, -518, -518, 565, -302, -479, 450,
	519, 519, 519, 410, 410, -254, -149, 519, 519, 28,
	-192, 428, 127, -642, 584, 410, 606, 41, 41, 28,
	-619, 331, 269, 188, 519, -321, -283, 551, 42, 551,
	42, 551, 519, 42, 450, 519, 606, 42, 519, 519,
	-13, 463, -596, -273, 105, 324, 286, 325, 97, 321,
	96, 320, 103, 322, 104, 323, 558, 336, 63, 319,
	297, 326, -274, -275, 369, 549, 120, -528, -13, -13,
	463, 363, 420, 154, -617, 223, 28, -606, 223, -487,
	223, -487, -313, -268, 603, -136, -443, -443, -136, -443,
	-136, 46, 154, 154, 2, -638, 262, 601, -330, 333,
	188, -364, -488, 244, 606, -372, -587, 154, -528, -397,
	-396, 333, -304, 216, 2, 154, -354, 333, 148, 601,
	398, 2, 154, -284, 216, -269, -268, -416, -248, 507,
	154, -394, 547, -426, -136, 601, 127, 38, -426, -383,
	-384, -485, -385, -285, 601, -292, -440, -107, -489, 602,
	602, 602, -204, 352, -203, -268, 5, -217, 547, -329,
	-435, -434, -548, -549, -544, 274, 232, 537, 246, 169,
	-355, -286, -285, 119, 402, 402, -211, 565, -132, -133,
	602, 606, -487, 223, 487, -205, -205, -487, -487, -299,
	183, -531, -205, -205, -205, 2, 2, 2, 2, -400,
	-299, -282, -321, -299, 28, 603, -529, -529, -312, -308,
	-400, -282, -400, -282, -400, -282, -400, -400, -136, -443,
	484, 2, 460, 183, 183, 603, -400, -357, 430, 2,
	398, 120, 503, 367, 232, -299, -321, -299, -321, -282,
	120, -282, 121, -299, -479, -391, -230, 349, 258, 467,
	-423, -424, -445, 440, 441, -424, 440, 441, 8, 9,
	8, 9, -234, 471, 337, -373, 606, -239, 39, 135,
	258, -299, 571, 150, -443, -443, 519, -644, 497, -450,
	150, -443, 311, 338, 528, 168, 538, 139, 342, 188,
	601, -444, -444, 602, -377, -443, -443, 600, 609, 602,
	603, 602, -360, 606, -358, -443, -375, -375, 602, 603,
	-375, -364, 600, 600, 606, 602, -461, -462, 144, -443,
	519, 519, 519, 519, 601, 602, 603, -578, 359, 601,
	601, -443, 602, 602, 602, 602, 38, 606, 606, 606,
	602, 606, 606, 606, 602, 602, 602, 606, 602, 571,
	571, 602, 602, 602, 602, 606, 602, 606, 602, 188,
	602, 602, -414, 374, 602, 11, 12, 592, 593, 594,
	595, 181, 596, 597, 590, 591, 589, 582, 583, 584,
	86, 289, 442, 14, 15, 16, -324, 247, 223, -444,
	-444, -444, -444, 602, -448, -449, 188, 183, 38, -409,
	-409, -409, 602, 188, -375, 602, 602, 601, -571, 291,
	333, 602, -437, -436, 563, -484, -368, 2, -474, -294,
	-523, -437, -437, -375, -443, 253, 253, -402, 547, 348,
	-404, -474, -467, -519, -442, -441, 185, 39, 135, 327,
	328, 329, 219, 186, -467, -292, -354, -467, -467, -523,
	-468, -468, -466, 602, -586, -519, 602, -369, -477, -565,
	-360, 603, -523, -214, -566, -193, 5, 338, -193, -193,
	-193, -193, -299, -529, 519, 519, 223, 25, 375, -493,
	599, 600, 8, -523, 601, -517, -517, -517, -529, 188,
	188, 223, 188, -528, 2, -245, -373, -245, -245, -321,
	-322, -245, -245, -245, -395, 565, -520, -430, 535, 83,
	400, 515, -520, -241, 420, -285, -285, -299, -309, 202,
	411, -528, 333, -434, 216, -247, 333, -493, -293, 601,
	-418, 567, 258, 258, 547, -285, -293, 258, 216, -285,
	216, -293, 2, -293, -597, 400, 343, -443, 60, -338,
	280, 398, 334, -242, 420, 463, 363, -136, -136, -136,
	-136, -136, 601, -620, 547, 138, -299, -321, -299, -309,
	-528, -304, 463, 363, 420, 330, -315, -518, -518, -396,
	463, 363, 420, -309, -528, -302, -528, -253, 216, -268,
	-253, 216, 450, -282, 410, 571, 45, -642, -243, -136,
	-136, -136, -136, -136, 601, -283, -244, 420, 5, 216,
	-285, 5, -285, 216, 5, -268, -285, -309, -528, -624,
	24, 143, -285, -309, -528, -273, -531, 338, 543, -282,
	-595, -289, 450, 519, 519, -479, -613, -614, 204, 433,
	450, 436, -529, -132, -208, 565, -132, -202, 228, 594,
	-592, -531, -268, 556, -268, -328, -331, -329, -285, -220,
	-221, 567, 565, 154, -319, -299, 599, -205, -531, -299,
	-488, -310, -311, 154, -354, 333, -528, 38, 154, 601,
	2, 2, -303, 348, 333, -284, 216, -249, 145, -642,
	-282, -437, -368, -393, -428, 430, 348, -355, 552, -292,
	-393, -370, 606, 188, 584, 603, -355, -483, 594, -107,
	-107, -205, 606, 601, 584, 584, 601, -531, -531, 602,
	606, -247, -299, -284, 232, 232, -291, -269, 602, 606,
	603, 601, 584, 584, -213, 352, -212, 146, 260, 245,
	473, 474, 475, 476, 137, 472, 124, 316, -487, -531,
	-211, -133, 188, 188, -66, 565, 503, -205, 605, 436,
	-268, -400, -400, -400, 460, 460, -268, -364, -295, -282,
	-299, -296, -321, 183, 183, -282, 541, -424, 349, 285,
	-470, -240, 573, -299, 605, -443, -443, 150, 150, -443,
	-444, -444, -443, 150, 188, 601, -443, -454, 33, 33,
	602, 606, -439, -443, -323, 602, 555, -360, -360, 602,
	594, -523, 605, 602, -452, 147, -443, 513, 298, 214,
	296, -413, 296, -413, -413, -517, 5, -523, 594, -579,
	-288, 601, -268, 563, -359, 354, 602, -495, -493, -443,
	-443, -443, -443, -443, -517, -498, -498, -513, -513, -443,
	-448, -443, -495, -493, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, 139, 333, 342, -444, -449, -448,
	-443, -443, -493, 602, 602, 602, -375, -106, 601, 291,
	-387, 207, -443, -487, 606, -387, -387, 602, -474, -474,
	601, -443, 253, 600, 606, 608, 584, 584, -354, 603,
	-466, -467, 600, 602, 606, 602, 606, -427, 38, 602,
	-523, -437, -216, -215, 136, 53, 107, 134, 338, 247,
	-529, -529, 450, 351, 5, 8, 599, 600, 603, -517,
	602, 602, 602, -529, -529, 450, -529, -245, -245, 119,
	318, -443, 519, 519, 60, 223, 154, 333, 549, -550,
	-545, 152, -443, 601, 232, 601, 601, 2, -236, -237,
	-238, 143, 463, 24, -622, 2, 547, 154, -245, 154,
	-245, 569, -338, 601, 601, 519, 450, -261, 519, 565,
	-375, -443, -206, 127, -522, -602, 605, -602, 605, 450,
	519, 519, 450, 519, 519, 333, 154, 565, 167, 167,
	571, -253, 565, -375, 519, -497, 48, 26, 333, -303,
	-245, 154, 519, 519, 531, 463, -531, 338, -13, -309,
	-528, -304, 463, 363, 420, -594, -365, -594, 204, -312,
	-617, -487, -210, 352, -209, 146, 432, 137, 260, 225,
	-487, -208, 188, 244, 565, -304, 2, 602, 602, 606,
	-551, 38, 346, 346, 601, -299, -87, 565, -486, -519,
	-598, 565, 43, -302, 38, 154, -595, -136, -304, -491,
	-492, 5, 38, -299, 154, 348, 333, -250, 267, -642,
	-527, -566, -360, -393, -382, 334, 91, 602, -437, -384,
	-368, -443, 2, 602, -203, -204, -531, -531, -531, -205,
	-217, -217, -435, -332, 601, -284, -269, 601, -217, -286,
	2, -532, -531, -531, 606, 601, 584, 584, 584, 584,
	584, -211, -487, -132, -136, 352, -299, 594, -400, -344,
	-343, 367, 342, -344, 440, 440, 349, 177, 263, -239,
	-283, -443, -443, 150, 33, 33, -443, -443, -454, 602,
	-443, -443, -375, 600, 5, -443, 602, 602, 8, -443,
	602, 603, -580, -268, -443, 602, 60, 602, 602, 606,
	606, 602, 602, 602, 602, 602, 602, 602, -449, 188,
	139, 342, 601, 602, 602, -106, -451, 210, 60, -474,
	-451, -451, -402, -364, -474, -441, -283, 599, -283, 599,
	-523, -519, -477, 601, 603, -215, 584, -531, -531, -193,
	565, -312, 600, 2, 599, -523, 602, -312, 119, -285,
	-285, 503, 440, -253, 390, -434, 154, -552, 93, -554,
	76, 169, 102, 333, 338, 537, 390, 72, 127, 348,
	407, -632, -633, -634, 38, 576, 577, 602, -362, -471,
	-565, 601, -268, -362, -364, 333, 492, 127, 348, 333,
	127, 348, 560, 119, 2, 531, 79, -285, -293, -364,
	-364, -299, -309, -528, 161, 602, 606, 584, 2, 594,
	594, -309, -528, -304, -309, -528, -302, 154, -253, 365,
	167, 161, 602, -283, 5, 5, 154, -280, 76, -285,
	5, -285, -303, 119, 450, 519, 519, 348, 348, 351,
	-613, -614, -208, 606, 601, 584, 584, -208, -532, -132,
	2, -354, -345, 234, -285, -549, -546, -547, 390, -553,
	-555, 169, 390, -136, 2, -219, -218, -268, 5, 601,
	-330, 352, 600, -600, 352, -599, 117, 137, -528, -397,
	-136, -304, -354, 602, 606, 148, -419, 547, -283, -299,
	154, -251, 266, -642, -527, -248, -422, -420, 140, 601,
	348, -136, -360, 584, 602, 602, 119, 119, 226, 153,
	-362, 601, 601, -364, 119, 602, -212, -213, -531, -132,
	-531, -531, -531, -211, -487, -67, -68, 232, 93, 372,
	-296, 503, 232, 601, 601, -239, -443, -443, -443, 602,
	-360, -523, 594, -574, 367, 602, -470, -443, -443, -444,
	188, 601, -454, 602, -575, 564, -443, -388, -389, -443,
	438, 108, 208, -575, -575, 602, -519, -519, 2, -531,
	2, 519, 599, 2, 188, 223, 38, 410, -434, -293,
	-297, -290, -268, 169, 216, 338, 560, -418, 258, 601,
	-444, 541, -299, 601, 2, 215, 215, 30, 60, -635,
	131, 237, 602, 606, -472, -279, -268, -443, -472, 602,
	602, 338, 541, 338, 560, -443, 541, -493, 601, -245,
	-245, 602, 602, -443, 519, -522, 100, -520, 2, -602,
	-253, -282, -443, 519, 5, -245, -297, -245, -245, -280,
	531, -309, -528, -304, -618, 504, 457, 532, 451, 191,
	439, -618, 183, -209, -210, -531, -132, -208, 38, -335,
	236, 2, -551, 258, -290, 258, -631, 565, 602, 606,
	584, 584, -328, -220, -88, -89, 520, -486, 606, 601,
	584, -354, 38, 5, 601, 601, -268, 348, 601, -283,
	-263, 92, -642, -527, -249, -393, 334, -364, 93, -422,
	-450, -205, 601, 601, -333, 81, 94, 128, 215, 192,
	233, 484, 490, 28, -333, 602, -362, -362, 602, 601,
	-205, 602, 606, 28, 601, 28, 601, -299, -321, -375,
	-375, 602, -360, 60, 606, 602, 602, -444, -454, 602,
	-576, -577, -288, 606, 601, 601, 464, 600, 600, -529,
	2, -529, -253, 390, -268, -554, -290, 333, 547, -443,
	-444, -270, 601, -443, 601, 601, 38, 127, 237, 132,
	221, -433, -636, 101, 493, 224, -471, -239, 602, -432,
	547, 407, -444, -280, -362, 601, 601, 601, 584, 188,
	601, -497, -245, -303, 519, 2, 2, 188, -594, 602,
	-608, 405, -136, -339, -340, 223, 601, -334, 348, 119,
	318, -218, -520, -520, 602, 38, -89, 9, -599, -600,
	-443, 38, -136, -491, -362, -299, -362, 348, -255, -254,
	275, -527, -250, 602, -293, -393, -532, -532, -432, 602,
	602, -532, -68, -364, -364, 602, 602, -581, 398, 441,
	209, -375, -361, 602, 606, 38, -389, 2, 2, 2,
	410, 154, 211, 602, -556, 290, -268, 602, -397, -397,
	38, 132, 221, -335, 601, -240, -472, -335, 211, -299,
	-603, 547, 602, -347, -346, -343, -349, -348, -343, -375,
	-520, 100, 365, -375, -280, -529, -529, 348, -610, 189,
	-609, 5, 10, -220, 365, -363, -473, -285, 82, 119,
	-345, -136, 602, -136, 602, 602, -419, 602, -299, -252,
	-533, 410, 412, -642, -251, -437, 602, 602, -433, -432,
	-341, -337, 602, 602, 602, 602, -582, -583, 50, 534,
	109, -443, -582, -582, -577, -579, 169, 565, -557, -560,
	-559, 581, 470, 189, 366, 602, 492, 559, 602, 602,
	-341, -364, 565, -354, -443, -432, 602, 606, 552, 602,
	606, 552, 602, 188, 602, -245, -615, 565, -245, -618,
	-207, 565, 46, -334, -299, 602, 606, 389, 133, 143,
	-335, -631, -432, 601, -433, 601, -260, -259, -642, -513,
	-263, 140, -205, -205, -335, -433, -221, 565, -205, -584,
	152, -583, 386, 182, 440, 386, 182, -584, -584, -290,
	55, -559, 581, -560, 581, 541, 133, -635, 602, 55,
	-556, -335, -346, 223, -348, 188, 365, 204, 188, 448,
	-609, 30, -262, -261, 601, -473, 441, 441, 2, -339,
	-334, -433, -362, -335, -362, -256, -257, -258, -364, -255,
	334, 541, -341, -335, -437, 109, 207, 514, 318, 33,
	584, -558, 318, 427, 64, 463, -558, -437, 584, -557,
	601, 601, 351, -529, 352, -364, 2, -220, -335, 602,
	-341, 602, -252, 463, -221, -341, 440, 356, -583, -443,
	23, 338, 127, -443, -635, -375, -375, -245, -204, 601,
	602, -334, -341, -432, -221, -433, -260, -383, -437, -221,
	602, 602, -204, -246, 64, 427, -262, -221, -433, -437,
	-335, -256, -437, -437, -336, -337, 519, 602, -437, -335,
	-341, 601, -341, -221, -375, -221, -437, 602, -437, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 558, 559, 561, 562, 563, 565,
	566, 568, 570, 572, 573, 574, 576, 577, 579, 580,
	581, 582, 583, 585, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	654, 656, 0, 1425, 1427, 1429, 1431, 0, 810, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 343, 0,
	374, 376, 377, 379, 381, 382, 383, 385, -2, 0,
	491, 492, 494, 496, -2, 0, 1020, 1022, 1024, 0,
	643, 645, 0, 1027, 1029, 1031, 0, 0, 666, 667,
	0, 1536, -2, 658, 660, 662, 664, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 754, 756, 758,
	760, 762, 764, 765, 767, 769, 771, 772, 774, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	797, 799, 801, -2, 804, 805, 806, -2, -2, 0,
	-2, -2, -2, 1443, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 435, 437, 439, 441, 443, 446,
	448, 450, 1594, 498, 500, 502, 504, 506, 508, 510,
	0, -2, 1608, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1567, 1569, 1571, 1573, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 560, 564, 567, 569, 571, 575,
	578, 584, 586, 588, 543, 544, 547, 2306, 2324, 2325,
	2326, 2329, 2330, 2331, 2332, 2333, 2334, 2791, 2872, 2873,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 545, 546, 1214, 0, 612,
	610, 2291, 613, 2588, 615, 617, 485, 486, 487, 488,
	489, 490, 0, 636, 626, 1606, 637, 639, 640, 641,
	642, 607, 605, 0, 636, 2360, 634, 1423, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	414, 1272, 1273, 1274, 1408, 1409, 2635, 1450, 0, 235,
	655, -2, -2, 2756, -2, 689, 690, -2, -2, 704,
	708, 699, 2760, 0, 2638, 2622, -2, 711, 1426, 1428,
	1430, 808, 809, 2310, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	245, -2, -2, -2, -2, 0, 0, 2683, 2412, 2259,
	2326, 2262, 2257, 338, 340, 342, 344, 345, 0, 0,
	0, 0, 0, 0, 0, 375, 378, 380, 384, -2,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 1083, 1084, 1330, 0, 0, 0,
	-2, 493, 495, 548, 549, 0, 1595, 1595, 556, 557,
	-2, 0, 0, 0, 0, 308, 296, 1021, 1023, 1025,
	1026, 0, 0, 0, 0, 0, 644, 646, 0, 0,
	275, 1028, 1030, 1032, 1033, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 659, 661, 663, 665, 736, 738,
	740, 742, 744, 746, 748, 750, 752, 755, 757, 759,
	761, 763, 766, 768, 770, 773, 776, 778, 780, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	803, 816, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 915, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 1001, 0, 0, 819,
	821, 822, 823, 824, 825, 826, 0, 888, 913, 914,
	924, 807, 0, 1254, 1596, 1452, 1433, 1447, 1452, 1435,
	1436, 1437, 1438, 1439, 1444, 1446, 1440, 1441, 1442, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 60, 436,
	438, 440, 442, 444, 447, 449, 451, -2, 1565, 1566,
	499, 501, 503, 505, 507, 509, 511, 647, 0, 649,
	0, 820, -2, 0, 1600, 1600, 1600, 0, 0, 1566,
	1564, 0, 652, 653, 715, 716, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 2133, 1961, 0, 717, -2,
	1994, 1996, 2731, 2561, 2756, 2132, 1998, 1999, 2000, 2001,
	2002, 0, 2004, 2005, 2006, 2007, 2008, 2009, 0, 2011,
	0, 2016, 2017, 2018, 0, 2738, 2236, 2320, -2, 0,
	0, 2744, 2316, 0, 2099, 2034, -2, -2, 2343, 2322,
	1805, 1806, 1807, 1808, 1809, -2, -2, 2774, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 0,
	2719, 2739, 2740, 2745, 2747, 2741, 2728, 2059, 2426, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1832, 1841, -2, -2, -2, -2, -2, -2,
	-2, 2732, 2733, 2750, 2753, 2759, 2764, 2765, 2737, 2746,
	2773, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 1833, -2, -2,
	-2, -2, 1583, 2602, 1586, 1214, 1584, 1568, 1570, 0,
	1572, 0, 0, 0, 1577, 1603, 1601, 0, 1652, 1581,
	1582, 1675, 1675, 1699, 0, 1680, 0, 1699, 1595, 1726,
	0, 1686, 2627, 2035, 2036, 0, 2326, 2321, -2, -2,
	2771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 614, 616, 0, 0, 0, 635, 1605,
	0, 0, 0, 0, 0, 0, 0, 417, 418, 419,
	420, 421, 2739, 0, 0, 0, 426, 0, 428, 429,
	430, 431, 432, 433, 434, 205, 2739, 516, 541, 0,
	205, 2739, 519, 205, 2739, 522, 0, 525, 1328, 205,
	2739, 528, 2287, 205, 2739, 531, 533, 2295, 205, 2739,
	537, 2302, 2300, 538, 0, 540, 225, 221, 222, 223,
	224, 1419, 1420, 1421, 1422, 0, 1449, 1329, 657, 0,
	683, 0, 687, 688, 2727, -2, 0, 2647, 692, 693,
	-2, 695, 1453, 1457, 1458, 1459, 1460, 1461, 0, 0,
	0, 0, 1466, 0, 0, 0, 0, 684, 685, 702,
	703, 709, 712, 0, 811, 812, 813, 814, 815, 72,
	0, 2739, 1726, 74, 0, 2281, 2351, 2352, 2353, 2354,
	2355, 2772, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2870, 2871, 2774, 78, 0, 2739, 83, 0, 2739, 0,
	-2, 96, 0, 108, 0, 2284, 117, 0, 2739, 0,
	2256, -2, 0, 217, 297, 298, 299, 0, 1058, -2,
	0, 1266, 1268, 1268, 0, -2, 0, 0, 0, 1011,
	2253, 2258, 1012, 2277, 1013, 2263, 0, 346, 347, 348,
	349, 350, 0, 351, 2739, 353, 354, 0, 356, 357,
	2739, 359, 360, 0, 362, 0, 364, 0, 257, 261,
	2739, 311, 312, 2339, 2340, 2347, 2348, 2349, 2350, 2739,
	388, 390, 0, 392, 393, 0, 395, 0, 0, 0,
	399, -2, 415, 0, 412, 402, 403, 405, 406, 407,
	408, 409, 0, 455, 453, 2292, 0, 0, -2, 2739,
	0, 1055, 0, 0, 1308, -2, 0, 1259, 0, 1315,
	2739, 1311, 0, -2, 0, 1593, 2739, 1470, 1087, 1088,
	1089, 1090, 1738, 482, 0, 1501, 0, 1503, 0, 1522,
	1732, 1675, 0, 0, 1737, 0, -2, 601, 2309, -2,
	551, 0, 552, 0, -2, 0, 325, 0, 0, 1036,
	1038, 1039, 1041, 1042, 1045, 1046, 1047, 1048, 0, 1050,
	1712, 276, 278, 0, 0, 0, 1035, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 0, 0, 668, 0,
	0, 817, 818, 0, 0, 831, 832, 833, 0, 325,
	2639, 2597, 2447, 840, 0, 843, 846, -2, 0, 0,
	0, 0, 850, 0, 855, 856, 857, 0, -2, 0,
	864, 866, 1019, 868, 0, 0, 870, 0, 874, 0,
	877, 0, 879, 0, 881, -2, -2, -2, 889, 890,
	-2, 895, -2, 0, 899, -2, 0, 902, 0, 905,
	-2, 0, 915, 911, 912, 0, 0, 0, 0, 932,
	933, 0, 942, 0, 945, 946, 947, 0, 951, 952,
	0, 954, 955, 956, 957, 0, 2710, 2644, 2412, 0,
	964, -2, 970, 972, 0, -2, 0, 988, 0, 992,
	0, 0, 1000, 0, 0, 827, 828, 205, 1730, 1432,
	-2, 1434, 0, -2, 0, 648, 0, 651, 1625, 1551,
	1548, 0, 1622, 1623, 1552, 0, 0, 0, 1559, 0,
	1598, 1599, 0, 0, 0, 1538, 1539, 0, 0, 0,
	0, 2138, 2139, 2140, 2141, 2154, 2142, 2143, 2153, 2151,
	2152, 2144, 2145, 2150, 2164, 2165, 2155, 2156, 2146, 2159,
	2157, 2158, 2160, 2161, 2162, 2163, 0, 0, 2169, 0,
	2147, 2148, 2149, 2177, 0, 0, 2178, 0, 2180, 0,
	2170, 2166, 2167, 2168, 0, 1940, 1942, 2244, 0, 0,
	0, 2176, 2171, 2172, 1878, 1879, 1880, 1881, 1882, 1915,
	1919, 1920, 0, 0, 1995, 2241, 2240, 1997, 0, 0,
	2192, 0, 2010, -2, 0, 2133, 2187, 0, 0, 2019,
	2020, 2021, 0, 0, 2192, 0, 0, 2235, 2031, 2032,
	1870, 0, 0, 2101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1818, 0, 1820, 0, 1821, 1822, 1829,
	1842, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 2216, -2, 0, 0, 0, 0, 1834,
	0, 1585, 0, 0, 1656, 2245, 2249, 2250, 1656, 1656,
	0, 0, 2193, 1723, 1723, 0, 0, 1718, 1718, 1718,
	1716, 1699, 0, 1699, 1709, 0, 1699, 1699, 0, -2,
	1680, 0, 0, 1709, 0, 1693, 589, 591, 593, 595,
	596, 597, 599, 1727, 1728, 0, 0, 0, 0, 2327,
	0, 0, 0, 0, 2299, 0, 0, 2312, 0, 0,
	2286, 371, 0, 0, 0, 2693, 2638, 0, -2, 619,
	638, 1595, 0, 2195, 1753, 1757, 0, 1759, 1760, 1761,
	1762, 1763, 0, 0, 1754, -2, 1830, 1832, 1853, 2344,
	2345, 2346, 1813, 1814, 1815, 1816, 1817, 1825, 1812, 1812,
	1812, 1823, 1852, 1844, 1852, 1848, 1798, 1799, 1800, 1835,
	1836, 1837, 1838, 0, 2693, 2638, 0, -2, 628, 0,
	0, 1533, 416, 0, 423, 424, 425, 0, 512, 0,
	203, 204, 0, 205, 2739, 517, 0, 520, 0, 205,
	2739, 2251, 526, 0, 529, 0, 0, 535, 0, 0,
	0, 0, 0, 205, 1535, 0, 0, 0, 0, -2,
	697, 705, 706, 707, 0, 1455, 0, 1462, 726, 727,
	728, 1464, 1465, 0, 1467, 700, 729, 730, 731, 732,
	733, 734, 0, 2265, 2266, 2267, 2268, 2271, 2272, 0,
	0, 698, 719, 701, 0, 713, 118, 1405, 0, 0,
	161, 0, 1405, 1405, 0, 0, 0, 0, 188, 0,
	1126, 0, 0, 0, 0, 133, 146, 157, 130, 131,
	0, 0, 0, 0, 0, 0, 84, 1236, 0, 1239,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 98, 99, 0, 0, 104, 105, 0,
	145, 0, 0, 0, 0, 0, 1498, 0, 140, 120,
	0, 0, 133, 147, 159, 0, 192, 194, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 227, 0,
	0, 0, 1260, 0, 0, 0, 1592, 0, 0, 0,
	0, 2739, 1403, 0, 1388, 0, 1712, 2497, -2, -2,
	276, 1712, 1010, 0, 0, 2327, 2261, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 391, 394, 396,
	397, 398, 0, 1307, 0, 404, 445, 1185, 2739, 0,
	0, 472, 467, 0, 469, 0, 0, 0, 1235, 2739,
	1233, 2296, 0, 1257, 0, 1214, 2739, 2294, 0, 0,
	0, 1316, 2336, 1325, 1329, 1488, 0, 484, 0, 1504,
	1506, 0, 0, 1733, 0, 1735, 1675, 1595, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 1049, 282, 0, 1711, 0, 0, 313, 1712, 276,
	2613, 1034, 325, 325, 1712, 670, 1712, 672, 0, 0,
	834, 835, 0, 325, 325, 325, 841, 842, 844, 845,
	-2, -2, -2, -2, 847, 848, 939, 0, 0, 0,
	938, 858, 0, 860, 863, 867, 0, 1004, 2622, 2638,
	2693, 1017, 939, 2412, 939, 2412, 939, 2412, 939, 939,
	883, 927, 935, 894, 901, 0, 896, 900, 903, 906,
	0, 908, 916, 0, -2, 0, 919, 0, 921, 0,
	923, 939, 940, 943, 950, 953, 958, 959, 960, 961,
	2307, 962, 963, -2, 967, 968, 0, 979, 984, 985,
	981, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 1003, 1253, 0, 1445, 1625, 1551, 650, 1542, 1624,
	1543, 1550, 1553, 0, 0, 1555, 0, 1557, 0, 1620,
	1621, 1628, 1629, 0, 1639, 1640, 1632, 0, -2, 0,
	0, 1635, 1636, 1561, 0, 1578, 1579, 1580, 1609, 1612,
	1344, 0, 2872, 1874, 1748, 1875, 1876, 2280, 0, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, -2,
	-2, -2, -2, -2, -2, -2, -2, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, -2, -2,
	-2, 1916, 1917, 1918, -2, 2179, 2181, 0, 2244, 0,
	-2, 0, -2, -2, -2, -2, 1937, 0, 1939, 1944,
	1946, 1948, 0, 0, 0, 0, 2243, 1958, 2227, 2228,
	0, 0, 2135, 2136, 2137, 1943, 0, 1962, 2242, 2239,
	0, 0, 2173, 0, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 0, 2191, 1608,
	2023, 0, 0, 0, 0, 2030, 2015, 2189, 0, 2188,
	0, 0, 0, 2199, 0, 2234, 2230, 0, 2278, 1869,
	1856, 1857, 1858, 1859, 1860, 1861, 1871, 0, 2275, 2313,
	2319, 2109, 0, 0, 0, 2060, 2061, 2062, 2063, 2064,
	0, 2066, 2067, 0, 2069, 2070, 0, 2072, 2073, 0,
	2075, 2076, 2077, 2078, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 0, 0, 2081, 0, 2202, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2083, 0,
	2085, 2193, 2213, 0, 0, 1963, 0, 0, 0, 0,
	2133, 0, 2088, 2193, 2221, 0, 0, 0, 0, 0,
	2193, 0, 2226, 0, 2095, 0, 2097, 1587, 0, 0,
	1743, 0, 0, 0, 2248, 1743, 1743, 0, 1651, 0,
	0, 1719, 1720, 1721, 1722, 0, 0, 1723, 0, 1713,
	1717, 1714, 1715, 1709, 1672, 0, 0, 2282, 1709, 1678,
	1708, 0, 1214, 1698, 1709, 1709, 0, -2, 1682, 1699,
	0, 0, 590, 592, 594, 598, 600, 0, 0, 1608,
	-2, 0, -2, 327, 1213, 0, 0, 0, 0, 0,
	0, 609, 611, 0, 0, 532, 0, 0, 625, 0,
	603, 0, 606, 0, 1744, 1747, 0, 0, 1758, 1764,
	1765, 0, -2, 0, 0, 1854, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 427, 542, 205, 514, 0,
	205, 205, 523, 0, 0, 205, 534, 205, 2303, 205,
	2301, 226, 539, 1534, 238, 0, 686, 0, 1454, 1463,
	0, 723, 0, 725, 0, 2269, 2273, 2270, 2274, 0,
	714, 0, 0, 0, 0, 1404, 0, 1351, 0, 0,
	165, 2739, 0, 207, 0, 0, 1178, 2288, 0, 1168,
	0, 0, 2433, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 1237, 1238, 1240, 1247, 1249, 0, 1243, 2276, 0,
	0, 1244, 0, 1246, 1248, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 1269, 0, 0, 1270,
	1271, 1476, 1477, 0, 1497, 1498, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 2255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 1303, 1301, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 0, 0, 0, -2, 1264, 1265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 316, 2254, 2264, 0, 1043, 1044, 352, 355, 358,
	361, 244, 0, 0, 400, 0, 0, 1093, 1068, 0,
	0, 454, 325, 0, 0, 468, 472, 2305, 1053, 1231,
	1234, 0, 1214, 2739, 1280, 0, 0, 0, 0, 0,
	0, 1314, 0, 0, 2739, 2283, 2335, 2336, 1490, 1498,
	0, 1743, 0, 1520, 1507, 0, 0, 0, 1520, 1524,
	1525, 1527, 1528, 0, 0, 1734, 1740, 550, 602, 1595,
	1595, 325, 323, 2564, 321, 318, 320, 0, 0, 0,
	1094, 1096, 1097, 1098, 207, 0, 2336, 1168, 2486, 2336,
	0, 1510, 1512, 0, 0, 0, 270, 0, 279, 1712,
	277, 0, 282, 0, 0, 0, 466, 669, 674, 829,
	0, 325, 837, 838, 839, 885, 929, 937, 983, 849,
	851, 852, 853, 0, 0, 0, 1018, 1014, 1015, 1016,
	869, 939, 872, 939, 875, 939, 878, 880, 898, 904,
	917, 910, 918, 0, 0, 0, 931, 948, 0, 966,
	0, 0, 0, 0, 0, 0, 0, 989, 990, 991,
	993, 998, 997, 1002, 1731, 1546, 1547, 1549, 0, 1558,
	0, 0, 1634, -2, -2, 1633, 1637, 1638, -2, -2,
	-2, -2, 1554, 0, 1563, 1560, 0, 1619, 1342, 1343,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1959,
	0, -2, 1938, 1941, 1945, 1947, 1949, 0, 0, 0,
	0, 0, 0, 2182, 0, 2184, 1960, 2237, 2240, 2175,
	0, 2131, 0, 0, 1607, 1608, 1608, 0, 2029, 0,
	2190, 0, 2197, 2198, 0, 2022, 0, 2231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 2065, 2068, 2071, 2074, 0, 0, 0, 0,
	2054, 0, 0, 0, 2058, 1824, 1810, 0, 1852, 1850,
	1851, 1845, 1852, 1849, 1802, 0, 1801, 0, 2080, 0,
	2082, 2084, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	1967, 1968, 1988, 2087, 2219, 2220, 0, 0, 0, 0,
	0, 0, 2093, 0, 2225, 2094, 2096, 1595, 0, 1588,
	0, 1653, 1642, 1742, 0, 2246, 1712, 1655, 1657, 2247,
	2285, 1642, 1642, 0, 2194, 0, 0, 1703, 0, 0,
	0, 1705, 1676, 0, 0, 1670, 0, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1677, 1214, 1707, 1679, 1683, 2313,
	0, 1709, 0, 1694, 0, 1696, 1729, 0, 1688, 1691,
	0, 0, 2328, 1743, 0, 365, 372, 373, 366, 367,
	368, 369, 0, 618, 0, 0, 0, 0, 0, 2196,
	0, 1749, 0, 1755, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 1532, 422, 513, 205, 518, 521, 2252,
	205, 527, 530, 536, 234, 0, 682, -2, 721, 722,
	724, 0, 720, 162, 1405, 0, 0, 1347, 1349, 1353,
	1359, 1362, 0, 167, 2739, 179, 0, 1142, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 2739, 205,
	2739, 205, 182, 184, 187, 0, 191, 189, 0, 1130,
	0, 0, 1133, 119, 1405, 0, 0, 122, 126, 134,
	135, 138, 0, 0, 0, 144, 0, 0, 0, 1364,
	1368, 1376, 0, 0, 0, 1241, 1242, 1245, 1251, 85,
	0, 0, 0, 1372, 1374, 1380, 97, 100, 2739, 2297,
	102, 2739, 0, 1346, 0, 0, 0, 0, 193, 124,
	128, 136, 137, 139, 0, 1382, 121, 0, 220, 0,
	0, 210, 205, 2739, 0, 212, 0, 213, 214, 228,
	0, 0, 0, 1056, 1057, 1302, 1255, 1256, 0, 1267,
	1261, 0, 0, 0, 0, 0, 1384, 1385, 0, 0,
	0, 1403, 1400, 1712, 240, 0, 1712, 248, 0, 2260,
	0, 262, 387, 0, 0, 0, 0, 1092, 1196, 0,
	1063, 0, 0, 0, 460, 456, 0, 465, 471, 470,
	476, -2, 0, 0, 0, 0, -2, 0, 0, 1318,
	1312, 1313, 0, 0, 0, 0, 2739, 1492, 1498, 0,
	1593, 1608, 483, 1499, 1520, 0, 0, 0, 1509, 1505,
	1502, 1743, 0, 0, 0, 0, 0, 1736, 1739, 553,
	554, 300, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 1099, 1103, 0, 2336, 2336, 0, 2290, 0, 0,
	0, 0, 0, 0, 280, 0, 283, 0, 0, 0,
	288, 289, 290, 291, 292, 293, 0, 0, 282, 314,
	272, 1712, 0, 0, 671, 0, 0, 836, 0, 859,
	862, 871, 873, 876, 920, 922, 939, 949, 973, 974,
	1120, 0, 1120, 0, 0, 994, 1556, 0, 1631, 1562,
	1613, 1614, 0, 1344, 0, 1877, 1922, 0, 0, -2,
	0, 0, 1926, 0, 0, 0, -2, 0, 0, 0,
	2183, 2185, 0, 2239, 2174, 2024, 0, 0, 0, 2028,
	2012, 2013, 0, 2134, 2200, 2229, 2233, 0, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 0, 2279, 2314, 2318, 2107,
	2108, 2112, 2293, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1847, 0, 0, 2201,
	2212, 2214, 1964, 1965, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, -2, -2, -2, 1982, 1983, 1984,
	-2, -2, -2, 1989, 0, 0, 0, 2215, 2217, 2218,
	2222, 2223, 0, 2090, 2091, 2092, 2224, 0, 1595, 1589,
	1650, 0, 1741, 1654, 0, 1650, 1650, 1602, 1701, 0,
	0, 1725, 0, 1673, 0, 1674, 0, 0, 1706, 0,
	1681, 1684, 1685, 1695, 0, 1687, 0, 1690, 0, 2024,
	-2, 326, 328, 330, 0, 333, 334, 0, 0, 0,
	621, 622, 0, 620, 604, 0, 0, 1751, 0, 0,
	1827, 1831, 1855, 630, 631, 0, 629, 515, 524, 236,
	0, 1710, 0, 0, 0, 0, 0, 0, 206, 1140,
	1177, 0, 0, 0, 1167, 0, 0, 1183, 169, 170,
	171, 0, 0, 0, 0, 180, 0, 0, 177, 0,
	186, 190, 1127, 0, 0, 0, 0, 1352, 0, 0,
	0, 141, 142, 143, 0, 148, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1482, 1483,
	0, 1473, 0, 0, 0, 208, 0, 0, 0, 1341,
	230, 0, 0, 0, 0, 0, 1305, 1306, 1263, 1365,
	1369, 1377, 0, 0, 0, 0, 636, 0, 641, 1402,
	0, 248, 246, 0, 249, 0, 252, 253, 0, 255,
	248, 242, 0, 0, 0, 1214, 401, 1066, 1184, 0,
	1186, 0, 1064, 0, 0, 1185, 452, 0, 459, 0,
	473, 0, 0, 1235, 0, 0, 1258, 1278, 1214, 0,
	1317, 1319, 0, 1327, 0, 0, 0, 1494, 1498, 0,
	1487, 1488, 1627, 1500, 1518, -2, 0, 0, 1608, 1526,
	1523, 1529, 1530, 0, 322, 0, 317, 319, 0, 303,
	0, 0, 1095, 1100, 0, 0, 0, 0, 0, 1511,
	1513, 0, 1037, 1040, 0, 0, 0, 0, 0, 0,
	0, 271, 282, 1712, 309, 0, 830, 854, 930, 975,
	1119, 0, 0, 977, 0, 0, 1630, 1617, 1618, 1615,
	1344, 1924, 1928, 0, 0, 0, 1930, -2, 0, 1952,
	-2, -2, 2186, 2238, 2003, 1608, 2025, 2027, 2014, 2232,
	1872, 0, 2114, 2111, 0, 2098, 0, 2049, 2050, 0,
	0, 2053, 2055, 2056, 2057, 1811, 1804, 1803, 2211, 0,
	0, 0, 0, 2089, 1590, 0, 2103, 0, 0, 1658,
	2103, 2103, 1702, 0, 1704, 1671, 1659, 0, 1668, 0,
	2314, 1697, 1689, 0, 0, 331, 0, 335, 336, 370,
	0, 0, 1745, 1750, 0, 1756, 1826, 0, 237, 163,
	164, 1356, 1360, 1357, 0, 166, 0, 1141, 0, 1144,
	0, 0, 0, 0, 1151, 1168, 0, 0, 0, 0,
	0, 0, 1170, 0, 1169, 0, 0, 1200, 0, 1332,
	1339, 0, -2, 0, 0, 0, 173, 196, 0, 0,
	0, 0, 199, 1406, 175, 0, 0, 205, 205, 0,
	0, 1348, 1350, 1363, 0, 0, 0, 0, 151, 0,
	0, 1366, 1370, 1378, 1373, 1375, 1381, 0, 103, 0,
	1484, 0, 0, 1383, 218, 219, 0, 205, 0, 205,
	211, 205, 1341, 0, 0, 0, 0, 0, 0, 0,
	1386, 1387, 239, 0, 0, 0, 0, 241, 315, 248,
	389, 0, 1114, 0, 1196, 1188, 1189, 1190, 0, 1195,
	1197, 0, 0, 1080, 1065, 0, 1076, 0, 0, 1093,
	1068, 0, 457, 474, 0, 477, 0, 480, 1054, 1232,
	1275, 1214, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 1496, 1498, 0, 1489, 1490, 1520, 1626, 0, 0,
	0, 1508, 1627, 0, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 284, 0, 285, 286,
	287, 294, 295, 273, 274, 673, 675, 0, 0, 681,
	1118, 0, 0, 0, 0, 1616, 1932, -2, -2, 1953,
	0, 2315, 2317, 1608, 0, 2100, 1610, 0, 0, -2,
	0, 0, 0, 1591, 1574, 0, 1649, 1641, 1643, 1645,
	2625, 2407, 2738, 1575, 1576, 1724, 0, 0, 1692, 332,
	623, 0, 0, 1752, 0, 0, 0, 1358, 168, 0,
	1145, 1146, 2289, 1148, 0, 1150, 1152, 1153, 1154, 0,
	1157, 0, 2338, 0, 1162, 1165, 1166, 0, 0, 1179,
	1201, 0, 1210, 0, 1334, 1344, 1338, 0, 1336, 1212,
	0, 172, 198, 174, 200, 195, 0, 1341, 0, 176,
	185, 0, 0, 123, 0, 0, 2401, 154, 152, 150,
	101, 1345, 125, 0, 220, 229, 1340, 231, 215, 205,
	0, 1367, 1371, 1379, 0, 1394, 1395, 1396, 1397, 0,
	0, 0, 0, 250, 0, 251, 254, 0, 0, 1129,
	0, 1067, 1187, 0, 1198, 1199, 1070, 0, 1069, 0,
	0, 0, 0, 0, 458, 461, 0, 464, 0, 0,
	0, 0, 0, 1320, 1318, 0, 1326, 0, 0, 0,
	1472, 0, 0, 1491, 1492, 481, 1514, 0, 0, 1520,
	1531, 302, 0, 0, 1101, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1102, 1212, 0, 0, 1176, 0,
	307, 281, 0, 677, 0, 679, 0, 976, 978, 0,
	0, 2026, 2118, 0, 0, 2051, 2052, -2, 0, 1992,
	2102, 2104, 0, 0, 0, 0, 0, 1660, 1669, 624,
	1746, 632, 1354, 0, 1361, 1143, 1147, 0, 0, 0,
	1158, 1218, 0, 0, 1235, 1235, 1171, 0, 0, 1204,
	1205, 1114, 0, 1206, 1207, 1208, 1333, 1619, 1339, 1114,
	0, 0, 197, 202, 0, 0, 0, 0, 0, 0,
	0, 209, 232, 1341, 0, 1398, 1399, 0, 0, 247,
	266, 0, 1276, 1068, 1128, 0, 0, 1078, 0, 1081,
	0, 1077, 1074, 1075, 1066, 0, 462, 463, 478, 0,
	479, 0, 1279, 0, 0, 1327, 0, 0, 1479, 1471,
	1498, 1493, 1494, 1743, 1517, 1521, 0, 0, 1210, 1212,
	1125, 0, 676, 0, 0, 986, 987, 0, 0, 0,
	0, 2113, 1611, 1993, 0, 0, 1644, 1646, 1647, 1648,
	1355, 0, 0, 1156, 1223, 0, 0, 0, 0, 0,
	1172, 1202, 1203, 1125, 0, 1337, 1335, 1181, 0, 1214,
	178, 0, 1212, 0, 1134, 0, 0, 1137, 0, 0,
	155, 2401, 153, 0, 205, 1391, 205, 0, 269, 0,
	260, 258, 259, 1070, 0, 0, 1192, 1194, 0, 1082,
	1114, 1080, 475, 1277, 1310, 1212, 0, 1210, 0, 1486,
	1498, 1480, 1481, 0, 1496, 0, 325, 325, 1114, 1210,
	1068, 1124, 325, 678, 680, 2110, 2130, 2119, -2, 2696,
	2408, 0, 2130, 2130, 2105, 2106, 0, 0, 1159, 1219,
	1220, 0, 1215, 1216, 1217, 2337, 1160, 1161, 1163, 1164,
	1200, 0, 0, 1218, 201, 1114, 1131, 0, 0, 1132,
	0, 0, 158, 0, 160, 233, 1389, 0, 1392, 0,
	256, 0, 0, 1062, 0, 1191, 0, 0, 0, 0,
	1129, 1070, 1210, 0, 1114, 0, 1475, 1485, 0, 1495,
	1472, 0, 304, 305, 1125, 1114, 1743, 0, 306, 2115,
	0, 0, 2121, 2122, 2123, 2124, 2125, 2116, 2117, 1149,
	0, 1221, 0, 1222, 0, 0, 0, 1743, 1209, 0,
	1223, 183, 1135, 0, 1138, 0, 156, 0, 0, 0,
	264, 265, 1059, 1061, 0, 1193, 1071, 0, 1073, 1068,
	1079, 1114, 0, 1125, 0, 1468, 1474, 1478, 2298, 1479,
	1515, 0, 1068, 1125, 1175, 0, 2127, 2128, 0, 0,
	0, 1224, 0, 1227, 1228, 0, 1225, 1180, 0, 1200,
	0, 0, 1390, 205, 0, 0, 1072, 1070, 1125, 1212,
	1068, 1210, 1486, 0, 1743, 1068, 2126, 2129, 2120, 1155,
	1226, 1229, 1230, 1211, 1182, 0, 0, 1393, 267, 0,
	1117, 1062, 1068, 1210, 1743, 1114, 1475, 1743, 1173, 1743,
	1122, 0, 0, 1113, 1115, 1116, 1060, 1743, 1114, 1323,
	1125, 1469, 1516, 1174, 1136, 1121, 0, 268, 1321, 1125,
	1068, 0, 1068, 1743, 0, 1743, 1324, 1122, 1322, 1139,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 590, 3, 596, 591, 3,
	601, 602, 594, 592, 606, 593, 603, 595, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 609, 3,
	582, 584, 583, 587, 605, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 599, 3, 600, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 607, 589, 608, 585,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 586,
	57925, 588, 57926, 598, 57927, 604, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1691
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1794
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1826
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1859
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1880
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1888
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1912
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1916
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1925
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1937
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1949
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1968
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1985
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1996
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2004
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2015
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2025
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2035
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2044
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2055
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2061
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2087
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2092
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2183
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2226
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2229
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2235
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2470
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2474
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2561
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2653
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2807
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = nil
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3091
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3100
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3111
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3116
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3121
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3126
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3233
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3429
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3454
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "CREATE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplemented(sqllex, "create access method")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplemented(sqllex, "create cast")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "create publication")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "create rule")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "create server")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3521
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3526
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplemented(sqllex, "drop server")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3673
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3708
		{

			sqlVAL.union.val = nil
		}
	case 473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "DELETE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3795
		{
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3821
		{
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3894
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4021
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4026
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4087
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4095
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4111
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4119
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "DELETE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "INSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "DELETE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "INSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4200
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4233
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4323
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4338
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "GRANT")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4401
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4413
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "RESET")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4457
		{
			return helpWith(sqllex, "RESET")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "USE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "USE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			return unimplemented(sqllex, "set from current")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4721
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4740
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.Low
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.Normal
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.High
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "SHOW")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4941
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.str = "client_encoding"
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.str = "timezone"
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5013
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5076
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5085
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5185
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5238
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = true
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = true
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5417
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5468
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = true
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = false
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5533
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5538
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = true
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = false
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5585
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5596
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5618
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5628
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5632
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5647
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5657
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5732
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5740
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5775
		{
		}
	case 986:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5784
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5807
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5878
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5888
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5901
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6135
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6318
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6357
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6373
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6402
		{

			sqlVAL.union.val = nil
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6408
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.str = ""
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6418
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = nil
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6441
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6445
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6471
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6485
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6500
		{
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6501
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6502
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6557
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6583
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6597
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6601
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6607
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.str = ""
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6771
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6875
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{

			sqlVAL.union.val = true
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = false
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6930
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6934
		{
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6937
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7037
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7065
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7075
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7155
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7232
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7316
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7325
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7333
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7371
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7373
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7411
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7445
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.str = ""
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = true
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{

			sqlVAL.union.val = true
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = false
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7494
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7508
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7520
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7532
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7542
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = nil
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7662
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7690
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7692
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7694
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7696
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7736
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7754
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7773
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7790
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7807
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7811
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = false
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = true
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = false
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = true
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = false
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7871
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7877
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7885
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.str = ""
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.str = ""
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7944
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7950
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8175
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8181
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8193
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8199
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8213
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8219
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8278
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = true
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = false
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.Types
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8342
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8367
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8371
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8409
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8430
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8478
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8508
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8521
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8537
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8554
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8557
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8558
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8599
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8601
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8605
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8694
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.str = ""
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8717
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{

		}
	case 1482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8754
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.str = ""
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.str = ""
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.str = ""
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.str = ""
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8809
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8822
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8823
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8852
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8870
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8874
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8883
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8959
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9054
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9069
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9355
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = true
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = false
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9425
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = nil
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9439
		{
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = true
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = false
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = false
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9469
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9473
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9531
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9645
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9685
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9716
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9718
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9733
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9755
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9802
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9875
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9885
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9931
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9961
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9994
		{
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = nil
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = true
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = false
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.str = tree.AstFull
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.str = tree.AstRight
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.str = tree.AstInner
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10114
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.str = tree.AstHash
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.str = ""
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10188
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10206
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10218
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10228
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = true
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = false
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = true
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = false
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10277
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10290
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10298
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10299
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10317
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10327
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10347
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10396
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10409
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = types.Geography
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10458
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10466
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10492
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10500
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = nil
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = types.Int2
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = types.Int
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = types.Float4
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = types.Float
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10543
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = types.Bool
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10573
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.Float
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10592
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10598
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10620
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = types.String
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = true
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = false
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = types.Date
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10677
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10691
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10700
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10708
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10725
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = true
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = false
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = false
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = types.Interval
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10749
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10848
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = nil
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10878
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10938
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11087
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11274
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11296
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11404
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11513
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11539
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11548
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11563
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11593
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11604
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11605
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11620
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11629
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11695
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11876
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11895
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11896
		{
			return unimplemented(sqllex, "treat")
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11917
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11922
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.str = ""
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12139
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12168
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12244
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12585
		{
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12657
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12665
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12738
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12754
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12763
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12774
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12783
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12791
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12808
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12893
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13027
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13040
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13047
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.str = ""
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
