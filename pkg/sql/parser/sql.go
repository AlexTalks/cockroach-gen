// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11616

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1310,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	218, 195,
	442, 195,
	-2, 0,
	-1, 79,
	207, 1114,
	220, 1114,
	236, 335,
	333, 335,
	342, 910,
	374, 335,
	386, 910,
	427, 910,
	452, 335,
	477, 910,
	-2, 0,
	-1, 85,
	236, 339,
	-2, 0,
	-1, 86,
	121, 1310,
	213, 1310,
	462, 1310,
	463, 1310,
	-2, 0,
	-1, 102,
	138, 1281,
	156, 1281,
	169, 1281,
	216, 1281,
	249, 1281,
	292, 1281,
	302, 1281,
	457, 1281,
	-2, 1252,
	-1, 136,
	146, 795,
	235, 795,
	336, 764,
	391, 764,
	445, 795,
	-2, 0,
	-1, 138,
	4, 1312,
	21, 1312,
	22, 1312,
	23, 1312,
	24, 1312,
	25, 1312,
	26, 1312,
	28, 1312,
	29, 1312,
	35, 1312,
	40, 1312,
	41, 1312,
	42, 1312,
	43, 1312,
	44, 1312,
	45, 1312,
	46, 1312,
	47, 1312,
	48, 1312,
	49, 1312,
	51, 1312,
	52, 1312,
	53, 1312,
	54, 1312,
	56, 1312,
	57, 1312,
	58, 1312,
	59, 1312,
	60, 1312,
	61, 1312,
	65, 1312,
	66, 1312,
	67, 1312,
	68, 1312,
	70, 1312,
	71, 1312,
	72, 1312,
	76, 1312,
	77, 1312,
	78, 1312,
	79, 1312,
	80, 1312,
	81, 1312,
	82, 1312,
	85, 1312,
	86, 1312,
	87, 1312,
	88, 1312,
	90, 1312,
	92, 1312,
	93, 1312,
	94, 1312,
	96, 1312,
	98, 1312,
	99, 1312,
	107, 1312,
	108, 1312,
	109, 1312,
	110, 1312,
	112, 1312,
	113, 1312,
	114, 1312,
	116, 1312,
	117, 1312,
	118, 1312,
	120, 1312,
	121, 1312,
	123, 1312,
	124, 1312,
	125, 1312,
	128, 1312,
	129, 1312,
	130, 1312,
	132, 1312,
	133, 1312,
	135, 1312,
	136, 1312,
	137, 1312,
	139, 1312,
	140, 1312,
	141, 1312,
	142, 1312,
	143, 1312,
	144, 1312,
	145, 1312,
	146, 1312,
	147, 1312,
	148, 1312,
	149, 1312,
	150, 1312,
	151, 1312,
	152, 1312,
	153, 1312,
	155, 1312,
	161, 1312,
	162, 1312,
	163, 1312,
	164, 1312,
	168, 1312,
	170, 1312,
	174, 1312,
	175, 1312,
	176, 1312,
	177, 1312,
	178, 1312,
	179, 1312,
	181, 1312,
	182, 1312,
	184, 1312,
	185, 1312,
	187, 1312,
	188, 1312,
	189, 1312,
	190, 1312,
	191, 1312,
	192, 1312,
	193, 1312,
	194, 1312,
	195, 1312,
	197, 1312,
	198, 1312,
	200, 1312,
	201, 1312,
	202, 1312,
	203, 1312,
	207, 1312,
	208, 1312,
	209, 1312,
	210, 1312,
	213, 1312,
	214, 1312,
	215, 1312,
	217, 1312,
	219, 1312,
	220, 1312,
	222, 1312,
	224, 1312,
	225, 1312,
	226, 1312,
	228, 1312,
	232, 1312,
	233, 1312,
	234, 1312,
	235, 1312,
	236, 1312,
	237, 1312,
	239, 1312,
	240, 1312,
	241, 1312,
	243, 1312,
	244, 1312,
	246, 1312,
	247, 1312,
	250, 1312,
	251, 1312,
	252, 1312,
	255, 1312,
	256, 1312,
	257, 1312,
	258, 1312,
	260, 1312,
	261, 1312,
	262, 1312,
	263, 1312,
	264, 1312,
	265, 1312,
	266, 1312,
	267, 1312,
	268, 1312,
	269, 1312,
	270, 1312,
	272, 1312,
	274, 1312,
	275, 1312,
	276, 1312,
	277, 1312,
	278, 1312,
	279, 1312,
	281, 1312,
	283, 1312,
	285, 1312,
	287, 1312,
	288, 1312,
	289, 1312,
	290, 1312,
	291, 1312,
	294, 1312,
	297, 1312,
	298, 1312,
	299, 1312,
	300, 1312,
	303, 1312,
	304, 1312,
	305, 1312,
	307, 1312,
	309, 1312,
	310, 1312,
	311, 1312,
	312, 1312,
	313, 1312,
	314, 1312,
	315, 1312,
	316, 1312,
	317, 1312,
	318, 1312,
	319, 1312,
	320, 1312,
	322, 1312,
	323, 1312,
	324, 1312,
	325, 1312,
	326, 1312,
	327, 1312,
	328, 1312,
	329, 1312,
	330, 1312,
	332, 1312,
	334, 1312,
	335, 1312,
	336, 1312,
	337, 1312,
	338, 1312,
	339, 1312,
	340, 1312,
	341, 1312,
	342, 1312,
	343, 1312,
	344, 1312,
	346, 1312,
	352, 1312,
	354, 1312,
	355, 1312,
	356, 1312,
	357, 1312,
	358, 1312,
	359, 1312,
	360, 1312,
	361, 1312,
	363, 1312,
	364, 1312,
	365, 1312,
	367, 1312,
	368, 1312,
	369, 1312,
	370, 1312,
	371, 1312,
	372, 1312,
	374, 1312,
	375, 1312,
	376, 1312,
	377, 1312,
	378, 1312,
	379, 1312,
	380, 1312,
	381, 1312,
	382, 1312,
	383, 1312,
	384, 1312,
	386, 1312,
	387, 1312,
	388, 1312,
	389, 1312,
	390, 1312,
	391, 1312,
	393, 1312,
	394, 1312,
	395, 1312,
	396, 1312,
	397, 1312,
	399, 1312,
	400, 1312,
	401, 1312,
	402, 1312,
	403, 1312,
	404, 1312,
	405, 1312,
	407, 1312,
	409, 1312,
	410, 1312,
	411, 1312,
	412, 1312,
	413, 1312,
	414, 1312,
	415, 1312,
	416, 1312,
	417, 1312,
	418, 1312,
	419, 1312,
	420, 1312,
	421, 1312,
	423, 1312,
	424, 1312,
	426, 1312,
	428, 1312,
	429, 1312,
	430, 1312,
	431, 1312,
	432, 1312,
	433, 1312,
	434, 1312,
	435, 1312,
	437, 1312,
	438, 1312,
	439, 1312,
	440, 1312,
	441, 1312,
	443, 1312,
	445, 1312,
	446, 1312,
	447, 1312,
	448, 1312,
	449, 1312,
	451, 1312,
	452, 1312,
	453, 1312,
	455, 1312,
	456, 1312,
	459, 1312,
	460, 1312,
	461, 1312,
	462, 1312,
	463, 1312,
	464, 1312,
	465, 1312,
	467, 1312,
	470, 1312,
	471, 1312,
	472, 1312,
	473, 1312,
	474, 1312,
	475, 1312,
	477, 1312,
	478, 1312,
	479, 1312,
	484, 1312,
	485, 1312,
	486, 1312,
	487, 1312,
	488, 1312,
	489, 1312,
	-2, 0,
	-1, 139,
	1, 1186,
	224, 1186,
	332, 1186,
	340, 1186,
	492, 1186,
	516, 1186,
	-2, 0,
	-1, 141,
	1, 1186,
	516, 1186,
	-2, 0,
	-1, 142,
	1, 1186,
	516, 1186,
	-2, 0,
	-1, 143,
	1, 1186,
	442, 1186,
	516, 1186,
	-2, 0,
	-1, 172,
	138, 1280,
	156, 1280,
	169, 1280,
	216, 1280,
	249, 1280,
	292, 1280,
	302, 1280,
	457, 1280,
	-2, 1255,
	-1, 208,
	4, 1319,
	5, 1319,
	6, 1319,
	7, 1319,
	8, 1319,
	9, 1319,
	10, 1319,
	21, 1319,
	22, 1319,
	23, 1319,
	24, 1319,
	25, 1319,
	26, 1319,
	28, 1319,
	29, 1319,
	35, 1319,
	36, 1319,
	40, 1319,
	41, 1319,
	42, 1319,
	43, 1319,
	44, 1319,
	45, 1319,
	46, 1319,
	47, 1319,
	48, 1319,
	49, 1319,
	51, 1319,
	52, 1319,
	53, 1319,
	54, 1319,
	56, 1319,
	57, 1319,
	58, 1319,
	59, 1319,
	60, 1319,
	61, 1319,
	62, 1319,
	63, 1319,
	64, 1319,
	65, 1319,
	66, 1319,
	67, 1319,
	68, 1319,
	70, 1319,
	71, 1319,
	72, 1319,
	74, 1319,
	76, 1319,
	77, 1319,
	78, 1319,
	79, 1319,
	80, 1319,
	81, 1319,
	82, 1319,
	85, 1319,
	86, 1319,
	87, 1319,
	88, 1319,
	90, 1319,
	92, 1319,
	93, 1319,
	94, 1319,
	96, 1319,
	97, 1319,
	98, 1319,
	99, 1319,
	100, 1319,
	101, 1319,
	102, 1319,
	103, 1319,
	104, 1319,
	105, 1319,
	106, 1319,
	107, 1319,
	108, 1319,
	109, 1319,
	110, 1319,
	111, 1319,
	112, 1319,
	113, 1319,
	114, 1319,
	115, 1319,
	116, 1319,
	117, 1319,
	118, 1319,
	120, 1319,
	121, 1319,
	123, 1319,
	124, 1319,
	125, 1319,
	128, 1319,
	129, 1319,
	130, 1319,
	132, 1319,
	133, 1319,
	135, 1319,
	136, 1319,
	137, 1319,
	139, 1319,
	140, 1319,
	141, 1319,
	142, 1319,
	143, 1319,
	144, 1319,
	145, 1319,
	146, 1319,
	147, 1319,
	148, 1319,
	149, 1319,
	150, 1319,
	151, 1319,
	152, 1319,
	153, 1319,
	154, 1319,
	155, 1319,
	161, 1319,
	162, 1319,
	163, 1319,
	164, 1319,
	168, 1319,
	170, 1319,
	173, 1319,
	174, 1319,
	175, 1319,
	176, 1319,
	177, 1319,
	178, 1319,
	179, 1319,
	181, 1319,
	182, 1319,
	184, 1319,
	185, 1319,
	187, 1319,
	188, 1319,
	189, 1319,
	190, 1319,
	191, 1319,
	192, 1319,
	193, 1319,
	194, 1319,
	195, 1319,
	196, 1319,
	197, 1319,
	198, 1319,
	200, 1319,
	201, 1319,
	202, 1319,
	203, 1319,
	207, 1319,
	208, 1319,
	209, 1319,
	210, 1319,
	212, 1319,
	213, 1319,
	214, 1319,
	215, 1319,
	217, 1319,
	219, 1319,
	220, 1319,
	221, 1319,
	222, 1319,
	223, 1319,
	224, 1319,
	225, 1319,
	226, 1319,
	227, 1319,
	228, 1319,
	232, 1319,
	233, 1319,
	234, 1319,
	235, 1319,
	236, 1319,
	237, 1319,
	239, 1319,
	240, 1319,
	241, 1319,
	243, 1319,
	244, 1319,
	245, 1319,
	246, 1319,
	247, 1319,
	248, 1319,
	250, 1319,
	251, 1319,
	252, 1319,
	253, 1319,
	254, 1319,
	255, 1319,
	256, 1319,
	257, 1319,
	258, 1319,
	260, 1319,
	261, 1319,
	262, 1319,
	263, 1319,
	264, 1319,
	265, 1319,
	266, 1319,
	267, 1319,
	268, 1319,
	269, 1319,
	270, 1319,
	272, 1319,
	273, 1319,
	274, 1319,
	275, 1319,
	276, 1319,
	277, 1319,
	278, 1319,
	279, 1319,
	280, 1319,
	281, 1319,
	282, 1319,
	283, 1319,
	284, 1319,
	285, 1319,
	286, 1319,
	287, 1319,
	288, 1319,
	289, 1319,
	290, 1319,
	291, 1319,
	294, 1319,
	298, 1319,
	299, 1319,
	300, 1319,
	303, 1319,
	304, 1319,
	305, 1319,
	306, 1319,
	307, 1319,
	308, 1319,
	309, 1319,
	310, 1319,
	311, 1319,
	312, 1319,
	313, 1319,
	314, 1319,
	315, 1319,
	316, 1319,
	317, 1319,
	318, 1319,
	319, 1319,
	320, 1319,
	322, 1319,
	323, 1319,
	324, 1319,
	325, 1319,
	326, 1319,
	327, 1319,
	328, 1319,
	329, 1319,
	330, 1319,
	332, 1319,
	334, 1319,
	335, 1319,
	336, 1319,
	337, 1319,
	338, 1319,
	339, 1319,
	340, 1319,
	341, 1319,
	342, 1319,
	343, 1319,
	344, 1319,
	346, 1319,
	352, 1319,
	354, 1319,
	355, 1319,
	356, 1319,
	357, 1319,
	358, 1319,
	359, 1319,
	360, 1319,
	361, 1319,
	363, 1319,
	364, 1319,
	365, 1319,
	366, 1319,
	367, 1319,
	368, 1319,
	369, 1319,
	370, 1319,
	371, 1319,
	372, 1319,
	374, 1319,
	375, 1319,
	376, 1319,
	377, 1319,
	378, 1319,
	379, 1319,
	380, 1319,
	381, 1319,
	382, 1319,
	383, 1319,
	384, 1319,
	386, 1319,
	387, 1319,
	388, 1319,
	389, 1319,
	390, 1319,
	391, 1319,
	392, 1319,
	393, 1319,
	394, 1319,
	395, 1319,
	396, 1319,
	397, 1319,
	398, 1319,
	399, 1319,
	400, 1319,
	401, 1319,
	402, 1319,
	403, 1319,
	404, 1319,
	405, 1319,
	407, 1319,
	409, 1319,
	410, 1319,
	411, 1319,
	412, 1319,
	413, 1319,
	414, 1319,
	415, 1319,
	416, 1319,
	417, 1319,
	418, 1319,
	419, 1319,
	420, 1319,
	421, 1319,
	423, 1319,
	424, 1319,
	425, 1319,
	426, 1319,
	428, 1319,
	429, 1319,
	430, 1319,
	431, 1319,
	432, 1319,
	433, 1319,
	434, 1319,
	435, 1319,
	437, 1319,
	438, 1319,
	439, 1319,
	440, 1319,
	441, 1319,
	443, 1319,
	445, 1319,
	446, 1319,
	447, 1319,
	448, 1319,
	449, 1319,
	450, 1319,
	451, 1319,
	452, 1319,
	453, 1319,
	455, 1319,
	456, 1319,
	458, 1319,
	459, 1319,
	460, 1319,
	461, 1319,
	462, 1319,
	463, 1319,
	464, 1319,
	465, 1319,
	466, 1319,
	467, 1319,
	470, 1319,
	471, 1319,
	472, 1319,
	473, 1319,
	474, 1319,
	475, 1319,
	477, 1319,
	478, 1319,
	479, 1319,
	484, 1319,
	485, 1319,
	486, 1319,
	487, 1319,
	488, 1319,
	489, 1319,
	490, 1319,
	497, 1319,
	504, 1319,
	505, 1319,
	506, 1319,
	513, 1319,
	517, 1319,
	-2, 0,
	-1, 623,
	172, 2028,
	442, 2028,
	496, 2028,
	515, 2028,
	-2, 0,
	-1, 624,
	172, 2115,
	442, 2115,
	496, 2115,
	515, 2115,
	-2, 0,
	-1, 625,
	172, 2016,
	442, 2016,
	496, 2016,
	515, 2016,
	-2, 0,
	-1, 627,
	172, 2214,
	442, 2214,
	496, 2214,
	515, 2214,
	-2, 0,
	-1, 629,
	172, 2248,
	442, 2248,
	496, 2248,
	515, 2248,
	-2, 0,
	-1, 636,
	172, 2130,
	442, 2130,
	496, 2130,
	515, 2130,
	-2, 612,
	-1, 667,
	515, 1967,
	518, 1967,
	-2, 849,
	-1, 668,
	515, 1969,
	518, 1969,
	-2, 850,
	-1, 669,
	515, 1968,
	518, 1968,
	-2, 851,
	-1, 670,
	518, 1902,
	-2, 852,
	-1, 692,
	169, 209,
	-2, 0,
	-1, 714,
	477, 1091,
	-2, 911,
	-1, 754,
	4, 1112,
	21, 1112,
	22, 1112,
	23, 1112,
	24, 1112,
	25, 1112,
	26, 1112,
	28, 1112,
	29, 1112,
	35, 1112,
	40, 1112,
	41, 1112,
	42, 1112,
	43, 1112,
	44, 1112,
	45, 1112,
	46, 1112,
	47, 1112,
	48, 1112,
	49, 1112,
	51, 1112,
	52, 1112,
	53, 1112,
	54, 1112,
	56, 1112,
	57, 1112,
	58, 1112,
	59, 1112,
	60, 1112,
	61, 1112,
	65, 1112,
	66, 1112,
	67, 1112,
	68, 1112,
	70, 1112,
	71, 1112,
	72, 1112,
	76, 1112,
	77, 1112,
	78, 1112,
	79, 1112,
	80, 1112,
	81, 1112,
	82, 1112,
	85, 1112,
	86, 1112,
	87, 1112,
	88, 1112,
	90, 1112,
	92, 1112,
	93, 1112,
	94, 1112,
	96, 1112,
	98, 1112,
	99, 1112,
	107, 1112,
	108, 1112,
	109, 1112,
	110, 1112,
	112, 1112,
	113, 1112,
	114, 1112,
	116, 1112,
	117, 1112,
	118, 1112,
	120, 1112,
	121, 1112,
	123, 1112,
	124, 1112,
	125, 1112,
	128, 1112,
	129, 1112,
	130, 1112,
	132, 1112,
	133, 1112,
	135, 1112,
	136, 1112,
	137, 1112,
	139, 1112,
	140, 1112,
	141, 1112,
	142, 1112,
	143, 1112,
	144, 1112,
	145, 1112,
	146, 1112,
	147, 1112,
	148, 1112,
	149, 1112,
	150, 1112,
	151, 1112,
	152, 1112,
	153, 1112,
	155, 1112,
	161, 1112,
	162, 1112,
	163, 1112,
	164, 1112,
	168, 1112,
	170, 1112,
	174, 1112,
	175, 1112,
	176, 1112,
	177, 1112,
	178, 1112,
	179, 1112,
	181, 1112,
	182, 1112,
	184, 1112,
	185, 1112,
	187, 1112,
	188, 1112,
	189, 1112,
	190, 1112,
	191, 1112,
	192, 1112,
	193, 1112,
	194, 1112,
	195, 1112,
	197, 1112,
	198, 1112,
	200, 1112,
	201, 1112,
	202, 1112,
	203, 1112,
	207, 1112,
	208, 1112,
	209, 1112,
	210, 1112,
	213, 1112,
	214, 1112,
	215, 1112,
	217, 1112,
	219, 1112,
	220, 1112,
	222, 1112,
	224, 1112,
	225, 1112,
	226, 1112,
	228, 1112,
	232, 1112,
	233, 1112,
	234, 1112,
	235, 1112,
	236, 1112,
	237, 1112,
	239, 1112,
	240, 1112,
	241, 1112,
	243, 1112,
	244, 1112,
	246, 1112,
	247, 1112,
	250, 1112,
	251, 1112,
	252, 1112,
	255, 1112,
	256, 1112,
	257, 1112,
	258, 1112,
	260, 1112,
	261, 1112,
	262, 1112,
	263, 1112,
	264, 1112,
	265, 1112,
	266, 1112,
	267, 1112,
	268, 1112,
	269, 1112,
	270, 1112,
	272, 1112,
	274, 1112,
	275, 1112,
	276, 1112,
	277, 1112,
	278, 1112,
	279, 1112,
	281, 1112,
	283, 1112,
	285, 1112,
	287, 1112,
	288, 1112,
	289, 1112,
	290, 1112,
	291, 1112,
	294, 1112,
	298, 1112,
	299, 1112,
	300, 1112,
	303, 1112,
	304, 1112,
	305, 1112,
	307, 1112,
	309, 1112,
	310, 1112,
	311, 1112,
	312, 1112,
	313, 1112,
	314, 1112,
	315, 1112,
	316, 1112,
	317, 1112,
	318, 1112,
	319, 1112,
	320, 1112,
	322, 1112,
	323, 1112,
	324, 1112,
	325, 1112,
	326, 1112,
	327, 1112,
	328, 1112,
	329, 1112,
	330, 1112,
	332, 1112,
	334, 1112,
	335, 1112,
	336, 1112,
	337, 1112,
	338, 1112,
	339, 1112,
	340, 1112,
	341, 1112,
	342, 1112,
	343, 1112,
	344, 1112,
	346, 1112,
	352, 1112,
	354, 1112,
	355, 1112,
	356, 1112,
	357, 1112,
	358, 1112,
	359, 1112,
	360, 1112,
	361, 1112,
	363, 1112,
	364, 1112,
	365, 1112,
	367, 1112,
	368, 1112,
	369, 1112,
	370, 1112,
	371, 1112,
	372, 1112,
	374, 1112,
	375, 1112,
	376, 1112,
	377, 1112,
	378, 1112,
	379, 1112,
	380, 1112,
	381, 1112,
	382, 1112,
	383, 1112,
	384, 1112,
	386, 1112,
	387, 1112,
	388, 1112,
	389, 1112,
	390, 1112,
	391, 1112,
	393, 1112,
	394, 1112,
	395, 1112,
	396, 1112,
	397, 1112,
	399, 1112,
	400, 1112,
	401, 1112,
	402, 1112,
	403, 1112,
	404, 1112,
	405, 1112,
	407, 1112,
	409, 1112,
	410, 1112,
	411, 1112,
	412, 1112,
	413, 1112,
	414, 1112,
	415, 1112,
	416, 1112,
	417, 1112,
	418, 1112,
	419, 1112,
	420, 1112,
	421, 1112,
	423, 1112,
	424, 1112,
	426, 1112,
	428, 1112,
	429, 1112,
	430, 1112,
	431, 1112,
	432, 1112,
	433, 1112,
	434, 1112,
	435, 1112,
	437, 1112,
	438, 1112,
	439, 1112,
	440, 1112,
	441, 1112,
	443, 1112,
	445, 1112,
	446, 1112,
	447, 1112,
	448, 1112,
	449, 1112,
	451, 1112,
	452, 1112,
	453, 1112,
	455, 1112,
	456, 1112,
	459, 1112,
	460, 1112,
	461, 1112,
	462, 1112,
	463, 1112,
	464, 1112,
	465, 1112,
	467, 1112,
	470, 1112,
	471, 1112,
	472, 1112,
	473, 1112,
	474, 1112,
	475, 1112,
	477, 1112,
	478, 1112,
	479, 1112,
	484, 1112,
	485, 1112,
	486, 1112,
	487, 1112,
	488, 1112,
	489, 1112,
	-2, 0,
	-1, 833,
	336, 765,
	391, 765,
	-2, 0,
	-1, 834,
	336, 764,
	391, 764,
	-2, 708,
	-1, 838,
	1, 805,
	512, 805,
	514, 805,
	516, 805,
	-2, 0,
	-1, 839,
	1, 743,
	512, 743,
	514, 743,
	516, 743,
	-2, 0,
	-1, 840,
	1, 848,
	169, 848,
	512, 848,
	514, 848,
	516, 848,
	-2, 0,
	-1, 848,
	1, 768,
	512, 768,
	514, 768,
	516, 768,
	-2, 0,
	-1, 854,
	1, 805,
	512, 805,
	514, 805,
	516, 805,
	-2, 0,
	-1, 855,
	1, 807,
	512, 807,
	514, 807,
	516, 807,
	-2, 0,
	-1, 856,
	1, 810,
	512, 810,
	514, 810,
	516, 810,
	-2, 0,
	-1, 862,
	1, 827,
	512, 827,
	514, 827,
	516, 827,
	-2, 0,
	-1, 863,
	1, 829,
	512, 829,
	514, 829,
	516, 829,
	-2, 0,
	-1, 912,
	156, 1321,
	169, 1321,
	249, 1321,
	292, 1321,
	-2, 1259,
	-1, 927,
	156, 1320,
	169, 1320,
	249, 1320,
	292, 1320,
	-2, 1256,
	-1, 953,
	515, 1966,
	-2, 620,
	-1, 981,
	5, 1958,
	513, 1956,
	-2, 1947,
	-1, 989,
	5, 1979,
	513, 1976,
	-2, 1967,
	-1, 990,
	5, 1980,
	513, 1977,
	-2, 1968,
	-1, 998,
	515, 1964,
	-2, 1946,
	-1, 999,
	513, 2327,
	-2, 1965,
	-1, 1022,
	513, 2326,
	-2, 1981,
	-1, 1023,
	5, 1486,
	-2, 2297,
	-1, 1024,
	5, 1487,
	-2, 2298,
	-1, 1025,
	5, 1488,
	-2, 2312,
	-1, 1026,
	5, 1489,
	-2, 2276,
	-1, 1027,
	5, 1490,
	-2, 2310,
	-1, 1028,
	5, 1498,
	-2, 2289,
	-1, 1029,
	5, 1485,
	-2, 2285,
	-1, 1030,
	5, 1485,
	-2, 2284,
	-1, 1031,
	5, 1485,
	-2, 2303,
	-1, 1032,
	5, 1496,
	-2, 2278,
	-1, 1033,
	5, 1501,
	-2, 2277,
	-1, 1034,
	5, 1503,
	-2, 2322,
	-1, 1037,
	5, 1525,
	-2, 2315,
	-1, 1038,
	5, 1517,
	-2, 2316,
	-1, 1039,
	5, 1525,
	-2, 2317,
	-1, 1040,
	5, 1521,
	-2, 2318,
	-1, 1041,
	5, 1471,
	-2, 2290,
	-1, 1042,
	5, 1472,
	-2, 2291,
	-1, 1043,
	5, 1473,
	-2, 2279,
	-1, 1070,
	5, 1508,
	-2, 2323,
	-1, 1071,
	5, 1509,
	-2, 2313,
	-1, 1072,
	5, 1510,
	478, 1510,
	-2, 2280,
	-1, 1073,
	5, 1511,
	478, 1511,
	-2, 2281,
	-1, 1110,
	513, 1976,
	-2, 1967,
	-1, 1111,
	513, 1977,
	-2, 1968,
	-1, 1141,
	172, 2248,
	442, 2248,
	496, 2248,
	515, 2248,
	-2, 0,
	-1, 1144,
	1, 598,
	516, 598,
	-2, 1194,
	-1, 1269,
	354, 1942,
	393, 1942,
	506, 1942,
	-2, 1940,
	-1, 1281,
	517, 1942,
	-2, 1943,
	-1, 1288,
	1, 1088,
	512, 1088,
	514, 1088,
	516, 1088,
	-2, 1308,
	-1, 1342,
	342, 910,
	477, 910,
	-2, 334,
	-1, 1363,
	1, 1088,
	512, 1088,
	514, 1088,
	516, 1088,
	-2, 1308,
	-1, 1370,
	4, 1112,
	21, 1112,
	22, 1112,
	23, 1112,
	24, 1112,
	25, 1112,
	26, 1112,
	28, 1112,
	29, 1112,
	35, 1112,
	40, 1112,
	41, 1112,
	42, 1112,
	43, 1112,
	44, 1112,
	45, 1112,
	46, 1112,
	47, 1112,
	48, 1112,
	49, 1112,
	51, 1112,
	52, 1112,
	53, 1112,
	54, 1112,
	56, 1112,
	57, 1112,
	58, 1112,
	59, 1112,
	60, 1112,
	61, 1112,
	65, 1112,
	66, 1112,
	67, 1112,
	68, 1112,
	70, 1112,
	71, 1112,
	72, 1112,
	76, 1112,
	77, 1112,
	78, 1112,
	79, 1112,
	80, 1112,
	81, 1112,
	82, 1112,
	85, 1112,
	86, 1112,
	87, 1112,
	88, 1112,
	90, 1112,
	92, 1112,
	93, 1112,
	94, 1112,
	96, 1112,
	98, 1112,
	99, 1112,
	107, 1112,
	108, 1112,
	109, 1112,
	110, 1112,
	112, 1112,
	113, 1112,
	114, 1112,
	116, 1112,
	117, 1112,
	118, 1112,
	120, 1112,
	121, 1112,
	123, 1112,
	124, 1112,
	125, 1112,
	128, 1112,
	129, 1112,
	130, 1112,
	132, 1112,
	133, 1112,
	135, 1112,
	136, 1112,
	137, 1112,
	139, 1112,
	140, 1112,
	141, 1112,
	142, 1112,
	143, 1112,
	144, 1112,
	145, 1112,
	146, 1112,
	147, 1112,
	148, 1112,
	149, 1112,
	150, 1112,
	151, 1112,
	152, 1112,
	153, 1112,
	161, 1112,
	162, 1112,
	163, 1112,
	164, 1112,
	168, 1112,
	170, 1112,
	174, 1112,
	175, 1112,
	176, 1112,
	177, 1112,
	178, 1112,
	179, 1112,
	181, 1112,
	182, 1112,
	184, 1112,
	185, 1112,
	187, 1112,
	188, 1112,
	189, 1112,
	190, 1112,
	191, 1112,
	192, 1112,
	193, 1112,
	194, 1112,
	195, 1112,
	197, 1112,
	198, 1112,
	200, 1112,
	201, 1112,
	202, 1112,
	203, 1112,
	208, 1112,
	209, 1112,
	210, 1112,
	213, 1112,
	214, 1112,
	215, 1112,
	217, 1112,
	219, 1112,
	220, 1112,
	222, 1112,
	224, 1112,
	225, 1112,
	226, 1112,
	228, 1112,
	232, 1112,
	233, 1112,
	234, 1112,
	235, 1112,
	236, 1112,
	237, 1112,
	239, 1112,
	240, 1112,
	241, 1112,
	243, 1112,
	244, 1112,
	246, 1112,
	247, 1112,
	250, 1112,
	251, 1112,
	252, 1112,
	255, 1112,
	256, 1112,
	257, 1112,
	258, 1112,
	260, 1112,
	261, 1112,
	262, 1112,
	263, 1112,
	264, 1112,
	265, 1112,
	266, 1112,
	267, 1112,
	268, 1112,
	269, 1112,
	270, 1112,
	272, 1112,
	274, 1112,
	275, 1112,
	276, 1112,
	277, 1112,
	278, 1112,
	279, 1112,
	281, 1112,
	285, 1112,
	287, 1112,
	288, 1112,
	289, 1112,
	290, 1112,
	291, 1112,
	294, 1112,
	296, 1112,
	298, 1112,
	299, 1112,
	300, 1112,
	303, 1112,
	304, 1112,
	305, 1112,
	307, 1112,
	309, 1112,
	310, 1112,
	311, 1112,
	312, 1112,
	313, 1112,
	314, 1112,
	315, 1112,
	316, 1112,
	317, 1112,
	318, 1112,
	319, 1112,
	320, 1112,
	322, 1112,
	323, 1112,
	324, 1112,
	325, 1112,
	326, 1112,
	327, 1112,
	328, 1112,
	329, 1112,
	330, 1112,
	332, 1112,
	334, 1112,
	335, 1112,
	336, 1112,
	337, 1112,
	338, 1112,
	339, 1112,
	340, 1112,
	341, 1112,
	342, 1112,
	343, 1112,
	344, 1112,
	346, 1112,
	352, 1112,
	354, 1112,
	355, 1112,
	356, 1112,
	357, 1112,
	358, 1112,
	359, 1112,
	360, 1112,
	361, 1112,
	363, 1112,
	364, 1112,
	365, 1112,
	367, 1112,
	368, 1112,
	369, 1112,
	370, 1112,
	371, 1112,
	372, 1112,
	374, 1112,
	375, 1112,
	376, 1112,
	377, 1112,
	378, 1112,
	379, 1112,
	380, 1112,
	381, 1112,
	382, 1112,
	383, 1112,
	384, 1112,
	386, 1112,
	387, 1112,
	388, 1112,
	389, 1112,
	390, 1112,
	391, 1112,
	393, 1112,
	394, 1112,
	395, 1112,
	396, 1112,
	397, 1112,
	399, 1112,
	400, 1112,
	401, 1112,
	402, 1112,
	403, 1112,
	404, 1112,
	405, 1112,
	407, 1112,
	409, 1112,
	410, 1112,
	411, 1112,
	412, 1112,
	413, 1112,
	414, 1112,
	415, 1112,
	416, 1112,
	417, 1112,
	418, 1112,
	419, 1112,
	420, 1112,
	421, 1112,
	423, 1112,
	424, 1112,
	426, 1112,
	428, 1112,
	429, 1112,
	430, 1112,
	431, 1112,
	432, 1112,
	433, 1112,
	434, 1112,
	435, 1112,
	437, 1112,
	438, 1112,
	439, 1112,
	440, 1112,
	441, 1112,
	443, 1112,
	445, 1112,
	446, 1112,
	447, 1112,
	448, 1112,
	449, 1112,
	451, 1112,
	452, 1112,
	453, 1112,
	455, 1112,
	456, 1112,
	459, 1112,
	460, 1112,
	461, 1112,
	462, 1112,
	463, 1112,
	464, 1112,
	465, 1112,
	467, 1112,
	470, 1112,
	471, 1112,
	472, 1112,
	473, 1112,
	474, 1112,
	475, 1112,
	477, 1112,
	478, 1112,
	479, 1112,
	484, 1112,
	485, 1112,
	486, 1112,
	487, 1112,
	488, 1112,
	489, 1112,
	-2, 0,
	-1, 1443,
	1, 473,
	512, 473,
	514, 473,
	516, 473,
	-2, 1279,
	-1, 1446,
	4, 2321,
	11, 2321,
	12, 2321,
	14, 2321,
	15, 2321,
	16, 2321,
	17, 2321,
	18, 2321,
	19, 2321,
	21, 2321,
	22, 2321,
	23, 2321,
	24, 2321,
	25, 2321,
	26, 2321,
	28, 2321,
	29, 2321,
	32, 2321,
	33, 2321,
	35, 2321,
	37, 2321,
	40, 2321,
	41, 2321,
	42, 2321,
	43, 2321,
	44, 2321,
	45, 2321,
	46, 2321,
	47, 2321,
	48, 2321,
	49, 2321,
	51, 2321,
	52, 2321,
	53, 2321,
	54, 2321,
	56, 2321,
	57, 2321,
	58, 2321,
	59, 2321,
	60, 2321,
	61, 2321,
	65, 2321,
	66, 2321,
	67, 2321,
	68, 2321,
	70, 2321,
	71, 2321,
	72, 2321,
	73, 2321,
	76, 2321,
	77, 2321,
	78, 2321,
	79, 2321,
	80, 2321,
	81, 2321,
	82, 2321,
	83, 2321,
	85, 2321,
	86, 2321,
	87, 2321,
	88, 2321,
	90, 2321,
	91, 2321,
	92, 2321,
	93, 2321,
	94, 2321,
	96, 2321,
	97, 2321,
	98, 2321,
	99, 2321,
	107, 2321,
	108, 2321,
	109, 2321,
	110, 2321,
	112, 2321,
	113, 2321,
	114, 2321,
	116, 2321,
	117, 2321,
	118, 2321,
	120, 2321,
	121, 2321,
	123, 2321,
	124, 2321,
	125, 2321,
	128, 2321,
	129, 2321,
	130, 2321,
	132, 2321,
	133, 2321,
	135, 2321,
	136, 2321,
	137, 2321,
	139, 2321,
	140, 2321,
	141, 2321,
	142, 2321,
	143, 2321,
	144, 2321,
	145, 2321,
	146, 2321,
	147, 2321,
	148, 2321,
	149, 2321,
	150, 2321,
	151, 2321,
	152, 2321,
	153, 2321,
	157, 2321,
	158, 2321,
	159, 2321,
	160, 2321,
	161, 2321,
	162, 2321,
	163, 2321,
	164, 2321,
	167, 2321,
	168, 2321,
	170, 2321,
	173, 2321,
	174, 2321,
	175, 2321,
	176, 2321,
	177, 2321,
	178, 2321,
	179, 2321,
	181, 2321,
	182, 2321,
	184, 2321,
	185, 2321,
	187, 2321,
	188, 2321,
	189, 2321,
	190, 2321,
	191, 2321,
	192, 2321,
	193, 2321,
	194, 2321,
	195, 2321,
	196, 2321,
	197, 2321,
	198, 2321,
	199, 2321,
	200, 2321,
	201, 2321,
	202, 2321,
	203, 2321,
	205, 2321,
	206, 2321,
	208, 2321,
	209, 2321,
	210, 2321,
	212, 2321,
	213, 2321,
	214, 2321,
	215, 2321,
	217, 2321,
	219, 2321,
	220, 2321,
	221, 2321,
	222, 2321,
	223, 2321,
	224, 2321,
	225, 2321,
	226, 2321,
	227, 2321,
	228, 2321,
	230, 2321,
	231, 2321,
	232, 2321,
	233, 2321,
	234, 2321,
	235, 2321,
	236, 2321,
	237, 2321,
	239, 2321,
	240, 2321,
	241, 2321,
	243, 2321,
	244, 2321,
	245, 2321,
	246, 2321,
	247, 2321,
	248, 2321,
	250, 2321,
	251, 2321,
	252, 2321,
	255, 2321,
	256, 2321,
	257, 2321,
	258, 2321,
	259, 2321,
	260, 2321,
	261, 2321,
	262, 2321,
	263, 2321,
	264, 2321,
	265, 2321,
	266, 2321,
	267, 2321,
	268, 2321,
	269, 2321,
	270, 2321,
	272, 2321,
	273, 2321,
	274, 2321,
	275, 2321,
	276, 2321,
	277, 2321,
	278, 2321,
	279, 2321,
	281, 2321,
	284, 2321,
	285, 2321,
	287, 2321,
	288, 2321,
	289, 2321,
	290, 2321,
	291, 2321,
	294, 2321,
	298, 2321,
	299, 2321,
	300, 2321,
	301, 2321,
	303, 2321,
	304, 2321,
	305, 2321,
	307, 2321,
	309, 2321,
	310, 2321,
	311, 2321,
	312, 2321,
	313, 2321,
	314, 2321,
	315, 2321,
	316, 2321,
	317, 2321,
	318, 2321,
	319, 2321,
	320, 2321,
	322, 2321,
	323, 2321,
	324, 2321,
	325, 2321,
	326, 2321,
	327, 2321,
	328, 2321,
	329, 2321,
	330, 2321,
	332, 2321,
	334, 2321,
	335, 2321,
	336, 2321,
	337, 2321,
	338, 2321,
	339, 2321,
	340, 2321,
	341, 2321,
	342, 2321,
	343, 2321,
	344, 2321,
	346, 2321,
	352, 2321,
	353, 2321,
	354, 2321,
	355, 2321,
	356, 2321,
	357, 2321,
	358, 2321,
	359, 2321,
	360, 2321,
	361, 2321,
	363, 2321,
	364, 2321,
	365, 2321,
	366, 2321,
	367, 2321,
	368, 2321,
	369, 2321,
	370, 2321,
	371, 2321,
	372, 2321,
	373, 2321,
	374, 2321,
	375, 2321,
	376, 2321,
	377, 2321,
	378, 2321,
	379, 2321,
	380, 2321,
	381, 2321,
	382, 2321,
	383, 2321,
	384, 2321,
	386, 2321,
	387, 2321,
	388, 2321,
	389, 2321,
	390, 2321,
	391, 2321,
	393, 2321,
	394, 2321,
	395, 2321,
	396, 2321,
	397, 2321,
	398, 2321,
	399, 2321,
	400, 2321,
	401, 2321,
	402, 2321,
	403, 2321,
	404, 2321,
	405, 2321,
	407, 2321,
	409, 2321,
	410, 2321,
	411, 2321,
	412, 2321,
	413, 2321,
	414, 2321,
	415, 2321,
	416, 2321,
	417, 2321,
	418, 2321,
	419, 2321,
	420, 2321,
	421, 2321,
	423, 2321,
	424, 2321,
	426, 2321,
	428, 2321,
	429, 2321,
	430, 2321,
	431, 2321,
	432, 2321,
	433, 2321,
	434, 2321,
	435, 2321,
	437, 2321,
	438, 2321,
	439, 2321,
	440, 2321,
	441, 2321,
	443, 2321,
	445, 2321,
	446, 2321,
	447, 2321,
	448, 2321,
	449, 2321,
	451, 2321,
	452, 2321,
	453, 2321,
	455, 2321,
	456, 2321,
	459, 2321,
	460, 2321,
	461, 2321,
	462, 2321,
	463, 2321,
	464, 2321,
	465, 2321,
	467, 2321,
	470, 2321,
	471, 2321,
	472, 2321,
	473, 2321,
	474, 2321,
	475, 2321,
	477, 2321,
	478, 2321,
	479, 2321,
	484, 2321,
	485, 2321,
	486, 2321,
	487, 2321,
	488, 2321,
	489, 2321,
	490, 2321,
	491, 2321,
	494, 2321,
	495, 2321,
	496, 2321,
	497, 2321,
	498, 2321,
	499, 2321,
	501, 2321,
	502, 2321,
	503, 2321,
	504, 2321,
	505, 2321,
	506, 2321,
	507, 2321,
	508, 2321,
	509, 2321,
	511, 2321,
	514, 2321,
	515, 2321,
	517, 2321,
	518, 2321,
	-2, 0,
	-1, 1451,
	172, 2214,
	442, 2214,
	496, 2214,
	515, 2214,
	-2, 0,
	-1, 1500,
	336, 765,
	391, 765,
	-2, 0,
	-1, 1525,
	1, 760,
	512, 760,
	514, 760,
	516, 760,
	-2, 0,
	-1, 1526,
	1, 796,
	512, 796,
	514, 796,
	516, 796,
	-2, 0,
	-1, 1527,
	1, 767,
	512, 767,
	514, 767,
	516, 767,
	-2, 0,
	-1, 1529,
	1, 771,
	512, 771,
	514, 771,
	516, 771,
	-2, 0,
	-1, 1535,
	1, 778,
	512, 778,
	514, 778,
	516, 778,
	-2, 0,
	-1, 1563,
	1, 2268,
	512, 2268,
	514, 2268,
	515, 2268,
	516, 2268,
	-2, 825,
	-1, 1564,
	1, 2211,
	512, 2211,
	514, 2211,
	515, 2211,
	516, 2211,
	-2, 826,
	-1, 1579,
	1, 1189,
	516, 1189,
	-2, 1194,
	-1, 1582,
	156, 1320,
	169, 1320,
	249, 1320,
	292, 1320,
	-2, 1260,
	-1, 1676,
	138, 1281,
	156, 1281,
	169, 1281,
	216, 1281,
	249, 1281,
	292, 1281,
	302, 1281,
	457, 1281,
	-2, 1686,
	-1, 1736,
	514, 1836,
	-2, 0,
	-1, 1771,
	138, 1281,
	156, 1281,
	169, 1281,
	216, 1281,
	249, 1281,
	292, 1281,
	302, 1281,
	457, 1281,
	-2, 1401,
	-1, 1819,
	513, 1513,
	-2, 1501,
	-1, 1855,
	1, 600,
	516, 600,
	-2, 1194,
	-1, 2090,
	1, 762,
	512, 762,
	514, 762,
	516, 762,
	-2, 0,
	-1, 2091,
	1, 798,
	512, 798,
	514, 798,
	516, 798,
	-2, 0,
	-1, 2121,
	1, 780,
	512, 780,
	514, 780,
	516, 780,
	-2, 0,
	-1, 2167,
	371, 1347,
	372, 1347,
	-2, 1546,
	-1, 2198,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1566,
	-1, 2199,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1567,
	-1, 2200,
	91, 0,
	230, 0,
	231, 0,
	498, 0,
	499, 0,
	-2, 1568,
	-1, 2201,
	91, 0,
	230, 0,
	231, 0,
	498, 0,
	499, 0,
	-2, 1569,
	-1, 2202,
	91, 0,
	230, 0,
	231, 0,
	498, 0,
	499, 0,
	-2, 1570,
	-1, 2203,
	91, 0,
	230, 0,
	231, 0,
	498, 0,
	499, 0,
	-2, 1571,
	-1, 2204,
	91, 0,
	230, 0,
	231, 0,
	498, 0,
	499, 0,
	-2, 1572,
	-1, 2205,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1573,
	-1, 2217,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1585,
	-1, 2218,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1586,
	-1, 2219,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1587,
	-1, 2222,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1592,
	-1, 2228,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1596,
	-1, 2230,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1604,
	-1, 2231,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1605,
	-1, 2232,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1606,
	-1, 2233,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1607,
	-1, 2345,
	5, 1979,
	172, 1847,
	513, 1976,
	-2, 1967,
	-1, 2346,
	172, 1848,
	-2, 2272,
	-1, 2347,
	172, 1849,
	-2, 2129,
	-1, 2348,
	172, 1850,
	-2, 2039,
	-1, 2349,
	172, 1851,
	-2, 2083,
	-1, 2350,
	172, 1852,
	-2, 2124,
	-1, 2351,
	172, 1853,
	-2, 2209,
	-1, 2352,
	172, 1854,
	-2, 1669,
	-1, 2421,
	1, 1402,
	2, 1402,
	97, 1402,
	138, 1402,
	156, 1402,
	169, 1402,
	173, 1402,
	183, 1402,
	186, 1402,
	212, 1402,
	216, 1402,
	227, 1402,
	245, 1402,
	249, 1402,
	273, 1402,
	292, 1402,
	296, 1402,
	302, 1402,
	362, 1402,
	366, 1402,
	457, 1402,
	468, 1402,
	481, 1402,
	482, 1402,
	483, 1402,
	492, 1402,
	512, 1402,
	514, 1402,
	516, 1402,
	518, 1402,
	-2, 1401,
	-1, 2434,
	513, 1948,
	-2, 1962,
	-1, 2436,
	1, 271,
	-2, 1308,
	-1, 2460,
	513, 1512,
	-2, 1502,
	-1, 2580,
	1, 1088,
	512, 1088,
	514, 1088,
	516, 1088,
	-2, 1308,
	-1, 2751,
	297, 1350,
	-2, 2311,
	-1, 2752,
	297, 1351,
	-2, 2195,
	-1, 2756,
	371, 1913,
	372, 1913,
	-2, 1667,
	-1, 2757,
	371, 1917,
	372, 1917,
	-2, 1668,
	-1, 2758,
	371, 1914,
	372, 1914,
	-2, 1667,
	-1, 2759,
	371, 1918,
	372, 1918,
	-2, 1668,
	-1, 2772,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1594,
	-1, 2773,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1598,
	-1, 2779,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1600,
	-1, 2979,
	224, 1194,
	332, 1194,
	340, 1194,
	492, 1194,
	-2, 597,
	-1, 3110,
	1, 1088,
	512, 1088,
	514, 1088,
	516, 1088,
	-2, 1308,
	-1, 3218,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1602,
	-1, 3225,
	221, 0,
	223, 0,
	284, 0,
	-2, 1621,
	-1, 3292,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1650,
	-1, 3293,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1651,
	-1, 3294,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1652,
	-1, 3298,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1656,
	-1, 3299,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1657,
	-1, 3300,
	14, 0,
	15, 0,
	16, 0,
	494, 0,
	495, 0,
	496, 0,
	-2, 1658,
	-1, 3346,
	513, 1949,
	-2, 1963,
	-1, 3477,
	515, 2427,
	-2, 1238,
	-1, 3535,
	221, 0,
	223, 0,
	284, 0,
	-2, 1622,
	-1, 3538,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1625,
	-1, 3539,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1627,
	-1, 3747,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1626,
	-1, 3748,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	196, 0,
	199, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 1628,
	-1, 3759,
	221, 0,
	-2, 1659,
	-1, 3908,
	221, 0,
	-2, 1660,
	-1, 4058,
	48, 0,
	196, 0,
	248, 0,
	398, 0,
	490, 0,
	497, 0,
	-2, 2275,
}

const sqlPrivate = 57344

const sqlLast = 106249

var sqlAct = [...]int{

	242, 3951, 3930, 3672, 3791, 2906, 4068, 3836, 2670, 4057,
	4166, 4026, 4032, 2495, 3095, 3794, 3518, 3374, 3096, 3998,
	4069, 4016, 4070, 3257, 1114, 4116, 4056, 3779, 4013, 2059,
	3912, 2907, 3704, 2640, 3843, 937, 2177, 3699, 3655, 1434,
	3127, 3736, 2997, 3469, 3852, 3686, 3412, 2043, 2068, 1429,
	3604, 3875, 3709, 2245, 3122, 1591, 1291, 3120, 3446, 3431,
	1466, 3091, 3210, 3429, 1806, 2185, 1908, 634, 3081, 1777,
	669, 1308, 3375, 2557, 2679, 2765, 1173, 2692, 2178, 3173,
	3764, 3175, 2629, 928, 2611, 2602, 2949, 2377, 2004, 3348,
	2681, 2929, 1103, 3574, 669, 234, 2912, 1266, 2921, 3517,
	2689, 2672, 2889, 2910, 768, 2641, 988, 1508, 1957, 1956,
	2066, 2497, 2888, 2182, 2626, 1746, 2414, 936, 163, 2624,
	2678, 2258, 2534, 3913, 1684, 1918, 2289, 4, 3317, 1274,
	2413, 1465, 2041, 101, 2749, 2571, 2287, 3016, 1722, 981,
	1935, 2416, 664, 1951, 1807, 2688, 985, 1942, 2612, 236,
	1891, 3837, 1157, 2956, 1409, 1579, 2374, 1094, 235, 1894,
	1766, 2278, 2395, 2242, 2166, 2149, 1747, 1881, 2147, 3093,
	1444, 1430, 2446, 2533, 1361, 1420, 990, 2634, 2281, 1993,
	2682, 670, 2486, 671, 600, 1146, 2403, 1097, 2445, 586,
	1756, 2385, 1076, 608, 2259, 1271, 1717, 1669, 2341, 1593,
	172, 1592, 2331, 2148, 163, 1293, 616, 1535, 173, 666,
	1992, 1111, 2150, 628, 762, 2016, 714, 1442, 741, 675,
	1385, 1303, 1907, 2171, 603, 966, 42, 41, 678, 992,
	39, 30, 28, 1099, 26, 827, 2800, 611, 1074, 1598,
	1314, 1578, 846, 675, 3331, 2796, 3332, 2908, 932, 4229,
	3137, 1035, 678, 2394, 68, 4223, 4208, 1307, 2977, 3154,
	2394, 2032, 2032, 2032, 2032, 1474, 2032, 4207, 4183, 1763,
	69, 2394, 3620, 4181, 4177, 4098, 4092, 3620, 1967, 4099,
	2394, 4090, 932, 4087, 3136, 2394, 73, 4088, 4084, 4079,
	4054, 4053, 4085, 1967, 1967, 1967, 4052, 1093, 4047, 2809,
	2052, 37, 2052, 783, 1080, 2810, 1081, 1091, 933, 1606,
	1607, 4046, 4041, 2387, 4039, 2052, 3620, 1106, 3620, 4011,
	3992, 79, 3985, 3620, 2451, 3984, 2394, 1130, 3979, 2394,
	3978, 1637, 3620, 3972, 3620, 3944, 3910, 1967, 1609, 3664,
	2451, 1154, 1154, 3892, 1077, 1077, 1528, 3506, 3889, 3886,
	1109, 3845, 1967, 3620, 3811, 3846, 85, 3810, 1967, 3802,
	3154, 1967, 3801, 1967, 913, 3770, 3620, 2067, 3321, 1967,
	100, 1608, 912, 3749, 3728, 86, 97, 2451, 2052, 2861,
	2862, 1628, 2879, 2880, 2881, 3717, 3650, 3639, 3619, 3154,
	2394, 2394, 3620, 3537, 2861, 2862, 2764, 2451, 86, 3485,
	3533, 3479, 3444, 3170, 1433, 3170, 3445, 922, 3341, 3339,
	927, 3324, 3342, 3340, 3241, 2394, 3237, 3169, 1967, 3161,
	2394, 3170, 2905, 3162, 87, 2900, 2394, 2899, 2394, 2394,
	2852, 2394, 1316, 2850, 2853, 2842, 2840, 2851, 2447, 2843,
	2394, 2811, 1078, 2695, 2668, 2394, 2667, 2052, 2055, 3993,
	2055, 2876, 3905, 1460, 3893, 1631, 1632, 1633, 1634, 2470,
	1125, 2052, 2450, 2394, 2394, 1614, 2451, 2443, 2437, 3321,
	2393, 2394, 1967, 1967, 2394, 2054, 2386, 3698, 3664, 2055,
	3640, 1967, 3506, 3162, 2548, 1912, 2485, 1861, 2031, 2608,
	2047, 1966, 2565, 2483, 1742, 1302, 1315, 3138, 2799, 987,
	3404, 3213, 3191, 1636, 1638, 1764, 1945, 208, 2430, 1510,
	2429, 2428, 2427, 1316, 2426, 1082, 3139, 3590, 1606, 1607,
	1079, 1639, 1640, 1641, 1649, 1650, 1651, 921, 983, 1606,
	1607, 920, 919, 918, 208, 2867, 1126, 917, 916, 915,
	1637, 2729, 4075, 911, 90, 910, 909, 1609, 908, 210,
	2867, 907, 2861, 2862, 906, 1655, 905, 1629, 1609, 904,
	2033, 2033, 2033, 2033, 903, 2033, 902, 901, 900, 899,
	898, 897, 896, 895, 877, 825, 210, 2284, 1606, 1607,
	1608, 824, 823, 822, 171, 93, 821, 96, 820, 2882,
	1628, 1608, 819, 818, 3549, 209, 3136, 817, 1625, 816,
	1637, 815, 1307, 814, 1126, 202, 813, 1609, 812, 811,
	810, 208, 809, 203, 808, 807, 806, 805, 804, 767,
	1316, 2030, 209, 136, 803, 802, 801, 2877, 800, 799,
	798, 797, 796, 990, 208, 174, 786, 990, 4055, 785,
	1608, 781, 2877, 780, 774, 773, 136, 732, 208, 731,
	1628, 1635, 1176, 210, 691, 2285, 1176, 1328, 1625, 2386,
	1296, 2637, 174, 1316, 1631, 1632, 1633, 1634, 1156, 690,
	689, 1630, 1161, 1126, 1614, 681, 210, 138, 1150, 680,
	679, 648, 640, 639, 990, 1614, 990, 638, 990, 622,
	210, 175, 230, 1296, 229, 228, 227, 226, 225, 209,
	224, 223, 222, 1646, 1277, 221, 1656, 1282, 2867, 202,
	1105, 220, 1636, 1638, 219, 218, 1296, 203, 2656, 2031,
	2050, 2047, 209, 2142, 1631, 1632, 1633, 1634, 217, 208,
	2286, 2283, 202, 216, 1614, 215, 209, 1623, 1624, 174,
	203, 2878, 3357, 1306, 214, 213, 202, 212, 1478, 1269,
	2861, 2862, 1281, 1284, 203, 1644, 2878, 211, 3335, 1296,
	990, 3171, 174, 2952, 2314, 1296, 1629, 1367, 1369, 1296,
	2822, 210, 1636, 1638, 2805, 2589, 174, 990, 2620, 990,
	2455, 2435, 1322, 1296, 1725, 1144, 2420, 1725, 2062, 990,
	1724, 990, 2300, 1724, 1889, 1767, 1790, 1623, 1624, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1169, 2903,
	1263, 1268, 1728, 1284, 1284, 1723, 1695, 209, 1605, 1686,
	1310, 1163, 675, 1113, 1530, 3958, 1629, 202, 2298, 3902,
	2904, 678, 3789, 1296, 3896, 203, 208, 1464, 3894, 3763,
	3718, 1139, 3697, 3713, 3597, 3572, 3571, 1327, 1441, 2288,
	990, 3565, 1284, 990, 1305, 3564, 1304, 174, 1693, 3563,
	1635, 3556, 2873, 2874, 2875, 2061, 3555, 964, 3553, 2872,
	2870, 2871, 2863, 2864, 2865, 2866, 2868, 2869, 210, 208,
	1630, 3548, 3449, 163, 163, 2870, 2871, 2863, 2864, 2865,
	2866, 2868, 2869, 1447, 1449, 3545, 3544, 1479, 933, 2861,
	2862, 3443, 2879, 2880, 2881, 1647, 2867, 1414, 1417, 3361,
	3360, 3359, 2553, 3345, 2519, 3402, 1372, 3312, 3311, 3310,
	1635, 210, 3233, 3229, 209, 2947, 2896, 2861, 2862, 1426,
	1150, 208, 2887, 1150, 202, 2860, 2857, 2856, 2861, 2862,
	1630, 2854, 203, 990, 990, 990, 990, 990, 990, 990,
	3165, 1423, 2849, 2282, 2848, 2847, 2844, 2841, 2821, 1687,
	2804, 1685, 1544, 2797, 174, 1090, 2669, 209, 2861, 2862,
	1445, 2876, 1321, 210, 990, 2421, 2271, 202, 2464, 1686,
	990, 2622, 1605, 2007, 1974, 203, 1313, 1604, 1320, 4222,
	1326, 1972, 4175, 4174, 3450, 4108, 1583, 1645, 2877, 2876,
	4106, 1620, 1621, 1627, 1648, 1626, 1622, 174, 1619, 1617,
	1618, 1610, 1611, 1612, 1613, 1615, 1616, 935, 1459, 209,
	3774, 4097, 1610, 1611, 1612, 1613, 1615, 1616, 1388, 202,
	1473, 4172, 1115, 3259, 3950, 3940, 1577, 203, 3937, 3936,
	208, 1675, 2861, 2862, 3935, 2863, 2864, 2865, 2866, 2868,
	2869, 3929, 3922, 3890, 208, 2867, 208, 3874, 3873, 2636,
	3712, 2901, 1440, 1285, 1484, 1626, 1622, 2248, 1619, 1617,
	1618, 1610, 1611, 1612, 1613, 1615, 1616, 1501, 1107, 1458,
	3914, 1463, 210, 2867, 990, 990, 990, 2883, 3861, 1531,
	990, 1472, 3858, 1477, 2867, 3807, 210, 1111, 210, 1111,
	3785, 3450, 1744, 3761, 3744, 3743, 3725, 933, 2944, 2882,
	3724, 3689, 2878, 3665, 1176, 3589, 3570, 3507, 1357, 3501,
	3498, 2254, 990, 3392, 2867, 669, 1580, 3391, 209, 1824,
	669, 208, 1588, 3378, 3377, 3327, 3315, 913, 202, 990,
	3224, 1587, 209, 1296, 209, 912, 203, 2877, 1673, 1582,
	1529, 3172, 202, 3155, 202, 3113, 2621, 3054, 990, 1584,
	203, 3029, 203, 3000, 1176, 208, 2999, 1798, 174, 2971,
	1601, 1602, 2969, 210, 2826, 2877, 2825, 1753, 1727, 2820,
	2788, 2601, 174, 1731, 174, 1730, 2877, 1793, 1729, 1726,
	1150, 1718, 1716, 1887, 2462, 1774, 2461, 1803, 2867, 1858,
	1750, 1751, 1849, 1106, 1852, 1106, 2063, 210, 2432, 1800,
	2425, 2392, 2296, 1789, 1745, 1281, 1740, 1077, 163, 209,
	208, 1739, 1738, 1737, 1736, 1467, 1853, 1719, 1720, 202,
	1735, 208, 933, 1734, 1733, 1732, 1109, 203, 1109, 1713,
	2872, 2870, 2871, 2863, 2864, 2865, 2866, 2868, 2869, 1712,
	1711, 1710, 3692, 209, 1709, 1708, 3000, 1707, 1797, 174,
	1775, 2878, 210, 202, 1706, 1796, 1705, 1704, 1703, 1702,
	1701, 203, 1700, 210, 675, 3593, 2313, 1699, 1878, 675,
	1688, 1674, 1672, 678, 1606, 1607, 1772, 1667, 678, 2878,
	2877, 1138, 1128, 174, 1872, 1871, 1121, 1855, 1880, 1882,
	2878, 1296, 1296, 3541, 2299, 3356, 1637, 3338, 209, 1851,
	3330, 1176, 1794, 1609, 1743, 2808, 2423, 2453, 202, 209,
	3897, 1900, 3642, 3595, 3895, 3355, 203, 1784, 1783, 202,
	1769, 1782, 1780, 1779, 1801, 1778, 1687, 203, 1932, 1847,
	2297, 1934, 2967, 3788, 1939, 1670, 1608, 1880, 174, 2861,
	2862, 1804, 3032, 1785, 1160, 1880, 1708, 4165, 1818, 174,
	3938, 1962, 1964, 1708, 1765, 3123, 1694, 3848, 3847, 3716,
	3667, 3666, 3641, 3592, 3510, 3509, 3508, 1606, 1607, 1883,
	1821, 1873, 2873, 2874, 2875, 1606, 1607, 3333, 3157, 2872,
	2870, 2871, 2863, 2864, 2865, 2866, 2868, 2869, 1880, 3156,
	208, 1154, 1781, 3453, 2878, 1875, 1609, 1725, 1159, 1767,
	1912, 3853, 1154, 1724, 1609, 1917, 1575, 2872, 2870, 2871,
	2863, 2864, 2865, 2866, 2868, 2869, 2846, 2845, 2770, 1943,
	2871, 2863, 2864, 2865, 2866, 2868, 2869, 2521, 1155, 1608,
	1614, 3390, 210, 893, 2082, 1697, 1158, 1608, 2538, 1296,
	1151, 1296, 675, 1296, 4051, 1509, 2000, 1960, 1997, 2008,
	1154, 678, 2060, 2865, 2866, 2868, 2869, 3844, 4095, 1296,
	1296, 1867, 3098, 2002, 3097, 1856, 1089, 4080, 1636, 1638,
	1296, 2013, 1500, 894, 1305, 4067, 1304, 3082, 209, 2693,
	1545, 1510, 1296, 1145, 1296, 1296, 1296, 1958, 202, 3409,
	1938, 3395, 3188, 3765, 2908, 3261, 203, 1877, 2069, 4076,
	2279, 2460, 2814, 1741, 1721, 669, 1281, 3089, 2001, 1413,
	1366, 1299, 2081, 1133, 1965, 4089, 2562, 4086, 174, 2021,
	3132, 2559, 1629, 1614, 3369, 2863, 2864, 2865, 2866, 2868,
	2869, 3931, 1876, 3700, 4010, 3919, 2010, 3003, 3385, 2676,
	1488, 2633, 3076, 4132, 3205, 4133, 3827, 3630, 1152, 1984,
	2065, 1334, 1985, 3971, 891, 2086, 1153, 889, 2035, 4077,
	887, 2471, 4217, 885, 882, 2981, 2127, 2284, 3820, 3813,
	2125, 3663, 933, 3418, 933, 1300, 3417, 3411, 3408, 3406,
	3366, 2489, 3365, 3079, 1344, 990, 1105, 990, 1105, 2019,
	2015, 2070, 931, 1542, 990, 2487, 2983, 1824, 1824, 1176,
	3422, 990, 990, 990, 990, 990, 990, 990, 990, 990,
	990, 990, 990, 990, 990, 990, 990, 990, 990, 990,
	990, 990, 990, 990, 990, 990, 990, 990, 990, 990,
	990, 990, 990, 990, 990, 990, 1630, 990, 2159, 990,
	990, 990, 990, 2146, 1445, 2285, 1445, 1812, 2023, 2024,
	1543, 1868, 1895, 873, 675, 1139, 2056, 1896, 2057, 1160,
	3421, 990, 1345, 678, 990, 990, 2968, 1388, 2074, 2018,
	930, 2018, 990, 2499, 2963, 2819, 990, 2327, 990, 990,
	2818, 2073, 1541, 1895, 2817, 3031, 1176, 1151, 1896, 2816,
	1909, 2774, 990, 990, 990, 990, 2569, 990, 990, 990,
	990, 990, 990, 990, 990, 1151, 1160, 1486, 1154, 2568,
	2564, 2555, 2630, 1159, 2104, 2547, 2546, 2525, 2060, 2157,
	2286, 2283, 1905, 990, 990, 990, 990, 990, 990, 990,
	990, 990, 3970, 2512, 2444, 2121, 990, 2229, 1581, 2326,
	727, 2183, 2184, 3372, 2489, 2187, 1910, 1911, 1111, 2139,
	3742, 2260, 2261, 3189, 2170, 1176, 932, 646, 2487, 1897,
	1159, 2097, 2140, 2155, 1111, 2260, 2276, 1610, 1611, 1612,
	1613, 1615, 1616, 598, 1906, 2502, 1899, 2145, 2143, 2151,
	990, 1176, 2454, 2158, 1884, 1885, 2144, 1481, 1399, 913,
	1897, 2322, 913, 913, 1340, 1152, 933, 2174, 593, 1301,
	2175, 2176, 2275, 1153, 1983, 933, 1378, 1899, 1377, 933,
	2344, 2344, 2358, 1152, 2260, 2078, 3643, 2378, 2380, 1785,
	2542, 1153, 1376, 2384, 1375, 1352, 1818, 1818, 2408, 3616,
	2572, 2478, 728, 2535, 2536, 2324, 879, 2869, 1901, 2288,
	2325, 2535, 2536, 2328, 2400, 2329, 2330, 2138, 1821, 1821,
	1296, 2279, 2244, 2244, 1106, 645, 2256, 2511, 2436, 2098,
	1774, 3612, 1612, 1613, 1615, 1616, 2523, 2433, 2157, 1901,
	1106, 3796, 2273, 1616, 1077, 1288, 2131, 2136, 2762, 2747,
	1176, 1586, 3626, 2156, 2535, 2536, 4132, 1109, 1284, 1554,
	1502, 2094, 1540, 1574, 1482, 2252, 2422, 933, 1558, 1150,
	4044, 2510, 2250, 1109, 2020, 2089, 1858, 3613, 1331, 2399,
	1824, 929, 2155, 163, 2407, 4073, 2412, 2561, 1137, 2418,
	2419, 2369, 2353, 2448, 2340, 2382, 1510, 2456, 3250, 3428,
	2468, 1363, 2390, 2391, 1284, 2501, 1176, 2405, 2406, 2401,
	1902, 2980, 1912, 2282, 1903, 1498, 3046, 2560, 3393, 2154,
	1296, 1772, 2558, 3039, 1107, 1154, 1107, 2582, 1362, 3196,
	2491, 1510, 990, 990, 1931, 990, 4160, 1727, 3427, 1755,
	3741, 1902, 682, 1154, 1437, 1903, 2153, 3798, 3381, 1915,
	3195, 2726, 2556, 3024, 1453, 3045, 2090, 3662, 2240, 2288,
	2574, 2463, 3038, 2761, 3407, 2469, 2581, 794, 883, 1537,
	1525, 883, 1360, 1930, 883, 1895, 1487, 884, 883, 2126,
	1896, 2573, 2575, 2124, 2986, 1269, 2238, 2543, 1914, 2618,
	1719, 1720, 3025, 2732, 2644, 2467, 2037, 2466, 4149, 2039,
	1281, 3405, 2156, 2527, 3394, 2044, 2472, 868, 2046, 4176,
	2360, 2091, 2049, 1296, 1296, 1759, 1296, 2288, 1492, 3624,
	4161, 2578, 2514, 2605, 2528, 1526, 4074, 2785, 1296, 725,
	926, 724, 2500, 2584, 2526, 2586, 2494, 2137, 2690, 2504,
	2507, 4169, 647, 1296, 3608, 644, 1118, 2544, 3609, 2096,
	2614, 730, 729, 2664, 1762, 2783, 2522, 2659, 2537, 2539,
	2540, 2541, 2698, 2699, 594, 3078, 2563, 2135, 2154, 1757,
	1898, 2545, 2524, 2705, 2706, 2707, 675, 1398, 2490, 990,
	1116, 2488, 1897, 1339, 4186, 678, 4148, 1760, 2694, 3247,
	1555, 2735, 2442, 3611, 4121, 1812, 1812, 2226, 787, 1899,
	1946, 1898, 2234, 1284, 1284, 1953, 2713, 3614, 1305, 1818,
	2587, 4072, 869, 4163, 2235, 1758, 1971, 1970, 2236, 2599,
	2754, 2755, 2241, 990, 2646, 3523, 2675, 3522, 595, 990,
	990, 1821, 163, 2715, 2609, 2716, 3129, 1485, 2923, 868,
	1903, 2696, 2665, 4199, 2737, 2700, 2739, 2701, 2628, 2650,
	3130, 3989, 1342, 2653, 1281, 2654, 3625, 2639, 2141, 2032,
	1912, 1901, 926, 2710, 3248, 683, 684, 3797, 3932, 2518,
	596, 2780, 597, 2717, 2579, 2719, 1955, 2721, 1119, 1941,
	2474, 2660, 1483, 2662, 990, 990, 2666, 2781, 3946, 1362,
	990, 2786, 1281, 2677, 1281, 2476, 2730, 1759, 1556, 2734,
	2552, 2658, 1940, 990, 990, 2776, 2243, 1952, 1761, 990,
	990, 3382, 2982, 1755, 775, 990, 3129, 1105, 1552, 1954,
	3610, 1445, 2731, 3014, 990, 990, 990, 761, 2477, 3681,
	990, 880, 2590, 1105, 1936, 2593, 1762, 2595, 4120, 1714,
	990, 2777, 2965, 1585, 869, 2224, 2251, 2475, 2227, 240,
	949, 2402, 3738, 2712, 2093, 3617, 4167, 990, 1910, 1911,
	2742, 2753, 2718, 1902, 2720, 1903, 2722, 1903, 2088, 1760,
	1553, 2744, 3013, 2743, 4162, 870, 686, 685, 2635, 1557,
	1136, 2635, 2237, 2288, 795, 3519, 1937, 2748, 2763, 1759,
	2170, 2239, 3183, 3754, 4142, 2740, 4021, 2223, 1666, 3949,
	1903, 3176, 2807, 3884, 3987, 2798, 1892, 1497, 1499, 2270,
	2922, 2733, 2802, 2803, 2824, 2404, 4187, 2806, 3434, 941,
	2417, 788, 789, 990, 990, 990, 3434, 3432, 1762, 932,
	687, 688, 990, 990, 990, 3432, 3263, 990, 3988, 3057,
	4168, 4197, 933, 1757, 3691, 1893, 3020, 990, 1111, 1176,
	2775, 2782, 3513, 990, 3876, 990, 2915, 2916, 2489, 3352,
	2784, 1760, 1131, 1111, 3524, 3207, 3877, 4101, 2745, 3211,
	3737, 3952, 2505, 4170, 4071, 4131, 4102, 1513, 3022, 2723,
	4129, 1176, 3967, 3860, 3467, 3116, 1991, 3178, 1949, 1758,
	1761, 3448, 3878, 1111, 1596, 871, 1176, 4119, 1117, 2813,
	1752, 2937, 3177, 1129, 1124, 3682, 585, 870, 1812, 3520,
	2173, 1913, 1824, 3568, 1869, 2661, 1176, 4192, 3804, 3803,
	3783, 2957, 1866, 1898, 2898, 953, 1595, 1933, 3435, 3918,
	990, 1947, 3468, 3021, 3415, 3368, 3435, 776, 777, 2927,
	2917, 872, 4200, 3117, 990, 3953, 3629, 2225, 3109, 2995,
	2931, 3880, 3301, 3628, 1106, 2946, 1824, 2991, 2033, 2925,
	2987, 2988, 2619, 2613, 2603, 2978, 2014, 3879, 3174, 1106,
	1948, 2003, 990, 1296, 790, 791, 2962, 2951, 3004, 2984,
	1150, 3008, 1761, 3739, 3881, 2950, 1996, 1109, 2893, 2894,
	2895, 1595, 1864, 1979, 3430, 3246, 3316, 2975, 2926, 1106,
	621, 2943, 1109, 2935, 1590, 2955, 2163, 3999, 3005, 2938,
	2939, 3010, 3011, 2909, 3208, 1865, 1176, 2936, 2529, 1594,
	2132, 1862, 1595, 3470, 2924, 1296, 3705, 871, 2992, 3017,
	1296, 3034, 1109, 3060, 2932, 3525, 3063, 2600, 3842, 1296,
	3068, 3070, 2941, 1401, 2942, 3840, 1296, 3784, 2972, 2973,
	1176, 2974, 3006, 2959, 2960, 2961, 2966, 669, 3433, 3002,
	2396, 3001, 1596, 2768, 2746, 2441, 3433, 2079, 1296, 3179,
	3180, 3181, 3182, 872, 3037, 3094, 4100, 3569, 1296, 1281,
	1666, 3017, 2930, 3329, 1594, 1107, 3017, 2979, 4191, 3055,
	778, 779, 2920, 1527, 1111, 2919, 3103, 1900, 3125, 3108,
	2996, 1107, 2000, 2440, 3048, 2985, 3083, 2934, 3302, 3526,
	2690, 2439, 2438, 3954, 2506, 1594, 3303, 2651, 2164, 2690,
	3627, 3439, 2607, 2655, 930, 3023, 1900, 1596, 3792, 1370,
	2398, 3925, 1797, 3673, 3030, 2397, 1296, 1296, 2058, 3041,
	3134, 1818, 1371, 1384, 1382, 793, 3166, 2012, 3085, 4139,
	3077, 3838, 3044, 3722, 1437, 2071, 3050, 3056, 1296, 3153,
	1943, 2697, 3065, 1821, 3146, 2072, 3073, 3072, 1943, 3066,
	2585, 1514, 3042, 1491, 2530, 2531, 3043, 2080, 3058, 2083,
	2084, 2085, 3781, 4007, 4002, 1818, 3926, 3996, 3882, 3575,
	3318, 2933, 1176, 3883, 3190, 1176, 4025, 3126, 2527, 3087,
	1106, 3080, 2958, 3049, 2295, 4141, 675, 1821, 3118, 1572,
	4091, 3939, 1281, 1281, 3721, 678, 3760, 1570, 3567, 3782,
	3793, 1549, 3438, 1547, 1524, 990, 2890, 1522, 3223, 1520,
	933, 990, 990, 1109, 3184, 990, 990, 990, 2294, 990,
	3133, 3186, 3131, 3202, 2976, 163, 163, 1518, 990, 1824,
	3147, 3140, 1516, 1507, 1505, 3151, 3152, 990, 2855, 620,
	990, 4003, 3168, 3927, 3164, 2787, 1176, 3143, 2604, 1380,
	2554, 3201, 2520, 2465, 1792, 990, 1788, 3026, 3027, 1573,
	1469, 3028, 2891, 1176, 3204, 3203, 3192, 3124, 3193, 3185,
	3194, 1281, 1590, 1824, 1824, 990, 990, 2123, 990, 990,
	990, 3183, 2728, 3209, 2727, 2703, 2152, 2134, 1536, 2101,
	3176, 3051, 3052, 3226, 1976, 3053, 990, 1850, 1698, 1480,
	990, 3198, 1824, 1824, 990, 990, 990, 990, 990, 990,
	990, 990, 990, 990, 990, 990, 990, 990, 990, 990,
	990, 990, 990, 3206, 990, 3235, 3236, 1105, 1356, 1919,
	4066, 990, 990, 1824, 3649, 2990, 3638, 4143, 990, 1383,
	1381, 792, 1105, 4117, 3995, 3059, 3243, 3703, 881, 990,
	3654, 1923, 3601, 924, 3466, 868, 3458, 3420, 3231, 1571,
	1111, 1111, 953, 3388, 990, 3386, 953, 1569, 3199, 3036,
	3367, 1548, 1105, 1546, 1523, 3242, 3178, 1521, 926, 1519,
	3112, 1260, 3107, 3099, 998, 1260, 3265, 3253, 3258, 2657,
	3047, 3177, 2652, 1176, 3249, 3251, 3252, 1517, 2631, 1920,
	2617, 3334, 1515, 1506, 1504, 2610, 2597, 2583, 3064, 2053,
	3272, 3278, 2411, 3071, 3275, 3280, 3276, 2183, 3266, 1379,
	1812, 2051, 925, 3273, 990, 3313, 2048, 3274, 238, 238,
	238, 3305, 588, 589, 2045, 604, 588, 604, 614, 619,
	990, 990, 3306, 637, 2122, 2040, 2183, 3281, 643, 2038,
	2034, 2025, 1975, 1973, 238, 3106, 3325, 3326, 1818, 163,
	869, 3320, 1959, 1944, 1812, 1929, 1106, 1106, 1916, 3314,
	990, 990, 772, 1904, 3121, 3351, 3067, 3309, 238, 1086,
	1821, 1953, 3867, 1799, 3322, 3323, 4133, 1599, 3362, 3363,
	886, 888, 890, 4035, 1924, 990, 2766, 3727, 3336, 1109,
	1109, 3720, 1818, 1818, 1087, 3350, 3719, 3661, 2691, 1888,
	1336, 3869, 2489, 3337, 2489, 2509, 3478, 1296, 1912, 1567,
	1568, 659, 2092, 2011, 1821, 1821, 2487, 1422, 2508, 2118,
	2117, 1818, 1818, 3616, 4034, 1824, 2099, 3631, 3358, 3400,
	3401, 3403, 3656, 1503, 1421, 3904, 3576, 3554, 2532, 3371,
	3416, 2513, 1603, 1821, 1821, 1925, 1926, 3396, 3179, 3180,
	3181, 3182, 1818, 1296, 4135, 3612, 1606, 1607, 1921, 3605,
	990, 1606, 1607, 1105, 599, 4127, 231, 3349, 1111, 990,
	2767, 3480, 3410, 1952, 1821, 3603, 1600, 588, 588, 3454,
	2644, 3607, 4096, 3437, 3414, 238, 1284, 1296, 1296, 1296,
	1609, 715, 1922, 1088, 3489, 1422, 2596, 758, 3426, 3475,
	2527, 3613, 3455, 1296, 2120, 3413, 3471, 1859, 3441, 3472,
	2559, 582, 2567, 870, 2690, 2580, 1422, 610, 1608, 3493,
	2566, 2551, 1176, 1608, 3436, 2517, 2549, 2515, 3994, 3962,
	3959, 3461, 3924, 2000, 2550, 3456, 3856, 3835, 2516, 3474,
	3457, 3606, 3505, 3447, 1176, 3344, 3111, 990, 990, 2638,
	3459, 2339, 2335, 990, 990, 1824, 2383, 1854, 990, 990,
	1805, 990, 4164, 3473, 3790, 990, 2964, 4190, 3961, 2996,
	1307, 3482, 3481, 4027, 1106, 3476, 990, 3857, 4028, 4027,
	2861, 2862, 1606, 1607, 4028, 1107, 3488, 2481, 2482, 2479,
	2480, 3546, 990, 1927, 1678, 3494, 3495, 4145, 1683, 2290,
	1107, 3503, 3142, 3354, 3502, 3144, 3145, 1109, 2663, 1437,
	3148, 3500, 3149, 3496, 3150, 3499, 1490, 3528, 3527, 3536,
	2481, 2479, 1489, 2323, 2333, 1551, 3511, 3821, 1550, 3657,
	1107, 923, 3521, 871, 3653, 3516, 3652, 3542, 2704, 3464,
	3353, 2337, 2338, 2336, 3254, 3061, 1692, 1812, 3540, 1691,
	4178, 4150, 1111, 3915, 1818, 3817, 3775, 3772, 3684, 3594,
	1111, 1928, 3504, 3484, 1176, 3442, 1176, 3440, 3608, 3384,
	3379, 3141, 3609, 1111, 3115, 3114, 1821, 2725, 2709, 872,
	2708, 2648, 2623, 2598, 2458, 2457, 2255, 2119, 1176, 2116,
	2115, 1812, 1812, 2114, 2113, 2028, 2027, 2026, 2332, 2334,
	2009, 1986, 1982, 1981, 1980, 1978, 1977, 1566, 990, 3598,
	3599, 3566, 1565, 1511, 1408, 1407, 1406, 3611, 1405, 1404,
	1812, 1812, 1403, 1402, 1400, 3622, 1395, 1394, 1393, 3581,
	3632, 3614, 1392, 1260, 1391, 1176, 1351, 3584, 1350, 1349,
	3587, 1348, 1176, 3460, 1347, 1346, 3578, 3579, 3577, 1105,
	1105, 1812, 1341, 3583, 1335, 3580, 3582, 1333, 1106, 3588,
	1332, 3633, 3658, 163, 3659, 2950, 1106, 3591, 1167, 1296,
	1296, 1166, 3600, 3573, 1165, 1164, 1135, 953, 1134, 1106,
	3623, 1069, 3621, 1260, 1818, 1860, 892, 878, 3795, 3674,
	3615, 1109, 1560, 3634, 3635, 84, 3671, 1176, 1343, 1109,
	703, 3660, 1296, 78, 1950, 3383, 1821, 851, 3669, 4024,
	1329, 3945, 1109, 3425, 710, 3651, 3696, 4009, 3512, 3012,
	2570, 2100, 1512, 2102, 2945, 3646, 2424, 3986, 3550, 990,
	3670, 1107, 2823, 3911, 2000, 3668, 3648, 3753, 2293, 1296,
	1296, 1296, 1696, 2902, 3610, 80, 3723, 1284, 974, 1020,
	1176, 3680, 3679, 3602, 3370, 3706, 2680, 3677, 3707, 3676,
	3710, 1809, 990, 990, 990, 1122, 3675, 3690, 1811, 940,
	3701, 3693, 1179, 1870, 980, 1886, 1879, 3695, 2459, 3617,
	1176, 2343, 997, 994, 1813, 990, 3708, 1815, 990, 990,
	996, 995, 1814, 1132, 3715, 1715, 993, 1808, 990, 3463,
	3732, 1824, 637, 3726, 3462, 2606, 990, 990, 2642, 1387,
	853, 1874, 2249, 2277, 2812, 1689, 955, 3730, 3729, 3734,
	976, 1176, 2274, 1296, 1127, 238, 3740, 238, 238, 1272,
	1260, 238, 238, 1287, 3745, 965, 1176, 954, 2928, 3128,
	3343, 3711, 2162, 719, 990, 2858, 2280, 238, 1120, 1309,
	2366, 990, 2359, 1812, 1174, 2355, 2632, 3750, 1275, 990,
	3387, 1824, 3389, 3756, 1576, 3762, 1668, 1105, 2643, 990,
	1162, 958, 990, 2247, 1338, 1680, 3777, 2792, 2172, 3135,
	990, 2948, 2452, 4031, 3262, 3771, 1355, 1176, 1287, 3768,
	3769, 1990, 238, 238, 3767, 1272, 1085, 1296, 1296, 1084,
	1083, 3778, 4015, 4012, 3497, 238, 3776, 3816, 3092, 1863,
	2473, 1658, 3100, 1397, 3800, 970, 1280, 2913, 3167, 1353,
	3419, 642, 982, 3799, 1657, 238, 2577, 238, 238, 3826,
	1272, 238, 1287, 3094, 1176, 3850, 2576, 1296, 3814, 3841,
	3921, 3818, 637, 1149, 238, 238, 1148, 1147, 2994, 4198,
	3855, 3380, 3823, 207, 3830, 990, 990, 2760, 3833, 3831,
	1597, 1589, 204, 3839, 206, 205, 3685, 772, 3347, 3834,
	3854, 2954, 3887, 3888, 990, 990, 4094, 3398, 3872, 3683,
	3866, 3849, 3829, 1812, 3084, 21, 20, 19, 3891, 3694,
	3863, 990, 1824, 3864, 105, 3486, 3865, 40, 3870, 3487,
	3871, 3710, 18, 119, 3885, 3806, 135, 3862, 134, 133,
	132, 3714, 131, 137, 3868, 130, 990, 1107, 1107, 990,
	3899, 129, 124, 128, 127, 126, 125, 123, 3928, 3637,
	1818, 122, 121, 120, 3074, 118, 238, 117, 990, 3917,
	3645, 116, 3647, 115, 114, 113, 112, 111, 110, 109,
	108, 1105, 1821, 238, 107, 3934, 3909, 106, 3916, 1105,
	633, 3900, 3901, 3104, 630, 57, 56, 3903, 1281, 104,
	103, 17, 1105, 3110, 38, 3933, 14, 61, 990, 990,
	62, 3948, 16, 13, 33, 83, 95, 94, 34, 990,
	1818, 92, 990, 91, 1296, 32, 15, 89, 3941, 88,
	31, 29, 11, 9, 1296, 1296, 3964, 3943, 8, 3966,
	35, 1776, 1821, 3956, 3957, 12, 5, 168, 167, 3977,
	170, 1296, 3955, 166, 169, 82, 3960, 165, 1260, 164,
	3854, 3159, 3160, 81, 27, 990, 990, 10, 160, 3969,
	3851, 3974, 3973, 3975, 3976, 3452, 76, 162, 161, 159,
	3968, 158, 157, 1284, 77, 74, 156, 155, 75, 154,
	3980, 25, 6, 60, 4006, 3981, 4004, 7, 990, 990,
	3735, 990, 3991, 3187, 98, 99, 36, 72, 71, 70,
	4029, 24, 4014, 4017, 59, 23, 2167, 2253, 197, 196,
	195, 194, 4036, 193, 4033, 192, 187, 3982, 186, 3983,
	191, 189, 1678, 188, 4019, 190, 185, 199, 198, 201,
	184, 4049, 4023, 182, 178, 1260, 177, 181, 990, 990,
	990, 1818, 3990, 4048, 183, 180, 179, 176, 4050, 200,
	152, 4005, 4043, 4040, 4045, 1107, 153, 67, 151, 4078,
	150, 990, 149, 1821, 4083, 4062, 4063, 148, 4065, 147,
	588, 146, 145, 66, 4064, 4018, 2365, 22, 4022, 2,
	1, 0, 0, 4081, 0, 0, 0, 0, 0, 0,
	0, 238, 4105, 238, 4103, 0, 0, 238, 0, 0,
	0, 0, 4112, 0, 1260, 0, 4114, 4107, 2644, 990,
	1309, 1272, 238, 0, 238, 4113, 0, 3828, 4118, 238,
	1309, 604, 4104, 0, 238, 1309, 4110, 4111, 4109, 0,
	1260, 637, 4115, 0, 4134, 0, 1791, 4137, 4124, 4125,
	0, 4130, 4128, 0, 4126, 2361, 0, 0, 0, 1812,
	0, 4136, 4014, 0, 0, 4017, 4152, 990, 4144, 990,
	4140, 4155, 4147, 4033, 4138, 4157, 0, 4159, 4151, 0,
	4158, 4153, 0, 0, 4154, 0, 4156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1890, 3947, 0, 0,
	0, 0, 0, 4173, 4171, 0, 0, 0, 0, 0,
	0, 0, 0, 4179, 0, 0, 0, 4180, 3963, 1812,
	0, 0, 0, 4182, 0, 990, 990, 4185, 0, 4146,
	0, 0, 0, 990, 4188, 990, 990, 4184, 4194, 1260,
	0, 0, 0, 0, 4202, 0, 0, 0, 4201, 1107,
	4205, 0, 0, 0, 0, 0, 0, 1107, 0, 4204,
	0, 4203, 0, 0, 4206, 0, 4209, 0, 4214, 4213,
	1107, 649, 4215, 0, 0, 4216, 4220, 4219, 4212, 4218,
	4211, 0, 4221, 990, 0, 0, 0, 0, 4224, 0,
	0, 4228, 0, 4230, 0, 1260, 0, 4231, 0, 0,
	4225, 0, 0, 4227, 238, 0, 0, 238, 0, 0,
	0, 0, 0, 68, 3808, 3809, 0, 0, 0, 0,
	0, 4037, 4195, 4196, 4038, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 3822, 0, 0,
	3824, 3825, 0, 1968, 0, 73, 0, 0, 0, 0,
	1812, 0, 0, 2789, 2790, 0, 0, 238, 0, 0,
	0, 238, 3423, 0, 0, 238, 0, 0, 0, 0,
	4226, 238, 0, 0, 0, 1606, 1607, 0, 654, 0,
	79, 0, 0, 0, 238, 0, 238, 0, 238, 0,
	0, 0, 588, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 2029, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 238, 1606,
	1607, 0, 0, 0, 0, 238, 0, 0, 0, 100,
	0, 0, 0, 0, 86, 97, 0, 1608, 0, 0,
	0, 1637, 3490, 3491, 3492, 0, 0, 0, 1609, 0,
	0, 0, 662, 0, 0, 0, 637, 0, 1437, 0,
	772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1606, 1607, 0, 2884, 2885, 2886, 656, 0, 0, 0,
	0, 1608, 0, 87, 0, 238, 0, 1272, 238, 0,
	0, 0, 1637, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 637, 0, 0, 0, 0, 0, 3942, 238,
	0, 0, 0, 2365, 0, 1606, 1607, 0, 0, 238,
	238, 0, 238, 0, 238, 0, 238, 0, 238, 0,
	660, 1614, 1608, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 1628, 0, 1609, 0, 0, 0, 2128, 0,
	1625, 2129, 0, 2130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 1636,
	1638, 0, 0, 0, 0, 1614, 0, 1608, 0, 0,
	0, 0, 2750, 2449, 651, 0, 619, 0, 0, 0,
	637, 0, 0, 2365, 2365, 0, 3531, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 1636, 1638, 0, 1631, 1632, 1633, 1634,
	0, 0, 0, 1629, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 0, 0,
	0, 2186, 0, 171, 93, 0, 96, 0, 0, 658,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 0, 2361, 2361, 1636, 1638, 0, 1629, 0, 0,
	208, 1614, 0, 0, 0, 0, 0, 0, 767, 0,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 1623,
	1624, 0, 0, 0, 0, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 4093, 0, 0, 0, 1636,
	1638, 0, 210, 2365, 2365, 2365, 0, 0, 1629, 0,
	0, 0, 657, 0, 1437, 0, 0, 0, 2291, 0,
	0, 0, 0, 0, 0, 663, 138, 1630, 1260, 0,
	0, 0, 0, 0, 0, 0, 652, 588, 0, 0,
	175, 0, 2861, 2862, 0, 2879, 2880, 2881, 209, 0,
	0, 0, 238, 1629, 0, 0, 0, 0, 202, 0,
	1260, 588, 0, 0, 0, 0, 203, 0, 238, 0,
	588, 1630, 2361, 2361, 2361, 1260, 0, 0, 0, 0,
	0, 0, 238, 0, 3731, 0, 3733, 0, 174, 0,
	0, 0, 0, 0, 0, 1260, 0, 238, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 2434, 2876, 0, 0, 0, 0, 0,
	0, 0, 1630, 953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 604, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 0, 0, 0, 1630, 3773, 0,
	0, 0, 0, 0, 0, 0, 3219, 3220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2498, 0, 0, 0, 0, 1260, 0, 0, 2867, 238,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 0, 0,
	0, 238, 2484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 3832, 0, 0, 0, 0, 1626, 1622, 0,
	1619, 1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 0,
	0, 238, 2588, 0, 3282, 3283, 3284, 3285, 3286, 3287,
	3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297,
	3298, 3299, 3300, 0, 3304, 0, 1309, 0, 0, 238,
	2877, 0, 0, 0, 0, 0, 238, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 0, 2627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2498, 0, 588, 0, 0,
	2647, 0, 0, 0, 0, 0, 238, 0, 0, 238,
	0, 0, 0, 238, 0, 238, 0, 0, 0, 0,
	1272, 0, 238, 238, 0, 1287, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 2673, 772, 0, 2498, 2498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 238, 1260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 1272, 238, 0, 0, 1309, 0, 1309, 0,
	0, 1272, 0, 1272, 2878, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2365, 2365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 238, 238, 238, 1272, 238, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 0, 1437,
	1437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1260, 0, 0, 0, 1437, 0, 238, 0,
	0, 0, 0, 0, 1754, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 2361, 2361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2365, 2365, 2365, 2365, 2365, 2365,
	2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365,
	2365, 2365, 2365, 0, 2365, 2873, 2874, 2875, 0, 0,
	0, 0, 2872, 2870, 2871, 2863, 2864, 2865, 2866, 2868,
	2869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 2361, 2361, 2361, 2361, 2361, 2361, 2361,
	2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361,
	2361, 2361, 1260, 2361, 0, 0, 0, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 766, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 68, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 69, 73, 0, 1606, 1607, 0,
	0, 79, 0, 1649, 1650, 1651, 0, 238, 0, 0,
	73, 0, 588, 0, 0, 0, 0, 588, 0, 1637,
	588, 2914, 0, 588, 588, 0, 1609, 0, 0, 588,
	79, 0, 0, 0, 1655, 0, 85, 238, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 1309,
	100, 0, 0, 2940, 0, 86, 97, 0, 0, 1608,
	0, 0, 0, 0, 0, 85, 0, 0, 2953, 1628,
	1309, 0, 0, 0, 0, 0, 0, 1625, 0, 100,
	85, 0, 0, 0, 86, 97, 0, 0, 2970, 0,
	0, 2498, 2498, 238, 100, 1287, 0, 0, 2498, 86,
	97, 2998, 0, 0, 87, 0, 0, 0, 0, 2498,
	2998, 0, 2498, 2998, 2998, 0, 0, 2861, 2862, 0,
	2879, 2880, 2881, 0, 0, 0, 0, 238, 238, 1287,
	238, 0, 0, 87, 0, 0, 0, 0, 3532, 0,
	0, 1260, 0, 1631, 1632, 1633, 1634, 0, 87, 0,
	1287, 238, 1272, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 2498, 0, 3062, 2498, 1287, 0,
	0, 2498, 2498, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 1656, 0, 0, 238, 2876,
	0, 1636, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 3088, 0, 0, 3090, 2498, 0, 0, 238,
	0, 0, 0, 238, 0, 1287, 1623, 1624, 0, 0,
	0, 0, 2953, 0, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 2627, 1644, 0, 1272, 0, 238, 0,
	0, 2498, 0, 588, 0, 1629, 0, 0, 0, 0,
	2498, 0, 0, 90, 0, 0, 0, 238, 0, 0,
	0, 238, 238, 0, 171, 93, 0, 96, 90, 0,
	0, 0, 0, 2867, 0, 0, 0, 0, 3759, 0,
	0, 0, 0, 1260, 0, 1260, 0, 0, 238, 2627,
	0, 208, 2627, 171, 93, 0, 96, 0, 0, 767,
	0, 0, 0, 136, 0, 0, 0, 1260, 171, 93,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 3786, 0, 0, 2882, 767, 0,
	0, 0, 136, 210, 3197, 208, 0, 1272, 238, 1635,
	238, 0, 0, 767, 0, 0, 0, 136, 2861, 2862,
	0, 2879, 2880, 2881, 1260, 0, 0, 138, 0, 1630,
	0, 1260, 210, 0, 1275, 2877, 0, 1174, 0, 3228,
	0, 175, 0, 238, 0, 0, 0, 210, 0, 209,
	0, 0, 0, 0, 1647, 0, 138, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	175, 138, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 175, 1260, 939, 202, 764,
	2876, 939, 0, 209, 0, 0, 203, 0, 0, 3260,
	0, 0, 0, 202, 0, 0, 0, 0, 3239, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 1450, 0,
	0, 0, 0, 0, 0, 3255, 0, 0, 0, 0,
	0, 0, 0, 1448, 0, 0, 0, 0, 1311, 1260,
	1317, 3908, 1323, 0, 0, 0, 1645, 0, 0, 2878,
	0, 0, 0, 1648, 1626, 1622, 0, 1619, 1617, 1618,
	1610, 1611, 1612, 1613, 1615, 1616, 0, 0, 0, 1260,
	0, 0, 0, 0, 2867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2365, 0,
	0, 0, 0, 0, 238, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 0, 0, 1438, 0, 588, 588, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 2882, 0,
	0, 1456, 0, 1461, 2365, 0, 0, 0, 1309, 0,
	0, 0, 0, 1470, 0, 1475, 0, 0, 0, 0,
	0, 1309, 1309, 0, 0, 3346, 0, 2361, 0, 0,
	0, 953, 0, 0, 0, 0, 2877, 0, 0, 0,
	2873, 2874, 2875, 0, 0, 0, 1260, 2872, 2870, 2871,
	2863, 2864, 2865, 2866, 2868, 2869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2361, 1532, 0, 637, 1538, 0, 0,
	0, 0, 0, 2861, 2862, 0, 2879, 2880, 2881, 0,
	0, 0, 0, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3227, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1287, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 2861, 2862, 0, 2879,
	2880, 2881, 0, 0, 238, 0, 0, 0, 0, 0,
	2878, 2365, 238, 0, 0, 2876, 0, 238, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1606, 1607, 0, 0, 0, 0,
	0, 2498, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 1677, 2673,
	2673, 0, 0, 1609, 1690, 772, 772, 2498, 2876, 0,
	2627, 2627, 0, 0, 772, 2498, 0, 0, 0, 0,
	2361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 1608, 953, 953, 2867,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2873, 2874, 2875, 0, 0, 0, 0, 2872, 2870,
	2871, 2863, 2864, 2865, 2866, 2868, 2869, 0, 0, 0,
	0, 0, 2867, 2882, 0, 0, 0, 0, 0, 0,
	3222, 0, 0, 0, 3551, 0, 0, 0, 1748, 1748,
	1748, 1606, 1607, 0, 1639, 1640, 1641, 1649, 1650, 1651,
	1631, 1632, 1633, 1634, 0, 0, 0, 0, 953, 0,
	1614, 2877, 1642, 1637, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 0, 2882, 0, 1655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 1636, 1638,
	0, 0, 1309, 1608, 238, 0, 0, 0, 0, 0,
	0, 0, 939, 1628, 2877, 0, 0, 238, 0, 0,
	0, 1625, 0, 1623, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3586, 0,
	2498, 2498, 2498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 1309, 0, 0, 0, 0, 0, 0,
	3596, 2498, 0, 2998, 0, 0, 1309, 1309, 238, 1287,
	0, 999, 0, 0, 0, 2878, 0, 0, 0, 0,
	1287, 238, 1287, 238, 0, 0, 0, 1631, 1632, 1633,
	1634, 0, 0, 2498, 0, 2498, 238, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 239, 239, 0, 0,
	2498, 0, 0, 0, 0, 3687, 1646, 0, 2878, 1656,
	0, 0, 0, 238, 0, 1636, 1638, 0, 0, 0,
	0, 239, 238, 0, 0, 0, 1635, 0, 0, 0,
	0, 1652, 0, 1653, 0, 0, 0, 0, 1606, 1607,
	1623, 1624, 0, 0, 0, 239, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1309, 0, 1644, 0,
	1637, 0, 0, 0, 0, 0, 0, 1609, 0, 1629,
	0, 0, 0, 0, 0, 0, 2873, 2874, 2875, 0,
	0, 0, 0, 2872, 2870, 2871, 2863, 2864, 2865, 2866,
	2868, 2869, 0, 0, 1654, 0, 0, 0, 0, 0,
	1608, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	1628, 1643, 0, 0, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2873,
	2874, 2875, 3751, 0, 0, 0, 2872, 2870, 2871, 2863,
	2864, 2865, 2866, 2868, 2869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2498, 0, 2998, 0,
	0, 3780, 0, 1635, 3217, 0, 0, 0, 0, 238,
	0, 1626, 1622, 3751, 1619, 1617, 1618, 1610, 1611, 1612,
	1613, 1615, 1616, 1630, 1631, 1632, 1633, 1634, 2186, 0,
	0, 0, 0, 0, 1614, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 1638, 0, 0, 3780, 0, 0, 2186,
	0, 0, 0, 0, 2498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3859, 0, 1623, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 238, 0, 0,
	1645, 0, 0, 0, 1620, 1621, 1627, 1648, 1626, 1622,
	0, 1619, 1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616,
	3260, 0, 0, 0, 3559, 0, 0, 0, 3558, 2161,
	0, 2165, 0, 0, 0, 0, 3780, 0, 2179, 0,
	0, 0, 0, 0, 0, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	1635, 2228, 238, 2230, 2231, 2232, 2233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 3687, 0, 0, 0, 2257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 1677, 0, 0, 0,
	2272, 0, 0, 0, 2998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2302, 2305, 2308, 2311,
	0, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 0, 0,
	1309, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2357,
	0, 2368, 2370, 2375, 0, 0, 0, 4000, 0, 0,
	0, 0, 0, 0, 1309, 0, 0, 238, 0, 0,
	0, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 2498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 1626, 1622, 0, 1619, 1617,
	1618, 1610, 1611, 1612, 1613, 1615, 1616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3260, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 755, 2498,
	0, 0, 239, 1180, 239, 239, 0, 1180, 239, 239,
	0, 1180, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 3780, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 1309, 0, 2498, 0, 0, 0, 0, 0,
	739, 0, 0, 740, 0, 0, 0, 1180, 0, 239,
	239, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 754, 0, 0, 0,
	0, 0, 239, 0, 239, 239, 2591, 2592, 239, 2594,
	1180, 0, 0, 0, 0, 0, 1180, 0, 0, 0,
	1180, 239, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 1606, 1607, 0,
	1639, 1640, 1641, 1649, 1650, 1651, 0, 0, 0, 0,
	751, 0, 2673, 0, 0, 0, 0, 0, 1642, 1637,
	0, 0, 0, 0, 0, 2673, 1609, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 1606, 1607, 0, 0, 0, 0, 0, 1608,
	0, 742, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 239, 1637, 0, 0, 1625, 0, 0,
	0, 1609, 761, 0, 743, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2724, 1608, 0, 661, 0, 0, 0,
	0, 0, 0, 744, 1628, 0, 0, 759, 760, 757,
	0, 0, 1625, 0, 0, 752, 0, 0, 745, 0,
	0, 0, 0, 1631, 1632, 1633, 1634, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 753, 0, 3216, 0,
	0, 0, 1646, 0, 747, 1656, 0, 0, 0, 0,
	0, 1636, 1638, 0, 0, 0, 0, 748, 1631, 1632,
	1633, 1634, 756, 0, 0, 0, 0, 1652, 1614, 1653,
	0, 0, 0, 0, 0, 663, 1623, 1624, 2772, 2773,
	0, 0, 0, 0, 2779, 0, 750, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 2793, 2794, 1629, 1636, 1638, 0, 2272,
	0, 0, 0, 0, 0, 0, 0, 0, 2801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1654, 1623, 1624, 0, 2815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	0, 2827, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 239,
	239, 239, 0, 0, 0, 0, 239, 0, 0, 1635,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 2375, 2375, 2375, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 0,
	0, 1748, 0, 0, 1647, 0, 0, 0, 0, 2918,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 1607, 0, 1639,
	1640, 1641, 1649, 1650, 1651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 1637, 0,
	0, 0, 0, 0, 939, 1609, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 0, 1645, 0, 939, 0,
	1620, 1621, 1627, 1648, 1626, 1622, 0, 1619, 1617, 1618,
	1610, 1611, 1612, 1613, 1615, 1616, 0, 0, 1608, 0,
	2836, 0, 0, 0, 2837, 0, 3015, 0, 1628, 0,
	0, 239, 1180, 1180, 239, 0, 1625, 0, 0, 0,
	0, 0, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613, 1615,
	1616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 239, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 1631, 1632, 1633, 1634, 0, 0, 0, 0,
	0, 239, 1614, 239, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 1656, 239, 0, 0, 0, 0,
	1636, 1638, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 1653, 0,
	0, 0, 0, 0, 0, 1623, 1624, 0, 0, 0,
	1180, 0, 1180, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 1644, 0, 0, 0, 0, 0, 0,
	1180, 1180, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 1180, 239, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 1180, 0, 1180, 1180, 1180, 0, 1654,
	1101, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 239, 0, 239,
	0, 239, 0, 239, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 233, 584, 0, 0, 2179,
	0, 0, 0, 0, 0, 3214, 3215, 0, 0, 3218,
	0, 0, 239, 3221, 0, 0, 0, 0, 1635, 0,
	0, 0, 3225, 0, 0, 0, 0, 0, 0, 0,
	0, 3232, 0, 0, 2918, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 1647, 0, 0, 0, 0, 0, 3267,
	3268, 0, 3269, 3270, 3271, 0, 0, 1606, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3277, 0, 0, 0, 3279, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3307, 3308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1608,
	0, 0, 0, 3319, 0, 0, 0, 1180, 0, 1628,
	0, 0, 0, 0, 0, 1645, 0, 1625, 3328, 1620,
	1621, 1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610,
	1611, 1612, 1613, 1615, 1616, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 2778, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 1180, 0, 3364, 0,
	0, 0, 0, 1631, 1632, 1633, 1634, 0, 0, 0,
	0, 0, 986, 1614, 3373, 3376, 0, 1608, 0, 239,
	0, 0, 1180, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 239, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3397, 0, 0, 0, 0,
	0, 1636, 1638, 0, 0, 0, 237, 237, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 1624, 0, 0,
	239, 0, 676, 239, 0, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 1629, 676, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	1646, 0, 0, 1656, 1748, 0, 0, 0, 239, 1636,
	1638, 0, 0, 3483, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 239, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 1644, 0, 0, 0, 0, 0, 239, 1635,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 1108, 0, 0, 239, 0, 1654, 0,
	0, 3529, 3530, 239, 0, 0, 0, 3534, 3535, 0,
	0, 0, 3538, 3539, 0, 1643, 975, 102, 0, 3543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3547, 0, 0, 239, 0, 0, 239, 0, 0, 0,
	239, 0, 239, 0, 0, 0, 3552, 0, 0, 239,
	239, 0, 0, 0, 1180, 1180, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 1180, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	239, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 1626, 1622, 0, 1619, 1617, 1618,
	1610, 1611, 1612, 1613, 1615, 1616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 239, 239,
	239, 0, 239, 0, 239, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 3376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 1606, 1607, 0, 0,
	914, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 934, 0, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 0, 1645, 1609, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 0, 0, 0, 1095, 2268, 0,
	0, 1389, 2269, 0, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 1412, 0, 1412, 1412, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1454, 1455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3746, 3747, 3748, 0,
	0, 0, 1631, 1632, 1633, 1634, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 2179,
	0, 0, 3757, 3758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3766, 0, 1559, 0, 0, 0, 0, 0, 0, 0,
	1636, 1638, 0, 0, 0, 0, 0, 826, 0, 868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 1623, 1624, 0, 0, 0,
	0, 0, 834, 0, 0, 3376, 0, 0, 0, 0,
	0, 0, 0, 3805, 0, 0, 0, 0, 847, 832,
	831, 0, 1180, 3812, 1629, 0, 939, 0, 0, 0,
	0, 0, 0, 237, 3819, 237, 237, 1180, 0, 237,
	237, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 836, 0, 0, 0, 676, 876, 1180, 0, 0,
	0, 0, 0, 0, 844, 845, 0, 0, 0, 0,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 869, 838, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 237, 0, 0, 0, 0, 0, 0, 0, 3376,
	3376, 839, 0, 237, 1180, 0, 0, 0, 1635, 0,
	867, 0, 0, 0, 239, 239, 0, 239, 0, 0,
	0, 0, 0, 237, 239, 237, 237, 0, 1630, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 237, 237, 0, 0, 840, 1180, 0, 0,
	0, 0, 0, 0, 830, 0, 1180, 0, 0, 0,
	3920, 1180, 0, 3923, 0, 0, 0, 0, 0, 0,
	1180, 0, 841, 842, 0, 239, 0, 1180, 0, 0,
	0, 1180, 3376, 0, 0, 0, 0, 0, 239, 693,
	849, 848, 0, 1786, 0, 0, 239, 0, 843, 1180,
	239, 0, 858, 0, 0, 0, 0, 0, 1795, 1180,
	1279, 0, 0, 694, 0, 0, 0, 873, 0, 0,
	0, 0, 939, 939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3376, 237, 0, 3376, 870, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 239, 239,
	695, 237, 712, 1626, 1622, 0, 1619, 1617, 1618, 1610,
	1611, 1612, 1613, 1615, 1616, 0, 0, 1180, 1180, 0,
	0, 0, 0, 0, 0, 239, 696, 0, 0, 697,
	2179, 837, 0, 0, 875, 0, 0, 0, 0, 1180,
	0, 102, 0, 102, 0, 102, 720, 0, 0, 835,
	0, 0, 698, 865, 866, 0, 0, 0, 0, 0,
	0, 0, 0, 939, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 1180, 0, 239, 1180, 239, 0, 0,
	0, 0, 0, 863, 0, 0, 0, 0, 699, 0,
	874, 859, 0, 852, 850, 0, 855, 0, 0, 0,
	0, 0, 856, 0, 0, 828, 0, 871, 700, 0,
	239, 701, 4061, 4061, 4061, 0, 722, 102, 0, 0,
	662, 934, 102, 102, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 102, 4082, 102, 0, 857, 0,
	0, 0, 0, 854, 0, 0, 102, 1180, 102, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 0,
	0, 860, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 862, 4061, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 1988, 0, 0, 0, 1995, 716, 0,
	0, 0, 0, 0, 864, 102, 0, 2006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	1389, 1108, 2017, 0, 2017, 237, 0, 0, 0, 0,
	0, 3376, 0, 3376, 0, 0, 0, 0, 702, 0,
	237, 1770, 237, 0, 0, 0, 0, 676, 0, 704,
	0, 0, 676, 0, 1412, 0, 0, 0, 0, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4061,
	4189, 0, 0, 914, 1180, 0, 0, 4193, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 1671, 0, 692, 0, 713, 0, 0,
	0, 1995, 0, 0, 2076, 0, 706, 0, 0, 0,
	1676, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2095, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 2105, 0, 2107, 0,
	2109, 0, 2111, 707, 2112, 0, 725, 0, 724, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 726, 0, 723, 0, 0,
	0, 2133, 239, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1180, 0,
	0, 239, 237, 0, 0, 676, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 1768, 239, 1771, 0, 102, 239, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 237,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 1180, 1180,
	1180, 0, 237, 0, 237, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 1180, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 2431, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 237, 0,
	237, 0, 237, 0, 237, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 1180, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1180, 0, 239, 0,
	239, 0, 0, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 1180, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 934, 0, 934, 1180, 239,
	0, 0, 0, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	1180, 1180, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2649, 0, 0, 1412, 0, 0, 0, 1412,
	1108, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 2702,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 1180, 0, 1180, 0, 0, 2711, 0, 2714,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 914, 239, 0, 914, 914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 237, 0, 2736, 1279, 2738, 1279,
	0, 2741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1180, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 1180, 1180,
	0, 0, 0, 2246, 1412, 0, 0, 0, 0, 0,
	0, 0, 2769, 0, 0, 0, 0, 237, 0, 934,
	0, 0, 0, 0, 0, 0, 0, 0, 1676, 237,
	0, 0, 1676, 0, 0, 1180, 0, 0, 1180, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 68, 0, 44,
	43, 0, 0, 239, 239, 0, 0, 0, 0, 676,
	0, 0, 0, 69, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 1095, 0, 0, 237, 0, 63,
	0, 0, 0, 0, 237, 0, 46, 0, 141, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 45, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 237, 0, 0,
	0, 237, 102, 237, 0, 0, 48, 64, 0, 239,
	237, 237, 0, 0, 49, 0, 0, 0, 0, 85,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 47, 0, 100, 0, 0, 0, 0, 86, 97,
	0, 237, 239, 0, 0, 1180, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 1180, 1180, 0, 0, 237,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 1180, 0, 1112, 0, 0, 0, 1112, 0,
	0, 0, 1112, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 237,
	237, 237, 0, 237, 102, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 1112, 0, 0, 0, 0,
	0, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 102, 237, 0, 1112, 0,
	0, 0, 0, 0, 237, 668, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 2989,
	102, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 991, 0, 0, 0, 1112, 0, 0,
	0, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3033, 3035, 1112, 2006, 90, 0, 0,
	0, 0, 0, 102, 0, 0, 102, 0, 51, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 0, 0, 0, 0,
	0, 65, 0, 0, 0, 0, 54, 171, 93, 0,
	96, 102, 0, 0, 52, 1112, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 3101, 136, 0, 0, 3105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 1279, 1279, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 175, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 3163, 1108, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 3200, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 2246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1676, 0, 0, 0, 3212,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 237, 0, 237, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 1112, 0, 237, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 237,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 237, 0,
	0, 0, 0, 1177, 0, 0, 0, 1177, 0, 0,
	0, 1297, 102, 102, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 1112, 1112, 0, 0, 0, 0, 0,
	0, 237, 0, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 102, 102, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 3465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 934, 1297, 1178, 0, 0, 0, 1178,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 102, 0, 0, 0, 0,
	3514, 1112, 0, 1112, 0, 1112, 1298, 0, 0, 0,
	0, 0, 1108, 1108, 1297, 0, 0, 0, 0, 0,
	0, 1112, 1112, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 1112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 1112, 1112, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 1825,
	1825, 1112, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 237, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 3636, 237, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 1095, 1112, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 0, 0, 0, 0, 3702, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 1646, 0,
	0, 1656, 0, 0, 0, 1177, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 668, 0, 0, 0,
	1112, 668, 0, 1652, 0, 1653, 0, 1112, 0, 0,
	0, 0, 1623, 1624, 1297, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 1112, 0, 1177, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 1108, 0, 0, 0, 0, 0,
	0, 0, 1108, 0, 0, 3787, 0, 1178, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 102, 0,
	0, 0, 1112, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 1095, 1630, 0, 0, 0, 0,
	0, 0, 1825, 0, 2006, 0, 0, 1178, 0, 0,
	0, 0, 1297, 1297, 0, 0, 237, 0, 0, 0,
	1647, 0, 1177, 0, 0, 0, 0, 0, 1112, 237,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 102, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 3898, 1279, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 1112, 1112, 0, 1112, 0,
	3557, 0, 0, 0, 1298, 1298, 0, 0, 0, 0,
	1112, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	1297, 0, 1297, 0, 1297, 1112, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 1095, 0,
	1297, 1297, 0, 0, 0, 0, 1095, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3965, 0, 1297, 0, 1297, 1297, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	4030, 0, 1298, 0, 1298, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 4042, 0,
	0, 0, 1298, 1298, 102, 0, 0, 0, 0, 0,
	1177, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 102, 1298, 1298, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 1112, 0, 0, 0, 0, 1177, 0, 0, 0,
	0, 0, 0, 237, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1177, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 1112, 1178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 237, 2246, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 1112, 0, 0, 0, 0, 1177, 0, 0,
	0, 1112, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 1297, 1112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 1112,
	0, 0, 0, 0, 1297, 1297, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 102, 1112, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1606, 1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 1637, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 1608, 0, 0, 0, 1298, 1298, 0, 1298,
	0, 0, 1628, 0, 0, 1112, 0, 0, 0, 0,
	1625, 1298, 0, 0, 0, 1825, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 1631, 1632, 1633, 1634,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 1656, 0,
	0, 0, 0, 0, 1636, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	1652, 0, 1653, 0, 0, 0, 0, 0, 0, 1623,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1177, 0, 0, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	1112, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1112,
	1112, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 1112, 0, 1297, 0, 0, 1178,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 1112, 1297, 0, 1178,
	0, 1177, 0, 0, 0, 0, 0, 1825, 668, 1645,
	0, 0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 1297,
	1619, 1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1297,
	0, 0, 0, 0, 0, 0, 0, 3230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 1112, 0, 0, 0, 1298, 1297,
	0, 0, 1112, 1298, 0, 0, 1112, 0, 1112, 0,
	0, 0, 1298, 0, 0, 1112, 0, 0, 0, 1298,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 1177, 0, 0, 1177, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1177, 0, 1298,
	1298, 1112, 1112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1177, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 1112, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 1112, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1177, 0, 1178, 1608, 0, 0,
	0, 0, 0, 1112, 0, 1112, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	1112, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 1297, 1112,
	1646, 0, 0, 1656, 0, 0, 1178, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 1297,
	1297, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 1177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 1112, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 1630, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 0,
	1298, 1298, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 0, 0, 0, 0, 0, 0,
	0, 0, 2839, 0, 0, 0, 1177, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 1297, 1606, 1607, 0, 1639, 1640, 1641, 1649, 1650,
	1651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 1637, 0, 0, 1178, 1177, 1178,
	0, 1609, 0, 1297, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 0, 0, 0, 0, 0,
	1297, 1297, 1297, 0, 1628, 0, 0, 0, 0, 0,
	0, 1177, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 1632,
	1633, 1634, 1177, 0, 1297, 0, 0, 0, 1614, 0,
	1178, 0, 0, 0, 0, 1298, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	1656, 0, 0, 0, 0, 0, 1636, 1638, 0, 0,
	0, 0, 1298, 1298, 1298, 0, 0, 0, 0, 0,
	0, 0, 1652, 1178, 1653, 0, 0, 0, 1177, 0,
	0, 1623, 1624, 0, 0, 0, 0, 0, 1297, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 1298, 0, 0, 0,
	0, 0, 1643, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 1298, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1647,
	0, 0, 0, 0, 0, 0, 0, 1178, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648, 1626,
	1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613, 1615,
	1616, 0, 0, 0, 0, 0, 0, 0, 0, 2838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 1298, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 1181, 253,
	254, 1182, 1183, 1184, 1298, 1185, 530, 1186, 1187, 1188,
	1189, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 1190, 535, 265, 266,
	267, 268, 269, 1191, 1192, 0, 270, 536, 537, 538,
	1193, 271, 272, 539, 1194, 1261, 1195, 273, 274, 275,
	276, 277, 278, 279, 0, 1196, 281, 282, 283, 280,
	1197, 284, 0, 285, 286, 287, 1198, 288, 1053, 289,
	290, 1199, 1200, 1202, 1201, 1203, 1204, 1205, 291, 292,
	293, 294, 0, 295, 540, 541, 1206, 299, 296, 297,
	1207, 300, 298, 1208, 301, 302, 303, 1209, 1210, 304,
	305, 306, 1211, 307, 308, 1212, 309, 310, 311, 1213,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 1214, 244, 1215, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	1216, 329, 1217, 1218, 1054, 330, 331, 546, 547, 332,
	333, 1219, 334, 548, 1220, 549, 335, 1221, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 1056, 341, 342,
	1222, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 1223, 1055, 349, 553, 554, 1224, 555, 1225,
	351, 352, 1057, 556, 1058, 353, 354, 355, 1059, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 1226,
	363, 365, 364, 1227, 366, 557, 1060, 367, 368, 1061,
	1228, 369, 370, 371, 1229, 1230, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 1062, 388, 389, 390, 393, 394,
	392, 1063, 391, 1231, 246, 1064, 395, 1232, 558, 396,
	559, 398, 399, 1233, 0, 400, 0, 1234, 1235, 402,
	403, 404, 1236, 1237, 405, 406, 560, 1065, 407, 1066,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 1238, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 1239, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 1240, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 1241, 444, 445, 446, 1067, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 1242, 467, 468, 466,
	469, 470, 471, 1243, 472, 456, 457, 473, 474, 1068,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 1244,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 1245, 493, 494, 0, 492, 1246, 495,
	496, 497, 498, 499, 500, 319, 501, 1247, 502, 571,
	572, 573, 574, 1248, 509, 1249, 503, 504, 575, 505,
	576, 1250, 506, 507, 508, 0, 510, 511, 1251, 1252,
	512, 513, 514, 516, 517, 515, 518, 1253, 519, 1254,
	0, 520, 521, 522, 577, 578, 579, 1255, 524, 523,
	580, 1256, 1257, 1258, 1259, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 2409, 0, 0, 0, 0, 0, 0, 0,
	2410, 247, 248, 249, 250, 251, 252, 1181, 253, 254,
	1182, 1183, 1184, 0, 1185, 530, 1186, 1187, 1188, 1189,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 532,
	0, 263, 533, 264, 534, 1190, 535, 265, 266, 267,
	268, 269, 1191, 1192, 0, 270, 536, 537, 538, 1193,
	271, 272, 539, 1194, 1261, 1195, 273, 274, 275, 276,
	277, 278, 279, 0, 1196, 281, 282, 283, 280, 1197,
	284, 0, 285, 286, 287, 1198, 288, 1053, 289, 290,
	1199, 1200, 1202, 1201, 1203, 1204, 1205, 291, 292, 293,
	294, 0, 295, 540, 541, 1206, 299, 296, 297, 1207,
	300, 298, 1208, 301, 302, 303, 1209, 1210, 304, 305,
	306, 1211, 307, 308, 1212, 309, 310, 311, 1213, 312,
	313, 542, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 543, 544, 1214, 244, 1215, 0, 0, 0,
	0, 325, 326, 327, 545, 0, 0, 0, 328, 1216,
	329, 1217, 1218, 1054, 330, 331, 546, 547, 332, 333,
	1219, 334, 548, 1220, 549, 335, 1221, 336, 337, 338,
	339, 340, 550, 551, 552, 397, 1056, 341, 342, 1222,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 1223, 1055, 349, 553, 554, 1224, 555, 1225, 351,
	352, 1057, 556, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 1226, 363,
	365, 364, 1227, 366, 557, 1060, 367, 368, 1061, 1228,
	369, 370, 371, 1229, 1230, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 1231, 246, 1064, 395, 1232, 558, 396, 559,
	398, 399, 1233, 0, 400, 0, 1234, 1235, 402, 403,
	404, 1236, 1237, 405, 406, 560, 1065, 407, 1066, 561,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 1238, 418, 419, 562, 563, 564, 420, 565, 421,
	422, 1239, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 566, 432, 431, 433, 1240, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 1241, 444, 445, 446, 1067, 447, 448, 449,
	450, 567, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 1242, 467, 468, 466, 469,
	470, 471, 1243, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 568, 0, 481, 1244, 482,
	483, 484, 485, 458, 486, 491, 569, 487, 488, 489,
	490, 570, 1245, 493, 494, 0, 492, 1246, 495, 496,
	497, 498, 499, 500, 319, 501, 1247, 502, 571, 572,
	573, 574, 1248, 509, 1249, 503, 504, 575, 505, 576,
	1250, 506, 507, 508, 0, 510, 511, 1251, 1252, 512,
	513, 514, 516, 517, 515, 518, 1253, 519, 1254, 0,
	520, 521, 522, 577, 578, 579, 1255, 524, 523, 580,
	1256, 1257, 1258, 1259, 525, 526, 581, 527, 528, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 0, 0, 0, 3238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3240, 247, 248,
	249, 250, 251, 252, 1181, 253, 254, 1182, 1183, 1184,
	0, 1185, 530, 1186, 1187, 1188, 1189, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 1190, 535, 265, 266, 267, 268, 269, 1191,
	1192, 0, 270, 536, 537, 538, 1193, 271, 272, 539,
	1194, 1261, 1195, 273, 274, 275, 276, 277, 278, 279,
	0, 1196, 281, 282, 283, 280, 1197, 284, 0, 285,
	286, 287, 1198, 288, 1053, 289, 290, 1199, 1200, 1202,
	1201, 1203, 1204, 1205, 291, 292, 293, 294, 0, 295,
	540, 541, 1206, 299, 296, 297, 1207, 300, 298, 1208,
	301, 302, 303, 1209, 1210, 304, 305, 306, 1211, 307,
	308, 1212, 309, 310, 311, 1213, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 1214, 244, 1215, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 1216, 329, 1217, 1218,
	1054, 330, 331, 546, 547, 332, 333, 1219, 334, 548,
	1220, 549, 335, 1221, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 1056, 341, 342, 1222, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 1223, 1055,
	349, 553, 554, 1224, 555, 1225, 351, 352, 1057, 556,
	1058, 353, 354, 355, 1059, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 1226, 363, 365, 364, 1227,
	366, 557, 1060, 367, 368, 1061, 1228, 369, 370, 371,
	1229, 1230, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	1062, 388, 389, 390, 393, 394, 392, 1063, 391, 1231,
	246, 1064, 395, 1232, 558, 396, 559, 398, 399, 1233,
	0, 400, 0, 1234, 1235, 402, 403, 404, 1236, 1237,
	405, 406, 560, 1065, 407, 1066, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 1238, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 1239, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 1240, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 1241,
	444, 445, 446, 1067, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 1242, 467, 468, 466, 469, 470, 471, 1243,
	472, 456, 457, 473, 474, 1068, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 1244, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 1245,
	493, 494, 0, 492, 1246, 495, 496, 497, 498, 499,
	500, 319, 501, 1247, 502, 571, 572, 573, 574, 1248,
	509, 1249, 503, 504, 575, 505, 576, 1250, 506, 507,
	508, 0, 510, 511, 1251, 1252, 512, 513, 514, 516,
	517, 515, 518, 1253, 519, 1254, 0, 520, 521, 522,
	577, 578, 579, 1255, 524, 523, 580, 1256, 1257, 1258,
	1259, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3585, 247,
	248, 249, 250, 251, 252, 1181, 253, 254, 1182, 1183,
	1184, 0, 1185, 530, 1186, 1187, 1188, 1189, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 532, 0, 263,
	533, 264, 534, 1190, 535, 265, 266, 267, 268, 269,
	1191, 1192, 0, 270, 536, 537, 538, 1193, 271, 272,
	539, 1194, 1261, 1195, 273, 274, 275, 276, 277, 278,
	279, 0, 1196, 281, 282, 283, 280, 1197, 284, 0,
	285, 286, 287, 1198, 288, 1053, 289, 290, 1199, 1200,
	1202, 1201, 1203, 1204, 1205, 291, 292, 293, 294, 0,
	295, 540, 541, 1206, 299, 296, 297, 1207, 300, 298,
	1208, 301, 302, 303, 1209, 1210, 304, 305, 306, 1211,
	307, 308, 1212, 309, 310, 311, 1213, 312, 313, 542,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	543, 544, 1214, 244, 1215, 0, 0, 0, 0, 325,
	326, 327, 545, 0, 0, 0, 328, 1216, 329, 1217,
	1218, 1054, 330, 331, 546, 547, 332, 333, 1219, 334,
	548, 1220, 549, 335, 1221, 336, 337, 338, 339, 340,
	550, 551, 552, 397, 1056, 341, 342, 1222, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 1223,
	1055, 349, 553, 554, 1224, 555, 1225, 351, 352, 1057,
	556, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 1226, 363, 365, 364,
	1227, 366, 557, 1060, 367, 368, 1061, 1228, 369, 370,
	371, 1229, 1230, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	1231, 246, 1064, 395, 1232, 558, 396, 559, 398, 399,
	1233, 0, 400, 0, 1234, 1235, 402, 403, 404, 1236,
	1237, 405, 406, 560, 1065, 407, 1066, 561, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 1238,
	418, 419, 562, 563, 564, 420, 565, 421, 422, 1239,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 566,
	432, 431, 433, 1240, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	1241, 444, 445, 446, 1067, 447, 448, 449, 450, 567,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 1242, 467, 468, 466, 469, 470, 471,
	1243, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 568, 0, 481, 1244, 482, 483, 484,
	485, 458, 486, 491, 569, 487, 488, 489, 490, 570,
	1245, 493, 494, 0, 492, 1246, 495, 496, 497, 498,
	499, 500, 319, 501, 1247, 502, 571, 572, 573, 574,
	1248, 509, 1249, 503, 504, 575, 505, 576, 1250, 506,
	507, 508, 0, 510, 511, 1251, 1252, 512, 513, 514,
	516, 517, 515, 518, 1253, 519, 1254, 0, 520, 521,
	522, 577, 578, 579, 1255, 524, 523, 580, 1256, 1257,
	1258, 1259, 525, 526, 581, 527, 528, 529, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3752, 247, 248, 249, 250, 251,
	252, 1181, 253, 254, 1182, 1183, 1184, 0, 1185, 530,
	1186, 1187, 1188, 1189, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 532, 0, 263, 533, 264, 534, 1190,
	535, 265, 266, 267, 268, 269, 1191, 1192, 0, 270,
	536, 537, 538, 1193, 271, 272, 539, 1194, 1261, 1195,
	273, 274, 275, 276, 277, 278, 279, 0, 1196, 281,
	282, 283, 280, 1197, 284, 0, 285, 286, 287, 1198,
	288, 1053, 289, 290, 1199, 1200, 1202, 1201, 1203, 1204,
	1205, 291, 292, 293, 294, 0, 295, 540, 541, 1206,
	299, 296, 297, 1207, 300, 298, 1208, 301, 302, 303,
	1209, 1210, 304, 305, 306, 1211, 307, 308, 1212, 309,
	310, 311, 1213, 312, 313, 542, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 543, 544, 1214, 244,
	1215, 0, 0, 0, 0, 325, 326, 327, 545, 0,
	0, 0, 328, 1216, 329, 1217, 1218, 1054, 330, 331,
	546, 547, 332, 333, 1219, 334, 548, 1220, 549, 335,
	1221, 336, 337, 338, 339, 340, 550, 551, 552, 397,
	1056, 341, 342, 1222, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 1223, 1055, 349, 553, 554,
	1224, 555, 1225, 351, 352, 1057, 556, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 1226, 363, 365, 364, 1227, 366, 557, 1060,
	367, 368, 1061, 1228, 369, 370, 371, 1229, 1230, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 1231, 246, 1064, 395,
	1232, 558, 396, 559, 398, 399, 1233, 0, 400, 0,
	1234, 1235, 402, 403, 404, 1236, 1237, 405, 406, 560,
	1065, 407, 1066, 561, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 1238, 418, 419, 562, 563,
	564, 420, 565, 421, 422, 1239, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 566, 432, 431, 433, 1240,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 1241, 444, 445, 446,
	1067, 447, 448, 449, 450, 567, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 1242,
	467, 468, 466, 469, 470, 471, 1243, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 568,
	0, 481, 1244, 482, 483, 484, 485, 458, 486, 491,
	569, 487, 488, 489, 490, 570, 1245, 493, 494, 0,
	492, 1246, 495, 496, 497, 498, 499, 500, 319, 501,
	1247, 502, 571, 572, 573, 574, 1248, 509, 1249, 503,
	504, 575, 505, 576, 1250, 506, 507, 508, 0, 510,
	511, 1251, 1252, 512, 513, 514, 516, 517, 515, 518,
	1253, 519, 1254, 0, 520, 521, 522, 577, 578, 579,
	1255, 524, 523, 580, 1256, 1257, 1258, 1259, 525, 526,
	581, 527, 528, 529, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3644, 247, 248, 249, 250, 251, 252, 1181, 253, 254,
	1182, 1183, 1184, 0, 1185, 530, 1186, 1187, 1188, 1189,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 532,
	0, 263, 533, 264, 534, 1190, 535, 265, 266, 267,
	268, 269, 1191, 1192, 0, 270, 536, 537, 538, 1193,
	271, 272, 539, 1194, 1261, 1195, 273, 274, 275, 276,
	277, 278, 279, 0, 1196, 281, 282, 283, 280, 1197,
	284, 0, 285, 286, 287, 1198, 288, 1053, 289, 290,
	1199, 1200, 1202, 1201, 1203, 1204, 1205, 291, 292, 293,
	294, 0, 295, 540, 541, 1206, 299, 296, 297, 1207,
	300, 298, 1208, 301, 302, 303, 1209, 1210, 304, 305,
	306, 1211, 307, 308, 1212, 309, 310, 311, 1213, 312,
	313, 542, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 543, 544, 1214, 244, 1215, 0, 0, 0,
	0, 325, 326, 327, 545, 0, 0, 0, 328, 1216,
	329, 1217, 1218, 1054, 330, 331, 546, 547, 332, 333,
	1219, 334, 548, 1220, 549, 335, 1221, 336, 337, 338,
	339, 340, 550, 551, 552, 397, 1056, 341, 342, 1222,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 1223, 1055, 349, 553, 554, 1224, 555, 1225, 351,
	352, 1057, 556, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 1226, 363,
	365, 364, 1227, 366, 557, 1060, 367, 368, 1061, 1228,
	369, 370, 371, 1229, 1230, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 1231, 246, 1064, 395, 1232, 558, 396, 559,
	398, 399, 1233, 0, 400, 0, 1234, 1235, 402, 403,
	404, 1236, 1237, 405, 406, 560, 1065, 407, 1066, 561,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 1238, 418, 419, 562, 563, 564, 420, 565, 421,
	422, 1239, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 566, 432, 431, 433, 1240, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 1241, 444, 445, 446, 1067, 447, 448, 449,
	450, 567, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 1242, 467, 468, 466, 469,
	470, 471, 1243, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 568, 0, 481, 1244, 482,
	483, 484, 485, 458, 486, 491, 569, 487, 488, 489,
	490, 570, 1245, 493, 494, 0, 492, 1246, 495, 496,
	497, 498, 499, 500, 319, 501, 1247, 502, 571, 572,
	573, 574, 1248, 509, 1249, 503, 504, 575, 505, 576,
	1250, 506, 507, 508, 0, 510, 511, 1251, 1252, 512,
	513, 514, 516, 517, 515, 518, 1253, 519, 1254, 0,
	520, 521, 522, 577, 578, 579, 1255, 524, 523, 580,
	1256, 1257, 1258, 1259, 525, 526, 581, 527, 528, 529,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3515, 247, 248, 249,
	250, 251, 252, 1181, 253, 254, 1182, 1183, 1184, 0,
	1185, 530, 1186, 1187, 1188, 1189, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 532, 0, 263, 533, 264,
	534, 1190, 535, 265, 266, 267, 268, 269, 1191, 1192,
	0, 270, 536, 537, 538, 1193, 271, 272, 539, 1194,
	1261, 1195, 273, 274, 275, 276, 277, 278, 279, 0,
	1196, 281, 282, 283, 280, 1197, 284, 0, 285, 286,
	287, 1198, 288, 1053, 289, 290, 1199, 1200, 1202, 1201,
	1203, 1204, 1205, 291, 292, 293, 294, 0, 295, 540,
	541, 1206, 299, 296, 297, 1207, 300, 298, 1208, 301,
	302, 303, 1209, 1210, 304, 305, 306, 1211, 307, 308,
	1212, 309, 310, 311, 1213, 312, 313, 542, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 543, 544,
	1214, 244, 1215, 0, 0, 0, 0, 325, 326, 327,
	545, 0, 0, 0, 328, 1216, 329, 1217, 1218, 1054,
	330, 331, 546, 547, 332, 333, 1219, 334, 548, 1220,
	549, 335, 1221, 336, 337, 338, 339, 340, 550, 551,
	552, 397, 1056, 341, 342, 1222, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 1223, 1055, 349,
	553, 554, 1224, 555, 1225, 351, 352, 1057, 556, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 1226, 363, 365, 364, 1227, 366,
	557, 1060, 367, 368, 1061, 1228, 369, 370, 371, 1229,
	1230, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 1231, 246,
	1064, 395, 1232, 558, 396, 559, 398, 399, 1233, 0,
	400, 0, 1234, 1235, 402, 403, 404, 1236, 1237, 405,
	406, 560, 1065, 407, 1066, 561, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 1238, 418, 419,
	562, 563, 564, 420, 565, 421, 422, 1239, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 566, 432, 431,
	433, 1240, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 1241, 444,
	445, 446, 1067, 447, 448, 449, 450, 567, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 1242, 467, 468, 466, 469, 470, 471, 1243, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 568, 0, 481, 1244, 482, 483, 484, 485, 458,
	486, 491, 569, 487, 488, 489, 490, 570, 1245, 493,
	494, 0, 492, 1246, 495, 496, 497, 498, 499, 500,
	319, 501, 1247, 502, 571, 572, 573, 574, 1248, 509,
	1249, 503, 504, 575, 505, 576, 1250, 506, 507, 508,
	0, 510, 511, 1251, 1252, 512, 513, 514, 516, 517,
	515, 518, 1253, 519, 1254, 0, 520, 521, 522, 577,
	578, 579, 1255, 524, 523, 580, 1256, 1257, 1258, 1259,
	525, 526, 581, 527, 528, 529, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3256, 247, 248, 249, 250, 251, 252, 1181,
	253, 254, 1182, 1183, 1184, 0, 1185, 530, 1186, 1187,
	1188, 1189, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 532, 0, 263, 533, 264, 534, 1190, 535, 265,
	266, 267, 268, 269, 1191, 1192, 0, 270, 536, 537,
	538, 1193, 271, 272, 539, 1194, 1261, 1195, 273, 274,
	275, 276, 277, 278, 279, 0, 1196, 281, 282, 283,
	280, 1197, 284, 0, 285, 286, 287, 1198, 288, 1053,
	289, 290, 1199, 1200, 1202, 1201, 1203, 1204, 1205, 291,
	292, 293, 294, 0, 295, 540, 541, 1206, 299, 296,
	297, 1207, 300, 298, 1208, 301, 302, 303, 1209, 1210,
	304, 305, 306, 1211, 307, 308, 1212, 309, 310, 311,
	1213, 312, 313, 542, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 543, 544, 1214, 244, 1215, 0,
	0, 0, 0, 325, 326, 327, 545, 0, 0, 0,
	328, 1216, 329, 1217, 1218, 1054, 330, 331, 546, 547,
	332, 333, 1219, 334, 548, 1220, 549, 335, 1221, 336,
	337, 338, 339, 340, 550, 551, 552, 397, 1056, 341,
	342, 1222, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 1223, 1055, 349, 553, 554, 1224, 555,
	1225, 351, 352, 1057, 556, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	1226, 363, 365, 364, 1227, 366, 557, 1060, 367, 368,
	1061, 1228, 369, 370, 371, 1229, 1230, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 1231, 246, 1064, 395, 1232, 558,
	396, 559, 398, 399, 1233, 0, 400, 0, 1234, 1235,
	402, 403, 404, 1236, 1237, 405, 406, 560, 1065, 407,
	1066, 561, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 1238, 418, 419, 562, 563, 564, 420,
	565, 421, 422, 1239, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 566, 432, 431, 433, 1240, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 1241, 444, 445, 446, 1067, 447,
	448, 449, 450, 567, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 1242, 467, 468,
	466, 469, 470, 471, 1243, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 568, 0, 481,
	1244, 482, 483, 484, 485, 458, 486, 491, 569, 487,
	488, 489, 490, 570, 1245, 493, 494, 0, 492, 1246,
	495, 496, 497, 498, 499, 500, 319, 501, 1247, 502,
	571, 572, 573, 574, 1248, 509, 1249, 503, 504, 575,
	505, 576, 1250, 506, 507, 508, 0, 510, 511, 1251,
	1252, 512, 513, 514, 516, 517, 515, 518, 1253, 519,
	1254, 0, 520, 521, 522, 577, 578, 579, 1255, 524,
	523, 580, 1256, 1257, 1258, 1259, 525, 526, 581, 527,
	528, 529, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3086, 247,
	248, 249, 250, 251, 252, 1181, 253, 254, 1182, 1183,
	1184, 0, 1185, 530, 1186, 1187, 1188, 1189, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 532, 0, 263,
	533, 264, 534, 1190, 535, 265, 266, 267, 268, 269,
	1191, 1192, 0, 270, 536, 537, 538, 1193, 271, 272,
	539, 1194, 1261, 1195, 273, 274, 275, 276, 277, 278,
	279, 0, 1196, 281, 282, 283, 280, 1197, 284, 0,
	285, 286, 287, 1198, 288, 1053, 289, 290, 1199, 1200,
	1202, 1201, 1203, 1204, 1205, 291, 292, 293, 294, 0,
	295, 540, 541, 1206, 299, 296, 297, 1207, 300, 298,
	1208, 301, 302, 303, 1209, 1210, 304, 305, 306, 1211,
	307, 308, 1212, 309, 310, 311, 1213, 312, 313, 542,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	543, 544, 1214, 244, 1215, 0, 0, 0, 0, 325,
	326, 327, 545, 0, 0, 0, 328, 1216, 329, 1217,
	1218, 1054, 330, 331, 546, 547, 332, 333, 1219, 334,
	548, 1220, 549, 335, 1221, 336, 337, 338, 339, 340,
	550, 551, 552, 397, 1056, 341, 342, 1222, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 1223,
	1055, 349, 553, 554, 1224, 555, 1225, 351, 352, 1057,
	556, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 1226, 363, 365, 364,
	1227, 366, 557, 1060, 367, 368, 1061, 1228, 369, 370,
	371, 1229, 1230, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	1231, 246, 1064, 395, 1232, 558, 396, 559, 398, 399,
	1233, 0, 400, 0, 1234, 1235, 402, 403, 404, 1236,
	1237, 405, 406, 560, 1065, 407, 1066, 561, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 1238,
	418, 419, 562, 563, 564, 420, 565, 421, 422, 1239,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 566,
	432, 431, 433, 1240, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	1241, 444, 445, 446, 1067, 447, 448, 449, 450, 567,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 1242, 467, 468, 466, 469, 470, 471,
	1243, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 568, 0, 481, 1244, 482, 483, 484,
	485, 458, 486, 491, 569, 487, 488, 489, 490, 570,
	1245, 493, 494, 0, 492, 1246, 495, 496, 497, 498,
	499, 500, 319, 501, 1247, 502, 571, 572, 573, 574,
	1248, 509, 1249, 503, 504, 575, 505, 576, 1250, 506,
	507, 508, 0, 510, 511, 1251, 1252, 512, 513, 514,
	516, 517, 515, 518, 1253, 519, 1254, 0, 520, 521,
	522, 577, 578, 579, 1255, 524, 523, 580, 1256, 1257,
	1258, 1259, 525, 526, 581, 527, 528, 529, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2292, 247, 248, 249, 250, 251,
	252, 1181, 253, 254, 1182, 1183, 1184, 0, 1185, 530,
	1186, 1187, 1188, 1189, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 532, 0, 263, 533, 264, 534, 1190,
	535, 265, 266, 267, 268, 269, 1191, 1192, 0, 270,
	536, 537, 538, 1193, 271, 272, 539, 1194, 1261, 1195,
	273, 274, 275, 276, 277, 278, 279, 0, 1196, 281,
	282, 283, 280, 1197, 284, 0, 285, 286, 287, 1198,
	288, 1053, 289, 290, 1199, 1200, 1202, 1201, 1203, 1204,
	1205, 291, 292, 293, 294, 0, 295, 540, 541, 1206,
	299, 296, 297, 1207, 300, 298, 1208, 301, 302, 303,
	1209, 1210, 304, 305, 306, 1211, 307, 308, 1212, 309,
	310, 311, 1213, 312, 313, 542, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 543, 544, 1214, 244,
	1215, 0, 0, 0, 0, 325, 326, 327, 545, 0,
	0, 0, 328, 1216, 329, 1217, 1218, 1054, 330, 331,
	546, 547, 332, 333, 1219, 334, 548, 1220, 549, 335,
	1221, 336, 337, 338, 339, 340, 550, 551, 552, 397,
	1056, 341, 342, 1222, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 1223, 1055, 349, 553, 554,
	1224, 555, 1225, 351, 352, 1057, 556, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 1226, 363, 365, 364, 1227, 366, 557, 1060,
	367, 368, 1061, 1228, 369, 370, 371, 1229, 1230, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 1231, 246, 1064, 395,
	1232, 558, 396, 559, 398, 399, 1233, 0, 400, 0,
	1234, 1235, 402, 403, 404, 1236, 1237, 405, 406, 560,
	1065, 407, 1066, 561, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 1238, 418, 419, 562, 563,
	564, 420, 565, 421, 422, 1239, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 566, 432, 431, 433, 1240,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 1241, 444, 445, 446,
	1067, 447, 448, 449, 450, 567, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 1242,
	467, 468, 466, 469, 470, 471, 1243, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 568,
	0, 481, 1244, 482, 483, 484, 485, 458, 486, 491,
	569, 487, 488, 489, 490, 570, 1245, 493, 494, 0,
	492, 1246, 495, 496, 497, 498, 499, 500, 319, 501,
	1247, 502, 571, 572, 573, 574, 1248, 509, 1249, 503,
	504, 575, 505, 576, 1250, 506, 507, 508, 0, 510,
	511, 1251, 1252, 512, 513, 514, 516, 517, 515, 518,
	1253, 519, 1254, 0, 520, 521, 522, 577, 578, 579,
	1255, 524, 523, 580, 1256, 1257, 1258, 1259, 525, 526,
	581, 527, 528, 529, 1273, 0, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 247, 248, 249, 250, 251, 252, 1181,
	253, 254, 1182, 1183, 1184, 0, 1185, 530, 1186, 1187,
	1188, 1189, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 532, 0, 263, 533, 264, 534, 1190, 535, 265,
	266, 267, 268, 269, 1191, 1192, 0, 270, 536, 537,
	538, 1193, 271, 272, 539, 1194, 1261, 1195, 273, 274,
	275, 276, 277, 278, 279, 0, 1196, 281, 282, 283,
	280, 1197, 284, 0, 285, 286, 287, 1198, 288, 1053,
	289, 290, 1199, 1200, 1202, 1201, 1203, 1204, 1205, 291,
	292, 293, 294, 0, 295, 540, 541, 1206, 299, 296,
	297, 1207, 300, 298, 1208, 301, 302, 303, 1209, 1210,
	304, 305, 306, 1211, 307, 308, 1212, 309, 310, 311,
	1213, 312, 313, 542, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 543, 544, 1214, 244, 1215, 0,
	0, 0, 0, 325, 326, 327, 545, 0, 0, 0,
	328, 1216, 329, 1217, 1218, 1054, 330, 331, 546, 547,
	332, 333, 1219, 334, 548, 1220, 549, 335, 1221, 336,
	337, 338, 339, 340, 550, 551, 552, 397, 1056, 341,
	342, 1222, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 1223, 1055, 349, 553, 554, 1224, 555,
	1225, 351, 352, 1057, 556, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	1226, 363, 365, 364, 1227, 366, 557, 1060, 367, 368,
	1061, 1228, 369, 370, 371, 1229, 1230, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 1231, 246, 1064, 395, 1232, 558,
	396, 559, 398, 399, 1233, 0, 400, 0, 1234, 1235,
	402, 403, 404, 1236, 1237, 405, 406, 560, 1065, 407,
	1066, 561, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 1238, 418, 419, 562, 563, 564, 420,
	565, 421, 422, 1239, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 566, 432, 431, 433, 1240, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 1241, 444, 445, 446, 1067, 447,
	448, 449, 450, 567, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 1242, 467, 468,
	466, 469, 470, 471, 1243, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 568, 0, 481,
	1244, 482, 483, 484, 485, 458, 486, 491, 569, 487,
	488, 489, 490, 570, 1245, 493, 494, 0, 492, 1246,
	495, 496, 497, 498, 499, 500, 319, 501, 1247, 502,
	571, 572, 573, 574, 1248, 509, 1249, 503, 504, 575,
	505, 576, 1250, 506, 507, 508, 0, 510, 511, 1251,
	1252, 512, 513, 514, 516, 517, 515, 518, 1253, 519,
	1254, 0, 520, 521, 522, 577, 578, 579, 1255, 524,
	523, 580, 1256, 1257, 1258, 1259, 525, 526, 581, 527,
	528, 529, 1172, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 1181, 253, 254,
	1182, 1183, 1184, 0, 1185, 530, 1186, 1187, 1188, 1189,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 532,
	0, 263, 533, 264, 534, 1190, 535, 265, 266, 267,
	268, 269, 1191, 1192, 0, 270, 536, 537, 538, 1193,
	271, 272, 539, 1194, 1261, 1195, 273, 274, 275, 276,
	277, 278, 279, 0, 1196, 281, 282, 283, 280, 1197,
	284, 0, 285, 286, 287, 1198, 288, 1053, 289, 290,
	1199, 1200, 1202, 1201, 1203, 1204, 1205, 291, 292, 293,
	294, 0, 295, 540, 541, 1206, 299, 296, 297, 1207,
	300, 298, 1208, 301, 302, 303, 1209, 1210, 304, 305,
	306, 1211, 307, 308, 1212, 309, 310, 311, 1213, 312,
	313, 542, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 543, 544, 1214, 244, 1215, 0, 0, 0,
	0, 325, 326, 327, 545, 0, 0, 0, 328, 1216,
	329, 1217, 1218, 1054, 330, 331, 546, 547, 332, 333,
	1219, 334, 548, 1220, 549, 335, 1221, 336, 337, 338,
	339, 340, 550, 551, 552, 397, 1056, 341, 342, 1222,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 1223, 1055, 349, 553, 554, 1224, 555, 1225, 351,
	352, 1057, 556, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 1226, 363,
	365, 364, 1227, 366, 557, 1060, 367, 368, 1061, 1228,
	369, 370, 371, 1229, 1230, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 1231, 246, 1064, 395, 1232, 558, 396, 559,
	398, 399, 1233, 0, 400, 0, 1234, 1235, 402, 403,
	404, 1236, 1237, 405, 406, 560, 1065, 407, 1066, 561,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 1238, 418, 419, 562, 563, 564, 420, 565, 421,
	422, 1239, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 566, 432, 431, 433, 1240, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 1241, 444, 445, 446, 1067, 447, 448, 449,
	450, 567, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 1242, 467, 468, 466, 469,
	470, 471, 1243, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 568, 0, 481, 1244, 482,
	483, 484, 485, 458, 486, 491, 569, 487, 488, 489,
	490, 570, 1245, 493, 494, 0, 492, 1246, 495, 496,
	497, 498, 499, 500, 319, 501, 1247, 502, 571, 572,
	573, 574, 1248, 509, 1249, 503, 504, 575, 505, 576,
	1250, 506, 507, 508, 0, 510, 511, 1251, 1252, 512,
	513, 514, 516, 517, 515, 518, 1253, 519, 1254, 0,
	520, 521, 522, 577, 578, 579, 1255, 524, 523, 580,
	1256, 1257, 1258, 1259, 525, 526, 581, 527, 528, 529,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 1181, 253, 254, 1182, 1183, 1184, 0,
	1185, 530, 1186, 1187, 1188, 1189, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 532, 0, 263, 533, 264,
	534, 1190, 535, 265, 266, 267, 268, 269, 1191, 1192,
	0, 270, 536, 537, 538, 1193, 271, 272, 539, 1194,
	1261, 1195, 273, 274, 275, 276, 277, 278, 279, 0,
	1196, 281, 282, 283, 280, 1197, 284, 0, 285, 286,
	287, 1198, 288, 1053, 289, 290, 1199, 1200, 1202, 1201,
	1203, 1204, 1205, 291, 292, 293, 294, 0, 295, 540,
	541, 1206, 299, 296, 297, 1207, 300, 298, 1208, 301,
	302, 303, 1209, 1210, 304, 305, 306, 1211, 307, 308,
	1212, 309, 310, 311, 1213, 312, 313, 542, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 543, 544,
	1214, 244, 1215, 0, 0, 0, 0, 325, 326, 327,
	545, 0, 0, 0, 328, 1216, 329, 1217, 1218, 1054,
	330, 331, 546, 547, 332, 333, 1219, 334, 548, 1220,
	549, 335, 1221, 336, 337, 338, 339, 340, 550, 551,
	552, 397, 1056, 341, 342, 1222, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 1223, 1055, 349,
	553, 554, 1224, 555, 1225, 351, 352, 1057, 556, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 1226, 363, 365, 364, 1227, 366,
	557, 1060, 367, 368, 1061, 1228, 369, 370, 371, 1229,
	1230, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 1231, 246,
	1064, 395, 1232, 558, 396, 559, 398, 399, 1233, 0,
	400, 0, 1234, 1235, 402, 403, 404, 1236, 1237, 405,
	406, 560, 1065, 407, 1066, 561, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 1238, 418, 419,
	562, 563, 564, 420, 565, 421, 422, 1239, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 566, 432, 431,
	433, 1240, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 1241, 444,
	445, 446, 1067, 447, 448, 449, 450, 567, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 1242, 467, 468, 466, 469, 470, 471, 1243, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 568, 0, 481, 1244, 482, 483, 484, 485, 458,
	486, 491, 569, 487, 488, 489, 490, 570, 1245, 493,
	494, 0, 492, 1246, 495, 496, 497, 498, 499, 500,
	319, 501, 1247, 502, 571, 572, 573, 574, 1248, 509,
	1249, 503, 504, 575, 505, 576, 1250, 506, 507, 508,
	0, 510, 511, 1251, 1252, 512, 513, 514, 516, 517,
	515, 518, 1253, 519, 1254, 0, 520, 521, 522, 577,
	578, 579, 1255, 524, 523, 580, 1256, 1257, 1258, 1259,
	525, 526, 581, 527, 528, 529, 2267, 0, 989, 961,
	962, 963, 959, 960, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 2264, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	2265, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	2263, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	2266, 0, 0, 0, 0, 0, 0, 973, 2262, 0,
	935, 971, 989, 961, 962, 963, 959, 960, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 208, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 210, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 1446, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 202, 525, 526, 581, 527, 528, 529, 948, 203,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 989, 961, 962, 963, 959, 960,
	972, 1681, 1679, 0, 0, 971, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 208, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 210, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 1446, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 202, 525, 526, 581, 527, 528, 529,
	948, 203, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 989, 961, 962, 963,
	959, 960, 972, 1681, 2791, 0, 0, 971, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 208, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 210,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 510, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 1446, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 202, 525, 526, 581, 527,
	528, 529, 948, 203, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 989, 961,
	962, 963, 959, 960, 972, 1681, 1679, 0, 0, 971,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 2371,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 2376, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 2372, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 2373, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	2312, 971, 989, 961, 962, 963, 959, 960, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 0, 0, 0, 0, 0, 0,
	0, 973, 2310, 0, 2309, 971, 989, 961, 962, 963,
	959, 960, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 510, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 948, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 0, 0,
	0, 0, 0, 0, 0, 973, 2307, 0, 2306, 971,
	989, 961, 962, 963, 959, 960, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	946, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 950, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 947, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 957, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 945, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 951, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 948, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	942, 943, 0, 0, 0, 0, 0, 0, 0, 973,
	2304, 0, 2303, 971, 989, 961, 962, 963, 959, 960,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 528, 529,
	948, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 0, 0, 0, 0,
	0, 0, 0, 973, 2301, 0, 1534, 971, 989, 961,
	962, 963, 959, 960, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 1533, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	938, 971, 989, 961, 962, 963, 959, 960, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 952, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 989, 961, 962, 963, 959, 960,
	972, 973, 0, 0, 0, 971, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 4020, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 952, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 528, 529,
	948, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 989, 961, 962, 963,
	959, 960, 972, 973, 0, 0, 0, 971, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 2181,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 2180, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 510, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 948, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 989, 961,
	962, 963, 959, 960, 972, 973, 0, 0, 0, 971,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	952, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	989, 961, 962, 963, 959, 960, 972, 973, 0, 0,
	0, 971, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	946, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 3815,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 950, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 947, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 952, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 957, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 945, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 951, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 948, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	942, 943, 989, 961, 962, 963, 959, 960, 972, 973,
	0, 0, 0, 971, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 3477, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 1749, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 0, 971, 989, 961, 962, 963,
	959, 960, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 510, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 3234, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 948, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 989, 961,
	962, 963, 959, 960, 972, 973, 0, 0, 0, 971,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	1749, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	0, 971, 989, 961, 962, 963, 959, 960, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	2376, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 989, 961, 962, 963, 959, 960,
	972, 973, 0, 0, 0, 971, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 528, 529,
	948, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 0, 0, 0, 0,
	0, 0, 0, 973, 1679, 0, 2381, 971, 989, 961,
	962, 963, 959, 960, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	2379, 971, 989, 961, 962, 963, 959, 960, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 2367, 971, 989, 961, 962, 963,
	959, 960, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 510, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 948, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 0, 2356, 971,
	989, 961, 962, 963, 959, 960, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	946, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 950, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 947, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 957, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 945, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 951, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 948, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	942, 943, 0, 0, 0, 0, 0, 0, 0, 973,
	0, 0, 2354, 971, 2345, 2352, 962, 963, 959, 960,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 2348, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	2349, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 2350, 2347, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 2351, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 2346, 529,
	948, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 0, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 2342, 971, 2345, 2352,
	962, 963, 959, 960, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 2348, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 2349, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 2350,
	2347, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 2351, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 2346, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	989, 961, 962, 963, 959, 960, 972, 973, 0, 0,
	0, 971, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	946, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 950, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 947, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 957, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 945, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 951, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 948, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	942, 943, 0, 0, 0, 0, 0, 1687, 0, 973,
	0, 0, 0, 971, 989, 961, 962, 963, 959, 960,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 2160, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 528, 529,
	948, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 0, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 1539, 971, 989, 961,
	962, 963, 959, 960, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	1476, 971, 989, 961, 962, 963, 959, 960, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 1471, 971, 989, 961, 962, 963,
	959, 960, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 510, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 948, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 0, 1462, 971,
	989, 961, 962, 963, 959, 960, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	946, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 950, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 947, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 957, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 945, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 951, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 948, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	942, 943, 0, 0, 0, 0, 0, 0, 0, 973,
	0, 0, 1457, 971, 989, 961, 962, 963, 959, 960,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 528, 529,
	948, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 0, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 1439, 971, 989, 961,
	962, 963, 959, 960, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	1325, 971, 989, 961, 962, 963, 959, 960, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1324, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 1319, 971, 989, 961, 962, 963,
	959, 960, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1318, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 510, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 948, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 0, 1312, 971,
	989, 961, 962, 963, 959, 960, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	946, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 950, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 947, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 957, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 945, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 951, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 948, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	942, 943, 989, 961, 962, 963, 959, 960, 972, 973,
	0, 0, 0, 971, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 942, 943, 989, 961, 962, 963, 959, 960,
	972, 973, 0, 0, 0, 971, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 946, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 4060,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 950, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 947, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 945, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 4059, 511, 0, 951, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 528, 529,
	948, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 942, 943, 989, 961, 962, 963,
	959, 960, 972, 973, 0, 0, 0, 971, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	4058, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 4060, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 1064, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 4059, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 948, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 942, 943, 989, 961,
	962, 963, 2758, 2759, 972, 973, 0, 0, 0, 971,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1013,
	977, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 1026, 0, 263, 1033, 264, 1032, 0,
	1043, 265, 266, 267, 268, 269, 979, 1012, 946, 270,
	1072, 1073, 538, 0, 271, 272, 1019, 0, 1000, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005, 1004,
	1008, 291, 292, 293, 294, 1036, 295, 1030, 1029, 950,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 1021, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 956, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 1044, 1045, 968, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 1028, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	1041, 1042, 332, 333, 0, 334, 1051, 0, 978, 335,
	0, 336, 337, 338, 339, 340, 1014, 1015, 1018, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 1055, 349, 1023, 1024,
	0, 984, 0, 351, 352, 1057, 1016, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 1052, 1060,
	367, 368, 1061, 0, 369, 370, 371, 1007, 1006, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 947, 246, 1064, 395,
	969, 1017, 396, 1031, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 1046, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	1047, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 1027, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 957, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 1010, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 1025,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	1071, 487, 488, 489, 490, 1048, 0, 493, 494, 945,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 1037, 1038, 1039, 1040, 0, 509, 0, 503,
	504, 1049, 505, 1050, 967, 506, 507, 508, 0, 510,
	511, 0, 951, 512, 513, 514, 516, 517, 515, 518,
	1011, 519, 0, 0, 520, 521, 522, 577, 1034, 1070,
	0, 524, 523, 580, 0, 0, 0, 0, 525, 526,
	581, 527, 528, 529, 948, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 942, 943,
	989, 961, 962, 963, 2756, 2757, 972, 973, 0, 0,
	0, 971, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	946, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 950, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 947, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 957, 451, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 945, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 951, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 948, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	942, 943, 989, 961, 962, 963, 959, 960, 972, 973,
	0, 0, 0, 971, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1013, 977, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 1026, 0, 263,
	1033, 264, 1032, 0, 1043, 265, 266, 267, 268, 269,
	979, 1012, 946, 270, 1072, 1073, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 1036,
	295, 1030, 1029, 950, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 1021, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 956,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 968, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 1028, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 1041, 1042, 332, 333, 0, 334,
	1051, 0, 978, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 1023, 1024, 0, 984, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 0, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	947, 246, 1064, 395, 969, 1017, 396, 1031, 398, 399,
	0, 0, 400, 0, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 1027,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 957,
	451, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 1025, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 1071, 487, 488, 489, 490, 1048,
	0, 493, 494, 945, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 1037, 1038, 1039, 1040,
	0, 509, 0, 503, 504, 1049, 505, 1050, 967, 506,
	507, 508, 0, 510, 511, 0, 951, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 1034, 1070, 0, 524, 523, 580, 0, 0,
	0, 0, 525, 526, 581, 527, 528, 529, 948, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 2168, 2169, 989, 961, 962, 963, 959, 960,
	972, 973, 0, 0, 0, 971, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1013, 977, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 531, 1026,
	0, 263, 1033, 264, 1032, 0, 1043, 265, 266, 267,
	268, 269, 979, 1012, 0, 270, 1072, 1073, 538, 0,
	271, 272, 1019, 0, 1000, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 0, 288, 1053, 289, 290,
	1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293,
	294, 1036, 295, 1030, 1029, 0, 299, 296, 297, 0,
	300, 298, 0, 301, 302, 303, 0, 0, 304, 1021,
	306, 0, 307, 308, 0, 309, 310, 311, 0, 312,
	313, 956, 314, 315, 316, 318, 320, 317, 321, 322,
	323, 324, 1044, 1045, 968, 244, 0, 0, 0, 0,
	0, 325, 326, 327, 1028, 0, 0, 0, 328, 0,
	329, 0, 0, 1054, 330, 331, 1041, 1042, 332, 333,
	0, 334, 1051, 0, 978, 335, 0, 336, 337, 338,
	339, 340, 1014, 1015, 1018, 397, 1056, 341, 342, 0,
	343, 344, 345, 346, 0, 0, 0, 245, 347, 348,
	350, 0, 1055, 349, 1023, 1024, 0, 984, 0, 351,
	352, 1057, 1016, 1058, 353, 354, 355, 1059, 356, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 0, 363,
	365, 364, 0, 366, 1052, 1060, 367, 368, 1061, 0,
	369, 370, 371, 1007, 1006, 372, 373, 374, 375, 0,
	376, 377, 379, 381, 378, 380, 385, 382, 383, 384,
	387, 0, 386, 1062, 388, 389, 390, 393, 394, 392,
	1063, 391, 0, 246, 1064, 395, 969, 1017, 396, 1031,
	398, 399, 0, 0, 400, 0, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 560, 1065, 407, 1066, 1046,
	408, 409, 401, 410, 411, 412, 413, 414, 415, 416,
	417, 0, 418, 419, 562, 563, 1047, 420, 565, 421,
	422, 0, 423, 0, 424, 425, 426, 427, 428, 429,
	430, 1027, 432, 431, 433, 0, 434, 0, 0, 0,
	0, 0, 435, 0, 437, 438, 439, 436, 440, 441,
	442, 443, 0, 444, 445, 446, 1067, 447, 448, 449,
	450, 957, 451, 0, 452, 453, 459, 460, 454, 455,
	461, 462, 463, 464, 465, 0, 467, 468, 466, 469,
	470, 471, 1010, 472, 456, 457, 473, 474, 1068, 475,
	476, 477, 478, 479, 480, 1025, 0, 481, 0, 482,
	483, 484, 485, 458, 486, 491, 1071, 487, 488, 489,
	490, 1048, 0, 493, 494, 0, 492, 0, 495, 496,
	497, 498, 499, 500, 319, 501, 0, 502, 1037, 1038,
	1039, 1040, 0, 509, 0, 503, 504, 1049, 505, 1050,
	967, 506, 507, 508, 0, 510, 511, 0, 0, 512,
	513, 514, 516, 517, 515, 518, 1011, 519, 0, 0,
	520, 521, 522, 577, 1034, 1070, 0, 524, 523, 580,
	0, 0, 0, 0, 525, 526, 581, 527, 528, 529,
	989, 961, 962, 963, 959, 960, 972, 2364, 0, 0,
	0, 0, 0, 0, 2362, 2363, 0, 247, 248, 249,
	250, 251, 252, 973, 253, 254, 0, 971, 0, 0,
	0, 1013, 977, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 1026, 0, 263, 1033, 264,
	1032, 0, 1043, 265, 266, 267, 268, 269, 979, 1012,
	0, 270, 1072, 1073, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 1036, 295, 1030,
	1029, 0, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 1021, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 956, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	968, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	1028, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 1041, 1042, 332, 333, 0, 334, 1051, 0,
	978, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	1023, 1024, 0, 984, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 0, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 0, 246,
	1064, 395, 969, 1017, 396, 1031, 398, 399, 0, 0,
	400, 0, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 1027, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 2751, 2752, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 0, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 1025, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 1071, 487, 488, 489, 490, 1048, 0, 493,
	494, 0, 492, 0, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 1037, 1038, 1039, 1040, 0, 509,
	0, 503, 504, 1049, 505, 1050, 967, 506, 507, 508,
	0, 510, 511, 0, 0, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 577,
	1034, 1070, 0, 524, 523, 580, 0, 0, 0, 0,
	525, 526, 581, 527, 528, 529, 989, 961, 962, 963,
	959, 960, 972, 0, 0, 0, 0, 0, 0, 0,
	1884, 1885, 0, 247, 248, 249, 250, 251, 252, 973,
	253, 254, 0, 971, 0, 0, 0, 1013, 977, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	0, 1026, 0, 263, 1033, 264, 1032, 0, 1043, 265,
	266, 267, 268, 269, 979, 1012, 946, 270, 1072, 1073,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 4060, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 1036, 295, 1030, 1029, 950, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 1021, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 956, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 968, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 1028, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 1041, 1042,
	332, 333, 0, 334, 1051, 0, 978, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 0, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 1023, 1024, 0, 984,
	0, 351, 352, 0, 1016, 0, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	0, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 947, 246, 0, 395, 969, 1017,
	396, 1031, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 1027, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 957, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	0, 475, 476, 477, 478, 479, 480, 1025, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 1071, 487,
	488, 489, 490, 1048, 0, 493, 494, 945, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	1037, 1038, 1039, 1040, 0, 509, 0, 503, 504, 1049,
	505, 1050, 967, 506, 507, 508, 0, 4059, 511, 0,
	951, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 1034, 1070, 0, 524,
	523, 580, 0, 0, 0, 0, 525, 526, 581, 527,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 935, 0, 1110, 0, 0, 942, 943, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 0, 0, 971,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1013, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 1012, 0, 270, 536, 537, 538, 0, 271,
	272, 1019, 0, 1000, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 1053, 289, 290, 1003,
	1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 1044, 1045, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 1054, 330, 331, 546, 547, 332, 333, 0,
	334, 1051, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 1014, 1015, 1018, 397, 1056, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 1055, 349, 553, 554, 0, 555, 0, 351, 352,
	1057, 1016, 1058, 353, 354, 355, 1059, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 1096, 363, 365,
	364, 0, 366, 1052, 1060, 367, 368, 1061, 0, 369,
	370, 371, 1007, 1006, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 1062, 388, 389, 390, 393, 394, 392, 1063,
	391, 0, 246, 1064, 395, 0, 1017, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 1102, 402, 403, 404,
	0, 0, 405, 406, 560, 1065, 407, 1066, 1046, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 1047, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 1067, 447, 448, 449, 450,
	567, 1104, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 208, 467, 468, 466, 469, 470,
	471, 1010, 472, 456, 457, 473, 474, 1068, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	1048, 0, 493, 494, 0, 492, 210, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 1049, 505, 1050, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 1011, 519, 0, 0, 520,
	521, 522, 1446, 578, 579, 0, 524, 523, 580, 0,
	1110, 0, 202, 525, 526, 581, 527, 528, 529, 0,
	203, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	1100, 1013, 1773, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 531, 532, 0, 263, 533, 264,
	534, 0, 535, 265, 266, 267, 268, 269, 0, 1012,
	0, 270, 536, 537, 538, 0, 271, 272, 1019, 0,
	1000, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009,
	1005, 1004, 1008, 291, 292, 293, 294, 0, 295, 540,
	541, 0, 299, 296, 297, 0, 300, 298, 0, 301,
	302, 303, 0, 0, 304, 305, 306, 0, 307, 308,
	0, 309, 310, 311, 0, 312, 313, 542, 314, 315,
	316, 318, 320, 317, 321, 322, 323, 324, 1044, 1045,
	0, 244, 0, 0, 0, 0, 0, 325, 326, 327,
	545, 0, 0, 0, 328, 0, 329, 0, 0, 1054,
	330, 331, 546, 547, 332, 333, 0, 334, 1051, 0,
	549, 335, 0, 336, 337, 338, 339, 340, 1014, 1015,
	1018, 397, 1056, 341, 342, 0, 343, 344, 345, 346,
	0, 0, 0, 245, 347, 348, 350, 0, 1055, 349,
	553, 554, 0, 555, 0, 351, 352, 1057, 1016, 1058,
	353, 354, 355, 1059, 356, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 1096, 363, 365, 364, 0, 366,
	1052, 1060, 367, 368, 1061, 0, 369, 370, 371, 1007,
	1006, 372, 373, 374, 375, 0, 376, 377, 379, 381,
	378, 380, 385, 382, 383, 384, 387, 0, 386, 1062,
	388, 389, 390, 393, 394, 392, 1063, 391, 0, 246,
	1064, 395, 0, 1017, 396, 559, 398, 399, 0, 0,
	400, 0, 0, 1102, 402, 403, 404, 0, 0, 405,
	406, 560, 1065, 407, 1066, 1046, 408, 409, 401, 410,
	411, 412, 413, 414, 415, 416, 417, 0, 418, 419,
	562, 563, 1047, 420, 565, 421, 422, 0, 423, 0,
	424, 425, 426, 427, 428, 429, 430, 566, 432, 431,
	433, 0, 434, 0, 0, 0, 0, 0, 435, 0,
	437, 438, 439, 436, 440, 441, 442, 443, 0, 444,
	445, 446, 1067, 447, 448, 449, 450, 567, 1104, 0,
	452, 453, 459, 460, 454, 455, 461, 462, 463, 464,
	465, 208, 467, 468, 466, 469, 470, 471, 1010, 472,
	456, 457, 473, 474, 1068, 475, 476, 477, 478, 479,
	480, 568, 0, 481, 0, 482, 483, 484, 485, 458,
	486, 491, 569, 487, 488, 489, 490, 1048, 0, 493,
	494, 0, 492, 210, 495, 496, 497, 498, 499, 500,
	319, 501, 0, 502, 571, 572, 573, 574, 0, 509,
	0, 503, 504, 1049, 505, 1050, 0, 506, 507, 508,
	0, 510, 511, 0, 0, 512, 513, 514, 516, 517,
	515, 518, 1011, 519, 0, 0, 520, 521, 522, 1446,
	578, 579, 0, 524, 523, 580, 0, 0, 0, 202,
	525, 526, 581, 527, 528, 529, 0, 203, 0, 0,
	0, 2911, 0, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 1773,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1013, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 1012, 0, 270, 536, 537, 538, 0, 271,
	272, 1019, 0, 1000, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 1053, 289, 290, 1003,
	1001, 1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 1044, 1045, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 1054, 330, 331, 546, 547, 332, 333, 0,
	334, 1051, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 1014, 1015, 1018, 397, 1056, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 1055, 349, 553, 554, 0, 555, 0, 351, 352,
	1057, 1016, 1058, 353, 354, 355, 1059, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 1096, 363, 365,
	364, 0, 366, 1052, 1060, 367, 368, 1061, 0, 369,
	370, 371, 1007, 1006, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 1062, 388, 389, 390, 393, 394, 392, 1063,
	391, 0, 246, 1064, 395, 0, 1017, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 1102, 402, 403, 404,
	0, 0, 405, 406, 560, 1065, 407, 1066, 1046, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 1047, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 1067, 447, 448, 449, 450,
	567, 1104, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 1010, 472, 456, 457, 473, 474, 1068, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	1048, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 1049, 505, 1050, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 1011, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 0,
	1092, 0, 1110, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	1100, 0, 1098, 1013, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 531, 532, 0, 263,
	533, 264, 534, 0, 535, 265, 266, 267, 268, 269,
	0, 1012, 0, 270, 536, 537, 538, 0, 271, 272,
	1019, 0, 1000, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 0, 288, 1053, 289, 290, 1003, 1001,
	1002, 1009, 1005, 1004, 1008, 291, 292, 293, 294, 0,
	295, 540, 541, 0, 299, 296, 297, 0, 300, 298,
	0, 301, 302, 303, 0, 0, 304, 305, 306, 0,
	307, 308, 0, 309, 310, 311, 0, 312, 313, 542,
	314, 315, 316, 318, 320, 317, 321, 322, 323, 324,
	1044, 1045, 0, 244, 0, 0, 0, 0, 0, 325,
	326, 327, 545, 0, 0, 0, 328, 0, 329, 0,
	0, 1054, 330, 331, 546, 547, 332, 333, 0, 334,
	1051, 0, 549, 335, 0, 336, 337, 338, 339, 340,
	1014, 1015, 1018, 397, 1056, 341, 342, 0, 343, 344,
	345, 346, 0, 0, 0, 245, 347, 348, 350, 0,
	1055, 349, 553, 554, 0, 555, 0, 351, 352, 1057,
	1016, 1058, 353, 354, 355, 1059, 356, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 1096, 363, 365, 364,
	0, 366, 1052, 1060, 367, 368, 1061, 0, 369, 370,
	371, 1007, 1006, 372, 373, 374, 375, 0, 376, 377,
	379, 381, 378, 380, 385, 382, 383, 384, 387, 0,
	386, 1062, 388, 389, 390, 393, 394, 392, 1063, 391,
	0, 246, 1064, 395, 0, 1017, 396, 559, 398, 399,
	0, 0, 400, 0, 0, 1102, 402, 403, 404, 0,
	0, 405, 406, 560, 1065, 407, 1066, 1046, 408, 409,
	401, 410, 411, 412, 413, 414, 415, 416, 417, 0,
	418, 419, 562, 563, 1047, 420, 565, 421, 422, 0,
	423, 0, 424, 425, 426, 427, 428, 429, 430, 566,
	432, 431, 433, 0, 434, 0, 0, 0, 0, 0,
	435, 0, 437, 438, 439, 436, 440, 441, 442, 443,
	0, 444, 445, 446, 1067, 447, 448, 449, 450, 567,
	1104, 0, 452, 453, 459, 460, 454, 455, 461, 462,
	463, 464, 465, 0, 467, 468, 466, 469, 470, 471,
	1010, 472, 456, 457, 473, 474, 1068, 475, 476, 477,
	478, 479, 480, 568, 0, 481, 0, 482, 483, 484,
	485, 458, 486, 491, 569, 487, 488, 489, 490, 1048,
	0, 493, 494, 0, 492, 0, 495, 496, 497, 498,
	499, 500, 319, 501, 0, 502, 571, 572, 573, 574,
	0, 509, 0, 503, 504, 1049, 505, 1050, 0, 506,
	507, 508, 0, 510, 511, 0, 0, 512, 513, 514,
	516, 517, 515, 518, 1011, 519, 0, 0, 520, 521,
	522, 577, 578, 579, 0, 524, 523, 580, 0, 1110,
	0, 0, 525, 526, 581, 527, 528, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 1100,
	1013, 1098, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 1012, 0,
	270, 536, 537, 538, 0, 271, 272, 1019, 0, 1000,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 1053, 289, 290, 1003, 1001, 1002, 1009, 1005,
	1004, 1008, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 1044, 1045, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 1054, 330,
	331, 546, 547, 332, 333, 0, 334, 1051, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 1014, 1015, 1018,
	397, 1056, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 1055, 349, 553,
	554, 0, 555, 0, 351, 352, 1057, 1016, 1058, 353,
	354, 355, 1059, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 1096, 363, 365, 364, 0, 366, 1052,
	1060, 367, 368, 1061, 0, 369, 370, 371, 1007, 1006,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 1062, 388,
	389, 390, 393, 394, 392, 1063, 391, 0, 246, 1064,
	395, 0, 1017, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 1102, 402, 403, 404, 0, 0, 405, 406,
	560, 1065, 407, 1066, 1046, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 1047, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 1067, 447, 448, 449, 450, 567, 1104, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 1010, 472, 456,
	457, 473, 474, 1068, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 1048, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 1049, 505, 1050, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 1011, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 0, 1110, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 1100, 1013, 1098, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 532, 0, 263, 533, 264, 534, 0, 535, 265,
	266, 267, 268, 269, 0, 1012, 0, 270, 536, 537,
	538, 0, 271, 272, 1019, 0, 1000, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 1053,
	289, 290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291,
	292, 293, 294, 0, 295, 540, 541, 0, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 305, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 542, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 1044, 1045, 0, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 545, 0, 0, 0,
	328, 0, 329, 0, 0, 1054, 330, 331, 546, 547,
	332, 333, 0, 334, 1051, 0, 549, 335, 0, 336,
	337, 338, 339, 340, 1014, 1015, 1018, 397, 1056, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 1055, 349, 553, 554, 0, 555,
	0, 351, 352, 1057, 1016, 1058, 353, 354, 355, 1059,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 1052, 1060, 367, 368,
	1061, 0, 369, 370, 371, 1007, 1006, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 1062, 388, 389, 390, 393,
	394, 392, 1063, 391, 0, 246, 1064, 395, 0, 1017,
	396, 559, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 1065, 407,
	1066, 1046, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 1047, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 566, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 1067, 447,
	448, 449, 450, 567, 1104, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 1010, 472, 456, 457, 473, 474,
	1068, 475, 476, 477, 478, 479, 480, 568, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 569, 487,
	488, 489, 490, 1048, 0, 493, 494, 0, 492, 0,
	495, 496, 497, 498, 499, 500, 319, 501, 0, 502,
	571, 572, 573, 574, 0, 509, 0, 503, 504, 1049,
	505, 1050, 0, 506, 507, 508, 0, 510, 511, 0,
	0, 512, 513, 514, 516, 517, 515, 518, 1011, 519,
	0, 0, 520, 521, 522, 577, 578, 579, 0, 524,
	523, 580, 0, 935, 0, 1295, 525, 526, 581, 527,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 1672, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 1261, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 1053, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 1054, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 1056, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 1055, 349, 553, 554, 0, 555, 0,
	351, 352, 1057, 556, 1058, 353, 354, 355, 1059, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 1060, 367, 368, 1061,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 1062, 388, 389, 390, 393, 394,
	392, 1063, 391, 0, 0, 1064, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 1065, 407, 1066,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 1067, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 208, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 1068,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 210, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 1446, 578, 579, 0, 524, 523,
	580, 0, 0, 0, 202, 525, 526, 581, 527, 528,
	529, 0, 203, 0, 0, 0, 1443, 0, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 532, 0, 263, 533, 264, 534, 0,
	535, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	536, 537, 538, 0, 271, 272, 539, 0, 1261, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 1053, 289, 290, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 293, 294, 0, 295, 540, 541, 0,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 305, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 542, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 543, 544, 0, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 545, 0,
	0, 0, 328, 0, 329, 0, 0, 1054, 330, 331,
	546, 547, 332, 333, 0, 334, 548, 0, 549, 335,
	0, 336, 337, 338, 339, 340, 550, 551, 552, 397,
	1056, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 0, 347, 348, 350, 0, 1055, 349, 553, 554,
	0, 555, 0, 351, 352, 1057, 556, 1058, 353, 354,
	355, 1059, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 557, 1060,
	367, 368, 1061, 0, 369, 370, 371, 0, 0, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 1062, 388, 389,
	390, 393, 394, 392, 1063, 391, 0, 0, 1064, 395,
	0, 558, 396, 559, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	1065, 407, 1066, 561, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	564, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 566, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	1067, 447, 448, 449, 450, 567, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 208,
	467, 468, 466, 469, 470, 471, 0, 472, 456, 457,
	473, 474, 1068, 475, 476, 477, 478, 479, 480, 568,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	569, 487, 488, 489, 490, 570, 0, 493, 494, 0,
	492, 210, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 571, 572, 573, 574, 0, 509, 0, 503,
	504, 575, 505, 576, 0, 506, 507, 508, 0, 510,
	511, 0, 0, 512, 513, 514, 516, 517, 515, 518,
	0, 519, 0, 0, 520, 521, 522, 1446, 578, 579,
	0, 524, 523, 580, 0, 0, 0, 202, 525, 526,
	581, 527, 528, 529, 0, 203, 0, 0, 0, 0,
	0, 1295, 1294, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 1261, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 1053, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	1054, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 1056, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 1055,
	349, 553, 554, 0, 555, 0, 351, 352, 1057, 556,
	1058, 353, 354, 355, 1059, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 1060, 367, 368, 1061, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	1062, 388, 389, 390, 393, 394, 392, 1063, 391, 0,
	0, 1064, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 1065, 407, 1066, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 1067, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 1068, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 1295, 1294, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	1468, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 1261, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	1053, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 1054, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 1056,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 1055, 349, 553, 554, 0,
	555, 0, 351, 352, 1057, 556, 1058, 353, 354, 355,
	1059, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 1060, 367,
	368, 1061, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 1062, 388, 389, 390,
	393, 394, 392, 1063, 391, 0, 0, 1064, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 1065,
	407, 1066, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 1067,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 1068, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 1295, 1294, 0, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 3158, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 1261, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 1053, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 1054, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 1056, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 1055, 349, 553, 554, 0, 555, 0, 351, 352,
	1057, 556, 1058, 353, 354, 355, 1059, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 1963, 365,
	364, 0, 366, 557, 1060, 367, 368, 1061, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 1062, 388, 389, 390, 393, 394, 392, 1063,
	391, 0, 0, 1064, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 1065, 407, 1066, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 1067, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 1068, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 1295,
	1294, 0, 0, 0, 0, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 1468, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 1261,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 1053, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 1054, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 1056, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 1055, 349, 553,
	554, 0, 555, 0, 351, 352, 1057, 556, 1058, 353,
	354, 355, 1059, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	1060, 367, 368, 1061, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 1062, 388,
	389, 390, 393, 394, 392, 1063, 391, 0, 0, 1064,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 1065, 407, 1066, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 1067, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 1068, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 1110, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1013, 0, 1452, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 1012, 0, 270, 536, 537, 538,
	0, 271, 272, 1019, 0, 1000, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 1053, 289,
	290, 1003, 1001, 1002, 1009, 1005, 1004, 1008, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 1044, 1045, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 1054, 330, 331, 546, 547, 332,
	333, 0, 334, 1051, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 1014, 1015, 1018, 397, 1056, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 1055, 349, 553, 554, 0, 555, 0,
	351, 352, 1057, 1016, 1058, 353, 354, 355, 1059, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 1052, 1060, 367, 368, 1061,
	0, 369, 370, 371, 1007, 1006, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 1062, 388, 389, 390, 393, 394,
	392, 1063, 391, 0, 246, 1064, 395, 0, 1017, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 1065, 407, 1066,
	1046, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 1047, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 1067, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 1010, 472, 456, 457, 473, 474, 1068,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 1048, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 1049, 505,
	1050, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 1011, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 935, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 208, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 210, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 1446, 578, 579, 0, 524, 523, 580, 241,
	0, 0, 202, 525, 526, 581, 527, 528, 529, 0,
	203, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 174, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 0, 1386, 0, 241, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 1787, 530,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 531, 532, 0, 263, 533, 264, 534, 0,
	535, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	536, 537, 538, 0, 271, 272, 539, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 0,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 293, 294, 0, 295, 540, 541, 0,
	299, 296, 297, 0, 300, 298, 0, 301, 302, 303,
	0, 0, 304, 305, 306, 0, 307, 308, 0, 309,
	310, 311, 0, 312, 313, 542, 314, 315, 316, 318,
	320, 317, 321, 322, 323, 324, 543, 544, 0, 244,
	0, 0, 0, 0, 0, 325, 326, 327, 545, 0,
	0, 0, 328, 0, 329, 0, 0, 0, 330, 331,
	546, 547, 332, 333, 0, 334, 548, 0, 549, 335,
	0, 336, 337, 338, 339, 340, 550, 551, 552, 397,
	0, 341, 342, 0, 343, 344, 345, 346, 0, 0,
	0, 245, 347, 348, 350, 0, 0, 349, 553, 554,
	0, 555, 0, 351, 352, 0, 556, 0, 353, 354,
	355, 0, 356, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 0, 363, 365, 364, 0, 366, 557, 0,
	367, 368, 0, 0, 369, 370, 371, 0, 0, 372,
	373, 374, 375, 0, 376, 377, 379, 381, 378, 380,
	385, 382, 383, 384, 387, 0, 386, 0, 388, 389,
	390, 393, 394, 392, 0, 391, 0, 246, 0, 395,
	0, 558, 396, 559, 398, 399, 0, 0, 400, 0,
	0, 0, 402, 403, 404, 0, 0, 405, 406, 560,
	0, 407, 0, 561, 408, 409, 401, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 418, 419, 562, 563,
	564, 420, 565, 421, 422, 0, 423, 0, 424, 425,
	426, 427, 428, 429, 430, 566, 432, 431, 433, 0,
	434, 0, 0, 0, 0, 0, 435, 0, 437, 438,
	439, 436, 440, 441, 442, 443, 0, 444, 445, 446,
	0, 447, 448, 449, 450, 567, 451, 0, 452, 453,
	459, 460, 454, 455, 461, 462, 463, 464, 465, 0,
	467, 468, 466, 469, 470, 471, 0, 472, 456, 457,
	473, 474, 0, 475, 476, 477, 478, 479, 480, 568,
	0, 481, 0, 482, 483, 484, 485, 458, 486, 491,
	569, 487, 488, 489, 490, 570, 0, 493, 494, 0,
	492, 0, 495, 496, 497, 498, 499, 500, 319, 501,
	0, 502, 571, 572, 573, 574, 0, 509, 0, 503,
	504, 575, 505, 576, 0, 506, 507, 508, 0, 510,
	511, 0, 0, 512, 513, 514, 516, 517, 515, 518,
	0, 519, 0, 0, 520, 521, 522, 577, 578, 579,
	0, 524, 523, 580, 0, 241, 2674, 0, 525, 526,
	581, 527, 528, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 1390, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 241, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 4210, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 241, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 3102, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 246, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	1390, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 241, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 2645, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	0, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 241, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	3259, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 0, 784, 0, 667, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 2064, 530, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	531, 532, 0, 263, 533, 264, 534, 0, 535, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 536, 537,
	538, 0, 271, 272, 539, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 0, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 674, 294, 0, 295, 540, 541, 0, 299, 296,
	297, 0, 300, 298, 0, 301, 302, 303, 0, 0,
	304, 305, 306, 0, 307, 308, 0, 309, 310, 311,
	0, 312, 313, 542, 314, 315, 316, 318, 320, 317,
	321, 322, 323, 324, 543, 544, 0, 244, 0, 0,
	0, 0, 0, 325, 326, 327, 545, 0, 0, 0,
	328, 0, 329, 0, 782, 0, 330, 331, 546, 547,
	332, 333, 0, 334, 548, 0, 549, 335, 0, 336,
	337, 338, 339, 340, 550, 551, 552, 397, 0, 341,
	342, 0, 343, 344, 345, 346, 0, 0, 0, 245,
	347, 348, 350, 0, 0, 349, 553, 554, 0, 555,
	0, 351, 352, 0, 556, 0, 353, 354, 355, 0,
	356, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	0, 363, 365, 364, 0, 366, 557, 0, 367, 368,
	0, 0, 369, 370, 371, 0, 0, 372, 373, 374,
	375, 0, 376, 377, 379, 381, 378, 380, 385, 382,
	383, 384, 387, 0, 386, 0, 388, 389, 390, 393,
	394, 392, 0, 391, 0, 246, 0, 395, 0, 558,
	396, 559, 398, 399, 0, 0, 400, 0, 0, 0,
	402, 403, 404, 0, 0, 405, 406, 560, 0, 407,
	0, 561, 408, 409, 401, 410, 411, 412, 413, 414,
	415, 416, 417, 0, 418, 419, 562, 563, 564, 420,
	565, 421, 422, 0, 423, 0, 424, 425, 426, 427,
	428, 429, 430, 566, 432, 431, 433, 0, 434, 0,
	0, 0, 0, 0, 435, 0, 437, 438, 439, 436,
	440, 441, 442, 443, 0, 444, 445, 446, 0, 447,
	448, 449, 450, 567, 451, 0, 452, 453, 459, 460,
	454, 455, 461, 462, 463, 464, 465, 0, 467, 468,
	466, 469, 470, 471, 0, 472, 456, 457, 473, 474,
	0, 475, 476, 477, 478, 479, 480, 568, 0, 481,
	0, 482, 483, 484, 485, 458, 486, 491, 569, 487,
	488, 489, 490, 570, 0, 493, 494, 0, 492, 672,
	495, 496, 497, 498, 673, 500, 319, 501, 0, 502,
	571, 572, 573, 574, 0, 509, 0, 503, 504, 575,
	505, 576, 0, 506, 507, 508, 0, 510, 511, 0,
	0, 512, 513, 514, 516, 517, 515, 518, 0, 519,
	0, 0, 520, 521, 522, 577, 578, 579, 0, 524,
	523, 580, 0, 665, 0, 667, 525, 526, 581, 527,
	528, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 677, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	674, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 672, 495,
	496, 497, 498, 673, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 667, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 677, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 674, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	245, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 246, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	672, 495, 496, 497, 498, 673, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 667,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 677,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 674, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 2103, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 672, 495, 496, 497, 498, 673, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 667, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 677, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 674, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 672, 495, 496, 497, 498, 673,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	1848, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 667, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 677, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 674, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 246, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 672, 495, 496, 497,
	498, 673, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 1802, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 1823, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 677, 0, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 0,
	1829, 0, 263, 1819, 264, 1835, 0, 1842, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 1845, 1846, 0,
	0, 271, 272, 0, 0, 1261, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 1053, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 1036, 295, 1833, 1832, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	1021, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 0, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 1831, 0, 0, 0, 328,
	0, 329, 0, 0, 1054, 330, 331, 1840, 1841, 332,
	333, 0, 334, 0, 0, 0, 335, 0, 336, 337,
	338, 339, 340, 0, 0, 0, 397, 1056, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 1055, 349, 1826, 1827, 0, 1822, 0,
	351, 352, 1057, 0, 1058, 353, 354, 355, 1059, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 0, 1060, 367, 368, 1061,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 1062, 388, 389, 390, 393, 394,
	392, 1063, 391, 0, 0, 1064, 395, 0, 0, 396,
	1834, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 0, 1065, 407, 1066,
	0, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 1816, 1817, 0, 420, 0,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 1830, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 1067, 447, 448,
	449, 450, 0, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 1068,
	475, 476, 477, 478, 479, 480, 1828, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 1844, 487, 488,
	489, 490, 0, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 1836,
	1837, 1838, 1839, 0, 509, 0, 503, 504, 0, 505,
	0, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 0, 1820, 1843, 0, 524, 523,
	0, 0, 0, 0, 0, 525, 526, 0, 527, 528,
	529, 1295, 1294, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 1810, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 1261, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 1053, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	1054, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 1056, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 1055,
	349, 553, 554, 0, 555, 0, 351, 352, 1057, 556,
	1058, 353, 354, 355, 1059, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 1060, 367, 368, 1061, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	1062, 388, 389, 390, 393, 394, 392, 1063, 391, 0,
	0, 1064, 395, 3424, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 1065, 407, 1066, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 1067, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 1068, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 1295, 1294, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 1261, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	1053, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 1054, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 1056,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 1055, 349, 553, 554, 0,
	555, 0, 351, 352, 1057, 556, 1058, 353, 354, 355,
	1059, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 1060, 367,
	368, 1061, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 1062, 388, 389, 390,
	393, 394, 392, 1063, 391, 0, 0, 1064, 395, 3075,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 1065,
	407, 1066, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 1067,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 1068, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 1295, 1294, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 1261, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 1053, 289, 290, 0,
	0, 0, 0, 0, 0, 3018, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 1054, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 1056, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 1055, 349, 553, 554, 0, 555, 0, 351, 352,
	1057, 556, 1058, 353, 354, 355, 1059, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 1060, 367, 368, 1061, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 1062, 388, 389, 390, 393, 394, 392, 1063,
	391, 0, 0, 1064, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 1065, 407, 1066, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 1067, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 3019, 472, 456, 457, 473, 474, 1068, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 1496, 0, 1295, 1294, 0, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 1261, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 1053, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	1495, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 1054, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 1056, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 1055, 349, 553, 554, 0, 555, 0, 351, 352,
	1057, 556, 1058, 353, 354, 355, 1059, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 1060, 367, 368, 1061, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 1062, 388, 389, 390, 393, 394, 392, 1063,
	391, 0, 0, 1064, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 1065, 407, 1066, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 1494, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 1067, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	1493, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 1068, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 1436,
	0, 1295, 1294, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 1261, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 1053, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	1054, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 1435,
	551, 552, 397, 1056, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 1055,
	349, 553, 554, 0, 555, 0, 351, 352, 1057, 556,
	1058, 353, 354, 355, 1059, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 1060, 367, 368, 1061, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	1062, 388, 389, 390, 393, 394, 392, 1063, 391, 0,
	0, 1064, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 1065, 407, 1066, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 1067, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 1068, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 1365, 0, 1295,
	1294, 0, 0, 0, 0, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 1261,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 1053, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 1054, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 1364, 551, 552,
	397, 1056, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 1055, 349, 553,
	554, 0, 555, 0, 351, 352, 1057, 556, 1058, 353,
	354, 355, 1059, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	1060, 367, 368, 1061, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 1062, 388,
	389, 390, 393, 394, 392, 1063, 391, 0, 0, 1064,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 1065, 407, 1066, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 1067, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 1068, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 1330, 0, 1295, 1294, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 1261, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	1053, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 1054, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 1056,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 1055, 349, 553, 554, 0,
	555, 0, 351, 352, 1057, 556, 1058, 353, 354, 355,
	1059, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 1060, 367,
	368, 1061, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 1062, 388, 389, 390,
	393, 394, 392, 1063, 391, 0, 0, 1064, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 1065,
	407, 1066, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 1067,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 1068, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 1290, 0, 1295, 1294, 0, 0, 0,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 1261, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 1053, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 1054, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 1289, 551, 552, 397, 1056, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 1055, 349, 553, 554, 0, 555, 0,
	351, 352, 1057, 556, 1058, 353, 354, 355, 1059, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 1060, 367, 368, 1061,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 1062, 388, 389, 390, 393, 394,
	392, 1063, 391, 0, 0, 1064, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 1065, 407, 1066,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 1067, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 1068,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 1295, 1294, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 1261, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 1053, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	1054, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 1056, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 1055,
	349, 553, 554, 0, 555, 0, 351, 352, 1057, 556,
	1058, 353, 354, 355, 1059, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 1060, 367, 368, 1061, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	1062, 388, 389, 390, 393, 394, 392, 1063, 391, 0,
	0, 1064, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 1065, 407, 1066, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 1067, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 1068, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 1295, 1294, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 1261, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	1053, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 1857, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 1054, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 1056,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 1055, 349, 553, 554, 0,
	555, 0, 351, 352, 1057, 556, 1058, 353, 354, 355,
	1059, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 1060, 367,
	368, 1061, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 1062, 388, 389, 390,
	393, 394, 392, 1063, 391, 0, 0, 1064, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 1065,
	407, 1066, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 1067,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 1068, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 1295, 1294, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 1261, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 1053, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 1054, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 1056, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 1055, 349, 553, 554, 0, 555, 0, 351, 352,
	1057, 556, 1058, 353, 354, 355, 1059, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 1060, 367, 368, 1061, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 1062, 388, 389, 390, 393, 394, 392, 1063,
	391, 0, 0, 1064, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 1065, 407, 1066, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 1067, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 1068, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 1295, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 1261, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 1053, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 1054, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 1056, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 1055, 349, 553, 554, 0, 555, 0,
	351, 352, 1057, 556, 1058, 353, 354, 355, 1059, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 1060, 367, 368, 1061,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 1062, 388, 389, 390, 393, 394,
	392, 1063, 391, 0, 0, 1064, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 1065, 407, 1066,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 1067, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 1068,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 2499, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 2496, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 2503, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 2687, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 2502, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	2684, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 2686, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 2683, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 2501, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 2685, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 2499, 271, 272, 539, 0, 0,
	2493, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 2496, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 2503, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 2502, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 2492, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 2501, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 2500, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 1561, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	245, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 246, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 1564,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	1562, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	1563, 523, 580, 1265, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 1267, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 1102, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 1262, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 1264, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 246, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 1102, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 1168,
	0, 241, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 1170,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 1102, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 613, 0, 241,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 612,
	251, 252, 602, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	605, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 606, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	607, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 601, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	602, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 605, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 606, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 607, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 1102, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 241, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 3040, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 2616, 0, 241,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 2615, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 2077, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	245, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 246, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 1994, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 1999, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 1998, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	245, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 246, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 1987, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 1989, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 1961, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	245, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 246, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	1102, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 1428, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 1427, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 1419, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 1418, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 246, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 1416,
	0, 241, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 1415,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 1411, 0, 241,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 1410, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 1368, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	245, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 246, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 1283, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 1276, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 1278, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 246, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 583,
	0, 241, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 232, 0, 241,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 241, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 241, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 605, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 606,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 607, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	2110, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 2108, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 244, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	245, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 246, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 2106, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	244, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 245, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 246, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 241, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 244, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 2042,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 245, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	246, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 241, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 244, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 2036, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 245, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 246, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 244, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 2005, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 245, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 246, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 771, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 770, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 769, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 2687, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 3678, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 592, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 591, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 590, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 241,
	2674, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 241, 3688, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 3399, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 2415, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 241, 2674, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 2671, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	2087, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 2075, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 635, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 1142, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 1140, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 636, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 632,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 1143,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 631, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 635,
	0, 241, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 625, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 636,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	0, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 632, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 1451, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 631, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 1432, 0, 241,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 1431, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 1425, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 1424, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 1374, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 1373, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 1359, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 1358, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 1354,
	0, 241, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	0, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 1286, 0, 241,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 1270, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 635, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 1142, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 1140,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 636, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 632, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 1143, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 631,
	572, 573, 574, 0, 509, 0, 503, 1141, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	1123, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 641, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 0, 524, 523, 580, 635, 0, 241, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 625, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 623, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 624, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 636, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 626, 451, 0, 452, 453, 459,
	460, 454, 455, 632, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 627, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 631, 572, 573, 574, 0, 509, 0, 503, 629,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 0,
	524, 523, 580, 617, 0, 241, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 618, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 615, 0, 241, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 0, 524, 523, 580, 609,
	0, 241, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	0, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 0, 524, 523, 580, 587, 0, 241,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 550, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 241, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 550,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	0, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 241, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 3119, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 3069, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 3009, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 472, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 3007, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 241, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 2993,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	0, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 241, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 2625, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 432, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 335, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 428,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 451, 0, 452, 453, 618, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 241, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 530, 0,
	2022, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 531, 532, 0, 263, 533, 264, 534, 0, 535,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 536,
	537, 538, 0, 271, 272, 539, 0, 0, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 0, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 293, 294, 0, 295, 540, 541, 0, 299,
	296, 297, 0, 300, 298, 0, 301, 302, 303, 0,
	0, 304, 305, 306, 0, 307, 308, 0, 309, 310,
	311, 0, 312, 313, 542, 314, 315, 316, 318, 320,
	317, 321, 322, 323, 324, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 545, 0, 0,
	0, 328, 0, 329, 0, 0, 0, 330, 331, 546,
	547, 332, 333, 0, 334, 548, 0, 549, 335, 0,
	336, 337, 338, 339, 340, 550, 551, 552, 397, 0,
	341, 342, 0, 343, 344, 345, 346, 0, 0, 0,
	0, 347, 348, 350, 0, 0, 349, 553, 554, 0,
	555, 0, 351, 352, 0, 556, 0, 353, 354, 355,
	0, 356, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 0, 363, 365, 364, 0, 366, 557, 0, 367,
	368, 0, 0, 369, 370, 371, 0, 0, 372, 373,
	374, 375, 0, 376, 377, 379, 381, 378, 380, 385,
	382, 383, 384, 387, 0, 386, 0, 388, 389, 390,
	393, 394, 392, 0, 391, 0, 0, 0, 395, 0,
	558, 396, 559, 398, 399, 0, 0, 400, 0, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 560, 0,
	407, 0, 561, 408, 409, 401, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 418, 419, 562, 563, 564,
	420, 565, 421, 422, 0, 423, 0, 424, 425, 426,
	427, 428, 429, 430, 566, 432, 431, 433, 0, 434,
	0, 0, 0, 0, 0, 435, 0, 437, 438, 439,
	436, 440, 441, 442, 443, 0, 444, 445, 446, 0,
	447, 448, 449, 450, 567, 451, 0, 452, 453, 459,
	460, 454, 455, 461, 462, 463, 464, 465, 0, 467,
	468, 466, 469, 470, 471, 0, 0, 456, 457, 473,
	474, 0, 475, 476, 477, 478, 479, 480, 568, 0,
	481, 0, 482, 483, 484, 485, 458, 486, 491, 569,
	487, 488, 489, 490, 570, 0, 493, 494, 0, 492,
	0, 495, 496, 497, 498, 499, 500, 319, 501, 0,
	502, 571, 572, 573, 574, 0, 509, 0, 503, 504,
	575, 505, 576, 0, 506, 507, 508, 0, 510, 511,
	0, 0, 512, 513, 514, 516, 517, 515, 518, 0,
	519, 0, 0, 520, 521, 522, 577, 578, 579, 241,
	524, 523, 580, 0, 0, 0, 0, 525, 526, 581,
	527, 528, 529, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 531, 532, 0, 263, 533, 264, 534,
	0, 535, 265, 266, 267, 268, 269, 0, 0, 0,
	270, 536, 537, 538, 0, 271, 272, 539, 0, 0,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	0, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 293, 294, 0, 295, 540, 541,
	0, 299, 296, 297, 0, 300, 298, 0, 301, 302,
	303, 0, 0, 304, 305, 306, 0, 307, 308, 0,
	309, 310, 311, 0, 312, 313, 542, 314, 315, 316,
	318, 320, 317, 321, 322, 323, 324, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 545,
	0, 0, 0, 328, 0, 329, 0, 0, 0, 330,
	331, 546, 547, 332, 333, 0, 334, 548, 0, 549,
	335, 0, 336, 337, 338, 339, 340, 1396, 551, 552,
	397, 0, 341, 342, 0, 343, 344, 345, 346, 0,
	0, 0, 0, 347, 348, 350, 0, 0, 349, 553,
	554, 0, 555, 0, 351, 352, 0, 556, 0, 353,
	354, 355, 0, 356, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 0, 363, 365, 364, 0, 366, 557,
	0, 367, 368, 0, 0, 369, 370, 371, 0, 0,
	372, 373, 374, 375, 0, 376, 377, 379, 381, 378,
	380, 385, 382, 383, 384, 387, 0, 386, 0, 388,
	389, 390, 393, 394, 392, 0, 391, 0, 0, 0,
	395, 0, 558, 396, 559, 398, 399, 0, 0, 400,
	0, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	560, 0, 407, 0, 561, 408, 409, 401, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 418, 419, 562,
	563, 564, 420, 565, 421, 422, 0, 423, 0, 424,
	425, 426, 427, 428, 429, 430, 566, 432, 431, 433,
	0, 434, 0, 0, 0, 0, 0, 435, 0, 437,
	438, 439, 436, 440, 441, 442, 443, 0, 444, 445,
	446, 0, 447, 448, 449, 450, 567, 451, 0, 452,
	453, 459, 460, 454, 455, 461, 462, 463, 464, 465,
	0, 467, 468, 466, 469, 470, 471, 0, 472, 456,
	457, 473, 474, 0, 475, 476, 477, 478, 479, 480,
	568, 0, 481, 0, 482, 483, 484, 485, 458, 486,
	491, 569, 487, 488, 489, 490, 570, 0, 493, 494,
	0, 492, 0, 495, 496, 497, 498, 499, 500, 319,
	501, 0, 502, 571, 572, 573, 574, 0, 509, 0,
	503, 504, 575, 505, 576, 0, 506, 507, 508, 0,
	510, 511, 0, 0, 512, 513, 514, 516, 517, 515,
	518, 0, 519, 0, 0, 520, 521, 522, 577, 578,
	579, 241, 524, 523, 580, 0, 0, 0, 0, 525,
	526, 581, 527, 528, 529, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 531, 532, 0, 263, 533,
	264, 534, 0, 535, 265, 266, 267, 268, 269, 0,
	0, 0, 270, 536, 537, 538, 0, 271, 272, 539,
	0, 0, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 0, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 293, 294, 0, 295,
	540, 541, 0, 299, 296, 297, 0, 300, 298, 0,
	301, 302, 303, 0, 0, 304, 305, 306, 0, 307,
	308, 0, 309, 310, 311, 0, 312, 313, 542, 314,
	315, 316, 318, 320, 317, 321, 322, 323, 324, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 545, 0, 0, 0, 328, 0, 329, 0, 0,
	0, 330, 331, 546, 547, 332, 333, 0, 334, 548,
	0, 549, 335, 0, 336, 337, 338, 339, 340, 1337,
	551, 552, 397, 0, 341, 342, 0, 343, 344, 345,
	346, 0, 0, 0, 0, 347, 348, 350, 0, 0,
	349, 553, 554, 0, 555, 0, 351, 352, 0, 556,
	0, 353, 354, 355, 0, 356, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 0, 363, 365, 364, 0,
	366, 557, 0, 367, 368, 0, 0, 369, 370, 371,
	0, 0, 372, 373, 374, 375, 0, 376, 377, 379,
	381, 378, 380, 385, 382, 383, 384, 387, 0, 386,
	0, 388, 389, 390, 393, 394, 392, 0, 391, 0,
	0, 0, 395, 0, 558, 396, 559, 398, 399, 0,
	0, 400, 0, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 560, 0, 407, 0, 561, 408, 409, 401,
	410, 411, 412, 413, 414, 415, 416, 417, 0, 418,
	419, 562, 563, 564, 420, 565, 421, 422, 0, 423,
	0, 424, 425, 426, 427, 428, 429, 430, 566, 432,
	431, 433, 0, 434, 0, 0, 0, 0, 0, 435,
	0, 437, 438, 439, 436, 440, 441, 442, 443, 0,
	444, 445, 446, 0, 447, 448, 449, 450, 567, 451,
	0, 452, 453, 459, 460, 454, 455, 461, 462, 463,
	464, 465, 0, 467, 468, 466, 469, 470, 471, 0,
	472, 456, 457, 473, 474, 0, 475, 476, 477, 478,
	479, 480, 568, 0, 481, 0, 482, 483, 484, 485,
	458, 486, 491, 569, 487, 488, 489, 490, 570, 0,
	493, 494, 0, 492, 0, 495, 496, 497, 498, 499,
	500, 319, 501, 0, 502, 571, 572, 573, 574, 0,
	509, 0, 503, 504, 575, 505, 576, 0, 506, 507,
	508, 0, 510, 511, 0, 0, 512, 513, 514, 516,
	517, 515, 518, 0, 519, 0, 0, 520, 521, 522,
	577, 578, 579, 241, 524, 523, 580, 0, 0, 0,
	0, 525, 526, 581, 527, 528, 529, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 531, 532, 0,
	263, 533, 264, 534, 0, 535, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 536, 537, 538, 0, 271,
	272, 539, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 0, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 293, 294,
	0, 295, 540, 541, 0, 299, 296, 297, 0, 300,
	298, 0, 301, 302, 303, 0, 0, 304, 305, 306,
	0, 307, 308, 0, 309, 310, 311, 0, 312, 313,
	542, 314, 315, 316, 318, 320, 317, 321, 322, 323,
	324, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 545, 0, 0, 0, 328, 0, 329,
	0, 0, 0, 330, 331, 546, 547, 332, 333, 0,
	334, 548, 0, 549, 335, 0, 336, 337, 338, 339,
	340, 550, 551, 552, 397, 0, 341, 342, 0, 343,
	344, 345, 346, 0, 0, 0, 0, 347, 348, 350,
	0, 0, 349, 553, 554, 0, 555, 0, 351, 352,
	0, 556, 0, 353, 354, 355, 0, 356, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 0, 363, 365,
	364, 0, 366, 557, 0, 367, 368, 0, 0, 369,
	370, 371, 0, 0, 372, 373, 374, 375, 0, 376,
	377, 379, 381, 378, 380, 385, 382, 383, 384, 387,
	0, 386, 0, 388, 389, 390, 393, 394, 392, 0,
	391, 0, 0, 0, 395, 0, 558, 396, 559, 398,
	399, 0, 0, 400, 0, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 560, 0, 407, 0, 561, 408,
	409, 401, 410, 411, 412, 413, 414, 415, 416, 417,
	0, 418, 419, 562, 563, 564, 420, 565, 421, 422,
	0, 423, 0, 424, 425, 426, 427, 428, 429, 430,
	566, 1075, 431, 433, 0, 434, 0, 0, 0, 0,
	0, 435, 0, 437, 438, 439, 436, 440, 441, 442,
	443, 0, 444, 445, 446, 0, 447, 448, 449, 450,
	567, 451, 0, 452, 453, 459, 460, 454, 455, 461,
	462, 463, 464, 465, 0, 467, 468, 466, 469, 470,
	471, 0, 472, 456, 457, 473, 474, 0, 475, 476,
	477, 478, 479, 480, 568, 0, 481, 0, 482, 483,
	484, 485, 458, 486, 491, 569, 487, 488, 489, 490,
	570, 0, 493, 494, 0, 492, 0, 495, 496, 497,
	498, 499, 500, 319, 501, 0, 502, 571, 572, 573,
	574, 0, 509, 0, 503, 504, 575, 505, 576, 0,
	506, 507, 508, 0, 510, 511, 0, 0, 512, 513,
	514, 516, 517, 515, 518, 0, 519, 0, 0, 520,
	521, 522, 577, 578, 579, 241, 524, 523, 580, 0,
	0, 0, 0, 525, 526, 581, 527, 528, 529, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 531,
	532, 0, 263, 533, 264, 534, 0, 535, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 536, 537, 538,
	0, 271, 272, 539, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 0, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	293, 294, 0, 295, 540, 541, 0, 299, 296, 297,
	0, 300, 298, 0, 301, 302, 303, 0, 0, 304,
	305, 306, 0, 307, 308, 0, 309, 310, 311, 0,
	312, 313, 542, 314, 315, 316, 318, 320, 317, 321,
	322, 323, 324, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 545, 0, 0, 0, 328,
	0, 329, 0, 0, 0, 330, 331, 546, 547, 332,
	333, 0, 334, 548, 0, 549, 0, 0, 336, 337,
	338, 339, 340, 550, 551, 552, 397, 0, 341, 342,
	0, 343, 344, 345, 346, 0, 0, 0, 0, 347,
	348, 350, 0, 0, 349, 553, 554, 0, 555, 0,
	351, 352, 0, 556, 0, 353, 354, 355, 0, 356,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 0,
	363, 365, 364, 0, 366, 557, 0, 367, 368, 0,
	0, 369, 370, 371, 0, 0, 372, 373, 374, 375,
	0, 376, 377, 379, 381, 378, 380, 385, 382, 383,
	384, 387, 0, 386, 0, 388, 389, 390, 393, 394,
	392, 0, 391, 0, 0, 0, 395, 0, 558, 396,
	559, 398, 399, 0, 0, 400, 0, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 560, 0, 407, 0,
	561, 408, 409, 401, 410, 411, 0, 413, 414, 415,
	416, 417, 0, 418, 419, 562, 563, 564, 420, 565,
	421, 422, 0, 423, 0, 424, 425, 426, 427, 0,
	429, 430, 566, 432, 431, 433, 0, 434, 0, 0,
	0, 0, 0, 435, 0, 437, 438, 439, 436, 440,
	441, 442, 443, 0, 444, 445, 446, 0, 447, 448,
	449, 450, 567, 0, 0, 452, 453, 459, 460, 454,
	455, 461, 462, 463, 464, 465, 0, 467, 468, 466,
	469, 470, 471, 0, 472, 456, 457, 473, 474, 0,
	475, 476, 477, 478, 479, 480, 568, 0, 481, 0,
	482, 483, 484, 485, 458, 486, 491, 569, 487, 488,
	489, 490, 570, 0, 493, 494, 0, 492, 0, 495,
	496, 497, 498, 499, 500, 319, 501, 0, 502, 571,
	572, 573, 574, 0, 509, 0, 503, 504, 575, 505,
	576, 0, 506, 507, 508, 0, 510, 511, 0, 0,
	512, 513, 514, 516, 517, 515, 518, 0, 519, 0,
	0, 520, 521, 522, 577, 578, 579, 0, 524, 523,
	580, 0, 0, 0, 0, 525, 526, 581, 527, 528,
	529, 1606, 1607, 0, 1639, 1640, 1641, 1649, 1650, 1651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1642, 1637, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 1628, 1609, 0, 0, 0, 0, 0,
	0, 1625, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 1632, 1633,
	1634, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 1656,
	0, 1631, 1632, 1633, 1634, 1636, 1638, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1652, 0, 1653, 0, 0, 0, 0, 0, 0,
	1623, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 0, 0, 1644, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 1647, 0,
	1642, 1637, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 1620, 1621, 1627, 1648, 1626, 1622,
	0, 1619, 1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616,
	0, 0, 0, 0, 0, 0, 0, 0, 2835, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 1645, 1614, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 0, 0, 0, 0, 0, 0,
	0, 0, 2834, 0, 1646, 0, 0, 1656, 0, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 0, 0, 0, 0, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 0, 0, 0, 0, 2833, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 0, 0, 1635, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1647, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	2269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 1646, 0, 0, 1656, 4001, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 0, 0, 0, 0, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 3997, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 0, 0, 1635, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1647, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 0, 3907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 1646, 0, 0, 1656, 3906, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 0, 0, 0, 0, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 3755, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 0, 0, 1635, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1647, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 0, 3618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 1646, 0, 0, 1656, 3562, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 0, 0, 0, 0, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 3561, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 0, 0, 1635, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1647, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 0, 3560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 1646, 0, 0, 1656, 3264, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 0, 0, 0, 0, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 2831, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 0, 0, 1635, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1647, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 0, 2830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 1646, 0, 0, 1656, 2829, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 0, 0, 0, 0, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 2828, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 4123, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1607, 4122, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 0, 2766, 1635, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1647, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 2795, 0, 0, 0, 0, 0,
	2767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 1646, 0, 0, 1656, 0, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 2389, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 2388, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 2891, 0, 0, 2890, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 0, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 0, 0, 1635, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1647, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 1646, 0, 0, 1656, 0, 0,
	0, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 1606, 1607, 0, 1639, 1640,
	1641, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1637, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 1628, 0, 1614,
	0, 0, 0, 0, 0, 1625, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 0, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 1631, 1632, 1633, 1634, 0, 0, 0, 0, 0,
	1644, 1614, 0, 0, 0, 0, 2897, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1656, 0, 0, 1654, 0, 0, 1636,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1652, 0, 1653, 0, 0,
	0, 0, 0, 0, 1623, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 1635, 3245, 2892,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 1645, 1625, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 1645, 0, 0, 0, 1620, 1621,
	1627, 1648, 1626, 1622, 0, 1619, 1617, 1618, 1610, 1611,
	1612, 1613, 1615, 1616, 0, 0, 0, 0, 1646, 0,
	0, 1656, 0, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1606, 1607, 0,
	1639, 1640, 1641, 1649, 1650, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 1637,
	0, 0, 0, 0, 0, 1635, 1609, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	1647, 0, 0, 0, 0, 0, 0, 1625, 0, 1606,
	1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1637, 0, 0, 0, 2832, 0, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 1631, 1632, 1633, 1634, 0, 0, 0,
	0, 1628, 0, 1614, 0, 0, 0, 0, 0, 1625,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 1646, 0, 0, 1656, 0, 0, 0, 0,
	0, 1636, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1652, 0, 1653,
	0, 0, 0, 0, 0, 0, 1623, 1624, 0, 0,
	0, 0, 0, 0, 0, 1631, 1632, 1633, 1634, 0,
	0, 0, 0, 0, 1644, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 1656, 0, 0,
	1654, 0, 0, 1636, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 1652,
	0, 1653, 0, 0, 0, 0, 0, 0, 1623, 1624,
	0, 0, 0, 0, 0, 0, 0, 2859, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1607, 0, 1639, 1640, 1641, 1649,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1637, 0, 0, 0, 0,
	0, 1635, 1609, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 1647, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 1645, 0, 0, 0,
	1620, 1621, 1627, 1648, 1626, 1622, 0, 1619, 1617, 1618,
	1610, 1611, 1612, 1613, 1615, 1616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	1632, 1633, 1634, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0, 1619,
	1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616, 1646, 0,
	0, 1656, 0, 0, 0, 0, 0, 1636, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1653, 0, 0, 0, 0,
	0, 0, 1623, 1624, 0, 0, 0, 0, 0, 0,
	1606, 1607, 0, 1639, 1640, 1641, 1649, 1650, 1651, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 1637, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 1632, 1633, 1634,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 1656, 0,
	0, 0, 0, 0, 1636, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 1653, 0, 0, 0, 0, 0, 0, 1623,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 1645, 0, 0, 0, 1620, 1621, 1627, 1648,
	1626, 1622, 0, 1619, 1617, 1618, 1610, 1611, 1612, 1613,
	1615, 1616, 0, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 1620, 1621, 1627, 1648, 1626, 1622, 0,
	1619, 1617, 1618, 1610, 1611, 1612, 1613, 1615, 1616,
}
var sqlPact = [...]int{

	10049, -1000, -1000, -1000, -1000, 241, -1000, -1000, 231, 229,
	228, 219, 217, 212, 199, 198, 195, -1000, -1000, -1000,
	-1000, -1000, -1000, 189, -1000, -1000, 186, -1000, 185, 184,
	182, -1000, -1000, 181, -1000, 180, -1000, -1000, -1000, -1000,
	179, 178, 176, 75495, 75017, 75967, 2150, 92135, 80699, 1781,
	67393, 91657, 66915, 91179, 90701, 2538, 173, -1000, 90223, 171,
	167, 166, -1000, 89745, -1000, 1658, -1000, 165, 4209, 54951,
	164, 163, 159, 1980, 154, -1000, 153, 138, -1000, 8937,
	1629, -1000, 133, 131, -1000, 6879, 5246, 79749, 129, 128,
	2252, 127, 125, 54472, 123, 120, 2136, 2683, -1000, -1000,
	1942, -1000, -1000, 116, 115, 114, 113, 112, 110, 109,
	108, 102, 101, -1000, 100, 99, 98, 96, 94, 93,
	92, 90, -1000, 87, 85, 83, 81, 77, 76, 72,
	70, 67, 66, 65, 59, -1000, 8715, 58, 1844, 1572,
	1571, 1568, 1565, 1562, 997, 57, 56, 55, 54, 53,
	52, 51, 50, 48, -1000, 43, 40, 38, 35, 32,
	30, 29, 27, 149, 23, 22, 21, 17, 16, 15,
	11, 2911, -1000, 1464, 1015, 25658, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 97799, 92607, 4, -212, -1, -1000, 3037, 963,
	45358, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 308, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 519, 2011, 783, -1000, -1000, -1000,
	89273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2148,
	18, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 779, -1000,
	2147, 155, 2103, -1000, -1000, -1000, -1000, -1000, 92607, -1000,
	1046, -1000, -1000, 3446, 3444, 1926, 778, 88801, -1000, 1491,
	-1000, 949, 27164, -1000, 1274, -1000, 27164, 306, -1000, -1000,
	-1000, -1000, -1000, -1000, 3443, 3442, 3439, 3436, -1000, -1000,
	66437, 19580, 65959, 65481, 88323, 19092, 74539, 74061, 87845, 61671,
	1044, -1000, -1000, -1000, 1367, -1000, -1000, -1000, -1000, -1000,
	-1000, -23, 59231, 3232, 92607, -1000, 305, -1000, -1000, -1000,
	-1000, -1000, -1000, 38926, 494, 38412, 780, 37898, 655, -1000,
	-1000, -1000, 61183, -1000, 3428, 3425, 1113, 3422, 2978, 97327,
	1696, 3420, 1836, 1220, 3413, 3412, 3409, 3407, 3406, 3404,
	1408, 87367, 2719, 86889, 1626, 60695, 1043, 73583, 75967, 2462,
	86411, 1403, 1387, -1000, -1000, -1000, -1000, 2807, 2682, 2681,
	51144, -1000, -1000, 3402, 3400, 3396, 3395, 3394, 96855, 1690,
	3392, 2347, 3391, 3390, 3387, 3386, 3384, 3383, 3382, -1000,
	73105, 1042, 72627, 72149, 3102, 85933, 71671, 85455, 60207, 37384,
	846, -1000, -1000, -1000, 47284, 5290, 5275, 84977, 49235, 75967,
	75967, -1000, -1000, -1000, -1000, -1000, 36870, 451, 36356, 835,
	-1000, -1000, 47777, 2648, -1000, -1000, -1000, -1000, 35842, 263,
	35328, 746, 92607, -1000, 2690, 1795, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2175, 1548,
	3284, 2514, 59719, 1953, 1411, 3032, 2792, 2791, 1453, 3381,
	2415, 2790, 2785, 2767, 2765, 2762, 1674, 2407, 344, 25144,
	2679, 1630, 34814, 1457, 1488, 2761, 2759, 3293, 1921, 1897,
	1906, 65003, 3380, 3375, 2994, 2755, 2747, 2647, -1000, -1000,
	-1000, -1000, 1414, -1000, -1000, -1000, -1000, -1000, 67865, -1000,
	-1000, 1226, -1000, -1000, 1226, -1000, -1000, -1000, -1000, -1000,
	1306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1464, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2043, -1000, 1889, -1000, -1000, 2375, 3020,
	3020, 3020, 3054, 473, 468, -1000, 149, -1000, -1000, 105512,
	-1000, -1000, 39428, 39428, 39428, 39428, 39428, 39428, 39428, 2030,
	-1000, 774, -1000, -1000, 834, -1000, 769, 635, -1000, -1000,
	-1000, -1000, -1000, -1000, 768, -1000, -1000, -1000, -1000, -1000,
	-1000, 3232, -1000, 22072, -1000, -1000, -1000, 448, 767, 39428,
	-1000, -1000, 3314, 3311, 853, -1000, 301, 961, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2689, 764, 759, -1000, 757, 756, 755, 754, 753, -1000,
	-1000, -1000, 751, 744, 742, 741, 738, 737, 736, 726,
	-1000, 1951, -1000, -1000, -1000, -1000, -1000, -1000, 679, 678,
	678, 678, -1000, 1036, -1000, -1000, -1000, 302, 676, 299,
	675, 672, 670, -1000, 722, 721, 720, 717, 711, 710,
	709, 708, 703, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1035,
	-1000, -1000, -1000, -1000, -24, 92607, -1000, 519, -24, -1000,
	-1000, 701, -1000, 29184, 29184, 29184, -1000, -1000, 2144, 39428,
	-1000, 2156, -1000, -12, -12, 918, 46312, -1000, 44386, 918,
	249, 847, 50665, -1000, 2644, -1000, -1000, 700, 281, -1000,
	-1000, -1000, -1000, 20066, 2642, 92607, 92607, 75967, 75967, 75967,
	2918, 39428, -1000, -1000, 56839, 92607, 76439, 3193, 57311, 56367,
	92607, 2688, -1000, 3003, -1000, -1000, 92607, -1000, 39428, -1000,
	3190, 1473, 62633, 3135, -31, -1000, -1000, -1000, -1000, -1000,
	-1000, 2314, 2274, 1174, 2164, 1290, -1000, 27164, 2970, -1000,
	-1000, -1000, 279, 20066, -1000, -1000, -1000, -1000, -1000, 1992,
	2892, 1323, -1000, 2161, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1635, 2887, -1000, 2852, 2884, 1620, -1000,
	-1000, 2113, -1000, -1000, 2991, -1000, -1000, 1865, 2882, -11,
	-1000, -1000, 2117, -1000, -1000, 1905, -1000, -1000, 1014, 2881,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 71193,
	48749, 47777, 59231, -27, -1000, -1000, -1000, -1000, -37, -1000,
	18604, 105512, -1000, -1000, -1000, -1000, 1778, 105512, 850, -1000,
	-1000, 2872, -1000, 105512, 843, -1000, -1000, 2871, -1000, 2685,
	-1000, -1000, -1000, -1000, 3374, -1000, 3373, 2251, 3372, 3371,
	3370, -1000, 1640, 1934, 3369, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 70721, 2130, -1000, -1000, 69765, -1000, 2244, -1000,
	70243, 1041, -1000, 1014, 2229, -1000, 79271, 946, -1000, 3368,
	3081, 2480, 1014, 2224, -1000, -1000, -1000, -1000, -1000, 52569,
	-1000, 52569, -1000, 52569, -1000, 1521, -1000, 96383, -12, -12,
	3232, -1000, -1000, -1000, -1000, -1000, 2870, 3365, 3364, 3363,
	-1000, 92607, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 201,
	2869, -1000, -1000, 78799, 201, 2868, -1000, 201, 2864, -1000,
	78327, -1000, -1000, 2138, 2853, -1000, 203, 2845, -1000, -1000,
	202, 2840, -1000, -1000, -57, 2828, -1000, -1000, 105512, -1000,
	-1000, -1000, -39, -1000, -1000, -1000, 963, -1000, 46791, -1000,
	46791, 84499, 62157, 979, 693, 53993, 105512, -1000, -1000, -1000,
	-1000, 105512, -1000, -1000, -1000, -151, -1000, -1000, 62157, 47777,
	105512, -1000, -1000, -1000, -1000, 105512, -1000, -1000, -1000, 62157,
	69765, -1000, 84021, 69293, -1000, -1000, 1398, 2379, -1000, -1000,
	-1000, 62157, 1245, 62157, 62157, 62157, -1000, 83543, -1000, -1000,
	1913, 1660, 2996, 1899, 75967, -1000, 1662, -1000, -1000, -1000,
	3019, -1000, 2680, -1000, 55895, 77855, -1000, 77383, -1000, 76911,
	-1000, 75967, -1000, 75967, -1000, 3362, 3361, 3358, -1000, 3357,
	3008, -1000, 105512, 3007, -1000, 3355, 3130, 2679, 105512, -1000,
	2835, 1578, 1574, 92607, -1000, -1000, 92607, -1000, 92607, -1000,
	-1000, -1000, 1474, -1000, -1000, 2313, -1000, -1000, -1000, -1000,
	75967, -1000, -1000, -1000, -1000, -1000, -1000, 2678, -1000, 1680,
	-1000, 1650, -1000, 1345, -1000, -1000, 205, -1000, -1000, -31,
	-1000, 95911, -1000, 2375, -1000, 92607, -1000, 2310, 2663, 2677,
	1646, 2142, 2406, -1000, 34300, 2383, 41938, 2160, 149, -1000,
	-1000, 149, 149, 26662, -1000, -1000, 57311, 57311, 20066, 1317,
	39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428,
	39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428,
	39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428, 39428,
	39428, 39428, 39428, 39428, 39428, 2089, 39428, 1305, 39428, 39428,
	39428, 39428, 1872, -1000, -1000, 1824, 554, 1878, -1000, 3241,
	3241, 3241, 518, 518, 105739, 105739, 608, 3354, 834, -1000,
	39428, -1000, 122, 39428, 20554, -1000, 468, 8054, 2312, -1000,
	462, 21068, -1000, -1000, -1000, 22072, 635, 33786, 39428, 1030,
	105512, -1000, -1000, 1465, 3261, 18118, 2616, 2561, 699, 826,
	790, 24630, 24116, 23602, 23088, 762, 39428, 39428, 39428, 39428,
	39428, 39428, 39428, 39428, -1000, -1000, 3285, -1000, 3261, -1000,
	-1000, -1000, -1000, 3261, 1311, 1249, 3261, -1000, 3261, 3261,
	3044, 3044, 33284, 32770, 32256, 42440, 31742, 39428, 22574, 31228,
	30714, -1000, 92607, -24, 3189, 39428, 141, -1000, 103774, -1000,
	141, 141, 698, -44, 105512, 2413, 2413, 45835, 2064, 2049,
	2049, 2049, -1000, 918, 14201, 918, 82595, 2057, 918, 918,
	271, 304, 461, 43909, 2156, 82595, 804, 697, -2, -4,
	-5, -1000, -1000, -6, -8, -1000, -1000, 75967, 695, 20554,
	20066, 266, 1454, -46, 2431, 2430, 2422, -1000, 2384, 1760,
	-47, 1302, 75967, -45, -1000, 4225, -52, -1000, 1281, 265,
	3261, -1000, -1000, -1000, -1000, -1000, 3353, 3352, -1000, 1033,
	683, 681, 465, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 679, 678, 678, 678, -1000, 302, 676, 299, 675,
	672, 670, -1000, -1000, -1000, -1000, -1000, 2641, 75967, -37,
	76439, 75967, 912, -55, 1125, -31, -1000, -1000, -1000, 62633,
	1226, -1000, 1880, -1000, -1000, -1000, -1000, -1000, -1000, 1417,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 853, -1000, -1000,
	-1000, -1000, -1000, -1000, 3251, 3249, -25, -1000, -1000, 20066,
	-1000, -32, 1679, 1738, -1000, 64525, 2323, 2999, 2986, 1518,
	-1000, 1455, 1301, 3053, 67865, 3157, 3168, 671, -1000, 2640,
	-1000, -1000, 948, 1669, 1732, 1285, 67865, 2852, -1000, 57311,
	-1000, 2451, 3050, 1339, 1390, 1339, 1339, 1347, -1000, 67865,
	1731, 1284, -1000, 1283, -1000, -34, 3156, 3164, 669, -1000,
	2638, 1279, -1000, -1000, 75967, 20066, 1490, 1485, 1726, 1278,
	-26, -1000, 3149, 3141, 1277, 1264, -1000, 1744, -1000, 62157,
	1613, 2826, 909, 2511, 909, -27, 59231, 92607, 260, -1000,
	122, 39428, 39428, 122, 39428, 122, 3122, -1000, -1000, 2825,
	-1000, -1000, -1000, 3351, 1887, 2341, -1000, -1000, 668, 2222,
	2636, 92607, 2444, -29, 75967, -1000, 2824, 2852, 2221, -1000,
	-1000, 68815, -1000, 2819, 519, 2220, -1000, 643, 3350, -1000,
	95439, -1000, 3003, 1292, 2817, 1083, 546, 3182, -1000, 546,
	53041, -1000, 92607, -1000, -1000, 92607, -1000, -1000, -1000, 3349,
	-1000, 75967, -1000, -1000, 75967, 201, 2811, -1000, 75967, -1000,
	75967, 200, 2808, -1000, -1000, 92607, -1000, 75967, 75967, -1000,
	92607, 92607, 62157, 62157, 226, 63581, -68, -70, 452, -1000,
	83071, 92607, 1081, 64053, 92607, 2960, 1006, 47777, -1000, -71,
	-151, 2502, 979, 979, 909, -1000, 909, -1000, 75967, 2676,
	-1000, -1000, 62157, 979, 979, 979, -1000, -1000, -1000, -1000,
	3348, 3346, -1000, -1000, -1000, 1008, 75967, 92607, 75967, -1000,
	-1000, 92607, -1000, 92607, -1000, 1008, 92607, 1008, 92607, 1008,
	92607, -1000, -1000, -1000, -1000, -1000, -1000, 122, 39428, -1000,
	-1000, 3345, 1601, -1000, 2675, -1000, 2673, -1000, 26, -1000,
	-1000, -1000, -1000, -1000, 1924, 75967, 75967, 75967, 75967, 92607,
	75967, -1000, 67865, -1000, 2310, 2663, -1000, -1000, -1000, -1000,
	-1000, -1000, 1497, 2111, -1000, 2372, -1000, 1493, -1000, -1000,
	-1000, 105512, 42926, -1000, -1000, 105512, 1789, -1000, 41436, 40934,
	-1000, -1000, 1603, 75967, 2448, -1000, 2448, -122, -1000, 103378,
	2371, 75967, -1000, -1000, -1000, -1000, -1000, 939, 1366, 1366,
	1374, 1374, 1374, 1374, 3120, 4444, 1273, 4348, 5326, 5326,
	298, 298, 298, 298, 298, 5326, 4304, 518, 518, 4304,
	4304, 4304, 4304, 4304, 518, 518, 518, 5326, 5326, 5326,
	105739, 7555, 8505, 39428, 39428, 1259, 1823, 554, 7956, 39428,
	567, 567, 567, 567, -1000, 1941, -1000, -1000, -1000, -1000,
	2633, 667, 42440, 42440, -1000, -1000, -1000, -1000, 21570, 39428,
	-1000, -1000, -1000, -1000, 30200, -1000, -1000, 102982, -276, 449,
	-90, -20, -1000, 39428, 39428, 39428, 446, -1000, 259, 39428,
	92607, -1000, 99432, 803, -213, -1000, -73, 1381, -1000, 39428,
	-1000, -1000, 1257, -1000, 1252, 1248, 1243, -1000, 666, 444,
	-1000, 255, -1000, 2047, 663, 661, 39428, -1000, -1000, -1000,
	-1000, -1000, 102668, -1000, -1000, 102354, -1000, -1000, 102272, -1000,
	-1000, 101958, -1000, -1000, -1000, 105198, 99118, 98794, 98750, 7116,
	13641, 13094, -78, 443, -79, 442, 938, 937, 441, 440,
	438, -81, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-84, 427, -1000, 2626, -90, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 423, -1000, 422, -1000, 105116, -90, 421,
	888, -1000, 42440, 42440, 42440, -1000, 418, -1000, 103692, -1000,
	104802, 29698, 29698, 29698, 412, 104484, 39428, -90, -87, -1000,
	-89, -1000, -1000, 548, -92, 1023, 29184, 44879, 20066, -1000,
	1023, 1023, 39428, -1000, 39428, 2408, -1000, -1000, -1000, 2405,
	1882, 2413, 45835, -1000, -1000, -1000, -1000, 82595, -1000, 3232,
	2452, -1000, 82595, -1000, -1000, 92607, 519, -1000, 82595, 82595,
	20066, 918, -1000, 918, 82595, 594, -1000, -1000, -1000, -1000,
	-1000, 411, 49711, -20, 248, 20066, 1014, -1000, 2456, 2456,
	2456, 2456, -1000, -1000, 92607, 1242, -28, 3212, -1000, 1960,
	-1000, 57311, -1000, 831, 1164, 20066, -1000, -1000, -1000, 656,
	-1000, 3261, 3261, -1000, 3261, 92607, 2612, 86, -1000, 27164,
	-1000, 1226, -1000, -1000, 1495, -1000, 1912, -1000, 1168, -1000,
	-1000, -1000, -1000, 27164, -1000, 1670, 92607, 92607, 75967, -1000,
	92607, -1000, 2215, 94967, 2207, 57311, 92607, -1000, -1000, 653,
	650, 2369, 2367, 1079, 92607, 92607, 2360, 94495, 94023, 92607,
	1972, 39428, 58759, 2135, 1639, 122, 122, -1000, -1000, 122,
	648, 1227, 75967, 75967, 92607, 75967, 1609, -1000, -1000, -1000,
	-1000, -1000, 68337, -1000, -1000, 3283, 3282, -1000, 1339, -1000,
	-1000, -1000, 1339, 2852, 1602, 92607, 75967, 92607, 1990, 122,
	122, -1000, -1000, 122, 644, 20066, 2025, -1000, 2713, 92607,
	3310, 92607, 92607, 92607, 58759, 3013, 93551, 92607, 92607, 58759,
	1744, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 58283, 1088,
	1014, 1725, 1151, 67865, 1004, 47777, 2485, -1000, -1000, 17632,
	-1000, 105512, 105512, -1000, 105512, -1000, 55423, 92607, -1000, 1040,
	92607, 64053, 989, 2802, 52097, -37, 979, 62157, 75967, -29,
	92607, -1000, 2852, 2801, 519, 2206, -1000, 62157, 3179, 2799,
	642, 3343, 3342, -1000, 2129, 2201, -1000, -1000, 93079, 2902,
	869, 92607, 1023, 45835, 1894, -1000, 50189, 1057, 92607, 1814,
	78, -1000, -1000, -1000, 1, 92607, -1000, 3339, -1000, -1000,
	201, -1000, 75967, 201, 201, -1000, 75967, 75967, 2138, -1000,
	203, -1000, 202, -1000, -57, -1000, -1000, 226, 226, 979,
	-158, 640, -1000, 903, 892, 48263, 62157, -95, -1000, -1000,
	-1000, -1000, -1000, 75967, 92607, 743, 2479, 92607, -97, -1000,
	246, 638, -1000, 2208, -1000, -1000, 1006, 47777, 2609, -1000,
	-1000, 1019, -1000, 1336, 979, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -15, -37, -37, -1000, 1008, -1000,
	1008, -1000, 1008, -1000, 105512, -1000, -1000, 1600, 1579, 92607,
	-1000, 20066, 92607, 75967, 20066, 75967, 2656, 2655, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1092, -1000, 1789, 2108,
	-1000, 635, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2299, -1000, -30, 26662, 2121, -1000, -1000, 75967, -16,
	39428, 39428, 7171, 6417, 39428, 42440, 42440, -1000, 39428, 6063,
	-1000, -1000, -1000, -1000, -1000, 2596, 627, 39428, 57311, 5972,
	5677, -1000, 409, 12319, 4304, -1000, 39428, -1000, 408, 28682,
	-1000, 104088, -54, -98, -1000, 14700, -90, -100, -1000, -1000,
	825, -1000, 2772, -1000, 39428, 104402, 2269, 1939, 1673, 1615,
	3261, 3309, 17146, -1000, 53517, 1024, 2074, 101644, -1000, -1000,
	-1000, -1000, 57311, 57311, 39428, 39428, -1000, 39428, 39428, 39428,
	-1000, -1000, -1000, 3261, 922, -1000, -1000, -1000, 922, -1000,
	-1000, 1339, -1000, 1339, -1000, 39428, -1000, -1000, 2594, 39428,
	-1000, 57311, 57311, 42440, 42440, 42440, 42440, 42440, 42440, 42440,
	42440, 42440, 42440, 42440, 42440, 42440, 42440, 42440, 42440, 42440,
	42440, 42440, 2366, 42440, 3239, 3239, 3239, -1000, 2653, 2594,
	39428, 39428, 57311, 405, 404, 403, -1000, 39428, -90, -1000,
	-1000, 226, 623, -1000, 2275, -1000, 2547, -1000, 39428, -1000,
	-150, -1000, 2156, -1000, -1000, 2547, 2547, -103, 105512, 45835,
	45835, -1000, 622, 39428, 2396, -1000, -1000, 798, -274, -1000,
	891, -1000, -1000, -1000, -1000, -1000, 519, -1000, -1000, -1000,
	243, 82595, 82595, 795, -1000, -105, -1000, -1000, -106, -1000,
	3178, 399, 20066, -1000, -1000, 3014, -1000, -1000, -1000, -1000,
	-1000, -1000, -37, 92607, 2100, 3305, -1000, 3265, 814, 793,
	227, 3261, 397, 396, 395, -37, 92607, 92607, -1000, -31,
	-1000, -1000, -1000, 39428, -1000, -1000, 2997, 1150, 1148, -1000,
	-1000, 2789, -1000, 2193, -1000, 1064, -1000, 1614, -1000, 39428,
	39428, 621, 620, 3338, 1858, 3337, 1080, 2784, 2138, 2782,
	2138, -1000, -1000, 954, -1000, 105512, -1000, -1000, -1000, -1000,
	614, 610, -1000, -32, 1516, 1664, 1018, -1000, -1000, 39428,
	39428, 82123, -1000, 398, 2991, -17, -1000, -1000, 1661, 1147,
	-1000, -1000, -1000, -1000, 2852, 1624, 1146, -1000, -1000, -1000,
	-1000, 1016, -1000, -1000, 39428, -1000, -34, 1145, 3129, 2192,
	75967, 1144, -1000, 1141, -1000, -1000, -1000, 3139, 2138, 2776,
	1217, -1000, -1000, -1000, -1000, -1000, 57797, -1000, 92607, 75967,
	1585, -1000, 2234, 909, 1004, 2590, -1000, 2443, 3335, 75967,
	3333, 387, -112, -35, 57311, 3176, -1000, 2137, 588, 75967,
	920, -1000, 3232, -1000, -1000, -1000, -1000, 75967, 3173, 2775,
	1014, 122, 75967, 3304, -1000, -1000, 75967, 2773, 2128, 2190,
	2322, 869, 63109, -1000, 1014, 2067, -49, -1000, 1814, 28168,
	2988, -113, -1000, -1000, -1000, 1023, 53041, 45835, 39428, 3331,
	-115, -1000, -1000, 201, -1000, -1000, -1000, 200, -1000, -1000,
	-1000, -1000, -1000, -1000, 81175, 81175, 62157, 62157, 62157, 979,
	92607, 92607, 64053, -1000, 607, 92607, 92607, 606, -1000, 92607,
	92607, 3330, 62157, -36, 604, -1000, 880, 879, 878, -1000,
	-1000, -1000, -1000, -1000, -1000, -151, 122, -1000, 2092, 75967,
	-1000, 16660, -1000, -1000, -1000, -1000, -1000, 1008, -1000, -1000,
	2010, 2159, 2010, 1796, 1794, -1000, 2107, -1000, -1000, -1000,
	-1000, 2412, 3018, 20066, 3115, 567, 39428, 39428, 4399, 5446,
	368, 567, 39428, 39428, 57311, 507, -121, 39428, 39428, -1000,
	39428, 791, 105512, 3302, 39428, 382, 381, -1000, -1000, -1000,
	3253, -1000, -1000, -1000, 105512, 39428, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 367, -1000, 79, -1000, -1000, -1000, 98271,
	-1000, 39428, 354, 3049, -1000, 352, 347, 11122, 6200, 101562,
	101248, 100934, 345, -1000, -1000, 341, 337, 105512, 2653, 105512,
	-1000, -1000, 957, 957, 1338, 1338, 1338, 1338, 3239, 927,
	1031, 383, 916, 916, 916, 739, 541, 541, 916, 916,
	916, 2586, 2327, 603, 6025, -1000, -1000, 105512, 105512, 332,
	-1000, -1000, -1000, -90, 331, 226, -1000, 2543, 3048, 105512,
	-1000, 45835, 2543, 2543, -1000, -1000, 1882, 92607, 105512, 45835,
	-1000, 2452, -1000, 15197, -1000, 20066, -1000, -1000, -1000, -1000,
	3232, -1000, 49711, -1000, 602, -1000, 2, 3014, -1000, 877,
	-1000, -37, -1000, -1000, 763, 3327, 812, 20066, 330, -1000,
	-1000, -1000, -37, -37, 105512, 92607, 92607, 92607, 2771, -1000,
	3056, -1000, 1079, 100852, -126, -1000, 103378, 39428, 92607, -1000,
	-1000, 1777, 2378, 1104, -1000, 3021, 92607, -1000, 92607, -1000,
	-1000, 92607, 92607, 75967, 92607, 2748, -127, 105512, -38, -1000,
	876, -1000, 1320, -1000, 16174, 92607, 75967, 92607, 75967, 2746,
	-128, 20066, -1000, 3301, 3299, 2769, 3029, 3294, 92607, -1000,
	92607, 75967, 2959, -1000, -1000, -1000, -1000, 1617, 1139, -40,
	600, -1000, 875, -1000, -1000, 874, 1004, -1000, 62157, 47777,
	-1000, 519, -1000, 2463, -1000, 80221, 2114, 122, -1000, 3326,
	81651, 598, -1000, 2084, -1000, 740, 2852, 122, 75967, -1000,
	-1000, 519, 328, -41, -1000, 1075, 20066, 75967, 2766, 2326,
	869, 63109, -1000, 1292, 2406, -1000, -42, -1000, 547, 122,
	2067, -1000, -49, 105512, -1000, 873, -1000, -1000, -1000, -129,
	-1000, -1000, 326, -1000, 2958, 2953, -1000, 2553, 39428, 597,
	593, 92607, 2949, -1000, -1000, -140, 2717, 2717, 62157, 47777,
	62157, 1006, -1000, 2203, -1000, -1000, -1000, -1000, -1000, 20066,
	1553, -1000, 592, 591, -1000, -1000, -1000, -1000, 3018, 567,
	567, 39428, 39428, 39428, 567, 507, -141, -1000, 567, 567,
	-90, -1000, -1000, 104088, -1000, -1000, -1000, 105512, -1000, 15688,
	2018, -1000, 100538, -1000, 26662, -1000, -1000, 39428, 39428, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 42440, 2584, 590,
	57311, -1000, -1000, 325, 1021, 39428, 39428, 2156, 1021, 1021,
	-1000, -149, -1000, -1000, -1000, 3232, 2, -1000, -1000, 3325,
	20066, -1000, 62157, 509, -1000, 3324, -1000, -1000, -1000, -1000,
	-1000, 92607, -1000, 92607, -1000, 20066, 92607, 2567, 2174, -1000,
	-1000, 2355, 587, 42440, 75967, 830, -1000, 3205, 2549, 1787,
	39428, 2121, -152, -155, 2173, -1000, -1000, 2172, 39428, -1000,
	57311, 582, 2138, 2138, -157, -160, -1000, -1000, 39428, 1137,
	92607, 27666, -1000, 3323, 2991, -1000, -1000, -1000, -1000, 39428,
	1136, -1000, -1000, -1000, 3292, 2138, 20066, -1000, 2138, 2138,
	3029, 1103, 92607, 75967, 2242, 2242, 62157, 47777, -1000, -57,
	1004, 3170, 1990, 2492, -1000, -1000, -1000, -1000, 2353, -1000,
	-1000, 92607, 2346, 984, -1000, -163, -1000, 872, 871, 64053,
	989, 968, -1000, -1000, -1000, 519, 3169, -1000, 3242, 579,
	92607, 2127, 575, 20066, -1000, 869, 63109, -1000, 2902, 1814,
	-1000, 2915, 92607, 2982, -1000, 2406, 554, -1000, 979, 545,
	544, 2316, 2316, -165, 39428, 39428, -166, 540, 979, -1000,
	-171, -1000, -1000, -1000, -1000, -64, -1000, 811, 807, -1000,
	-1000, 75967, 75967, 39428, 39428, -1000, 567, 567, 567, -1000,
	315, -1000, -1000, 2067, 3047, -1000, -66, 100224, 100142, 4681,
	42440, 57311, -178, -1000, -1000, 92607, 105512, -90, -1000, -1000,
	-1000, 568, -1000, -1000, 3321, -1000, -1000, 1802, -1000, -1000,
	-1000, 92607, 2187, -1000, 1077, 39428, 6025, 539, 39428, -1000,
	3165, -1000, 2460, 2606, 2463, 538, -1000, -1000, -1000, -1000,
	-1000, 1073, 1863, -1000, -1000, 105512, 3029, 39428, -1000, -1000,
	531, 526, 105512, 525, 864, 2579, -1000, -1000, -1000, 105512,
	522, 3129, -1000, -1000, -1000, -1000, 2138, 75967, -1000, -1000,
	-1000, -179, -1000, -1000, 1885, 122, 989, -1000, 2026, 2114,
	521, -1000, -1000, 2115, 2377, -1000, 81651, 27164, 27164, 311,
	3163, 968, -1000, 3229, -1000, 3162, 122, -1000, 39428, -1000,
	75967, 39428, 2126, 63109, -1000, 2322, -1000, 1280, -181, 92607,
	1814, -1000, -1000, 62157, 62157, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1073, -184, -186, -1000,
	62157, -1000, -1000, 2203, -1000, 92607, -1000, 92607, -1000, -1000,
	-189, -192, -1000, 2006, 39428, 26662, -1000, -1000, 4681, -194,
	-1000, -69, -1000, 3161, -1000, -1000, -1000, -1000, 2763, 2540,
	99828, 2287, 92607, 99514, -1000, 2604, -1000, -1000, 1990, 92607,
	2463, 2536, 75967, 1076, -195, 2010, 2010, 39428, 26160, 2023,
	39428, -1000, -1000, 3029, -1000, 2563, 3244, -1000, 2115, 75967,
	92607, -1000, 3015, -1000, 2945, -1000, -1000, -1000, 2463, 122,
	-1000, -1000, 122, -1000, -200, 1075, -202, 75967, -1000, 2326,
	1517, -1000, 1023, -1000, -1000, -203, -216, 1787, 1073, 971,
	-218, -1000, -223, -224, -1000, -1000, 124, 40432, 40432, 40432,
	-90, -122, -1000, 92607, 520, 2735, 1002, -1000, 2118, 1752,
	28, 1090, -1000, -1000, 2549, -225, -1000, 994, 519, -1000,
	39428, 1073, -226, -1000, 1054, -231, -1000, 1052, -233, -1000,
	2578, -1000, -238, 2138, 985, 3108, -1000, -1000, -1000, -1000,
	508, -239, -1000, -1000, 2286, -1000, 1990, 984, -1000, 1073,
	487, 1787, 482, -1000, 53041, -1000, 979, 979, 2463, 1787,
	1023, 481, 979, -1000, -1000, -1000, 2764, -1000, 43412, 2110,
	1763, 103064, 2764, 2764, -1000, -1000, 92607, 3082, -1000, 2124,
	2119, 1434, -1000, -1000, -1000, -1000, -1000, -1000, 1023, -1000,
	3071, 2287, 105512, 2463, -1000, 2010, 2490, -1000, 2010, 2573,
	-1000, 2021, -1000, -1000, -1000, 2753, 3238, 92607, -1000, 92607,
	1754, 1666, 3319, 989, 2115, 1787, 39428, 2463, 39428, -234,
	-1000, -1000, 1990, 2463, -1000, -1000, -1000, 1877, 3200, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 861, -1000, 2925,
	-1000, 1091, 2020, 2020, -1000, 535, 2118, -1000, -1000, 480,
	-1000, 479, -1000, 1671, -1000, -1000, -240, -1000, -1000, 3318,
	-1000, 2115, -1000, 2463, -241, 1990, -246, -1000, 971, 1990,
	1753, -1000, -1000, 2052, 39930, 39428, -1000, 3215, -1000, -1000,
	2342, -1000, 39428, 2549, 39428, 39428, 2081, 2122, -1000, -1000,
	1990, 1073, 971, 1787, 1023, 971, -1000, -1000, -1000, 105512,
	-1000, -1000, -1000, 105512, -1000, -247, -258, 51621, -1000, -1000,
	-1000, 971, 1787, 1023, 2463, -1000, 1023, 1990, 1130, -158,
	81175, 1023, 2463, -1000, 1990, -1000, -1000, 476, -259, -1000,
	1990, 971, 39428, -1000, 971, 1023, -265, 1023, -1000, 1990,
	-1000, -1000,
}
var sqlPgo = [...]int{

	0, 4030, 4029, 4027, 4023, 4022, 4021, 4019, 4017, 4012,
	4010, 4008, 4007, 4006, 4000, 3999, 3997, 3996, 3995, 3994,
	3987, 3986, 3984, 3983, 3980, 3979, 3978, 3977, 3976, 3975,
	3973, 3971, 3970, 3968, 3966, 3965, 3963, 3961, 3960, 3959,
	3958, 3955, 3954, 3951, 3949, 3948, 3947, 3946, 3945, 3944,
	3943, 3940, 41, 3937, 3933, 3932, 3931, 3929, 3928, 3927,
	3926, 3925, 3924, 3922, 3921, 3919, 3918, 3917, 3916, 3915,
	3910, 44, 3908, 234, 3907, 3904, 3903, 3899, 3897, 3895,
	3894, 3893, 3890, 3888, 3887, 3886, 232, 3885, 127, 3881,
	3880, 3878, 3873, 3872, 231, 3871, 3870, 3869, 3867, 240,
	3866, 3865, 3863, 3861, 3858, 3857, 3856, 3855, 3854, 60,
	131, 3853, 3852, 301, 3850, 3847, 3846, 3844, 3841, 3840,
	3839, 3836, 3835, 3834, 213, 3830, 230, 3827, 3824, 3820,
	3819, 3818, 3817, 3816, 3815, 3814, 3813, 3811, 3807, 3805,
	3803, 3802, 3801, 3797, 3796, 3795, 3794, 3793, 3792, 3791,
	3785, 3783, 3782, 3780, 3779, 3778, 3776, 3773, 235, 153,
	3772, 3767, 227, 226, 3764, 3757, 3756, 3755, 3754, 101,
	8, 29, 3747, 3746, 68, 59, 63, 77, 81, 79,
	3741, 89, 3738, 104, 45, 3736, 14, 18, 133, 208,
	8356, 200, 3735, 3734, 3732, 212, 165, 3731, 199, 3730,
	3727, 3723, 3721, 75, 62, 159, 150, 147, 140, 621,
	3719, 3718, 82, 57, 43, 32, 3717, 3716, 3713, 2944,
	114, 3710, 224, 206, 135, 3706, 3696, 3694, 867, 3692,
	38, 3691, 195, 73, 119, 13, 100, 3689, 123, 27,
	3688, 141, 42, 3687, 129, 76, 65, 8122, 7840, 3686,
	97, 49, 88, 95, 158, 149, 172, 404, 171, 183,
	181, 146, 139, 3685, 215, 3682, 3136, 47, 132, 3681,
	3680, 3679, 61, 169, 85, 3678, 3674, 51, 1, 3,
	7, 151, 16, 99, 28, 3673, 21, 3672, 3670, 3669,
	3666, 24, 145, 3661, 236, 3654, 83, 36, 17, 3653,
	71, 184, 3652, 191, 103, 3651, 3649, 221, 179, 154,
	3648, 87, 194, 3647, 3645, 3643, 3641, 3640, 115, 33,
	105, 3638, 3636, 128, 203, 168, 3634, 40, 3626, 148,
	84, 125, 239, 107, 186, 98, 190, 162, 198, 3625,
	3622, 3620, 156, 3618, 3616, 178, 136, 3615, 3613, 175,
	242, 37, 55, 201, 52, 164, 134, 3612, 177, 3611,
	3610, 3609, 241, 155, 185, 2, 15, 74, 120, 31,
	5, 197, 121, 269, 91, 3608, 5124, 2050, 2359, 3607,
	3605, 112, 102, 53, 93, 124, 225, 64, 3594, 3592,
	2290, 3590, 3586, 3585, 3584, 161, 3583, 3582, 3581, 116,
	130, 160, 3580, 78, 72, 12, 96, 297, 233, 86,
	187, 157, 220, 3579, 166, 3578, 48, 110, 3575, 170,
	217, 3574, 3569, 144, 3567, 113, 528, 46, 138, 3566,
	196, 3565, 3562, 3561, 3560, 3557, 3554, 3553, 251, 202,
	3552, 3551, 3548, 122, 167, 3546, 223, 126, 173, 69,
	35, 3545, 67, 2972, 3544, 229, 205, 56, 137, 3543,
	1225, 39, 0, 10343, 9582, 6341, 10211, 3542, 2289, 3539,
	3538, 3531, 180, 111, 3529, 3527, 3526, 90, 3524, 58,
	3523, 3522, 50, 3521, 19, 6, 10, 22, 20, 499,
	106, 3519, 3518, 92, 108, 117, 3515, 238, 192, 3513,
	3512, 3508, 3507, 80, 3503, 30, 3502, 23, 3498, 3497,
	26, 9, 25, 3496, 3494, 209, 3493, 188, 210, 3492,
	142, 3491, 3134, 109, 3490, 3489, 222, 66, 3487, 216,
	3484, 3081, 3484, 3481, 3480, 11, 3479, 3477, 207, 152,
	182, 3475, 3474, 143, 3473, 3470, 3468, 218, 3465, 3462,
	34, 3460, 4, 3458, 3457, 174, 2908, 3456, 3455, 54,
	3451, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 39, 39, 9, 9, 9, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 28, 28, 17, 17, 30, 30, 18, 18, 31,
	31, 526, 526, 21, 33, 22, 34, 15, 527, 527,
	527, 527, 27, 23, 35, 25, 25, 25, 25, 25,
	172, 172, 172, 172, 20, 20, 29, 29, 206, 206,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 525, 525, 208, 208, 207, 202, 202,
	528, 528, 209, 209, 209, 211, 211, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 427, 427, 427, 458,
	458, 458, 542, 542, 543, 543, 543, 543, 543, 112,
	112, 41, 41, 41, 41, 520, 520, 174, 174, 174,
	176, 176, 175, 175, 175, 175, 62, 62, 534, 534,
	535, 535, 533, 532, 532, 536, 536, 536, 173, 173,
	173, 108, 108, 108, 108, 109, 109, 110, 110, 177,
	177, 177, 179, 179, 178, 178, 178, 178, 178, 178,
	178, 178, 183, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 90, 90, 460, 460, 461, 461, 168, 168,
	169, 169, 169, 169, 170, 170, 171, 171, 171, 55,
	180, 180, 182, 182, 181, 181, 43, 43, 43, 43,
	43, 43, 43, 44, 44, 44, 44, 44, 45, 45,
	45, 45, 45, 45, 46, 46, 46, 46, 46, 46,
	53, 53, 53, 53, 159, 159, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 545, 545, 546, 546, 547, 547,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 68, 68, 293, 293,
	265, 265, 69, 69, 69, 70, 70, 71, 71, 57,
	57, 518, 518, 308, 308, 418, 418, 73, 73, 328,
	328, 74, 74, 74, 74, 74, 74, 75, 75, 75,
	75, 75, 75, 75, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 83, 83,
	83, 83, 83, 84, 84, 84, 81, 81, 81, 78,
	78, 78, 77, 77, 77, 82, 82, 82, 517, 256,
	256, 80, 80, 80, 258, 258, 79, 79, 79, 309,
	309, 85, 85, 85, 85, 266, 86, 86, 86, 86,
	86, 86, 86, 86, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 420, 420, 87,
	87, 87, 388, 388, 91, 91, 91, 343, 343, 92,
	92, 92, 92, 92, 93, 93, 93, 93, 93, 111,
	111, 111, 111, 111, 522, 522, 301, 301, 222, 222,
	222, 222, 101, 101, 101, 101, 102, 102, 102, 103,
	103, 164, 164, 118, 118, 118, 118, 118, 117, 117,
	117, 117, 117, 117, 47, 47, 47, 48, 48, 49,
	49, 50, 50, 51, 51, 52, 52, 52, 52, 52,
	120, 120, 539, 539, 122, 119, 119, 119, 121, 121,
	121, 121, 123, 124, 124, 124, 124, 124, 124, 124,
	124, 125, 125, 452, 452, 317, 317, 450, 450, 469,
	469, 451, 451, 270, 270, 270, 270, 270, 271, 271,
	271, 459, 459, 459, 459, 459, 459, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 165, 165, 166,
	167, 167, 167, 167, 146, 146, 146, 158, 158, 158,
	158, 158, 158, 158, 149, 149, 149, 136, 136, 127,
	127, 127, 127, 127, 127, 127, 131, 131, 131, 131,
	131, 131, 131, 131, 128, 128, 138, 138, 138, 138,
	138, 132, 132, 133, 133, 135, 135, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 129, 129, 129, 129,
	140, 140, 140, 140, 350, 350, 350, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 157, 157,
	157, 157, 157, 157, 537, 537, 538, 538, 153, 153,
	153, 153, 153, 153, 402, 402, 147, 147, 147, 147,
	152, 152, 152, 152, 333, 333, 144, 144, 144, 145,
	145, 145, 150, 150, 151, 148, 148, 154, 154, 154,
	154, 130, 130, 130, 549, 549, 549, 155, 155, 143,
	143, 156, 156, 156, 156, 156, 156, 156, 156, 142,
	142, 142, 141, 141, 141, 141, 134, 519, 519, 515,
	515, 515, 515, 515, 515, 515, 515, 516, 516, 521,
	521, 96, 96, 96, 96, 96, 104, 104, 104, 104,
	104, 97, 97, 97, 97, 97, 99, 99, 98, 98,
	98, 98, 63, 63, 63, 14, 14, 14, 64, 64,
	186, 186, 186, 187, 187, 278, 278, 278, 278, 184,
	184, 185, 185, 65, 65, 550, 550, 550, 529, 529,
	529, 530, 530, 530, 530, 530, 530, 272, 272, 273,
	273, 368, 368, 368, 368, 368, 276, 276, 276, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 279, 279,
	210, 210, 210, 282, 283, 283, 280, 280, 281, 281,
	281, 285, 285, 284, 287, 287, 286, 367, 478, 478,
	480, 480, 480, 480, 480, 480, 480, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 551, 551,
	476, 476, 476, 477, 472, 472, 473, 473, 473, 473,
	473, 274, 274, 275, 275, 275, 275, 474, 475, 299,
	299, 405, 479, 479, 481, 481, 483, 552, 552, 552,
	552, 552, 552, 553, 553, 553, 366, 366, 365, 365,
	291, 291, 484, 484, 484, 484, 485, 485, 485, 485,
	485, 488, 487, 486, 486, 486, 486, 486, 67, 67,
	67, 330, 330, 329, 329, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	161, 161, 225, 225, 61, 61, 61, 12, 12, 12,
	531, 531, 531, 66, 66, 66, 66, 66, 66, 224,
	224, 224, 224, 224, 224, 524, 524, 523, 523, 226,
	226, 555, 555, 72, 72, 72, 72, 72, 72, 72,
	421, 421, 422, 422, 60, 60, 60, 60, 60, 351,
	351, 349, 349, 348, 348, 298, 298, 404, 230, 230,
	203, 203, 203, 26, 19, 19, 24, 24, 37, 37,
	37, 37, 40, 40, 36, 36, 36, 36, 38, 38,
	32, 32, 540, 540, 541, 541, 100, 100, 105, 105,
	105, 105, 105, 106, 106, 106, 106, 107, 107, 107,
	107, 116, 116, 160, 160, 160, 160, 160, 160, 160,
	42, 42, 42, 42, 54, 54, 54, 54, 114, 557,
	557, 557, 115, 115, 115, 556, 556, 223, 223, 362,
	362, 363, 363, 558, 558, 364, 364, 364, 364, 217,
	216, 218, 218, 59, 59, 59, 212, 212, 213, 213,
	214, 214, 215, 215, 559, 559, 94, 94, 94, 163,
	163, 264, 264, 264, 358, 358, 358, 292, 292, 236,
	236, 361, 361, 359, 359, 359, 359, 327, 327, 327,
	162, 162, 306, 306, 319, 319, 320, 320, 415, 415,
	321, 113, 113, 190, 190, 188, 188, 188, 188, 188,
	188, 188, 188, 195, 195, 196, 196, 197, 197, 198,
	199, 199, 199, 199, 310, 310, 200, 200, 200, 189,
	189, 189, 191, 191, 191, 191, 191, 191, 191, 194,
	194, 194, 194, 201, 201, 201, 193, 193, 495, 495,
	495, 497, 497, 499, 499, 498, 498, 494, 494, 496,
	496, 554, 554, 332, 332, 332, 289, 290, 288, 288,
	296, 296, 294, 295, 295, 297, 297, 403, 403, 403,
	204, 204, 204, 324, 324, 324, 324, 325, 325, 354,
	354, 352, 352, 352, 352, 353, 353, 355, 355, 355,
	356, 356, 357, 357, 323, 323, 384, 384, 192, 192,
	192, 303, 303, 303, 304, 304, 374, 374, 374, 374,
	374, 374, 375, 375, 373, 373, 373, 373, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 407, 408, 408,
	305, 305, 409, 360, 360, 513, 513, 513, 514, 514,
	401, 401, 410, 410, 410, 410, 410, 410, 399, 399,
	400, 400, 416, 417, 417, 336, 336, 336, 336, 334,
	334, 337, 337, 337, 337, 335, 335, 411, 411, 411,
	411, 326, 326, 412, 412, 412, 412, 413, 369, 370,
	370, 423, 423, 423, 423, 425, 302, 302, 302, 302,
	302, 471, 470, 470, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 439, 439, 439, 439, 439, 439, 439,
	439, 440, 440, 440, 440, 440, 440, 440, 426, 426,
	426, 426, 426, 430, 430, 430, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 431, 431, 436,
	436, 437, 437, 437, 432, 433, 438, 438, 438, 438,
	560, 560, 442, 442, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 428, 428, 428, 435, 435, 435, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 344, 344, 346, 346, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 378, 378, 378, 378, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 489, 489, 489, 489, 489, 489, 489, 489,
	380, 380, 492, 492, 493, 493, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 500, 500, 501, 501, 503,
	503, 504, 504, 505, 506, 506, 506, 507, 508, 508,
	502, 502, 509, 509, 509, 509, 510, 510, 511, 511,
	511, 511, 511, 512, 512, 512, 512, 512, 390, 390,
	391, 391, 397, 397, 397, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 227, 227, 227, 227, 227, 315, 315, 313, 313,
	313, 316, 316, 314, 314, 312, 312, 311, 311, 387,
	387, 385, 385, 389, 389, 338, 338, 441, 441, 441,
	441, 441, 441, 441, 441, 339, 339, 339, 347, 340,
	340, 341, 341, 341, 341, 341, 381, 382, 342, 342,
	342, 383, 383, 392, 396, 396, 395, 394, 394, 393,
	393, 371, 371, 372, 372, 322, 322, 561, 561, 318,
	318, 414, 414, 414, 414, 268, 268, 307, 307, 267,
	267, 259, 259, 260, 260, 260, 260, 300, 300, 398,
	398, 443, 443, 444, 444, 445, 445, 446, 446, 447,
	448, 449, 386, 386, 246, 245, 233, 234, 244, 243,
	242, 232, 235, 239, 240, 241, 237, 238, 252, 251,
	250, 257, 248, 249, 419, 231, 261, 261, 262, 262,
	262, 263, 263, 263, 263, 228, 228, 229, 229, 253,
	253, 254, 255, 255, 247, 247, 247, 219, 219, 219,
	220, 220, 221, 221, 457, 457, 454, 454, 454, 455,
	455, 455, 456, 456, 456, 456, 453, 453, 453, 453,
	453, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 463, 463, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 465, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 468, 468,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 10, 3, 6, 4, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 3, 6, 4, 6, 7, 9, 5,
	2, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 1, 3, 12, 3, 1, 0,
	1, 1, 2, 2, 1, 3, 3, 0, 5, 7,
	0, 5, 6, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 6,
	2, 0, 1, 2, 3, 1, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 3, 3, 4, 3, 4,
	7, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 1, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 2, 6,
	4, 7, 7, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 2, 3, 3, 1, 1, 1,
	1, 1, 2, 2, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 3, 2, 4,
	3, 3, 5, 3, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 3, 6, 6, 3, 11, 14,
	1, 2, 3, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 3, 2, 0,
	1, 1, 0, 6, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 2,
	3, 2, 2, 8, 11, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 8, 5, 3, 4, 3, 0, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 516, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -116, -100, -112, -118, -160, -165,
	-166, -167, -3, -41, -43, -56, -73, -75, -86, -95,
	-94, -96, -101, -108, -104, -90, -47, -113, -117, -126,
	-161, -162, -163, 31, 30, 93, 77, 142, 117, 125,
	180, 329, 365, 376, 357, 346, -121, -122, 393, -42,
	-54, -115, -114, 70, 118, 352, -4, -12, 28, 44,
	-44, -45, -46, 60, -61, -58, -68, -62, -544, 95,
	-496, -76, -79, -107, -548, 130, 149, 198, -97, -98,
	318, -102, -103, 359, -105, -106, 361, 150, -49, -48,
	144, -188, -190, -119, -120, -164, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -157,
	-140, -141, -142, -143, -148, -144, -145, -146, -147, -149,
	-150, -152, -153, -154, -155, -156, 397, -151, 451, 47,
	411, 79, 134, 369, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -57, -59, -60, -63, -64, -65,
	-72, -66, -67, -495, -77, -78, -81, -83, -84, -80,
	-82, 358, -191, -189, 513, 465, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -28, -33, -34, -30, -31,
	-29, -32, -35, -36, -37, -38, -39, -40, -26, -27,
	-15, -25, 483, 491, -194, -192, -193, -201, 385, 473,
	427, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, -266, 2, -248, -253, -254, -255, -247, -219, -465,
	-468, 4, -462, -466, 155, 207, 283, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 47, 51, 53, 57, 58, 59, 60, 61,
	65, 70, 71, 76, 77, 78, 79, 80, 81, 82,
	88, 85, 86, 87, 90, 92, 93, 94, 96, 98,
	99, 107, 108, 109, 110, 112, 117, 118, 121, 116,
	120, 123, 124, 125, 128, 129, 130, 132, 133, 135,
	136, 137, 139, 140, 142, 143, 144, 147, 145, 434,
	146, 148, 149, 150, 151, 161, 162, 163, 168, 170,
	174, 175, 178, 179, 181, 185, 187, 188, 189, 190,
	191, 197, 198, 200, 201, 202, 203, 208, 209, 213,
	210, 219, 220, 224, 225, 226, 228, 232, 233, 234,
	235, 236, 237, 239, 241, 240, 243, 246, 247, 250,
	251, 252, 255, 256, 257, 258, 260, 261, 264, 262,
	265, 263, 267, 268, 269, 266, 272, 270, 274, 275,
	276, 281, 279, 277, 278, 285, 288, 195, 290, 291,
	294, 312, 298, 299, 300, 303, 304, 307, 310, 311,
	313, 314, 315, 316, 317, 318, 319, 320, 322, 323,
	327, 329, 330, 332, 334, 335, 336, 337, 338, 339,
	340, 343, 342, 344, 346, 352, 357, 354, 355, 356,
	358, 359, 360, 361, 363, 364, 365, 367, 368, 369,
	370, 372, 374, 375, 378, 379, 394, 395, 413, 376,
	377, 380, 381, 382, 383, 384, 388, 386, 387, 389,
	390, 391, 393, 396, 397, 399, 400, 401, 402, 403,
	404, 407, 409, 410, 411, 412, 414, 417, 418, 419,
	420, 415, 426, 423, 424, 428, 429, 430, 431, 432,
	433, 435, 437, 445, 446, 448, 451, 452, 453, 443,
	455, 456, 459, 460, 461, 464, 462, 463, 465, 467,
	470, 471, 472, 478, 477, 484, 485, 487, 488, 489,
	35, 48, 49, 52, 54, 56, 66, 67, 68, 72,
	113, 114, 141, 152, 153, 164, 176, 177, 182, 184,
	192, 193, 194, 214, 215, 217, 222, 244, 287, 289,
	305, 309, 324, 325, 326, 328, 341, 371, 405, 416,
	421, 438, 439, 440, 441, 447, 449, 473, 474, 475,
	479, 486, -266, 2, -248, 296, -241, 2, -219, -219,
	329, 27, 2, 27, 323, 387, 429, 431, 2, -522,
	-301, 2, 27, -222, -219, 95, 180, 385, -241, 2,
	-522, -301, 24, 2, -219, 2, -223, 2, 376, -219,
	261, 2, 516, 90, 252, 71, 371, 390, -124, 446,
	-123, 438, 380, -125, -452, 2, 272, -219, 516, 516,
	516, 27, -231, -219, 427, 207, 109, 424, 516, 2,
	427, 315, 477, 386, 109, 338, 207, 453, 380, -531,
	261, 367, 183, 466, -520, 2, -515, 4, -466, -462,
	-260, -259, 427, 432, 109, -255, -247, 506, -254, 516,
	516, 516, 2, 225, 226, 337, 336, 390, 391, 516,
	516, 516, 378, 2, 26, 63, 89, 92, 115, 151,
	171, 174, 301, -545, 312, 335, 389, 426, 435, 448,
	-530, 412, 65, 380, -529, -531, 261, 453, 128, -348,
	109, 252, 179, 460, 431, 429, 458, 121, 213, 463,
	462, 516, 516, 26, 63, 74, 92, 128, 151, 171,
	174, -547, 312, 335, 374, 389, 426, 435, 448, 2,
	477, 261, 386, 427, 207, 109, 453, 380, -531, 378,
	379, 333, -88, 2, 513, 31, 30, 393, -183, 427,
	218, 2, -219, 516, 516, 2, 225, 226, 378, 379,
	516, 516, 172, -515, 2, 516, 516, 2, 225, 226,
	378, 379, 218, 2, 65, 382, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 2, -158, 390, 412,
	189, 45, 44, 71, 27, 334, 76, 316, 110, 136,
	181, 207, 208, 233, 89, 90, -350, 43, 226, 225,
	379, -537, 378, -402, 428, 381, 387, 423, 237, 376,
	446, 95, 467, 368, 489, 338, 339, 145, 4, 109,
	272, 392, 438, 252, 375, 319, 81, 516, -554, 2,
	427, -556, 2, 446, 446, 2, -556, 2, -556, 2,
	-556, 2, -557, 446, 486, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, -189, -191, -190, 516, 516, 516, 516, 516,
	516, 516, -158, 390, 2, 71, 27, -294, -296, 457,
	216, 138, 302, -188, -190, 2, -495, -450, 2, -376,
	-469, -378, 504, 505, 497, 425, 64, 282, 490, -390,
	115, 458, 296, -468, -379, -392, 141, 371, -316, 8,
	9, 5, 6, 7, -228, -380, -386, 450, 154, 286,
	-263, 517, 10, 513, -492, -190, -391, 36, 184, 62,
	-454, -262, -229, -426, 217, -261, -247, -489, -490, 4,
	-462, -463, -455, -429, -437, -433, -434, -440, -219, -465,
	74, 101, 102, 100, 105, 104, 254, 253, 106, 103,
	392, 466, 63, 35, 192, 193, 222, 287, 194, 72,
	-491, 129, -464, 214, 215, 405, 49, 341, 164, 114,
	113, 289, 54, 52, 474, -438, 111, 438, 439, 440,
	441, 176, 177, 56, 152, 153, 309, 326, 421, 447,
	449, 182, 244, 97, 173, 212, 196, 221, 223, 227,
	245, 248, 273, 280, 284, 306, 308, 366, 398, -560,
	475, 416, 66, 67, -497, 342, -498, -241, -497, 516,
	516, 518, 516, -288, -289, -290, 2, 27, 126, 513,
	2, -406, 2, -407, -411, -190, 238, -410, 513, -408,
	511, -248, 297, -493, 372, -489, -490, -228, -247, -262,
	4, -462, -464, 515, -291, 513, 109, 427, 75, 207,
	-343, 513, -219, 27, 296, 442, 518, -388, 513, 296,
	172, 299, -219, 477, 2, 2, 394, 2, 513, -124,
	68, 446, 42, 390, -363, 2, -364, -216, -217, -218,
	-416, 224, 332, 340, 492, 489, -450, -539, 172, 496,
	442, -450, -317, 515, 2, 2, 2, 2, 2, -411,
	192, -248, 2, -245, -453, 4, -462, -466, -463, -467,
	-465, 27, 30, 31, 32, 34, 36, 37, 38, 39,
	55, 62, 63, 69, 73, 75, 84, 89, 95, 100,
	101, 103, 102, 104, 105, 106, 115, 119, 122, 126,
	127, 131, 134, 138, 154, 156, 169, 171, 172, 180,
	183, 186, 199, 211, 216, 218, 238, 242, 249, 253,
	254, 282, 286, 292, 296, 297, 301, 302, 321, 331,
	345, 362, 385, 392, 408, 422, 427, 436, 442, 444,
	450, 457, 458, 466, 468, 476, 480, 481, 482, 483,
	-468, 74, 2, -411, 192, 2, -250, 192, -411, -253,
	2, -232, -219, 2, -244, -453, 2, -267, 192, -248,
	-249, -253, -251, 2, -253, -257, 2, -219, -460, 192,
	2, -457, 10, -456, 5, 4, -462, -466, -463, 477,
	218, 442, 518, -307, -259, -260, -449, 8, -300, -219,
	515, -376, 2, -113, -99, 2, 169, -376, 192, 2,
	-113, 192, 2, -376, 192, 2, -113, 192, 2, -534,
	2, -460, 2, 2, 448, 2, 92, 192, -219, 427,
	108, 2, 356, -546, 374, 452, 2, 2, 2, 2,
	2, 2, 427, -237, 2, -219, 169, -257, 192, 2,
	386, -555, 342, -460, 192, 2, 477, -251, 2, -251,
	207, 220, -232, 192, 2, 431, 429, 431, 429, 172,
	2, 218, 2, 218, 2, -412, 2, -413, -407, -248,
	511, 2, 2, 2, 2, 2, 192, -219, 427, 108,
	2, 236, 2, 2, 2, 2, 2, 2, 2, -309,
	192, 2, -248, 477, -309, 192, 2, -309, 192, 2,
	-349, 2, 84, -232, 192, 2, -256, 192, 2, -251,
	-258, 192, 2, -257, -461, 192, 2, -460, -376, 2,
	-113, 2, -420, 2, -419, -456, 473, -88, 513, -88,
	513, 390, 513, -460, -248, -248, -376, 2, -113, -99,
	2, -376, 2, -113, 2, -110, -109, -460, 513, 172,
	-376, 2, -113, -99, 2, -376, 2, -113, 2, -183,
	169, 2, 109, 427, -158, 2, 169, 468, 2, 8,
	2, 199, -460, 381, 339, 161, 2, 394, 2, 395,
	71, -350, 489, 71, 172, 2, 172, 2, -333, 2,
	483, 2, -519, 2, 296, 172, 2, 172, 2, 172,
	2, 172, 2, 172, 2, 336, 391, 226, 2, -113,
	480, -99, -376, 480, 2, -538, 169, 379, -376, 2,
	445, 235, 146, 172, -333, 2, 172, 2, 172, 2,
	5, 2, 337, 413, 2, 224, 332, 413, 2, -248,
	-549, 2, 427, 477, 386, 2, 2, 85, 86, 172,
	2, 172, 2, 172, 489, 2, -326, -411, -362, -363,
	-362, 442, -294, -296, -158, 394, 2, -195, -324, -197,
	169, -352, -353, -198, 249, 156, 292, -199, -332, 27,
	126, -332, -332, 58, 514, 514, 11, 12, 73, 40,
	504, 505, 506, 507, 167, 508, 509, 502, 503, 501,
	494, 495, 499, 230, 231, 91, 498, 496, 83, 259,
	373, 157, 158, 159, 160, 353, 205, 33, 206, 14,
	15, 16, 32, 301, 248, 490, 196, 398, 497, 17,
	18, 19, 221, 223, 284, 48, 199, -227, -269, -376,
	-376, -376, -376, -376, -376, -376, 308, 513, -322, -371,
	511, -190, 513, 513, 513, -449, -190, -376, -390, 514,
	-314, 513, -190, -390, -385, 513, 371, 511, 513, -393,
	-376, 5, 5, 5, 513, 515, -500, 484, 169, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 328, -431, 513, -430, 513, -430,
	-430, 478, -428, 513, 491, 485, 513, -428, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 478, 518, -497, -291, 513, -318, -414, -376, 506,
	-318, -318, 296, -311, -376, 97, -336, 227, 273, 173,
	245, 366, 212, -373, 517, -373, -401, 491, -190, -408,
	-247, -190, -410, 513, -406, -401, -89, -449, -73, -86,
	-94, -113, -126, -162, -163, 506, -248, 513, 172, 513,
	515, -453, 172, -300, -232, -248, -261, -262, -267, 125,
	-311, -515, 453, -300, -222, 37, -387, -423, -424, -471,
	517, -470, -426, -436, -432, -435, 324, 325, -455, 52,
	474, -438, 217, 4, -462, -464, 214, 215, 405, 49,
	341, 164, 114, 113, 289, 54, 438, 439, 440, 441,
	176, 177, 56, 475, 416, 66, 67, -515, 453, -300,
	169, -349, -452, -311, 37, -363, 2, 115, -457, 42,
	-558, 518, 247, -271, 258, 281, 188, 297, 487, 290,
	-459, 5, 4, -386, -398, 115, 252, 217, -443, -445,
	8, -444, 9, -446, 504, 505, -451, -450, 99, 515,
	-453, -206, 354, 393, -205, 23, 28, 130, 471, 147,
	-281, 209, 311, 315, 141, 409, 461, -526, -527, 377,
	433, 434, 87, 290, 393, 354, 141, -329, -331, 37,
	107, 276, 310, 59, 202, 263, 264, 411, 479, 141,
	393, 354, -527, 354, -527, -208, 409, 461, -526, -527,
	377, 354, -207, -281, 141, 517, 23, 354, 393, 311,
	-542, -543, 130, 28, 354, 311, -523, -494, 483, 141,
	-411, 192, -109, 239, -109, -307, 518, 518, -453, 506,
	379, 378, 141, 141, 141, 141, 169, 2, 2, 282,
	2, 2, 2, 174, -529, -547, 2, 2, -248, 192,
	-293, 296, -518, -308, 427, -248, 282, -250, 192, 2,
	-253, 477, -523, 282, -252, 192, -248, 37, 513, 2,
	-349, 2, 207, -494, 282, -412, -264, -248, -407, -264,
	393, -241, 37, -373, -373, 141, 2, 2, 2, -219,
	-209, 518, 61, 360, 141, -309, 192, -209, 141, -209,
	141, -268, 192, -267, -209, 141, -209, 518, 141, -209,
	518, 141, 518, 141, 514, 518, -420, -420, -460, -171,
	483, 172, 95, 513, 513, -183, -417, 518, -416, -461,
	-110, -460, -460, -518, -232, 2, -248, 2, 427, 228,
	-460, -171, 199, -460, -460, -460, -452, 27, 395, 2,
	336, 391, 86, 395, 2, -248, 427, 109, 207, 77,
	-521, 169, -516, 367, -515, -248, 109, -248, 109, -248,
	109, -248, -248, 2, 2, 2, 2, 82, 82, 2,
	44, -538, 169, 2, 445, 2, 445, 2, -219, -219,
	-219, 412, 247, -248, 169, 427, 207, 427, 207, 109,
	427, -209, 518, -223, -195, -324, -452, -325, -324, -196,
	-195, -198, 169, 340, 462, 276, 396, 232, -353, -352,
	27, -376, -357, 163, 275, -376, -355, -378, 504, 505,
	-444, -446, -310, 290, -189, -189, -189, -297, -403, -376,
	331, 207, -425, -423, -423, -246, -453, 438, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, 248, 196, 398, 48, 199, -376, 442,
	-376, -376, -376, -376, 270, 282, 286, 450, 154, 459,
	126, 290, -561, 422, 39, -383, -190, -315, 513, -397,
	34, 408, 27, -390, 513, 2, -371, -376, -372, -312,
	-311, -311, 514, 476, 27, 126, 506, 2, 514, 518,
	37, 514, -376, -312, -389, -385, -311, -396, -395, 480,
	-344, -345, 488, 266, 112, 190, 265, -346, 384, -447,
	8, -453, 506, -501, 162, 183, 513, 514, 2, 514,
	2, 514, -376, 2, 514, -376, 2, 514, -376, 2,
	514, -376, 2, 514, 2, -376, -376, -376, -376, -376,
	-376, -376, -311, 8, -447, -447, 438, 438, -447, -447,
	-447, -439, 324, 250, 325, 178, 269, 267, 268, 177,
	-439, -338, 2, -441, -311, 4, 488, 266, 112, 190,
	265, 384, 5, -338, 2, -339, 2, -376, -311, -340,
	-377, -378, 504, 505, 497, -390, -341, 2, -376, -312,
	-376, 55, 242, 444, -342, -376, 172, -311, -311, 2,
	-311, 2, -498, 37, -311, -303, 518, 172, 37, 4,
	-303, -303, 513, 514, 518, -337, 187, 262, 257, -337,
	-406, -336, 227, -334, 306, -334, -334, -401, -233, 511,
	519, -453, -401, -400, -399, 37, -241, 303, -401, -401,
	515, 514, -400, 512, -513, 513, 516, 516, 516, 516,
	516, -248, 513, -311, -453, 515, 414, 514, 221, 221,
	221, 221, 372, 514, 442, -517, -256, 483, -88, 298,
	514, 518, -302, 36, 511, 515, -447, 2, 2, -442,
	478, 513, 513, -345, 513, 172, -517, -301, -252, -539,
	514, 446, -364, -270, 340, 407, 355, 388, 424, 8,
	9, 8, 9, 518, -453, 518, -540, 89, 442, 75,
	380, -367, 192, 75, -472, -235, 89, -473, -219, 69,
	458, 331, 171, 139, -540, 89, 331, -540, 89, 89,
	393, 412, 442, 58, -411, 40, 40, 27, -113, 243,
	172, 489, 427, 207, 380, 442, -411, -331, -423, 107,
	263, 264, 58, -448, -443, 504, 505, -448, 58, -448,
	-448, -448, 483, -250, -411, 380, 442, 442, 518, 40,
	40, 27, -113, 243, 172, 442, -267, -233, 472, 41,
	472, 442, 41, 380, 442, 518, 41, 41, 442, 442,
	-524, -224, 96, 277, 256, 278, -225, -226, 317, 470,
	-460, 393, 354, 141, -417, 199, -417, -259, -219, 515,
	-113, -376, -376, -113, -376, -113, 44, 141, 2, -555,
	236, 513, -274, 282, 172, -300, -418, 218, 518, -308,
	141, -330, -329, 282, -252, 192, 2, 141, -291, 282,
	135, 513, 338, 2, -234, 192, -220, -219, -349, -212,
	430, 141, -328, 468, -358, -113, 513, 115, 37, -358,
	-319, -320, -415, -321, -235, 513, -241, -219, 2, -248,
	-309, -209, 141, -309, -309, -209, 518, 141, -232, -251,
	-256, -257, -258, -460, -461, -88, -419, 514, 514, 514,
	-170, 300, -169, -219, 5, -183, 468, -273, -368, -367,
	-476, -477, -472, 248, 207, 458, 220, 155, -292, -236,
	-235, 108, -177, 483, -109, 514, -417, 199, -171, -171,
	-417, -417, -248, 169, -460, -171, -171, -171, 2, 2,
	-333, -248, -232, -267, -248, -300, -300, -333, -232, -333,
	-232, -333, -232, -113, -376, 2, 390, 169, 169, 515,
	-333, 338, 109, 427, 315, 207, -248, -267, -248, -267,
	-232, -248, -411, -325, -196, 297, 232, 396, -355, -356,
	-378, 371, 372, -356, 371, 372, 8, 9, 8, 9,
	-200, 400, 285, -309, 518, -203, 38, 122, 232, -248,
	489, 137, -376, -376, 442, -561, 422, -383, 137, -376,
	270, 286, 450, 154, 459, 126, 290, 172, 513, -377,
	-377, 514, -313, -376, -376, 512, 521, 514, -296, 518,
	-294, -376, -311, -311, 514, 515, -311, -300, 512, 512,
	518, 514, -394, -395, 131, -376, 442, 442, 442, 442,
	513, 514, 515, -506, 307, 513, 513, -376, 514, 514,
	514, 514, 37, 518, 518, 518, 514, 518, 518, 518,
	514, 514, 514, 518, 514, 489, 489, 514, 514, 514,
	514, 518, 514, 518, 514, 172, 514, 514, -347, 321,
	514, 11, 12, 504, 505, 506, 507, 167, 508, 509,
	502, 503, 501, 494, 495, 496, 83, 259, 373, 14,
	15, 16, 221, 199, -377, -377, -377, 514, -381, -382,
	172, 169, 37, -342, -342, -342, 514, 172, -311, 514,
	514, 513, -499, 261, 282, 514, -370, -369, 481, -414,
	-304, 2, -406, -243, -453, -370, -370, -311, -376, 227,
	227, -335, 468, 296, -337, -406, -400, -449, -375, -374,
	170, 38, 122, 279, 195, -400, -241, -291, -400, -400,
	-453, -401, -401, -399, 514, -514, -449, 514, -305, -409,
	-493, -296, 515, -453, -180, -494, -159, 5, 286, -159,
	-159, -159, -300, 442, 24, 322, -423, 511, 512, 8,
	-453, 513, -447, -447, -447, -300, 172, 172, -450, -363,
	456, 80, 340, 438, -450, -205, 354, -235, -235, -248,
	-257, 282, -367, 192, -211, 282, -423, -242, -219, 513,
	513, 232, 232, 468, -235, -242, 232, 192, -235, 192,
	-242, -242, -525, 340, 291, -376, -458, -457, 106, 392,
	251, 338, 283, -206, 354, 393, -113, -113, -113, 513,
	-539, 468, 125, -248, -267, -248, -257, -252, 393, 354,
	280, -261, -448, -448, -329, 393, 354, -257, -250, -232,
	-207, -113, -113, -113, 513, -233, -208, 354, 5, 192,
	-235, 5, -219, -235, -257, -458, -543, 23, -235, 192,
	-235, -257, -458, -224, -460, 286, 464, -523, 380, 442,
	-411, -174, 483, -109, -168, 203, 506, -520, -219, 477,
	-219, -272, -275, -273, -235, -186, -187, 485, 483, 141,
	-265, -248, 511, -171, -460, -248, -257, 141, -291, 282,
	-460, 37, 141, 513, 2, 2, 296, 282, -234, 192,
	-213, 132, -559, 496, -232, -370, -304, -327, -361, 362,
	296, -292, 473, -241, -327, -306, 518, 172, 496, 515,
	-292, 2, -209, -309, -209, -209, -267, -268, -209, -209,
	-209, -88, -88, -171, 518, 513, 496, 496, 513, -460,
	-460, 514, 518, -248, -234, 207, 207, -240, -220, 514,
	518, 515, 513, -179, 300, -178, 133, 234, 219, 401,
	402, 403, 404, 124, -177, -110, 172, -50, 483, 427,
	-171, 517, -333, -333, -333, 390, 390, -219, -244, -232,
	-248, -245, -267, 169, 169, 462, -356, 297, 255, -403,
	-204, 288, -248, 517, -376, -376, 137, 137, -376, -377,
	-377, -376, 137, 172, 513, -376, -387, 32, 32, 514,
	518, -372, -376, 514, 476, -296, -296, 514, 506, -453,
	517, 514, -385, 134, -376, 436, 266, 190, 265, -346,
	265, -346, -346, -447, 5, -453, 506, -507, -238, 513,
	-219, 481, -295, 302, 514, -425, -423, -376, -376, -376,
	-376, -376, -447, -428, -428, -443, -443, -376, -381, -376,
	-425, -423, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, 126, 282, 290, -377, -382, -381, -376, -376, -423,
	514, 514, 514, -311, -88, 513, 261, -323, 183, -376,
	-417, 518, -323, -323, 514, -406, -406, 513, -376, 227,
	512, 518, 520, 496, -291, 515, -399, -400, 512, 514,
	518, 514, 518, -360, 37, 514, -453, -182, -181, 123,
	51, -300, 299, 5, 8, 511, 512, 515, -447, 514,
	514, 514, -300, -300, -376, 442, 442, 141, 282, 470,
	-478, -473, 139, -376, -298, -404, -376, 513, 513, 2,
	-202, 130, 393, -541, 2, 468, 141, -209, 141, -209,
	487, 513, 513, 442, 380, 483, -311, -376, -172, 115,
	-452, -527, 517, -527, 517, 380, 442, 380, 442, 483,
	-311, 442, -427, 46, 25, 282, -251, 442, 442, -209,
	141, 453, 393, -460, 286, -257, -252, 393, 354, -176,
	300, -175, 133, 364, 124, 234, -417, -174, 172, 218,
	2, -252, 2, 514, 514, 518, -479, 37, 294, 294,
	513, -248, -69, 483, -416, -449, -250, 37, 141, -523,
	-113, -252, -421, -422, 5, -248, 141, 296, 282, -214,
	241, -559, -457, -494, -296, -327, -318, 283, 88, 514,
	-370, -320, -304, -376, 2, 514, -209, -209, -169, -170,
	-460, -460, -460, -171, -183, -183, -368, -276, 513, -234,
	-220, 513, -183, -236, 2, -461, 518, 513, 496, 496,
	496, -417, -113, 300, -248, 506, -333, -283, -282, 315,
	290, -283, 371, 371, 297, 163, 237, -203, -233, -376,
	-376, 137, 32, 32, -376, -376, -387, 514, -376, -376,
	-311, 512, 5, -376, 514, 514, 8, -376, 514, 515,
	-508, -219, -376, 514, 58, 514, 514, 518, 518, 514,
	514, 514, 514, 514, 514, 514, -382, 172, 126, 290,
	513, 514, 514, -88, -384, 186, 58, -406, -384, -384,
	-335, -300, -406, -374, -233, 511, -453, -449, -409, 513,
	515, -181, 496, 512, 2, 511, -453, 514, -235, -235,
	-367, 141, -480, 89, -482, 73, 155, 95, 282, 286,
	458, 331, 69, 115, 345, -551, 37, 493, 514, 514,
	518, -203, -298, -300, 282, 419, 115, 282, 115, 108,
	453, 76, -235, -242, -300, -300, -248, -257, 148, 514,
	518, 496, 2, 506, 506, -257, -252, -257, -250, 148,
	514, -233, 5, 5, 141, -230, 73, 5, -235, -235,
	-251, 108, 380, 442, 518, 513, 496, 496, -174, -461,
	-109, -291, -279, 210, -235, -477, -474, -475, 331, -481,
	-483, 155, 331, -113, 2, -185, -184, -219, 5, 513,
	-274, 300, 512, -330, -113, -252, -291, 514, 518, -351,
	468, -233, -248, 141, -215, 240, -559, -457, -212, -354,
	-352, -359, 513, 296, -113, -296, 496, 514, 514, 108,
	108, 201, 140, -298, 513, 513, -300, 108, 514, -178,
	-179, -460, -109, -460, -177, -51, -52, 207, 89, 320,
	-245, 427, 207, 513, 513, -203, -376, -376, -376, 514,
	-296, -453, 506, -502, 315, 514, -403, -376, -376, -377,
	172, 513, -387, 514, -503, 482, -376, -311, -503, -503,
	514, -449, 2, -460, 511, 2, -367, -242, -246, -239,
	-219, 155, 192, 286, 232, 513, -377, -248, 513, 2,
	29, -552, 119, 211, -366, -553, 94, 420, 200, -404,
	-204, 514, 514, 286, 286, -376, -423, 513, -209, -209,
	514, 514, -376, 442, -452, 93, -450, 2, -527, -376,
	442, 5, -209, -246, -209, -209, -230, 453, -257, -252,
	-175, -176, -460, -109, -174, 37, -280, -281, 199, -479,
	232, -239, 232, -550, 483, 514, 518, 496, 496, -272,
	-186, -70, -71, 443, -416, -291, 37, 5, 513, -219,
	296, 513, -233, -559, -457, -213, -327, 127, -300, 89,
	-354, -383, -171, 513, 513, -277, 78, 90, 116, 191,
	175, 208, 412, 417, 27, -277, 514, -298, -298, 514,
	513, -171, 514, 518, 27, 513, 27, 513, -248, -267,
	-311, -311, 514, -296, 58, 518, 514, 514, -377, -387,
	514, -504, -505, -238, 512, 2, -482, -239, 282, 468,
	-376, -221, 513, -376, 37, 211, 120, 197, -279, 513,
	-365, 468, 345, -230, -298, 513, 513, 513, 496, 172,
	513, -427, -209, -251, 514, -533, 343, -113, -186, 313,
	513, -278, 296, 108, 276, -184, -450, -450, 514, 37,
	-71, 9, 37, -113, -298, -248, -298, 296, -457, -214,
	462, 283, 514, -242, -327, -461, -461, -365, 514, 514,
	-461, -52, -300, -300, 514, 514, -509, 338, 372, 185,
	-311, -297, 514, 518, 37, 141, 187, 514, -484, 260,
	-219, 514, 120, 197, -280, -300, -279, 187, -248, -528,
	468, 514, -285, -284, -282, -287, -286, -282, -311, -450,
	93, 313, -311, -230, -536, 173, -535, 5, 10, -278,
	-248, -299, -405, -235, 79, 108, -279, -113, -113, 514,
	-351, 514, -248, -215, 393, -369, 514, 514, -366, -365,
	-187, 483, 514, 514, 514, 514, -510, -511, 48, 455,
	99, -376, -510, -510, -505, -507, 155, 483, -485, -488,
	-487, 296, 399, 173, 314, 514, 419, 479, -552, 514,
	483, -291, -376, -365, 514, 518, 473, 514, 518, 473,
	514, 172, 514, -209, -173, 483, 44, 513, 514, 518,
	330, 121, 130, -280, -550, -365, 513, -366, 513, -319,
	-171, -171, -279, -366, -370, -171, -512, 139, -511, 327,
	168, 371, 327, 168, -512, -512, -239, 53, -487, 296,
	-488, 296, 462, 121, -370, 53, -484, -279, -284, 199,
	-286, 172, 313, 144, -535, 29, -300, -405, 372, 372,
	2, -186, -278, -366, -298, -279, -298, -370, -280, -279,
	99, 183, 437, 276, 32, 496, -486, 276, 360, 61,
	393, -486, 496, -485, 513, 513, 378, 514, 2, -278,
	-279, 514, -280, 514, -187, -280, 371, 304, -511, -376,
	22, 286, 115, -376, -552, -311, -311, 300, -210, 61,
	360, -280, -365, -187, -366, -370, -187, 514, 514, -170,
	513, -187, -366, -370, -279, -370, -280, 442, -170, -370,
	-279, -280, 513, 514, -280, -187, -311, -187, -370, 514,
	-370, -280,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 474, 475, 477, 478, 479, 481, 482, 484,
	486, 488, 489, 490, 492, 493, 495, 496, 497, 498,
	499, 501, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 565, 0, 1163,
	1165, 1167, 1169, 0, 699, 0, 32, 33, 0, -2,
	276, 278, 280, 0, 306, 308, 309, 311, 313, -2,
	0, 407, 408, 410, 412, -2, -2, 0, 861, 863,
	0, 552, 554, 0, 866, 868, 0, 0, 574, 575,
	0, 1251, -2, 568, 570, 572, 637, 639, 641, 643,
	645, 647, 649, 651, 652, 654, 656, 658, 660, 662,
	664, 666, 668, 669, 671, 673, 675, 677, 679, 681,
	683, 685, 687, 689, 691, 693, -2, 695, -2, -2,
	0, -2, -2, -2, 1181, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 358, 359, 361, 363, 365, 367,
	370, 372, 374, 1309, 414, 416, 418, 420, 422, 424,
	426, 0, -2, 1321, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 80, 81, 82, 83, 84,
	85, 86, 87, 66, 67, 69, 70, 71, 75, 76,
	78, 64, 0, 0, 1282, 1284, 1286, 1288, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 476, 480, 483, 485, 487, 491, 494, 500, 502,
	504, 461, 462, 465, 1942, 1959, 1960, 1961, 1964, 1965,
	1966, 1967, 1968, 1969, 2345, 2426, 2427, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 463, 464, 1021, 0, 528, 526, 1935, 529,
	2165, 531, 533, 401, 402, 403, 404, 405, 406, 0,
	545, 538, 544, 546, 548, 549, 550, 551, 523, 521,
	0, 545, 1994, 543, 1161, 1162, 1146, 1147, 2203, 1188,
	0, 190, 564, -2, -2, -2, 2311, -2, 596, -2,
	603, 2315, 2205, 608, 0, 610, -2, 613, 1164, 1166,
	1168, 697, 698, 1945, 0, 0, 0, 0, 34, 35,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 1071, 1072, 0, 194, 196, -2, -2, -2,
	-2, 0, 0, 2243, 2037, 1903, 1961, 1906, 1901, 277,
	279, 281, 282, 0, 0, 0, 0, 0, 0, 307,
	310, 312, -2, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 916, 908, 909, 1113, 0, 0, 0,
	0, 409, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 338, 466, 467, 0, 1310, 1310, 0, 0, 0,
	0, 251, 242, 862, 864, 865, 0, 0, 0, 0,
	553, 555, 0, 0, 224, 867, 869, 870, 0, 0,
	0, 0, 0, 253, 0, 0, 569, 571, 573, 638,
	640, 642, 644, 646, 648, 650, 653, 655, 657, 659,
	661, 663, 665, 667, 670, 672, 674, 676, 678, 680,
	682, 684, 686, 688, 690, 692, 694, 704, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	786, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 707, 709,
	710, 711, 0, 766, 784, 785, 794, 696, 0, 1061,
	1311, 1190, 1171, 1185, 1190, 1173, 1174, 1175, 1176, 1177,
	1182, 1184, 1178, 1179, 1180, 37, 39, 41, 43, 45,
	47, 49, 51, 53, 360, 362, 364, 366, 368, 371,
	373, 375, -2, 1280, 1281, 415, 417, 419, 421, 423,
	425, 427, 556, 0, 558, 0, 708, -2, 0, 1315,
	1315, 1315, 0, 0, 1281, 1279, 0, 561, 562, 617,
	618, 1546, 0, 0, 0, 0, 0, 0, 0, 1800,
	1632, 0, 619, -2, 1663, 1665, 2286, 2311, 1799, 1667,
	1668, 1669, 1670, 1671, 0, 1673, 1674, 1675, 1676, 1677,
	1678, 0, 1680, 0, 1685, 1686, 1687, 0, 2293, 1880,
	1955, -2, 0, 0, 2299, 1951, 0, 1766, 1703, -2,
	-2, 1978, 1957, 1478, 1479, 1480, 1481, 1482, -2, -2,
	2328, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 0, 2274, 2294, 2295, 2300, 2302, 2296, 2283,
	1728, 2049, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1505, 1514, -2, -2, -2,
	-2, -2, -2, -2, 2287, 2288, 2305, 2308, 2314, 2319,
	2320, 2292, 2301, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 1506,
	-2, -2, -2, -2, 1298, 2176, 1301, 1021, 1299, 1283,
	1285, 0, 1287, 0, 0, 0, 1292, 1318, 1316, 0,
	1359, 1296, 1297, 1377, 1377, 1401, 0, 1382, 0, 1401,
	1310, 1427, 0, 1388, 2195, 1704, 1705, 0, 1961, 1956,
	-2, -2, 2326, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 530, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 1187, 1112, 566, 567, 0, 591, 0, 595,
	2282, -2, 2002, 2214, -2, 599, 1191, 1195, 1196, 1197,
	1198, 0, 0, 0, 0, 0, 605, 0, 0, 592,
	593, 611, 614, 0, 700, 701, 702, 703, 63, 0,
	2294, 1427, 65, 0, 1925, 1986, 1987, 1988, 1989, 1990,
	2327, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2328, 68, 0, 2294, 72, 0, 2294, 0, -2,
	77, 0, 1931, 79, 0, 1928, 88, 0, 2294, 0,
	1900, -2, 0, 175, 1939, 0, 887, 1941, -2, 2294,
	1069, 254, 255, 1974, 1975, 1982, 1983, 1984, 1985, 0,
	0, 0, 0, 854, 1897, 1902, 855, 1921, 856, 1907,
	0, 283, 284, 285, 286, 287, 0, 288, 2294, 290,
	291, 0, 293, 294, 2294, 296, 297, 0, 299, 0,
	207, 208, 315, 316, 0, 318, 0, 2294, 0, 0,
	0, 324, -2, 339, 0, 336, 327, 328, 330, 331,
	332, 333, 0, 379, 377, 1936, 0, 882, 2294, 884,
	0, 0, 1092, -2, 2294, 1066, 0, 1098, 1094, 0,
	-2, 0, 1308, 2294, 1205, 912, 913, 914, 915, 0,
	398, 0, 1218, 0, 1220, 0, 1241, 1433, 1377, 1377,
	0, 340, 341, 342, 343, 344, 2294, 0, 0, 0,
	349, 0, 351, 352, 353, 354, 355, 356, 357, 164,
	2294, 432, 459, 0, 164, 2294, 435, 164, 2294, 438,
	0, 441, 1111, 164, 2294, 444, 164, 2294, 447, 449,
	164, 2294, 453, 454, 456, 2294, 458, 256, 1157, 1158,
	1159, 1160, 0, -2, 517, 1944, -2, 469, 0, 470,
	0, -2, 0, 268, 0, 0, 871, 872, 873, 874,
	875, 878, 879, 880, 881, 1414, 227, 225, 0, 0,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 0,
	0, 576, 0, 0, 705, 706, 0, 0, 716, 717,
	718, 0, 268, 2206, 2173, 2069, 725, 0, 728, 731,
	-2, 0, 0, 0, 0, 735, 0, 740, 741, 742,
	0, 744, 860, 746, 0, 0, 748, 0, 752, 0,
	755, 0, 757, 0, 759, -2, -2, -2, 770, -2,
	0, 773, 775, 0, 777, -2, 0, 786, 782, 783,
	0, 0, 0, 0, 802, 803, 0, 808, 0, 811,
	812, 813, 0, 815, 816, 0, 818, 819, 820, 821,
	0, 823, 824, -2, -2, 828, 830, 0, 837, 0,
	841, 0, 845, 0, 712, 713, 164, 1431, 1170, -2,
	1172, 0, -2, 0, 557, 0, 560, 1338, 1266, 1263,
	0, 1335, 1336, 1267, 0, 0, 0, 1274, 0, 1313,
	1314, 0, 0, 0, 1253, 1254, 0, 0, 0, 0,
	1805, 1806, 1807, 1808, 1809, 1810, 1813, 1814, 1811, 1812,
	1815, 1816, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	1819, 1820, 0, 0, 1822, 0, 1824, 0, 0, 0,
	0, 0, 0, 1611, 1613, 1888, 0, 0, 1821, 1551,
	1552, 1553, 1554, 1555, 1590, 1591, 0, 0, 1664, 1885,
	1884, 1666, 0, 1836, 0, 1679, -2, 0, 1800, 1831,
	0, 0, 1688, 1689, 1690, 0, 0, 1836, 0, 0,
	1879, 1700, 1701, 1543, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 1491, 0, 1493, 0, 1494,
	1495, 1502, 1515, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1860, -2, 0, 0, 0,
	0, 1507, 0, 1300, 0, 0, 1363, 1889, 1893, 1894,
	1363, 1363, 0, 0, 1837, 1424, 1424, 0, 0, 1420,
	1420, 1420, 1418, 1401, 0, 1401, 1411, 0, 1401, 1401,
	0, -2, 1382, 0, 0, 1411, 0, 1395, 505, 507,
	509, 511, 512, 513, 515, 1428, 1429, 0, 0, 0,
	0, 1962, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 2252, 535, 547, 1310, 0, 1839, 1450, 1454,
	0, 1456, 1457, 1458, 1459, 1460, 0, 0, 1451, -2,
	1503, 1505, 1526, 1979, 1980, 1981, 1486, 1487, 1488, 1489,
	1490, 1498, 1485, 1485, 1485, 1496, 1525, 1517, 1525, 1521,
	1471, 1472, 1473, 1508, 1509, 1510, 1511, 0, 2252, 540,
	0, 0, 0, 0, 0, -2, 601, 606, 607, 0,
	0, 1193, 0, 1199, 628, 629, 630, 1201, 1202, 0,
	604, 631, 632, 633, 634, 635, 636, 0, 1909, 1910,
	1911, 1912, 1915, 1916, 0, 0, 602, 621, 609, 0,
	615, 89, 1143, 0, 128, 0, 1143, 1143, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 113, 124,
	101, 102, 0, 0, 0, 0, 0, 73, 1043, 0,
	1046, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 0, 112, 0, 107, 91, 0, 0, 0, 114,
	126, 0, 155, 157, 0, 0, 0, 0, 0, 0,
	174, 182, 0, 0, 0, 0, 1067, 0, 1307, 0,
	0, 2294, 1414, 2107, 1414, 853, 0, 0, 1962, 1905,
	0, 0, 0, 0, 0, 0, 0, 317, 319, 0,
	321, 322, 323, 0, 1091, 0, 329, 369, 992, 2294,
	0, 0, 396, 391, 0, 393, 0, 1042, 2294, 1040,
	1940, 0, 1064, 0, 1021, 2294, 1938, 0, 0, 1099,
	1971, 1108, 1112, 1207, 0, 400, 0, 1221, 1223, 0,
	0, 1434, 0, 1436, 1437, 0, 346, 347, 348, 0,
	428, 0, 162, 163, 0, 164, 2294, 433, 0, 436,
	0, 164, 2294, 1895, 442, 0, 445, 0, 0, 451,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 231, 0, 1413, 0,
	1414, 225, 268, 268, 1414, 578, 1414, 580, 0, 0,
	719, 720, 0, 268, 268, 268, 726, 727, 729, 730,
	-2, -2, 838, 732, 733, 805, 0, 0, 0, 804,
	745, 0, 847, 2191, 858, 805, 2037, 805, 2037, 805,
	2037, 756, 758, 761, 797, 769, 774, 0, 0, 779,
	787, -2, 0, 789, 0, 791, 0, 793, 805, 806,
	809, 814, 817, 822, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 1183, 1338, 1266, 559, 1257, 1337, 1258,
	1265, 1268, 0, 0, 1270, 0, 1272, 0, 1333, 1334,
	1341, 1342, 0, 1352, 1353, 1345, 0, -2, 0, 0,
	1348, 1349, 1276, 0, 1293, 1294, 1295, 1322, 1325, 1122,
	0, 2426, 1547, 1445, 1548, 1549, 1924, 0, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, -2, -2,
	-2, -2, -2, -2, -2, -2, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, -2, -2, -2,
	1588, 1589, -2, 1823, 1825, 0, 1888, 0, -2, 0,
	-2, -2, -2, -2, 1608, 0, 1610, 1615, 1617, 1619,
	0, 0, 0, 0, 1887, 1629, 1871, 1872, 0, 0,
	1802, 1803, 1804, 1614, 0, 1633, 1886, 1883, 0, 0,
	1835, 1321, 1692, 0, 0, 0, 0, 1699, 1684, 1833,
	0, 1832, 0, 0, 0, 1843, 0, 1878, 1874, 0,
	1922, 1542, 1529, 1530, 1531, 1532, 1533, 1534, 1544, 0,
	1919, 1948, 1954, 1776, 0, 0, 0, 1729, 1730, 1731,
	1732, 1733, 0, 1735, 1736, 0, 1738, 1739, 0, 1741,
	1742, 0, 1744, 1745, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	0, 0, 1748, 0, 1846, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1750, 0, 1752, 1837, 1857, 0,
	0, 1634, 0, 0, 0, 1800, 0, 1755, 1837, 1865,
	0, 0, 0, 0, 0, 1837, 0, 1870, 0, 1762,
	0, 1764, 1302, 0, 0, 1440, 0, 0, 0, 1892,
	1440, 1440, 0, 1358, 0, 0, 1421, 1422, 1423, 0,
	0, 1424, 0, 1415, 1419, 1416, 1417, 1411, 1374, 0,
	0, 1926, 1411, 1380, 1410, 0, 1021, 1400, 1411, 1411,
	0, -2, 1384, 1401, 0, 0, 506, 508, 510, 514,
	516, 0, 0, 1321, -2, 0, -2, 1020, 0, 0,
	0, 0, 525, 527, 0, 0, 448, 0, 519, 0,
	522, 0, 1441, 1444, 0, 0, 1455, 1461, 1462, 0,
	-2, 0, 0, 1527, 0, 0, 0, 0, 189, 0,
	594, 0, 1192, 1200, 0, 625, 0, 627, 0, 1913,
	1917, 1914, 1918, 0, 616, 0, 0, 0, 0, 1142,
	0, 132, 2294, 0, 166, 0, 0, 985, 1932, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 1044, 1045, 1047,
	1054, 1056, 0, 1050, 1920, 0, 0, 1051, 0, 1053,
	1055, 1057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 104, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 1085, 1079, 1080, 1081, 1082, 1083, 1084, 0, 0,
	-2, 0, 0, 0, 199, 0, 259, 1898, 1908, 0,
	876, 877, 289, 292, 295, 298, 195, 0, 325, 0,
	0, 918, 893, 0, 0, 378, 268, 0, 0, 392,
	0, 1038, 1041, 0, 1021, 2294, 1078, 0, 0, 0,
	0, 0, 0, 1097, 0, 2294, 1927, 1970, 1971, 1209,
	1215, 0, 1440, 0, 1239, 1224, 0, 0, 0, 1239,
	1243, 1244, 1246, 1247, 0, 0, 1435, 0, 350, 460,
	164, 430, 0, 164, 164, 439, 0, 0, 164, 450,
	164, 455, 164, 257, 457, 468, 518, 1310, 1310, 268,
	266, 2148, 264, 261, 263, 0, 0, 0, 919, 921,
	922, 923, 924, 0, 1971, 0, 2096, 1971, 0, 1227,
	1229, 0, 221, 0, 228, 226, 231, 0, 0, 390,
	577, 582, 714, 0, 268, 722, 723, 724, 763, 799,
	734, 736, 737, 738, 0, 859, 857, 747, 805, 750,
	805, 753, 805, 772, 776, 781, 788, 0, 0, 0,
	801, 0, 0, 0, 0, 0, 0, 0, 842, 843,
	844, 846, 1432, 1261, 1262, 1264, 0, 1273, 0, 0,
	1347, -2, -2, 1346, 1350, 1351, -2, -2, -2, -2,
	1269, 0, 1278, 1275, 0, 1332, 1120, 1121, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1630, 0, -2,
	1609, 1612, 1616, 1618, 1620, 0, 0, 0, 0, 0,
	0, 1826, 0, 1828, 1631, 1881, 1884, 1798, 0, 0,
	1320, 1321, 1321, 0, 1698, 0, 1834, 0, 1841, 1842,
	0, 1691, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 1734, 1737,
	1740, 1743, 0, 0, 0, 0, 1723, 0, 0, 0,
	1727, 1497, 1483, 0, 1525, 1523, 1524, 1518, 1525, 1522,
	1475, 0, 1474, 0, 1747, 0, 1749, 1751, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1637, 1638, 1639, 1754, 1863, 1864,
	0, 0, 0, 0, 0, 0, 1760, 0, 1869, 1761,
	1763, 1310, 0, 1303, 0, 1360, 1355, 1439, 0, 1890,
	1414, 1362, 1364, 1891, 1929, 1355, 1355, 0, 1838, 0,
	0, 1405, 0, 0, 0, 1407, 1378, 0, 0, 1372,
	0, 1368, 1369, 1370, 1371, 1379, 1021, 1409, 1381, 1385,
	1948, 0, 1411, 0, 1396, 0, 1398, 1430, 0, 1390,
	1393, 0, 0, 1963, 269, 0, 300, 304, 305, 301,
	302, 303, 534, 0, 0, 0, 1840, 0, 1446, 0,
	1452, 0, 0, 0, 0, 539, 0, 0, 590, -2,
	623, 624, 626, 0, 622, 129, 1143, 0, 0, 1124,
	1126, 0, 134, 2294, 143, 0, 959, 0, 1930, 0,
	0, 0, 0, 0, 1145, 0, 0, 2294, 164, 2294,
	164, 146, 149, 0, 154, 151, 152, 179, 180, 181,
	0, 0, 950, 90, 1143, 0, 93, 97, 105, 0,
	0, 0, 111, 0, 0, 0, 1128, 1134, 0, 0,
	1048, 1049, 1052, 1058, 74, 0, 0, 1132, 1138, 1123,
	156, 95, 99, 106, 0, 1140, 92, 0, 178, 0,
	0, 0, 170, 0, 171, 172, 183, 0, 164, 2294,
	0, 885, 886, 1086, 1062, 1063, 0, 1068, 0, 0,
	0, 191, 0, 1414, 199, 0, 1904, 0, 0, 0,
	0, 0, 0, 917, 1003, 0, 890, 0, 0, 0,
	384, 380, 0, 389, 395, 394, 883, 0, 0, 0,
	-2, 0, 0, 1101, 1095, 1096, 0, 0, 0, 2294,
	1211, 1215, 0, 1214, 1308, 1321, 399, 1216, 1239, 0,
	0, 0, 1226, 1222, 1219, 1440, 0, 0, 0, 0,
	0, 345, 429, 164, 434, 437, 1896, 164, 443, 446,
	452, 471, 472, 243, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 928, 0, 1971, 1971, 0, 1934, 0,
	0, 0, 0, 229, 0, 232, 0, 0, 0, 237,
	238, 239, 240, 241, 222, 1414, 0, 579, 0, 0,
	721, 0, 749, 751, 754, 790, 792, 805, 831, 832,
	945, 0, 945, 0, 0, 1271, 0, 1344, 1277, 1326,
	1327, 0, 1122, 0, 1550, 1593, 0, 0, -2, 0,
	0, 1597, 0, 0, 0, -2, 0, 0, 0, 1827,
	1829, 0, 1883, 1693, 0, 0, 0, 1697, 1681, 1682,
	0, 1801, 1844, 1873, 1877, 0, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 0, 1923, 1949, 1953, 1774, 1775, 1779,
	1937, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 1520, 0, 0, 1845, 1856, 1858,
	1635, 1636, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, -2, -2, -2, 1653, 1654, 1655, -2, -2,
	-2, 0, 0, 0, 1859, 1861, 1862, 1866, 1867, 0,
	1757, 1758, 1759, 1868, 0, 1310, 1304, 1357, 0, 1438,
	1361, 0, 1357, 1357, 1317, 1403, 0, 0, 1426, 0,
	1375, 0, 1376, 0, 1408, 0, 1383, 1386, 1387, 1397,
	0, 1389, 0, 1392, 0, 1693, -2, 270, 272, 0,
	275, 537, 536, 520, 0, 0, 1448, 0, 0, 1500,
	1504, 1528, 542, 541, 1412, 0, 0, 0, 0, 165,
	957, 984, 0, 0, 0, 1115, 1122, 0, 0, 990,
	136, 0, 0, 0, 144, 0, 0, 141, 0, 148,
	153, 0, 0, 0, 0, 0, 0, 108, 109, 110,
	0, 115, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 1119, 0, 0, 185,
	0, 0, 0, 1089, 1090, 1129, 1135, 0, 0, 197,
	0, 200, 0, 203, 204, 0, 199, 193, 0, 0,
	320, 1021, 326, 939, 991, 0, 993, 0, 891, 0,
	0, 992, 376, 0, 383, 0, 1042, 0, 0, 1065,
	1076, 1021, 0, 1100, 1102, 1110, 0, 0, 0, 1213,
	1215, 0, 1206, 1207, 1340, 1217, 1237, -2, 1236, 0,
	1321, 1245, 1242, 1248, 1249, 0, 431, 440, 265, 0,
	260, 262, 0, 246, 0, 0, 920, 925, 0, 0,
	0, 0, 0, 1228, 1230, 0, 0, 0, 0, 0,
	0, 231, 252, 0, 715, 739, 800, 833, 944, 0,
	0, 835, 0, 0, 1343, 1330, 1331, 1328, 1122, 1595,
	1599, 0, 0, 0, 1601, -2, 0, 1623, -2, -2,
	1830, 1882, 1672, 1321, 1694, 1696, 1683, 1876, 1545, 0,
	1781, 1778, 0, 1765, 0, 1718, 1719, 0, 0, 1722,
	1724, 1725, 1726, 1484, 1477, 1476, 1855, 0, 0, 0,
	0, 1756, 1305, 0, 1770, 0, 0, 1365, 1770, 1770,
	1404, 0, 1406, 1373, 1366, 0, 1949, 1399, 1391, 0,
	0, 273, 0, 1442, 1447, 0, 1453, 1499, 130, 131,
	133, 0, 958, 0, 961, 0, 0, 0, 0, 968,
	969, 0, 0, 0, 0, 0, 978, 0, 1007, 1017,
	0, 1332, 0, 0, 0, 138, 159, 0, 0, 1144,
	0, 0, 164, 164, 0, 0, 1125, 1127, 0, 0,
	0, 0, 118, 0, 0, 1130, 1136, 1133, 1139, 0,
	0, 1141, 176, 177, 0, 164, 0, 169, 164, 164,
	1119, 0, 0, 0, 0, 0, 0, 0, 192, 258,
	199, 0, 947, 0, 1003, 995, 996, 997, 0, 1002,
	1004, 0, 0, 905, 892, 0, 901, 0, 0, 918,
	893, 0, 381, 1039, 1073, 1021, 0, 1093, 0, 0,
	0, 0, 0, 0, 1203, 1215, 0, 1208, 1209, 1239,
	1339, 0, 0, 0, 1225, 1340, 0, 267, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 233,
	0, 234, 235, 236, 223, 581, 583, 0, 0, 589,
	943, 0, 0, 0, 0, 1329, 1603, -2, -2, 1624,
	0, 1950, 1952, 1321, 0, 1767, 1323, 0, 0, -2,
	0, 0, 0, 1306, 1289, 0, 1356, 1354, 1290, 1291,
	1425, 0, 1394, 274, 0, 1449, 135, 0, 962, 963,
	1933, 965, 0, 967, 970, 0, 973, 1973, 0, 977,
	0, 986, 1008, 0, 939, 0, 1013, 1014, 1015, 1116,
	1117, 1019, 0, 137, 139, 158, 1119, 0, 140, 147,
	0, 0, 94, 0, 0, 2030, 121, 119, 117, 96,
	0, 178, 184, 1118, 173, 186, 164, 0, 1131, 1137,
	201, 0, 202, 205, 0, 0, 893, 946, 0, 994,
	0, 1005, 1006, 895, 0, 894, 0, 0, 0, 0,
	0, 382, 385, 0, 388, 0, 0, 1103, 0, 1109,
	0, 0, 0, 0, 1210, 1211, 397, 0, 0, 0,
	1239, 1250, 245, 0, 0, 926, 929, 930, 931, 932,
	933, 934, 935, 936, 937, 927, 1019, 0, 0, 983,
	0, 250, 230, 0, 585, 0, 587, 0, 834, 836,
	0, 0, 1695, 1785, 0, 0, 1720, 1721, -2, 0,
	1661, 1769, 1771, 0, 1367, 1443, 960, 964, 0, 0,
	0, 1025, 0, 0, 979, 0, 1011, 1012, 947, 0,
	939, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 168, 187, 1119, 198, 217, 0, 1074, 895, 0,
	0, 903, 0, 906, 0, 902, 899, 900, 939, 0,
	386, 387, 0, 1077, 0, 1110, 0, 0, 1212, 1213,
	0, 1232, 1233, 1235, 1240, 0, 0, 1017, 1019, 893,
	0, 584, 0, 0, 839, 840, 0, 0, 0, 0,
	1780, 1324, 1662, 0, 0, 0, 0, 972, 1030, 0,
	0, 0, 1009, 1010, 1007, 0, 988, 0, 1021, 142,
	0, 1019, 0, 951, 0, 0, 954, 0, 0, 122,
	2030, 120, 0, 164, 220, 0, 212, 210, 211, 888,
	0, 0, 999, 1001, 0, 907, 947, 905, 1075, 1019,
	0, 1017, 0, 1204, 0, 1234, 268, 268, 939, 1017,
	1440, 0, 268, 586, 588, 1777, 1797, 1786, -2, 2254,
	2034, 0, 1797, 1797, 1772, 1773, 0, 0, 974, 1026,
	1027, 0, 1022, 1023, 1024, 1972, 975, 976, 1440, 1016,
	0, 1025, 160, 939, 948, 0, 0, 949, 0, 0,
	125, 0, 127, 188, 206, 0, 0, 0, 998, 0,
	0, 0, 0, 893, 895, 1017, 0, 939, 0, 1440,
	247, 248, 947, 939, 982, 249, 1782, 0, 0, 1788,
	1789, 1790, 1791, 1792, 1783, 1784, 966, 0, 1028, 0,
	1029, 0, 0, 0, 987, 0, 1030, 145, 952, 0,
	955, 0, 123, 0, 215, 216, 0, 1000, 896, 0,
	898, 895, 904, 939, 0, 947, 0, 1231, 893, 947,
	0, 1794, 1795, 0, 0, 0, 1031, 0, 1034, 1035,
	0, 1032, 0, 1007, 0, 0, 0, 942, 897, 889,
	947, 1019, 893, 1017, 1440, 893, 1793, 1796, 1787, 971,
	1033, 1036, 1037, 1018, 989, 0, 0, 0, 938, 940,
	941, 893, 1017, 1440, 939, 980, 1440, 947, 0, 218,
	0, 1440, 939, 1106, 947, 981, 953, 0, 0, 1104,
	947, 893, 0, 219, 893, 1440, 0, 1440, 1107, 947,
	1105, 956,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 502, 3, 508, 503, 3,
	513, 514, 506, 504, 518, 505, 515, 507, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 521, 3,
	494, 496, 495, 499, 517, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 511, 3, 512, 509, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 519, 501, 520, 497,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 498, 57837, 500, 57838, 510, 57839, 516,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1209
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1234
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1367
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1371
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1375
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1389
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1408
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1440
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1444
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1454
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1458
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1464
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1473
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1488
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1544
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1556
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1563
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1571
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1585
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1599
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1620
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1630
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1639
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1650
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1656
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1682
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1687
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 145:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = nil
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = nil
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2008
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2123
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2131
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2437
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2517
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2542
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2547
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2552
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2575
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = nil
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2659
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2705
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2819
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2855
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2858
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2860
		{
			return helpWith(sqllex, "CREATE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplemented(sqllex, "create cast")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "create operator")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplemented(sqllex, "create publication")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "create rule")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "create server")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2889
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2893
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			return unimplemented(sqllex, "drop server")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2921
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3033
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{

			sqlVAL.union.val = nil
		}
	case 397:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			return helpWith(sqllex, "DELETE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3096
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "DROP")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3397
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3429
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "DELETE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "INSERT")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "DELETE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "INSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3539
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3580
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3615
		{
			return helpWith(sqllex, "GRANT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "RESET")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "RESET")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "USE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "USE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return unimplemented(sqllex, "set from current")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3974
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = tree.Low
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = tree.Normal
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = tree.High
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4154
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4164
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.str = "client_encoding"
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.str = "timezone"
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4209
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4272
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4388
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = true
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = true
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = false
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4590
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = true
		}
	case 795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = false
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = true
		}
	case 805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = false
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4695
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4785
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4793
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4830
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4853
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4869
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5009
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "RESUME")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5223
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5265
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5280
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{

			sqlVAL.union.val = nil
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = nil
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5330
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 903:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5362
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5376
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5391
		{
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5476
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5479
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5482
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5483
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5489
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5505
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5510
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.str = ""
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 956:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5699
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5713
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5724
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5725
		{
		}
	case 980:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5823
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5834
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5851
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5861
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5941
		{
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5943
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5945
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5946
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6102
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6111
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6119
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6130
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6155
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = true
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6223
		{

			sqlVAL.union.val = true
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = false
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6238
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6252
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6264
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6276
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6286
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = nil
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6349
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6368
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6370
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6372
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6376
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6414
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6432
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6451
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6468
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6485
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6489
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = false
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = true
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = false
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = true
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = false
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.str = ""
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6590
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6596
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6666
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6672
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6684
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6690
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6704
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6710
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6732
		{
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6770
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6820
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6828
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6839
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6843
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6896
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6897
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6898
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6919
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6962
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6966
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7031
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.str = ""
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.str = ""
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.str = ""
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.str = ""
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7074
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7075
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7119
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7123
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7198
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7199
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7245
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7277
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7427
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7585
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = true
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = false
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7638
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7639
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = nil
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7652
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7653
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = true
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = false
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = false
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = true
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7682
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7683
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7724
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7750
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7779
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7927
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7964
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7985
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8016
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8055
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8065
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8100
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8111
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8141
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8174
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = nil
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = true
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = false
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.str = tree.AstFull
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.str = tree.AstRight
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.str = tree.AstInner
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8293
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8294
		{
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.str = tree.AstHash
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.str = ""
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8385
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8391
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8443
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8451
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8452
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8470
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8480
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8493
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8500
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8549
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = types.Geography
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8587
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8595
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8629
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = nil
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = types.Int2
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = types.Int
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = types.Float4
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = types.Float
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8672
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8688
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = types.Bool
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8702
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = types.Float
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8721
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8727
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8749
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = types.String
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = true
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = false
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = types.Date
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8806
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8820
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8829
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8837
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8854
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = true
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = false
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = false
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = types.Interval
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8878
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8977
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = nil
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9007
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9067
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9385
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9606
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9632
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9656
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9697
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9698
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9788
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9913
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9918
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9959
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9969
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9974
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9984
		{
			return unimplemented(sqllex, "treat")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10005
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10057
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.str = ""
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10256
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = tree.Any
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = tree.Some
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = tree.All
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = tree.Div
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.LT
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = tree.GT
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = tree.LE
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = tree.GE
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = tree.NE
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.Like
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10618
		{
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10771
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10787
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10836
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11034
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.str = ""
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
