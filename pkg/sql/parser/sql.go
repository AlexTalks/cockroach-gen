// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONED = lex.PARTITIONED
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONED",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12928

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1491,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 383,
	-2, 0,
	-1, 74,
	240, 226,
	505, 226,
	-2, 0,
	-1, 87,
	228, 1232,
	242, 1232,
	258, 379,
	385, 379,
	395, 1002,
	431, 379,
	443, 1002,
	489, 1002,
	516, 379,
	542, 1002,
	-2, 0,
	-1, 93,
	133, 1491,
	235, 1491,
	527, 1491,
	528, 1491,
	-2, 0,
	-1, 109,
	151, 1462,
	170, 1462,
	183, 1462,
	238, 1462,
	271, 1462,
	336, 1462,
	346, 1462,
	522, 1462,
	-2, 1433,
	-1, 148,
	159, 863,
	257, 863,
	388, 830,
	448, 830,
	488, 830,
	508, 863,
	510, 830,
	-2, 0,
	-1, 150,
	4, 1493,
	21, 1493,
	22, 1493,
	23, 1493,
	24, 1493,
	25, 1493,
	26, 1493,
	27, 1493,
	28, 1493,
	30, 1493,
	31, 1493,
	37, 1493,
	42, 1493,
	43, 1493,
	45, 1493,
	46, 1493,
	47, 1493,
	48, 1493,
	49, 1493,
	50, 1493,
	51, 1493,
	52, 1493,
	54, 1493,
	55, 1493,
	56, 1493,
	57, 1493,
	59, 1493,
	60, 1493,
	61, 1493,
	62, 1493,
	63, 1493,
	64, 1493,
	65, 1493,
	69, 1493,
	70, 1493,
	71, 1493,
	72, 1493,
	74, 1493,
	75, 1493,
	76, 1493,
	80, 1493,
	81, 1493,
	82, 1493,
	83, 1493,
	84, 1493,
	85, 1493,
	86, 1493,
	89, 1493,
	90, 1493,
	91, 1493,
	92, 1493,
	93, 1493,
	95, 1493,
	97, 1493,
	98, 1493,
	99, 1493,
	100, 1493,
	101, 1493,
	102, 1493,
	104, 1493,
	105, 1493,
	106, 1493,
	108, 1493,
	109, 1493,
	110, 1493,
	118, 1493,
	119, 1493,
	120, 1493,
	121, 1493,
	122, 1493,
	124, 1493,
	125, 1493,
	126, 1493,
	128, 1493,
	129, 1493,
	130, 1493,
	132, 1493,
	133, 1493,
	134, 1493,
	136, 1493,
	137, 1493,
	138, 1493,
	141, 1493,
	142, 1493,
	143, 1493,
	145, 1493,
	146, 1493,
	148, 1493,
	149, 1493,
	150, 1493,
	152, 1493,
	153, 1493,
	154, 1493,
	155, 1493,
	156, 1493,
	157, 1493,
	158, 1493,
	159, 1493,
	160, 1493,
	161, 1493,
	162, 1493,
	163, 1493,
	164, 1493,
	165, 1493,
	166, 1493,
	167, 1493,
	169, 1493,
	175, 1493,
	176, 1493,
	177, 1493,
	178, 1493,
	182, 1493,
	184, 1493,
	188, 1493,
	189, 1493,
	190, 1493,
	191, 1493,
	192, 1493,
	193, 1493,
	194, 1493,
	195, 1493,
	196, 1493,
	197, 1493,
	198, 1493,
	199, 1493,
	200, 1493,
	202, 1493,
	203, 1493,
	205, 1493,
	206, 1493,
	208, 1493,
	209, 1493,
	210, 1493,
	211, 1493,
	212, 1493,
	213, 1493,
	214, 1493,
	215, 1493,
	216, 1493,
	218, 1493,
	219, 1493,
	221, 1493,
	222, 1493,
	223, 1493,
	224, 1493,
	228, 1493,
	229, 1493,
	230, 1493,
	231, 1493,
	232, 1493,
	235, 1493,
	236, 1493,
	237, 1493,
	239, 1493,
	241, 1493,
	242, 1493,
	244, 1493,
	246, 1493,
	247, 1493,
	248, 1493,
	250, 1493,
	254, 1493,
	255, 1493,
	256, 1493,
	257, 1493,
	258, 1493,
	259, 1493,
	261, 1493,
	262, 1493,
	263, 1493,
	265, 1493,
	266, 1493,
	268, 1493,
	269, 1493,
	272, 1493,
	276, 1493,
	277, 1493,
	278, 1493,
	281, 1493,
	282, 1493,
	283, 1493,
	284, 1493,
	286, 1493,
	287, 1493,
	288, 1493,
	289, 1493,
	290, 1493,
	291, 1493,
	292, 1493,
	293, 1493,
	294, 1493,
	295, 1493,
	296, 1493,
	297, 1493,
	298, 1493,
	299, 1493,
	300, 1493,
	301, 1493,
	302, 1493,
	303, 1493,
	304, 1493,
	305, 1493,
	306, 1493,
	307, 1493,
	309, 1493,
	311, 1493,
	312, 1493,
	313, 1493,
	314, 1493,
	315, 1493,
	316, 1493,
	317, 1493,
	318, 1493,
	319, 1493,
	320, 1493,
	321, 1493,
	322, 1493,
	324, 1493,
	326, 1493,
	328, 1493,
	329, 1493,
	331, 1493,
	332, 1493,
	333, 1493,
	334, 1493,
	335, 1493,
	338, 1493,
	341, 1493,
	342, 1493,
	343, 1493,
	344, 1493,
	347, 1493,
	348, 1493,
	349, 1493,
	351, 1493,
	353, 1493,
	354, 1493,
	355, 1493,
	356, 1493,
	357, 1493,
	358, 1493,
	359, 1493,
	360, 1493,
	361, 1493,
	362, 1493,
	363, 1493,
	364, 1493,
	365, 1493,
	367, 1493,
	368, 1493,
	369, 1493,
	370, 1493,
	371, 1493,
	372, 1493,
	373, 1493,
	374, 1493,
	375, 1493,
	376, 1493,
	377, 1493,
	378, 1493,
	379, 1493,
	380, 1493,
	381, 1493,
	383, 1493,
	384, 1493,
	386, 1493,
	387, 1493,
	388, 1493,
	389, 1493,
	390, 1493,
	391, 1493,
	392, 1493,
	393, 1493,
	394, 1493,
	395, 1493,
	396, 1493,
	397, 1493,
	399, 1493,
	401, 1493,
	402, 1493,
	403, 1493,
	408, 1493,
	410, 1493,
	411, 1493,
	412, 1493,
	413, 1493,
	414, 1493,
	415, 1493,
	416, 1493,
	417, 1493,
	418, 1493,
	420, 1493,
	421, 1493,
	422, 1493,
	424, 1493,
	425, 1493,
	426, 1493,
	427, 1493,
	428, 1493,
	429, 1493,
	431, 1493,
	432, 1493,
	433, 1493,
	434, 1493,
	435, 1493,
	436, 1493,
	437, 1493,
	438, 1493,
	439, 1493,
	440, 1493,
	441, 1493,
	443, 1493,
	444, 1493,
	445, 1493,
	446, 1493,
	447, 1493,
	448, 1493,
	450, 1493,
	451, 1493,
	452, 1493,
	453, 1493,
	454, 1493,
	455, 1493,
	457, 1493,
	458, 1493,
	459, 1493,
	460, 1493,
	461, 1493,
	462, 1493,
	463, 1493,
	465, 1493,
	467, 1493,
	468, 1493,
	469, 1493,
	470, 1493,
	471, 1493,
	472, 1493,
	473, 1493,
	474, 1493,
	475, 1493,
	476, 1493,
	477, 1493,
	478, 1493,
	479, 1493,
	480, 1493,
	481, 1493,
	482, 1493,
	484, 1493,
	485, 1493,
	487, 1493,
	488, 1493,
	490, 1493,
	491, 1493,
	492, 1493,
	493, 1493,
	494, 1493,
	495, 1493,
	496, 1493,
	497, 1493,
	498, 1493,
	500, 1493,
	501, 1493,
	502, 1493,
	503, 1493,
	504, 1493,
	506, 1493,
	508, 1493,
	509, 1493,
	510, 1493,
	511, 1493,
	512, 1493,
	513, 1493,
	515, 1493,
	516, 1493,
	517, 1493,
	518, 1493,
	520, 1493,
	521, 1493,
	524, 1493,
	525, 1493,
	526, 1493,
	527, 1493,
	528, 1493,
	529, 1493,
	530, 1493,
	532, 1493,
	535, 1493,
	536, 1493,
	537, 1493,
	538, 1493,
	539, 1493,
	540, 1493,
	542, 1493,
	543, 1493,
	544, 1493,
	545, 1493,
	551, 1493,
	552, 1493,
	553, 1493,
	554, 1493,
	555, 1493,
	556, 1493,
	-2, 0,
	-1, 151,
	1, 1348,
	131, 1348,
	246, 1348,
	325, 1348,
	383, 1348,
	392, 1348,
	560, 1348,
	584, 1348,
	-2, 0,
	-1, 153,
	1, 1348,
	584, 1348,
	-2, 0,
	-1, 154,
	1, 1348,
	584, 1348,
	-2, 0,
	-1, 155,
	1, 1348,
	505, 1348,
	584, 1348,
	-2, 0,
	-1, 183,
	151, 1461,
	170, 1461,
	183, 1461,
	238, 1461,
	271, 1461,
	336, 1461,
	346, 1461,
	522, 1461,
	-2, 1436,
	-1, 229,
	4, 1500,
	5, 1500,
	6, 1500,
	7, 1500,
	8, 1500,
	9, 1500,
	10, 1500,
	21, 1500,
	22, 1500,
	23, 1500,
	24, 1500,
	25, 1500,
	26, 1500,
	27, 1500,
	28, 1500,
	30, 1500,
	31, 1500,
	37, 1500,
	38, 1500,
	42, 1500,
	43, 1500,
	44, 1500,
	45, 1500,
	46, 1500,
	47, 1500,
	48, 1500,
	49, 1500,
	50, 1500,
	51, 1500,
	52, 1500,
	54, 1500,
	55, 1500,
	56, 1500,
	57, 1500,
	59, 1500,
	60, 1500,
	61, 1500,
	62, 1500,
	63, 1500,
	64, 1500,
	65, 1500,
	66, 1500,
	67, 1500,
	68, 1500,
	69, 1500,
	70, 1500,
	71, 1500,
	72, 1500,
	74, 1500,
	75, 1500,
	76, 1500,
	78, 1500,
	80, 1500,
	81, 1500,
	82, 1500,
	83, 1500,
	84, 1500,
	85, 1500,
	86, 1500,
	89, 1500,
	90, 1500,
	91, 1500,
	92, 1500,
	93, 1500,
	95, 1500,
	97, 1500,
	98, 1500,
	99, 1500,
	100, 1500,
	101, 1500,
	102, 1500,
	104, 1500,
	105, 1500,
	106, 1500,
	107, 1500,
	108, 1500,
	109, 1500,
	110, 1500,
	111, 1500,
	112, 1500,
	113, 1500,
	114, 1500,
	115, 1500,
	116, 1500,
	117, 1500,
	118, 1500,
	119, 1500,
	120, 1500,
	121, 1500,
	122, 1500,
	123, 1500,
	124, 1500,
	125, 1500,
	126, 1500,
	127, 1500,
	128, 1500,
	129, 1500,
	130, 1500,
	132, 1500,
	133, 1500,
	134, 1500,
	136, 1500,
	137, 1500,
	138, 1500,
	141, 1500,
	142, 1500,
	143, 1500,
	145, 1500,
	146, 1500,
	148, 1500,
	149, 1500,
	150, 1500,
	152, 1500,
	153, 1500,
	154, 1500,
	155, 1500,
	156, 1500,
	157, 1500,
	158, 1500,
	159, 1500,
	160, 1500,
	161, 1500,
	162, 1500,
	163, 1500,
	164, 1500,
	165, 1500,
	166, 1500,
	167, 1500,
	168, 1500,
	169, 1500,
	175, 1500,
	176, 1500,
	177, 1500,
	178, 1500,
	182, 1500,
	184, 1500,
	187, 1500,
	188, 1500,
	189, 1500,
	190, 1500,
	191, 1500,
	192, 1500,
	193, 1500,
	194, 1500,
	195, 1500,
	196, 1500,
	197, 1500,
	198, 1500,
	199, 1500,
	200, 1500,
	202, 1500,
	203, 1500,
	205, 1500,
	206, 1500,
	208, 1500,
	209, 1500,
	210, 1500,
	211, 1500,
	212, 1500,
	213, 1500,
	214, 1500,
	215, 1500,
	216, 1500,
	217, 1500,
	218, 1500,
	219, 1500,
	221, 1500,
	222, 1500,
	223, 1500,
	224, 1500,
	228, 1500,
	229, 1500,
	230, 1500,
	231, 1500,
	232, 1500,
	234, 1500,
	235, 1500,
	236, 1500,
	237, 1500,
	239, 1500,
	241, 1500,
	242, 1500,
	243, 1500,
	244, 1500,
	245, 1500,
	246, 1500,
	247, 1500,
	248, 1500,
	249, 1500,
	250, 1500,
	254, 1500,
	255, 1500,
	256, 1500,
	257, 1500,
	258, 1500,
	259, 1500,
	261, 1500,
	262, 1500,
	263, 1500,
	265, 1500,
	266, 1500,
	267, 1500,
	268, 1500,
	269, 1500,
	270, 1500,
	272, 1500,
	276, 1500,
	277, 1500,
	278, 1500,
	279, 1500,
	280, 1500,
	281, 1500,
	282, 1500,
	283, 1500,
	284, 1500,
	286, 1500,
	287, 1500,
	288, 1500,
	289, 1500,
	290, 1500,
	291, 1500,
	292, 1500,
	293, 1500,
	294, 1500,
	295, 1500,
	296, 1500,
	297, 1500,
	298, 1500,
	299, 1500,
	300, 1500,
	301, 1500,
	302, 1500,
	303, 1500,
	304, 1500,
	305, 1500,
	306, 1500,
	307, 1500,
	309, 1500,
	310, 1500,
	311, 1500,
	312, 1500,
	313, 1500,
	314, 1500,
	315, 1500,
	316, 1500,
	317, 1500,
	318, 1500,
	319, 1500,
	320, 1500,
	321, 1500,
	322, 1500,
	323, 1500,
	324, 1500,
	325, 1500,
	326, 1500,
	327, 1500,
	328, 1500,
	329, 1500,
	330, 1500,
	331, 1500,
	332, 1500,
	333, 1500,
	334, 1500,
	335, 1500,
	338, 1500,
	342, 1500,
	343, 1500,
	344, 1500,
	347, 1500,
	348, 1500,
	349, 1500,
	350, 1500,
	351, 1500,
	352, 1500,
	353, 1500,
	354, 1500,
	355, 1500,
	356, 1500,
	357, 1500,
	358, 1500,
	359, 1500,
	360, 1500,
	361, 1500,
	362, 1500,
	363, 1500,
	364, 1500,
	365, 1500,
	367, 1500,
	368, 1500,
	369, 1500,
	370, 1500,
	371, 1500,
	372, 1500,
	373, 1500,
	374, 1500,
	375, 1500,
	376, 1500,
	377, 1500,
	378, 1500,
	379, 1500,
	380, 1500,
	381, 1500,
	383, 1500,
	384, 1500,
	386, 1500,
	387, 1500,
	388, 1500,
	389, 1500,
	390, 1500,
	391, 1500,
	392, 1500,
	393, 1500,
	394, 1500,
	395, 1500,
	396, 1500,
	397, 1500,
	399, 1500,
	401, 1500,
	402, 1500,
	403, 1500,
	408, 1500,
	410, 1500,
	411, 1500,
	412, 1500,
	413, 1500,
	414, 1500,
	415, 1500,
	416, 1500,
	417, 1500,
	418, 1500,
	420, 1500,
	421, 1500,
	422, 1500,
	423, 1500,
	424, 1500,
	425, 1500,
	426, 1500,
	427, 1500,
	428, 1500,
	429, 1500,
	431, 1500,
	432, 1500,
	433, 1500,
	434, 1500,
	435, 1500,
	436, 1500,
	437, 1500,
	438, 1500,
	439, 1500,
	440, 1500,
	441, 1500,
	443, 1500,
	444, 1500,
	445, 1500,
	446, 1500,
	447, 1500,
	448, 1500,
	449, 1500,
	450, 1500,
	451, 1500,
	452, 1500,
	453, 1500,
	454, 1500,
	455, 1500,
	456, 1500,
	457, 1500,
	458, 1500,
	459, 1500,
	460, 1500,
	461, 1500,
	462, 1500,
	463, 1500,
	465, 1500,
	467, 1500,
	468, 1500,
	469, 1500,
	470, 1500,
	471, 1500,
	472, 1500,
	473, 1500,
	474, 1500,
	475, 1500,
	476, 1500,
	477, 1500,
	478, 1500,
	479, 1500,
	480, 1500,
	481, 1500,
	482, 1500,
	484, 1500,
	485, 1500,
	486, 1500,
	487, 1500,
	488, 1500,
	490, 1500,
	491, 1500,
	492, 1500,
	493, 1500,
	494, 1500,
	495, 1500,
	496, 1500,
	497, 1500,
	498, 1500,
	500, 1500,
	501, 1500,
	502, 1500,
	503, 1500,
	504, 1500,
	506, 1500,
	508, 1500,
	509, 1500,
	510, 1500,
	511, 1500,
	512, 1500,
	513, 1500,
	514, 1500,
	515, 1500,
	516, 1500,
	517, 1500,
	518, 1500,
	520, 1500,
	521, 1500,
	523, 1500,
	524, 1500,
	525, 1500,
	526, 1500,
	527, 1500,
	528, 1500,
	529, 1500,
	530, 1500,
	531, 1500,
	532, 1500,
	535, 1500,
	536, 1500,
	537, 1500,
	538, 1500,
	539, 1500,
	540, 1500,
	542, 1500,
	543, 1500,
	544, 1500,
	545, 1500,
	551, 1500,
	552, 1500,
	553, 1500,
	554, 1500,
	555, 1500,
	556, 1500,
	557, 1500,
	565, 1500,
	572, 1500,
	573, 1500,
	574, 1500,
	581, 1500,
	585, 1500,
	-2, 0,
	-1, 724,
	4, 1230,
	21, 1230,
	22, 1230,
	23, 1230,
	24, 1230,
	25, 1230,
	26, 1230,
	27, 1230,
	28, 1230,
	30, 1230,
	31, 1230,
	37, 1230,
	42, 1230,
	43, 1230,
	45, 1230,
	46, 1230,
	47, 1230,
	48, 1230,
	49, 1230,
	50, 1230,
	51, 1230,
	52, 1230,
	54, 1230,
	55, 1230,
	56, 1230,
	57, 1230,
	59, 1230,
	60, 1230,
	61, 1230,
	62, 1230,
	63, 1230,
	64, 1230,
	65, 1230,
	69, 1230,
	70, 1230,
	71, 1230,
	72, 1230,
	74, 1230,
	75, 1230,
	76, 1230,
	80, 1230,
	81, 1230,
	82, 1230,
	83, 1230,
	84, 1230,
	85, 1230,
	86, 1230,
	89, 1230,
	90, 1230,
	91, 1230,
	92, 1230,
	93, 1230,
	95, 1230,
	97, 1230,
	98, 1230,
	99, 1230,
	100, 1230,
	101, 1230,
	102, 1230,
	104, 1230,
	105, 1230,
	106, 1230,
	108, 1230,
	109, 1230,
	110, 1230,
	118, 1230,
	119, 1230,
	120, 1230,
	121, 1230,
	122, 1230,
	124, 1230,
	125, 1230,
	126, 1230,
	128, 1230,
	129, 1230,
	130, 1230,
	132, 1230,
	133, 1230,
	134, 1230,
	136, 1230,
	137, 1230,
	138, 1230,
	141, 1230,
	142, 1230,
	143, 1230,
	145, 1230,
	146, 1230,
	148, 1230,
	149, 1230,
	150, 1230,
	152, 1230,
	153, 1230,
	154, 1230,
	155, 1230,
	156, 1230,
	157, 1230,
	158, 1230,
	159, 1230,
	160, 1230,
	161, 1230,
	162, 1230,
	163, 1230,
	164, 1230,
	165, 1230,
	166, 1230,
	167, 1230,
	169, 1230,
	175, 1230,
	176, 1230,
	177, 1230,
	178, 1230,
	182, 1230,
	184, 1230,
	188, 1230,
	189, 1230,
	190, 1230,
	191, 1230,
	192, 1230,
	193, 1230,
	194, 1230,
	195, 1230,
	196, 1230,
	197, 1230,
	198, 1230,
	199, 1230,
	200, 1230,
	202, 1230,
	203, 1230,
	205, 1230,
	206, 1230,
	208, 1230,
	209, 1230,
	210, 1230,
	211, 1230,
	212, 1230,
	213, 1230,
	214, 1230,
	215, 1230,
	216, 1230,
	218, 1230,
	219, 1230,
	221, 1230,
	222, 1230,
	223, 1230,
	224, 1230,
	228, 1230,
	229, 1230,
	230, 1230,
	231, 1230,
	232, 1230,
	235, 1230,
	236, 1230,
	237, 1230,
	239, 1230,
	241, 1230,
	242, 1230,
	244, 1230,
	246, 1230,
	247, 1230,
	248, 1230,
	250, 1230,
	254, 1230,
	255, 1230,
	256, 1230,
	257, 1230,
	258, 1230,
	259, 1230,
	261, 1230,
	262, 1230,
	263, 1230,
	265, 1230,
	266, 1230,
	268, 1230,
	269, 1230,
	272, 1230,
	276, 1230,
	277, 1230,
	278, 1230,
	281, 1230,
	282, 1230,
	283, 1230,
	284, 1230,
	286, 1230,
	287, 1230,
	288, 1230,
	289, 1230,
	290, 1230,
	291, 1230,
	292, 1230,
	293, 1230,
	294, 1230,
	295, 1230,
	296, 1230,
	297, 1230,
	298, 1230,
	299, 1230,
	300, 1230,
	301, 1230,
	302, 1230,
	303, 1230,
	304, 1230,
	305, 1230,
	306, 1230,
	307, 1230,
	309, 1230,
	311, 1230,
	312, 1230,
	313, 1230,
	314, 1230,
	315, 1230,
	316, 1230,
	317, 1230,
	318, 1230,
	319, 1230,
	320, 1230,
	321, 1230,
	322, 1230,
	324, 1230,
	326, 1230,
	328, 1230,
	329, 1230,
	331, 1230,
	332, 1230,
	333, 1230,
	334, 1230,
	335, 1230,
	338, 1230,
	342, 1230,
	343, 1230,
	344, 1230,
	347, 1230,
	348, 1230,
	349, 1230,
	351, 1230,
	353, 1230,
	354, 1230,
	355, 1230,
	356, 1230,
	357, 1230,
	358, 1230,
	359, 1230,
	360, 1230,
	361, 1230,
	362, 1230,
	363, 1230,
	364, 1230,
	365, 1230,
	367, 1230,
	368, 1230,
	369, 1230,
	370, 1230,
	371, 1230,
	372, 1230,
	373, 1230,
	374, 1230,
	375, 1230,
	376, 1230,
	377, 1230,
	378, 1230,
	379, 1230,
	380, 1230,
	381, 1230,
	383, 1230,
	384, 1230,
	386, 1230,
	387, 1230,
	388, 1230,
	389, 1230,
	390, 1230,
	391, 1230,
	392, 1230,
	393, 1230,
	394, 1230,
	395, 1230,
	396, 1230,
	397, 1230,
	399, 1230,
	401, 1230,
	402, 1230,
	403, 1230,
	408, 1230,
	410, 1230,
	411, 1230,
	412, 1230,
	413, 1230,
	414, 1230,
	415, 1230,
	416, 1230,
	417, 1230,
	418, 1230,
	420, 1230,
	421, 1230,
	422, 1230,
	424, 1230,
	425, 1230,
	426, 1230,
	427, 1230,
	428, 1230,
	429, 1230,
	431, 1230,
	432, 1230,
	433, 1230,
	434, 1230,
	435, 1230,
	436, 1230,
	437, 1230,
	438, 1230,
	439, 1230,
	440, 1230,
	441, 1230,
	443, 1230,
	444, 1230,
	445, 1230,
	446, 1230,
	447, 1230,
	448, 1230,
	450, 1230,
	451, 1230,
	452, 1230,
	453, 1230,
	454, 1230,
	455, 1230,
	457, 1230,
	458, 1230,
	459, 1230,
	460, 1230,
	461, 1230,
	462, 1230,
	463, 1230,
	465, 1230,
	467, 1230,
	468, 1230,
	469, 1230,
	470, 1230,
	471, 1230,
	472, 1230,
	473, 1230,
	474, 1230,
	475, 1230,
	476, 1230,
	477, 1230,
	478, 1230,
	479, 1230,
	480, 1230,
	481, 1230,
	482, 1230,
	484, 1230,
	485, 1230,
	487, 1230,
	488, 1230,
	490, 1230,
	491, 1230,
	492, 1230,
	493, 1230,
	494, 1230,
	495, 1230,
	496, 1230,
	497, 1230,
	498, 1230,
	500, 1230,
	501, 1230,
	502, 1230,
	503, 1230,
	504, 1230,
	506, 1230,
	508, 1230,
	509, 1230,
	510, 1230,
	511, 1230,
	512, 1230,
	513, 1230,
	515, 1230,
	516, 1230,
	517, 1230,
	518, 1230,
	520, 1230,
	521, 1230,
	524, 1230,
	525, 1230,
	526, 1230,
	527, 1230,
	528, 1230,
	529, 1230,
	530, 1230,
	532, 1230,
	535, 1230,
	536, 1230,
	537, 1230,
	538, 1230,
	539, 1230,
	540, 1230,
	542, 1230,
	543, 1230,
	544, 1230,
	545, 1230,
	551, 1230,
	552, 1230,
	553, 1230,
	554, 1230,
	555, 1230,
	556, 1230,
	-2, 0,
	-1, 743,
	186, 2258,
	505, 2258,
	564, 2258,
	583, 2258,
	-2, 0,
	-1, 744,
	186, 2362,
	505, 2362,
	564, 2362,
	583, 2362,
	-2, 0,
	-1, 745,
	186, 2245,
	505, 2245,
	564, 2245,
	583, 2245,
	-2, 0,
	-1, 747,
	186, 2493,
	505, 2493,
	564, 2493,
	583, 2493,
	-2, 0,
	-1, 749,
	186, 2533,
	505, 2533,
	564, 2533,
	583, 2533,
	-2, 0,
	-1, 756,
	186, 2389,
	505, 2389,
	564, 2389,
	583, 2389,
	-2, 666,
	-1, 786,
	583, 2193,
	586, 2193,
	-2, 933,
	-1, 787,
	583, 2195,
	586, 2195,
	-2, 934,
	-1, 788,
	583, 2194,
	586, 2194,
	-2, 935,
	-1, 789,
	586, 2120,
	-2, 936,
	-1, 812,
	183, 240,
	-2, 0,
	-1, 836,
	44, 2167,
	-2, 0,
	-1, 837,
	542, 1208,
	-2, 1003,
	-1, 853,
	4, 1629,
	21, 1629,
	22, 1629,
	23, 1629,
	24, 1629,
	25, 1629,
	26, 1629,
	27, 1629,
	28, 1629,
	30, 1629,
	31, 1629,
	37, 1629,
	42, 1629,
	43, 1629,
	45, 1629,
	46, 1629,
	47, 1629,
	48, 1629,
	49, 1629,
	50, 1629,
	51, 1629,
	52, 1629,
	54, 1629,
	55, 1629,
	56, 1629,
	57, 1629,
	59, 1629,
	60, 1629,
	61, 1629,
	62, 1629,
	63, 1629,
	64, 1629,
	65, 1629,
	69, 1629,
	70, 1629,
	71, 1629,
	72, 1629,
	74, 1629,
	75, 1629,
	76, 1629,
	80, 1629,
	81, 1629,
	82, 1629,
	83, 1629,
	84, 1629,
	85, 1629,
	86, 1629,
	89, 1629,
	90, 1629,
	91, 1629,
	92, 1629,
	93, 1629,
	95, 1629,
	97, 1629,
	98, 1629,
	99, 1629,
	100, 1629,
	101, 1629,
	102, 1629,
	104, 1629,
	105, 1629,
	106, 1629,
	108, 1629,
	109, 1629,
	110, 1629,
	118, 1629,
	119, 1629,
	120, 1629,
	121, 1629,
	122, 1629,
	124, 1629,
	125, 1629,
	126, 1629,
	128, 1629,
	129, 1629,
	130, 1629,
	132, 1629,
	133, 1629,
	134, 1629,
	136, 1629,
	137, 1629,
	138, 1629,
	141, 1629,
	142, 1629,
	143, 1629,
	145, 1629,
	146, 1629,
	148, 1629,
	149, 1629,
	150, 1629,
	152, 1629,
	153, 1629,
	154, 1629,
	155, 1629,
	156, 1629,
	157, 1629,
	158, 1629,
	159, 1629,
	160, 1629,
	161, 1629,
	162, 1629,
	163, 1629,
	164, 1629,
	165, 1629,
	166, 1629,
	167, 1629,
	169, 1629,
	175, 1629,
	176, 1629,
	177, 1629,
	178, 1629,
	182, 1629,
	184, 1629,
	188, 1629,
	189, 1629,
	190, 1629,
	191, 1629,
	192, 1629,
	193, 1629,
	194, 1629,
	195, 1629,
	196, 1629,
	197, 1629,
	198, 1629,
	199, 1629,
	200, 1629,
	202, 1629,
	203, 1629,
	205, 1629,
	206, 1629,
	208, 1629,
	209, 1629,
	210, 1629,
	211, 1629,
	212, 1629,
	213, 1629,
	214, 1629,
	215, 1629,
	216, 1629,
	218, 1629,
	219, 1629,
	221, 1629,
	222, 1629,
	223, 1629,
	224, 1629,
	228, 1629,
	229, 1629,
	230, 1629,
	231, 1629,
	232, 1629,
	235, 1629,
	236, 1629,
	237, 1629,
	239, 1629,
	241, 1629,
	242, 1629,
	244, 1629,
	246, 1629,
	247, 1629,
	248, 1629,
	250, 1629,
	254, 1629,
	255, 1629,
	256, 1629,
	257, 1629,
	258, 1629,
	259, 1629,
	261, 1629,
	262, 1629,
	263, 1629,
	265, 1629,
	266, 1629,
	268, 1629,
	269, 1629,
	272, 1629,
	276, 1629,
	277, 1629,
	278, 1629,
	281, 1629,
	282, 1629,
	283, 1629,
	284, 1629,
	286, 1629,
	287, 1629,
	288, 1629,
	289, 1629,
	290, 1629,
	291, 1629,
	292, 1629,
	293, 1629,
	294, 1629,
	295, 1629,
	296, 1629,
	297, 1629,
	298, 1629,
	299, 1629,
	300, 1629,
	301, 1629,
	302, 1629,
	303, 1629,
	304, 1629,
	305, 1629,
	306, 1629,
	307, 1629,
	309, 1629,
	311, 1629,
	312, 1629,
	313, 1629,
	314, 1629,
	315, 1629,
	316, 1629,
	317, 1629,
	318, 1629,
	319, 1629,
	320, 1629,
	321, 1629,
	322, 1629,
	324, 1629,
	326, 1629,
	328, 1629,
	329, 1629,
	331, 1629,
	332, 1629,
	333, 1629,
	334, 1629,
	335, 1629,
	338, 1629,
	342, 1629,
	343, 1629,
	344, 1629,
	347, 1629,
	348, 1629,
	349, 1629,
	351, 1629,
	353, 1629,
	354, 1629,
	355, 1629,
	356, 1629,
	357, 1629,
	358, 1629,
	359, 1629,
	360, 1629,
	361, 1629,
	362, 1629,
	363, 1629,
	364, 1629,
	365, 1629,
	367, 1629,
	368, 1629,
	369, 1629,
	370, 1629,
	371, 1629,
	372, 1629,
	373, 1629,
	374, 1629,
	375, 1629,
	376, 1629,
	377, 1629,
	378, 1629,
	379, 1629,
	380, 1629,
	381, 1629,
	383, 1629,
	384, 1629,
	386, 1629,
	387, 1629,
	388, 1629,
	389, 1629,
	390, 1629,
	391, 1629,
	392, 1629,
	393, 1629,
	394, 1629,
	395, 1629,
	396, 1629,
	397, 1629,
	399, 1629,
	401, 1629,
	402, 1629,
	403, 1629,
	408, 1629,
	410, 1629,
	411, 1629,
	412, 1629,
	413, 1629,
	414, 1629,
	415, 1629,
	416, 1629,
	417, 1629,
	418, 1629,
	420, 1629,
	421, 1629,
	422, 1629,
	424, 1629,
	425, 1629,
	426, 1629,
	427, 1629,
	428, 1629,
	429, 1629,
	431, 1629,
	432, 1629,
	433, 1629,
	434, 1629,
	435, 1629,
	436, 1629,
	437, 1629,
	438, 1629,
	439, 1629,
	440, 1629,
	441, 1629,
	443, 1629,
	444, 1629,
	445, 1629,
	446, 1629,
	447, 1629,
	448, 1629,
	450, 1629,
	451, 1629,
	452, 1629,
	453, 1629,
	454, 1629,
	455, 1629,
	457, 1629,
	458, 1629,
	459, 1629,
	460, 1629,
	461, 1629,
	462, 1629,
	463, 1629,
	465, 1629,
	467, 1629,
	468, 1629,
	469, 1629,
	470, 1629,
	471, 1629,
	472, 1629,
	473, 1629,
	474, 1629,
	475, 1629,
	476, 1629,
	477, 1629,
	478, 1629,
	479, 1629,
	480, 1629,
	481, 1629,
	482, 1629,
	484, 1629,
	485, 1629,
	487, 1629,
	488, 1629,
	490, 1629,
	491, 1629,
	492, 1629,
	493, 1629,
	494, 1629,
	495, 1629,
	496, 1629,
	497, 1629,
	498, 1629,
	500, 1629,
	501, 1629,
	502, 1629,
	503, 1629,
	504, 1629,
	506, 1629,
	508, 1629,
	509, 1629,
	510, 1629,
	511, 1629,
	512, 1629,
	513, 1629,
	515, 1629,
	516, 1629,
	517, 1629,
	518, 1629,
	520, 1629,
	521, 1629,
	524, 1629,
	525, 1629,
	526, 1629,
	527, 1629,
	528, 1629,
	529, 1629,
	530, 1629,
	532, 1629,
	535, 1629,
	536, 1629,
	537, 1629,
	538, 1629,
	539, 1629,
	540, 1629,
	542, 1629,
	543, 1629,
	544, 1629,
	545, 1629,
	551, 1629,
	552, 1629,
	553, 1629,
	554, 1629,
	555, 1629,
	556, 1629,
	-2, 0,
	-1, 861,
	258, 383,
	-2, 0,
	-1, 931,
	388, 831,
	448, 831,
	488, 831,
	510, 831,
	-2, 0,
	-1, 932,
	388, 830,
	448, 830,
	488, 830,
	510, 830,
	-2, 770,
	-1, 936,
	1, 877,
	580, 877,
	582, 877,
	584, 877,
	-2, 0,
	-1, 937,
	1, 805,
	580, 805,
	582, 805,
	584, 805,
	-2, 0,
	-1, 938,
	1, 809,
	580, 809,
	582, 809,
	584, 809,
	-2, 0,
	-1, 939,
	1, 932,
	183, 932,
	580, 932,
	582, 932,
	584, 932,
	-2, 0,
	-1, 947,
	1, 836,
	580, 836,
	582, 836,
	584, 836,
	-2, 0,
	-1, 953,
	1, 877,
	580, 877,
	582, 877,
	584, 877,
	-2, 0,
	-1, 954,
	1, 879,
	580, 879,
	582, 879,
	584, 879,
	-2, 0,
	-1, 955,
	1, 882,
	580, 882,
	582, 882,
	584, 882,
	-2, 0,
	-1, 961,
	1, 900,
	580, 900,
	582, 900,
	584, 900,
	-2, 0,
	-1, 962,
	1, 902,
	580, 902,
	582, 902,
	584, 902,
	-2, 0,
	-1, 967,
	1, 927,
	580, 927,
	582, 927,
	584, 927,
	-2, 0,
	-1, 1013,
	170, 1504,
	183, 1504,
	271, 1504,
	336, 1504,
	-2, 1440,
	-1, 1028,
	170, 1503,
	183, 1503,
	271, 1503,
	336, 1503,
	-2, 1437,
	-1, 1054,
	583, 2192,
	-2, 674,
	-1, 1082,
	5, 2184,
	581, 2182,
	-2, 2173,
	-1, 1090,
	5, 2205,
	581, 2202,
	-2, 2193,
	-1, 1091,
	5, 2206,
	581, 2203,
	-2, 2194,
	-1, 1099,
	583, 2190,
	-2, 2172,
	-1, 1100,
	581, 2615,
	-2, 2191,
	-1, 1123,
	581, 2614,
	-2, 2207,
	-1, 1124,
	5, 1704,
	-2, 2585,
	-1, 1125,
	5, 1705,
	-2, 2586,
	-1, 1126,
	5, 1706,
	-2, 2600,
	-1, 1127,
	5, 1707,
	-2, 2564,
	-1, 1128,
	5, 1708,
	-2, 2598,
	-1, 1129,
	5, 1716,
	-2, 2577,
	-1, 1130,
	5, 1703,
	-2, 2573,
	-1, 1131,
	5, 1703,
	-2, 2572,
	-1, 1132,
	5, 1703,
	-2, 2591,
	-1, 1133,
	5, 1714,
	-2, 2566,
	-1, 1134,
	5, 1719,
	-2, 2565,
	-1, 1135,
	5, 1721,
	-2, 2610,
	-1, 1138,
	5, 1743,
	-2, 2603,
	-1, 1139,
	5, 1735,
	-2, 2604,
	-1, 1140,
	5, 1743,
	-2, 2605,
	-1, 1141,
	5, 1739,
	-2, 2606,
	-1, 1142,
	5, 1689,
	-2, 2578,
	-1, 1143,
	5, 1690,
	-2, 2579,
	-1, 1144,
	5, 1691,
	-2, 2567,
	-1, 1172,
	5, 1726,
	-2, 2611,
	-1, 1173,
	5, 1727,
	-2, 2601,
	-1, 1174,
	5, 1728,
	543, 1728,
	-2, 2568,
	-1, 1175,
	5, 1729,
	543, 1729,
	-2, 2569,
	-1, 1212,
	581, 2202,
	-2, 2193,
	-1, 1213,
	581, 2203,
	-2, 2194,
	-1, 1313,
	186, 2533,
	505, 2533,
	564, 2533,
	583, 2533,
	-2, 0,
	-1, 1316,
	1, 652,
	584, 652,
	-2, 1356,
	-1, 1444,
	355, 2168,
	410, 2168,
	450, 2168,
	574, 2168,
	-2, 2158,
	-1, 1455,
	585, 2168,
	-2, 2169,
	-1, 1461,
	1, 1205,
	580, 1205,
	582, 1205,
	584, 1205,
	-2, 1489,
	-1, 1509,
	395, 1002,
	542, 1002,
	-2, 378,
	-1, 1526,
	44, 2166,
	-2, 968,
	-1, 1533,
	1, 1205,
	580, 1205,
	582, 1205,
	584, 1205,
	-2, 1489,
	-1, 1541,
	4, 1230,
	21, 1230,
	22, 1230,
	23, 1230,
	24, 1230,
	25, 1230,
	26, 1230,
	27, 1230,
	28, 1230,
	30, 1230,
	31, 1230,
	37, 1230,
	42, 1230,
	43, 1230,
	45, 1230,
	46, 1230,
	47, 1230,
	48, 1230,
	49, 1230,
	50, 1230,
	51, 1230,
	52, 1230,
	54, 1230,
	55, 1230,
	56, 1230,
	57, 1230,
	59, 1230,
	60, 1230,
	61, 1230,
	62, 1230,
	63, 1230,
	64, 1230,
	65, 1230,
	69, 1230,
	70, 1230,
	71, 1230,
	72, 1230,
	74, 1230,
	75, 1230,
	76, 1230,
	80, 1230,
	81, 1230,
	82, 1230,
	83, 1230,
	84, 1230,
	85, 1230,
	86, 1230,
	89, 1230,
	90, 1230,
	91, 1230,
	92, 1230,
	93, 1230,
	95, 1230,
	97, 1230,
	98, 1230,
	99, 1230,
	100, 1230,
	101, 1230,
	102, 1230,
	104, 1230,
	105, 1230,
	106, 1230,
	108, 1230,
	109, 1230,
	110, 1230,
	118, 1230,
	119, 1230,
	120, 1230,
	121, 1230,
	122, 1230,
	124, 1230,
	125, 1230,
	126, 1230,
	128, 1230,
	129, 1230,
	130, 1230,
	132, 1230,
	133, 1230,
	134, 1230,
	136, 1230,
	137, 1230,
	138, 1230,
	141, 1230,
	142, 1230,
	143, 1230,
	145, 1230,
	146, 1230,
	148, 1230,
	149, 1230,
	150, 1230,
	152, 1230,
	153, 1230,
	154, 1230,
	155, 1230,
	156, 1230,
	157, 1230,
	158, 1230,
	159, 1230,
	160, 1230,
	161, 1230,
	162, 1230,
	163, 1230,
	164, 1230,
	165, 1230,
	166, 1230,
	167, 1230,
	175, 1230,
	176, 1230,
	177, 1230,
	178, 1230,
	182, 1230,
	184, 1230,
	188, 1230,
	189, 1230,
	190, 1230,
	191, 1230,
	192, 1230,
	193, 1230,
	194, 1230,
	195, 1230,
	196, 1230,
	197, 1230,
	198, 1230,
	199, 1230,
	200, 1230,
	202, 1230,
	203, 1230,
	205, 1230,
	206, 1230,
	208, 1230,
	209, 1230,
	210, 1230,
	211, 1230,
	212, 1230,
	213, 1230,
	214, 1230,
	215, 1230,
	216, 1230,
	218, 1230,
	219, 1230,
	221, 1230,
	222, 1230,
	223, 1230,
	224, 1230,
	229, 1230,
	230, 1230,
	231, 1230,
	232, 1230,
	235, 1230,
	236, 1230,
	237, 1230,
	239, 1230,
	241, 1230,
	242, 1230,
	244, 1230,
	246, 1230,
	247, 1230,
	248, 1230,
	250, 1230,
	254, 1230,
	255, 1230,
	256, 1230,
	257, 1230,
	258, 1230,
	259, 1230,
	261, 1230,
	262, 1230,
	263, 1230,
	265, 1230,
	266, 1230,
	268, 1230,
	269, 1230,
	272, 1230,
	276, 1230,
	277, 1230,
	278, 1230,
	281, 1230,
	282, 1230,
	283, 1230,
	284, 1230,
	286, 1230,
	287, 1230,
	288, 1230,
	289, 1230,
	290, 1230,
	291, 1230,
	292, 1230,
	293, 1230,
	294, 1230,
	295, 1230,
	296, 1230,
	297, 1230,
	298, 1230,
	299, 1230,
	300, 1230,
	301, 1230,
	302, 1230,
	303, 1230,
	304, 1230,
	305, 1230,
	306, 1230,
	307, 1230,
	309, 1230,
	311, 1230,
	312, 1230,
	313, 1230,
	314, 1230,
	315, 1230,
	316, 1230,
	317, 1230,
	318, 1230,
	319, 1230,
	320, 1230,
	321, 1230,
	322, 1230,
	324, 1230,
	328, 1230,
	329, 1230,
	331, 1230,
	332, 1230,
	333, 1230,
	334, 1230,
	335, 1230,
	338, 1230,
	340, 1230,
	342, 1230,
	343, 1230,
	344, 1230,
	347, 1230,
	348, 1230,
	349, 1230,
	351, 1230,
	353, 1230,
	354, 1230,
	355, 1230,
	356, 1230,
	357, 1230,
	358, 1230,
	359, 1230,
	360, 1230,
	361, 1230,
	362, 1230,
	363, 1230,
	364, 1230,
	365, 1230,
	367, 1230,
	368, 1230,
	369, 1230,
	370, 1230,
	371, 1230,
	372, 1230,
	373, 1230,
	374, 1230,
	375, 1230,
	376, 1230,
	377, 1230,
	378, 1230,
	379, 1230,
	380, 1230,
	381, 1230,
	383, 1230,
	384, 1230,
	386, 1230,
	387, 1230,
	388, 1230,
	389, 1230,
	390, 1230,
	391, 1230,
	392, 1230,
	393, 1230,
	394, 1230,
	395, 1230,
	396, 1230,
	397, 1230,
	399, 1230,
	401, 1230,
	402, 1230,
	403, 1230,
	408, 1230,
	410, 1230,
	411, 1230,
	412, 1230,
	413, 1230,
	414, 1230,
	415, 1230,
	416, 1230,
	417, 1230,
	418, 1230,
	420, 1230,
	421, 1230,
	422, 1230,
	424, 1230,
	425, 1230,
	426, 1230,
	427, 1230,
	428, 1230,
	429, 1230,
	431, 1230,
	432, 1230,
	433, 1230,
	434, 1230,
	435, 1230,
	436, 1230,
	437, 1230,
	438, 1230,
	439, 1230,
	440, 1230,
	441, 1230,
	443, 1230,
	444, 1230,
	445, 1230,
	446, 1230,
	447, 1230,
	448, 1230,
	450, 1230,
	451, 1230,
	452, 1230,
	453, 1230,
	454, 1230,
	455, 1230,
	457, 1230,
	458, 1230,
	459, 1230,
	460, 1230,
	461, 1230,
	462, 1230,
	463, 1230,
	465, 1230,
	467, 1230,
	468, 1230,
	469, 1230,
	470, 1230,
	471, 1230,
	472, 1230,
	473, 1230,
	474, 1230,
	475, 1230,
	476, 1230,
	477, 1230,
	478, 1230,
	479, 1230,
	480, 1230,
	481, 1230,
	482, 1230,
	484, 1230,
	485, 1230,
	487, 1230,
	488, 1230,
	490, 1230,
	491, 1230,
	492, 1230,
	493, 1230,
	494, 1230,
	495, 1230,
	496, 1230,
	497, 1230,
	498, 1230,
	500, 1230,
	501, 1230,
	502, 1230,
	503, 1230,
	504, 1230,
	506, 1230,
	508, 1230,
	509, 1230,
	510, 1230,
	511, 1230,
	512, 1230,
	513, 1230,
	515, 1230,
	516, 1230,
	517, 1230,
	518, 1230,
	520, 1230,
	521, 1230,
	524, 1230,
	525, 1230,
	526, 1230,
	527, 1230,
	528, 1230,
	529, 1230,
	530, 1230,
	532, 1230,
	535, 1230,
	536, 1230,
	537, 1230,
	538, 1230,
	539, 1230,
	540, 1230,
	542, 1230,
	543, 1230,
	544, 1230,
	545, 1230,
	551, 1230,
	552, 1230,
	553, 1230,
	554, 1230,
	555, 1230,
	556, 1230,
	-2, 0,
	-1, 1564,
	1, 523,
	580, 523,
	582, 523,
	584, 523,
	-2, 1460,
	-1, 1567,
	4, 2609,
	11, 2609,
	12, 2609,
	14, 2609,
	15, 2609,
	16, 2609,
	17, 2609,
	18, 2609,
	19, 2609,
	21, 2609,
	22, 2609,
	23, 2609,
	24, 2609,
	25, 2609,
	26, 2609,
	27, 2609,
	28, 2609,
	30, 2609,
	31, 2609,
	34, 2609,
	35, 2609,
	37, 2609,
	39, 2609,
	42, 2609,
	43, 2609,
	45, 2609,
	46, 2609,
	47, 2609,
	48, 2609,
	49, 2609,
	50, 2609,
	51, 2609,
	52, 2609,
	54, 2609,
	55, 2609,
	56, 2609,
	57, 2609,
	59, 2609,
	60, 2609,
	61, 2609,
	62, 2609,
	63, 2609,
	64, 2609,
	65, 2609,
	69, 2609,
	70, 2609,
	71, 2609,
	72, 2609,
	74, 2609,
	75, 2609,
	76, 2609,
	77, 2609,
	80, 2609,
	81, 2609,
	82, 2609,
	83, 2609,
	84, 2609,
	85, 2609,
	86, 2609,
	87, 2609,
	89, 2609,
	90, 2609,
	91, 2609,
	92, 2609,
	93, 2609,
	95, 2609,
	96, 2609,
	97, 2609,
	98, 2609,
	99, 2609,
	100, 2609,
	101, 2609,
	102, 2609,
	104, 2609,
	105, 2609,
	106, 2609,
	107, 2609,
	108, 2609,
	109, 2609,
	110, 2609,
	118, 2609,
	119, 2609,
	120, 2609,
	121, 2609,
	122, 2609,
	124, 2609,
	125, 2609,
	126, 2609,
	128, 2609,
	129, 2609,
	130, 2609,
	132, 2609,
	133, 2609,
	134, 2609,
	136, 2609,
	137, 2609,
	138, 2609,
	141, 2609,
	142, 2609,
	143, 2609,
	145, 2609,
	146, 2609,
	148, 2609,
	149, 2609,
	150, 2609,
	152, 2609,
	153, 2609,
	154, 2609,
	155, 2609,
	156, 2609,
	157, 2609,
	158, 2609,
	159, 2609,
	160, 2609,
	161, 2609,
	162, 2609,
	163, 2609,
	164, 2609,
	165, 2609,
	166, 2609,
	167, 2609,
	171, 2609,
	172, 2609,
	173, 2609,
	174, 2609,
	175, 2609,
	176, 2609,
	177, 2609,
	178, 2609,
	181, 2609,
	182, 2609,
	184, 2609,
	187, 2609,
	188, 2609,
	189, 2609,
	190, 2609,
	191, 2609,
	192, 2609,
	193, 2609,
	194, 2609,
	195, 2609,
	196, 2609,
	197, 2609,
	198, 2609,
	199, 2609,
	200, 2609,
	202, 2609,
	203, 2609,
	205, 2609,
	206, 2609,
	208, 2609,
	209, 2609,
	210, 2609,
	211, 2609,
	212, 2609,
	213, 2609,
	214, 2609,
	215, 2609,
	216, 2609,
	217, 2609,
	218, 2609,
	219, 2609,
	220, 2609,
	221, 2609,
	222, 2609,
	223, 2609,
	224, 2609,
	226, 2609,
	227, 2609,
	229, 2609,
	230, 2609,
	231, 2609,
	232, 2609,
	234, 2609,
	235, 2609,
	236, 2609,
	237, 2609,
	239, 2609,
	241, 2609,
	242, 2609,
	243, 2609,
	244, 2609,
	245, 2609,
	246, 2609,
	247, 2609,
	248, 2609,
	249, 2609,
	250, 2609,
	252, 2609,
	253, 2609,
	254, 2609,
	255, 2609,
	256, 2609,
	257, 2609,
	258, 2609,
	259, 2609,
	261, 2609,
	262, 2609,
	263, 2609,
	265, 2609,
	266, 2609,
	267, 2609,
	268, 2609,
	269, 2609,
	270, 2609,
	272, 2609,
	276, 2609,
	277, 2609,
	278, 2609,
	281, 2609,
	282, 2609,
	283, 2609,
	284, 2609,
	285, 2609,
	286, 2609,
	287, 2609,
	288, 2609,
	289, 2609,
	290, 2609,
	291, 2609,
	292, 2609,
	293, 2609,
	294, 2609,
	295, 2609,
	296, 2609,
	297, 2609,
	298, 2609,
	299, 2609,
	300, 2609,
	301, 2609,
	302, 2609,
	303, 2609,
	304, 2609,
	305, 2609,
	306, 2609,
	307, 2609,
	309, 2609,
	310, 2609,
	311, 2609,
	312, 2609,
	313, 2609,
	314, 2609,
	315, 2609,
	316, 2609,
	317, 2609,
	318, 2609,
	319, 2609,
	320, 2609,
	321, 2609,
	322, 2609,
	324, 2609,
	327, 2609,
	328, 2609,
	329, 2609,
	331, 2609,
	332, 2609,
	333, 2609,
	334, 2609,
	335, 2609,
	338, 2609,
	342, 2609,
	343, 2609,
	344, 2609,
	345, 2609,
	347, 2609,
	348, 2609,
	349, 2609,
	351, 2609,
	353, 2609,
	354, 2609,
	355, 2609,
	356, 2609,
	357, 2609,
	358, 2609,
	359, 2609,
	360, 2609,
	361, 2609,
	362, 2609,
	363, 2609,
	364, 2609,
	365, 2609,
	367, 2609,
	368, 2609,
	369, 2609,
	370, 2609,
	371, 2609,
	372, 2609,
	373, 2609,
	374, 2609,
	375, 2609,
	376, 2609,
	377, 2609,
	378, 2609,
	379, 2609,
	380, 2609,
	381, 2609,
	383, 2609,
	384, 2609,
	386, 2609,
	387, 2609,
	388, 2609,
	389, 2609,
	390, 2609,
	391, 2609,
	392, 2609,
	393, 2609,
	394, 2609,
	395, 2609,
	396, 2609,
	397, 2609,
	399, 2609,
	401, 2609,
	402, 2609,
	403, 2609,
	408, 2609,
	409, 2609,
	410, 2609,
	411, 2609,
	412, 2609,
	413, 2609,
	414, 2609,
	415, 2609,
	416, 2609,
	417, 2609,
	418, 2609,
	420, 2609,
	421, 2609,
	422, 2609,
	423, 2609,
	424, 2609,
	425, 2609,
	426, 2609,
	427, 2609,
	428, 2609,
	429, 2609,
	430, 2609,
	431, 2609,
	432, 2609,
	433, 2609,
	434, 2609,
	435, 2609,
	436, 2609,
	437, 2609,
	438, 2609,
	439, 2609,
	440, 2609,
	441, 2609,
	443, 2609,
	444, 2609,
	445, 2609,
	446, 2609,
	447, 2609,
	448, 2609,
	450, 2609,
	451, 2609,
	452, 2609,
	453, 2609,
	454, 2609,
	455, 2609,
	456, 2609,
	457, 2609,
	458, 2609,
	459, 2609,
	460, 2609,
	461, 2609,
	462, 2609,
	463, 2609,
	465, 2609,
	467, 2609,
	468, 2609,
	469, 2609,
	470, 2609,
	471, 2609,
	472, 2609,
	473, 2609,
	474, 2609,
	475, 2609,
	476, 2609,
	477, 2609,
	478, 2609,
	479, 2609,
	480, 2609,
	481, 2609,
	482, 2609,
	484, 2609,
	485, 2609,
	487, 2609,
	488, 2609,
	490, 2609,
	491, 2609,
	492, 2609,
	493, 2609,
	494, 2609,
	495, 2609,
	496, 2609,
	497, 2609,
	498, 2609,
	500, 2609,
	501, 2609,
	502, 2609,
	503, 2609,
	504, 2609,
	506, 2609,
	508, 2609,
	509, 2609,
	510, 2609,
	511, 2609,
	512, 2609,
	513, 2609,
	515, 2609,
	516, 2609,
	517, 2609,
	518, 2609,
	520, 2609,
	521, 2609,
	524, 2609,
	525, 2609,
	526, 2609,
	527, 2609,
	528, 2609,
	529, 2609,
	530, 2609,
	532, 2609,
	535, 2609,
	536, 2609,
	537, 2609,
	538, 2609,
	539, 2609,
	540, 2609,
	542, 2609,
	543, 2609,
	544, 2609,
	545, 2609,
	551, 2609,
	552, 2609,
	553, 2609,
	554, 2609,
	555, 2609,
	556, 2609,
	557, 2609,
	559, 2609,
	562, 2609,
	563, 2609,
	564, 2609,
	565, 2609,
	566, 2609,
	567, 2609,
	569, 2609,
	570, 2609,
	571, 2609,
	572, 2609,
	573, 2609,
	574, 2609,
	575, 2609,
	576, 2609,
	577, 2609,
	579, 2609,
	582, 2609,
	583, 2609,
	585, 2609,
	586, 2609,
	-2, 0,
	-1, 1572,
	186, 2493,
	505, 2493,
	564, 2493,
	583, 2493,
	-2, 0,
	-1, 1621,
	388, 831,
	448, 831,
	488, 831,
	510, 831,
	-2, 0,
	-1, 1648,
	1, 826,
	580, 826,
	582, 826,
	584, 826,
	-2, 0,
	-1, 1649,
	1, 864,
	580, 864,
	582, 864,
	584, 864,
	-2, 0,
	-1, 1650,
	1, 872,
	580, 872,
	582, 872,
	584, 872,
	-2, 0,
	-1, 1653,
	1, 835,
	580, 835,
	582, 835,
	584, 835,
	-2, 0,
	-1, 1655,
	1, 839,
	580, 839,
	582, 839,
	584, 839,
	-2, 0,
	-1, 1661,
	1, 846,
	580, 846,
	582, 846,
	584, 846,
	-2, 0,
	-1, 1690,
	1, 2555,
	580, 2555,
	582, 2555,
	583, 2555,
	584, 2555,
	-2, 898,
	-1, 1691,
	1, 2490,
	580, 2490,
	582, 2490,
	583, 2490,
	584, 2490,
	-2, 899,
	-1, 1709,
	1, 1351,
	584, 1351,
	-2, 1356,
	-1, 1712,
	170, 1503,
	183, 1503,
	271, 1503,
	336, 1503,
	-2, 1441,
	-1, 1806,
	151, 1462,
	170, 1462,
	183, 1462,
	238, 1462,
	271, 1462,
	336, 1462,
	346, 1462,
	522, 1462,
	-2, 1904,
	-1, 1866,
	582, 2054,
	-2, 0,
	-1, 1901,
	151, 1462,
	170, 1462,
	183, 1462,
	238, 1462,
	271, 1462,
	336, 1462,
	346, 1462,
	522, 1462,
	-2, 1590,
	-1, 1935,
	505, 2490,
	583, 2490,
	586, 2490,
	-2, 0,
	-1, 1952,
	581, 1731,
	-2, 1719,
	-1, 1983,
	186, 2490,
	583, 2490,
	586, 2490,
	-2, 0,
	-1, 2031,
	1, 654,
	584, 654,
	-2, 1356,
	-1, 2157,
	220, 241,
	-2, 2201,
	-1, 2158,
	220, 242,
	-2, 287,
	-1, 2262,
	1, 828,
	580, 828,
	582, 828,
	584, 828,
	-2, 0,
	-1, 2263,
	1, 866,
	580, 866,
	582, 866,
	584, 866,
	-2, 0,
	-1, 2264,
	1, 874,
	580, 874,
	582, 874,
	584, 874,
	-2, 0,
	-1, 2298,
	1, 848,
	580, 848,
	582, 848,
	584, 848,
	-2, 0,
	-1, 2351,
	428, 1530,
	429, 1530,
	-2, 1764,
	-1, 2382,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1784,
	-1, 2383,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1785,
	-1, 2384,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1786,
	-1, 2385,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1787,
	-1, 2386,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1788,
	-1, 2387,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1789,
	-1, 2388,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1790,
	-1, 2389,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1791,
	-1, 2401,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1803,
	-1, 2402,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1804,
	-1, 2403,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1805,
	-1, 2406,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1810,
	-1, 2412,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1814,
	-1, 2414,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1822,
	-1, 2415,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1823,
	-1, 2416,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1824,
	-1, 2417,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1825,
	-1, 2553,
	5, 2205,
	186, 2065,
	581, 2202,
	-2, 2193,
	-1, 2554,
	186, 2066,
	-2, 2560,
	-1, 2555,
	186, 2067,
	-2, 2388,
	-1, 2556,
	186, 2068,
	-2, 2276,
	-1, 2557,
	186, 2069,
	-2, 2329,
	-1, 2558,
	186, 2070,
	-2, 2373,
	-1, 2559,
	186, 2071,
	-2, 2488,
	-1, 2560,
	186, 2072,
	-2, 1887,
	-1, 2630,
	1, 1591,
	2, 1591,
	107, 1591,
	151, 1591,
	170, 1591,
	183, 1591,
	187, 1591,
	204, 1591,
	207, 1591,
	234, 1591,
	238, 1591,
	249, 1591,
	267, 1591,
	271, 1591,
	310, 1591,
	336, 1591,
	340, 1591,
	346, 1591,
	419, 1591,
	423, 1591,
	522, 1591,
	533, 1591,
	548, 1591,
	549, 1591,
	550, 1591,
	560, 1591,
	580, 1591,
	582, 1591,
	584, 1591,
	586, 1591,
	-2, 1590,
	-1, 2643,
	581, 2174,
	-2, 2188,
	-1, 2645,
	1, 303,
	548, 303,
	-2, 1489,
	-1, 2671,
	581, 1730,
	-2, 1720,
	-1, 2849,
	1, 1205,
	580, 1205,
	582, 1205,
	584, 1205,
	-2, 1489,
	-1, 3017,
	341, 1533,
	-2, 2599,
	-1, 3018,
	341, 1534,
	-2, 2474,
	-1, 3022,
	428, 2131,
	429, 2131,
	-2, 1885,
	-1, 3023,
	428, 2135,
	429, 2135,
	-2, 1886,
	-1, 3024,
	428, 2132,
	429, 2132,
	-2, 1885,
	-1, 3025,
	428, 2136,
	429, 2136,
	-2, 1886,
	-1, 3038,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1812,
	-1, 3039,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1816,
	-1, 3045,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1818,
	-1, 3261,
	1, 651,
	580, 651,
	582, 651,
	584, 651,
	-2, 1356,
	-1, 3416,
	44, 2166,
	-2, 969,
	-1, 3421,
	1, 1205,
	580, 1205,
	582, 1205,
	584, 1205,
	-2, 1489,
	-1, 3526,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1820,
	-1, 3533,
	243, 0,
	245, 0,
	327, 0,
	-2, 1839,
	-1, 3600,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1868,
	-1, 3601,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1869,
	-1, 3602,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1870,
	-1, 3606,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1874,
	-1, 3607,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1875,
	-1, 3608,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1876,
	-1, 3654,
	581, 2175,
	-2, 2189,
	-1, 3824,
	583, 2717,
	-2, 1415,
	-1, 3882,
	243, 0,
	245, 0,
	327, 0,
	-2, 1840,
	-1, 3885,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1843,
	-1, 3886,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1845,
	-1, 3987,
	583, 2190,
	-2, 1240,
	-1, 4129,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1844,
	-1, 4130,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1846,
	-1, 4141,
	243, 0,
	-2, 1877,
	-1, 4315,
	243, 0,
	-2, 1878,
	-1, 4504,
	51, 0,
	217, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 2563,
}

const sqlPrivate = 57344

const sqlLast = 123054

var sqlAct = [...]int{
	265, 4600, 4686, 3405, 2927, 3172, 4497, 4355, 4556, 2914,
	4377, 4190, 4485, 4496, 4347, 4503, 3404, 4514, 4627, 4398,
	2079, 4472, 4237, 2154, 4373, 4456, 3865, 2737, 1205, 4515,
	4176, 4453, 4516, 2000, 2779, 4268, 4436, 1473, 3565, 1216,
	4569, 4244, 4319, 4085, 4080, 2229, 4046, 3518, 4502, 4150,
	4195, 1285, 4118, 3816, 1289, 4026, 3983, 3288, 3808, 2361,
	4060, 4067, 4253, 1278, 3346, 3438, 257, 4069, 1038, 2013,
	3984, 3752, 2799, 2585, 2238, 788, 3968, 4282, 2429, 3031,
	4090, 3432, 3400, 3789, 3772, 1721, 3774, 2087, 2369, 2811,
	3291, 2936, 4146, 1029, 1939, 1588, 2362, 754, 1349, 3477,
	2873, 788, 3479, 3390, 2949, 2903, 1907, 2938, 1441, 2884,
	3657, 3215, 3864, 3195, 3155, 1940, 2946, 2929, 1271, 2935,
	2898, 3187, 3176, 2236, 2915, 1876, 2098, 3178, 2900, 2149,
	2148, 4601, 863, 3310, 2739, 2622, 3625, 2623, 3921, 3154,
	2442, 4320, 2473, 1852, 1037, 174, 1814, 2945, 2366, 4,
	3015, 3285, 1283, 1528, 2471, 2132, 1448, 2877, 259, 258,
	783, 2826, 2144, 2125, 1196, 2625, 2885, 2067, 1086, 2071,
	1332, 1709, 3272, 1257, 2603, 2011, 2462, 1877, 2426, 3222,
	2333, 2057, 2350, 2331, 3402, 2655, 2582, 1091, 1629, 1988,
	1565, 2908, 1280, 1896, 1268, 2202, 1531, 1586, 789, 2189,
	790, 4399, 2721, 1318, 1093, 2939, 685, 2654, 1199, 785,
	2465, 2612, 1847, 2593, 108, 671, 1893, 1886, 1178, 693,
	2515, 1799, 183, 1722, 184, 1661, 2549, 1723, 1648, 2778,
	1136, 2443, 1213, 794, 797, 2215, 736, 748, 174, 1563,
	1195, 1556, 1468, 856, 2332, 2334, 2188, 2086, 4557, 2355,
	1067, 1989, 1986, 688, 44, 1201, 43, 41, 32, 794,
	797, 696, 30, 1176, 3066, 28, 1708, 711, 1728, 925,
	1479, 945, 3639, 837, 3640, 4699, 3062, 4689, 3174, 2602,
	4674, 3457, 4673, 4663, 2602, 2002, 2602, 2163, 2002, 1327,
	4645, 4643, 4588, 156, 4194, 4194, 2163, 2002, 2002, 4545,
	1033, 3448, 73, 4546, 46, 45, 3245, 4538, 3244, 1082,
	878, 2602, 2002, 2002, 4536, 2237, 3447, 4533, 2602, 74,
	4530, 4534, 151, 1089, 4531, 4500, 4499, 4498, 1088, 2163,
	2163, 2023, 4493, 4492, 4483, 78, 2023, 2023, 4194, 4481,
	4478, 1595, 1033, 4194, 4256, 4451, 67, 3457, 4423, 4194,
	4416, 1472, 2662, 48, 2602, 153, 4415, 4410, 4409, 1193,
	2602, 4194, 4194, 4403, 4369, 4317, 4299, 2163, 4037, 2662,
	3851, 2595, 4296, 47, 4293, 87, 2163, 4246, 4194, 4210,
	4209, 4247, 4201, 2163, 2163, 1327, 2163, 4200, 4193, 1179,
	1179, 4194, 4194, 3230, 4157, 1235, 2163, 1014, 2163, 1013,
	1034, 50, 68, 4131, 4109, 4098, 2682, 2662, 2023, 3457,
	51, 3629, 4021, 4006, 3884, 57, 2602, 2602, 2662, 154,
	3832, 3826, 1228, 1654, 3474, 3474, 73, 49, 3787, 107,
	3075, 2807, 3788, 3649, 93, 104, 3076, 3650, 3647, 2763,
	1581, 3632, 3648, 74, 3549, 2602, 3545, 3473, 2163, 1028,
	2602, 3474, 1023, 3464, 3171, 3030, 3166, 3465, 2602, 78,
	2602, 3165, 3118, 3116, 3108, 2602, 3119, 3117, 3109, 1736,
	1737, 2658, 2602, 52, 2020, 1779, 1780, 1781, 3106, 3077,
	2953, 2925, 2602, 2602, 2023, 2225, 2924, 2681, 1180, 4424,
	2225, 94, 2705, 1767, 2661, 229, 2602, 2652, 2662, 87,
	1739, 2602, 4321, 1229, 1493, 93, 2468, 2163, 2646, 1785,
	2601, 2224, 2163, 4312, 2602, 2225, 1182, 4300, 1183, 4256,
	2023, 3629, 1481, 2594, 4078, 4037, 3127, 3128, 4007, 3145,
	3146, 3147, 3851, 3465, 2802, 1738, 2720, 2036, 2001, 861,
	2602, 1211, 231, 2091, 2017, 1758, 2020, 2879, 2162, 3880,
	2821, 2718, 1872, 107, 1755, 1208, 1467, 3737, 93, 104,
	1207, 3521, 3127, 3128, 3497, 3145, 3146, 3147, 1894, 2137,
	3449, 2639, 1631, 2638, 2637, 1736, 1737, 2636, 2635, 1184,
	3937, 229, 3065, 1181, 1022, 3879, 3127, 3128, 1084, 3450,
	3896, 230, 1021, 2469, 1020, 1019, 1018, 3127, 3128, 1767,
	1017, 1016, 3142, 223, 1481, 2992, 1739, 1012, 229, 1011,
	1010, 1009, 224, 1008, 1007, 94, 229, 1006, 1005, 1004,
	1003, 1481, 1002, 1001, 1000, 999, 998, 997, 231, 1761,
	1762, 1763, 1764, 996, 185, 97, 923, 2003, 3142, 1744,
	2003, 1738, 922, 921, 920, 3127, 3128, 919, 918, 2003,
	2003, 1758, 53, 917, 916, 231, 915, 914, 913, 1065,
	1755, 912, 911, 231, 2003, 2003, 56, 910, 909, 908,
	907, 59, 906, 905, 2470, 1776, 2467, 230, 1786, 904,
	69, 903, 3127, 3128, 1766, 1768, 58, 182, 100, 902,
	103, 901, 900, 899, 54, 898, 3133, 897, 155, 2498,
	896, 3447, 895, 894, 230, 55, 1229, 893, 2020, 892,
	1753, 1754, 230, 891, 229, 1492, 223, 881, 880, 876,
	185, 875, 62, 4092, 223, 224, 869, 148, 1774, 1294,
	1091, 868, 3133, 224, 855, 1761, 1762, 1763, 1764, 854,
	811, 152, 810, 1759, 809, 1744, 808, 185, 800, 799,
	4188, 798, 769, 1091, 760, 185, 3133, 1091, 3148, 97,
	759, 231, 758, 742, 253, 252, 251, 3133, 250, 2484,
	249, 2594, 248, 1352, 1599, 247, 246, 1352, 245, 244,
	243, 229, 1294, 242, 1487, 229, 241, 150, 240, 239,
	1766, 1768, 238, 1279, 3148, 1229, 1736, 1737, 148, 237,
	3143, 236, 186, 1091, 3670, 1091, 2692, 1091, 235, 2001,
	230, 182, 100, 1294, 103, 3133, 1753, 1754, 2020, 2017,
	1767, 1331, 223, 2472, 1322, 1336, 234, 1739, 231, 233,
	232, 224, 231, 2681, 2326, 3643, 3143, 3475, 229, 1294,
	3218, 1444, 1456, 1585, 1455, 1279, 862, 1451, 3088, 1759,
	1472, 148, 3133, 185, 3071, 1816, 3, 2975, 2860, 1294,
	2666, 1855, 1738, 229, 1294, 2644, 1855, 1765, 1854, 1897,
	2911, 3143, 1091, 1854, 1091, 3169, 2629, 230, 1294, 2065,
	229, 230, 2022, 1302, 1091, 231, 1091, 1920, 1760, 223,
	1858, 1209, 1735, 223, 1446, 1853, 1262, 1265, 224, 1471,
	2482, 1825, 224, 2893, 1537, 1540, 1475, 1279, 1279, 1338,
	231, 150, 1275, 3170, 1777, 1215, 4521, 4501, 2232, 3143,
	185, 1316, 4480, 4094, 185, 4324, 186, 231, 4384, 3127,
	3128, 1294, 4309, 1459, 230, 4303, 1345, 2466, 1438, 1443,
	4145, 1736, 1737, 4099, 229, 3144, 223, 4077, 3946, 1091,
	794, 797, 1091, 3919, 3918, 224, 3143, 4301, 3912, 230,
	3911, 3910, 1543, 2675, 1823, 3903, 1744, 3902, 1656, 3900,
	3895, 223, 1739, 1765, 3892, 3891, 230, 185, 3792, 3786,
	224, 3144, 3674, 3127, 3128, 1311, 3673, 3672, 223, 1526,
	1470, 231, 1469, 3653, 1760, 1486, 3620, 224, 3619, 3618,
	3541, 2231, 185, 1192, 174, 174, 1817, 1738, 1815, 1568,
	1570, 1766, 1768, 3537, 3213, 1775, 3144, 3162, 3153, 185,
	1600, 3126, 3123, 1778, 1756, 1752, 3122, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 3120, 3735, 3115, 1480,
	230, 1036, 3114, 3113, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 3110, 223, 3107, 3087, 1818, 4693, 1322, 3070, 3142,
	1322, 224, 3063, 2926, 3144, 2630, 2455, 1291, 1735, 1816,
	1759, 2170, 2205, 1034, 2168, 1091, 1734, 3139, 3140, 3141,
	4637, 1091, 4636, 185, 3138, 3136, 3137, 3129, 3130, 3131,
	3132, 3134, 3135, 3793, 1559, 4602, 4325, 3127, 3128, 3133,
	4555, 3144, 4553, 1217, 3567, 39, 4443, 1713, 4376, 4365,
	4362, 1744, 4361, 3139, 3140, 3141, 4360, 4341, 4323, 4322,
	3138, 3136, 3137, 3129, 3130, 3131, 3132, 3134, 3135, 4297,
	1756, 1752, 3236, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 1670, 1580, 1707, 2895, 4281, 3129, 3130, 3131,
	3132, 3134, 3135, 3133, 4280, 1594, 3136, 3137, 3129, 3130,
	3131, 3132, 3134, 3135, 4093, 2432, 4266, 2664, 4263, 3167,
	4262, 4257, 4206, 4184, 4143, 4126, 4125, 4106, 4105, 1805,
	4063, 4038, 3936, 3917, 3852, 229, 1091, 1091, 1091, 3846,
	3843, 3723, 1091, 3722, 3708, 3707, 1605, 3705, 3635, 1213,
	3623, 1213, 3532, 3143, 1622, 3137, 3129, 3130, 3131, 3132,
	3134, 3135, 1803, 3476, 229, 1760, 1352, 3458, 1657, 1874,
	1481, 3793, 2438, 3424, 229, 1091, 3359, 3321, 788, 3290,
	3238, 3092, 231, 3091, 1957, 788, 3086, 3054, 1294, 2872,
	3138, 3136, 3137, 3129, 3130, 3131, 3132, 3134, 3135, 1861,
	1860, 1859, 1710, 1856, 1848, 1923, 1846, 3143, 2673, 2672,
	1014, 231, 1013, 2641, 2634, 1883, 1936, 3133, 2600, 2480,
	1919, 231, 1875, 1984, 1718, 1717, 1870, 1869, 1712, 2497,
	1868, 230, 1867, 229, 1857, 1866, 1865, 1864, 1455, 1034,
	1863, 1928, 1862, 223, 1714, 1843, 2007, 1842, 1931, 2009,
	1731, 1732, 224, 1841, 1294, 2014, 1840, 1736, 1737, 2016,
	230, 1091, 1880, 1881, 2019, 1294, 1839, 1838, 1837, 1836,
	230, 1835, 223, 229, 2910, 1834, 1833, 1832, 1904, 4187,
	231, 224, 223, 1091, 1831, 1455, 2894, 1924, 1739, 1352,
	1830, 224, 1829, 1179, 1849, 1850, 1818, 174, 3144, 2483,
	1804, 1802, 2081, 185, 1749, 1747, 1748, 1740, 1741, 1742,
	1743, 1745, 1746, 185, 1797, 2054, 1562, 1310, 1736, 1737,
	231, 1233, 1224, 1738, 4066, 1557, 3942, 3888, 3669, 230,
	3646, 3638, 3074, 2632, 2029, 4161, 794, 797, 1322, 1926,
	3944, 223, 1767, 794, 797, 1905, 2233, 1736, 1737, 1739,
	224, 2063, 3144, 3127, 3128, 3668, 2028, 1817, 3234, 1902,
	1800, 2056, 3453, 1895, 4009, 1034, 1333, 2056, 1915, 230,
	4634, 4626, 185, 2800, 3210, 4363, 4258, 1335, 1739, 4249,
	2056, 223, 4248, 3324, 1738, 2005, 4097, 1932, 1951, 4040,
	224, 1873, 2048, 2047, 1980, 4254, 2056, 2058, 4039, 4008,
	3939, 3855, 3854, 3853, 1899, 3641, 3460, 1914, 2134, 1913,
	1912, 1910, 185, 1738, 1954, 1909, 1294, 1294, 1908, 3459,
	2783, 1328, 1327, 1897, 3796, 1855, 1352, 3519, 1705, 229,
	2481, 229, 1854, 1937, 1327, 2031, 1334, 4304, 3747, 1621,
	3129, 3130, 3131, 3132, 3134, 3135, 3112, 3111, 1838, 1327,
	2027, 1838, 1740, 1741, 1742, 1743, 1745, 1746, 1211, 4302,
	1211, 3036, 2765, 1330, 3720, 994, 2042, 3292, 3407, 3353,
	3406, 3469, 1208, 1671, 1208, 2254, 231, 1207, 231, 1207,
	1927, 1827, 1630, 4567, 2119, 2230, 2124, 4245, 1744, 2129,
	1824, 3138, 3136, 3137, 3129, 3130, 3131, 3132, 3134, 3135,
	4541, 2671, 4526, 4513, 3391, 2950, 2025, 1631, 2468, 995,
	2150, 2155, 2160, 3800, 3783, 2051, 2034, 1744, 3749, 3744,
	1294, 3728, 1294, 3494, 1294, 230, 3259, 230, 4147, 3174,
	2059, 2049, 1191, 1766, 1768, 2463, 1324, 223, 3569, 223,
	1294, 1294, 1871, 1851, 3080, 3398, 224, 2198, 224, 4180,
	4522, 1294, 2199, 1536, 1561, 1464, 1305, 1261, 2097, 4535,
	2818, 4532, 3443, 1294, 2206, 1294, 1294, 1294, 185, 2815,
	185, 4356, 2091, 2813, 3700, 1609, 794, 797, 4081, 2152,
	4450, 4338, 3295, 3715, 2933, 2907, 3383, 4585, 788, 2195,
	4586, 2240, 1759, 3513, 3762, 2469, 1503, 4227, 2117, 4616,
	3996, 992, 990, 988, 986, 983, 2706, 1465, 4688, 2253,
	3131, 3132, 3134, 3135, 2200, 1329, 1470, 4523, 1469, 4220,
	3263, 2304, 4212, 2212, 4171, 2724, 4035, 2053, 4034, 3760,
	2302, 3759, 3751, 2568, 3743, 3742, 3740, 3739, 2724, 3727,
	2722, 975, 3684, 3683, 3387, 2116, 3386, 3980, 3229, 2128,
	3085, 1668, 1032, 2722, 3235, 3084, 3083, 1669, 2665, 2235,
	2161, 3761, 3082, 1511, 1562, 2052, 2258, 3040, 2824, 2823,
	2820, 2809, 2246, 1325, 2220, 1091, 2470, 1091, 2467, 2043,
	2798, 3976, 1326, 2797, 1091, 1335, 2209, 1957, 1957, 1352,
	2325, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 2222, 1091, 2181, 1091,
	1091, 1091, 1091, 2180, 1034, 3977, 1034, 1760, 2241, 1031,
	2218, 1559, 2214, 2217, 1334, 2217, 794, 797, 1512, 1667,
	1335, 1091, 2741, 2793, 1091, 1091, 1607, 2792, 2343, 2226,
	1311, 2227, 1091, 2330, 2791, 4181, 1091, 2770, 1091, 1091,
	2769, 2732, 1945, 2341, 1652, 2653, 1352, 2413, 3323, 1711,
	3265, 2091, 1091, 1091, 1091, 1091, 1301, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 3292, 2511, 2280, 2245, 2510,
	4617, 2262, 2367, 2368, 2371, 2230, 2904, 3951, 1209, 1334,
	1209, 2311, 1507, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 4124, 1746, 3351, 2472, 1091, 2444, 2445, 980,
	3495, 3703, 2339, 2424, 2263, 1549, 2324, 1548, 1213, 2298,
	2179, 2444, 2460, 2099, 1547, 1352, 1546, 1033, 2713, 2319,
	1327, 2995, 1247, 850, 1213, 2270, 2122, 2250, 2354, 1478,
	1520, 1485, 2422, 1491, 2744, 2956, 2103, 2506, 3950, 1525,
	1091, 1352, 1466, 4349, 1651, 2428, 1566, 1747, 1748, 1740,
	1741, 1742, 1743, 1745, 1746, 2645, 2552, 2552, 2566, 4621,
	2444, 1951, 1951, 2586, 2588, 2342, 2264, 2335, 2327, 2592,
	2755, 1014, 1561, 2358, 1014, 1014, 2359, 2360, 2329, 2328,
	1742, 1743, 1745, 1746, 2459, 2088, 2308, 1954, 1954, 3135,
	1623, 3013, 2787, 2100, 2767, 2780, 2781, 2428, 1579, 3711,
	1584, 2780, 2781, 3972, 2617, 2316, 4010, 1680, 3973, 2466,
	1593, 2508, 1598, 2642, 2780, 2781, 2509, 2463, 2084, 2512,
	1279, 2513, 2514, 3028, 4647, 851, 2318, 2754, 2998, 2341,
	2060, 2061, 2271, 1736, 1737, 2609, 1716, 1034, 2219, 4519,
	2440, 3503, 2267, 2340, 1294, 1294, 1034, 2089, 2090, 3352,
	1034, 1904, 1704, 4622, 4585, 3502, 2032, 1767, 1179, 2687,
	3975, 2631, 4351, 1309, 1739, 2691, 3992, 2436, 1279, 2457,
	1666, 2418, 1619, 1655, 2434, 1684, 3978, 2085, 2989, 2702,
	1885, 2608, 2261, 1652, 3555, 2472, 1352, 4033, 2339, 2419,
	3741, 1631, 2817, 1030, 2420, 889, 2701, 2104, 2425, 1738,
	1631, 2695, 2548, 174, 1279, 1279, 2667, 2616, 2659, 2621,
	2561, 2590, 2627, 2628, 2598, 2599, 2338, 3738, 2577, 2135,
	1957, 3724, 2614, 2615, 2816, 1915, 2610, 3262, 3385, 1532,
	1322, 2743, 1902, 2814, 2723, 1857, 3558, 2812, 1034, 683,
	3349, 2819, 1606, 1649, 970, 2790, 2768, 2656, 2167, 2166,
	1602, 1663, 3027, 4123, 2694, 1317, 4597, 4605, 1352, 2997,
	1889, 2410, 4624, 2105, 2106, 3556, 678, 2337, 4604, 1027,
	2131, 2651, 1294, 3020, 3021, 4420, 1608, 1530, 984, 984,
	984, 985, 984, 1651, 2733, 1328, 2674, 2101, 1091, 1091,
	2994, 1091, 3440, 2697, 2130, 2678, 1444, 2303, 2686, 1849,
	1850, 3974, 2689, 1744, 2690, 1650, 2301, 1892, 3769, 2677,
	4520, 4650, 2680, 788, 848, 1294, 847, 1211, 1509, 2704,
	4574, 2726, 1887, 1455, 2696, 4630, 2810, 2126, 2102, 2340,
	4677, 1208, 3487, 1211, 2698, 2773, 1207, 3340, 2788, 3981,
	1890, 3480, 3959, 2703, 2772, 2876, 1294, 1208, 1766, 1768,
	3870, 1506, 1207, 3332, 3869, 2766, 2089, 2090, 1294, 2707,
	1294, 971, 2891, 3770, 3990, 970, 2315, 2918, 2758, 1603,
	767, 2147, 2742, 3441, 2002, 1294, 4432, 2727, 2421, 3697,
	3696, 2771, 2947, 1888, 1328, 2472, 2127, 2317, 2423, 2996,
	1027, 1246, 3341, 2269, 2789, 882, 2746, 2749, 2736, 2855,
	1324, 3688, 2338, 3768, 2857, 3278, 3712, 1759, 3333, 4518,
	2957, 2958, 2729, 3189, 2472, 4430, 1091, 853, 852, 1681,
	4350, 2964, 2965, 2966, 1951, 1992, 2146, 2408, 1911, 801,
	2411, 2072, 3339, 2976, 3051, 2977, 3482, 2073, 4168, 4165,
	2796, 794, 797, 2107, 3960, 1945, 1945, 2801, 3331, 4623,
	1954, 3481, 3440, 2951, 2782, 2784, 2785, 2786, 1455, 4418,
	4487, 2973, 4488, 3049, 2795, 2727, 1279, 1091, 1025, 2851,
	970, 794, 797, 1091, 1091, 2794, 2727, 765, 3980, 1329,
	2407, 1470, 971, 2858, 2932, 2954, 981, 3042, 4357, 174,
	2959, 1992, 2960, 4371, 2922, 1027, 1891, 2870, 4419, 1324,
	2729, 2728, 1992, 1455, 2883, 1455, 3000, 2920, 3002, 2972,
	2880, 2729, 3976, 1220, 1532, 2887, 3969, 3991, 3307, 2108,
	3264, 2981, 2881, 2983, 2852, 2985, 2902, 2731, 1091, 1091,
	2913, 870, 1042, 3967, 1091, 1678, 2923, 1325, 2934, 2427,
	732, 1026, 3971, 2709, 2111, 3274, 1326, 1091, 1091, 972,
	2074, 1231, 1760, 1091, 1091, 1218, 1682, 2952, 3003, 1091,
	2921, 3005, 2711, 2094, 2850, 890, 3977, 2078, 1091, 1091,
	1091, 1844, 2123, 4628, 1091, 3306, 1679, 2970, 1329, 4055,
	2135, 3232, 2135, 4573, 1091, 2979, 1715, 971, 2730, 2728,
	2980, 2978, 2982, 2266, 2984, 2082, 2712, 3866, 1222, 2112,
	2728, 1091, 3046, 4136, 2435, 679, 3188, 4548, 3970, 3685,
	3043, 3008, 3073, 1308, 2993, 2731, 2710, 4549, 2095, 4596,
	4470, 3019, 1618, 1620, 3725, 3047, 2731, 4461, 4018, 3052,
	3010, 3362, 3009, 2260, 701, 2725, 1325, 2075, 2080, 2110,
	883, 884, 3068, 3069, 1683, 1326, 2454, 3072, 2354, 3014,
	1796, 3029, 3090, 2613, 3483, 3484, 3485, 3486, 2093, 3064,
	1889, 4651, 1221, 4120, 2626, 2138, 2409, 1209, 3311, 3777,
	972, 2145, 1033, 2724, 802, 803, 2730, 4629, 3775, 3571,
	4638, 680, 4678, 1209, 4065, 4070, 766, 2730, 2747, 973,
	3665, 1091, 1091, 1091, 1740, 1741, 1742, 1743, 1745, 1746,
	1091, 1091, 1091, 3860, 4071, 1091, 3276, 1892, 1236, 3041,
	4631, 3871, 3515, 3011, 1327, 1091, 1213, 1352, 3313, 2114,
	2076, 1091, 2611, 1091, 3181, 3182, 2003, 1636, 4378, 681,
	4517, 682, 1213, 1726, 768, 4584, 4582, 1604, 764, 4397,
	1890, 974, 4265, 3814, 3428, 3777, 2187, 4274, 3275, 1882,
	1352, 1234, 1227, 670, 3775, 3791, 3609, 1566, 3079, 1566,
	3915, 4203, 1213, 3867, 3972, 1352, 2082, 1034, 3686, 3973,
	2357, 2092, 2044, 3223, 4202, 972, 871, 872, 3164, 4572,
	4337, 4656, 3312, 1957, 2139, 3203, 2091, 1352, 3778, 3815,
	3216, 2347, 4056, 3755, 3183, 2120, 3699, 4119, 3487, 3995,
	3286, 3429, 1294, 1294, 3420, 1725, 3994, 3480, 1945, 3048,
	973, 3228, 3282, 1327, 2892, 805, 804, 3268, 1720, 3050,
	1725, 3975, 2886, 2874, 2041, 1091, 2213, 2207, 885, 886,
	2201, 2193, 2173, 4379, 3242, 3554, 2774, 3978, 2115, 1091,
	3249, 3680, 1500, 3251, 3252, 3193, 1238, 2081, 3255, 3624,
	3256, 741, 3257, 1294, 4437, 4547, 3217, 3516, 1957, 3191,
	4400, 3212, 974, 1050, 3778, 4169, 3961, 3280, 1725, 3269,
	3270, 3279, 3192, 2309, 806, 807, 1091, 3201, 3659, 1455,
	1455, 2037, 3253, 3204, 3205, 2081, 3159, 3160, 3161, 3817,
	1294, 3209, 3175, 3260, 3296, 3221, 1891, 3300, 3233, 2039,
	4086, 1322, 3482, 3872, 2871, 3190, 1724, 3266, 3687, 1249,
	3202, 4068, 1294, 1024, 1294, 973, 4243, 3481, 4241, 4183,
	3298, 1724, 1885, 1219, 3294, 3297, 2348, 3293, 3302, 2134,
	1352, 3304, 3660, 2251, 4121, 3239, 3240, 2134, 3241, 2040,
	3034, 1294, 3610, 2077, 3207, 1294, 3208, 3283, 3225, 3226,
	3227, 3611, 3773, 3776, 1455, 3916, 3012, 3326, 3661, 1796,
	3658, 3365, 3974, 3367, 873, 874, 3371, 974, 1294, 1724,
	3377, 1726, 3637, 3287, 2650, 1294, 2748, 1294, 3186, 2198,
	3348, 1352, 3250, 263, 4655, 3873, 1726, 1951, 788, 3254,
	3185, 3246, 3247, 2604, 3354, 1653, 2142, 2649, 3261, 1294,
	3981, 2648, 1889, 2647, 3993, 3478, 2775, 2776, 1541, 3782,
	3267, 1294, 2878, 1954, 1031, 4191, 4344, 4047, 4238, 3360,
	3403, 3344, 1542, 2752, 3706, 1211, 4380, 2607, 1213, 3776,
	3470, 2211, 3436, 3394, 3681, 4447, 3197, 3350, 1555, 1208,
	4291, 1211, 3281, 3412, 1207, 1553, 3314, 3419, 888, 1892,
	2113, 2140, 4593, 1294, 1294, 1208, 3322, 4103, 2947, 4375,
	1207, 3328, 1951, 4163, 1887, 1637, 3335, 2947, 2606, 4434,
	3389, 1211, 3392, 2605, 2955, 3338, 1294, 2123, 3355, 3329,
	2856, 3427, 1890, 3342, 1279, 1208, 3330, 2854, 1954, 2239,
	1207, 2141, 3456, 4283, 3361, 1612, 2072, 3434, 3224, 3445,
	3384, 3343, 2073, 3345, 3374, 2121, 4284, 3380, 4178, 3363,
	3922, 4440, 3372, 4345, 3626, 1352, 3378, 4192, 1352, 2479,
	3483, 3484, 3485, 3486, 1700, 1888, 4102, 4465, 4595, 3496,
	3373, 3198, 2772, 3336, 3379, 1702, 740, 3337, 3388, 4285,
	1699, 1697, 1675, 3430, 3435, 2118, 794, 797, 3396, 1673,
	3437, 1091, 4179, 4537, 3662, 3416, 3417, 1091, 1091, 3415,
	1647, 1091, 1091, 1091, 1645, 1091, 2314, 3157, 4364, 2313,
	1054, 1643, 4142, 3914, 1091, 1957, 2122, 1641, 3442, 3489,
	3196, 1639, 3468, 1091, 1633, 1455, 1091, 3451, 3509, 174,
	174, 3781, 1352, 3472, 3454, 3455, 3488, 4441, 3444, 4346,
	4287, 1091, 3156, 3531, 3492, 3491, 1628, 1927, 3243, 1352,
	3121, 3466, 3200, 3053, 1626, 2074, 3508, 2875, 2808, 1957,
	1957, 1091, 1091, 4286, 1091, 1091, 1091, 2764, 1551, 2300,
	2676, 2320, 2078, 1922, 3506, 1918, 1703, 1590, 1891, 3511,
	4288, 3510, 1091, 3512, 1720, 1034, 1091, 3517, 1957, 1957,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 3534,
	1091, 3505, 3583, 3490, 3584, 2991, 1554, 1091, 1091, 1957,
	2990, 3543, 3544, 1552, 1091, 3514, 887, 2478, 2962, 2336,
	3499, 1662, 3500, 2275, 3501, 1091, 2192, 2172, 1985, 1828,
	1601, 1524, 2075, 2080, 4512, 982, 1213, 1213, 4019, 3746,
	1091, 3745, 2762, 4020, 4005, 4433, 4570, 3364, 3199, 1701,
	4084, 4025, 3965, 3539, 1698, 1696, 1674, 3813, 3804, 4079,
	3758, 3718, 3716, 1672, 2367, 3574, 3551, 1211, 3698, 1352,
	3423, 3418, 3408, 3550, 1646, 2905, 3655, 2897, 1644, 3561,
	2890, 1208, 3566, 2882, 2806, 1642, 1207, 3621, 3557, 3559,
	3560, 1640, 3642, 2367, 3589, 1638, 3433, 3573, 1632, 2868,
	2853, 1945, 3580, 2693, 3581, 1209, 2688, 2171, 3582, 1951,
	4561, 1729, 1992, 2169, 3586, 2076, 1091, 3663, 3664, 3613,
	1627, 1209, 2861, 2151, 3617, 2864, 3588, 2866, 1625, 2136,
	2109, 3675, 3676, 3677, 3678, 1954, 2096, 2083, 3679, 2024,
	2299, 1091, 1550, 1566, 2021, 3614, 2018, 2015, 2010, 2008,
	3628, 1209, 2004, 1951, 1951, 1995, 4070, 3317, 1188, 3375,
	1930, 2082, 174, 3633, 3634, 2145, 3032, 3622, 3630, 3631,
	4586, 2909, 1091, 1091, 2909, 4071, 1945, 2045, 2323, 1954,
	1954, 3006, 1951, 1951, 3717, 1189, 3719, 3004, 4475, 987,
	989, 991, 3692, 4108, 3645, 3644, 4101, 4100, 4032, 3947,
	2948, 2064, 1505, 2724, 2724, 4276, 2753, 4269, 1954, 1954,
	1091, 4289, 3315, 1951, 3825, 2210, 728, 4290, 2722, 2750,
	2091, 1730, 1694, 1695, 2321, 1270, 2265, 2295, 1269, 2294,
	4474, 3671, 2272, 3997, 1294, 4027, 1624, 1294, 4311, 1954,
	3923, 1736, 1737, 1736, 1737, 3729, 3901, 3309, 2756, 2757,
	2986, 3757, 3316, 2777, 1957, 1733, 1303, 1237, 4589, 4580,
	3801, 3033, 684, 3734, 3736, 3754, 2194, 4542, 2867, 3748,
	2322, 3733, 1739, 3702, 2297, 254, 2805, 1314, 3376, 3756,
	2757, 2761, 1279, 3750, 2815, 1294, 2813, 3753, 2822, 2804,
	781, 1091, 2803, 3721, 2760, 1190, 2759, 4425, 3726, 1213,
	1091, 1270, 3827, 4391, 838, 4385, 4343, 1738, 4330, 1738,
	1294, 1294, 1294, 3834, 1270, 2772, 4260, 695, 4236, 4172,
	4170, 4164, 667, 3955, 3954, 2918, 3811, 1294, 3803, 3790,
	3652, 3422, 2912, 2591, 3797, 2198, 2030, 1938, 2077, 3819,
	4625, 4189, 1294, 3963, 1099, 1211, 1211, 3780, 1352, 3962,
	3695, 3277, 2947, 3231, 4654, 3822, 3818, 4387, 3838, 1208,
	1208, 1472, 4467, 3771, 1207, 1207, 3779, 4468, 3798, 3287,
	3127, 3128, 1352, 1736, 1737, 1091, 1091, 3802, 3850, 4467,
	3821, 1091, 1091, 1957, 4468, 3893, 1091, 1091, 4599, 1091,
	261, 261, 261, 1091, 673, 674, 2474, 689, 673, 689,
	699, 3667, 3805, 739, 1091, 2716, 2717, 757, 3765, 2714,
	2715, 2716, 763, 2714, 2507, 3820, 3823, 1209, 1611, 261,
	1091, 3829, 3828, 3810, 1610, 3833, 3766, 1677, 4261, 4221,
	1676, 4029, 4024, 3767, 4023, 3841, 3889, 3858, 3666, 867,
	3844, 3848, 3562, 3856, 3784, 261, 3839, 3840, 3369, 3845,
	3874, 3366, 1822, 1821, 4640, 4606, 3847, 4429, 1951, 4428,
	4427, 3875, 3887, 4326, 3857, 4239, 1054, 4216, 4162, 3807,
	1054, 4159, 3868, 4058, 4044, 3943, 3849, 3883, 3831, 3785,
	1213, 3714, 3709, 3426, 1954, 3425, 1436, 3303, 1213, 3248,
	1436, 2988, 1352, 1945, 1352, 2969, 2968, 2967, 2896, 2869,
	2751, 1213, 2684, 2679, 2669, 2668, 2657, 2439, 2296, 2293,
	2292, 2291, 1294, 1294, 2290, 2289, 2208, 2182, 2178, 2177,
	2176, 1352, 2175, 3928, 2174, 1998, 1997, 1996, 1994, 3216,
	1929, 1693, 1692, 1634, 1519, 1518, 1517, 1945, 1945, 1516,
	1515, 1514, 1513, 3863, 1508, 1504, 1502, 1501, 1458, 1343,
	1342, 3913, 1341, 1340, 1339, 1307, 1213, 1306, 1213, 1256,
	1255, 3948, 3949, 1254, 1253, 1252, 1945, 1945, 673, 673,
	1251, 1250, 1248, 1243, 1242, 1241, 261, 1240, 1294, 1239,
	1171, 3931, 2035, 993, 3985, 979, 3985, 1951, 1352, 4348,
	1294, 3979, 2312, 1294, 3998, 1686, 3989, 1945, 92, 1992,
	1992, 3952, 1352, 3930, 3957, 3934, 3927, 3924, 1211, 1510,
	4000, 4001, 3935, 1954, 3988, 3929, 824, 3938, 174, 3925,
	3926, 86, 1208, 3920, 2143, 3713, 3999, 1207, 950, 4464,
	1494, 4370, 1294, 1294, 832, 4449, 4028, 3799, 4030, 3305,
	3964, 2825, 2274, 1635, 2276, 3211, 2633, 4417, 3897, 3089,
	1992, 4318, 1294, 4135, 2477, 1826, 3168, 88, 1075, 1121,
	2198, 4054, 4053, 3966, 1352, 3701, 4048, 2937, 1808, 1294,
	4051, 4050, 1813, 1942, 4045, 4031, 1944, 1041, 1279, 1355,
	4486, 2046, 1081, 4042, 2062, 2055, 2670, 1992, 2551, 1098,
	1095, 4022, 1946, 1948, 1213, 1209, 1209, 4076, 1097, 1096,
	1947, 1845, 4017, 1094, 1294, 1294, 1294, 1941, 3809, 1992,
	2916, 1992, 3452, 1560, 1558, 3318, 3319, 1352, 952, 3320,
	2050, 2433, 3985, 4088, 2461, 4036, 3078, 1819, 4043, 1091,
	1091, 1091, 1056, 4041, 4107, 1077, 2458, 1232, 1992, 1066,
	4087, 1055, 1992, 3194, 3173, 4064, 4049, 1352, 4003, 3439,
	4104, 3651, 1091, 4082, 2346, 1091, 1091, 4091, 842, 3356,
	3357, 4012, 4073, 3358, 4015, 1091, 3124, 4004, 1957, 2464,
	1223, 4096, 2574, 1091, 1091, 2567, 4089, 2563, 3258, 4013,
	2906, 1706, 4016, 4149, 1798, 2917, 4014, 1337, 1352, 1211,
	1294, 1059, 2431, 1810, 3058, 2356, 3446, 1211, 3214, 2663,
	4113, 4471, 4111, 1208, 4110, 4127, 3570, 2186, 1207, 1187,
	1211, 1208, 4115, 1186, 1230, 4122, 1207, 1185, 4455, 4452,
	1352, 2133, 3842, 3401, 1208, 2038, 2708, 1788, 1091, 1207,
	3409, 1071, 4116, 1454, 4132, 3179, 3471, 1091, 1521, 762,
	4196, 4072, 1945, 1083, 1787, 1091, 2846, 1957, 4138, 2845,
	4075, 4340, 1323, 1321, 1320, 1319, 1091, 4613, 4676, 1091,
	3710, 228, 4144, 3026, 1727, 1211, 1719, 1211, 4155, 4156,
	225, 1091, 227, 226, 4059, 4174, 3656, 3220, 1352, 1208,
	4540, 1208, 4207, 4208, 1207, 1294, 1207, 3731, 4199, 4158,
	1294, 1294, 3393, 23, 22, 21, 112, 42, 20, 128,
	147, 146, 120, 145, 144, 143, 142, 4173, 4175, 149,
	4222, 141, 4224, 140, 4225, 4182, 135, 139, 138, 137,
	136, 134, 132, 133, 127, 131, 130, 4215, 129, 1436,
	126, 4251, 125, 124, 123, 1352, 4242, 4226, 1294, 122,
	121, 3403, 119, 118, 117, 116, 115, 114, 113, 4217,
	753, 750, 61, 60, 111, 4213, 1213, 1213, 1209, 110,
	3055, 3056, 4205, 19, 40, 4259, 4223, 14, 65, 66,
	18, 1945, 1951, 4232, 4231, 2620, 1091, 1091, 13, 35,
	91, 4275, 4240, 102, 3985, 3985, 4234, 4218, 101, 2351,
	4255, 36, 4271, 1091, 1957, 4279, 4250, 4235, 1954, 99,
	98, 34, 17, 1211, 16, 4298, 4273, 15, 96, 4270,
	95, 33, 4294, 4295, 31, 11, 9, 1208, 8, 37,
	1225, 4272, 1207, 1906, 4267, 12, 4278, 4277, 5, 179,
	178, 4292, 4091, 181, 177, 1091, 180, 90, 1091, 176,
	175, 1455, 89, 29, 4306, 1213, 1054, 10, 171, 4307,
	4308, 1951, 1436, 1245, 4252, 3795, 4228, 1213, 81, 4336,
	173, 172, 170, 169, 168, 261, 82, 261, 261, 79,
	1274, 261, 1284, 3985, 4229, 167, 85, 1954, 4327, 4310,
	166, 4230, 80, 1304, 84, 3985, 4332, 83, 4316, 27,
	6, 64, 757, 7, 2081, 4117, 3493, 105, 106, 1091,
	1091, 4335, 38, 77, 3150, 3151, 3152, 76, 4374, 1091,
	4367, 4358, 75, 4359, 1213, 4352, 261, 1213, 261, 261,
	1274, 1294, 261, 261, 26, 1284, 4353, 63, 2569, 25,
	212, 1294, 1294, 211, 210, 209, 261, 208, 1474, 1209,
	207, 4368, 3985, 4366, 1279, 3985, 206, 1209, 1294, 205,
	200, 4408, 199, 204, 202, 201, 203, 198, 4381, 1498,
	1209, 215, 1091, 1091, 214, 4386, 220, 4382, 4383, 4389,
	4394, 4393, 1091, 4396, 4388, 4401, 4402, 4255, 1523, 219,
	218, 1284, 4406, 4407, 4404, 261, 261, 217, 1274, 1436,
	4413, 216, 4414, 4405, 213, 222, 197, 196, 1951, 4411,
	195, 193, 189, 4412, 188, 192, 194, 757, 191, 261,
	261, 190, 187, 1091, 1091, 1209, 1091, 1209, 221, 72,
	4442, 4426, 4422, 164, 1954, 165, 71, 163, 4446, 162,
	161, 160, 867, 159, 158, 4421, 157, 4454, 4457, 70,
	4469, 24, 2, 1, 0, 4466, 0, 0, 0, 0,
	0, 4444, 0, 0, 4473, 4445, 0, 0, 0, 4491,
	0, 0, 0, 0, 0, 1211, 1211, 4495, 0, 1091,
	1091, 1091, 0, 4494, 4463, 0, 0, 0, 0, 1208,
	1208, 4476, 4459, 0, 1207, 1207, 4458, 0, 0, 4462,
	4482, 0, 0, 0, 0, 0, 4490, 0, 0, 0,
	0, 1091, 0, 0, 1992, 261, 4524, 0, 0, 4529,
	0, 0, 0, 0, 4511, 0, 0, 4510, 4508, 4509,
	0, 0, 0, 4489, 261, 0, 0, 0, 0, 0,
	4543, 4525, 0, 0, 0, 0, 0, 0, 4527, 4552,
	0, 0, 0, 0, 0, 0, 0, 4539, 4554, 4550,
	4566, 0, 0, 1209, 1211, 1091, 1945, 0, 0, 0,
	4565, 0, 0, 0, 0, 0, 1211, 4564, 1208, 4551,
	4571, 0, 0, 1207, 4559, 0, 4560, 0, 3806, 0,
	1208, 0, 0, 0, 0, 1207, 4587, 0, 4562, 4563,
	2437, 0, 0, 4579, 4568, 0, 4583, 0, 4581, 4577,
	4578, 770, 4591, 0, 1213, 1808, 1213, 2081, 4454, 4558,
	4594, 4457, 4608, 4592, 4590, 0, 4598, 4609, 4603, 0,
	0, 4374, 4620, 1211, 4473, 4607, 1211, 4611, 4618, 0,
	4615, 0, 3985, 0, 3985, 1945, 0, 1208, 4619, 0,
	1208, 0, 1207, 4633, 0, 1207, 4614, 0, 3859, 0,
	0, 0, 1436, 0, 0, 4632, 0, 0, 4635, 2573,
	4610, 0, 4612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4648, 0, 4641, 4644, 1091, 1091, 4646, 0,
	0, 0, 4642, 4649, 0, 1091, 0, 1091, 1091, 0,
	4639, 4652, 0, 4661, 0, 0, 0, 4658, 4667, 0,
	0, 4666, 4664, 4672, 4671, 4669, 4665, 4670, 0, 0,
	4668, 0, 0, 0, 0, 0, 4679, 4675, 0, 4680,
	775, 0, 673, 4682, 0, 2918, 4684, 0, 4685, 0,
	4687, 4681, 0, 0, 0, 0, 4690, 0, 0, 1436,
	0, 4683, 0, 261, 1091, 261, 4695, 4692, 4697, 261,
	0, 4698, 4701, 4700, 4691, 4694, 4687, 0, 0, 0,
	4659, 4660, 1474, 1274, 261, 0, 261, 0, 0, 0,
	0, 0, 261, 1474, 689, 3527, 3528, 0, 0, 261,
	1474, 0, 1945, 0, 0, 3127, 3128, 779, 3145, 3146,
	3147, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 0, 261, 0, 1436, 3016,
	0, 0, 0, 261, 0, 1209, 1209, 4696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 777, 0, 0,
	0, 0, 0, 0, 1436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 2159, 0, 1992, 0, 0,
	1992, 3142, 0, 3590, 3591, 3592, 3593, 3594, 3595, 3596,
	3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606,
	3607, 3608, 0, 3612, 0, 0, 782, 0, 0, 2569,
	2569, 0, 0, 0, 0, 2072, 0, 0, 0, 0,
	0, 2073, 0, 0, 1209, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 1211, 1209, 0, 0, 1992,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 1208,
	0, 0, 1207, 0, 1207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4057, 0, 1350, 0,
	0, 0, 1449, 0, 0, 3133, 0, 0, 772, 4074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 0, 0, 1209, 0, 0, 1436,
	0, 0, 4095, 0, 0, 0, 0, 0, 0, 776,
	0, 0, 0, 0, 3149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 261, 0, 2074, 0, 0, 3148, 0, 0,
	0, 0, 0, 733, 0, 1736, 1737, 0, 0, 0,
	0, 2078, 0, 2569, 2569, 2569, 780, 0, 0, 0,
	0, 0, 774, 0, 0, 0, 0, 0, 0, 1767,
	0, 1436, 0, 0, 0, 0, 1739, 0, 0, 3143,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 771, 0,
	0, 1738, 0, 0, 0, 0, 0, 261, 0, 261,
	0, 2075, 2080, 673, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1737, 778, 757, 0, 0,
	0, 867, 0, 0, 0, 0, 1736, 1737, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	2573, 773, 0, 0, 0, 1739, 261, 0, 1274, 261,
	1767, 0, 1992, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 757, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 2273, 0, 0,
	1738, 0, 261, 261, 2076, 261, 0, 261, 0, 261,
	1758, 261, 1738, 0, 0, 1744, 0, 0, 0, 1755,
	0, 0, 1758, 0, 3144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2305, 0, 0, 2306, 0, 2307,
	2573, 2573, 0, 0, 0, 0, 2070, 0, 0, 0,
	2082, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 1768, 1736, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3878, 0, 0, 739, 0, 0, 0,
	757, 0, 0, 1209, 0, 1209, 1767, 0, 0, 0,
	0, 0, 0, 1739, 1761, 1762, 1763, 1764, 0, 0,
	0, 2068, 0, 0, 1744, 0, 1761, 1762, 1763, 1764,
	0, 0, 0, 0, 0, 0, 1744, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 2069, 0, 0, 0, 0, 0, 1755, 0, 1766,
	1768, 0, 0, 0, 0, 0, 3139, 3140, 3141, 0,
	0, 1766, 1768, 3138, 3136, 3137, 3129, 3130, 3131, 3132,
	3134, 3135, 0, 0, 0, 1753, 1754, 0, 0, 0,
	0, 0, 0, 0, 2573, 2573, 2573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3530, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 1921, 4372, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 1761, 1762, 1763, 1764, 0, 2077, 0, 0,
	0, 0, 1744, 0, 0, 0, 4392, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 673, 0, 0, 1760, 0, 0, 0, 261, 0,
	673, 0, 0, 0, 0, 0, 0, 1766, 1768, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3127, 3128, 0, 3145, 3146, 3147, 261, 1284,
	0, 0, 0, 1753, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3536, 0, 0, 0, 0,
	0, 0, 0, 0, 2569, 2569, 0, 0, 0, 0,
	1436, 0, 1765, 0, 2066, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 261, 1284, 0, 0,
	689, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	2683, 4477, 0, 1436, 0, 1760, 261, 4479, 3142, 261,
	0, 0, 0, 261, 0, 261, 0, 0, 1436, 0,
	1274, 0, 261, 261, 0, 1284, 1284, 2699, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	1436, 0, 0, 0, 1288, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
	2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
	2569, 0, 2569, 0, 0, 0, 0, 2740, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 73,
	0, 0, 1054, 0, 0, 0, 0, 1461, 0, 0,
	1765, 261, 3133, 0, 0, 0, 74, 0, 4141, 0,
	0, 2164, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 1760, 78, 0, 0, 0, 0, 0, 1496, 1756,
	1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745,
	1746, 261, 0, 0, 1749, 1747, 1748, 1740, 1741, 1742,
	1743, 1745, 1746, 0, 1533, 0, 0, 0, 0, 0,
	0, 1884, 87, 0, 3148, 0, 0, 261, 2859, 0,
	0, 4185, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 1436, 0, 0, 0, 0, 0, 0,
	0, 0, 1474, 1587, 0, 261, 0, 261, 0, 0,
	0, 0, 861, 0, 261, 0, 3143, 0, 0, 0,
	0, 0, 0, 0, 2901, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 2740, 0, 673, 0, 0, 0,
	0, 0, 0, 0, 1436, 2930, 867, 0, 2740, 2740,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 0, 261, 1274, 261, 0, 94, 0,
	1474, 0, 1474, 1284, 261, 0, 0, 1274, 0, 1274,
	0, 1274, 0, 0, 0, 2573, 2573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 261, 261, 261, 1274, 0, 0, 1274, 0, 261,
	0, 261, 0, 0, 0, 0, 4315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1040, 0,
	0, 3144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 1436, 0,
	261, 1436, 0, 0, 2370, 0, 0, 0, 0, 0,
	0, 0, 0, 2573, 2573, 2573, 2573, 2573, 2573, 2573,
	2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573, 2573,
	2573, 2573, 0, 2573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1436, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 860, 859, 0, 1474,
	0, 2475, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 182, 100, 0, 103, 0, 0,
	0, 0, 0, 3139, 3140, 3141, 0, 78, 0, 0,
	3138, 3136, 3137, 3129, 3130, 3131, 3132, 3134, 3135, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 862,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 0, 1736, 1737, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3127, 3128,
	0, 3145, 3146, 3147, 0, 0, 1767, 0, 231, 0,
	0, 0, 0, 1739, 0, 0, 2643, 0, 0, 0,
	0, 3535, 0, 0, 0, 0, 0, 861, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 93, 104, 1738, 186,
	0, 0, 1436, 0, 0, 0, 0, 230, 1758, 0,
	261, 0, 0, 0, 0, 0, 0, 1755, 0, 223,
	0, 0, 0, 0, 3142, 0, 261, 0, 224, 0,
	0, 673, 0, 0, 0, 0, 673, 0, 0, 673,
	0, 0, 673, 673, 0, 0, 0, 0, 673, 0,
	1571, 0, 0, 94, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 0,
	0, 3525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 0, 1744, 261, 0, 0, 0, 261, 261, 0,
	0, 2719, 0, 0, 0, 0, 0, 0, 3133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2740, 2740, 261, 0,
	3273, 0, 0, 0, 0, 0, 0, 1766, 1768, 0,
	2740, 0, 0, 3289, 0, 0, 0, 0, 0, 0,
	0, 2740, 3289, 0, 2740, 3289, 0, 0, 3289, 0,
	0, 0, 0, 1753, 1754, 0, 0, 0, 0, 0,
	3148, 261, 261, 3273, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 3273, 1759, 261, 0, 3347,
	3347, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 3143, 0, 0, 0, 0, 0, 2740, 0,
	2740, 0, 3370, 2740, 3273, 0, 0, 2740, 3273, 0,
	0, 0, 0, 0, 0, 0, 0, 2569, 0, 182,
	100, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 1436, 261, 3397, 862, 0, 3399, 2740, 0, 148,
	261, 0, 0, 0, 261, 0, 0, 1284, 0, 2228,
	0, 1299, 0, 0, 0, 1436, 0, 0, 0, 0,
	2569, 0, 261, 0, 0, 1288, 2242, 2901, 0, 0,
	1274, 0, 261, 231, 1040, 2740, 2244, 673, 1040, 0,
	1765, 0, 0, 0, 2740, 0, 0, 0, 2252, 0,
	2255, 2256, 2257, 0, 0, 0, 0, 0, 0, 150,
	0, 1760, 0, 0, 0, 261, 2901, 0, 0, 2901,
	0, 0, 0, 0, 186, 0, 0, 3144, 0, 0,
	0, 0, 230, 0, 1476, 0, 1482, 0, 1488, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	3498, 0, 0, 224, 0, 0, 0, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 3504, 0, 0,
	1274, 261, 0, 261, 0, 858, 0, 0, 0, 1274,
	1772, 1767, 0, 0, 0, 1436, 0, 1436, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 1577, 0, 1582, 0, 0, 0, 261,
	0, 0, 0, 0, 1436, 1591, 0, 1596, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 2569, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 3139,
	3140, 3141, 0, 0, 0, 3568, 3138, 3136, 3137, 3129,
	3130, 3131, 3132, 3134, 3135, 0, 0, 0, 0, 0,
	1658, 1436, 2841, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 2833, 2831, 1761, 1762, 1763,
	1764, 0, 2835, 2837, 2827, 0, 0, 1744, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 2573, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1436, 0, 0,
	261, 261, 0, 1776, 0, 0, 1786, 0, 0, 0,
	0, 0, 1766, 1768, 0, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 673, 673, 0, 0, 0, 87, 0, 1782,
	0, 1783, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 2573, 3180, 0, 1474, 1474, 1807, 0, 0, 0,
	1436, 0, 1820, 0, 0, 0, 1774, 0, 1474, 1474,
	1474, 0, 0, 0, 0, 0, 0, 861, 0, 0,
	0, 1759, 0, 0, 0, 3206, 0, 0, 0, 0,
	1436, 107, 0, 0, 0, 0, 93, 104, 0, 0,
	3219, 0, 3347, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3237, 1784, 0, 0, 0, 0, 0, 0,
	0, 1436, 3127, 3128, 0, 3145, 3146, 3147, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 757, 0,
	2829, 0, 0, 94, 0, 0, 0, 0, 0, 2700,
	1288, 2843, 0, 1436, 0, 0, 0, 1878, 1878, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3347,
	0, 0, 2842, 2834, 2832, 2836, 2838, 2828, 2830, 2844,
	261, 0, 0, 0, 0, 0, 2840, 0, 0, 0,
	0, 0, 1054, 0, 0, 1765, 0, 0, 3142, 0,
	3273, 0, 261, 0, 0, 0, 2573, 0, 0, 0,
	0, 1436, 0, 261, 0, 0, 1760, 0, 0, 0,
	2847, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 261, 0,
	0, 0, 1777, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2740, 261, 0, 0, 2660, 0, 1436, 0,
	0, 0, 2930, 2930, 0, 0, 0, 2849, 867, 867,
	2740, 0, 0, 0, 2901, 2901, 0, 97, 867, 2740,
	0, 0, 3133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1040, 0, 3219, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	100, 0, 103, 1775, 0, 0, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 3148, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 0, 0, 229, 0, 3906, 0,
	0, 0, 3905, 0, 862, 0, 0, 0, 0, 148,
	2963, 0, 3898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2848, 0, 0, 3143, 0, 0, 0,
	0, 0, 2839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1054, 1054, 0, 0, 0, 0, 0, 150,
	1449, 0, 0, 1350, 261, 0, 0, 0, 0, 0,
	1474, 0, 261, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 3127, 3128, 0, 3145, 3146,
	3147, 0, 0, 224, 0, 0, 0, 2544, 2545, 2546,
	2547, 2540, 2541, 2542, 2543, 0, 0, 0, 2740, 2740,
	0, 3347, 0, 0, 3347, 185, 0, 0, 0, 0,
	0, 0, 0, 2740, 0, 0, 0, 3547, 0, 0,
	3987, 0, 3987, 1474, 0, 0, 0, 0, 0, 0,
	0, 2740, 0, 3289, 3563, 0, 0, 1474, 1474, 261,
	3273, 3144, 0, 0, 0, 0, 0, 1054, 0, 0,
	0, 3142, 0, 3273, 0, 261, 3273, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2520, 2521,
	2522, 2523, 0, 2740, 0, 2740, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2532, 2533, 2534, 2535, 2528, 2529, 2530, 2531, 2536,
	2537, 2538, 2539, 2740, 0, 0, 0, 0, 4061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3987, 0,
	0, 1474, 0, 0, 3654, 2516, 2517, 2518, 2519, 2524,
	2525, 2526, 2527, 3139, 3140, 3141, 0, 0, 0, 0,
	3138, 3136, 3137, 3129, 3130, 3131, 3132, 3134, 3135, 0,
	0, 0, 0, 0, 0, 0, 2345, 0, 2349, 0,
	0, 0, 0, 0, 0, 2363, 0, 0, 0, 0,
	0, 0, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 0, 2412, 3143,
	2414, 2415, 2416, 2417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4166,
	4167, 0, 2441, 0, 0, 0, 0, 0, 0, 0,
	2740, 0, 3289, 1807, 0, 4177, 0, 2456, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	4197, 0, 4197, 2486, 2489, 2492, 2495, 0, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 0, 0, 0, 0, 0,
	0, 0, 757, 1214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 2565, 0, 2576, 2578,
	2583, 0, 0, 0, 0, 0, 0, 0, 3273, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	4177, 1214, 0, 0, 0, 0, 1214, 0, 2740, 0,
	0, 0, 0, 0, 0, 1736, 1737, 0, 0, 0,
	0, 0, 0, 0, 3144, 0, 4264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 1474, 1767,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	3987, 3987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 1736, 1737, 0, 261, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 1214, 0, 0, 0, 0, 1214, 1767,
	0, 1758, 3568, 0, 0, 0, 1739, 0, 0, 0,
	1755, 0, 1214, 3381, 0, 0, 0, 0, 3347, 4329,
	0, 0, 0, 0, 0, 4331, 3347, 4334, 0, 0,
	0, 0, 0, 4177, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 3413, 0, 0, 0, 0, 3987,
	0, 1758, 0, 0, 0, 0, 3421, 0, 0, 0,
	1755, 3987, 0, 0, 3524, 1214, 3139, 3140, 3141, 0,
	0, 0, 0, 3138, 3136, 3137, 3129, 3130, 3131, 3132,
	3134, 3135, 261, 0, 0, 1761, 1762, 1763, 1764, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 3462, 3463,
	0, 0, 4061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3044, 0, 0, 0, 3987, 0,
	261, 3987, 1203, 0, 0, 0, 0, 0, 0, 3933,
	0, 3289, 0, 0, 0, 1761, 1762, 1763, 1764, 0,
	1766, 1768, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3945, 1474, 0, 1474,
	0, 0, 0, 0, 0, 0, 1753, 1754, 256, 256,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 2862,
	2863, 0, 2865, 0, 0, 4431, 0, 0, 0, 0,
	1766, 1768, 0, 0, 0, 0, 4438, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4197,
	0, 0, 261, 0, 0, 0, 1753, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2740, 0, 0, 0, 0, 0, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0, 1759,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	1772, 1767, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 3568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 0,
	0, 0, 0, 1738, 0, 0, 0, 2987, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 1765, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	1214, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 1790, 0, 4177, 1958, 0,
	0, 0, 1214, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 4133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 1761, 1762, 1763,
	1764, 2740, 0, 0, 0, 0, 0, 1744, 3987, 0,
	3987, 0, 0, 1474, 0, 0, 0, 0, 0, 3038,
	3039, 0, 0, 4133, 0, 3045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	0, 0, 0, 1776, 3059, 3060, 1786, 0, 0, 1214,
	2456, 0, 1766, 1768, 0, 2370, 0, 1474, 0, 3067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	0, 1783, 0, 1214, 0, 3081, 0, 0, 1753, 1754,
	1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 3093, 2930, 0, 0, 1774, 0, 0, 0,
	0, 0, 2740, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 2370, 0, 0, 0, 2930, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 0, 0, 0, 0, 0, 0, 0, 3763,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2583, 2583, 2583, 0, 0, 0, 0, 0, 0,
	1214, 1214, 0, 0, 0, 0, 1878, 0, 0, 0,
	1214, 0, 0, 0, 3184, 0, 0, 1736, 1737, 0,
	0, 0, 0, 0, 0, 3835, 3836, 3837, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 1767, 1288, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 1738, 1772, 1767, 0, 0, 0, 0,
	0, 0, 1739, 1758, 0, 0, 0, 0, 0, 0,
	0, 1785, 1755, 0, 1214, 0, 1214, 0, 1214, 0,
	0, 0, 0, 0, 0, 0, 1040, 0, 0, 0,
	0, 0, 0, 0, 1214, 1214, 0, 1738, 0, 0,
	1040, 0, 0, 0, 0, 1214, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 1214, 0, 1214,
	1214, 1214, 0, 0, 0, 0, 3037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 1775, 0, 0, 0, 1744, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 0, 0, 0, 0, 3102, 0,
	0, 0, 3103, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 3940, 3941, 0,
	0, 1744, 1766, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 0, 1260, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1786, 1958, 1958, 1214, 0, 0, 1766, 1768, 0, 0,
	0, 924, 0, 970, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1782, 1347, 1783, 0, 0, 0, 0,
	1453, 0, 1753, 1754, 0, 0, 0, 0, 932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 946, 0, 930, 929, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 931, 0, 0, 0, 0, 934,
	1214, 0, 0, 0, 978, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 944, 0, 0, 1784, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 1575, 1576, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	971, 936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 4112,
	0, 4114, 1214, 0, 0, 0, 0, 0, 937, 1214,
	0, 0, 0, 0, 0, 0, 1760, 969, 1214, 0,
	0, 0, 2363, 0, 0, 0, 0, 0, 3522, 3523,
	0, 0, 3526, 0, 0, 1214, 3529, 0, 0, 1765,
	0, 0, 0, 0, 0, 3533, 0, 0, 0, 0,
	0, 73, 0, 0, 3540, 0, 0, 3184, 0, 0,
	1760, 939, 0, 1685, 0, 0, 0, 0, 74, 928,
	0, 0, 3552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 4160, 1777, 940, 941, 0,
	0, 0, 3575, 3576, 0, 3577, 3578, 3579, 0, 0,
	0, 0, 0, 0, 0, 0, 948, 947, 0, 0,
	0, 0, 0, 3585, 942, 0, 0, 3587, 957, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 975, 968, 1214, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 3615, 3616,
	0, 0, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 861, 0, 3627, 0, 972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	1214, 3636, 0, 93, 104, 4233, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 2452, 0, 1958, 0, 2453, 0, 0, 0,
	935, 0, 0, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 933, 0, 0, 0, 964,
	965, 0, 1214, 0, 0, 0, 0, 3682, 0, 0,
	0, 0, 967, 0, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3704, 0, 962, 0, 0, 0, 0, 0,
	0, 976, 958, 0, 951, 949, 0, 954, 0, 0,
	0, 0, 0, 955, 0, 0, 926, 1916, 973, 1214,
	0, 0, 0, 0, 3730, 0, 0, 0, 0, 0,
	0, 0, 1925, 0, 1453, 0, 0, 0, 0, 927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 966, 0, 956, 0, 0, 0, 0, 0, 953,
	0, 0, 1214, 0, 1214, 0, 0, 0, 0, 0,
	974, 0, 0, 0, 1260, 0, 0, 0, 959, 1214,
	0, 1453, 0, 0, 0, 0, 0, 938, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 963, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 1288, 1288, 0, 0,
	0, 0, 1878, 0, 0, 0, 182, 100, 0, 103,
	0, 3830, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 262, 262, 262, 0, 0, 0,
	0, 862, 0, 0, 0, 0, 148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 3876, 3877, 0, 262,
	0, 0, 3881, 3882, 0, 0, 0, 3885, 3886, 0,
	0, 0, 0, 0, 3890, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 3894, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 3899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 1737, 1569, 1769, 1770, 1771, 1779, 1780, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2184, 1767, 0, 0, 2191, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 2204,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2216, 0, 2216, 0, 0,
	0, 0, 0, 2223, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2191, 0, 0, 2248, 0, 0,
	1214, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 2268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2281, 0, 2283, 1214, 2285, 0, 2287, 0, 2288,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 1214,
	1761, 1762, 1763, 1764, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 2310,
	0, 0, 0, 0, 0, 0, 1214, 1214, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 1786,
	0, 0, 0, 0, 0, 1766, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 0, 1783, 0, 0, 0, 0, 0,
	0, 1753, 1754, 0, 0, 0, 0, 1214, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4128, 4129, 4130, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 2363, 0, 0, 4139, 4140, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 1214, 0,
	0, 0, 0, 0, 4148, 4151, 1784, 0, 0, 0,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 0, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 0, 0, 0, 0, 0, 1214,
	0, 1214, 0, 0, 0, 1214, 0, 0, 4198, 0,
	0, 0, 0, 0, 0, 0, 4204, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 0, 4211, 1765, 0,
	1040, 0, 0, 0, 0, 1214, 0, 0, 0, 0,
	0, 0, 4219, 0, 0, 0, 0, 0, 0, 1760,
	2640, 0, 1214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 1214, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2685, 0, 0, 1260, 0, 1214,
	0, 1260, 1214, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2204, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 262, 262, 0, 0, 262, 1775, 1297, 0, 0,
	0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747,
	1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 4339, 0, 0, 4342,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	262, 1297, 262, 262, 0, 1297, 262, 262, 0, 0,
	1297, 0, 0, 1214, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 1958, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 1453,
	1040, 1040, 1958, 1958, 0, 0, 0, 0, 0, 0,
	4390, 0, 0, 0, 0, 0, 0, 1297, 0, 262,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 1297, 0, 0,
	0, 0, 1297, 262, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 2191, 0, 0, 1297, 0, 0, 0,
	1214, 1214, 2204, 0, 2363, 0, 0, 0, 0, 0,
	0, 0, 0, 4151, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 0, 0, 703, 0, 0, 1297,
	0, 0, 0, 2961, 0, 1040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2971, 0, 2974, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4507, 4507, 4507, 0, 0, 0, 0, 706, 2999, 1453,
	3001, 1453, 0, 0, 0, 0, 0, 3007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 4528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	1260, 0, 0, 0, 0, 0, 0, 0, 3035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4507, 0, 1214, 0,
	0, 1214, 0, 709, 0, 0, 710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 0, 0, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 1214, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 1214, 0, 0, 0,
	0, 0, 1214, 0, 0, 0, 0, 4507, 4653, 0,
	0, 0, 0, 262, 0, 0, 4657, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 1214, 0, 262, 262,
	262, 0, 0, 0, 0, 0, 262, 1958, 0, 0,
	0, 0, 0, 262, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 712, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 0, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 1214, 0, 0, 0, 0, 714,
	0, 0, 1214, 729, 730, 727, 1214, 1297, 1214, 0,
	0, 722, 0, 0, 715, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 1214, 0, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 0, 0,
	0, 1260, 0, 0, 0, 1453, 1453, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	1214, 0, 1214, 0, 0, 0, 3271, 0, 0, 0,
	718, 0, 0, 0, 0, 726, 0, 0, 0, 0,
	0, 0, 1214, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 1214, 0, 1214, 0, 0, 1214, 0, 0,
	720, 0, 0, 0, 0, 0, 1214, 0, 0, 3325,
	3327, 0, 0, 2204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 1297, 1297, 262, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 1214, 1214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 262, 0, 0, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 1214,
	1214, 262, 0, 262, 0, 0, 0, 0, 3410, 262,
	0, 1214, 3414, 0, 0, 0, 0, 0, 1297, 0,
	1297, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 1297,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 1297,
	262, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 1297, 1958, 1297, 1297, 1297, 0, 0, 0, 0,
	0, 0, 0, 3467, 262, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 1214, 0, 262, 262, 0, 262,
	0, 262, 0, 262, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3507,
	0, 1453, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 1958, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3520, 0, 0,
	0, 0, 1214, 0, 0, 0, 0, 0, 0, 1214,
	0, 0, 0, 0, 1214, 1214, 0, 1297, 0, 0,
	260, 260, 260, 0, 0, 0, 0, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0, 1076,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 795,
	1772, 1767, 0, 0, 0, 0, 0, 0, 1739, 1214,
	0, 0, 1214, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 0,
	1214, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 1297, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1214,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 0, 0, 0, 262, 1744, 0, 1297,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 0, 262, 0, 1015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1035, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 1786, 0, 1214, 0,
	0, 1214, 1766, 1768, 0, 1214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 1214, 0, 0, 1782,
	262, 1783, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 1197, 1214, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 262, 0, 0, 1774, 262, 0, 262,
	0, 0, 0, 0, 0, 0, 262, 262, 0, 0,
	0, 1759, 1297, 1297, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1297, 0, 0, 0, 0, 0,
	2204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2204, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 3794, 0, 719, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2204, 0, 262, 0,
	0, 3812, 0, 702, 0, 0, 0, 0, 0, 703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	0, 262, 0, 0, 0, 0, 1760, 0, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 3861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	706, 262, 1777, 1297, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 1297, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 262,
	1214, 0, 0, 1297, 0, 708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	262, 0, 0, 0, 0, 0, 709, 0, 262, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 734, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 262, 262, 262, 262, 0, 724,
	0, 0, 0, 262, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4002, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 260, 260, 0,
	0, 260, 0, 2204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 260, 260,
	0, 0, 260, 260, 0, 0, 732, 0, 713, 0,
	0, 0, 0, 0, 0, 0, 795, 2204, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 4083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 729, 730, 727, 0,
	0, 0, 0, 0, 722, 260, 260, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	260, 0, 0, 109, 0, 109, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1035, 109,
	109, 0, 735, 0, 0, 0, 0, 0, 1297, 0,
	0, 0, 109, 720, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 4186, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1297, 1297, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 262, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2204, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 262, 0, 1297, 262,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 262, 1297, 0, 0, 0, 0, 1015, 0, 0,
	0, 0, 0, 0, 0, 0, 4305, 1453, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 1297,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 1812, 0,
	0, 0, 0, 266, 0, 0, 1297, 0, 0, 0,
	0, 0, 262, 1297, 0, 1297, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 1297, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 1900, 0, 1210, 262, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 1900, 260, 0, 787, 0,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 795,
	0, 1297, 1297, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 787, 0, 0, 0, 4395, 0,
	0, 0, 0, 0, 1297, 0, 260, 0, 1898, 0,
	1901, 0, 109, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 1297, 0, 262, 1297, 262, 0, 0,
	0, 0, 1772, 1767, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	4448, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4484, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 4544, 0, 0, 0, 0, 0, 260,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 1786, 0,
	0, 0, 0, 0, 1766, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 1783, 0, 260, 0, 1297, 0, 260,
	1753, 1754, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 260,
	0, 0, 0, 1759, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 260, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 1035,
	0, 1035, 795, 260, 0, 260, 0, 260, 0, 260,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 260, 1297, 1092, 0, 1297, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 262, 0, 1777, 0, 0, 262, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 1297,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1015, 0,
	1297, 1015, 1015, 0, 262, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 2430, 0, 0, 0,
	0, 0, 0, 0, 3904, 0, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 1295, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 1353, 0, 0, 0,
	1353, 0, 0, 0, 0, 1295, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 1297, 0, 0, 0, 0, 1197, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 0, 0, 0,
	1297, 1297, 0, 1901, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 109, 260,
	0, 0, 1295, 260, 0, 260, 0, 1295, 0, 0,
	0, 0, 260, 260, 0, 0, 0, 0, 0, 0,
	0, 1295, 260, 262, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 1297, 262,
	0, 1297, 262, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1295, 0, 0, 0, 260, 0,
	1297, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	1297, 0, 0, 262, 260, 0, 0, 0, 0, 0,
	0, 0, 1297, 262, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 1297, 1297, 1297, 0, 0, 795, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 795, 109, 0,
	0, 0, 0, 0, 260, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 109,
	0, 109, 0, 0, 0, 0, 1297, 0, 1297, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 260, 0, 1297, 0,
	0, 0, 0, 0, 260, 109, 0, 262, 109, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 260, 260, 260, 1772, 1767, 0, 0, 0, 260,
	0, 260, 1739, 0, 0, 0, 1297, 0, 0, 0,
	0, 1785, 0, 1297, 262, 0, 0, 0, 1297, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 109, 0, 0, 1738, 0, 1353,
	260, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 787, 0, 0, 0, 0, 1755, 0, 787, 0,
	0, 1295, 0, 1297, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 1354, 0, 1295, 0,
	1354, 1744, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 2430, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 1296, 1776, 0, 0,
	1786, 0, 0, 0, 0, 0, 1766, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1782, 0, 1783, 262, 0, 0, 0,
	0, 0, 1753, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 1296, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 262, 1759, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1210, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 1784, 0, 1295,
	1295, 0, 0, 0, 1296, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1197, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 260, 260, 1765,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 1295, 0, 1295, 0, 1295, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 1295, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 0, 1295, 1295,
	1295, 260, 260, 0, 0, 260, 0, 0, 0, 262,
	0, 0, 1900, 0, 0, 0, 0, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 1736, 1737, 0, 1769, 1770, 1771, 1779,
	1780, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1767, 0, 109,
	109, 0, 0, 109, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 260, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 1738,
	0, 0, 795, 109, 109, 0, 3538, 109, 0, 1758,
	260, 0, 0, 0, 260, 0, 0, 0, 1755, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 1197, 0, 1353,
	1035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 109, 0, 1296, 0, 0,
	0, 260, 0, 260, 0, 0, 0, 0, 1296, 1776,
	0, 0, 1786, 0, 0, 0, 0, 0, 1766, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1354, 0, 0, 1782, 0, 1783, 0, 260,
	0, 0, 0, 0, 1753, 1754, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1353, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 813, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 815, 0, 0, 0, 1296,
	1296, 816, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 1295, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1210, 1210, 0, 0, 0, 0, 0, 0, 0, 0,
	817, 1765, 834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 0, 1760, 0, 0, 0, 0, 818, 0, 0,
	0, 0, 819, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 843, 1197, 1197, 0, 0, 0,
	820, 0, 0, 1296, 0, 1296, 0, 1296, 0, 0,
	0, 0, 0, 0, 841, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 0, 0, 0, 0, 0,
	0, 1353, 0, 0, 1296, 0, 0, 814, 0, 0,
	0, 0, 0, 0, 0, 1295, 1296, 0, 1296, 1296,
	1296, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 845, 0, 0, 0, 0, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 0, 1295, 1775,
	0, 0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	260, 0, 0, 0, 0, 0, 0, 0, 3105, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 260, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 1295, 0,
	844, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	839, 0, 0, 260, 0, 0, 0, 0, 260, 0,
	0, 0, 1354, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 1736, 1737, 0, 1769, 1770,
	1771, 1779, 1780, 1781, 0, 0, 0, 0, 1197, 1354,
	826, 0, 0, 0, 0, 0, 0, 0, 1772, 1767,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 812, 0,
	836, 1738, 0, 0, 0, 0, 0, 0, 0, 827,
	0, 1758, 0, 0, 0, 0, 0, 0, 1354, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 0, 0, 0, 0, 0,
	828, 0, 0, 0, 829, 848, 0, 847, 0, 0,
	0, 830, 0, 0, 1210, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 831, 0, 0, 0, 0,
	840, 0, 0, 0, 0, 1900, 849, 0, 846, 0,
	0, 0, 0, 0, 735, 1761, 1762, 1763, 1764, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 1197,
	0, 0, 0, 0, 0, 0, 0, 1197, 0, 0,
	1900, 1776, 1900, 0, 1786, 0, 0, 1296, 1296, 0,
	1766, 1768, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 1783,
	0, 0, 0, 0, 0, 260, 1753, 1754, 260, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 1774, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	1353, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 1295, 1295, 0, 0, 1773,
	0, 0, 0, 0, 0, 1296, 0, 0, 1900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 1295, 1760, 0, 0, 0, 0, 0,
	0, 1296, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1295, 0, 1295, 1296, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1295, 0, 0, 0, 1295, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 1295, 0,
	1295, 0, 0, 0, 1353, 0, 0, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 1295, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 1750, 1751, 1757, 1778,
	1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	3104, 0, 0, 0, 0, 0, 1295, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	1900, 1900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 1353, 0, 0, 0, 1736, 1737, 0, 1769, 1770,
	1771, 1779, 1780, 1781, 0, 0, 0, 2430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 1767,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 1900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 1758, 260, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1900, 0,
	260, 1900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 1762, 1763, 1764, 0,
	0, 0, 0, 1354, 0, 1744, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 1776, 260, 0, 1786, 0, 0, 0, 0, 0,
	1766, 1768, 1353, 0, 0, 1296, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 1783,
	0, 0, 0, 0, 0, 0, 1753, 1754, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 109, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 0, 1296, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 0, 0,
	1295, 1296, 0, 0, 0, 0, 0, 0, 1296, 0,
	1296, 0, 0, 1765, 1354, 0, 0, 0, 1900, 0,
	1900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 0, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 1295, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1296, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1295, 0, 0, 0, 1296,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1354, 0,
	0, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 1750, 1751, 1757, 1778,
	1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742, 1743,
	1745, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	3101, 0, 0, 0, 0, 0, 0, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 1767, 0, 0, 0, 1354, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 1353, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 1295, 1295, 0, 0, 0,
	0, 0, 1755, 0, 1353, 0, 0, 0, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 1767, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 1295, 1738, 0, 1295, 1761, 1762, 1763,
	1764, 0, 0, 0, 1758, 1353, 0, 1744, 0, 0,
	0, 0, 1354, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1295, 1295, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 1786, 0, 0, 0,
	0, 0, 1766, 1768, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 1782,
	0, 1783, 1295, 0, 0, 0, 0, 0, 1753, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 1762,
	1763, 1764, 0, 0, 0, 0, 1774, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 1295, 1295,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 1786, 0, 0,
	0, 0, 0, 1766, 1768, 0, 0, 0, 0, 0,
	1353, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	1782, 0, 1783, 0, 0, 0, 0, 0, 0, 1753,
	1754, 1773, 0, 0, 0, 0, 0, 1296, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 1353, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 1296, 1760, 0, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 1777, 0, 0, 1296, 0, 0, 1295, 0,
	0, 1354, 0, 1295, 1295, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 1765, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 1353, 1785,
	0, 1295, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 1775, 1755, 0, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 3100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 1296, 0, 0, 1761,
	1762, 1763, 1764, 0, 1354, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 1750,
	1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740,
	1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 3099, 0, 1776, 0, 0, 1786, 0,
	0, 0, 0, 0, 1766, 1768, 0, 0, 0, 0,
	0, 1296, 0, 0, 1295, 0, 0, 0, 0, 0,
	0, 1354, 0, 1296, 1295, 1295, 1296, 0, 0, 0,
	1753, 1754, 0, 0, 0, 1354, 0, 0, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 1296, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 1296, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 0, 0, 0, 1296, 0,
	0, 0, 0, 1296, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1354, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 1296, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 1356, 278, 279, 1357, 1358,
	1359, 1296, 1360, 615, 1361, 1362, 1363, 1364, 280, 281,
	1154, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 1365, 620, 290, 291, 292, 293,
	294, 295, 1366, 1367, 0, 296, 621, 622, 623, 1368,
	297, 298, 624, 1369, 1298, 1370, 299, 300, 301, 302,
	303, 304, 305, 0, 1371, 307, 308, 309, 306, 310,
	1372, 311, 0, 312, 313, 314, 315, 316, 317, 1373,
	318, 319, 320, 1155, 321, 322, 323, 1374, 1375, 1377,
	1376, 1378, 1379, 1380, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 1381, 333, 330, 331, 1382, 334, 332,
	335, 1383, 336, 337, 338, 1384, 1385, 339, 340, 341,
	1386, 342, 343, 1387, 344, 345, 346, 1388, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 1389, 267, 1390, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 1391,
	365, 1392, 1393, 1156, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1394, 377, 633,
	1395, 634, 378, 1396, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1158, 384, 385, 1397, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1398,
	1157, 393, 638, 639, 1399, 640, 1400, 395, 396, 1159,
	641, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1401, 407, 409, 408,
	1402, 410, 642, 1162, 411, 412, 1163, 1403, 413, 0,
	0, 0, 414, 415, 418, 1404, 1405, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 1406, 269, 1166, 457, 458, 1407, 643, 459, 644,
	461, 462, 1408, 0, 463, 0, 1409, 1410, 465, 466,
	467, 1411, 1412, 468, 469, 645, 1167, 470, 1168, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 1413, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 1414, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 1415, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 1416, 520, 521, 522, 1169,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 1417, 543,
	544, 542, 545, 546, 547, 1418, 548, 549, 532, 533,
	550, 551, 1170, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 1419, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 1420,
	574, 575, 0, 571, 562, 1421, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 1422, 584, 656, 657, 658,
	659, 1423, 593, 1424, 585, 586, 587, 660, 588, 661,
	1425, 589, 590, 591, 592, 0, 594, 595, 1426, 1427,
	596, 597, 598, 600, 601, 599, 602, 1428, 603, 1429,
	0, 604, 605, 606, 662, 663, 664, 1430, 608, 607,
	609, 665, 1431, 1432, 1433, 1434, 1435, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 2618, 0, 0, 0, 0,
	0, 0, 0, 2619, 270, 272, 271, 273, 274, 275,
	276, 277, 1356, 278, 279, 1357, 1358, 1359, 0, 1360,
	615, 1361, 1362, 1363, 1364, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 1365, 620, 290, 291, 292, 293, 294, 295, 1366,
	1367, 0, 296, 621, 622, 623, 1368, 297, 298, 624,
	1369, 1298, 1370, 299, 300, 301, 302, 303, 304, 305,
	0, 1371, 307, 308, 309, 306, 310, 1372, 311, 0,
	312, 313, 314, 315, 316, 317, 1373, 318, 319, 320,
	1155, 321, 322, 323, 1374, 1375, 1377, 1376, 1378, 1379,
	1380, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	1381, 333, 330, 331, 1382, 334, 332, 335, 1383, 336,
	337, 338, 1384, 1385, 339, 340, 341, 1386, 342, 343,
	1387, 344, 345, 346, 1388, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 1389, 267, 1390, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 1391, 365, 1392, 1393,
	1156, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1394, 377, 633, 1395, 634, 378,
	1396, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	1158, 384, 385, 1397, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1398, 1157, 393, 638,
	639, 1399, 640, 1400, 395, 396, 1159, 641, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1401, 407, 409, 408, 1402, 410, 642,
	1162, 411, 412, 1163, 1403, 413, 0, 0, 0, 414,
	415, 418, 1404, 1405, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1406, 269,
	1166, 457, 458, 1407, 643, 459, 644, 461, 462, 1408,
	0, 463, 0, 1409, 1410, 465, 466, 467, 1411, 1412,
	468, 469, 645, 1167, 470, 1168, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 1413,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 1414, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 1415, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 1416, 520, 521, 522, 1169, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 1417, 543, 544, 542, 545,
	546, 547, 1418, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 1419,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 1420, 574, 575, 0,
	571, 562, 1421, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 1422, 584, 656, 657, 658, 659, 1423, 593,
	1424, 585, 586, 587, 660, 588, 661, 1425, 589, 590,
	591, 592, 0, 594, 595, 1426, 1427, 596, 597, 598,
	600, 601, 599, 602, 1428, 603, 1429, 0, 604, 605,
	606, 662, 663, 664, 1430, 608, 607, 609, 665, 1431,
	1432, 1433, 1434, 1435, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 3546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3548, 270,
	272, 271, 273, 274, 275, 276, 277, 1356, 278, 279,
	1357, 1358, 1359, 0, 1360, 615, 1361, 1362, 1363, 1364,
	280, 281, 1154, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 1365, 620, 290, 291,
	292, 293, 294, 295, 1366, 1367, 0, 296, 621, 622,
	623, 1368, 297, 298, 624, 1369, 1298, 1370, 299, 300,
	301, 302, 303, 304, 305, 0, 1371, 307, 308, 309,
	306, 310, 1372, 311, 0, 312, 313, 314, 315, 316,
	317, 1373, 318, 319, 320, 1155, 321, 322, 323, 1374,
	1375, 1377, 1376, 1378, 1379, 1380, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 1381, 333, 330, 331, 1382,
	334, 332, 335, 1383, 336, 337, 338, 1384, 1385, 339,
	340, 341, 1386, 342, 343, 1387, 344, 345, 346, 1388,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 1389, 267, 1390, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 1391, 365, 1392, 1393, 1156, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1394,
	377, 633, 1395, 634, 378, 1396, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 1158, 384, 385, 1397, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1398, 1157, 393, 638, 639, 1399, 640, 1400, 395,
	396, 1159, 641, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1401, 407,
	409, 408, 1402, 410, 642, 1162, 411, 412, 1163, 1403,
	413, 0, 0, 0, 414, 415, 418, 1404, 1405, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 1406, 269, 1166, 457, 458, 1407, 643,
	459, 644, 461, 462, 1408, 0, 463, 0, 1409, 1410,
	465, 466, 467, 1411, 1412, 468, 469, 645, 1167, 470,
	1168, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 1413, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	1414, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 1415, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 1416, 520, 521,
	522, 1169, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	1417, 543, 544, 542, 545, 546, 547, 1418, 548, 549,
	532, 533, 550, 551, 1170, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 1419, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 1420, 574, 575, 0, 571, 562, 1421, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 1422, 584, 656,
	657, 658, 659, 1423, 593, 1424, 585, 586, 587, 660,
	588, 661, 1425, 589, 590, 591, 592, 0, 594, 595,
	1426, 1427, 596, 597, 598, 600, 601, 599, 602, 1428,
	603, 1429, 0, 604, 605, 606, 662, 663, 664, 1430,
	608, 607, 609, 665, 1431, 1432, 1433, 1434, 1435, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3932, 270, 272,
	271, 273, 274, 275, 276, 277, 1356, 278, 279, 1357,
	1358, 1359, 0, 1360, 615, 1361, 1362, 1363, 1364, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 1365, 620, 290, 291, 292,
	293, 294, 295, 1366, 1367, 0, 296, 621, 622, 623,
	1368, 297, 298, 624, 1369, 1298, 1370, 299, 300, 301,
	302, 303, 304, 305, 0, 1371, 307, 308, 309, 306,
	310, 1372, 311, 0, 312, 313, 314, 315, 316, 317,
	1373, 318, 319, 320, 1155, 321, 322, 323, 1374, 1375,
	1377, 1376, 1378, 1379, 1380, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 1381, 333, 330, 331, 1382, 334,
	332, 335, 1383, 336, 337, 338, 1384, 1385, 339, 340,
	341, 1386, 342, 343, 1387, 344, 345, 346, 1388, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 1389, 267, 1390, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	1391, 365, 1392, 1393, 1156, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1394, 377,
	633, 1395, 634, 378, 1396, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1158, 384, 385, 1397, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1398, 1157, 393, 638, 639, 1399, 640, 1400, 395, 396,
	1159, 641, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1401, 407, 409,
	408, 1402, 410, 642, 1162, 411, 412, 1163, 1403, 413,
	0, 0, 0, 414, 415, 418, 1404, 1405, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1406, 269, 1166, 457, 458, 1407, 643, 459,
	644, 461, 462, 1408, 0, 463, 0, 1409, 1410, 465,
	466, 467, 1411, 1412, 468, 469, 645, 1167, 470, 1168,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 1413, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 1414,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 1415, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 1416, 520, 521, 522,
	1169, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 1417,
	543, 544, 542, 545, 546, 547, 1418, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 1419, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	1420, 574, 575, 0, 571, 562, 1421, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 1422, 584, 656, 657,
	658, 659, 1423, 593, 1424, 585, 586, 587, 660, 588,
	661, 1425, 589, 590, 591, 592, 0, 594, 595, 1426,
	1427, 596, 597, 598, 600, 601, 599, 602, 1428, 603,
	1429, 0, 604, 605, 606, 662, 663, 664, 1430, 608,
	607, 609, 665, 1431, 1432, 1433, 1434, 1435, 610, 611,
	666, 612, 613, 614, 0, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4134, 270, 272, 271, 273, 274, 275, 276, 277,
	1356, 278, 279, 1357, 1358, 1359, 0, 1360, 615, 1361,
	1362, 1363, 1364, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 1365,
	620, 290, 291, 292, 293, 294, 295, 1366, 1367, 0,
	296, 621, 622, 623, 1368, 297, 298, 624, 1369, 1298,
	1370, 299, 300, 301, 302, 303, 304, 305, 0, 1371,
	307, 308, 309, 306, 310, 1372, 311, 0, 312, 313,
	314, 315, 316, 317, 1373, 318, 319, 320, 1155, 321,
	322, 323, 1374, 1375, 1377, 1376, 1378, 1379, 1380, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 1381, 333,
	330, 331, 1382, 334, 332, 335, 1383, 336, 337, 338,
	1384, 1385, 339, 340, 341, 1386, 342, 343, 1387, 344,
	345, 346, 1388, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 1389,
	267, 1390, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 1391, 365, 1392, 1393, 1156, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1394, 377, 633, 1395, 634, 378, 1396, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 1158, 384,
	385, 1397, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1398, 1157, 393, 638, 639, 1399,
	640, 1400, 395, 396, 1159, 641, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1401, 407, 409, 408, 1402, 410, 642, 1162, 411,
	412, 1163, 1403, 413, 0, 0, 0, 414, 415, 418,
	1404, 1405, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1406, 269, 1166, 457,
	458, 1407, 643, 459, 644, 461, 462, 1408, 0, 463,
	0, 1409, 1410, 465, 466, 467, 1411, 1412, 468, 469,
	645, 1167, 470, 1168, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 1413, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 1414, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 1415,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1416, 520, 521, 522, 1169, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1417, 543, 544, 542, 545, 546, 547,
	1418, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 1419, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 1420, 574, 575, 0, 571, 562,
	1421, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	1422, 584, 656, 657, 658, 659, 1423, 593, 1424, 585,
	586, 587, 660, 588, 661, 1425, 589, 590, 591, 592,
	0, 594, 595, 1426, 1427, 596, 597, 598, 600, 601,
	599, 602, 1428, 603, 1429, 0, 604, 605, 606, 662,
	663, 664, 1430, 608, 607, 609, 665, 1431, 1432, 1433,
	1434, 1435, 610, 611, 666, 612, 613, 614, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4011, 270, 272, 271, 273,
	274, 275, 276, 277, 1356, 278, 279, 1357, 1358, 1359,
	0, 1360, 615, 1361, 1362, 1363, 1364, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 1365, 620, 290, 291, 292, 293, 294,
	295, 1366, 1367, 0, 296, 621, 622, 623, 1368, 297,
	298, 624, 1369, 1298, 1370, 299, 300, 301, 302, 303,
	304, 305, 0, 1371, 307, 308, 309, 306, 310, 1372,
	311, 0, 312, 313, 314, 315, 316, 317, 1373, 318,
	319, 320, 1155, 321, 322, 323, 1374, 1375, 1377, 1376,
	1378, 1379, 1380, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 1381, 333, 330, 331, 1382, 334, 332, 335,
	1383, 336, 337, 338, 1384, 1385, 339, 340, 341, 1386,
	342, 343, 1387, 344, 345, 346, 1388, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 1389, 267, 1390, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 1391, 365,
	1392, 1393, 1156, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1394, 377, 633, 1395,
	634, 378, 1396, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 1158, 384, 385, 1397, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1398, 1157,
	393, 638, 639, 1399, 640, 1400, 395, 396, 1159, 641,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1401, 407, 409, 408, 1402,
	410, 642, 1162, 411, 412, 1163, 1403, 413, 0, 0,
	0, 414, 415, 418, 1404, 1405, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1406, 269, 1166, 457, 458, 1407, 643, 459, 644, 461,
	462, 1408, 0, 463, 0, 1409, 1410, 465, 466, 467,
	1411, 1412, 468, 469, 645, 1167, 470, 1168, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 1413, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 1414, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 1415, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 1416, 520, 521, 522, 1169, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 1417, 543, 544,
	542, 545, 546, 547, 1418, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 1419, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 1420, 574,
	575, 0, 571, 562, 1421, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 1422, 584, 656, 657, 658, 659,
	1423, 593, 1424, 585, 586, 587, 660, 588, 661, 1425,
	589, 590, 591, 592, 0, 594, 595, 1426, 1427, 596,
	597, 598, 600, 601, 599, 602, 1428, 603, 1429, 0,
	604, 605, 606, 662, 663, 664, 1430, 608, 607, 609,
	665, 1431, 1432, 1433, 1434, 1435, 610, 611, 666, 612,
	613, 614, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3862,
	270, 272, 271, 273, 274, 275, 276, 277, 1356, 278,
	279, 1357, 1358, 1359, 0, 1360, 615, 1361, 1362, 1363,
	1364, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 1365, 620, 290,
	291, 292, 293, 294, 295, 1366, 1367, 0, 296, 621,
	622, 623, 1368, 297, 298, 624, 1369, 1298, 1370, 299,
	300, 301, 302, 303, 304, 305, 0, 1371, 307, 308,
	309, 306, 310, 1372, 311, 0, 312, 313, 314, 315,
	316, 317, 1373, 318, 319, 320, 1155, 321, 322, 323,
	1374, 1375, 1377, 1376, 1378, 1379, 1380, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 1381, 333, 330, 331,
	1382, 334, 332, 335, 1383, 336, 337, 338, 1384, 1385,
	339, 340, 341, 1386, 342, 343, 1387, 344, 345, 346,
	1388, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 1389, 267, 1390,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 1391, 365, 1392, 1393, 1156, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1394, 377, 633, 1395, 634, 378, 1396, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 1158, 384, 385, 1397,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1398, 1157, 393, 638, 639, 1399, 640, 1400,
	395, 396, 1159, 641, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1401,
	407, 409, 408, 1402, 410, 642, 1162, 411, 412, 1163,
	1403, 413, 0, 0, 0, 414, 415, 418, 1404, 1405,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1406, 269, 1166, 457, 458, 1407,
	643, 459, 644, 461, 462, 1408, 0, 463, 0, 1409,
	1410, 465, 466, 467, 1411, 1412, 468, 469, 645, 1167,
	470, 1168, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 1413, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 1414, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 1415, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 1416, 520,
	521, 522, 1169, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 1417, 543, 544, 542, 545, 546, 547, 1418, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 1419, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 1420, 574, 575, 0, 571, 562, 1421, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 1422, 584,
	656, 657, 658, 659, 1423, 593, 1424, 585, 586, 587,
	660, 588, 661, 1425, 589, 590, 591, 592, 0, 594,
	595, 1426, 1427, 596, 597, 598, 600, 601, 599, 602,
	1428, 603, 1429, 0, 604, 605, 606, 662, 663, 664,
	1430, 608, 607, 609, 665, 1431, 1432, 1433, 1434, 1435,
	610, 611, 666, 612, 613, 614, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3564, 270, 272, 271, 273, 274, 275,
	276, 277, 1356, 278, 279, 1357, 1358, 1359, 0, 1360,
	615, 1361, 1362, 1363, 1364, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 1365, 620, 290, 291, 292, 293, 294, 295, 1366,
	1367, 0, 296, 621, 622, 623, 1368, 297, 298, 624,
	1369, 1298, 1370, 299, 300, 301, 302, 303, 304, 305,
	0, 1371, 307, 308, 309, 306, 310, 1372, 311, 0,
	312, 313, 314, 315, 316, 317, 1373, 318, 319, 320,
	1155, 321, 322, 323, 1374, 1375, 1377, 1376, 1378, 1379,
	1380, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	1381, 333, 330, 331, 1382, 334, 332, 335, 1383, 336,
	337, 338, 1384, 1385, 339, 340, 341, 1386, 342, 343,
	1387, 344, 345, 346, 1388, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 1389, 267, 1390, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 1391, 365, 1392, 1393,
	1156, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 1394, 377, 633, 1395, 634, 378,
	1396, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	1158, 384, 385, 1397, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 1398, 1157, 393, 638,
	639, 1399, 640, 1400, 395, 396, 1159, 641, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1401, 407, 409, 408, 1402, 410, 642,
	1162, 411, 412, 1163, 1403, 413, 0, 0, 0, 414,
	415, 418, 1404, 1405, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1406, 269,
	1166, 457, 458, 1407, 643, 459, 644, 461, 462, 1408,
	0, 463, 0, 1409, 1410, 465, 466, 467, 1411, 1412,
	468, 469, 645, 1167, 470, 1168, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 1413,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 1414, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 1415, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 1416, 520, 521, 522, 1169, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 1417, 543, 544, 542, 545,
	546, 547, 1418, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 1419,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 1420, 574, 575, 0,
	571, 562, 1421, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 1422, 584, 656, 657, 658, 659, 1423, 593,
	1424, 585, 586, 587, 660, 588, 661, 1425, 589, 590,
	591, 592, 0, 594, 595, 1426, 1427, 596, 597, 598,
	600, 601, 599, 602, 1428, 603, 1429, 0, 604, 605,
	606, 662, 663, 664, 1430, 608, 607, 609, 665, 1431,
	1432, 1433, 1434, 1435, 610, 611, 666, 612, 613, 614,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3395, 270, 272,
	271, 273, 274, 275, 276, 277, 1356, 278, 279, 1357,
	1358, 1359, 0, 1360, 615, 1361, 1362, 1363, 1364, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 1365, 620, 290, 291, 292,
	293, 294, 295, 1366, 1367, 0, 296, 621, 622, 623,
	1368, 297, 298, 624, 1369, 1298, 1370, 299, 300, 301,
	302, 303, 304, 305, 0, 1371, 307, 308, 309, 306,
	310, 1372, 311, 0, 312, 313, 314, 315, 316, 317,
	1373, 318, 319, 320, 1155, 321, 322, 323, 1374, 1375,
	1377, 1376, 1378, 1379, 1380, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 1381, 333, 330, 331, 1382, 334,
	332, 335, 1383, 336, 337, 338, 1384, 1385, 339, 340,
	341, 1386, 342, 343, 1387, 344, 345, 346, 1388, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 1389, 267, 1390, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	1391, 365, 1392, 1393, 1156, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1394, 377,
	633, 1395, 634, 378, 1396, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1158, 384, 385, 1397, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1398, 1157, 393, 638, 639, 1399, 640, 1400, 395, 396,
	1159, 641, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1401, 407, 409,
	408, 1402, 410, 642, 1162, 411, 412, 1163, 1403, 413,
	0, 0, 0, 414, 415, 418, 1404, 1405, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1406, 269, 1166, 457, 458, 1407, 643, 459,
	644, 461, 462, 1408, 0, 463, 0, 1409, 1410, 465,
	466, 467, 1411, 1412, 468, 469, 645, 1167, 470, 1168,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 1413, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 1414,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 1415, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 1416, 520, 521, 522,
	1169, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 1417,
	543, 544, 542, 545, 546, 547, 1418, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 1419, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	1420, 574, 575, 0, 571, 562, 1421, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 1422, 584, 656, 657,
	658, 659, 1423, 593, 1424, 585, 586, 587, 660, 588,
	661, 1425, 589, 590, 591, 592, 0, 594, 595, 1426,
	1427, 596, 597, 598, 600, 601, 599, 602, 1428, 603,
	1429, 0, 604, 605, 606, 662, 663, 664, 1430, 608,
	607, 609, 665, 1431, 1432, 1433, 1434, 1435, 610, 611,
	666, 612, 613, 614, 0, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2476, 270, 272, 271, 273, 274, 275, 276, 277,
	1356, 278, 279, 1357, 1358, 1359, 0, 1360, 615, 1361,
	1362, 1363, 1364, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 1365,
	620, 290, 291, 292, 293, 294, 295, 1366, 1367, 0,
	296, 621, 622, 623, 1368, 297, 298, 624, 1369, 1298,
	1370, 299, 300, 301, 302, 303, 304, 305, 0, 1371,
	307, 308, 309, 306, 310, 1372, 311, 0, 312, 313,
	314, 315, 316, 317, 1373, 318, 319, 320, 1155, 321,
	322, 323, 1374, 1375, 1377, 1376, 1378, 1379, 1380, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 1381, 333,
	330, 331, 1382, 334, 332, 335, 1383, 336, 337, 338,
	1384, 1385, 339, 340, 341, 1386, 342, 343, 1387, 344,
	345, 346, 1388, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 1389,
	267, 1390, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 1391, 365, 1392, 1393, 1156, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1394, 377, 633, 1395, 634, 378, 1396, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 1158, 384,
	385, 1397, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1398, 1157, 393, 638, 639, 1399,
	640, 1400, 395, 396, 1159, 641, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1401, 407, 409, 408, 1402, 410, 642, 1162, 411,
	412, 1163, 1403, 413, 0, 0, 0, 414, 415, 418,
	1404, 1405, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1406, 269, 1166, 457,
	458, 1407, 643, 459, 644, 461, 462, 1408, 0, 463,
	0, 1409, 1410, 465, 466, 467, 1411, 1412, 468, 469,
	645, 1167, 470, 1168, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 1413, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 1414, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 1415,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1416, 520, 521, 522, 1169, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1417, 543, 544, 542, 545, 546, 547,
	1418, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 1419, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 1420, 574, 575, 0, 571, 562,
	1421, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	1422, 584, 656, 657, 658, 659, 1423, 593, 1424, 585,
	586, 587, 660, 588, 661, 1425, 589, 590, 591, 592,
	0, 594, 595, 1426, 1427, 596, 597, 598, 600, 601,
	599, 602, 1428, 603, 1429, 0, 604, 605, 606, 662,
	663, 664, 1430, 608, 607, 609, 665, 1431, 1432, 1433,
	1434, 1435, 610, 611, 666, 612, 613, 614, 1447, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2165, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 1356, 278, 279, 1357, 1358,
	1359, 0, 1360, 615, 1361, 1362, 1363, 1364, 280, 281,
	1154, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 1365, 620, 290, 291, 292, 293,
	294, 295, 1366, 1367, 0, 296, 621, 622, 623, 1368,
	297, 298, 624, 1369, 1298, 1370, 299, 300, 301, 302,
	303, 304, 305, 0, 1371, 307, 308, 309, 306, 310,
	1372, 311, 0, 312, 313, 314, 315, 316, 317, 1373,
	318, 319, 320, 1155, 321, 322, 323, 1374, 1375, 1377,
	1376, 1378, 1379, 1380, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 1381, 333, 330, 331, 1382, 334, 332,
	335, 1383, 336, 337, 338, 1384, 1385, 339, 340, 341,
	1386, 342, 343, 1387, 344, 345, 346, 1388, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 1389, 267, 1390, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 1391,
	365, 1392, 1393, 1156, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1394, 377, 633,
	1395, 634, 378, 1396, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1158, 384, 385, 1397, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1398,
	1157, 393, 638, 639, 1399, 640, 1400, 395, 396, 1159,
	641, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1401, 407, 409, 408,
	1402, 410, 642, 1162, 411, 412, 1163, 1403, 413, 0,
	0, 0, 414, 415, 418, 1404, 1405, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 1406, 269, 1166, 457, 458, 1407, 643, 459, 644,
	461, 462, 1408, 0, 463, 0, 1409, 1410, 465, 466,
	467, 1411, 1412, 468, 469, 645, 1167, 470, 1168, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 1413, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 1414, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 1415, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 1416, 520, 521, 522, 1169,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 1417, 543,
	544, 542, 545, 546, 547, 1418, 548, 549, 532, 533,
	550, 551, 1170, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 1419, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 1420,
	574, 575, 0, 571, 562, 1421, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 1422, 584, 656, 657, 658,
	659, 1423, 593, 1424, 585, 586, 587, 660, 588, 661,
	1425, 589, 590, 591, 592, 0, 594, 595, 1426, 1427,
	596, 597, 598, 600, 601, 599, 602, 1428, 603, 1429,
	0, 604, 605, 606, 662, 663, 664, 1430, 608, 607,
	609, 665, 1431, 1432, 1433, 1434, 1435, 610, 611, 666,
	612, 613, 614, 1348, 0, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	1356, 278, 279, 1357, 1358, 1359, 0, 1360, 615, 1361,
	1362, 1363, 1364, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 1365,
	620, 290, 291, 292, 293, 294, 295, 1366, 1367, 0,
	296, 621, 622, 623, 1368, 297, 298, 624, 1369, 1298,
	1370, 299, 300, 301, 302, 303, 304, 305, 0, 1371,
	307, 308, 309, 306, 310, 1372, 311, 0, 312, 313,
	314, 315, 316, 317, 1373, 318, 319, 320, 1155, 321,
	322, 323, 1374, 1375, 1377, 1376, 1378, 1379, 1380, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 1381, 333,
	330, 331, 1382, 334, 332, 335, 1383, 336, 337, 338,
	1384, 1385, 339, 340, 341, 1386, 342, 343, 1387, 344,
	345, 346, 1388, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 1389,
	267, 1390, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 1391, 365, 1392, 1393, 1156, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1394, 377, 633, 1395, 634, 378, 1396, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 1158, 384,
	385, 1397, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1398, 1157, 393, 638, 639, 1399,
	640, 1400, 395, 396, 1159, 641, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1401, 407, 409, 408, 1402, 410, 642, 1162, 411,
	412, 1163, 1403, 413, 0, 0, 0, 414, 415, 418,
	1404, 1405, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1406, 269, 1166, 457,
	458, 1407, 643, 459, 644, 461, 462, 1408, 0, 463,
	0, 1409, 1410, 465, 466, 467, 1411, 1412, 468, 469,
	645, 1167, 470, 1168, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 1413, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 1414, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 1415,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	1416, 520, 521, 522, 1169, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 1417, 543, 544, 542, 545, 546, 547,
	1418, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 1419, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 1420, 574, 575, 0, 571, 562,
	1421, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	1422, 584, 656, 657, 658, 659, 1423, 593, 1424, 585,
	586, 587, 660, 588, 661, 1425, 589, 590, 591, 592,
	0, 594, 595, 1426, 1427, 596, 597, 598, 600, 601,
	599, 602, 1428, 603, 1429, 0, 604, 605, 606, 662,
	663, 664, 1430, 608, 607, 609, 665, 1431, 1432, 1433,
	1434, 1435, 610, 611, 666, 612, 613, 614, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 1356, 278, 279, 1357, 1358, 1359, 0,
	1360, 615, 1361, 1362, 1363, 1364, 280, 281, 1154, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 1365, 620, 290, 291, 292, 293, 294, 295,
	1366, 1367, 0, 296, 621, 622, 623, 1368, 297, 298,
	624, 1369, 1298, 1370, 299, 300, 301, 302, 303, 304,
	305, 0, 1371, 307, 308, 309, 306, 310, 1372, 311,
	0, 312, 313, 314, 315, 316, 317, 1373, 318, 319,
	320, 1155, 321, 322, 323, 1374, 1375, 1377, 1376, 1378,
	1379, 1380, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 1381, 333, 330, 331, 1382, 334, 332, 335, 1383,
	336, 337, 338, 1384, 1385, 339, 340, 341, 1386, 342,
	343, 1387, 344, 345, 346, 1388, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 1389, 267, 1390, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 1391, 365, 1392,
	1393, 1156, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1394, 377, 633, 1395, 634,
	378, 1396, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 1158, 384, 385, 1397, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1398, 1157, 393,
	638, 639, 1399, 640, 1400, 395, 396, 1159, 641, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1401, 407, 409, 408, 1402, 410,
	642, 1162, 411, 412, 1163, 1403, 413, 0, 0, 0,
	414, 415, 418, 1404, 1405, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 1406,
	269, 1166, 457, 458, 1407, 643, 459, 644, 461, 462,
	1408, 0, 463, 0, 1409, 1410, 465, 466, 467, 1411,
	1412, 468, 469, 645, 1167, 470, 1168, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	1413, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 1414, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 1415, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 1416, 520, 521, 522, 1169, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 1417, 543, 544, 542,
	545, 546, 547, 1418, 548, 549, 532, 533, 550, 551,
	1170, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	1419, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 1420, 574, 575,
	0, 571, 562, 1421, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 1422, 584, 656, 657, 658, 659, 1423,
	593, 1424, 585, 586, 587, 660, 588, 661, 1425, 589,
	590, 591, 592, 0, 594, 595, 1426, 1427, 596, 597,
	598, 600, 601, 599, 602, 1428, 603, 1429, 0, 604,
	605, 606, 662, 663, 664, 1430, 608, 607, 609, 665,
	1431, 1432, 1433, 1434, 1435, 610, 611, 666, 612, 613,
	614, 2451, 0, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 2448, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 2449, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	2447, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 2450, 0, 0, 0, 0, 0, 0,
	1074, 2446, 0, 1036, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 0,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 229, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	231, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 0, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 1567,
	1135, 1172, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 223, 610, 611, 666, 612, 613, 614, 1049, 0,
	224, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 1811, 1809, 0, 0, 1072, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 0,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 229, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	231, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 0, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 1567,
	1135, 1172, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 223, 610, 611, 666, 612, 613, 614, 1049, 0,
	224, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 1811, 3057, 0, 0, 1072, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 0,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 229, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	231, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 0, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 1567,
	1135, 1172, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 223, 610, 611, 666, 612, 613, 614, 1049, 0,
	224, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 1811, 1809, 0, 0, 1072, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 2579,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 2584, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 2580, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 2581, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 662,
	1135, 1172, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 2496, 1072, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 0, 0, 0,
	0, 0, 0, 0, 1074, 2494, 0, 2493, 1072, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 1127, 0, 288,
	1134, 289, 1133, 0, 1144, 290, 291, 292, 293, 294,
	295, 1080, 1113, 1047, 296, 1174, 1175, 623, 0, 297,
	298, 1120, 0, 1101, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 324, 325, 326, 327, 328, 1137, 329,
	1131, 1130, 1051, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1122, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1057,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1145, 1146, 360, 1069, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1129, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1148, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1128, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 1058, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1111, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 1126, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1173, 565, 566, 567, 568, 1149, 572, 573, 0, 574,
	575, 1046, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 1138, 1139, 1140, 1141,
	0, 593, 0, 585, 586, 587, 1150, 588, 1151, 1068,
	589, 590, 591, 592, 0, 594, 595, 0, 1052, 596,
	597, 598, 600, 601, 599, 602, 1112, 603, 0, 0,
	604, 605, 606, 662, 1135, 1172, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 1074, 2491, 0, 2490,
	1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 1127,
	0, 288, 1134, 289, 1133, 0, 1144, 290, 291, 292,
	293, 294, 295, 1080, 1113, 1047, 296, 1174, 1175, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	1137, 329, 1131, 1130, 1051, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1122,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1057, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 1069, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1129, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1128, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 1058, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	1126, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1173, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 1046, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 1138, 1139,
	1140, 1141, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 1068, 589, 590, 591, 592, 0, 594, 595, 0,
	1052, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 662, 1135, 1172, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 2488,
	0, 2487, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 0, 0,
	1074, 2485, 0, 1660, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 0,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 0, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 662,
	1135, 1172, 0, 608, 607, 609, 665, 0, 1659, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 1039, 1072, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 1053, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 1074, 0, 0, 0, 1072, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 4460, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 1053, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 1074, 0, 0, 0, 1072, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 2365, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 2364, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 1074, 0, 0, 0, 1072, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 1053, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 1074, 0, 0, 0, 1072, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 4214, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 1053, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 1074, 0, 0, 0, 1072, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 3824,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 1879, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 1072, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 1127, 0, 288,
	1134, 289, 1133, 0, 1144, 290, 291, 292, 293, 294,
	295, 1080, 1113, 1047, 296, 1174, 1175, 623, 0, 297,
	298, 1120, 0, 1101, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 324, 325, 326, 327, 328, 1137, 329,
	1131, 1130, 1051, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1122, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1057,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1145, 1146, 360, 1069, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1129, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1148, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1128, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 1058, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1111, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 1126, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1173, 565, 566, 567, 568, 1149, 572, 573, 0, 574,
	575, 1046, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 1138, 1139, 1140, 1141,
	0, 593, 0, 585, 586, 587, 1150, 588, 1151, 1068,
	589, 590, 591, 592, 0, 594, 595, 0, 1052, 596,
	597, 598, 600, 601, 599, 602, 1112, 603, 0, 0,
	604, 605, 606, 662, 1135, 1172, 3542, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 1074, 0, 0, 0,
	1072, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 1127, 0, 288,
	1134, 289, 1133, 0, 1144, 290, 291, 292, 293, 294,
	295, 1080, 1113, 1047, 296, 1174, 1175, 623, 0, 297,
	298, 1120, 0, 1101, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 324, 325, 326, 327, 328, 1137, 329,
	1131, 1130, 1051, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1122, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1057,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1145, 1146, 360, 1069, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1129, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1148, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1128, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 1058, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1111, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 1126, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1173, 565, 566, 567, 568, 1149, 572, 573, 0, 574,
	575, 1046, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 1138, 1139, 1140, 1141,
	0, 593, 0, 585, 586, 587, 1150, 588, 1151, 1068,
	589, 590, 591, 592, 0, 594, 595, 0, 1052, 596,
	597, 598, 600, 601, 599, 602, 1112, 603, 0, 0,
	604, 605, 606, 662, 1135, 1172, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 1879,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 1127,
	0, 288, 1134, 289, 1133, 0, 1144, 290, 291, 292,
	293, 294, 295, 1080, 1113, 1047, 296, 1174, 1175, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	1137, 329, 1131, 1130, 1051, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1122,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1057, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 1069, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1129, 0, 0, 0, 364,
	0, 365, 0, 2584, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1128, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 1058, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	1126, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1173, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 1046, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 1138, 1139,
	1140, 1141, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 1068, 589, 590, 591, 592, 0, 594, 595, 0,
	1052, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 662, 1135, 1172, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 1074, 0,
	0, 0, 1072, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 1127,
	0, 288, 1134, 289, 1133, 0, 1144, 290, 291, 292,
	293, 294, 295, 1080, 1113, 1047, 296, 1174, 1175, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	1137, 329, 1131, 1130, 1051, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1122,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1057, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 1069, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1129, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1128, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 1058, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	1126, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1173, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 1046, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 1138, 1139,
	1140, 1141, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 1068, 589, 590, 591, 592, 0, 594, 595, 0,
	1052, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 662, 1135, 1172, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 1809,
	0, 2589, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 2587, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 0,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 0, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 662,
	1135, 1172, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 2575, 1072, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 2564, 1072, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 1127, 0, 288,
	1134, 289, 1133, 0, 1144, 290, 291, 292, 293, 294,
	295, 1080, 1113, 1047, 296, 1174, 1175, 623, 0, 297,
	298, 1120, 0, 1101, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 324, 325, 326, 327, 328, 1137, 329,
	1131, 1130, 1051, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1122, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1057,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1145, 1146, 360, 1069, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1129, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1148, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1128, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 1058, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1111, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 1126, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1173, 565, 566, 567, 568, 1149, 572, 573, 0, 574,
	575, 1046, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 1138, 1139, 1140, 1141,
	0, 593, 0, 585, 586, 587, 1150, 588, 1151, 1068,
	589, 590, 591, 592, 0, 594, 595, 0, 1052, 596,
	597, 598, 600, 601, 599, 602, 1112, 603, 0, 0,
	604, 605, 606, 662, 1135, 1172, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 2562,
	1072, 2553, 2560, 1063, 1064, 1060, 1061, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 1127,
	0, 288, 1134, 289, 1133, 0, 1144, 290, 291, 292,
	293, 294, 295, 1080, 1113, 1047, 296, 1174, 1175, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	1137, 2556, 1131, 1130, 1051, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1122,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1057, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 1069, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1129, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 2557, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 2558,
	428, 2555, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1128, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 1058, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 2559, 0,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	1126, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1173, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 1046, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 1138, 1139,
	1140, 1141, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 1068, 589, 590, 591, 592, 0, 594, 595, 0,
	1052, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 662, 1135, 1172, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 2554, 614, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 2550, 1072, 2553, 2560, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 2556, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	2557, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 2558, 428, 2555, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	2559, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 2554, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 1817, 0,
	1074, 0, 0, 0, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	2344, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 0,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 0, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 662,
	1135, 1172, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 1665, 1072, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 1597, 1072, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 1127, 0, 288,
	1134, 289, 1133, 0, 1144, 290, 291, 292, 293, 294,
	295, 1080, 1113, 1047, 296, 1174, 1175, 623, 0, 297,
	298, 1120, 0, 1101, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 324, 325, 326, 327, 328, 1137, 329,
	1131, 1130, 1051, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1122, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1057,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1145, 1146, 360, 1069, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1129, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1148, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1128, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 1058, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1111, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 1126, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1173, 565, 566, 567, 568, 1149, 572, 573, 0, 574,
	575, 1046, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 1138, 1139, 1140, 1141,
	0, 593, 0, 585, 586, 587, 1150, 588, 1151, 1068,
	589, 590, 591, 592, 0, 594, 595, 0, 1052, 596,
	597, 598, 600, 601, 599, 602, 1112, 603, 0, 0,
	604, 605, 606, 662, 1135, 1172, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 1592,
	1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 1127,
	0, 288, 1134, 289, 1133, 0, 1144, 290, 291, 292,
	293, 294, 295, 1080, 1113, 1047, 296, 1174, 1175, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	1137, 329, 1131, 1130, 1051, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1122,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1057, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 1069, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1129, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1128, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 1058, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	1126, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1173, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 1046, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 1138, 1139,
	1140, 1141, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 1068, 589, 590, 591, 592, 0, 594, 595, 0,
	1052, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 662, 1135, 1172, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 1583, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 1578, 1072, 1090, 1062, 1063, 1064, 1060,
	1061, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1114, 1078,
	0, 0, 0, 280, 281, 1154, 282, 283, 284, 285,
	286, 287, 616, 1127, 0, 288, 1134, 289, 1133, 0,
	1144, 290, 291, 292, 293, 294, 295, 1080, 1113, 1047,
	296, 1174, 1175, 623, 0, 297, 298, 1120, 0, 1101,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1155, 321,
	322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324,
	325, 326, 327, 328, 1137, 329, 1131, 1130, 1051, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1122, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1057, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1145, 1146, 360, 1069,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1129,
	0, 0, 0, 364, 0, 365, 0, 0, 1156, 366,
	367, 1142, 1143, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1152, 0, 1079, 378, 0, 379,
	380, 381, 382, 383, 1115, 1116, 1119, 460, 1158, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1157, 393, 1124, 1125, 0,
	1085, 0, 395, 396, 1159, 1117, 1160, 397, 398, 399,
	1161, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1153, 1162, 411,
	412, 1163, 0, 413, 0, 0, 0, 414, 415, 418,
	1108, 1107, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1164, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1165, 447, 1048, 269, 1166, 457,
	458, 1070, 1118, 459, 1132, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1167, 470, 1168, 1147, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1148, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 1128, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1169, 523, 524, 525, 526, 1058,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1111, 548, 549, 532, 533, 550, 551, 1170, 552, 553,
	554, 555, 556, 557, 1126, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 1173, 565, 566, 567,
	568, 1149, 572, 573, 0, 574, 575, 1046, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 1138, 1139, 1140, 1141, 0, 593, 0, 585,
	586, 587, 1150, 588, 1151, 1068, 589, 590, 591, 592,
	0, 594, 595, 0, 1052, 596, 597, 598, 600, 601,
	599, 602, 1112, 603, 0, 0, 604, 605, 606, 662,
	1135, 1172, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1049, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 1043, 1044, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 1490, 1072, 1090, 1062, 1063,
	1064, 1060, 1061, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1114, 1078, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 1127, 0, 288, 1134, 289,
	1133, 0, 1144, 290, 291, 292, 293, 294, 295, 1080,
	1113, 1047, 296, 1174, 1175, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 1137, 329, 1131, 1130,
	1051, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1122, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1057, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 1069, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1129, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 1142, 1143, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 1079, 378,
	0, 379, 380, 381, 382, 383, 1489, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 1124,
	1125, 0, 1085, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 1048, 269,
	1166, 457, 458, 1070, 1118, 459, 1132, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 1128, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 1058, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 1126, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 1173, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 1046,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 1138, 1139, 1140, 1141, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 1068, 589, 590,
	591, 592, 0, 594, 595, 0, 1052, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 1135, 1172, 0, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	1049, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1043, 1044, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 1484, 1072, 1090,
	1062, 1063, 1064, 1060, 1061, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1114, 1078, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 1127, 0, 288,
	1134, 289, 1133, 0, 1144, 290, 291, 292, 293, 294,
	295, 1080, 1113, 1047, 296, 1174, 1175, 623, 0, 297,
	298, 1120, 0, 1101, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 324, 325, 326, 327, 328, 1137, 329,
	1131, 1130, 1051, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1122, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1057,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1145, 1146, 360, 1069, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1129, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 1142, 1143, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	1079, 378, 0, 379, 380, 381, 382, 383, 1483, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 1124, 1125, 0, 1085, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	1048, 269, 1166, 457, 458, 1070, 1118, 459, 1132, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1148, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1128, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 1058, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1111, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 1126, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1173, 565, 566, 567, 568, 1149, 572, 573, 0, 574,
	575, 1046, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 1138, 1139, 1140, 1141,
	0, 593, 0, 585, 586, 587, 1150, 588, 1151, 1068,
	589, 590, 591, 592, 0, 594, 595, 0, 1052, 596,
	597, 598, 600, 601, 599, 602, 1112, 603, 0, 0,
	604, 605, 606, 662, 1135, 1172, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1049, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 1477,
	1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1114, 1078, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 1127,
	0, 288, 1134, 289, 1133, 0, 1144, 290, 291, 292,
	293, 294, 295, 1080, 1113, 1047, 296, 1174, 1175, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	1137, 329, 1131, 1130, 1051, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1122,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1057, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 1069, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1129, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 1142, 1143, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 1079, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 1124, 1125, 0, 1085, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 1048, 269, 1166, 457, 458, 1070, 1118, 459,
	1132, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	1128, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 1058, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	1126, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 1173, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 1046, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 1138, 1139,
	1140, 1141, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 1068, 589, 590, 591, 592, 0, 594, 595, 0,
	1052, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 662, 1135, 1172, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 1049, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 1300, 1072, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 4506,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 4505,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	4504, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 4506,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 4505,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 4153, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 4154, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 4152, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 3024, 3025, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 3022, 3023, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 1043, 1044, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 1049, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 2352, 2353, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 0, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 0, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 2572, 0, 0, 0, 0, 0,
	0, 2570, 2571, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 0, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 1159, 1117, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 0, 269, 1166, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 3017, 3018, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 2061, 1090, 1062, 1063, 1064, 1060, 1061, 1073,
	1074, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1114, 1078, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	0, 1127, 0, 288, 1134, 289, 1133, 0, 1144, 290,
	291, 292, 293, 294, 295, 1080, 1113, 1047, 296, 1174,
	1175, 623, 0, 297, 298, 1120, 0, 1101, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 4506,
	1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325, 326,
	327, 328, 1137, 329, 1131, 1130, 1051, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1122, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1057, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1145, 1146, 360, 1069, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1129, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 1142,
	1143, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1152, 0, 1079, 378, 0, 379, 380, 381,
	382, 383, 1115, 1116, 1119, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1157, 393, 1124, 1125, 0, 1085, 0,
	395, 396, 0, 1117, 0, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1153, 1162, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 1108, 1107,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 1048, 269, 0, 457, 458, 1070,
	1118, 459, 1132, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 1147, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 1148, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 1128, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 1058, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 1111, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 1126, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 1173, 565, 566, 567, 568, 1149,
	572, 573, 0, 574, 575, 1046, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	1138, 1139, 1140, 1141, 0, 593, 0, 585, 586, 587,
	1150, 588, 1151, 1068, 589, 590, 591, 592, 0, 4505,
	595, 0, 1052, 596, 597, 598, 600, 601, 599, 602,
	1112, 603, 0, 0, 604, 605, 606, 662, 1135, 1172,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1036, 0, 1212, 0,
	0, 1043, 1044, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 1072, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 0, 280, 281, 1154, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 1113, 0, 296, 621, 622, 623, 0, 297, 298,
	1120, 0, 1101, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106,
	1105, 1109, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1145,
	1146, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 1156, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1152, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 1115, 1116, 1119,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1157, 393,
	638, 639, 0, 640, 0, 395, 396, 1159, 1117, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1198, 407, 409, 408, 0, 410,
	1153, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 1108, 1107, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	269, 1166, 457, 458, 0, 1118, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 1204, 465, 466, 467, 0,
	0, 468, 469, 645, 1167, 470, 1168, 1147, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1148, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1169, 523, 524,
	525, 526, 652, 1206, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 229, 543, 544, 542,
	545, 546, 547, 1111, 548, 549, 532, 533, 550, 551,
	1170, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 1149, 572, 573, 0, 574, 575,
	0, 571, 562, 231, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 1150, 588, 1151, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 1112, 603, 0, 0, 604,
	605, 606, 1567, 663, 664, 0, 608, 607, 609, 665,
	0, 1212, 0, 0, 223, 610, 611, 666, 612, 613,
	614, 0, 0, 224, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 1202, 1114, 1903, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 1113, 0, 296, 621, 622, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 638, 639, 0, 640, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1198, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 0, 269, 1166, 457, 458, 0, 1118, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 1204, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 652, 1206, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 229,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 0, 571, 562, 231, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 1567, 663, 664, 0, 608,
	607, 609, 665, 0, 3177, 0, 1212, 223, 610, 611,
	666, 612, 613, 614, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 1202, 0, 1903, 1114,
	0, 0, 0, 0, 280, 281, 1154, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 1113,
	0, 296, 621, 622, 623, 0, 297, 298, 1120, 0,
	1101, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1155,
	321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1145, 1146, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 1156,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 638, 639,
	0, 640, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1198, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 269, 1166,
	457, 458, 0, 1118, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 1204, 465, 466, 467, 0, 0, 468,
	469, 645, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1148,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1169, 523, 524, 525, 526,
	652, 1206, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1111, 548, 549, 532, 533, 550, 551, 1170, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 1149, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 1150, 588, 1151, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 1112, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 0, 1194,
	0, 1212, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 1202, 0, 1200, 1114, 0, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 1113, 0, 296, 621, 622, 623,
	0, 297, 298, 1120, 0, 1101, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 1104, 1102,
	1103, 1110, 1106, 1105, 1109, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1145, 1146, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1152, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	1115, 1116, 1119, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1157, 393, 638, 639, 0, 640, 0, 395, 396,
	1159, 1117, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1198, 407, 409,
	408, 0, 410, 1153, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 1108, 1107, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 0, 269, 1166, 457, 458, 0, 1118, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 1204, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	1147, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 1148, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 652, 1206, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1111, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 1149, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 1150, 588,
	1151, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 1112, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 1212, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 1202, 1114, 1200, 0,
	0, 0, 280, 281, 1154, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 1113, 0, 296,
	621, 622, 623, 0, 297, 298, 1120, 0, 1101, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1155, 321, 322,
	323, 1104, 1102, 1103, 1110, 1106, 1105, 1109, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1145, 1146, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1156, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1152, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 1115, 1116, 1119, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1157, 393, 638, 639, 0, 640,
	0, 395, 396, 1159, 1117, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	1198, 407, 409, 408, 0, 410, 1153, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 1108,
	1107, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 269, 1166, 457, 458,
	0, 1118, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 1204, 465, 466, 467, 0, 0, 468, 469, 645,
	1167, 470, 1168, 1147, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1148, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1169, 523, 524, 525, 526, 652, 1206,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1111,
	548, 549, 532, 533, 550, 551, 1170, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	1149, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 1150, 588, 1151, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 1112, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 0, 1212, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 1202,
	1114, 1200, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	1113, 0, 296, 621, 622, 623, 0, 297, 298, 1120,
	0, 1101, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105,
	1109, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1145, 1146,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1152, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 1115, 1116, 1119, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1157, 393, 638,
	639, 0, 640, 0, 395, 396, 1159, 1117, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1153,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 1108, 1107, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 0, 269,
	1166, 457, 458, 0, 1118, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 1147, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1148, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1111, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 1149, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 1150, 588, 1151, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 1112, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 1212,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1114, 0, 3986, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 1113, 0, 296, 621, 622, 623, 0, 297,
	298, 1120, 0, 1101, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 1104, 1102, 1103, 1110,
	1106, 1105, 1109, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1145, 1146, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1152, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1115, 1116,
	1119, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1157,
	393, 638, 639, 0, 640, 0, 395, 396, 1159, 1117,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1153, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 1108, 1107, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	0, 269, 1166, 457, 458, 0, 1118, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 1147, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1148, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 652, 1206, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 1111, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 1149, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 1150, 588, 1151, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 1112, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 0, 1036, 0, 1293, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 1802, 615, 0, 0,
	0, 0, 280, 281, 1154, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1298, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1155, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1156, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 638, 639, 0, 640,
	0, 395, 396, 1159, 641, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1167, 470, 1168, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1169, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 229, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1170, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 231,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 1567, 663,
	664, 0, 608, 607, 609, 665, 0, 1564, 0, 1293,
	223, 610, 611, 666, 612, 613, 614, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 185, 615, 0, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 1298, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1157,
	393, 638, 639, 0, 640, 0, 395, 396, 1159, 641,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	0, 0, 1166, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 229, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 231, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 1567, 663, 664, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 223, 610, 611, 666, 612,
	613, 614, 0, 0, 224, 0, 0, 0, 0, 0,
	1293, 1292, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	1154, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 1298, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1155, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 1156, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1157, 393, 638, 639, 0, 640, 0, 395, 396, 1159,
	641, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 0, 0, 1166, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1167, 470, 1168, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1169,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1170, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 1292, 0, 0, 0, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1589, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 1298, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1157, 393, 638, 639, 0, 640, 0, 395, 396,
	1159, 641, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 0, 0, 1166, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 1292, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3461, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 1154, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 1298, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1155, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 1156, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1157, 393, 638, 639, 0, 640, 0, 395,
	396, 1159, 641, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 0, 0, 1166, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1167, 470,
	1168, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 2243, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1169, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 1170, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 2157, 0, 0, 0, 0, 2158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1589,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 1298, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1157, 393, 638, 639, 0, 640, 0,
	395, 396, 1159, 641, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	2156, 409, 408, 0, 410, 642, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 0, 0, 1166, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 1292, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 1154, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1298, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1155, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1156, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 638, 639, 0, 640,
	0, 395, 396, 1159, 641, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1167, 470, 1168, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1169, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1170, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 1212, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1114,
	0, 1573, 0, 0, 280, 281, 1154, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 1113,
	0, 296, 621, 622, 623, 0, 297, 298, 1120, 0,
	1101, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1155,
	321, 322, 323, 1104, 1102, 1103, 1110, 1106, 1105, 1109,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1145, 1146, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 1156,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1152, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 1115, 1116, 1119, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1157, 393, 638, 639,
	0, 640, 0, 395, 396, 1159, 1117, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1153, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 1108, 1107, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 269, 1166,
	457, 458, 0, 1118, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1167, 470, 1168, 1147, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1148,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1169, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1111, 548, 549, 532, 533, 550, 551, 1170, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 1149, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 1150, 588, 1151, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 1112, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 1036, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 229, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 231, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 1567, 663, 664, 0, 608, 607,
	609, 665, 264, 0, 0, 0, 223, 610, 611, 666,
	612, 613, 614, 0, 0, 224, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 185, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 264, 2931, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 1917,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 4662, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 264, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 3411, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 0, 264, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 1561,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 2919, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 3567, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 879, 0, 786, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 2234, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 793, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 877, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 791, 576, 577, 578, 579, 580, 792, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 0, 784,
	0, 786, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 796, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 793, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 791, 576, 577, 578,
	579, 580, 792, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 1956, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 796, 0, 0, 0, 0, 280, 281, 1154, 282,
	283, 284, 285, 286, 287, 0, 1962, 0, 288, 1952,
	289, 1968, 0, 1975, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 1978, 1979, 0, 0, 297, 298,
	0, 0, 1298, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1155, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 1137, 329, 1966,
	1965, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1122, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 0,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 1964, 0, 0, 0, 364, 0, 365, 0,
	0, 1156, 366, 367, 1973, 1974, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 0, 379, 380, 381, 382, 383, 0, 0, 0,
	460, 1158, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1157, 393,
	1959, 1960, 0, 1955, 0, 395, 396, 1159, 0, 1160,
	397, 398, 399, 1161, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	0, 1162, 411, 412, 1163, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1164, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1165, 447, 0,
	0, 1166, 457, 458, 0, 0, 459, 1967, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 0, 1167, 470, 1168, 0, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 1949, 484, 485, 486, 1950, 487, 488,
	489, 0, 490, 0, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1963, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1169, 523, 524,
	525, 526, 0, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	1170, 552, 553, 554, 555, 556, 557, 1961, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1977,
	565, 566, 567, 568, 0, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1969, 1970, 1971, 1972, 0,
	593, 0, 585, 586, 587, 0, 588, 0, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 0, 1953, 1976, 0, 608, 607, 609, 786,
	0, 0, 0, 0, 0, 610, 611, 0, 612, 613,
	614, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 1943,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 793, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 791, 576, 577, 578, 579, 580,
	792, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 786, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 796,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 793, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 2277, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 2278, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 791, 576, 577, 578,
	579, 580, 792, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 2279, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 2026, 0, 1293, 1993, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 796, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 1154, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	1298, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1155,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 1990,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 1156,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1157, 393, 638, 639,
	0, 640, 0, 395, 396, 1159, 641, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 0, 1166,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1167, 470, 1168, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1169, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1991, 548, 549, 532, 533, 550, 551, 1170, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 1987, 0,
	1293, 1993, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	1154, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 1298, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1155, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 1990, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 1156, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1158, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1157, 393, 638, 639, 0, 640, 0, 395, 396, 1159,
	641, 1160, 397, 398, 399, 1161, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 1162, 411, 412, 1163, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1164, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1165,
	447, 0, 0, 1166, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1167, 470, 1168, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1169,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1991, 548, 549, 532, 533,
	550, 551, 1170, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 786, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 793, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	1982, 538, 539, 540, 541, 0, 1983, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 791, 576, 577, 578, 579, 580, 792, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	1981, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 786,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 796, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 793, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 1934, 538, 539, 540, 541, 0, 1935, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 791, 576, 577, 578, 579, 580,
	792, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 1933, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 1293, 1993, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 796,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 1154, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 1298, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1155, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 1990, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 1156, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1158, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1157, 393, 638, 639, 0, 640, 0, 395, 396,
	1159, 641, 1160, 397, 398, 399, 1161, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 1162, 411, 412, 1163, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1164, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1165, 447, 0, 0, 1166, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1167, 470, 1168,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1169, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1991, 548, 549, 532,
	533, 550, 551, 1170, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 1293, 1292, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 1154, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1298, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1155, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1156, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 638, 639, 0, 640,
	0, 395, 396, 1159, 641, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	3764, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1167, 470, 1168, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1169, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1170, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1293, 1292, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 1154, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 1298, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1155, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	1156, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	1158, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1157, 393, 638,
	639, 0, 640, 0, 395, 396, 1159, 641, 1160, 397,
	398, 399, 1161, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	1162, 411, 412, 1163, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1164, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1165, 447, 0, 0,
	1166, 457, 458, 3382, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1167, 470, 1168, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1169, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 1170,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1617, 0, 1293,
	1292, 0, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 1298, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	1616, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1157,
	393, 638, 639, 0, 640, 0, 395, 396, 1159, 641,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	0, 0, 1166, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 1615, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 1614, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1535, 0, 1293, 1292, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 1154, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1298, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1155, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1156, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 1534, 636, 637, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 638, 639, 0, 640,
	0, 395, 396, 1159, 641, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1167, 470, 1168, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1169, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1170, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1495, 0, 1293,
	1292, 0, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 1298, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1157,
	393, 638, 639, 0, 640, 0, 395, 396, 1159, 641,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	0, 0, 1166, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1463, 0, 1293, 1292, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 1154, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1298, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1155, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1156, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 1462, 636, 637, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 638, 639, 0, 640,
	0, 395, 396, 1159, 641, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1167, 470, 1168, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1169, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1170, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1287, 0, 1293,
	1292, 0, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 1154,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 1298, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1155, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 1156, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1286, 636,
	637, 460, 1158, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1157,
	393, 638, 639, 0, 640, 0, 395, 396, 1159, 641,
	1160, 397, 398, 399, 1161, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 1162, 411, 412, 1163, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1164, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1165, 447,
	0, 0, 1166, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 1167, 470, 1168, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1169, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 1170, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 1293, 1292, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 1154, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 1298, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1155, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 1156, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 1158, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1157, 393, 638, 639, 0, 640, 0, 395,
	396, 1159, 641, 1160, 397, 398, 399, 1161, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 1162, 411, 412, 1163, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1164, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1165, 447, 0, 0, 1166, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1167, 470,
	1168, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1169, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 1170, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 1293, 1993, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 1154, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1298, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1155, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 2033, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1156, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 1158, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1157, 393, 638, 639, 0, 640,
	0, 395, 396, 1159, 641, 1160, 397, 398, 399, 1161,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 1162, 411, 412,
	1163, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1164, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1165, 447, 0, 0, 1166, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1167, 470, 1168, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1169, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1170, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 1293, 1292, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 1154, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	1298, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1155,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 1156,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 1158,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1157, 393, 638, 639,
	0, 640, 0, 395, 396, 1159, 641, 1160, 397, 398,
	399, 1161, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 1162,
	411, 412, 1163, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1164, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1165, 447, 0, 0, 1166,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1167, 470, 1168, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1169, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 1170, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 1293, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 1154, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 1298, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1155, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 1156, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 1158, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1157, 393, 638, 639, 0, 640, 0,
	395, 396, 1159, 641, 1160, 397, 398, 399, 1161, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 1162, 411, 412, 1163,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1164,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1165, 447, 0, 0, 1166, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1167,
	470, 1168, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1169, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 1170, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 2741,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	2738, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 2745, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 2944, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 2744, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 2941, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 2943, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 2940, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 2743, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 2942,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 264, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 2741, 297, 298, 624,
	0, 0, 2735, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 2738, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 2745, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 2744, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 2734, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 2743, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 2742, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 1688,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 1687, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	1691, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 1689, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 1690,
	607, 609, 665, 1440, 0, 264, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 1442, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 1204, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 1437, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1439, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 1204, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 1344, 0, 264, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 1346, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	1204, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 698, 0, 264, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 697, 275,
	276, 277, 687, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 690, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 691, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 692, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 686,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 687, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	690, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 691, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 692,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 264, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 1204, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 3334, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 2889, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 2888, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 2249, 0, 264, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 2190, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 2197, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 2196, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 2183, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 2185, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 2153, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 1204, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 1539, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1538, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 1457, 0, 264, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 1450, 0, 264, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 1452, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 1277,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	1276, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 1267, 0, 264, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 1266, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 1264, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1263, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 1259, 0, 264, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 1258, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 668, 0, 264, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 255,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 264, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 3690, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 3691, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 3693, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 3694,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 3689, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 690, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 691,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	692, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 264,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 2286, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 2284, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	2282, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 2203,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 264, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 2012, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 2006, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 866, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 865, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 864, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	2944, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 4052, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 3956, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	3958, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 755, 0, 264, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 1314, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 1312, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 756, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 752,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 1315,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 751, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 755, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	1314, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 1312, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 756, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 752, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 1315, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 751, 657, 658,
	659, 0, 593, 0, 585, 1313, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 677, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 676,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	675, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 264, 2931, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 264, 4062,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 4333, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	4328, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 264,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 3953, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 3732,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 2624, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 264, 2931, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 2928, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 2259, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 2247, 0, 264, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 755, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 745, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 756, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 752, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 1572, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 751, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 1545, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 1544, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 1529, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 1527, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	1522, 0, 264, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 1499, 0, 264, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 1497, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 1460, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 1445, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 1282, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 1281, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	1273, 0, 264, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 1272, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 264,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 1226, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 761, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 755, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 745, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 743, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 744, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 756, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 746, 527, 0, 528, 529, 535,
	536, 530, 531, 752, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 747, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 751, 657, 658,
	659, 0, 593, 0, 585, 749, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 737, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 738, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 700, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	694, 0, 264, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 672, 0, 264, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 3431,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 264, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 3368, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 3301, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	3299, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 264, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 3284, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 2899, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 738, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 264,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 2221, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 0, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 1244, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 1177, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 0, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 0, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 0, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 0, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1736, 1737, 0, 1769, 1770, 1771, 1779,
	1780, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1767, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 1736, 1737, 1785, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1767, 0, 0, 0, 1738,
	1736, 1737, 1739, 1769, 1770, 1771, 1779, 1780, 1781, 1758,
	0, 1785, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 1772, 1767, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 1738, 1736, 1737,
	1785, 1769, 1770, 1771, 1779, 1780, 1781, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 1772, 1767, 0, 0, 0, 1738, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 1758, 0, 1785, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 1744, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 1776,
	0, 1744, 1786, 0, 0, 0, 0, 0, 1766, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1762, 1763, 1764, 0, 1782, 0, 1783, 0, 0,
	1744, 0, 0, 0, 1753, 1754, 0, 1776, 0, 0,
	1786, 0, 0, 0, 0, 0, 1766, 1768, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 1761, 1762,
	1763, 1764, 0, 1782, 0, 1783, 1776, 1759, 1744, 1786,
	0, 0, 1753, 1754, 0, 1766, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 1782, 0, 1783, 0, 0, 0, 0, 0,
	0, 1753, 1754, 0, 1776, 1759, 0, 1786, 0, 1784,
	0, 0, 0, 1766, 1768, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	1782, 0, 1783, 0, 1759, 0, 0, 0, 0, 1753,
	1754, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 1773, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 1777, 1750, 1751, 1757, 1778, 1756, 1752,
	0, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 2453, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 4439, 0, 0, 0, 1775, 0, 0, 0,
	0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747,
	1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0,
	0, 4435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 1750,
	1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740,
	1741, 1742, 1743, 1745, 1746, 0, 0, 1736, 1737, 4354,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 1767, 0, 0, 0, 0, 1736, 1737, 1739, 1769,
	1770, 1771, 1779, 1780, 1781, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	1767, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 1738, 1736, 1737, 1785, 1769, 1770, 1771,
	1779, 1780, 1781, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 1772, 1767, 0,
	0, 0, 1738, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 1758, 0, 1785, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 1763, 1764,
	0, 0, 0, 0, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 1786, 0, 0, 0,
	0, 0, 1766, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 1763, 1764, 0, 1782,
	0, 1783, 1776, 0, 1744, 1786, 0, 0, 1753, 1754,
	0, 1766, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 1782, 0,
	1783, 0, 0, 0, 0, 0, 0, 1753, 1754, 0,
	1776, 1759, 0, 1786, 0, 0, 0, 0, 0, 1766,
	1768, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 0, 1783, 0,
	1759, 0, 0, 0, 0, 1753, 1754, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 1760, 0, 0, 0, 0,
	0, 1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 1772, 1767, 0, 0, 0, 0,
	0, 0, 1739, 1760, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746, 0, 0, 0, 0, 4314, 0,
	0, 0, 1775, 0, 0, 0, 0, 1750, 1751, 1757,
	1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741, 1742,
	1743, 1745, 1746, 0, 0, 0, 0, 4313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 1761, 1762, 1763, 1764, 1750, 1751, 1757, 1778, 1756,
	1752, 1744, 1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745,
	1746, 0, 0, 0, 0, 4137, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1786, 0, 1772, 1767, 0, 0, 1766, 1768, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 1782, 0, 1783, 0, 0, 0, 0,
	0, 0, 1753, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 1767, 0, 1776, 0, 0, 1786, 1765,
	1739, 0, 0, 0, 1766, 1768, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 1777, 0, 1774, 0,
	0, 0, 1736, 1737, 1755, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1767, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 1758, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 1755, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 3982, 0, 0, 1776, 0, 0, 1786, 0,
	0, 0, 0, 0, 1766, 1768, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 1783, 0, 0, 0, 0, 1760, 0,
	1753, 1754, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 1736, 1737, 1777, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1767, 0, 1776, 0,
	0, 1786, 0, 1739, 0, 0, 0, 1766, 1768, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1784, 1783, 0, 0, 0,
	0, 0, 0, 1753, 1754, 0, 0, 0, 1738, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 1758, 0,
	0, 1774, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	3909, 0, 0, 0, 0, 0, 0, 1765, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 1760, 0,
	0, 0, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 1786, 0, 1772, 1767, 0, 0, 1766, 1768, 0,
	1765, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 1782, 0, 1783, 0, 0, 0,
	0, 1760, 0, 1753, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 1758, 1777, 0, 0,
	0, 0, 0, 0, 0, 1755, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	3908, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1762, 1763, 1764, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 3907, 0, 0, 1776, 0, 0, 1786,
	1765, 0, 0, 0, 0, 1766, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 1782, 0, 1783, 0, 0, 0, 0, 0,
	0, 1753, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 1774,
	1736, 1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 1767, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 3572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1761, 1762, 1763, 1764, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 1786,
	0, 1772, 1767, 0, 0, 1766, 1768, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 1782, 0, 1783, 0, 0, 0, 0, 0,
	0, 1753, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747,
	1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0,
	0, 3097, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 1762,
	1763, 1764, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 1737,
	0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 1767, 0, 1776, 0, 0, 1786, 1765, 1739,
	0, 0, 0, 1766, 1768, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1782, 0, 1783, 0, 0, 0, 0, 0, 0, 1753,
	1754, 0, 0, 0, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 1777, 0, 1774, 0, 0,
	0, 1736, 1737, 1755, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1767, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 1758, 1761, 1762,
	1763, 1764, 0, 0, 0, 0, 1755, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747,
	1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0,
	0, 3096, 0, 0, 1776, 0, 0, 1786, 0, 0,
	0, 0, 0, 1766, 1768, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 1783, 0, 0, 0, 0, 1760, 0, 1753,
	1754, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 1736, 1737, 1777, 1769, 1770, 1771, 1779, 1780, 1781,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1767, 0, 1776, 0, 0,
	1786, 0, 1739, 0, 0, 0, 1766, 1768, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1784, 1783, 0, 0, 0, 0,
	0, 0, 1753, 1754, 0, 0, 0, 1738, 0, 0,
	0, 0, 1773, 0, 0, 0, 0, 1758, 0, 0,
	1774, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 1750,
	1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740,
	1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0, 3095,
	0, 0, 0, 0, 0, 0, 1765, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 1760, 0, 0,
	0, 1761, 1762, 1763, 1764, 0, 0, 0, 0, 0,
	0, 1744, 4576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	1786, 0, 1772, 1767, 0, 0, 1766, 1768, 0, 1765,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 1782, 0, 1783, 0, 0, 0, 0,
	1760, 0, 1753, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1758, 1777, 0, 0, 0,
	0, 0, 0, 0, 1755, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 1750,
	1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740,
	1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0, 3094,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 0, 0, 1744,
	0, 3157, 0, 0, 3156, 0, 0, 1775, 4575, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	3061, 0, 0, 0, 0, 1776, 0, 0, 1786, 1765,
	0, 0, 0, 0, 1766, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 1774, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 1767, 0, 0, 0, 0, 3032, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0, 1749,
	1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0, 0,
	0, 0, 0, 3033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2597, 0, 1777, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 1786, 0,
	0, 0, 1772, 1767, 1766, 1768, 0, 2596, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 1759, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 1767, 0, 1776, 0, 1765, 1786, 0,
	1739, 0, 0, 0, 1766, 1768, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1758, 0, 0, 1774, 0,
	0, 0, 1736, 1737, 1755, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1767, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 1758, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 1755, 0, 1744,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 1786, 0,
	0, 0, 0, 0, 1766, 1768, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 1783, 0, 0, 0, 0, 1760, 0,
	1753, 1754, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 1736, 1737, 1777, 1769, 1770, 1771, 1779, 1780,
	1781, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1767, 0, 1776, 0,
	0, 1786, 0, 1739, 0, 0, 0, 1766, 1768, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1784, 1783, 0, 0, 0,
	0, 0, 0, 1753, 1754, 0, 0, 0, 1738, 0,
	0, 0, 0, 1773, 1033, 0, 0, 0, 1758, 0,
	0, 1774, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 1760, 0,
	0, 0, 1761, 1762, 1763, 1764, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 3163, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 1776, 0,
	0, 1786, 0, 0, 0, 0, 0, 1766, 1768, 0,
	1765, 0, 1772, 1767, 0, 0, 0, 3158, 0, 0,
	1739, 0, 0, 0, 1782, 0, 1783, 0, 0, 1785,
	0, 1760, 0, 1753, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 1738, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 1758, 1759, 0, 0, 0,
	0, 0, 0, 0, 1755, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	3553, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1763, 1764, 0, 0, 0, 0, 0, 1775, 1744,
	0, 0, 0, 1750, 1751, 1757, 1778, 1756, 1752, 0,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	1765, 0, 0, 0, 0, 1776, 0, 0, 1786, 0,
	0, 0, 1772, 1767, 1766, 1768, 0, 0, 0, 0,
	1739, 1760, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 1759, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 1761,
	1762, 1763, 1764, 1750, 1751, 1757, 1778, 1756, 1752, 1744,
	1749, 1747, 1748, 1740, 1741, 1742, 1743, 1745, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1737, 0, 1769, 1770, 1771, 1779, 1780, 1781, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 1765, 1786, 0,
	0, 0, 1772, 1767, 1766, 1768, 0, 3098, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 1760, 1785,
	0, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1738, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 1759, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1763, 1764, 0, 3125, 1775, 0, 0, 0, 1744,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 1736, 1737, 0,
	1769, 1770, 1771, 1779, 1780, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 1765, 1786, 0,
	1772, 1767, 0, 0, 1766, 1768, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 1760, 0,
	0, 1782, 0, 1783, 0, 0, 0, 0, 0, 0,
	1753, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1777, 0, 0, 0, 1774, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1762, 1763,
	1764, 0, 0, 0, 0, 1775, 0, 1744, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 1786, 1765, 0, 0,
	0, 0, 1766, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 1782,
	0, 1783, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	1750, 1751, 1757, 1778, 1756, 1752, 0, 1749, 1747, 1748,
	1740, 1741, 1742, 1743, 1745, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 1750, 1751,
	1757, 1778, 1756, 1752, 0, 1749, 1747, 1748, 1740, 1741,
	1742, 1743, 1745, 1746,
}

var sqlPact = [...]int{
	272, -1000, -1000, -1000, -1000, 246, -1000, -1000, 245, 242,
	224, 217, 215, 208, 205, 204, 202, 199, 196, -1000,
	-1000, -1000, -1000, -1000, -1000, 195, -1000, -1000, 194, -1000,
	192, 191, 188, -1000, -1000, 186, -1000, 184, -1000, -1000,
	-1000, -1000, 182, 181, 180, 88637, 88093, 89174, 2293, 110802,
	96720, 2117, 79417, 110258, 78873, 109714, 2160, 9978, 109170, 2729,
	179, -1000, 108626, 178, 176, 170, -1000, 108082, -1000, 2129,
	-1000, 168, -1000, 4549, 64157, 167, 165, 164, 2307, 162,
	-1000, 160, 158, -1000, -1000, 156, -1000, 13903, 1770, -1000,
	155, 150, -1000, 5914, 94014, 147, 142, 2409, 137, 135,
	63612, 134, 133, 2273, 2926, -1000, -1000, 2006, -1000, -1000,
	129, 125, 123, 119, 118, 116, 113, 111, 109, 108,
	107, -1000, 105, 97, 95, 89, 88, -1000, 86, 85,
	84, -1000, 83, -1000, 78, 77, 74, 73, 72, 70,
	69, 64, 63, 60, 59, 58, 52, -1000, 8519, -1000,
	1877, 1653, 1652, 1651, 1650, 1649, 1006, 49, 43, 42,
	41, 40, 39, 38, 36, 35, 34, 33, 30, 29,
	27, 26, 25, 23, 139, 17, 16, 12, 11, 10,
	8, 0, 2346, -1000, 1551, 1039, 29743, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 116709, 111339, -1, -68, -5, -1000, 3306,
	1001, 52677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	332, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 522,
	2314, 791, -1000, -1000, -1000, 107545, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2292, -83, -1000, 2047, -1000, -1000,
	-1000, -1000, -1000, 790, -1000, 2291, 209, 2245, -1000, -1000,
	-1000, 3346, 2435, 3727, 3725, 3723, 3722, 3721, 116172, 1782,
	3720, 2531, 3719, 3718, 3713, 3712, 3711, 3708, 3707, -1000,
	87549, 1065, 87005, 86461, 3376, 107008, 85917, 106464, 72905, 44779,
	881, 3345, -1000, -1000, -1000, -1000, -1000, -1000, 111339, -1000,
	1064, -1000, -1000, 3705, 3703, 2041, 786, 96176, -1000, 2133,
	-1000, 957, 31453, -1000, 1230, -1000, 31453, 326, -1000, -1000,
	-1000, -1000, -1000, -1000, 3702, 3701, 3700, 3698, 3697, -1000,
	-1000, 78329, 22851, 77785, 77241, 105920, 22296, 85373, 84829, 3696,
	105376, 72350, 1063, 1417, -1000, -1000, -1000, -1000, -1000, -1000,
	-30, 70130, 3503, 111339, -1000, 323, -1000, -1000, -1000, -1000,
	-1000, -1000, 44197, 1037, 43615, 782, 43033, 502, -1000, -1000,
	-1000, -1000, 71795, -1000, 104832, 2431, 3695, 3694, 1134, 3693,
	3253, 1742, 3692, 1786, 1282, 3690, 3689, 3688, 3687, 3684,
	3683, 3682, 1421, 104288, 2998, 1446, 103744, 1714, 71240, 1061,
	84285, 89174, 2660, 103200, 1402, 1393, -1000, -1000, -1000, -1000,
	3106, 2923, 2916, 1373, -1000, -1000, -1000, -1000, 55395, 8681,
	5549, 11171, 102656, 58200, 89174, 89174, -1000, -1000, -1000, -1000,
	-1000, 42451, 438, 41869, 841, -1000, -1000, 55956, 2931, -1000,
	-1000, -1000, -1000, 41287, 339, 40705, 772, 111339, -1000, 2997,
	2128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2120, 1623, 3566, 2755,
	70685, 2050, 1414, 3311, 3092, 3084, 1530, 3062, 3681, 2605,
	3059, 3055, 3049, 3042, 3038, 1675, 2627, 421, 29161, 2988,
	1695, 40123, 1542, 1521, 3027, 3020, 3575, 2026, 1985, 2053,
	76697, 3680, 3679, 3283, 3019, 3018, 2804, 3013, -1000, 2930,
	-1000, -1000, -1000, -1000, 1476, -1000, -1000, -1000, -1000, 79954,
	-1000, -1000, 1340, -1000, -1000, 1340, -1000, -1000, -1000, -1000,
	-1000, 1324, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1551, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2241, -1000, 2014, -1000, -1000, 2515,
	3232, 3232, 3232, 3344, 494, 486, -1000, 139, -1000, -1000,
	122476, -1000, -1000, 45349, 45349, 45349, 45349, 45349, 45349, 45349,
	2178, -1000, 783, -1000, -1000, 831, -1000, 770, 631, -1000,
	-1000, -1000, -1000, -1000, -1000, 769, -1000, -1000, -1000, -1000,
	-1000, -1000, 3503, -1000, 25681, -1000, -1000, -1000, 427, 765,
	45349, -1000, -1000, 3598, 3597, 959, -1000, 318, 980, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2996, 761, 759, -1000, 753, 746, 745, 744, 740,
	-1000, -1000, -1000, 738, 737, 736, 735, 725, 722, 716,
	714, -1000, 2072, -1000, -1000, -1000, -1000, -1000, -1000, 675,
	673, 673, 673, -1000, 1050, -1000, -1000, -1000, 314, 672,
	309, 670, 669, 668, -1000, 711, 709, 706, 705, 704,
	701, 699, 696, 695, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1049, -1000, -1000, -1000, -1000, -34, 111339, -1000, 522,
	-34, -1000, -1000, 691, -1000, 33745, 33745, 33745, -1000, -1000,
	2289, 45349, -1000, 2695, -1000, -17, -17, 914, 54305, -1000,
	51587, 914, 343, 844, 59828, -1000, 2929, -1000, -1000, 689,
	304, -1000, -1000, -1000, -1000, 23404, 2927, 111339, 111339, 89174,
	89174, 89174, 3678, 3172, 45349, -1000, -1000, 67945, 111339, 90248,
	-1000, -1000, 3448, 64694, 67403, 111339, 2995, 66866, 3676, -1000,
	-1000, -1000, -1000, -1000, 3151, 3675, 3674, 3673, -1000, 111339,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 223, 3148, -1000,
	-1000, 93470, 223, 3145, -1000, 223, 3144, -1000, 92933, -1000,
	-1000, 2189, 3143, -1000, -1000, 233, 3142, -1000, -1000, -1000,
	232, 3140, -1000, -1000, 299, -66, 3135, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 122476,
	-1000, -1000, -1000, 66322, -1000, 3287, -1000, -1000, 111339, -1000,
	45349, -1000, 3447, 2034, 74000, 3383, -49, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2492, 2495, 1175, 2318, -1000, 3196,
	1438, -1000, 31453, 3241, -1000, -1000, -1000, 296, 23404, -1000,
	-1000, -1000, -1000, -1000, -1000, 4821, 3133, 1531, -1000, 2317,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2088, 3132,
	-1000, 1854, 3126, 2069, -1000, -1000, 2575, -1000, 3279, -1000,
	-1000, 1740, 3125, -16, -1000, -1000, 2521, -1000, -1000, 1896,
	-1000, 1010, 3119, -1000, 83741, 57639, 55956, 70130, -38, -1000,
	-1000, -1000, -1000, -190, -1000, 21741, 122476, -1000, -1000, -1000,
	-1000, 1693, 122476, 920, -1000, -1000, 3109, -1000, 122476, 917,
	-1000, -1000, 3103, -1000, 2994, -1000, -1000, 2387, -1000, -1000,
	3672, -1000, -1000, 3670, -1000, 3668, 3667, 3666, -1000, 1702,
	2035, 3665, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	83204, 2286, -1000, -1000, 82116, 2993, -1000, 2386, 3372, -1000,
	82660, 1060, -1000, 1010, 2385, -1000, 92396, 1033, 2382, -1000,
	3664, 3363, 2683, 1010, 2381, -1000, -1000, -1000, -1000, -1000,
	1025, -1000, 61450, -1000, 61450, -1000, 1568, -1000, 115635, -17,
	89174, 3503, -1000, -71, -1000, -1000, -1000, 1001, -1000, 54850,
	-1000, 54850, 95632, 73458, 985, 815, 63067, 122476, -1000, -1000,
	-1000, -1000, 122476, -1000, -1000, -1000, -271, 2749, -1000, 73458,
	57078, 122476, -1000, -1000, -1000, -1000, 122476, -1000, -1000, -1000,
	73458, 82116, -1000, 102112, 81579, -1000, -1000, 1418, 2563, -1000,
	-1000, -1000, 73458, 1305, 73458, 73458, 73458, -1000, 101568, -1000,
	-1000, 2060, 1436, 3286, 2020, 89174, -1000, 1784, -1000, -1000,
	-1000, 3301, 111339, -1000, -1000, 2990, -1000, 65777, 91859, -1000,
	91322, -1000, 90785, -1000, 89174, -1000, 89174, -1000, 3663, 3662,
	3659, -1000, -1000, 3658, -1000, 3657, 3293, -1000, 122476, 3291,
	-1000, 3656, 3377, 2988, 122476, -1000, 3107, 1678, 1669, 111339,
	-1000, -1000, 111339, -1000, 111339, -1000, -1000, -1000, 1496, -1000,
	-1000, 2484, -1000, -1000, -1000, -1000, 89174, 1371, -1000, -1000,
	-1000, -1000, -1000, -1000, 2863, -1000, 1757, -1000, 1778, -1000,
	2925, 3299, -1000, 1397, -1000, -1000, 248, -1000, -1000, -49,
	-1000, 115098, -1000, 2515, -1000, 111339, -1000, 2530, 2941, 2986,
	1755, 2277, 2578, -1000, 39541, 2494, 48769, 2316, 139, -1000,
	-1000, 139, 139, 30883, -1000, -1000, 64694, 64694, 23404, 1353,
	45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349,
	45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349,
	45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349, 45349,
	45349, 45349, 45349, 45349, 45349, 2090, 45349, 1322, 45349, 45349,
	45349, 45349, 1744, -1000, -1000, 1936, 584, 2018, -1000, 3512,
	3512, 3512, 930, 930, 9249, 9249, 641, 3655, 831, -1000,
	45349, -1000, 53, 45349, 23959, -1000, 486, 8290, 2487, -1000,
	484, 24541, -1000, -1000, -1000, 25681, 631, 38959, 45349, 1038,
	122476, -1000, -1000, 1434, 3538, 21187, 2991, 2795, 688, 898,
	767, 28579, 27997, 27415, 26833, 697, 45349, 45349, 45349, 45349,
	45349, 45349, 45349, 45349, -1000, -1000, 3556, -1000, 3538, -1000,
	-1000, -1000, -1000, 3538, 1348, 1345, 3538, -1000, 3538, 3538,
	6976, 6976, 38389, 37807, 37225, 49339, 36643, 45349, 26251, 36061,
	35479, -1000, 111339, -34, 3444, 45349, 185, -1000, 121268, -1000,
	185, 185, 687, -72, 122476, 2665, 2665, 53220, 2353, 2183,
	2183, 2183, -1000, 914, 16726, 914, 100489, 2197, 914, 914,
	293, 310, 483, 51044, 2695, 100489, 803, 683, -6, -7,
	-10, -1000, -1000, -11, -13, -1000, -1000, 89174, 682, 23959,
	23404, 282, 1463, -74, 2640, 2638, 2634, -1000, 2611, -1000,
	1722, -85, 1320, 89174, 111339, 3654, -79, -1000, 6604, -88,
	-1000, 1129, 277, 3538, -1000, -1000, -1000, -1000, -1000, 3653,
	3652, -1000, 1008, 678, 677, 382, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 675, 673, 673, 673, -1000, 314,
	672, 309, 670, 669, 668, -1000, -1000, -1000, -1000, -1000,
	2924, 89174, 111339, 3651, -190, 90248, -99, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 111339, -1000, -1000, -1000, 3650,
	-1000, 89174, -1000, -1000, 89174, 223, 3102, -1000, 89174, -1000,
	89174, 220, 3099, -1000, -1000, 111339, -1000, 89174, 89174, -1000,
	111339, 111339, 111339, 73458, 73458, 247, -1000, 89174, 922, -90,
	1147, -49, -1000, -1000, -1000, 1340, -1000, 2031, -1000, -1000,
	-1000, -1000, -1000, -1000, 1413, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 959, -1000, -1000, -1000, -1000, -1000, -1000,
	3551, 3547, -35, -1000, -1000, 23404, -1000, -50, 1609, 2078,
	1316, -1000, 76153, 2474, 3275, 3648, 2673, 3262, 1557, -1000,
	1480, -1000, 3369, 79954, 3404, 3402, 174, -1000, 2921, -1000,
	-1000, 956, 1746, 1689, 1315, 1312, 79954, 1854, -1000, 64694,
	-1000, 2597, 3342, 1403, 1409, 1403, 1403, 1422, -1000, 79954,
	1688, 1309, 1302, 1298, 1954, 1943, -1000, -1000, 2070, -1000,
	1228, 1225, 859, 1926, -1000, -52, 3400, 3397, 166, -1000,
	2912, 1216, -1000, -1000, -1000, 3338, 89174, 23404, 1580, 1576,
	1567, 1684, 1215, -36, -1000, 3395, 1214, 1213, -1000, 6538,
	-1000, 73458, 1994, 3096, 2747, 912, 2740, -1000, -1000, -1000,
	912, -38, 70130, 111339, 275, -1000, 53, 45349, 45349, 53,
	45349, 53, 3371, 3095, -1000, -1000, -1000, -1000, -1000, 3647,
	1999, 2526, -1000, -1000, 658, 2378, 2911, 111339, 2652, -39,
	89174, -1000, 65235, 3079, 68487, 1854, 2377, -1000, -1000, 81035,
	-1000, 3076, 522, 2369, -1000, 755, 3646, 3073, -1000, 114561,
	-1000, 3287, 1363, 3071, 1102, 743, 3443, -1000, 743, 61993,
	-1000, 111339, -1000, -17, 396, 75079, -96, -101, 481, -1000,
	101031, 111339, 1101, 75616, 111339, 3230, 1005, 55956, -1000, 55956,
	-102, -271, 2734, 1442, 985, 985, 912, -1000, 912, -1000,
	89174, 2985, -1000, -1000, 73458, 985, 985, 985, -1000, -1000,
	-1000, -1000, 3645, 3644, 3643, -1000, -1000, -1000, 1007, 89174,
	111339, 89174, -1000, 274, -1000, 111339, -1000, 111339, 111339, 89174,
	-1000, 1007, 111339, 1007, 111339, 1007, 111339, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 53, 45349, -1000, -1000, 3639, 1611,
	-1000, 2977, -1000, 2972, -1000, 22, -1000, -1000, -1000, -1000,
	-1000, -1000, 1780, -1000, -1000, 89174, 89174, 89174, 89174, 111339,
	3216, -1000, 111339, 3209, 89174, -1000, 79954, -1000, 2530, 2941,
	-1000, -1000, -1000, -1000, -1000, -1000, 1569, 2252, -1000, 2582,
	-1000, 1517, -1000, -1000, -1000, 122476, 49909, -1000, -1000, 122476,
	1725, -1000, 48199, 47629, -1000, -1000, 1674, 89174, 2656, -1000,
	2656, -131, -1000, 121078, 2566, 89174, -1000, -1000, -1000, -1000,
	-1000, 955, 1386, 1386, 1296, 1296, 1296, 1296, 3380, 4964,
	2002, 1357, 458, 458, 5065, 5065, 5065, 5065, 5065, 458,
	785, 930, 930, 785, 785, 785, 785, 785, 930, 930,
	930, 458, 458, 458, 9249, 10816, 8246, 45349, 45349, 1212,
	1884, 584, 7604, 45349, 564, 564, 564, 564, -1000, 2175,
	-1000, -1000, -1000, -1000, 2907, 656, 49339, 49339, -1000, -1000,
	-1000, -1000, 25111, 45349, -1000, -1000, -1000, -1000, 34897, -1000,
	-1000, 120450, -313, 480, -114, -4, -1000, 45349, 45349, 45349,
	476, -1000, 271, 45349, 111339, -1000, 117792, 802, -150, -1000,
	-103, 1450, -1000, 45349, -1000, -1000, 1207, -1000, 1201, 1200,
	1195, -1000, 655, 472, -1000, 265, -1000, 2181, 652, 650,
	45349, -1000, -1000, -1000, -1000, -1000, 120367, -1000, -1000, 120187,
	-1000, -1000, 119999, -1000, -1000, 119739, -1000, -1000, -1000, 122288,
	15587, 15496, 14914, 7866, 14264, 13562, -104, 471, -118, 469,
	941, 940, 461, 460, 456, -119, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -120, 454,
	-1000, 2904, -114, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 444, -1000, 440, -1000, 122098, -114, 439, 4724, -1000,
	49339, 49339, 49339, -1000, 436, -1000, 120818, -1000, 121908, 34327,
	34327, 34327, 435, 121711, 45349, -114, -121, -1000, -126, -1000,
	-1000, 588, -128, 1031, 33745, 52132, 23404, -1000, 1031, 1031,
	45349, -1000, 45349, 2621, -1000, -1000, -1000, -1000, 2609, 1953,
	2665, 53220, -1000, -1000, -1000, -1000, 100489, -1000, 3503, 2876,
	-1000, 100489, -1000, -1000, 111339, 522, -1000, 100489, 100489, 23404,
	914, -1000, 914, 100489, 842, -1000, -1000, -1000, -1000, -1000,
	432, 58742, -4, 257, 23404, 1010, -1000, 2648, 2648, 2648,
	2648, -1000, -1000, 111339, 1193, -42, -112, -1000, 3478, -1000,
	2094, -1000, 64694, -1000, 829, 1124, 23404, -1000, -1000, -1000,
	649, -1000, 3538, 3538, -1000, 3538, 111339, 2902, 122, -1000,
	120, 68487, 68487, 3637, -1000, -1000, 223, -1000, 89174, 223,
	223, -1000, 89174, 89174, 2189, -1000, 233, -1000, 232, -1000,
	-1000, -66, -1000, 1026, 31453, -1000, 1340, -1000, -1000, 1586,
	-1000, 2008, -1000, 1329, -1000, -1000, -1000, -1000, 31453, -1000,
	2287, 111339, 111339, 89174, -1000, 111339, -1000, 2226, 3475, 1883,
	2482, 2478, 68487, -1000, 2367, 114024, 2355, 64694, 111339, -1000,
	-1000, 648, 965, 2553, 2550, 1099, 111339, 111339, 2546, 113487,
	112950, -1000, 3635, 111339, 2063, 45349, 3336, 2272, 2952, 53,
	53, -1000, -1000, 53, 646, 1295, 89174, 89174, 111339, 68487,
	89174, 1878, -1000, -1000, -1000, -1000, -1000, 80491, -1000, -1000,
	3555, 3553, -1000, 1403, -1000, -1000, -1000, 1403, 1854, 1862,
	111339, 68487, 89174, 68487, 111339, 111339, -1000, 1683, 111339, 1473,
	-1000, 859, 2103, 53, 53, -1000, -1000, 53, 645, 23404,
	2101, -1000, 2984, 111339, 3596, 112413, 3593, 111339, 111339, 111339,
	68487, 3285, 111339, 111339, 68487, 6538, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 69593, 1107, 1010,
	1671, 1191, 1189, 79954, 55956, 1004, 55956, 2689, -1000, -1000,
	20633, -1000, 122476, 122476, -1000, 122476, -1000, 65235, 111339, -1000,
	1053, 111339, 75616, 968, 3068, 60907, -190, 985, 73458, 89174,
	-39, 2652, 111339, -1000, -1000, 1854, 3067, 522, 2359, -1000,
	73458, 3442, 3066, 642, 3633, 3631, -1000, 89174, 2284, 2356,
	-1000, -1000, 111876, 3101, 859, 111339, 1031, 53220, 1913, -1000,
	59286, 1074, 111339, 1753, 115, -1000, -1000, -1000, 6, 111339,
	-1000, 838, -1000, -1000, 396, 396, 985, -239, 636, -1000,
	905, 892, 56517, 73458, -129, -1000, -1000, -1000, -1000, 2355,
	89174, 111339, 1293, 2682, 111339, -135, -1000, 254, 632, -1000,
	2541, -1000, -271, -1000, 1005, 55956, 2899, 2898, -1000, -1000,
	1023, -1000, 1391, 985, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -21, 111339, -190, -190, -40, -42,
	-1000, 1007, -1000, 1007, -1000, 1007, -1000, 122476, -1000, -1000,
	1588, 1574, 111339, -1000, 23404, 111339, 89174, 23404, 89174, 2938,
	2936, -1000, -1000, -1000, 111339, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1116, -1000, 1725, 2251, -1000, 631, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2456, -1000, -48,
	30883, 919, -1000, -1000, 89174, -24, 45349, 45349, 7554, 6001,
	45349, 49339, 49339, -1000, 45349, 5181, -1000, -1000, -1000, -1000,
	-1000, 2897, 621, 45349, 64694, 6017, 5411, -1000, 431, 13060,
	785, -1000, 45349, -1000, 418, 33175, -1000, 121448, -46, -136,
	-1000, 17293, -114, -138, -1000, -1000, 828, -1000, 3069, -1000,
	45349, 121531, 2421, 1853, 1824, 1624, 3538, 3587, 20079, -1000,
	62530, 1040, 2213, 119551, -1000, -1000, -1000, -1000, 64694, 64694,
	45349, 45349, -1000, 45349, 45349, 45349, -1000, -1000, -1000, 3538,
	923, -1000, -1000, -1000, 923, -1000, -1000, 1403, -1000, 1403,
	-1000, 45349, -1000, -1000, 2896, 45349, -1000, 64694, 64694, 49339,
	49339, 49339, 49339, 49339, 49339, 49339, 49339, 49339, 49339, 49339,
	49339, 49339, 49339, 49339, 49339, 49339, 49339, 49339, 2497, 49339,
	3509, 3509, 3509, -1000, 2864, 2896, 45349, 45349, 64694, 417,
	416, 414, -1000, 45349, -114, -1000, -1000, 396, 619, -1000,
	2442, -1000, 2790, -1000, 45349, -1000, -175, -1000, 2695, -1000,
	-1000, 2790, 2790, -141, 122476, 53220, 53220, -1000, 617, 45349,
	2603, -1000, -1000, 801, -314, -1000, 891, -1000, -1000, -1000,
	-1000, -1000, 522, -1000, -1000, -1000, 252, 100489, 100489, 800,
	-1000, -144, -1000, -1000, -149, -1000, 3441, 411, 23404, -1000,
	1031, 2704, -1000, -1000, -1000, -1000, -1000, -1000, -190, 111339,
	111339, 2227, 3583, -1000, 3543, 826, 798, 221, 3538, 405,
	404, 400, -190, 111339, 111339, 111339, -1000, -1000, -1000, -1000,
	223, -1000, -1000, -1000, 220, -1000, -1000, -1000, -1000, 2601,
	-1000, -49, -1000, -1000, -1000, 45349, -1000, -1000, 3274, 1188,
	1187, -1000, -1000, -1000, -1000, 2428, 1879, 89711, 3474, 1858,
	1857, -1000, 3064, -1000, 2351, -1000, 1089, -1000, 1729, -1000,
	45349, 616, 2676, 614, 613, 3630, 1836, 3629, 1100, 3058,
	2189, 3057, 2189, -1000, -1000, -1000, 960, -1000, 122476, 2272,
	-1000, 612, 610, -1000, -50, 1596, 2067, 1184, 1021, -1000,
	-1000, 45349, 45349, 99952, -1000, 452, 3279, -28, -1000, -1000,
	-1000, 1660, 1182, 1181, -1000, -1000, -1000, -1000, 1854, 1633,
	1180, 1179, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1019,
	-1000, 3024, 3022, 932, 111339, -1000, 1018, -1000, -1000, 45349,
	-1000, -52, 1177, 3388, 2348, 89174, -1000, 2189, 3056, 1176,
	-1000, 1174, -1000, -1000, -1000, 3393, 3391, 1194, -1000, -1000,
	-1000, -1000, -1000, 69040, -1000, 111339, 68487, 89174, 1833, 912,
	-1000, 2488, 912, 1004, 2885, -1000, 2649, 1014, 89174, 3627,
	397, -154, -53, 64694, 3440, -1000, 2297, 640, 89174, 924,
	-1000, 3503, -1000, -1000, -1000, 1013, -1000, 3366, 89174, 3439,
	3054, 1010, 53, 89174, 3568, -1000, -1000, 3437, 89174, 3053,
	2283, 2344, 2506, 859, 74542, 1010, 2206, -65, -1000, 1753,
	32593, 3272, -161, -1000, -1000, -1000, 1031, 61993, 53220, 45349,
	3626, -162, -1000, -1000, -1000, -1000, -1000, 97262, 97262, 73458,
	73458, 73458, 985, 111339, 111339, 75616, -1000, -1000, 609, 111339,
	111339, 608, -1000, 111339, 111339, 3624, 73458, -54, 603, -1000,
	889, 888, 887, -1000, -1000, -1000, -1000, -1000, 1005, -1000,
	-271, 55956, 53, -1000, 2239, 89174, -1000, 19525, -1000, -1000,
	-1000, -1000, -1000, -1000, 1007, -1000, -1000, 2118, 2309, 2118,
	1806, 1802, -1000, -1000, 2250, -1000, -1000, -1000, -1000, 2606,
	3276, 23404, 3382, 564, 45349, 45349, 5053, 551, 515, 564,
	45349, 45349, 64694, 15958, -168, 45349, 45349, -1000, 45349, 797,
	122476, 3581, 45349, 393, 392, -1000, -1000, -1000, 3527, -1000,
	-1000, -1000, 122476, 45349, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 388, -1000, 7, -1000, -1000, -1000, 117246, -1000, 45349,
	387, 3335, -1000, 385, 383, 12048, 6466, 119371, 119288, 119108,
	379, -1000, -1000, 378, 376, 122476, 2864, 122476, -1000, -1000,
	1086, 1086, 1392, 1392, 1392, 1392, 3509, 634, 918, 586,
	972, 972, 972, 671, 575, 575, 972, 972, 972, 2867,
	2501, 602, 6791, -1000, -1000, 122476, 122476, 372, -1000, -1000,
	-1000, -114, 371, 396, -1000, 2783, 3329, 122476, -1000, 53220,
	2783, 2783, -1000, -1000, 1953, 111339, 122476, 53220, -1000, 2876,
	-1000, 17858, -1000, 23404, -1000, -1000, -1000, -1000, 3503, -1000,
	58742, -1000, 601, -1000, -3, -1000, 2704, -1000, 886, -1000,
	-1000, 73458, 73458, -190, -190, -1000, -1000, 796, 3623, 811,
	23404, 366, -1000, -1000, -1000, -190, -190, -190, -1000, -1000,
	-1000, 3229, 122476, 111339, 111339, 1429, 99415, 3435, 3434, 95088,
	1794, -1000, -1000, 1923, 2477, -1000, 3473, 3467, 111339, 3048,
	-1000, 2319, -1000, 1099, 118920, 53763, -1000, 53763, 111339, -1000,
	-1000, 1919, 2559, 1133, -1000, 3303, 111339, -1000, 111339, -1000,
	-1000, -1000, 111339, 111339, 89174, 111339, -1000, 68487, 3033, -169,
	122476, -58, -1000, 885, -1000, 1412, -1000, 18971, 111339, 68487,
	89174, 111339, 68487, 89174, 2151, -1000, -1000, 3021, -1000, 3032,
	-170, 23404, -1000, 3579, 3577, 3047, 3308, -1000, 111339, 3576,
	111339, 89174, 3228, -1000, -1000, -1000, -1000, -1000, 1630, 1173,
	1171, 1004, -61, 600, -1000, 884, -1000, -1000, 875, 1004,
	-1000, 73458, 55956, 3622, 522, -1000, 2667, -1000, 94551, 2290,
	53, -1000, 3621, 97804, 599, -1000, 2220, -1000, 794, -1000,
	2447, 68487, 1854, 53, 89174, -1000, -1000, 522, 365, -62,
	-1000, 3061, 1095, 23404, 89174, 3046, 2518, 859, 74542, -1000,
	1363, 2578, -1000, -63, -1000, 583, 53, 2206, -1000, -65,
	122476, -1000, 872, -1000, -177, -1000, -1000, 361, -1000, 3227,
	3226, -1000, 2784, 53763, 597, 596, 111339, 3223, -1000, -1000,
	-178, 2075, 2075, 73458, 55956, 73458, -1000, 1005, 912, -1000,
	2449, -1000, -1000, -1000, -1000, -1000, 23404, 1644, -1000, 595,
	594, -1000, -1000, -1000, -1000, 3276, 564, 564, 45349, 45349,
	45349, 564, 15958, -179, -1000, 564, 564, -114, -1000, -1000,
	121448, -1000, -1000, -1000, 122476, -1000, 18417, 2124, -1000, 118533,
	-1000, 30883, -1000, -1000, 45349, 45349, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 49339, 2866, 593, 64694, -1000, -1000,
	358, 1029, 45349, 47059, 2695, 1029, 1029, -1000, -188, -1000,
	-1000, -1000, 3503, -3, -1000, -1000, 3619, 23404, -1000, 73458,
	-1000, -1000, 806, -1000, 3616, -1000, -1000, -1000, -1000, -1000,
	2723, 3432, -1000, 1918, 111339, 111339, -1000, -1000, 1917, 2476,
	-1000, 3431, 1169, 3430, -1000, 111339, -1000, 111339, -1000, 23404,
	111339, 2819, 1269, -1000, 965, 2545, 592, 49339, 89174, 748,
	-1000, 3460, 2764, -194, -1000, 111339, 45349, 111339, -195, -200,
	2324, -1000, -1000, 2311, 45349, -1000, 64694, 591, 2189, 2189,
	-202, -203, -1000, -1000, -1000, 45349, 1167, 111339, 32023, -1000,
	3615, 3279, -1000, -1000, -1000, -1000, -1000, -1000, 111339, -1000,
	45349, 1164, -1000, -1000, -1000, 3574, 2189, 23404, 2189, -1000,
	2189, 3308, 1130, 111339, 68487, 89174, -1000, 2412, 2412, 73458,
	55956, -1000, -66, 1004, -1000, 3429, 2666, 3613, -1000, -1000,
	-1000, -1000, 2544, -1000, -1000, 111339, 2542, 987, -1000, -205,
	-1000, 868, 865, 75616, 968, 939, -1000, -67, 590, -1000,
	862, -1000, -1000, -1000, -1000, 522, 3427, -1000, 3573, 589,
	587, 111339, 2282, 585, 23404, 3264, 859, 74542, -1000, 3101,
	1753, -1000, 2301, 111339, 3261, -1000, 2578, 584, -1000, 985,
	573, 565, 2891, 2891, -208, 53763, 53763, -210, 548, 985,
	-1000, -216, -1000, -1000, -1000, -1000, -1000, -69, -1000, 928,
	906, -1000, -1000, 89174, 89174, 45349, 45349, -1000, 564, 564,
	564, -1000, 350, -1000, -1000, 2206, 3327, -1000, -73, 118495,
	118466, 7144, 49339, 64694, -217, -1000, -1000, 111339, 122476, -84,
	-1000, 122476, 538, 537, 474, -1000, -1000, -1000, 516, -1000,
	-1000, 3611, -1000, 98878, 111339, -1000, -1000, -1000, -1000, 3419,
	111339, 98341, 111339, -1000, 1658, -1000, -1000, -1000, 111339, 2335,
	-1000, -1000, -1000, 1098, 45349, 6791, 536, 45349, -1000, 3417,
	-1000, 2663, 2861, 1821, 53763, -1000, 3276, -1000, 117897, -1000,
	1088, 1970, -1000, -1000, 122476, 3308, 53763, -1000, -1000, 535,
	531, 122476, 529, 861, 2862, -1000, -1000, -1000, -1000, 122476,
	528, 3388, -1000, -1000, -1000, -1000, 2189, 89174, -1000, -1000,
	-1000, -1000, -218, -1000, -1000, 1977, 53, 2116, 2719, -1000,
	2290, 527, -1000, -1000, 2268, 2593, -1000, 97804, 31453, 31453,
	346, 3416, 939, -1000, 3498, -1000, 3188, 3188, 45349, 3414,
	53, -1000, 3568, 53763, -1000, 89174, 53763, 2279, 2070, 2469,
	74542, -1000, 2506, -1000, -1000, -219, 111339, 1753, -1000, -1000,
	73458, 73458, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1088, -224, -225, -1000, 73458, -1000, -1000,
	2449, -1000, 111339, -1000, 111339, -1000, -1000, -226, -232, -1000,
	1949, 45349, 30883, -1000, -1000, 7144, -234, -1000, -97, -1000,
	3408, 47059, 3608, 3607, 3605, -1000, -1000, -1000, 1894, -1000,
	111339, -1000, -1000, 1855, -1000, -1000, -1000, 3041, 2741, 117859,
	2448, 111339, 117830, -1000, 2859, -1000, -1000, 2666, 525, -1000,
	-1000, -1000, -1000, 919, 111339, 2666, 2707, 89174, 1097, -237,
	2118, 2118, 45349, 30313, 2150, 45349, -1000, -1000, 3308, -1000,
	2820, 3524, -1000, 968, -1000, 2143, 111339, -1000, 3297, -1000,
	3218, -1000, -1000, -1000, 2667, 53, -1000, -1000, -1000, -242,
	122476, 53, -1000, 340, -243, 1095, -248, 89174, 1939, -1000,
	859, -1000, 2518, 1031, -1000, -1000, -249, -250, 1821, 1088,
	2103, -255, -1000, -256, -257, -1000, -1000, 335, 46489, 46489,
	46489, -114, -131, -1000, 111339, 523, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3015, 1003, -1000, 2270, 1832, 334, 1122,
	-1000, -1000, 2103, 111339, -1000, -1000, -1000, 1002, 522, -1000,
	45349, 1088, -262, -1000, 1073, -265, -1000, 1071, -268, -1000,
	2847, -1000, -275, 2189, 1000, 3370, -1000, -1000, -1000, 2268,
	89174, -283, -1000, -1000, 2354, -1000, 2666, 987, -1000, -1000,
	-1000, 1088, 521, 1821, 519, 1425, 859, -1000, -1000, 1403,
	3264, 3120, 985, 985, 2666, 1821, 983, -1000, 985, -1000,
	-1000, -1000, 3044, -1000, 50479, 2281, 1772, 120630, 3044, 3044,
	-1000, -1000, 111339, 3353, -1000, 2276, 2275, 1507, -1000, -1000,
	-1000, -1000, -1000, -1000, 2764, -290, 3352, 2448, 122476, 2666,
	-1000, 2118, 2712, -1000, 2118, 2822, -1000, 2142, -1000, -1000,
	-1000, 1701, 3507, 1979, 514, -1000, 111339, 1719, 1708, 3603,
	2116, 2268, 1821, 53763, 2666, 53763, -1000, -1000, 111339, -1000,
	2070, 1323, -1000, -1000, 2103, 2666, 1031, 512, -1000, -1000,
	1829, 3456, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	857, -1000, 3187, -1000, 1110, 2140, 2140, 1031, -1000, 856,
	2270, -1000, -1000, 501, -1000, 499, -1000, 2216, -1000, -1000,
	-1000, -1000, 111339, -1000, -1000, 3602, -1000, 968, -1000, 2666,
	-291, 2103, -292, -1000, -190, 1939, -1000, 1554, 983, 2103,
	-1000, 1763, -1000, -1000, 2193, 45919, 45349, -1000, 3481, -1000,
	-1000, 2534, -1000, -1000, 45349, 2764, 45349, 45349, 60370, -299,
	-1000, 2268, 2103, 1088, 983, 1821, 1425, 61993, 1031, 983,
	-1000, -1000, -1000, 122476, -1000, -1000, -1000, 122476, -1000, -300,
	-302, -239, 97262, 2145, 1979, 983, 1821, 1031, 2666, -1000,
	-270, -1000, 1031, 2103, 1153, -305, -1000, -1000, -1000, -1000,
	1031, 2666, -1000, 2103, -1000, -1000, -1000, -1000, 475, -1000,
	-1000, 2103, 983, 45349, 983, 1031, -307, 1031, -1000, 2103,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4393, 4392, 4391, 4389, 4386, 4384, 4383, 4381, 4380,
	4379, 4377, 4376, 4375, 4373, 4369, 4368, 4362, 4361, 4358,
	4356, 4355, 4354, 4352, 4351, 4350, 4347, 4346, 4345, 4344,
	4341, 4337, 4330, 4329, 4316, 4314, 4311, 4307, 4306, 4305,
	4304, 4303, 4302, 4300, 4299, 4296, 4290, 4287, 4285, 4284,
	4283, 4280, 4279, 4277, 4274, 4262, 4257, 4253, 4252, 4248,
	4247, 4246, 4245, 52, 4243, 4241, 4240, 4239, 4237, 4234,
	4232, 4230, 4226, 4225, 4219, 4216, 4214, 4213, 4212, 4211,
	4210, 4208, 4205, 4204, 62, 4198, 265, 4197, 4193, 4192,
	4190, 4189, 4187, 4186, 4184, 4183, 4180, 4179, 4178, 262,
	4175, 149, 4173, 4169, 4168, 4166, 4165, 258, 4164, 4161,
	4160, 4158, 270, 4157, 4154, 4152, 4151, 4150, 4149, 4141,
	4138, 4133, 4130, 4129, 95, 197, 4128, 4120, 1105, 4119,
	4118, 4117, 4114, 4113, 4109, 4104, 4103, 4102, 4101, 237,
	4100, 257, 4098, 4097, 4096, 4095, 4094, 4093, 4092, 4090,
	4089, 4084, 4083, 4082, 4080, 4078, 4076, 4075, 4074, 4073,
	4072, 4071, 4070, 4069, 4068, 4067, 4066, 4063, 4061, 4059,
	4056, 4055, 4054, 4053, 4052, 4051, 4050, 4049, 228, 269,
	179, 4048, 4047, 256, 254, 4046, 4045, 4044, 4043, 4042,
	117, 4, 45, 4037, 4030, 103, 86, 84, 104, 102,
	99, 4027, 110, 4026, 132, 60, 4024, 16, 3, 214,
	224, 10839, 222, 4023, 4022, 4020, 245, 180, 4016, 227,
	4014, 4013, 4011, 4010, 79, 47, 169, 167, 155, 163,
	33, 4008, 151, 105, 81, 53, 43, 12, 64, 201,
	19, 4007, 248, 8, 131, 1, 35, 4005, 4004, 4003,
	4002, 3494, 128, 4001, 253, 236, 161, 3999, 3996, 3994,
	659, 3993, 3990, 55, 3989, 118, 89, 120, 27, 116,
	3988, 141, 30, 3986, 165, 57, 3985, 156, 98, 88,
	10774, 7762, 3983, 108, 63, 195, 66, 159, 158, 185,
	172, 152, 153, 192, 200, 198, 168, 309, 3981, 235,
	3980, 3425, 69, 175, 3977, 3976, 3975, 82, 184, 100,
	3973, 3972, 77, 10, 22, 2, 6, 133, 24, 20,
	13, 3971, 26, 112, 46, 31, 3969, 25, 3968, 3967,
	3964, 3963, 3959, 39, 147, 3957, 264, 3956, 93, 59,
	56, 3951, 37, 206, 3949, 213, 122, 3948, 3946, 242,
	199, 173, 3945, 73, 231, 3944, 3943, 3942, 3941, 3937,
	125, 9, 124, 3935, 3934, 136, 3933, 49, 244, 183,
	3931, 65, 3930, 3928, 166, 109, 126, 268, 188, 211,
	121, 217, 174, 226, 3927, 3925, 3922, 186, 3920, 3919,
	210, 154, 3916, 3908, 194, 271, 90, 44, 85, 223,
	80, 182, 150, 3904, 191, 3901, 3899, 266, 171, 203,
	7, 14, 91, 119, 3894, 5, 221, 140, 216, 113,
	3893, 5651, 1683, 2412, 3891, 3889, 139, 114, 78, 138,
	146, 250, 94, 3887, 3886, 2743, 3885, 3882, 3877, 3876,
	176, 3874, 3871, 3870, 137, 135, 193, 3868, 96, 70,
	50, 21, 127, 240, 255, 111, 208, 164, 241, 3864,
	3863, 3862, 177, 3860, 74, 123, 157, 190, 239, 58,
	3858, 115, 3857, 148, 588, 71, 143, 3853, 212, 3851,
	3850, 3849, 3848, 3843, 3842, 3840, 230, 220, 3839, 3838,
	3836, 34, 181, 3835, 249, 142, 229, 106, 68, 3834,
	97, 4125, 3832, 204, 1067, 54, 251, 189, 252, 3831,
	4805, 51, 3830, 0, 12463, 6774, 9078, 11923, 3829, 2863,
	3827, 3826, 3823, 205, 134, 3821, 3820, 3817, 107, 3815,
	83, 3813, 3812, 76, 3811, 36, 17, 18, 32, 29,
	328, 323, 3809, 3808, 28, 129, 144, 3807, 263, 218,
	3806, 3805, 3804, 3803, 92, 3801, 42, 3799, 38, 3798,
	3797, 48, 15, 40, 3796, 3795, 209, 3794, 207, 246,
	3793, 160, 3792, 3412, 130, 3791, 3789, 3787, 67, 61,
	247, 87, 3785, 273, 3784, 3366, 3781, 3780, 23, 3779,
	3778, 225, 170, 202, 3775, 3774, 162, 3771, 3766, 3759,
	267, 3748, 3745, 3742, 41, 3741, 11, 3739, 3735, 196,
	3185, 3733, 3732, 72, 3730, 178,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 22, 42, 23, 43, 16, 581,
	581, 581, 581, 35, 24, 44, 28, 28, 28, 28,
	28, 193, 193, 193, 193, 21, 21, 38, 38, 227,
	227, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 576, 576, 229, 229, 228,
	223, 223, 582, 582, 230, 230, 230, 232, 232, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 475,
	475, 475, 508, 508, 507, 507, 507, 506, 506, 595,
	595, 596, 596, 596, 596, 596, 127, 127, 373, 373,
	373, 52, 52, 52, 52, 52, 571, 571, 195, 195,
	195, 197, 197, 196, 196, 196, 196, 75, 75, 587,
	587, 588, 588, 586, 589, 589, 589, 194, 194, 194,
	123, 123, 123, 123, 123, 123, 124, 124, 125, 125,
	198, 198, 198, 200, 200, 199, 199, 199, 199, 199,
	199, 199, 199, 204, 15, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 103, 103, 510, 510, 511, 511,
	189, 189, 190, 190, 190, 190, 191, 191, 192, 192,
	192, 66, 201, 201, 203, 203, 202, 202, 202, 202,
	202, 54, 54, 54, 54, 54, 54, 54, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 57,
	57, 57, 57, 57, 57, 64, 64, 64, 64, 64,
	180, 180, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 72, 72, 72, 72, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 598, 598,
	599, 599, 600, 600, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	81, 81, 335, 335, 300, 300, 82, 82, 82, 83,
	83, 84, 84, 68, 68, 569, 569, 350, 350, 466,
	466, 69, 577, 577, 577, 579, 579, 578, 578, 86,
	86, 372, 372, 87, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	96, 96, 96, 96, 96, 97, 97, 97, 94, 94,
	94, 91, 91, 91, 90, 90, 90, 95, 95, 95,
	568, 289, 289, 93, 93, 93, 92, 92, 92, 351,
	351, 98, 98, 98, 98, 301, 99, 99, 99, 99,
	99, 99, 99, 99, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 468, 468, 100,
	100, 100, 433, 433, 104, 104, 104, 388, 388, 105,
	105, 105, 105, 105, 106, 106, 106, 106, 106, 106,
	106, 126, 126, 126, 126, 126, 126, 126, 573, 573,
	343, 343, 254, 254, 254, 254, 116, 116, 116, 116,
	117, 117, 117, 118, 118, 185, 185, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 132, 132, 58, 58,
	58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 63, 63, 63, 135, 135, 592, 592, 137, 134,
	134, 134, 136, 136, 136, 136, 138, 139, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 500, 500, 359,
	359, 498, 498, 520, 520, 499, 499, 305, 305, 305,
	305, 305, 306, 306, 306, 509, 509, 509, 509, 509,
	509, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 186, 186,
	187, 188, 188, 188, 188, 188, 164, 164, 164, 179,
	179, 179, 179, 179, 179, 179, 167, 167, 167, 151,
	151, 142, 142, 142, 142, 142, 142, 142, 146, 146,
	146, 146, 146, 146, 146, 146, 143, 143, 153, 153,
	153, 153, 153, 147, 147, 148, 148, 148, 148, 174,
	174, 150, 150, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 144, 144, 144, 144, 155, 155, 155, 155,
	395, 395, 395, 178, 178, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 177, 177, 177, 177,
	177, 177, 590, 590, 591, 591, 171, 171, 171, 171,
	171, 171, 447, 447, 165, 165, 165, 165, 170, 170,
	170, 170, 173, 173, 173, 173, 378, 378, 162, 162,
	162, 163, 163, 163, 168, 168, 169, 166, 166, 172,
	172, 172, 172, 145, 145, 145, 145, 602, 602, 602,
	175, 175, 161, 161, 176, 176, 176, 176, 176, 176,
	176, 176, 603, 603, 157, 157, 157, 156, 156, 156,
	156, 159, 159, 160, 160, 160, 160, 160, 160, 158,
	149, 570, 570, 566, 566, 566, 566, 566, 566, 566,
	566, 567, 567, 567, 567, 572, 572, 109, 109, 109,
	109, 109, 119, 119, 119, 119, 119, 110, 110, 110,
	110, 110, 112, 112, 111, 111, 111, 111, 76, 76,
	76, 76, 76, 14, 14, 14, 77, 77, 245, 245,
	207, 207, 207, 324, 324, 208, 208, 313, 313, 313,
	313, 205, 205, 206, 206, 78, 78, 604, 604, 604,
	583, 583, 583, 584, 584, 584, 584, 584, 584, 307,
	307, 308, 308, 413, 413, 413, 413, 413, 311, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	314, 314, 231, 231, 231, 322, 323, 323, 315, 315,
	321, 320, 320, 319, 319, 318, 318, 316, 317, 317,
	317, 326, 326, 325, 328, 328, 327, 412, 529, 529,
	531, 531, 531, 531, 531, 531, 531, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 396,
	396, 605, 605, 527, 527, 527, 528, 523, 523, 524,
	524, 524, 524, 524, 309, 309, 310, 310, 310, 310,
	525, 526, 341, 341, 451, 530, 530, 532, 532, 534,
	606, 606, 606, 606, 606, 606, 607, 607, 607, 411,
	411, 410, 410, 333, 333, 535, 535, 535, 535, 536,
	536, 536, 536, 536, 539, 538, 537, 537, 537, 537,
	537, 80, 80, 80, 375, 375, 374, 374, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 182, 182, 257, 257, 74, 74, 74,
	12, 12, 12, 585, 585, 585, 79, 79, 79, 79,
	79, 79, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 575, 575, 574, 574, 258, 258, 609, 609,
	85, 85, 85, 85, 85, 85, 85, 85, 469, 469,
	470, 470, 73, 73, 73, 73, 73, 397, 397, 394,
	394, 393, 393, 340, 340, 449, 449, 449, 450, 262,
	262, 263, 263, 224, 224, 224, 30, 29, 20, 20,
	25, 25, 26, 26, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 27, 27, 46, 46, 46, 46, 47, 47,
	47, 47, 50, 50, 51, 51, 45, 45, 45, 45,
	48, 48, 41, 41, 593, 593, 594, 594, 115, 115,
	120, 120, 120, 120, 120, 121, 121, 121, 121, 122,
	122, 122, 122, 131, 131, 181, 181, 181, 181, 181,
	181, 181, 53, 53, 53, 53, 65, 65, 65, 65,
	129, 611, 611, 611, 130, 130, 130, 610, 610, 255,
	255, 407, 407, 408, 408, 612, 612, 409, 409, 409,
	409, 409, 248, 247, 249, 249, 250, 250, 71, 71,
	71, 240, 240, 239, 237, 237, 512, 512, 242, 242,
	242, 243, 243, 233, 233, 234, 234, 235, 235, 236,
	236, 246, 246, 613, 613, 107, 107, 107, 184, 184,
	299, 299, 299, 404, 404, 404, 334, 334, 269, 269,
	406, 406, 406, 406, 371, 371, 371, 183, 183, 348,
	348, 361, 361, 362, 362, 463, 463, 363, 113, 113,
	114, 114, 128, 128, 211, 211, 209, 209, 209, 209,
	209, 209, 209, 209, 216, 216, 217, 217, 218, 218,
	219, 220, 220, 220, 220, 352, 352, 221, 221, 221,
	210, 210, 210, 212, 212, 212, 212, 212, 212, 212,
	215, 215, 215, 215, 222, 222, 222, 214, 214, 546,
	546, 546, 548, 548, 550, 550, 549, 549, 545, 545,
	547, 547, 608, 608, 377, 377, 377, 331, 332, 329,
	329, 330, 330, 338, 338, 336, 337, 337, 339, 339,
	448, 448, 448, 225, 225, 225, 368, 368, 368, 368,
	369, 369, 400, 400, 398, 398, 398, 398, 399, 399,
	401, 401, 401, 402, 402, 403, 403, 365, 365, 366,
	366, 367, 367, 367, 367, 429, 429, 213, 213, 213,
	345, 345, 345, 346, 346, 419, 419, 419, 419, 419,
	419, 420, 420, 418, 418, 418, 418, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 453, 454, 454, 347,
	347, 455, 405, 405, 564, 564, 564, 565, 565, 446,
	446, 456, 456, 456, 456, 456, 456, 444, 444, 445,
	445, 464, 465, 465, 381, 381, 381, 381, 379, 379,
	382, 382, 382, 382, 382, 380, 380, 457, 457, 457,
	457, 370, 370, 458, 458, 458, 458, 459, 460, 460,
	461, 461, 414, 415, 415, 471, 471, 471, 471, 473,
	344, 344, 344, 344, 344, 522, 521, 521, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 488,
	488, 488, 488, 488, 488, 488, 474, 474, 474, 474,
	474, 478, 478, 478, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 479, 479, 484, 484, 485,
	485, 485, 480, 481, 486, 486, 486, 486, 614, 614,
	490, 490, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 476, 476, 476, 483, 483, 483, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	389, 389, 391, 391, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 423, 423, 423, 423, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	540, 540, 540, 540, 540, 540, 540, 540, 425, 425,
	543, 543, 544, 544, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 551, 551, 552, 552, 554, 554, 555,
	555, 556, 557, 557, 557, 558, 559, 559, 553, 553,
	560, 560, 560, 560, 561, 561, 562, 562, 562, 562,
	562, 563, 563, 563, 563, 563, 435, 435, 436, 436,
	442, 442, 442, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 259,
	259, 259, 259, 259, 357, 357, 355, 355, 355, 358,
	358, 356, 356, 354, 354, 353, 353, 432, 432, 430,
	430, 434, 434, 383, 383, 489, 489, 489, 489, 489,
	489, 489, 489, 384, 384, 384, 392, 385, 385, 386,
	386, 386, 386, 386, 426, 427, 387, 387, 387, 428,
	428, 437, 441, 441, 440, 439, 439, 438, 438, 416,
	416, 417, 417, 364, 364, 615, 615, 360, 360, 462,
	462, 462, 462, 303, 303, 349, 349, 302, 302, 294,
	294, 295, 295, 295, 295, 342, 342, 443, 443, 491,
	491, 492, 492, 493, 493, 494, 494, 495, 496, 497,
	431, 431, 279, 278, 266, 267, 277, 276, 275, 265,
	268, 272, 273, 274, 270, 271, 285, 284, 283, 238,
	241, 290, 291, 291, 293, 293, 292, 292, 281, 282,
	467, 264, 296, 296, 297, 297, 297, 298, 298, 298,
	298, 260, 260, 261, 261, 286, 286, 287, 288, 288,
	280, 280, 280, 251, 251, 251, 252, 252, 253, 253,
	505, 505, 502, 502, 502, 503, 503, 503, 504, 504,
	504, 504, 501, 501, 501, 501, 501, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 514, 514, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 516, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 6, 5,
	6, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 7, 5,
	2, 6, 4, 7, 7, 7, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 4, 3, 3,
	5, 3, 4, 3, 5, 3, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 4, 3, 1, 1, 1,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	3, 4, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 5, 2,
	4, 4, 6, 3, 5, 3, 5, 4, 4, 5,
	5, 7, 3, 3, 4, 4, 6, 3, 6, 7,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 584, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 33, 32, 101, 81, 155,
	129, 138, 201, 380, 422, 433, 394, 143, 414, 399,
	-136, -137, 450, -53, -65, -130, -129, 74, 130, 408,
	-4, -12, -15, 30, 47, -55, -56, -57, 63, -74,
	-70, -81, -75, -68, -69, -72, -597, 103, -547, -89,
	-92, -122, -601, 162, 219, -110, -111, 363, -117, -118,
	416, -120, -121, 418, 163, -60, -59, 157, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 455, -169,
	515, 50, 469, 83, 147, 426, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 415, -212, -210, 581, 530, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 550, 559, -215, -213, -214, -222, 442,
	538, 489, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 169, 228, 326,
	21, 23, 22, 24, 25, 26, 27, 28, 30, 31,
	42, 43, 45, 46, 47, 48, 49, 50, 54, 56,
	60, 61, 62, 63, 64, 65, 69, 74, 75, 80,
	81, 82, 83, 84, 85, 86, 92, 89, 90, 91,
	93, 95, 97, 98, 99, 100, 101, 102, 104, 105,
	106, 108, 109, 110, 118, 119, 120, 121, 122, 124,
	129, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 497, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	229, 230, 231, 235, 232, 241, 242, 246, 247, 248,
	250, 254, 255, 256, 257, 258, 259, 261, 263, 262,
	265, 268, 269, 272, 276, 277, 281, 282, 278, 283,
	284, 286, 287, 290, 288, 291, 292, 289, 293, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 294, 309, 307, 311, 312, 313, 324, 322, 317,
	318, 314, 319, 315, 316, 320, 321, 328, 329, 332,
	216, 334, 335, 338, 356, 342, 343, 344, 347, 348,
	351, 354, 355, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 367, 368, 370, 371, 372, 374, 375, 376,
	378, 380, 381, 383, 384, 386, 387, 388, 389, 390,
	391, 392, 394, 396, 395, 397, 399, 401, 402, 403,
	408, 414, 410, 411, 412, 413, 415, 416, 417, 418,
	420, 421, 422, 424, 425, 426, 427, 429, 431, 432,
	435, 436, 452, 453, 471, 433, 434, 437, 438, 439,
	440, 441, 445, 443, 444, 446, 447, 448, 450, 451,
	454, 455, 457, 458, 459, 460, 461, 462, 465, 467,
	468, 469, 488, 470, 472, 476, 477, 478, 479, 473,
	474, 487, 481, 482, 484, 485, 490, 491, 492, 493,
	494, 495, 496, 498, 500, 508, 509, 510, 512, 515,
	516, 517, 518, 506, 520, 521, 524, 525, 526, 529,
	527, 528, 530, 532, 535, 536, 537, 543, 542, 544,
	551, 552, 554, 555, 556, 37, 51, 52, 55, 57,
	59, 70, 71, 72, 76, 125, 126, 154, 165, 166,
	178, 190, 191, 203, 205, 213, 214, 215, 236, 237,
	239, 244, 266, 331, 333, 349, 353, 369, 373, 377,
	379, 393, 428, 463, 475, 480, 501, 502, 503, 504,
	511, 513, 538, 539, 540, 545, 553, -301, 2, -281,
	340, -274, 2, -251, -251, 380, 29, 2, 29, 368,
	444, 492, 494, 2, -573, -343, 2, 29, -254, -251,
	103, 201, 442, -274, 2, -573, -343, 25, 2, -251,
	2, 354, 22, 28, 67, 78, 99, 141, 164, 185,
	188, -600, 356, 387, 431, 446, 487, 498, 512, 2,
	542, 287, 443, 489, 228, 121, 517, 437, -585, 435,
	436, 354, 385, 424, 204, 531, -255, 2, 433, -251,
	287, 2, 584, 95, 277, 75, 428, 447, -139, 509,
	-138, 501, 437, -140, -500, 2, 309, -251, 584, 584,
	584, 29, -264, -251, 489, 228, 437, 121, 485, 584,
	2, 489, 359, 542, 443, 121, 390, 228, 517, 188,
	437, -585, 287, -571, 2, -566, 4, -517, -513, -295,
	-294, 489, 495, 121, -288, -280, 574, -287, 584, 584,
	584, 2, 247, 248, 389, 388, 447, 448, 584, 584,
	584, 584, 435, 2, 164, 22, 28, 67, 94, 99,
	127, 185, 188, 345, -598, 356, 387, 446, 487, 491,
	498, 512, -584, 470, 69, 413, 437, -583, -585, 287,
	517, 141, -393, 121, 277, 199, 525, 494, 492, 523,
	133, 235, 528, 527, 584, 584, -101, 2, 581, 33,
	32, 143, 450, -204, 489, 240, 2, -251, 584, 584,
	2, 247, 248, 435, 436, 584, 584, 186, -566, 2,
	584, 584, 2, 247, 248, 435, 436, 240, 2, 69,
	439, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 2, -179, 447, 470, 210, 48,
	47, 75, 29, 386, 80, 361, 122, 149, 518, 202,
	228, 229, 255, 94, 95, -395, 45, 248, 247, 436,
	-590, 435, -447, 490, 438, 444, 484, 259, 433, 509,
	103, 532, 425, 556, 390, 391, 482, 403, 278, 158,
	4, 121, 309, 449, 501, 277, 432, 364, 85, -608,
	2, 489, -610, 2, 509, 509, 2, -610, 2, -610,
	2, -610, 2, -611, 509, 553, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, -210, -212, -211, 584, 584, 584, 584,
	584, 584, 584, -179, 447, 2, 75, 29, -336, -338,
	522, 238, 151, 346, -209, -211, 2, -546, -498, 2,
	-421, -520, -423, 572, 573, 565, 486, 68, 325, 557,
	-435, 127, 523, 340, -519, -424, -437, 154, 428, -358,
	8, 9, 5, 6, 7, -260, -425, -431, 514, 168,
	330, -298, 585, 10, 581, -543, -211, -436, 38, 205,
	66, -502, -297, -261, -474, 239, -296, -280, -540, -541,
	4, -513, -514, -503, -477, -485, -481, -482, -488, -251,
	-516, 78, 112, 113, 111, 116, 115, 280, 279, 117,
	114, 449, 531, 67, 37, 213, 214, 244, 331, 215,
	76, -542, 142, -515, 236, 237, 463, 52, 393, 178,
	126, 125, 333, 57, 55, 539, -486, 123, 501, 502,
	503, 504, 190, 191, 59, 165, 166, 353, 377, 480,
	511, 513, 203, 266, 44, 107, 187, 234, 217, 243,
	245, 249, 267, 270, 310, 323, 327, 350, 352, 423,
	456, -614, 540, 475, 70, 71, -548, 395, -549, -274,
	-548, 584, 584, 586, 584, -329, -331, -332, 2, 29,
	139, 581, 2, -452, 2, -453, -457, -211, 260, -456,
	581, -454, 579, -281, 341, -544, 429, -540, -541, -260,
	-280, -297, 4, -513, -515, 583, -333, 581, 121, 489,
	79, 228, 164, -388, 581, -251, 29, 340, 505, 586,
	-330, 384, -433, 581, 340, 186, 343, 61, 291, 2,
	2, 2, 2, 2, 213, -251, 489, 120, 2, 258,
	2, 2, 2, 2, 2, 2, 2, -351, 213, 2,
	-281, 542, -351, 213, 2, -351, 213, 2, -394, 2,
	88, -265, 213, 2, -251, -289, 213, 2, -284, -286,
	-293, 213, 2, -291, -251, -511, 213, 2, -510, -505,
	10, -504, 5, 4, -513, -517, -514, -516, 78, -421,
	2, -128, 2, 61, -251, 542, 2, 2, 452, 2,
	581, -139, 72, 509, 44, 447, -408, 2, -409, -247,
	-248, -249, -464, -250, 246, 383, 392, 560, 131, 325,
	556, -498, -592, 186, 564, 505, -498, -359, 583, 2,
	2, 2, 2, 2, 2, -457, 213, -281, 2, -278,
	-501, 4, -513, -517, -514, -518, 29, 32, 33, 34,
	36, 38, 39, 40, 41, 58, 66, 67, 73, 77,
	79, 88, 94, 103, 111, 112, 114, 113, 115, 116,
	117, 127, 131, 135, 139, 140, 144, 147, 151, 168,
	170, 183, 185, 186, 201, 204, 207, 220, 233, 238,
	240, 260, 264, 271, 279, 280, 325, 330, 336, 340,
	341, 345, 346, 366, 382, 398, 419, 442, 449, 466,
	483, 489, 499, 505, 507, 514, 522, 523, 531, 533,
	541, 546, 547, 548, 549, 550, -519, 2, -457, 213,
	2, -283, 213, -457, -286, 2, -265, 2, -277, -501,
	2, -302, 213, -281, -282, -286, -284, 2, 2, -291,
	2, -510, 213, 2, 542, 240, 505, 586, -349, -294,
	-295, -497, 8, -342, -251, 583, -421, 2, -128, -112,
	2, 183, -421, 213, 2, -128, 213, 2, -421, 213,
	2, -128, 213, 2, -587, 2, -510, 213, -251, 2,
	291, 2, 2, 512, 2, 99, 489, 120, 2, 412,
	-599, 431, 516, 2, 2, 2, 2, 2, 2, 2,
	489, -270, 2, -251, 183, 473, -291, 213, -292, 2,
	443, -609, 395, -510, 213, 2, 542, -284, 213, 2,
	-284, 228, 242, -265, 213, 2, 494, 492, 494, 492,
	186, 2, 240, 2, 240, 2, -458, 2, -459, -453,
	-460, 579, 341, -468, 2, -467, -504, 538, -101, 581,
	-101, 581, 447, 581, -510, -281, -281, -421, 2, -128,
	-112, 2, -421, 2, -128, 2, -125, -510, -124, 581,
	186, -421, 2, -128, -112, 2, -421, 2, -128, 2,
	-204, 183, 2, 121, 489, -179, 2, 183, 533, 2,
	8, 2, 220, -510, 438, 391, 175, 2, 452, 2,
	453, 75, -395, 556, 75, 186, 2, 186, 2, -378,
	2, 550, 186, 2, 2, -570, 2, 340, 186, 2,
	186, 2, 186, 2, 186, 2, 186, 2, -178, 448,
	510, 488, 388, 248, 2, -128, 547, -112, -421, 547,
	2, -591, 183, 436, -421, 2, 508, 257, 159, 186,
	-378, 2, 186, 2, 186, 2, 5, 2, 389, 471,
	2, 246, 383, 471, 2, -281, -602, 29, 2, 489,
	542, 443, 2, 2, 89, 90, 186, 2, 186, 2,
	200, 186, 2, 186, 556, 2, -370, -457, -407, -408,
	-407, 505, -336, -338, -179, 452, 2, -216, -368, -218,
	183, -398, -399, -219, 271, 170, 336, -220, -377, 29,
	139, -377, -377, 61, 582, 582, 11, 12, 77, 42,
	572, 573, 574, 575, 181, 576, 577, 570, 571, 569,
	562, 563, 567, 252, 253, 96, 566, 564, 87, 285,
	430, 171, 172, 173, 174, 409, 226, 35, 227, 14,
	15, 16, 34, 345, 270, 557, 217, 456, 565, 17,
	18, 19, 243, 245, 327, 51, 220, -259, -304, -421,
	-421, -421, -421, -421, -421, -421, 352, 581, -364, -416,
	579, -211, 581, 581, 581, -497, -211, -421, -435, 582,
	-356, 581, -211, -435, -430, 581, 428, 579, 581, -438,
	-421, 5, 5, 5, 581, 583, -551, 551, 183, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 379, -479, 581, -478, 581, -478,
	-478, 543, -476, 581, 559, 552, 581, -476, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 543, 586, -548, -333, 581, -360, -462, -421, 574,
	-360, -360, 340, -353, -421, 107, -381, 249, 310, 187,
	267, 423, 234, -418, 585, -418, -446, 559, -211, -454,
	-280, -211, -456, 581, -452, -446, -102, -497, -86, -99,
	-107, -128, -141, -183, -184, 574, -281, 581, 186, 581,
	583, -501, 186, -342, -265, -281, -296, -297, -302, 2,
	138, -353, -566, 517, 437, 443, -342, -254, 39, -432,
	-471, -472, -522, 585, -521, -474, -484, -480, -483, 369,
	373, -503, 55, 539, -486, 239, 4, -513, -515, 236,
	237, 463, 52, 393, 178, 126, 125, 333, 57, 501,
	502, 503, 504, 190, 191, 59, 540, 475, 70, 71,
	-566, 517, 437, 443, -342, 183, -508, 2, -507, -506,
	117, 449, -504, 5, 2, 154, 2, 2, 2, -251,
	-230, 586, 65, 417, 154, -351, 213, -230, 154, -230,
	154, -303, 213, -302, -230, 154, -230, 586, 154, -230,
	586, 154, 583, 586, 154, -508, 2, -394, -500, -353,
	39, -408, 2, 127, -506, -612, 586, 269, -306, 284,
	324, 209, 341, 554, 334, 131, -509, 5, 4, -431,
	-443, 127, 277, 239, -491, -493, 8, -492, 9, -494,
	572, 573, -499, -498, 110, 583, -501, -227, 410, 450,
	355, -226, 24, 30, 143, 230, 313, 536, 160, -319,
	231, -316, 359, 154, 467, 526, -580, -581, 434, 496,
	497, 91, 334, 450, 355, 410, 154, -374, -376, 39,
	119, 313, 354, 62, 223, 289, 290, 469, 545, 154,
	450, 355, 410, 355, 24, 143, -242, -239, 450, -581,
	100, 410, 481, 382, -581, -229, 467, 526, -580, -581,
	434, 410, -228, -321, -316, 359, 154, 585, 24, 143,
	410, 450, 355, -595, -596, 30, 410, 355, -574, -545,
	550, 154, -457, 213, -588, -124, 261, 5, 10, -510,
	-124, -349, 586, 586, -501, 574, 436, 435, 154, 154,
	154, 154, 183, 325, 2, 2, 2, 2, 2, 188,
	-583, -600, 2, 2, -281, 213, -335, 340, -569, -350,
	489, -281, 183, 325, 44, -283, 213, 2, -286, 542,
	-574, 325, -285, 213, -281, 39, 581, 325, 2, -394,
	2, 228, -545, 325, -458, -299, -281, -453, -299, 450,
	-274, 39, -418, -281, 582, 586, -468, -468, -510, -192,
	550, 186, 103, 581, 581, -204, -465, 586, -464, 220,
	-511, -125, -510, 413, -510, -569, -265, 2, -281, 2,
	489, 250, -510, -192, 220, -510, -510, -510, -500, 29,
	453, 2, -178, 448, 510, 90, 453, 2, -281, 489,
	121, 228, 81, -251, -572, 183, -567, 424, 437, 517,
	-566, -281, 121, -281, 121, -281, 121, -281, -281, 2,
	2, 2, 2, 2, 86, 86, 2, 47, -591, 183,
	2, 508, 2, 508, 2, -251, -251, -251, 470, 269,
	-281, 490, -603, 186, 183, 489, 228, 489, 228, 121,
	186, 75, 121, 29, 489, -230, 586, -255, -216, -368,
	-500, -369, -368, -217, -216, -219, 183, 392, 527, 313,
	454, 254, -399, -398, 29, -421, -403, 177, 312, -421,
	-401, -423, 572, 573, -492, -494, -352, 334, -210, -210,
	-210, -339, -448, -421, 382, 228, -473, -471, -471, -279,
	-501, 501, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, 270, 217, 456,
	51, 220, -421, 505, -421, -421, -421, -421, 307, 325,
	330, 514, 168, 524, 139, 334, -615, 483, 41, -428,
	-211, -357, 581, -442, 36, 466, 29, -435, 581, 2,
	-416, -421, -417, -354, -353, -353, 582, 541, 29, 139,
	574, 2, 582, 586, 39, 582, -421, -354, -434, -430,
	-353, -441, -440, 547, -389, -390, 555, 294, 124, 211,
	292, -391, 441, -495, 8, -501, 574, -552, 176, 204,
	581, 582, 2, 582, 2, 582, -421, 2, 582, -421,
	2, 582, -421, 2, 582, -421, 2, 582, 2, -421,
	-421, -421, -421, -421, -421, -421, -353, 8, -495, -495,
	501, 501, -495, -495, -495, -487, 369, 370, 371, 372,
	272, 273, 274, 275, 373, 374, 375, 376, 299, 300,
	301, 302, 295, 296, 297, 298, 303, 304, 305, 306,
	195, 196, 197, 198, 191, 192, 193, 194, -487, -383,
	2, -489, -353, 4, 555, 294, 124, 211, 292, 441,
	5, -383, 2, -384, 2, -421, -353, -385, -422, -423,
	572, 573, 565, -435, -386, 2, -421, -354, -421, 58,
	264, 507, -387, -421, 186, -353, -353, 2, -353, 2,
	-549, 39, -353, -345, 586, 186, 39, 4, -345, -345,
	581, 582, 586, -382, 208, 288, 283, 242, -382, -452,
	-381, 249, -379, 350, -379, -379, -446, -266, 579, 587,
	-501, -446, -445, -444, 39, -274, 347, -446, -446, 583,
	582, -445, 580, -564, 581, 584, 584, 584, 584, 584,
	-281, 581, -353, -501, 583, 472, 582, 243, 243, 243,
	243, 429, 582, 505, -568, -289, -293, 2, 550, -101,
	342, 582, 586, -344, 38, 579, 583, -495, 2, 2,
	-490, 543, 581, 581, -390, 581, 186, -568, -293, 2,
	-343, 586, 505, -251, 2, -281, -351, -230, 154, -351,
	-351, -230, 586, 154, -265, -284, -289, -291, -293, -251,
	-510, -511, -230, -285, -592, 582, 509, -409, -305, 392,
	465, 411, 445, 485, 8, 9, 8, 9, 586, -501,
	586, -593, 94, 505, 79, 437, -244, 278, 402, 313,
	489, 428, 505, -412, 213, 79, -523, -268, 94, -524,
	-251, 73, 523, 382, 185, 152, -593, 94, 382, -593,
	94, 2, 230, 94, 450, 470, 29, 61, -457, 42,
	42, 29, -128, 265, 186, 556, 489, 228, 437, 505,
	505, -457, -376, -471, 119, 289, 290, 61, -496, -491,
	572, 573, -496, 61, -496, -496, -496, 550, -283, -457,
	437, 505, 505, 505, 401, 401, -239, 505, 505, -613,
	564, 401, 586, 42, 42, 29, -128, 265, 186, 505,
	-302, -266, 537, 43, 537, 43, 537, 505, 43, 437,
	505, 586, 43, 505, 505, -575, -256, 106, 319, 282,
	320, 98, 316, 97, 315, 104, 317, 105, 318, 544,
	328, 64, 314, 293, 321, -257, -258, 362, 535, -510,
	450, 355, 410, 154, 220, -465, 220, -465, -294, -251,
	583, -128, -421, -421, -128, -421, -128, 47, 154, 2,
	-609, 258, 581, -309, 325, 186, -342, -466, 240, 586,
	-350, -566, 154, -507, -375, -374, 325, -285, 213, 2,
	154, -333, 325, 148, 581, 390, 2, 154, -267, 213,
	-252, -251, -394, -233, 493, 154, -372, 533, -404, -128,
	581, 127, 39, -404, -361, -362, -463, -363, -268, 581,
	-274, -418, -101, -467, 582, 582, 582, -191, 344, -190,
	-251, 5, -204, 533, -308, -413, -412, -527, -528, -523,
	270, 228, 523, 242, 169, -334, -269, -268, 120, -198,
	550, -124, -125, 582, -465, 220, 473, -192, -192, -465,
	-465, -281, 183, -510, -192, -192, -192, 2, 2, 2,
	-378, -281, -265, -302, -281, 583, -342, -342, -293, -289,
	-378, -265, -378, -265, -378, -265, -128, -421, 2, 447,
	183, 183, 583, -378, 390, 121, 489, 359, 228, -281,
	-302, -281, -302, -265, 121, -265, 122, -281, -457, -369,
	-217, 341, 254, 454, -401, -402, -423, 428, 429, -402,
	428, 429, 8, 9, 8, 9, -221, 458, 329, -351,
	586, -224, 40, 135, 254, -281, 556, 150, -421, -421,
	505, -615, 483, -428, 150, -421, 307, 330, 514, 168,
	524, 139, 334, 186, 581, -422, -422, 582, -355, -421,
	-421, 580, 589, 582, -338, 586, -336, -421, -353, -353,
	582, 583, -353, -342, 580, 580, 586, 582, -439, -440,
	144, -421, 505, 505, 505, 505, 581, 582, 583, -557,
	351, 581, 581, -421, 582, 582, 582, 582, 39, 586,
	586, 586, 582, 586, 586, 586, 582, 582, 582, 586,
	582, 556, 556, 582, 582, 582, 582, 586, 582, 586,
	582, 186, 582, 582, -392, 366, 582, 11, 12, 572,
	573, 574, 575, 181, 576, 577, 570, 571, 569, 562,
	563, 564, 87, 285, 430, 14, 15, 16, 243, 220,
	-422, -422, -422, 582, -426, -427, 186, 183, 39, -387,
	-387, -387, 582, 186, -353, 582, 582, 581, -550, 287,
	325, 582, -415, -414, 548, -462, -346, 2, -452, -276,
	-501, -415, -415, -353, -421, 249, 249, -380, 533, 340,
	-382, -452, -445, -497, -420, -419, 184, 40, 135, 322,
	216, -445, -274, -333, -445, -445, -501, -446, -446, -444,
	582, -565, -497, 582, -347, -455, -544, -338, 583, -501,
	-201, -545, -180, 5, 330, -180, -180, -180, -342, 505,
	505, 25, 367, -471, 579, 580, 8, -501, 581, -495,
	-495, -495, -342, 186, 186, 186, -507, -507, 2, -230,
	-351, -230, -230, -302, -303, -230, -230, -230, -373, 550,
	-498, -408, 521, 84, 392, 501, -498, -226, 410, -268,
	-268, -281, -290, -251, 199, 402, 360, 26, 402, 269,
	269, -507, 325, -412, 213, -232, 325, -471, -275, -251,
	581, -396, 552, 254, 254, 533, -268, -275, 254, 213,
	-268, 213, -275, 2, -275, -576, 392, 335, -421, 61,
	-317, 276, 390, 326, -227, 410, 450, 355, -128, -128,
	-128, 581, -592, 533, 138, -281, -302, -281, -290, -507,
	-285, 450, 355, 410, 323, -296, -496, -496, -374, 450,
	355, 410, -290, -507, -283, -507, -238, -251, -238, 437,
	-265, 401, 556, 46, -613, -228, -128, -128, -128, 581,
	-266, -229, 410, 5, 213, -268, 5, -268, 213, 5,
	-251, -268, -290, -507, -596, 24, 143, -268, -290, -507,
	-256, -510, 330, 529, -574, 437, 505, 505, -457, -124,
	-195, 550, -124, -189, 224, 574, -571, -251, 542, -251,
	-307, -310, -308, -268, -207, -208, 552, 550, 154, -300,
	-281, 579, -192, -510, -281, -466, -291, -292, 154, -333,
	325, -510, 39, 154, 581, 2, 2, -284, 340, 325,
	-267, 213, -234, 145, -613, -265, -415, -346, -371, -406,
	419, 340, -334, 538, -274, -371, -348, 586, 186, 564,
	583, -334, -461, 574, -101, -101, -192, 586, 581, 564,
	564, 581, -510, -510, 582, 586, -232, -281, -267, 228,
	228, -273, -252, 582, 586, 583, 581, -200, 344, -199,
	146, 256, 241, 459, 460, 461, 462, 137, -465, -198,
	-125, 186, 186, -61, 550, 489, -192, 585, -251, -378,
	-378, -378, 447, 447, -251, -277, -265, -281, -278, -302,
	183, 183, -265, 527, -402, 341, 281, -448, -225, 558,
	-281, 585, -421, -421, 150, 150, -421, -422, -422, -421,
	150, 186, 581, -421, -432, 34, 34, 582, 586, -417,
	-421, 582, 541, -338, -338, 582, 574, -501, 585, 582,
	-430, 147, -421, 499, 294, 211, 292, -391, 292, -391,
	-391, -495, 5, -501, 574, -558, -271, 581, -251, 548,
	-337, 346, 582, -473, -471, -421, -421, -421, -421, -421,
	-495, -476, -476, -491, -491, -421, -426, -421, -473, -471,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, 139,
	325, 334, -422, -427, -426, -421, -421, -471, 582, 582,
	582, -353, -101, 581, 287, -365, 204, -421, -465, 586,
	-365, -365, 582, -452, -452, 581, -421, 249, 580, 586,
	588, 564, -333, 583, -444, -445, 580, 582, 586, 582,
	586, -405, 39, 582, -501, -415, -203, -202, 136, 54,
	108, 134, 330, -342, -342, 343, 5, 8, 579, 580,
	583, -495, 582, 582, 582, -342, -342, -342, -230, -230,
	120, 313, -421, 505, 505, 61, 220, 360, 402, 505,
	42, 323, -238, 382, 428, 26, 402, 402, 154, 325,
	535, -529, -524, 152, -421, 581, 228, 581, 581, 2,
	-223, 143, 450, -594, 2, 533, 154, -230, 154, -230,
	554, -317, 581, 581, 505, 437, -244, 505, 550, -353,
	-421, -193, 127, -500, -581, 585, -581, 585, 437, 505,
	505, 437, 505, 505, 550, 167, 167, 556, -238, 550,
	-353, 505, -475, 49, 27, 325, -284, -230, 154, 505,
	505, 517, 450, -510, 330, -290, -507, -285, 450, 355,
	410, -465, -197, 344, -196, 146, 421, 137, 256, -465,
	-195, 186, 240, 550, -285, 2, 582, 582, 586, -530,
	39, 338, 338, 581, -281, -82, 550, -464, -497, -577,
	550, 44, -283, 39, 154, -574, -128, -285, -469, -470,
	5, 39, -281, 154, 340, 325, -235, 263, -613, -505,
	-545, -338, -371, -360, 326, 92, 582, -415, -362, -346,
	-421, 2, 582, -190, -191, -510, -510, -510, -192, -204,
	-204, -413, -311, 581, -267, -252, 581, -204, -269, 2,
	-511, 586, 581, 564, 564, 564, -198, -465, -124, -128,
	344, -281, 574, -378, -323, -322, 359, 334, -323, 428,
	428, 341, 177, 259, -224, -266, -421, -421, 150, 34,
	34, -421, -421, -432, 582, -421, -421, -353, 580, 5,
	-421, 582, 582, 8, -421, 582, 583, -559, -251, -421,
	582, 61, 582, 582, 586, 586, 582, 582, 582, 582,
	582, 582, 582, -427, 186, 139, 334, 581, 582, 582,
	-101, -429, 207, 61, -452, -429, -429, -380, -342, -452,
	-419, -266, 579, -501, -497, -455, 581, 583, -202, 564,
	-510, -510, 580, 2, 579, -501, 582, 120, -268, -268,
	489, 428, -238, 382, 39, 39, 323, -238, 382, 428,
	401, 269, 26, 26, -412, 154, -531, 94, -533, 77,
	169, 103, 325, 330, 523, 382, 73, 127, 398, -605,
	39, 561, 582, -340, -449, -544, 581, -251, -340, -342,
	325, 478, 127, 325, 127, 120, 517, 80, -268, -275,
	-342, -342, -281, -290, -507, 161, 582, 586, 564, 2,
	574, 574, -290, -507, -285, -290, -507, -283, 357, 167,
	161, 582, -266, 5, 5, 154, -263, 77, -268, 5,
	-268, -284, 120, 437, 505, 505, -195, 586, 581, 564,
	564, -195, -511, -124, 2, -333, -324, 230, -268, -528,
	-525, -526, 382, -532, -534, 169, 382, -128, 2, -206,
	-205, -251, 5, 581, -309, 344, 580, -579, 344, -578,
	118, 137, -507, -375, -128, -285, -333, 582, 586, 148,
	-397, 533, -266, -281, 154, -236, 262, -613, -505, -233,
	-400, -398, 140, 581, 340, -128, -338, 564, 582, 582,
	120, 120, 222, 153, -340, 581, 581, -342, 120, 582,
	-199, -200, -510, -124, -510, -198, -465, -62, -63, 228,
	94, 365, -278, 489, 228, 581, 581, -224, -421, -421,
	-421, 582, -338, -501, 574, -553, 359, 582, -448, -421,
	-421, -422, 186, 581, -432, 582, -554, 549, -421, -366,
	-367, -421, 427, 109, 205, -554, -554, 582, -497, 2,
	-510, 579, 2, 220, 39, 401, -251, -251, 401, 269,
	39, 505, 39, -412, -275, -279, -272, -251, 169, 213,
	330, 546, -396, 254, 581, -422, -281, 581, 2, 31,
	-606, 131, 233, 582, 586, -450, -262, -251, -421, -450,
	582, 582, 330, 330, -421, -471, 581, -230, -230, 582,
	582, -421, 505, -500, 101, -498, 2, -581, -265, -421,
	505, 5, -230, -279, -230, -230, -263, 517, -290, -507,
	-285, -196, -197, -510, -124, -195, 39, -314, 232, 2,
	-530, 254, -272, 254, -604, 550, 582, 586, 564, 564,
	-307, -207, -83, -84, 506, -464, 586, 581, 564, -333,
	39, 5, 581, 581, -251, 340, 581, -266, -246, 93,
	-613, -505, -234, -371, 326, -342, 94, -400, -428, -192,
	581, 581, -312, 82, 95, 128, 212, 189, 229, 470,
	476, 29, -312, 582, -340, -340, 582, 581, -192, 582,
	586, 29, 581, 29, 581, -281, -302, -353, -353, 582,
	-338, 61, 586, 582, 582, -422, -432, 582, -555, -556,
	-271, 586, 581, 581, 451, 580, 2, -238, 382, -251,
	39, -251, -238, 382, -251, -533, -272, 325, 533, -421,
	-253, 581, -421, 39, 233, 132, 218, -411, -607, 102,
	479, 221, -449, -224, 582, -410, 533, 398, -263, -340,
	581, 581, 581, 564, 186, 581, -475, -230, -284, 582,
	-586, 396, -128, -318, -319, 220, 581, -313, 340, 120,
	313, -205, -498, -498, 582, 39, -84, 9, -578, -579,
	-421, 39, -128, -469, -340, -281, -340, 340, -240, -239,
	271, -505, -235, 582, -275, -371, -511, -511, -410, 582,
	582, -511, -63, -342, -342, 582, 582, -560, 390, 429,
	206, -353, -339, 582, 586, 39, -367, 2, 2, 2,
	401, -251, 401, 154, 208, 582, -535, 286, -251, 582,
	132, 218, -314, 581, -225, -450, -314, 208, -281, -582,
	533, 582, -326, -325, -322, -328, -327, -322, -353, -498,
	101, 357, -353, -263, -589, 187, -588, 5, 10, -207,
	357, -341, -451, -268, 83, 120, -324, -128, 582, -128,
	582, 582, -397, 582, -281, -237, -512, 401, 403, -613,
	-236, -415, 582, 582, -411, -410, -320, -316, 582, 582,
	582, 582, -561, -562, 51, 520, 110, -421, -561, -561,
	-556, -558, 169, 550, -536, -539, -538, 340, 457, 187,
	358, 582, 478, 545, -320, -342, 550, -333, -421, -410,
	582, 586, 538, 582, 586, 538, 582, 186, 582, -230,
	-194, 550, 47, -313, -281, 582, 586, 381, 133, 143,
	-314, -604, -410, 581, -411, 581, -243, -242, -613, -491,
	-246, 140, -192, -192, -314, -411, -208, 550, -192, -563,
	152, -562, 378, 182, 428, 378, 182, -563, -563, -272,
	56, -538, 340, -539, 340, 527, 133, -606, 582, 56,
	-535, -314, -325, 220, -327, 186, 357, 435, -588, 31,
	-245, -244, 581, -451, 429, 429, 2, -318, -313, -411,
	-340, -314, -340, -241, -342, -240, 326, 527, -320, -314,
	-415, 110, 204, 500, 313, 34, 564, -537, 313, 417,
	65, 450, -537, -415, 564, -536, 581, 581, 344, -342,
	2, -207, -314, 582, -320, 582, -237, 450, -208, -320,
	428, 348, -562, -421, 23, 330, 127, -421, -606, -353,
	-353, -191, 581, 582, -313, -320, -410, -208, -411, -243,
	-361, -415, -208, 582, 582, -191, -231, 65, 417, -245,
	-208, -411, -415, -314, -415, -415, -315, -316, 505, 582,
	-415, -314, -320, 581, -320, -208, -353, -208, -415, 582,
	-415, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 524, 525, 527, 528, 529, 531,
	532, 534, 536, 538, 539, 540, 542, 543, 545, 546,
	547, 548, 549, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	617, 619, 0, 1325, 1327, 1329, 1331, 0, 760, 0,
	36, 37, 39, 0, -2, 311, 313, 315, 0, 342,
	344, 345, 347, 349, 350, 351, 353, -2, 0, 459,
	460, 462, 464, -2, 0, 947, 949, 0, 606, 608,
	0, 952, 954, 0, 0, 628, 629, 0, 1432, -2,
	622, 624, 626, 691, 693, 695, 697, 699, 701, 703,
	705, 707, 708, 710, 712, 714, 716, 718, 719, 721,
	723, 725, 726, 728, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 755, -2, 757,
	-2, -2, 0, -2, -2, -2, 1343, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 403, 405, 407, 409,
	411, 414, 416, 418, 1490, 466, 468, 470, 472, 474,
	476, 478, 0, -2, 1504, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1463, 1465, 1467, 1469, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 526, 530, 533, 535, 537, 541,
	544, 550, 552, 554, 511, 512, 515, 2168, 2185, 2186,
	2187, 2190, 2191, 2192, 2193, 2194, 2195, 2634, 2716, 2717,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 513, 514, 1124,
	0, 578, 576, 2153, 579, 2438, 581, 583, 453, 454,
	455, 456, 457, 458, 0, 599, 590, 1502, 600, 602,
	603, 604, 605, 573, 571, 0, 599, 2221, 597, 1323,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 382, 1173, 1174, 1175, 1308, 1309, 2482, 1350,
	0, 217, 618, -2, -2, -2, 2599, -2, 650, -2,
	657, 2603, 2484, 662, 0, 664, -2, 667, 1326, 1328,
	1330, 758, 759, 2171, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 227, -2, -2, -2, -2,
	0, 0, 2528, 2274, 2121, 2187, 2124, 2119, 312, 314,
	316, 317, 0, 0, 0, 0, 0, 0, 343, 346,
	348, 352, -2, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1008, 1000, 1001, 1231,
	0, 0, 0, -2, 461, 463, 516, 517, 0, 1491,
	1491, -2, 0, 0, 0, 0, 283, 273, 948, 950,
	951, 0, 0, 0, 0, 607, 609, 0, 0, 255,
	953, 955, 956, 0, 0, 0, 0, 0, 285, 0,
	0, 623, 625, 627, 692, 694, 696, 698, 700, 702,
	704, 706, 709, 711, 713, 715, 717, 720, 722, 724,
	727, 730, 732, 734, 736, 738, 740, 742, 744, 746,
	748, 750, 752, 754, 756, 766, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 854,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 929, 0,
	769, 771, 772, 773, 0, 832, 852, 853, 862, 0,
	1164, 1492, 1352, 1333, 1347, 1352, 1335, 1336, 1337, 1338,
	1339, 1344, 1346, 1340, 1341, 1342, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 404, 406, 408, 410, 412,
	415, 417, 419, -2, 1461, 1462, 467, 469, 471, 473,
	475, 477, 479, 610, 0, 612, 0, 770, -2, 0,
	1496, 1496, 1496, 0, 0, 1462, 1460, 0, 615, 616,
	671, 672, 1764, 0, 0, 0, 0, 0, 0, 0,
	2018, 1850, 0, 673, -2, 1881, 1883, 2574, 2599, 2017,
	1885, 1886, 1887, 1888, 1889, 0, 1891, 1892, 1893, 1894,
	1895, 1896, 0, 1898, 0, 1903, 1904, 1905, 0, 2581,
	2098, 2181, -2, 0, 0, 2587, 2177, 0, 1984, 1921,
	-2, -2, 2204, 2183, 1696, 1697, 1698, 1699, 1700, -2,
	-2, 2617, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 0, 2562, 2582, 2583, 2588, 2590, 2584,
	2571, 1946, 2287, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1723, 1732, -2, -2,
	-2, -2, -2, -2, -2, 2575, 2576, 2593, 2596, 2602,
	2607, 2608, 2580, 2589, 2616, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 1724, -2, -2, -2, -2, 1479, 2451, 1482, 1124,
	1480, 1464, 1466, 0, 1468, 0, 0, 0, 1473, 1499,
	1497, 0, 1548, 1477, 1478, 1566, 1566, 1590, 0, 1571,
	0, 1590, 1491, 1617, 0, 1577, 2474, 1922, 1923, 0,
	2187, 2182, -2, -2, 2614, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 0, 580, 582, 0, 0, 0,
	598, 1501, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 2582, 0, 0, 0, 394, 0,
	396, 397, 398, 399, 400, 401, 402, 186, 2582, 484,
	509, 0, 186, 2582, 487, 186, 2582, 490, 0, 493,
	1229, 186, 2582, 496, 2149, 186, 2582, 499, 501, 2157,
	186, 2582, 505, 2164, 2162, 506, 2582, 508, 288, 286,
	287, 2200, 2201, 2208, 2209, 2210, 2211, 2615, 2617, 1319,
	1320, 1321, 1322, 0, 1349, 1230, 620, 621, 0, 645,
	0, 649, 2570, -2, 0, 2493, -2, 653, 1353, 1357,
	1358, 1359, 1360, 1361, 0, 0, 0, 0, 1366, 0,
	0, 659, 0, 0, 646, 647, 665, 668, 0, 761,
	762, 763, 764, 765, 70, 0, 2582, 1617, 72, 0,
	2143, 2212, 2213, 2214, 2215, 2216, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 76, 0, 2582,
	81, 0, 2582, 0, -2, 92, 0, 100, 0, 2146,
	109, 0, 2582, 0, 2118, -2, 0, 198, 274, 0,
	975, -2, 2582, 1172, 0, 0, 0, 0, 938, 2115,
	2120, 939, 2139, 940, 2125, 0, 318, 319, 320, 321,
	322, 0, 323, 2582, 325, 326, 0, 328, 329, 2582,
	331, 332, 0, 334, 0, 238, 239, 2582, 356, 358,
	0, 360, 361, 0, 363, 0, 0, 0, 367, -2,
	383, 0, 380, 370, 371, 373, 374, 375, 376, 377,
	0, 423, 421, 2154, 0, 0, -2, 2582, 0, 972,
	0, 0, 1209, -2, 2582, 1169, 0, 1216, 2582, 1212,
	0, -2, 0, 1489, 2582, 1370, 1004, 1005, 1006, 1007,
	1629, 450, 0, 1397, 0, 1399, 0, 1418, 1623, 1566,
	0, 0, 1628, 0, -2, 567, 2170, -2, 519, 0,
	520, 0, -2, 0, 300, 0, 0, 957, 958, 959,
	960, 961, 964, 965, 966, 967, 1603, 256, 258, 0,
	0, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	0, 0, 630, 0, 0, 767, 768, 0, 0, 778,
	779, 780, 0, 300, 2485, 2447, 2308, 787, 0, 790,
	793, -2, 0, 0, 0, 0, 797, 0, 802, 803,
	804, 0, 0, 808, 810, 946, 812, 0, 0, 814,
	0, 818, 0, 821, 0, 823, 0, 825, -2, -2,
	-2, 833, 834, -2, 838, -2, 0, 841, 843, 0,
	845, -2, 0, 854, 850, 851, 0, 0, 0, 0,
	870, 871, 0, 880, 0, 883, 884, 885, 0, 887,
	888, 0, 890, 891, 892, 893, 0, 0, 896, 897,
	-2, -2, 901, 903, 0, 910, 0, 916, 0, 920,
	0, 0, 928, 0, 774, 775, 186, 1621, 1332, -2,
	1334, 0, -2, 0, 611, 0, 614, 1521, 1447, 1444,
	0, 1518, 1519, 1448, 0, 0, 0, 1455, 0, 1494,
	1495, 0, 0, 0, 1434, 1435, 0, 0, 0, 0,
	2023, 2024, 2025, 2026, 2027, 2028, 2031, 2032, 2029, 2030,
	2033, 2034, 0, 0, 0, 0, 0, 2035, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2036,
	2037, 2038, 0, 0, 2040, 0, 2042, 0, 0, 0,
	0, 0, 0, 1829, 1831, 2106, 0, 0, 2039, 1769,
	1770, 1771, 1772, 1773, 1808, 1809, 0, 0, 1882, 2103,
	2102, 1884, 0, 2054, 0, 1897, -2, 0, 2018, 2049,
	0, 0, 1906, 1907, 1908, 0, 0, 2054, 0, 0,
	2097, 1918, 1919, 1761, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 1709, 0, 1711, 0, 1712,
	1713, 1720, 1733, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 2078, -2, 0, 0, 0,
	0, 1725, 0, 1481, 0, 0, 1552, 2107, 2111, 2112,
	1552, 1552, 0, 0, 2055, 1614, 1614, 0, 0, 1609,
	1609, 1609, 1607, 1590, 0, 1590, 1600, 0, 1590, 1590,
	0, -2, 1571, 0, 0, 1600, 0, 1584, 555, 557,
	559, 561, 562, 563, 565, 1618, 1619, 0, 0, 0,
	0, 2188, 0, 0, 0, 0, 0, 2173, 0, 339,
	0, 0, 0, 2538, 2484, -2, 585, 601, 1491, 0,
	2057, 1644, 1648, 0, 1650, 1651, 1652, 1653, 1654, 0,
	0, 1645, -2, 1721, 1723, 1744, 2205, 2206, 2207, 1704,
	1705, 1706, 1707, 1708, 1716, 1703, 1703, 1703, 1714, 1743,
	1735, 1743, 1739, 1689, 1690, 1691, 1726, 1727, 1728, 1729,
	0, 2538, 2484, -2, 592, 0, 0, 1429, 202, 204,
	205, 206, 207, 208, 384, 0, 391, 392, 393, 0,
	480, 0, 184, 185, 0, 186, 2582, 485, 0, 488,
	0, 186, 2582, 2113, 494, 0, 497, 0, 0, 503,
	0, 0, 0, 0, 0, 186, 1431, 0, 0, 0,
	0, -2, 655, 660, 661, 0, 1355, 0, 1362, 682,
	683, 684, 1364, 1365, 0, 1367, 658, 685, 686, 687,
	688, 689, 690, 0, 2127, 2128, 2129, 2130, 2133, 2134,
	0, 0, 656, 675, 663, 0, 669, 110, 1305, 0,
	0, 149, 0, 1305, 1305, 0, 0, 0, 0, 173,
	0, 1043, 0, 0, 0, 0, 0, 134, 145, 122,
	123, 0, 0, 0, 0, 0, 0, 82, 1146, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 96, 97, 0, 133,
	0, 0, 1394, 0, 128, 112, 0, 0, 0, 135,
	147, 0, 177, 179, 1040, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 209, 0, 0, 0, 1170, 0,
	1488, 0, 0, 2582, 0, 1603, 2354, -2, -2, 256,
	1603, 937, 0, 0, 2188, 2123, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 362, 364, 365, 366, 0,
	1208, 0, 372, 413, 1095, 2582, 0, 0, 440, 435,
	0, 437, 0, 0, 0, 1145, 2582, 1143, 2158, 0,
	1167, 0, 1124, 2582, 2156, 0, 0, 0, 1217, 2197,
	1226, 1230, 1384, 0, 452, 0, 1400, 1402, 0, 0,
	1624, 0, 1626, 1566, 1491, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 262, 0, 1602, 0,
	0, 1603, 256, 2462, 300, 300, 1603, 632, 1603, 634,
	0, 0, 781, 782, 0, 300, 300, 300, 788, 789,
	791, 792, -2, -2, -2, 911, 794, 795, 877, 0,
	0, 0, 876, 807, 811, 0, 931, 2470, 2484, 2538,
	944, 877, 2274, 877, 2274, 877, 2274, 822, 824, 827,
	865, 873, 837, 842, 0, 0, 847, 855, -2, 0,
	857, 0, 859, 0, 861, 877, 878, 881, 886, 889,
	894, 895, 0, 912, 913, 0, 0, 0, 0, 0,
	0, 923, 924, 0, 0, 1163, 0, 1345, 1521, 1447,
	613, 1438, 1520, 1439, 1446, 1449, 0, 0, 1451, 0,
	1453, 0, 1516, 1517, 1524, 1525, 0, 1535, 1536, 1528,
	0, -2, 0, 0, 1531, 1532, 1457, 0, 1474, 1475,
	1476, 1505, 1508, 1245, 0, 2716, 1765, 1639, 1766, 1767,
	2142, 0, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, -2, -2, -2, -2, -2, -2, -2, -2,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, -2, -2, -2, 1806, 1807, -2, 2041, 2043, 0,
	2106, 0, -2, 0, -2, -2, -2, -2, 1826, 0,
	1828, 1833, 1835, 1837, 0, 0, 0, 0, 2105, 1847,
	2089, 2090, 0, 0, 2020, 2021, 2022, 1832, 0, 1851,
	2104, 2101, 0, 0, 2053, 1504, 1910, 0, 0, 0,
	0, 1917, 1902, 2051, 0, 2050, 0, 0, 0, 2061,
	0, 2096, 2092, 0, 2140, 1760, 1747, 1748, 1749, 1750,
	1751, 1752, 1762, 0, 2137, 2174, 2180, 1994, 0, 0,
	0, 1947, 1948, 1949, 1950, 1951, 0, 1953, 1954, 0,
	1956, 1957, 0, 1959, 1960, 0, 1962, 1963, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 0, 0,
	1966, 0, 2064, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1968, 0, 1970, 2055, 2075, 0, 0, 1852,
	0, 0, 0, 2018, 0, 1973, 2055, 2083, 0, 0,
	0, 0, 0, 2055, 0, 2088, 0, 1980, 0, 1982,
	1483, 0, 0, 1634, 0, 0, 0, 2110, 1634, 1634,
	0, 1547, 0, 0, 1610, 1611, 1612, 1613, 0, 0,
	1614, 0, 1604, 1608, 1605, 1606, 1600, 1563, 0, 0,
	2144, 1600, 1569, 1599, 0, 1124, 1589, 1600, 1600, 0,
	-2, 1573, 1590, 0, 0, 556, 558, 560, 564, 566,
	0, 0, 1504, -2, 0, -2, 1123, 0, 0, 0,
	0, 575, 577, 0, 0, 500, 0, 589, 0, 569,
	0, 572, 0, 1635, 1638, 0, 0, 1649, 1655, 1656,
	0, -2, 0, 0, 1745, 0, 0, 0, 0, 596,
	0, 0, 0, 0, 395, 510, 186, 482, 0, 186,
	186, 491, 0, 0, 186, 502, 186, 2165, 186, 2163,
	289, 507, 1430, 220, 0, 648, 0, 1354, 1363, 0,
	679, 0, 681, 0, 2131, 2135, 2132, 2136, 0, 670,
	0, 0, 0, 0, 1304, 0, 1252, 0, 0, 0,
	0, 0, 0, 153, 2582, 0, 188, 0, 0, 1088,
	2150, 0, 1080, 0, 0, 2294, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1147, 1148, 1150, 1157, 1159, 0, 1153, 2138,
	0, 0, 1154, 0, 1156, 1158, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	1393, 1394, 0, 0, 0, 121, 125, 0, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1204, 1202, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 0, 0, -2,
	0, 0, 0, 0, 0, 230, 0, 291, 2116, 2126,
	0, 962, 963, 324, 327, 330, 333, 226, 0, 368,
	0, 0, 1010, 985, 0, 0, 422, 300, 0, 0,
	436, 440, 2167, 970, 1141, 1144, 0, 1124, 2582, 1181,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 2582,
	2145, 2196, 2197, 1386, 1394, 0, 1634, 0, 1416, 1403,
	0, 0, 0, 1416, 1420, 1421, 1423, 1424, 0, 0,
	1625, 1631, 518, 568, 1491, 1491, 300, 298, 2414, 296,
	293, 295, 0, 0, 0, 1011, 1013, 1014, 1015, 188,
	0, 2197, 1080, 2343, 2197, 0, 1406, 1408, 0, 250,
	0, 259, 1603, 257, 262, 0, 0, 0, 434, 631,
	636, 776, 0, 300, 784, 785, 786, 829, 867, 875,
	796, 798, 799, 800, 0, 0, 945, 941, 942, 943,
	813, 877, 816, 877, 819, 877, 840, 844, 849, 856,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 0,
	0, 917, 918, 919, 921, 926, 925, 930, 1622, 1442,
	1443, 1445, 0, 1454, 0, 0, 1530, -2, -2, 1529,
	1533, 1534, -2, -2, -2, -2, 1450, 0, 1459, 1456,
	0, 1515, 1243, 1244, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1848, 0, -2, 1827, 1830, 1834, 1836,
	1838, 0, 0, 0, 0, 0, 0, 2044, 0, 2046,
	1849, 2099, 2102, 2016, 0, 0, 1503, 1504, 1504, 0,
	1916, 0, 2052, 0, 2059, 2060, 0, 1909, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1920,
	0, 0, 0, 0, 1952, 1955, 1958, 1961, 0, 0,
	0, 0, 1941, 0, 0, 0, 1945, 1715, 1701, 0,
	1743, 1741, 1742, 1736, 1743, 1740, 1693, 0, 1692, 0,
	1965, 0, 1967, 1969, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 1856, 1857, 1972, 2081, 2082, 0, 0, 0, 0,
	0, 0, 1978, 0, 2087, 1979, 1981, 1491, 0, 1484,
	0, 1549, 1538, 1633, 0, 2108, 1603, 1551, 1553, 2109,
	2147, 1538, 1538, 0, 2056, 0, 0, 1594, 0, 0,
	0, 1596, 1567, 0, 0, 1561, 0, 1557, 1558, 1559,
	1560, 1568, 1124, 1598, 1570, 1574, 2174, 0, 1600, 0,
	1585, 0, 1587, 1620, 0, 1579, 1582, 0, 0, 2189,
	1634, 0, 335, 340, 341, 336, 337, 338, 584, 0,
	0, 0, 0, 2058, 0, 1640, 0, 1646, 0, 0,
	0, 0, 591, 0, 0, 0, 203, 1428, 390, 481,
	186, 486, 489, 2114, 186, 495, 498, 504, 216, 0,
	644, -2, 677, 678, 680, 0, 676, 150, 1305, 0,
	0, 1248, 1250, 2161, 1254, 1259, 0, 0, 0, 0,
	0, 1282, 0, 155, 2582, 164, 0, 1059, 0, 2148,
	0, 0, 0, 0, 0, 0, 1307, 0, 0, 2582,
	186, 2582, 186, 167, 169, 172, 0, 176, 174, 0,
	1047, 0, 0, 1050, 111, 1305, 0, 0, 114, 118,
	126, 0, 0, 0, 132, 0, 0, 0, 1284, 1288,
	1296, 0, 0, 0, 1151, 1152, 1155, 1161, 83, 0,
	0, 0, 1292, 1294, 1300, 93, 94, 2159, 95, 0,
	1247, 0, 0, 0, 0, 178, 116, 120, 127, 0,
	1302, 113, 0, 201, 0, 0, 191, 186, 2582, 0,
	193, 0, 194, 195, 210, 0, 0, 0, 973, 974,
	1203, 1165, 1166, 0, 1171, 0, 0, 0, 0, 1603,
	222, 0, 1603, 230, 0, 2122, 0, 355, 0, 0,
	0, 0, 1009, 1106, 0, 980, 0, 0, 0, 428,
	424, 0, 433, 439, 438, 444, -2, 0, 0, 0,
	0, -2, 0, 0, 1219, 1213, 1214, 0, 0, 0,
	0, 2582, 1388, 1394, 0, 1489, 1504, 451, 1395, 1416,
	0, 0, 0, 1405, 1401, 1398, 1634, 0, 0, 0,
	0, 0, 1627, 1630, 521, 522, 275, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 1016, 1020, 0, 2197,
	2197, 0, 2152, 0, 0, 0, 0, 260, 0, 263,
	0, 0, 0, 268, 269, 270, 271, 272, 262, 252,
	1603, 0, 0, 633, 0, 0, 783, 0, 806, 815,
	817, 820, 858, 860, 877, 904, 905, 1037, 0, 1037,
	0, 0, 922, 1452, 0, 1527, 1458, 1509, 1510, 0,
	1245, 0, 1768, 1811, 0, 0, -2, 0, 0, 1815,
	0, 0, 0, -2, 0, 0, 0, 2045, 2047, 0,
	2101, 1911, 0, 0, 0, 1915, 1899, 1900, 0, 2019,
	2062, 2091, 2095, 0, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 0, 2141, 2175, 2179, 1992, 1993, 1997, 2155, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 1734, 1738, 0, 0, 2063, 2074, 2076, 1853, 1854,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	-2, -2, -2, 1871, 1872, 1873, -2, -2, -2, 0,
	0, 0, 2077, 2079, 2080, 2084, 2085, 0, 1975, 1976,
	1977, 2086, 0, 1491, 1485, 1546, 0, 1632, 1550, 0,
	1546, 1546, 1498, 1592, 0, 0, 1616, 0, 1564, 0,
	1565, 0, 1597, 0, 1572, 1575, 1576, 1586, 0, 1578,
	0, 1581, 0, 1911, -2, 301, 302, 304, 0, 307,
	308, 0, 0, 587, 588, 586, 570, 0, 0, 1642,
	0, 0, 1718, 1722, 1746, 594, 595, 593, 483, 492,
	218, 0, 1601, 0, 0, 0, 0, 1263, 1265, 0,
	2227, 1272, 1273, 0, 2599, 1277, 0, 0, 0, 0,
	187, 1057, 1087, 0, 0, 0, 1079, 0, 0, 1093,
	157, 0, 0, 0, 165, 0, 0, 162, 0, 171,
	175, 1044, 0, 0, 0, 0, 1253, 0, 0, 0,
	129, 130, 131, 0, 136, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 1379, 0, 1373, 0,
	0, 0, 189, 0, 0, 0, 1242, 212, 0, 0,
	0, 0, 0, 1206, 1207, 1285, 1289, 1297, 0, 0,
	0, 230, 228, 0, 231, 0, 234, 235, 0, 230,
	224, 0, 0, 0, 1124, 369, 983, 1094, 0, 1096,
	0, 981, 0, 0, 1095, 420, 0, 427, 0, 441,
	0, 0, 1145, 0, 0, 1168, 1179, 1124, 0, 1218,
	1220, 0, 1228, 0, 0, 0, 1390, 1394, 0, 1383,
	1384, 1523, 1396, 1414, -2, 0, 0, 1504, 1422, 1419,
	1425, 1426, 0, 297, 0, 292, 294, 0, 278, 0,
	0, 1012, 1017, 0, 0, 0, 0, 0, 1407, 1409,
	0, 0, 0, 0, 0, 0, 251, 262, 1603, 284,
	0, 777, 801, 868, 906, 1036, 0, 0, 908, 0,
	0, 1526, 1513, 1514, 1511, 1245, 1813, 1817, 0, 0,
	0, 1819, -2, 0, 1841, -2, -2, 2048, 2100, 1890,
	1504, 1912, 1914, 1901, 2094, 1763, 0, 1999, 1996, 0,
	1983, 0, 1936, 1937, 0, 0, 1940, 1942, 1943, 1944,
	1702, 1695, 1694, 2073, 0, 0, 0, 0, 1974, 1486,
	0, 1988, 0, 0, 1554, 1988, 1988, 1593, 0, 1595,
	1562, 1555, 0, 2175, 1588, 1580, 0, 0, 305, 0,
	309, 310, 1636, 1641, 0, 1647, 1717, 219, 151, 152,
	1260, 1261, 1257, 0, 0, 0, 1267, 1268, 0, 0,
	1274, 1275, 0, 1280, 154, 0, 1058, 0, 1061, 0,
	0, 0, 0, 1068, 1080, 0, 0, 0, 0, 0,
	1081, 0, 1110, 0, 1233, 1240, 0, -2, 0, 0,
	0, 159, 181, 0, 0, 1306, 0, 0, 186, 186,
	0, 0, 1249, 1251, 1283, 0, 0, 0, 0, 139,
	0, 0, 1286, 1290, 1298, 1293, 1295, 1301, 0, 1380,
	0, 0, 1303, 199, 200, 0, 186, 0, 186, 192,
	186, 1242, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 223, 290, 230, 357, 0, 1031, 0, 1106, 1098,
	1099, 1100, 0, 1105, 1107, 0, 0, 997, 982, 0,
	993, 0, 0, 1010, 985, 0, 425, 442, 0, 445,
	0, 448, 971, 1142, 1176, 1124, 0, 1210, 0, 0,
	0, 0, 0, 0, 0, 1392, 1394, 0, 1385, 1386,
	1416, 1522, 0, 0, 0, 1404, 1523, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	264, 0, 265, 266, 267, 253, 254, 635, 637, 0,
	0, 643, 1035, 0, 0, 0, 0, 1512, 1821, -2,
	-2, 1842, 0, 2176, 2178, 1504, 0, 1985, 1506, 0,
	0, -2, 0, 0, 0, 1487, 1470, 0, 1545, 1537,
	1539, 1541, 2473, 2269, 2581, 1471, 1472, 1615, 0, 1583,
	306, 0, 1643, 0, 0, 1258, 1264, 1266, 1269, 1270,
	0, 0, 0, 156, 0, 1062, 1063, 2151, 1065, 0,
	1067, 1069, 1070, 1071, 0, 1074, 2199, 0, 1078, 0,
	1089, 1111, 0, 1120, 0, 1235, 1245, 1239, 0, 1237,
	1122, 0, 158, 160, 180, 1242, 0, 161, 170, 0,
	0, 115, 0, 0, 2263, 142, 140, 138, 1246, 117,
	0, 201, 211, 1241, 213, 196, 186, 0, 1287, 1291,
	1299, 232, 0, 233, 236, 0, 0, 1046, 0, 984,
	1097, 0, 1108, 1109, 987, 0, 986, 0, 0, 0,
	0, 0, 426, 429, 0, 432, 0, 0, 0, 0,
	0, 1221, 1219, 0, 1227, 0, 0, 0, 1372, 0,
	0, 1387, 1388, 449, 1410, 0, 0, 1416, 1427, 277,
	0, 0, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1019, 1122, 0, 0, 1086, 0, 282, 261,
	0, 639, 0, 641, 0, 907, 909, 0, 0, 1913,
	2003, 0, 0, 1938, 1939, -2, 0, 1879, 1987, 1989,
	0, 0, 0, 0, 0, 1556, 1637, 1255, 0, 1262,
	0, 1276, 1278, 0, 1281, 1060, 1064, 0, 0, 0,
	1128, 0, 0, 1082, 0, 1114, 1115, 1031, 0, 1116,
	1117, 1118, 1234, 1515, 1240, 1031, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 190, 214, 1242, 229,
	246, 0, 1177, 985, 1045, 0, 0, 995, 0, 998,
	0, 994, 991, 992, 983, 0, 430, 431, 446, 0,
	447, 0, 1180, 0, 0, 1228, 0, 0, 1375, 1371,
	1394, 1389, 1390, 1634, 1413, 1417, 0, 0, 1120, 1122,
	1042, 0, 638, 0, 0, 914, 915, 0, 0, 0,
	0, 1998, 1507, 1880, 0, 0, 1540, 1542, 1543, 1544,
	1256, 1271, 1279, 0, 0, 1073, 1133, 0, 0, 0,
	1112, 1113, 1042, 0, 1238, 1236, 1091, 0, 1124, 163,
	0, 1122, 0, 1051, 0, 0, 1054, 0, 0, 143,
	2263, 141, 0, 186, 249, 0, 243, 241, 242, 987,
	0, 0, 1102, 1104, 0, 999, 1031, 997, 443, 1178,
	1211, 1122, 0, 1120, 0, 1382, 1394, 1376, 1377, 0,
	1392, 0, 300, 300, 1031, 1120, 985, 1041, 300, 640,
	642, 1995, 2015, 2004, -2, 2541, 2270, 0, 2015, 2015,
	1990, 1991, 0, 0, 1075, 1129, 1130, 0, 1125, 1126,
	1127, 2198, 1076, 1077, 1110, 0, 0, 1128, 182, 1031,
	1048, 0, 0, 1049, 0, 0, 146, 0, 148, 215,
	237, 0, 0, 979, 0, 1101, 0, 0, 0, 0,
	1046, 987, 1120, 0, 1031, 0, 1368, 1381, 0, 1391,
	1372, 0, 279, 280, 1042, 1031, 1634, 0, 281, 2000,
	0, 0, 2006, 2007, 2008, 2009, 2010, 2001, 2002, 1066,
	0, 1131, 0, 1132, 0, 0, 0, 1634, 1119, 0,
	1133, 168, 1052, 0, 1055, 0, 144, 0, 244, 245,
	976, 978, 0, 1103, 988, 0, 990, 985, 996, 1031,
	0, 1042, 0, 1374, 2160, 1375, 1411, 0, 985, 1042,
	1085, 0, 2012, 2013, 0, 0, 0, 1134, 0, 1137,
	1138, 0, 1135, 1090, 0, 1110, 0, 0, 0, 0,
	989, 987, 1042, 1122, 985, 1120, 1382, 0, 1634, 985,
	2011, 2014, 2005, 1072, 1136, 1139, 1140, 1121, 1092, 0,
	0, 247, 0, 1034, 979, 985, 1120, 1634, 1031, 1369,
	1634, 1083, 1634, 1039, 0, 0, 1030, 1032, 1033, 977,
	1634, 1031, 1224, 1042, 1412, 1084, 1053, 1038, 0, 248,
	1222, 1042, 985, 0, 985, 1634, 0, 1634, 1225, 1039,
	1223, 1056,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 570, 3, 576, 571, 3,
	581, 582, 574, 572, 586, 573, 583, 575, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 589, 3,
	562, 564, 563, 567, 585, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 579, 3, 580, 577, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 587, 569, 588, 565,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 566,
	57905, 568, 57906, 578, 57907, 584, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1813
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1819
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1979
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = nil
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2194
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2198
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2287
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2743
		{
			return unimplemented(sqllex, "alter function")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2790
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2801
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2806
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2811
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2847
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = nil
		}
	case 301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2923
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "CREATE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplemented(sqllex, "create access method")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplemented(sqllex, "create cast")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "create operator")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "create publication")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplemented(sqllex, "create rule")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplemented(sqllex, "create server")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3183
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3187
		{
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3191
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3203
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3205
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplemented(sqllex, "drop server")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3224
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3373
		{

			sqlVAL.union.val = nil
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "DELETE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3460
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3486
		{
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DROP")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3686
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3776
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3784
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DELETE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "INSERT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "INSERT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3861
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3894
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3983
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "GRANT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4034
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4046
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "RESET")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "RESET")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "USE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4120
		{
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "USE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return unimplemented(sqllex, "set from current")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = tree.Low
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.Normal
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = tree.High
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.str = "client_encoding"
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.str = "timezone"
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4609
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4681
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4711
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4818
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = true
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = false
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = true
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = true
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = false
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5143
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5239
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5247
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5288
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5311
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5532
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5584
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5635
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5645
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5646
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5647
		{
			return helpWith(sqllex, "RESUME")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5749
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5816
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5832
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5861
		{

			sqlVAL.union.val = nil
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5867
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.str = ""
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = nil
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5900
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 995:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5930
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5944
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5959
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5961
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6053
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6059
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6066
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.str = ""
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6330
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = true
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = false
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6467
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6505
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6520
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6585
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6586
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6587
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6589
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6746
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6755
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6763
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6774
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6792
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6794
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6799
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6867
		{

			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6882
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6896
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6908
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6920
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6930
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6940
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = nil
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7050
		{
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7051
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7078
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7080
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7082
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7084
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7086
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7124
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7142
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7161
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7178
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7195
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = false
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = true
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = false
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = true
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = false
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7259
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7265
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.str = ""
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.str = ""
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7332
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7338
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7685
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7691
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7703
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7709
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7723
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7729
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7746
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7747
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7750
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7751
		{
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7862
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7906
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7917
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7937
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7938
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7966
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7981
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7985
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8072
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.str = ""
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8098
		{

		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8113
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.str = ""
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.str = ""
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.str = ""
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8168
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8182
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8211
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8291
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8318
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8413
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8428
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8572
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8608
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8609
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8730
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = true
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = false
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8784
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = nil
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8798
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = true
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = false
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = false
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = true
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8828
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8831
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8832
		{
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8894
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8899
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8961
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9056
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9089
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9126
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9131
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9136
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9147
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9178
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9217
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9303
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9336
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = nil
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = true
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = false
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.str = tree.AstFull
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.str = tree.AstRight
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.str = tree.AstInner
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9456
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.str = tree.AstHash
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.str = ""
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9525
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9548
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9560
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9570
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = true
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = false
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = true
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = false
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9632
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9640
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9659
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9669
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9689
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9751
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = types.Geography
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9800
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9808
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9842
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = nil
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = types.Int2
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = types.Int
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = types.Float4
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = types.Float
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9885
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9893
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = types.Bool
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9915
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = types.Float
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9934
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9940
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9962
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = types.String
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = true
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = false
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = types.Date
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10011
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10019
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10033
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10042
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10050
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10067
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = true
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = false
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = false
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = types.Interval
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10091
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10175
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = nil
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10220
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10280
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10532
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10598
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10819
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10845
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10869
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10899
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10910
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10911
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10935
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11001
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11197
		{
			return unimplemented(sqllex, "treat")
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.str = ""
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11372
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11440
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11469
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.Any
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.Some
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.All
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = tree.Div
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = tree.LT
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = tree.GT
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.LE
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.GE
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = tree.NE
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = tree.Like
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11831
		{
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11911
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11984
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12000
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12020
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12037
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12049
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12262
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12282
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.str = ""
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
