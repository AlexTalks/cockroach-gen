// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:867
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13503

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1557,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 402,
	-2, 0,
	-1, 74,
	242, 240,
	513, 240,
	-2, 0,
	-1, 87,
	230, 1293,
	244, 1293,
	260, 398,
	389, 398,
	399, 1050,
	437, 398,
	450, 1050,
	497, 1050,
	524, 398,
	550, 1050,
	-2, 0,
	-1, 93,
	132, 1557,
	237, 1557,
	535, 1557,
	536, 1557,
	-2, 0,
	-1, 109,
	150, 1528,
	169, 1528,
	182, 1528,
	240, 1528,
	273, 1528,
	340, 1528,
	350, 1528,
	530, 1528,
	-2, 1499,
	-1, 149,
	158, 901,
	259, 901,
	392, 863,
	455, 863,
	496, 863,
	516, 901,
	518, 863,
	-2, 0,
	-1, 153,
	4, 1559,
	21, 1559,
	22, 1559,
	23, 1559,
	24, 1559,
	25, 1559,
	26, 1559,
	27, 1559,
	29, 1559,
	30, 1559,
	36, 1559,
	41, 1559,
	42, 1559,
	44, 1559,
	45, 1559,
	46, 1559,
	47, 1559,
	48, 1559,
	49, 1559,
	50, 1559,
	51, 1559,
	53, 1559,
	54, 1559,
	55, 1559,
	56, 1559,
	58, 1559,
	59, 1559,
	60, 1559,
	61, 1559,
	62, 1559,
	63, 1559,
	64, 1559,
	68, 1559,
	69, 1559,
	70, 1559,
	71, 1559,
	73, 1559,
	74, 1559,
	75, 1559,
	79, 1559,
	80, 1559,
	81, 1559,
	82, 1559,
	83, 1559,
	84, 1559,
	85, 1559,
	88, 1559,
	89, 1559,
	90, 1559,
	91, 1559,
	92, 1559,
	94, 1559,
	96, 1559,
	97, 1559,
	98, 1559,
	99, 1559,
	100, 1559,
	101, 1559,
	103, 1559,
	104, 1559,
	105, 1559,
	107, 1559,
	108, 1559,
	109, 1559,
	117, 1559,
	118, 1559,
	119, 1559,
	120, 1559,
	121, 1559,
	123, 1559,
	124, 1559,
	125, 1559,
	127, 1559,
	128, 1559,
	129, 1559,
	131, 1559,
	132, 1559,
	133, 1559,
	135, 1559,
	136, 1559,
	137, 1559,
	140, 1559,
	141, 1559,
	142, 1559,
	144, 1559,
	145, 1559,
	147, 1559,
	148, 1559,
	149, 1559,
	151, 1559,
	152, 1559,
	153, 1559,
	154, 1559,
	155, 1559,
	156, 1559,
	157, 1559,
	158, 1559,
	159, 1559,
	160, 1559,
	161, 1559,
	162, 1559,
	163, 1559,
	164, 1559,
	165, 1559,
	166, 1559,
	168, 1559,
	174, 1559,
	175, 1559,
	176, 1559,
	177, 1559,
	181, 1559,
	183, 1559,
	184, 1559,
	188, 1559,
	189, 1559,
	190, 1559,
	191, 1559,
	192, 1559,
	193, 1559,
	194, 1559,
	195, 1559,
	196, 1559,
	197, 1559,
	198, 1559,
	199, 1559,
	200, 1559,
	201, 1559,
	203, 1559,
	204, 1559,
	206, 1559,
	207, 1559,
	209, 1559,
	210, 1559,
	211, 1559,
	212, 1559,
	213, 1559,
	214, 1559,
	215, 1559,
	216, 1559,
	217, 1559,
	219, 1559,
	220, 1559,
	222, 1559,
	223, 1559,
	224, 1559,
	225, 1559,
	226, 1559,
	230, 1559,
	231, 1559,
	232, 1559,
	233, 1559,
	234, 1559,
	237, 1559,
	238, 1559,
	239, 1559,
	241, 1559,
	243, 1559,
	244, 1559,
	246, 1559,
	248, 1559,
	249, 1559,
	250, 1559,
	252, 1559,
	256, 1559,
	257, 1559,
	258, 1559,
	259, 1559,
	260, 1559,
	261, 1559,
	263, 1559,
	264, 1559,
	265, 1559,
	267, 1559,
	268, 1559,
	270, 1559,
	271, 1559,
	274, 1559,
	278, 1559,
	279, 1559,
	280, 1559,
	283, 1559,
	284, 1559,
	285, 1559,
	286, 1559,
	288, 1559,
	289, 1559,
	290, 1559,
	291, 1559,
	292, 1559,
	293, 1559,
	294, 1559,
	295, 1559,
	296, 1559,
	297, 1559,
	298, 1559,
	299, 1559,
	300, 1559,
	301, 1559,
	302, 1559,
	303, 1559,
	304, 1559,
	305, 1559,
	306, 1559,
	307, 1559,
	308, 1559,
	309, 1559,
	311, 1559,
	313, 1559,
	314, 1559,
	315, 1559,
	316, 1559,
	317, 1559,
	318, 1559,
	319, 1559,
	320, 1559,
	321, 1559,
	322, 1559,
	323, 1559,
	324, 1559,
	325, 1559,
	327, 1559,
	328, 1559,
	330, 1559,
	332, 1559,
	333, 1559,
	335, 1559,
	336, 1559,
	337, 1559,
	338, 1559,
	339, 1559,
	342, 1559,
	345, 1559,
	346, 1559,
	347, 1559,
	348, 1559,
	351, 1559,
	352, 1559,
	353, 1559,
	355, 1559,
	357, 1559,
	358, 1559,
	359, 1559,
	360, 1559,
	361, 1559,
	362, 1559,
	363, 1559,
	364, 1559,
	365, 1559,
	366, 1559,
	367, 1559,
	368, 1559,
	369, 1559,
	371, 1559,
	372, 1559,
	373, 1559,
	374, 1559,
	375, 1559,
	376, 1559,
	377, 1559,
	378, 1559,
	379, 1559,
	380, 1559,
	381, 1559,
	382, 1559,
	383, 1559,
	384, 1559,
	385, 1559,
	387, 1559,
	388, 1559,
	390, 1559,
	391, 1559,
	392, 1559,
	393, 1559,
	394, 1559,
	395, 1559,
	396, 1559,
	397, 1559,
	398, 1559,
	399, 1559,
	400, 1559,
	401, 1559,
	403, 1559,
	405, 1559,
	406, 1559,
	407, 1559,
	412, 1559,
	414, 1559,
	415, 1559,
	416, 1559,
	417, 1559,
	418, 1559,
	419, 1559,
	420, 1559,
	421, 1559,
	422, 1559,
	423, 1559,
	425, 1559,
	426, 1559,
	427, 1559,
	429, 1559,
	430, 1559,
	431, 1559,
	432, 1559,
	433, 1559,
	434, 1559,
	435, 1559,
	437, 1559,
	438, 1559,
	439, 1559,
	440, 1559,
	441, 1559,
	442, 1559,
	443, 1559,
	444, 1559,
	445, 1559,
	446, 1559,
	447, 1559,
	448, 1559,
	450, 1559,
	451, 1559,
	452, 1559,
	453, 1559,
	454, 1559,
	455, 1559,
	457, 1559,
	458, 1559,
	459, 1559,
	460, 1559,
	461, 1559,
	462, 1559,
	464, 1559,
	465, 1559,
	466, 1559,
	467, 1559,
	468, 1559,
	469, 1559,
	470, 1559,
	471, 1559,
	473, 1559,
	475, 1559,
	476, 1559,
	477, 1559,
	478, 1559,
	479, 1559,
	480, 1559,
	481, 1559,
	482, 1559,
	483, 1559,
	484, 1559,
	485, 1559,
	486, 1559,
	487, 1559,
	488, 1559,
	489, 1559,
	490, 1559,
	492, 1559,
	493, 1559,
	495, 1559,
	496, 1559,
	498, 1559,
	499, 1559,
	500, 1559,
	501, 1559,
	502, 1559,
	503, 1559,
	504, 1559,
	505, 1559,
	506, 1559,
	508, 1559,
	509, 1559,
	510, 1559,
	511, 1559,
	512, 1559,
	514, 1559,
	516, 1559,
	517, 1559,
	518, 1559,
	519, 1559,
	520, 1559,
	521, 1559,
	523, 1559,
	524, 1559,
	525, 1559,
	526, 1559,
	528, 1559,
	529, 1559,
	532, 1559,
	533, 1559,
	534, 1559,
	535, 1559,
	536, 1559,
	537, 1559,
	538, 1559,
	540, 1559,
	543, 1559,
	544, 1559,
	545, 1559,
	546, 1559,
	547, 1559,
	548, 1559,
	550, 1559,
	551, 1559,
	552, 1559,
	553, 1559,
	555, 1559,
	560, 1559,
	561, 1559,
	562, 1559,
	563, 1559,
	564, 1559,
	565, 1559,
	-2, 0,
	-1, 154,
	1, 1410,
	130, 1410,
	248, 1410,
	329, 1410,
	387, 1410,
	396, 1410,
	569, 1410,
	597, 1410,
	-2, 0,
	-1, 156,
	1, 1410,
	597, 1410,
	-2, 0,
	-1, 157,
	1, 1410,
	597, 1410,
	-2, 0,
	-1, 158,
	1, 1410,
	513, 1410,
	597, 1410,
	-2, 0,
	-1, 187,
	150, 1527,
	169, 1527,
	182, 1527,
	240, 1527,
	273, 1527,
	340, 1527,
	350, 1527,
	530, 1527,
	-2, 1502,
	-1, 234,
	4, 1566,
	5, 1566,
	6, 1566,
	7, 1566,
	8, 1566,
	9, 1566,
	10, 1566,
	21, 1566,
	22, 1566,
	23, 1566,
	24, 1566,
	25, 1566,
	26, 1566,
	27, 1566,
	29, 1566,
	30, 1566,
	36, 1566,
	37, 1566,
	41, 1566,
	42, 1566,
	43, 1566,
	44, 1566,
	45, 1566,
	46, 1566,
	47, 1566,
	48, 1566,
	49, 1566,
	50, 1566,
	51, 1566,
	53, 1566,
	54, 1566,
	55, 1566,
	56, 1566,
	58, 1566,
	59, 1566,
	60, 1566,
	61, 1566,
	62, 1566,
	63, 1566,
	64, 1566,
	65, 1566,
	66, 1566,
	67, 1566,
	68, 1566,
	69, 1566,
	70, 1566,
	71, 1566,
	73, 1566,
	74, 1566,
	75, 1566,
	77, 1566,
	79, 1566,
	80, 1566,
	81, 1566,
	82, 1566,
	83, 1566,
	84, 1566,
	85, 1566,
	88, 1566,
	89, 1566,
	90, 1566,
	91, 1566,
	92, 1566,
	94, 1566,
	96, 1566,
	97, 1566,
	98, 1566,
	99, 1566,
	100, 1566,
	101, 1566,
	103, 1566,
	104, 1566,
	105, 1566,
	106, 1566,
	107, 1566,
	108, 1566,
	109, 1566,
	110, 1566,
	111, 1566,
	112, 1566,
	113, 1566,
	114, 1566,
	115, 1566,
	116, 1566,
	117, 1566,
	118, 1566,
	119, 1566,
	120, 1566,
	121, 1566,
	122, 1566,
	123, 1566,
	124, 1566,
	125, 1566,
	126, 1566,
	127, 1566,
	128, 1566,
	129, 1566,
	131, 1566,
	132, 1566,
	133, 1566,
	135, 1566,
	136, 1566,
	137, 1566,
	140, 1566,
	141, 1566,
	142, 1566,
	144, 1566,
	145, 1566,
	147, 1566,
	148, 1566,
	149, 1566,
	151, 1566,
	152, 1566,
	153, 1566,
	154, 1566,
	155, 1566,
	156, 1566,
	157, 1566,
	158, 1566,
	159, 1566,
	160, 1566,
	161, 1566,
	162, 1566,
	163, 1566,
	164, 1566,
	165, 1566,
	166, 1566,
	167, 1566,
	168, 1566,
	174, 1566,
	175, 1566,
	176, 1566,
	177, 1566,
	181, 1566,
	183, 1566,
	184, 1566,
	187, 1566,
	188, 1566,
	189, 1566,
	190, 1566,
	191, 1566,
	192, 1566,
	193, 1566,
	194, 1566,
	195, 1566,
	196, 1566,
	197, 1566,
	198, 1566,
	199, 1566,
	200, 1566,
	201, 1566,
	203, 1566,
	204, 1566,
	206, 1566,
	207, 1566,
	209, 1566,
	210, 1566,
	211, 1566,
	212, 1566,
	213, 1566,
	214, 1566,
	215, 1566,
	216, 1566,
	217, 1566,
	218, 1566,
	219, 1566,
	220, 1566,
	222, 1566,
	223, 1566,
	224, 1566,
	225, 1566,
	226, 1566,
	230, 1566,
	231, 1566,
	232, 1566,
	233, 1566,
	234, 1566,
	236, 1566,
	237, 1566,
	238, 1566,
	239, 1566,
	241, 1566,
	243, 1566,
	244, 1566,
	245, 1566,
	246, 1566,
	247, 1566,
	248, 1566,
	249, 1566,
	250, 1566,
	251, 1566,
	252, 1566,
	256, 1566,
	257, 1566,
	258, 1566,
	259, 1566,
	260, 1566,
	261, 1566,
	263, 1566,
	264, 1566,
	265, 1566,
	267, 1566,
	268, 1566,
	269, 1566,
	270, 1566,
	271, 1566,
	272, 1566,
	274, 1566,
	278, 1566,
	279, 1566,
	280, 1566,
	281, 1566,
	282, 1566,
	283, 1566,
	284, 1566,
	285, 1566,
	286, 1566,
	288, 1566,
	289, 1566,
	290, 1566,
	291, 1566,
	292, 1566,
	293, 1566,
	294, 1566,
	295, 1566,
	296, 1566,
	297, 1566,
	298, 1566,
	299, 1566,
	300, 1566,
	301, 1566,
	302, 1566,
	303, 1566,
	304, 1566,
	305, 1566,
	306, 1566,
	307, 1566,
	308, 1566,
	309, 1566,
	311, 1566,
	312, 1566,
	313, 1566,
	314, 1566,
	315, 1566,
	316, 1566,
	317, 1566,
	318, 1566,
	319, 1566,
	320, 1566,
	321, 1566,
	322, 1566,
	323, 1566,
	324, 1566,
	325, 1566,
	326, 1566,
	327, 1566,
	328, 1566,
	329, 1566,
	330, 1566,
	331, 1566,
	332, 1566,
	333, 1566,
	334, 1566,
	335, 1566,
	336, 1566,
	337, 1566,
	338, 1566,
	339, 1566,
	342, 1566,
	346, 1566,
	347, 1566,
	348, 1566,
	351, 1566,
	352, 1566,
	353, 1566,
	354, 1566,
	355, 1566,
	356, 1566,
	357, 1566,
	358, 1566,
	359, 1566,
	360, 1566,
	361, 1566,
	362, 1566,
	363, 1566,
	364, 1566,
	365, 1566,
	366, 1566,
	367, 1566,
	368, 1566,
	369, 1566,
	371, 1566,
	372, 1566,
	373, 1566,
	374, 1566,
	375, 1566,
	376, 1566,
	377, 1566,
	378, 1566,
	379, 1566,
	380, 1566,
	381, 1566,
	382, 1566,
	383, 1566,
	384, 1566,
	385, 1566,
	387, 1566,
	388, 1566,
	390, 1566,
	391, 1566,
	392, 1566,
	393, 1566,
	394, 1566,
	395, 1566,
	396, 1566,
	397, 1566,
	398, 1566,
	399, 1566,
	400, 1566,
	401, 1566,
	403, 1566,
	405, 1566,
	406, 1566,
	407, 1566,
	412, 1566,
	414, 1566,
	415, 1566,
	416, 1566,
	417, 1566,
	418, 1566,
	419, 1566,
	420, 1566,
	421, 1566,
	422, 1566,
	423, 1566,
	425, 1566,
	426, 1566,
	427, 1566,
	428, 1566,
	429, 1566,
	430, 1566,
	431, 1566,
	432, 1566,
	433, 1566,
	434, 1566,
	435, 1566,
	437, 1566,
	438, 1566,
	439, 1566,
	440, 1566,
	441, 1566,
	442, 1566,
	443, 1566,
	444, 1566,
	445, 1566,
	446, 1566,
	447, 1566,
	448, 1566,
	450, 1566,
	451, 1566,
	452, 1566,
	453, 1566,
	454, 1566,
	455, 1566,
	456, 1566,
	457, 1566,
	458, 1566,
	459, 1566,
	460, 1566,
	461, 1566,
	462, 1566,
	463, 1566,
	464, 1566,
	465, 1566,
	466, 1566,
	467, 1566,
	468, 1566,
	469, 1566,
	470, 1566,
	471, 1566,
	473, 1566,
	475, 1566,
	476, 1566,
	477, 1566,
	478, 1566,
	479, 1566,
	480, 1566,
	481, 1566,
	482, 1566,
	483, 1566,
	484, 1566,
	485, 1566,
	486, 1566,
	487, 1566,
	488, 1566,
	489, 1566,
	490, 1566,
	492, 1566,
	493, 1566,
	494, 1566,
	495, 1566,
	496, 1566,
	498, 1566,
	499, 1566,
	500, 1566,
	501, 1566,
	502, 1566,
	503, 1566,
	504, 1566,
	505, 1566,
	506, 1566,
	508, 1566,
	509, 1566,
	510, 1566,
	511, 1566,
	512, 1566,
	514, 1566,
	516, 1566,
	517, 1566,
	518, 1566,
	519, 1566,
	520, 1566,
	521, 1566,
	522, 1566,
	523, 1566,
	524, 1566,
	525, 1566,
	526, 1566,
	528, 1566,
	529, 1566,
	531, 1566,
	532, 1566,
	533, 1566,
	534, 1566,
	535, 1566,
	536, 1566,
	537, 1566,
	538, 1566,
	539, 1566,
	540, 1566,
	543, 1566,
	544, 1566,
	545, 1566,
	546, 1566,
	547, 1566,
	548, 1566,
	550, 1566,
	551, 1566,
	552, 1566,
	553, 1566,
	555, 1566,
	560, 1566,
	561, 1566,
	562, 1566,
	563, 1566,
	564, 1566,
	565, 1566,
	566, 1566,
	578, 1566,
	585, 1566,
	586, 1566,
	587, 1566,
	594, 1566,
	598, 1566,
	-2, 0,
	-1, 738,
	4, 1291,
	21, 1291,
	22, 1291,
	23, 1291,
	24, 1291,
	25, 1291,
	26, 1291,
	27, 1291,
	29, 1291,
	30, 1291,
	36, 1291,
	41, 1291,
	42, 1291,
	44, 1291,
	45, 1291,
	46, 1291,
	47, 1291,
	48, 1291,
	49, 1291,
	50, 1291,
	51, 1291,
	53, 1291,
	54, 1291,
	55, 1291,
	56, 1291,
	58, 1291,
	59, 1291,
	60, 1291,
	61, 1291,
	62, 1291,
	63, 1291,
	64, 1291,
	68, 1291,
	69, 1291,
	70, 1291,
	71, 1291,
	73, 1291,
	74, 1291,
	75, 1291,
	79, 1291,
	80, 1291,
	81, 1291,
	82, 1291,
	83, 1291,
	84, 1291,
	85, 1291,
	88, 1291,
	89, 1291,
	90, 1291,
	91, 1291,
	92, 1291,
	94, 1291,
	96, 1291,
	97, 1291,
	98, 1291,
	99, 1291,
	100, 1291,
	101, 1291,
	103, 1291,
	104, 1291,
	105, 1291,
	107, 1291,
	108, 1291,
	109, 1291,
	117, 1291,
	118, 1291,
	119, 1291,
	120, 1291,
	121, 1291,
	123, 1291,
	124, 1291,
	125, 1291,
	127, 1291,
	128, 1291,
	129, 1291,
	131, 1291,
	132, 1291,
	133, 1291,
	135, 1291,
	136, 1291,
	137, 1291,
	140, 1291,
	141, 1291,
	142, 1291,
	144, 1291,
	145, 1291,
	147, 1291,
	148, 1291,
	149, 1291,
	151, 1291,
	152, 1291,
	153, 1291,
	154, 1291,
	155, 1291,
	156, 1291,
	157, 1291,
	158, 1291,
	159, 1291,
	160, 1291,
	161, 1291,
	162, 1291,
	163, 1291,
	164, 1291,
	165, 1291,
	166, 1291,
	168, 1291,
	174, 1291,
	175, 1291,
	176, 1291,
	177, 1291,
	181, 1291,
	183, 1291,
	184, 1291,
	188, 1291,
	189, 1291,
	190, 1291,
	191, 1291,
	192, 1291,
	193, 1291,
	194, 1291,
	195, 1291,
	196, 1291,
	197, 1291,
	198, 1291,
	199, 1291,
	200, 1291,
	201, 1291,
	203, 1291,
	204, 1291,
	206, 1291,
	207, 1291,
	209, 1291,
	210, 1291,
	211, 1291,
	212, 1291,
	213, 1291,
	214, 1291,
	215, 1291,
	216, 1291,
	217, 1291,
	219, 1291,
	220, 1291,
	222, 1291,
	223, 1291,
	224, 1291,
	225, 1291,
	226, 1291,
	230, 1291,
	231, 1291,
	232, 1291,
	233, 1291,
	234, 1291,
	237, 1291,
	238, 1291,
	239, 1291,
	241, 1291,
	243, 1291,
	244, 1291,
	246, 1291,
	248, 1291,
	249, 1291,
	250, 1291,
	252, 1291,
	256, 1291,
	257, 1291,
	258, 1291,
	259, 1291,
	260, 1291,
	261, 1291,
	263, 1291,
	264, 1291,
	265, 1291,
	267, 1291,
	268, 1291,
	270, 1291,
	271, 1291,
	274, 1291,
	278, 1291,
	279, 1291,
	280, 1291,
	283, 1291,
	284, 1291,
	285, 1291,
	286, 1291,
	288, 1291,
	289, 1291,
	290, 1291,
	291, 1291,
	292, 1291,
	293, 1291,
	294, 1291,
	295, 1291,
	296, 1291,
	297, 1291,
	298, 1291,
	299, 1291,
	300, 1291,
	301, 1291,
	302, 1291,
	303, 1291,
	304, 1291,
	305, 1291,
	306, 1291,
	307, 1291,
	308, 1291,
	309, 1291,
	311, 1291,
	313, 1291,
	314, 1291,
	315, 1291,
	316, 1291,
	317, 1291,
	318, 1291,
	319, 1291,
	320, 1291,
	321, 1291,
	322, 1291,
	323, 1291,
	324, 1291,
	325, 1291,
	327, 1291,
	328, 1291,
	330, 1291,
	332, 1291,
	333, 1291,
	335, 1291,
	336, 1291,
	337, 1291,
	338, 1291,
	339, 1291,
	342, 1291,
	346, 1291,
	347, 1291,
	348, 1291,
	351, 1291,
	352, 1291,
	353, 1291,
	355, 1291,
	357, 1291,
	358, 1291,
	359, 1291,
	360, 1291,
	361, 1291,
	362, 1291,
	363, 1291,
	364, 1291,
	365, 1291,
	366, 1291,
	367, 1291,
	368, 1291,
	369, 1291,
	371, 1291,
	372, 1291,
	373, 1291,
	374, 1291,
	375, 1291,
	376, 1291,
	377, 1291,
	378, 1291,
	379, 1291,
	380, 1291,
	381, 1291,
	382, 1291,
	383, 1291,
	384, 1291,
	385, 1291,
	387, 1291,
	388, 1291,
	390, 1291,
	391, 1291,
	392, 1291,
	393, 1291,
	394, 1291,
	395, 1291,
	396, 1291,
	397, 1291,
	398, 1291,
	399, 1291,
	400, 1291,
	401, 1291,
	403, 1291,
	405, 1291,
	406, 1291,
	407, 1291,
	412, 1291,
	414, 1291,
	415, 1291,
	416, 1291,
	417, 1291,
	418, 1291,
	419, 1291,
	420, 1291,
	421, 1291,
	422, 1291,
	423, 1291,
	425, 1291,
	426, 1291,
	427, 1291,
	429, 1291,
	430, 1291,
	431, 1291,
	432, 1291,
	433, 1291,
	434, 1291,
	435, 1291,
	437, 1291,
	438, 1291,
	439, 1291,
	440, 1291,
	441, 1291,
	442, 1291,
	443, 1291,
	444, 1291,
	445, 1291,
	446, 1291,
	447, 1291,
	448, 1291,
	450, 1291,
	451, 1291,
	452, 1291,
	453, 1291,
	454, 1291,
	455, 1291,
	457, 1291,
	458, 1291,
	459, 1291,
	460, 1291,
	461, 1291,
	462, 1291,
	464, 1291,
	465, 1291,
	466, 1291,
	467, 1291,
	468, 1291,
	469, 1291,
	470, 1291,
	471, 1291,
	473, 1291,
	475, 1291,
	476, 1291,
	477, 1291,
	478, 1291,
	479, 1291,
	480, 1291,
	481, 1291,
	482, 1291,
	483, 1291,
	484, 1291,
	485, 1291,
	486, 1291,
	487, 1291,
	488, 1291,
	489, 1291,
	490, 1291,
	492, 1291,
	493, 1291,
	495, 1291,
	496, 1291,
	498, 1291,
	499, 1291,
	500, 1291,
	501, 1291,
	502, 1291,
	503, 1291,
	504, 1291,
	505, 1291,
	506, 1291,
	508, 1291,
	509, 1291,
	510, 1291,
	511, 1291,
	512, 1291,
	514, 1291,
	516, 1291,
	517, 1291,
	518, 1291,
	519, 1291,
	520, 1291,
	521, 1291,
	523, 1291,
	524, 1291,
	525, 1291,
	526, 1291,
	528, 1291,
	529, 1291,
	532, 1291,
	533, 1291,
	534, 1291,
	535, 1291,
	536, 1291,
	537, 1291,
	538, 1291,
	540, 1291,
	543, 1291,
	544, 1291,
	545, 1291,
	546, 1291,
	547, 1291,
	548, 1291,
	550, 1291,
	551, 1291,
	552, 1291,
	553, 1291,
	555, 1291,
	560, 1291,
	561, 1291,
	562, 1291,
	563, 1291,
	564, 1291,
	565, 1291,
	-2, 0,
	-1, 757,
	186, 2352,
	513, 2352,
	577, 2352,
	596, 2352,
	-2, 0,
	-1, 758,
	186, 2459,
	513, 2459,
	577, 2459,
	596, 2459,
	-2, 0,
	-1, 759,
	186, 2339,
	513, 2339,
	577, 2339,
	596, 2339,
	-2, 0,
	-1, 761,
	186, 2595,
	513, 2595,
	577, 2595,
	596, 2595,
	-2, 0,
	-1, 763,
	186, 2636,
	513, 2636,
	577, 2636,
	596, 2636,
	-2, 0,
	-1, 771,
	186, 2486,
	513, 2486,
	577, 2486,
	596, 2486,
	-2, 691,
	-1, 806,
	596, 2288,
	599, 2288,
	-2, 981,
	-1, 807,
	596, 2290,
	599, 2290,
	-2, 982,
	-1, 808,
	596, 2289,
	599, 2289,
	-2, 983,
	-1, 809,
	599, 2214,
	-2, 984,
	-1, 832,
	182, 255,
	-2, 0,
	-1, 856,
	43, 2261,
	-2, 0,
	-1, 857,
	550, 1269,
	-2, 1051,
	-1, 873,
	4, 1696,
	21, 1696,
	22, 1696,
	23, 1696,
	24, 1696,
	25, 1696,
	26, 1696,
	27, 1696,
	29, 1696,
	30, 1696,
	36, 1696,
	41, 1696,
	42, 1696,
	44, 1696,
	45, 1696,
	46, 1696,
	47, 1696,
	48, 1696,
	49, 1696,
	50, 1696,
	51, 1696,
	53, 1696,
	54, 1696,
	55, 1696,
	56, 1696,
	58, 1696,
	59, 1696,
	60, 1696,
	61, 1696,
	62, 1696,
	63, 1696,
	64, 1696,
	68, 1696,
	69, 1696,
	70, 1696,
	71, 1696,
	73, 1696,
	74, 1696,
	75, 1696,
	79, 1696,
	80, 1696,
	81, 1696,
	82, 1696,
	83, 1696,
	84, 1696,
	85, 1696,
	88, 1696,
	89, 1696,
	90, 1696,
	91, 1696,
	92, 1696,
	94, 1696,
	96, 1696,
	97, 1696,
	98, 1696,
	99, 1696,
	100, 1696,
	101, 1696,
	103, 1696,
	104, 1696,
	105, 1696,
	107, 1696,
	108, 1696,
	109, 1696,
	117, 1696,
	118, 1696,
	119, 1696,
	120, 1696,
	121, 1696,
	123, 1696,
	124, 1696,
	125, 1696,
	127, 1696,
	128, 1696,
	129, 1696,
	131, 1696,
	132, 1696,
	133, 1696,
	135, 1696,
	136, 1696,
	137, 1696,
	140, 1696,
	141, 1696,
	142, 1696,
	144, 1696,
	145, 1696,
	147, 1696,
	148, 1696,
	149, 1696,
	151, 1696,
	152, 1696,
	153, 1696,
	154, 1696,
	155, 1696,
	156, 1696,
	157, 1696,
	158, 1696,
	159, 1696,
	160, 1696,
	161, 1696,
	162, 1696,
	163, 1696,
	164, 1696,
	165, 1696,
	166, 1696,
	168, 1696,
	174, 1696,
	175, 1696,
	176, 1696,
	177, 1696,
	181, 1696,
	183, 1696,
	184, 1696,
	188, 1696,
	189, 1696,
	190, 1696,
	191, 1696,
	192, 1696,
	193, 1696,
	194, 1696,
	195, 1696,
	196, 1696,
	197, 1696,
	198, 1696,
	199, 1696,
	200, 1696,
	201, 1696,
	203, 1696,
	204, 1696,
	206, 1696,
	207, 1696,
	209, 1696,
	210, 1696,
	211, 1696,
	212, 1696,
	213, 1696,
	214, 1696,
	215, 1696,
	216, 1696,
	217, 1696,
	219, 1696,
	220, 1696,
	222, 1696,
	223, 1696,
	224, 1696,
	225, 1696,
	226, 1696,
	230, 1696,
	231, 1696,
	232, 1696,
	233, 1696,
	234, 1696,
	237, 1696,
	238, 1696,
	239, 1696,
	241, 1696,
	243, 1696,
	244, 1696,
	246, 1696,
	248, 1696,
	249, 1696,
	250, 1696,
	252, 1696,
	256, 1696,
	257, 1696,
	258, 1696,
	259, 1696,
	260, 1696,
	261, 1696,
	263, 1696,
	264, 1696,
	265, 1696,
	267, 1696,
	268, 1696,
	270, 1696,
	271, 1696,
	274, 1696,
	278, 1696,
	279, 1696,
	280, 1696,
	283, 1696,
	284, 1696,
	285, 1696,
	286, 1696,
	288, 1696,
	289, 1696,
	290, 1696,
	291, 1696,
	292, 1696,
	293, 1696,
	294, 1696,
	295, 1696,
	296, 1696,
	297, 1696,
	298, 1696,
	299, 1696,
	300, 1696,
	301, 1696,
	302, 1696,
	303, 1696,
	304, 1696,
	305, 1696,
	306, 1696,
	307, 1696,
	308, 1696,
	309, 1696,
	311, 1696,
	313, 1696,
	314, 1696,
	315, 1696,
	316, 1696,
	317, 1696,
	318, 1696,
	319, 1696,
	320, 1696,
	321, 1696,
	322, 1696,
	323, 1696,
	324, 1696,
	325, 1696,
	327, 1696,
	328, 1696,
	330, 1696,
	332, 1696,
	333, 1696,
	335, 1696,
	336, 1696,
	337, 1696,
	338, 1696,
	339, 1696,
	342, 1696,
	346, 1696,
	347, 1696,
	348, 1696,
	351, 1696,
	352, 1696,
	353, 1696,
	355, 1696,
	357, 1696,
	358, 1696,
	359, 1696,
	360, 1696,
	361, 1696,
	362, 1696,
	363, 1696,
	364, 1696,
	365, 1696,
	366, 1696,
	367, 1696,
	368, 1696,
	369, 1696,
	371, 1696,
	372, 1696,
	373, 1696,
	374, 1696,
	375, 1696,
	376, 1696,
	377, 1696,
	378, 1696,
	379, 1696,
	380, 1696,
	381, 1696,
	382, 1696,
	383, 1696,
	384, 1696,
	385, 1696,
	387, 1696,
	388, 1696,
	390, 1696,
	391, 1696,
	392, 1696,
	393, 1696,
	394, 1696,
	395, 1696,
	396, 1696,
	397, 1696,
	398, 1696,
	399, 1696,
	400, 1696,
	401, 1696,
	403, 1696,
	405, 1696,
	406, 1696,
	407, 1696,
	412, 1696,
	414, 1696,
	415, 1696,
	416, 1696,
	417, 1696,
	418, 1696,
	419, 1696,
	420, 1696,
	421, 1696,
	422, 1696,
	423, 1696,
	425, 1696,
	426, 1696,
	427, 1696,
	429, 1696,
	430, 1696,
	431, 1696,
	432, 1696,
	433, 1696,
	434, 1696,
	435, 1696,
	437, 1696,
	438, 1696,
	439, 1696,
	440, 1696,
	441, 1696,
	442, 1696,
	443, 1696,
	444, 1696,
	445, 1696,
	446, 1696,
	447, 1696,
	448, 1696,
	450, 1696,
	451, 1696,
	452, 1696,
	453, 1696,
	454, 1696,
	455, 1696,
	457, 1696,
	458, 1696,
	459, 1696,
	460, 1696,
	461, 1696,
	462, 1696,
	464, 1696,
	465, 1696,
	466, 1696,
	467, 1696,
	468, 1696,
	469, 1696,
	470, 1696,
	471, 1696,
	473, 1696,
	475, 1696,
	476, 1696,
	477, 1696,
	478, 1696,
	479, 1696,
	480, 1696,
	481, 1696,
	482, 1696,
	483, 1696,
	484, 1696,
	485, 1696,
	486, 1696,
	487, 1696,
	488, 1696,
	489, 1696,
	490, 1696,
	492, 1696,
	493, 1696,
	495, 1696,
	496, 1696,
	498, 1696,
	499, 1696,
	500, 1696,
	501, 1696,
	502, 1696,
	503, 1696,
	504, 1696,
	505, 1696,
	506, 1696,
	508, 1696,
	509, 1696,
	510, 1696,
	511, 1696,
	512, 1696,
	514, 1696,
	516, 1696,
	517, 1696,
	518, 1696,
	519, 1696,
	520, 1696,
	521, 1696,
	523, 1696,
	524, 1696,
	525, 1696,
	526, 1696,
	528, 1696,
	529, 1696,
	532, 1696,
	533, 1696,
	534, 1696,
	535, 1696,
	536, 1696,
	537, 1696,
	538, 1696,
	540, 1696,
	543, 1696,
	544, 1696,
	545, 1696,
	546, 1696,
	547, 1696,
	548, 1696,
	550, 1696,
	551, 1696,
	552, 1696,
	553, 1696,
	555, 1696,
	560, 1696,
	561, 1696,
	562, 1696,
	563, 1696,
	564, 1696,
	565, 1696,
	-2, 0,
	-1, 883,
	260, 402,
	-2, 0,
	-1, 955,
	392, 864,
	455, 864,
	496, 864,
	518, 864,
	-2, 0,
	-1, 956,
	392, 863,
	455, 863,
	496, 863,
	518, 863,
	-2, 801,
	-1, 960,
	1, 915,
	593, 915,
	595, 915,
	597, 915,
	-2, 0,
	-1, 962,
	1, 838,
	593, 838,
	595, 838,
	597, 838,
	-2, 0,
	-1, 963,
	1, 842,
	593, 842,
	595, 842,
	597, 842,
	-2, 0,
	-1, 964,
	1, 980,
	182, 980,
	593, 980,
	595, 980,
	597, 980,
	-2, 0,
	-1, 972,
	1, 869,
	593, 869,
	595, 869,
	597, 869,
	-2, 0,
	-1, 979,
	1, 915,
	593, 915,
	595, 915,
	597, 915,
	-2, 0,
	-1, 980,
	1, 917,
	593, 917,
	595, 917,
	597, 917,
	-2, 0,
	-1, 981,
	1, 920,
	593, 920,
	595, 920,
	597, 920,
	-2, 0,
	-1, 987,
	1, 944,
	593, 944,
	595, 944,
	597, 944,
	-2, 0,
	-1, 988,
	1, 946,
	593, 946,
	595, 946,
	597, 946,
	-2, 0,
	-1, 993,
	1, 974,
	593, 974,
	595, 974,
	597, 974,
	-2, 0,
	-1, 1042,
	169, 1570,
	182, 1570,
	273, 1570,
	340, 1570,
	-2, 1506,
	-1, 1057,
	169, 1569,
	182, 1569,
	273, 1569,
	340, 1569,
	-2, 1503,
	-1, 1084,
	596, 2287,
	-2, 699,
	-1, 1113,
	5, 2279,
	594, 2277,
	-2, 2268,
	-1, 1121,
	5, 2300,
	594, 2297,
	-2, 2288,
	-1, 1122,
	5, 2301,
	594, 2298,
	-2, 2289,
	-1, 1130,
	596, 2285,
	-2, 2267,
	-1, 1131,
	594, 2719,
	-2, 2286,
	-1, 1154,
	594, 2718,
	-2, 2302,
	-1, 1155,
	5, 1771,
	-2, 2689,
	-1, 1156,
	5, 1772,
	-2, 2690,
	-1, 1157,
	5, 1773,
	-2, 2704,
	-1, 1158,
	5, 1774,
	-2, 2668,
	-1, 1159,
	5, 1775,
	-2, 2702,
	-1, 1160,
	5, 1783,
	-2, 2681,
	-1, 1161,
	5, 1770,
	-2, 2677,
	-1, 1162,
	5, 1770,
	-2, 2676,
	-1, 1163,
	5, 1770,
	-2, 2695,
	-1, 1164,
	5, 1781,
	-2, 2670,
	-1, 1165,
	5, 1786,
	-2, 2669,
	-1, 1166,
	5, 1788,
	-2, 2714,
	-1, 1169,
	5, 1810,
	-2, 2707,
	-1, 1170,
	5, 1802,
	-2, 2708,
	-1, 1171,
	5, 1810,
	-2, 2709,
	-1, 1172,
	5, 1806,
	-2, 2710,
	-1, 1173,
	5, 1756,
	-2, 2682,
	-1, 1174,
	5, 1757,
	-2, 2683,
	-1, 1175,
	5, 1758,
	-2, 2671,
	-1, 1203,
	5, 1793,
	-2, 2715,
	-1, 1204,
	5, 1794,
	-2, 2705,
	-1, 1205,
	5, 1795,
	551, 1795,
	-2, 2672,
	-1, 1206,
	5, 1796,
	551, 1796,
	-2, 2673,
	-1, 1243,
	594, 2297,
	-2, 2288,
	-1, 1244,
	594, 2298,
	-2, 2289,
	-1, 1344,
	186, 2636,
	513, 2636,
	577, 2636,
	596, 2636,
	-2, 0,
	-1, 1347,
	1, 676,
	597, 676,
	-2, 1418,
	-1, 1475,
	359, 2262,
	414, 2262,
	457, 2262,
	587, 2262,
	-2, 2252,
	-1, 1486,
	598, 2262,
	-2, 2264,
	-1, 1494,
	1, 1266,
	419, 1230,
	457, 1230,
	572, 1230,
	593, 1266,
	595, 1266,
	597, 1266,
	-2, 1555,
	-1, 1500,
	202, 1363,
	221, 1363,
	427, 1363,
	-2, 0,
	-1, 1545,
	399, 1050,
	550, 1050,
	-2, 397,
	-1, 1562,
	43, 2260,
	-2, 1016,
	-1, 1569,
	1, 1266,
	593, 1266,
	595, 1266,
	597, 1266,
	-2, 1555,
	-1, 1577,
	4, 1291,
	21, 1291,
	22, 1291,
	23, 1291,
	24, 1291,
	25, 1291,
	26, 1291,
	27, 1291,
	29, 1291,
	30, 1291,
	36, 1291,
	41, 1291,
	42, 1291,
	44, 1291,
	45, 1291,
	46, 1291,
	47, 1291,
	48, 1291,
	49, 1291,
	50, 1291,
	51, 1291,
	53, 1291,
	54, 1291,
	55, 1291,
	56, 1291,
	58, 1291,
	59, 1291,
	60, 1291,
	61, 1291,
	62, 1291,
	63, 1291,
	64, 1291,
	68, 1291,
	69, 1291,
	70, 1291,
	71, 1291,
	73, 1291,
	74, 1291,
	75, 1291,
	79, 1291,
	80, 1291,
	81, 1291,
	82, 1291,
	83, 1291,
	84, 1291,
	85, 1291,
	88, 1291,
	89, 1291,
	90, 1291,
	91, 1291,
	92, 1291,
	94, 1291,
	96, 1291,
	97, 1291,
	98, 1291,
	99, 1291,
	100, 1291,
	101, 1291,
	103, 1291,
	104, 1291,
	105, 1291,
	107, 1291,
	108, 1291,
	109, 1291,
	117, 1291,
	118, 1291,
	119, 1291,
	120, 1291,
	121, 1291,
	123, 1291,
	124, 1291,
	125, 1291,
	127, 1291,
	128, 1291,
	129, 1291,
	131, 1291,
	132, 1291,
	133, 1291,
	135, 1291,
	136, 1291,
	137, 1291,
	140, 1291,
	141, 1291,
	142, 1291,
	144, 1291,
	145, 1291,
	147, 1291,
	148, 1291,
	149, 1291,
	151, 1291,
	152, 1291,
	153, 1291,
	154, 1291,
	155, 1291,
	156, 1291,
	157, 1291,
	158, 1291,
	159, 1291,
	160, 1291,
	161, 1291,
	162, 1291,
	163, 1291,
	164, 1291,
	165, 1291,
	166, 1291,
	174, 1291,
	175, 1291,
	176, 1291,
	177, 1291,
	181, 1291,
	183, 1291,
	184, 1291,
	188, 1291,
	189, 1291,
	190, 1291,
	191, 1291,
	192, 1291,
	193, 1291,
	194, 1291,
	195, 1291,
	196, 1291,
	197, 1291,
	198, 1291,
	199, 1291,
	200, 1291,
	201, 1291,
	203, 1291,
	204, 1291,
	206, 1291,
	207, 1291,
	209, 1291,
	210, 1291,
	211, 1291,
	212, 1291,
	213, 1291,
	214, 1291,
	215, 1291,
	216, 1291,
	217, 1291,
	219, 1291,
	220, 1291,
	222, 1291,
	223, 1291,
	224, 1291,
	225, 1291,
	226, 1291,
	231, 1291,
	232, 1291,
	233, 1291,
	234, 1291,
	237, 1291,
	238, 1291,
	239, 1291,
	241, 1291,
	243, 1291,
	244, 1291,
	246, 1291,
	248, 1291,
	249, 1291,
	250, 1291,
	252, 1291,
	256, 1291,
	257, 1291,
	258, 1291,
	259, 1291,
	260, 1291,
	261, 1291,
	263, 1291,
	264, 1291,
	265, 1291,
	267, 1291,
	268, 1291,
	270, 1291,
	271, 1291,
	274, 1291,
	278, 1291,
	279, 1291,
	280, 1291,
	283, 1291,
	284, 1291,
	285, 1291,
	286, 1291,
	288, 1291,
	289, 1291,
	290, 1291,
	291, 1291,
	292, 1291,
	293, 1291,
	294, 1291,
	295, 1291,
	296, 1291,
	297, 1291,
	298, 1291,
	299, 1291,
	300, 1291,
	301, 1291,
	302, 1291,
	303, 1291,
	304, 1291,
	305, 1291,
	306, 1291,
	307, 1291,
	308, 1291,
	309, 1291,
	311, 1291,
	313, 1291,
	314, 1291,
	315, 1291,
	316, 1291,
	317, 1291,
	318, 1291,
	319, 1291,
	320, 1291,
	321, 1291,
	322, 1291,
	323, 1291,
	324, 1291,
	325, 1291,
	327, 1291,
	328, 1291,
	332, 1291,
	333, 1291,
	335, 1291,
	336, 1291,
	337, 1291,
	338, 1291,
	339, 1291,
	342, 1291,
	344, 1291,
	346, 1291,
	347, 1291,
	348, 1291,
	351, 1291,
	352, 1291,
	353, 1291,
	355, 1291,
	357, 1291,
	358, 1291,
	359, 1291,
	360, 1291,
	361, 1291,
	362, 1291,
	363, 1291,
	364, 1291,
	365, 1291,
	366, 1291,
	367, 1291,
	368, 1291,
	369, 1291,
	371, 1291,
	372, 1291,
	373, 1291,
	374, 1291,
	375, 1291,
	376, 1291,
	377, 1291,
	378, 1291,
	379, 1291,
	380, 1291,
	381, 1291,
	382, 1291,
	383, 1291,
	384, 1291,
	385, 1291,
	387, 1291,
	388, 1291,
	390, 1291,
	391, 1291,
	392, 1291,
	393, 1291,
	394, 1291,
	395, 1291,
	396, 1291,
	397, 1291,
	398, 1291,
	399, 1291,
	400, 1291,
	401, 1291,
	403, 1291,
	405, 1291,
	406, 1291,
	407, 1291,
	412, 1291,
	414, 1291,
	415, 1291,
	416, 1291,
	417, 1291,
	418, 1291,
	419, 1291,
	420, 1291,
	421, 1291,
	422, 1291,
	423, 1291,
	425, 1291,
	426, 1291,
	427, 1291,
	429, 1291,
	430, 1291,
	431, 1291,
	432, 1291,
	433, 1291,
	434, 1291,
	435, 1291,
	437, 1291,
	438, 1291,
	439, 1291,
	440, 1291,
	441, 1291,
	442, 1291,
	443, 1291,
	444, 1291,
	445, 1291,
	446, 1291,
	447, 1291,
	448, 1291,
	450, 1291,
	451, 1291,
	452, 1291,
	453, 1291,
	454, 1291,
	455, 1291,
	457, 1291,
	458, 1291,
	459, 1291,
	460, 1291,
	461, 1291,
	462, 1291,
	464, 1291,
	465, 1291,
	466, 1291,
	467, 1291,
	468, 1291,
	469, 1291,
	470, 1291,
	471, 1291,
	473, 1291,
	475, 1291,
	476, 1291,
	477, 1291,
	478, 1291,
	479, 1291,
	480, 1291,
	481, 1291,
	482, 1291,
	483, 1291,
	484, 1291,
	485, 1291,
	486, 1291,
	487, 1291,
	488, 1291,
	489, 1291,
	490, 1291,
	492, 1291,
	493, 1291,
	495, 1291,
	496, 1291,
	498, 1291,
	499, 1291,
	500, 1291,
	501, 1291,
	502, 1291,
	503, 1291,
	504, 1291,
	505, 1291,
	506, 1291,
	508, 1291,
	509, 1291,
	510, 1291,
	511, 1291,
	512, 1291,
	514, 1291,
	516, 1291,
	517, 1291,
	518, 1291,
	519, 1291,
	520, 1291,
	521, 1291,
	523, 1291,
	524, 1291,
	525, 1291,
	526, 1291,
	528, 1291,
	529, 1291,
	532, 1291,
	533, 1291,
	534, 1291,
	535, 1291,
	536, 1291,
	537, 1291,
	538, 1291,
	540, 1291,
	543, 1291,
	544, 1291,
	545, 1291,
	546, 1291,
	547, 1291,
	548, 1291,
	550, 1291,
	551, 1291,
	552, 1291,
	553, 1291,
	555, 1291,
	560, 1291,
	561, 1291,
	562, 1291,
	563, 1291,
	564, 1291,
	565, 1291,
	-2, 0,
	-1, 1600,
	1, 542,
	593, 542,
	595, 542,
	597, 542,
	-2, 1526,
	-1, 1603,
	4, 2713,
	11, 2713,
	12, 2713,
	14, 2713,
	15, 2713,
	16, 2713,
	17, 2713,
	18, 2713,
	19, 2713,
	21, 2713,
	22, 2713,
	23, 2713,
	24, 2713,
	25, 2713,
	26, 2713,
	27, 2713,
	29, 2713,
	30, 2713,
	33, 2713,
	34, 2713,
	36, 2713,
	38, 2713,
	41, 2713,
	42, 2713,
	44, 2713,
	45, 2713,
	46, 2713,
	47, 2713,
	48, 2713,
	49, 2713,
	50, 2713,
	51, 2713,
	53, 2713,
	54, 2713,
	55, 2713,
	56, 2713,
	58, 2713,
	59, 2713,
	60, 2713,
	61, 2713,
	62, 2713,
	63, 2713,
	64, 2713,
	67, 2713,
	68, 2713,
	69, 2713,
	70, 2713,
	71, 2713,
	73, 2713,
	74, 2713,
	75, 2713,
	76, 2713,
	79, 2713,
	80, 2713,
	81, 2713,
	82, 2713,
	83, 2713,
	84, 2713,
	85, 2713,
	86, 2713,
	88, 2713,
	89, 2713,
	90, 2713,
	91, 2713,
	92, 2713,
	94, 2713,
	95, 2713,
	96, 2713,
	97, 2713,
	98, 2713,
	99, 2713,
	100, 2713,
	101, 2713,
	103, 2713,
	104, 2713,
	105, 2713,
	106, 2713,
	107, 2713,
	108, 2713,
	109, 2713,
	117, 2713,
	118, 2713,
	119, 2713,
	120, 2713,
	121, 2713,
	123, 2713,
	124, 2713,
	125, 2713,
	127, 2713,
	128, 2713,
	129, 2713,
	131, 2713,
	132, 2713,
	133, 2713,
	135, 2713,
	136, 2713,
	137, 2713,
	140, 2713,
	141, 2713,
	142, 2713,
	144, 2713,
	145, 2713,
	147, 2713,
	148, 2713,
	149, 2713,
	151, 2713,
	152, 2713,
	153, 2713,
	154, 2713,
	155, 2713,
	156, 2713,
	157, 2713,
	158, 2713,
	159, 2713,
	160, 2713,
	161, 2713,
	162, 2713,
	163, 2713,
	164, 2713,
	165, 2713,
	166, 2713,
	170, 2713,
	171, 2713,
	172, 2713,
	173, 2713,
	174, 2713,
	175, 2713,
	176, 2713,
	177, 2713,
	180, 2713,
	181, 2713,
	183, 2713,
	184, 2713,
	187, 2713,
	188, 2713,
	189, 2713,
	190, 2713,
	191, 2713,
	192, 2713,
	193, 2713,
	194, 2713,
	195, 2713,
	196, 2713,
	197, 2713,
	198, 2713,
	199, 2713,
	200, 2713,
	201, 2713,
	203, 2713,
	204, 2713,
	206, 2713,
	207, 2713,
	209, 2713,
	210, 2713,
	211, 2713,
	212, 2713,
	213, 2713,
	214, 2713,
	215, 2713,
	216, 2713,
	217, 2713,
	218, 2713,
	219, 2713,
	220, 2713,
	221, 2713,
	222, 2713,
	223, 2713,
	224, 2713,
	225, 2713,
	226, 2713,
	228, 2713,
	229, 2713,
	231, 2713,
	232, 2713,
	233, 2713,
	234, 2713,
	236, 2713,
	237, 2713,
	238, 2713,
	239, 2713,
	241, 2713,
	243, 2713,
	244, 2713,
	245, 2713,
	246, 2713,
	247, 2713,
	248, 2713,
	249, 2713,
	250, 2713,
	251, 2713,
	252, 2713,
	254, 2713,
	255, 2713,
	256, 2713,
	257, 2713,
	258, 2713,
	259, 2713,
	260, 2713,
	261, 2713,
	263, 2713,
	264, 2713,
	265, 2713,
	267, 2713,
	268, 2713,
	269, 2713,
	270, 2713,
	271, 2713,
	272, 2713,
	274, 2713,
	278, 2713,
	279, 2713,
	280, 2713,
	283, 2713,
	284, 2713,
	285, 2713,
	286, 2713,
	287, 2713,
	288, 2713,
	289, 2713,
	290, 2713,
	291, 2713,
	292, 2713,
	293, 2713,
	294, 2713,
	295, 2713,
	296, 2713,
	297, 2713,
	298, 2713,
	299, 2713,
	300, 2713,
	301, 2713,
	302, 2713,
	303, 2713,
	304, 2713,
	305, 2713,
	306, 2713,
	307, 2713,
	308, 2713,
	309, 2713,
	311, 2713,
	312, 2713,
	313, 2713,
	314, 2713,
	315, 2713,
	316, 2713,
	317, 2713,
	318, 2713,
	319, 2713,
	320, 2713,
	321, 2713,
	322, 2713,
	323, 2713,
	324, 2713,
	325, 2713,
	327, 2713,
	328, 2713,
	331, 2713,
	332, 2713,
	333, 2713,
	335, 2713,
	336, 2713,
	337, 2713,
	338, 2713,
	339, 2713,
	342, 2713,
	346, 2713,
	347, 2713,
	348, 2713,
	349, 2713,
	351, 2713,
	352, 2713,
	353, 2713,
	355, 2713,
	357, 2713,
	358, 2713,
	359, 2713,
	360, 2713,
	361, 2713,
	362, 2713,
	363, 2713,
	364, 2713,
	365, 2713,
	366, 2713,
	367, 2713,
	368, 2713,
	369, 2713,
	371, 2713,
	372, 2713,
	373, 2713,
	374, 2713,
	375, 2713,
	376, 2713,
	377, 2713,
	378, 2713,
	379, 2713,
	380, 2713,
	381, 2713,
	382, 2713,
	383, 2713,
	384, 2713,
	385, 2713,
	387, 2713,
	388, 2713,
	390, 2713,
	391, 2713,
	392, 2713,
	393, 2713,
	394, 2713,
	395, 2713,
	396, 2713,
	397, 2713,
	398, 2713,
	399, 2713,
	400, 2713,
	401, 2713,
	403, 2713,
	405, 2713,
	406, 2713,
	407, 2713,
	412, 2713,
	413, 2713,
	414, 2713,
	415, 2713,
	416, 2713,
	417, 2713,
	418, 2713,
	419, 2713,
	420, 2713,
	421, 2713,
	422, 2713,
	423, 2713,
	425, 2713,
	426, 2713,
	427, 2713,
	428, 2713,
	429, 2713,
	430, 2713,
	431, 2713,
	432, 2713,
	433, 2713,
	434, 2713,
	435, 2713,
	436, 2713,
	437, 2713,
	438, 2713,
	439, 2713,
	440, 2713,
	441, 2713,
	442, 2713,
	443, 2713,
	444, 2713,
	445, 2713,
	446, 2713,
	447, 2713,
	448, 2713,
	450, 2713,
	451, 2713,
	452, 2713,
	453, 2713,
	454, 2713,
	455, 2713,
	457, 2713,
	458, 2713,
	459, 2713,
	460, 2713,
	461, 2713,
	462, 2713,
	463, 2713,
	464, 2713,
	465, 2713,
	466, 2713,
	467, 2713,
	468, 2713,
	469, 2713,
	470, 2713,
	471, 2713,
	473, 2713,
	475, 2713,
	476, 2713,
	477, 2713,
	478, 2713,
	479, 2713,
	480, 2713,
	481, 2713,
	482, 2713,
	483, 2713,
	484, 2713,
	485, 2713,
	486, 2713,
	487, 2713,
	488, 2713,
	489, 2713,
	490, 2713,
	492, 2713,
	493, 2713,
	494, 2713,
	495, 2713,
	496, 2713,
	498, 2713,
	499, 2713,
	500, 2713,
	501, 2713,
	502, 2713,
	503, 2713,
	504, 2713,
	505, 2713,
	506, 2713,
	508, 2713,
	509, 2713,
	510, 2713,
	511, 2713,
	512, 2713,
	514, 2713,
	516, 2713,
	517, 2713,
	518, 2713,
	519, 2713,
	520, 2713,
	521, 2713,
	523, 2713,
	524, 2713,
	525, 2713,
	526, 2713,
	528, 2713,
	529, 2713,
	532, 2713,
	533, 2713,
	534, 2713,
	535, 2713,
	536, 2713,
	537, 2713,
	538, 2713,
	540, 2713,
	543, 2713,
	544, 2713,
	545, 2713,
	546, 2713,
	547, 2713,
	548, 2713,
	550, 2713,
	551, 2713,
	552, 2713,
	553, 2713,
	555, 2713,
	560, 2713,
	561, 2713,
	562, 2713,
	563, 2713,
	564, 2713,
	565, 2713,
	566, 2713,
	568, 2713,
	575, 2713,
	576, 2713,
	577, 2713,
	578, 2713,
	579, 2713,
	580, 2713,
	582, 2713,
	583, 2713,
	584, 2713,
	585, 2713,
	586, 2713,
	587, 2713,
	588, 2713,
	589, 2713,
	590, 2713,
	592, 2713,
	595, 2713,
	596, 2713,
	598, 2713,
	599, 2713,
	-2, 0,
	-1, 1608,
	186, 2595,
	513, 2595,
	577, 2595,
	596, 2595,
	-2, 0,
	-1, 1657,
	392, 864,
	455, 864,
	496, 864,
	518, 864,
	-2, 0,
	-1, 1668,
	1, 1363,
	593, 1363,
	595, 1363,
	597, 1363,
	-2, 0,
	-1, 1685,
	1, 859,
	593, 859,
	595, 859,
	597, 859,
	-2, 0,
	-1, 1686,
	1, 902,
	593, 902,
	595, 902,
	597, 902,
	-2, 0,
	-1, 1687,
	1, 910,
	593, 910,
	595, 910,
	597, 910,
	-2, 0,
	-1, 1690,
	1, 868,
	593, 868,
	595, 868,
	597, 868,
	-2, 0,
	-1, 1692,
	1, 874,
	593, 874,
	595, 874,
	597, 874,
	-2, 0,
	-1, 1695,
	1, 870,
	593, 870,
	595, 870,
	597, 870,
	-2, 0,
	-1, 1700,
	1, 884,
	593, 884,
	595, 884,
	597, 884,
	-2, 0,
	-1, 1731,
	1, 2578,
	593, 2578,
	595, 2578,
	596, 2578,
	597, 2578,
	-2, 0,
	-1, 1735,
	1, 955,
	593, 955,
	595, 955,
	597, 955,
	-2, 0,
	-1, 1750,
	1, 1413,
	597, 1413,
	-2, 1418,
	-1, 1753,
	169, 1569,
	182, 1569,
	273, 1569,
	340, 1569,
	-2, 1507,
	-1, 1853,
	150, 1528,
	169, 1528,
	182, 1528,
	240, 1528,
	273, 1528,
	340, 1528,
	350, 1528,
	530, 1528,
	-2, 1975,
	-1, 1913,
	595, 2148,
	-2, 0,
	-1, 1948,
	150, 1528,
	169, 1528,
	182, 1528,
	240, 1528,
	273, 1528,
	340, 1528,
	350, 1528,
	530, 1528,
	-2, 1657,
	-1, 1983,
	513, 2592,
	596, 2592,
	599, 2592,
	-2, 0,
	-1, 2000,
	594, 1798,
	-2, 1786,
	-1, 2032,
	186, 2592,
	596, 2592,
	599, 2592,
	-2, 0,
	-1, 2080,
	1, 678,
	597, 678,
	-2, 1418,
	-1, 2213,
	221, 256,
	-2, 2296,
	-1, 2214,
	221, 257,
	-2, 305,
	-1, 2318,
	1, 861,
	593, 861,
	595, 861,
	597, 861,
	-2, 0,
	-1, 2319,
	1, 904,
	593, 904,
	595, 904,
	597, 904,
	-2, 0,
	-1, 2320,
	1, 912,
	593, 912,
	595, 912,
	597, 912,
	-2, 0,
	-1, 2321,
	1, 957,
	593, 957,
	595, 957,
	597, 957,
	-2, 0,
	-1, 2361,
	1, 886,
	593, 886,
	595, 886,
	597, 886,
	-2, 0,
	-1, 2379,
	1, 940,
	593, 940,
	595, 940,
	597, 940,
	-2, 0,
	-1, 2424,
	434, 1596,
	435, 1596,
	-2, 1831,
	-1, 2455,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1851,
	-1, 2456,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1852,
	-1, 2457,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1853,
	-1, 2458,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1854,
	-1, 2459,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1855,
	-1, 2460,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1856,
	-1, 2461,
	95, 0,
	254, 0,
	255, 0,
	579, 0,
	580, 0,
	-2, 1857,
	-1, 2462,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1858,
	-1, 2474,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1870,
	-1, 2475,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1871,
	-1, 2476,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1872,
	-1, 2480,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1879,
	-1, 2486,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1883,
	-1, 2488,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1891,
	-1, 2489,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1892,
	-1, 2490,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1893,
	-1, 2491,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1894,
	-1, 2663,
	5, 2300,
	186, 2159,
	594, 2297,
	-2, 2288,
	-1, 2664,
	186, 2160,
	-2, 2664,
	-1, 2665,
	186, 2161,
	-2, 2485,
	-1, 2666,
	186, 2162,
	-2, 2370,
	-1, 2667,
	186, 2163,
	-2, 2425,
	-1, 2668,
	186, 2164,
	-2, 2470,
	-1, 2669,
	186, 2165,
	-2, 2590,
	-1, 2670,
	186, 2166,
	-2, 1958,
	-1, 2741,
	1, 1658,
	2, 1658,
	106, 1658,
	150, 1658,
	169, 1658,
	182, 1658,
	187, 1658,
	205, 1658,
	208, 1658,
	236, 1658,
	240, 1658,
	251, 1658,
	269, 1658,
	273, 1658,
	312, 1658,
	340, 1658,
	344, 1658,
	350, 1658,
	424, 1658,
	428, 1658,
	530, 1658,
	541, 1658,
	557, 1658,
	558, 1658,
	559, 1658,
	569, 1658,
	593, 1658,
	595, 1658,
	597, 1658,
	599, 1658,
	-2, 1657,
	-1, 2754,
	594, 2269,
	-2, 2283,
	-1, 2756,
	1, 322,
	557, 322,
	-2, 1555,
	-1, 2784,
	594, 1797,
	-2, 1787,
	-1, 2969,
	1, 1266,
	419, 1230,
	457, 1230,
	572, 1230,
	593, 1266,
	595, 1266,
	597, 1266,
	-2, 1555,
	-1, 3147,
	345, 1599,
	-2, 2703,
	-1, 3148,
	345, 1600,
	-2, 2575,
	-1, 3152,
	434, 2225,
	435, 2225,
	-2, 1956,
	-1, 3153,
	434, 2229,
	435, 2229,
	-2, 1957,
	-1, 3154,
	434, 2226,
	435, 2226,
	-2, 1956,
	-1, 3155,
	434, 2230,
	435, 2230,
	-2, 1957,
	-1, 3168,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1881,
	-1, 3169,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1885,
	-1, 3175,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1887,
	-1, 3398,
	1, 675,
	593, 675,
	595, 675,
	597, 675,
	-2, 1418,
	-1, 3568,
	43, 2260,
	-2, 1017,
	-1, 3573,
	1, 1266,
	593, 1266,
	595, 1266,
	597, 1266,
	-2, 1555,
	-1, 3680,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1889,
	-1, 3687,
	245, 0,
	247, 0,
	331, 0,
	-2, 1908,
	-1, 3755,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1937,
	-1, 3756,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1938,
	-1, 3757,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1939,
	-1, 3761,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1943,
	-1, 3762,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1944,
	-1, 3763,
	14, 0,
	15, 0,
	16, 0,
	575, 0,
	576, 0,
	577, 0,
	-2, 1945,
	-1, 3810,
	594, 2270,
	-2, 2284,
	-1, 3983,
	596, 2821,
	-2, 1481,
	-1, 4041,
	245, 0,
	247, 0,
	331, 0,
	-2, 1909,
	-1, 4044,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1912,
	-1, 4045,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1914,
	-1, 4142,
	596, 2285,
	-2, 1301,
	-1, 4293,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1913,
	-1, 4294,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 1915,
	-1, 4305,
	245, 0,
	-2, 1948,
	-1, 4489,
	245, 0,
	-2, 1949,
	-1, 4683,
	50, 0,
	218, 0,
	272, 0,
	463, 0,
	566, 0,
	578, 0,
	-2, 2667,
}

const sqlPrivate = 57344

const sqlLast = 130879

var sqlAct = [...]int{
	270, 4798, 3557, 4411, 4877, 3306, 3053, 4527, 3040, 4676,
	4675, 4739, 4785, 4519, 4353, 2847, 4682, 4664, 4554, 3556,
	4693, 4814, 4575, 2128, 4651, 4550, 4632, 4629, 4611, 4442,
	2210, 4694, 2913, 4138, 4695, 4418, 4336, 2891, 4396, 3720,
	4249, 2285, 1236, 4493, 1247, 4752, 4681, 4185, 3672, 4244,
	4024, 4314, 4210, 4282, 4358, 1316, 2434, 3967, 3975, 1320,
	4231, 4427, 4233, 3420, 4139, 3903, 3161, 4224, 698, 1309,
	4120, 4456, 3590, 1762, 2696, 808, 2503, 3482, 3584, 3948,
	2062, 4254, 2926, 3932, 1058, 3930, 3542, 2442, 3552, 1067,
	2049, 3423, 769, 2136, 1954, 1380, 4310, 3062, 2435, 3629,
	3029, 808, 3075, 3631, 3010, 3064, 2999, 3813, 3350, 3329,
	2294, 3321, 3535, 4080, 1988, 2037, 4023, 1624, 3534, 1987,
	3289, 3072, 3055, 709, 3041, 1472, 885, 3312, 3024, 1311,
	2258, 881, 4, 3061, 1665, 3310, 3026, 1066, 178, 2199,
	2197, 2940, 1923, 2976, 3442, 4786, 2147, 2849, 3781, 1899,
	2439, 3288, 2734, 2733, 4494, 1861, 1831, 2516, 3145, 3417,
	2292, 1479, 3071, 876, 2736, 1314, 803, 2581, 1564, 2945,
	3003, 1227, 949, 764, 2193, 2198, 2174, 2116, 2181, 1509,
	2890, 1117, 1750, 1124, 3011, 2120, 1288, 1362, 2060, 3357,
	2572, 1122, 2714, 2500, 2423, 2106, 1924, 264, 2406, 2767,
	3409, 2404, 3554, 263, 1601, 3034, 2245, 2872, 1622, 809,
	1567, 4576, 108, 2583, 685, 742, 810, 4799, 707, 805,
	1349, 1302, 3065, 2766, 2835, 2575, 2693, 3924, 2723, 1940,
	2704, 178, 1943, 1209, 1230, 1933, 2553, 1244, 2625, 187,
	1322, 1894, 1845, 2659, 1763, 2405, 2407, 1764, 1685, 188,
	1299, 750, 1700, 1167, 1599, 2207, 1592, 2244, 762, 2271,
	1504, 2135, 4740, 1113, 2035, 2038, 1226, 2428, 1098, 702,
	44, 43, 814, 41, 32, 1207, 30, 28, 817, 725,
	699, 857, 710, 1232, 3198, 1749, 1769, 1515, 970, 798,
	3795, 3192, 3796, 3308, 4720, 1062, 4329, 2051, 814, 2051,
	2051, 2051, 4890, 858, 817, 4880, 2713, 2051, 2051, 3609,
	2051, 3600, 4864, 4863, 4853, 1508, 2713, 2713, 2219, 4834,
	900, 4832, 4771, 4357, 4728, 4357, 2219, 4717, 4729, 4715,
	4326, 2713, 4712, 2713, 2219, 3599, 4713, 4709, 4679, 4678,
	4677, 4710, 2219, 2219, 2072, 4672, 4671, 4662, 4660, 2072,
	2072, 4357, 4357, 1631, 4657, 1691, 1062, 3382, 4430, 1052,
	1617, 1529, 4627, 4600, 1224, 4593, 4357, 2775, 4592, 2713,
	4587, 4586, 2713, 4580, 4357, 4357, 4546, 2219, 4491, 4473,
	4201, 4470, 2775, 4010, 4467, 2219, 4420, 4374, 4357, 4101,
	4421, 2219, 4373, 1210, 1210, 4364, 2219, 4363, 3380, 2219,
	4356, 4357, 1063, 4321, 4357, 4295, 4273, 2219, 4262, 2775,
	2072, 4180, 3609, 4163, 1358, 2713, 2069, 2713, 1043, 1777,
	1778, 3365, 1810, 1811, 1812, 1821, 1822, 1823, 1042, 2219,
	4043, 3991, 3985, 3946, 2775, 3626, 3626, 3947, 2796, 3805,
	1358, 1814, 1808, 3806, 2293, 1259, 3803, 3788, 3704, 1780,
	3804, 2713, 2219, 3609, 2219, 3700, 1777, 1778, 1827, 2713,
	3625, 3616, 3305, 3300, 3626, 3617, 2713, 2713, 93, 2771,
	3785, 2706, 3299, 1057, 3250, 1833, 2713, 3248, 3251, 1808,
	1266, 3249, 3160, 3240, 1779, 3238, 1780, 3241, 3209, 2713,
	1777, 1778, 2713, 3207, 1799, 2713, 1821, 1822, 1823, 3208,
	1242, 234, 3079, 1796, 3051, 1211, 2072, 2069, 2281, 2219,
	3050, 2819, 1833, 1808, 2281, 2713, 4601, 4495, 3259, 3260,
	1780, 1779, 2774, 2764, 2795, 4486, 2775, 2713, 2758, 1827,
	2712, 1260, 2219, 1517, 2713, 1517, 1213, 2280, 1214, 4474,
	1517, 2281, 1523, 4430, 2713, 2072, 1833, 3785, 2705, 236,
	4242, 4201, 2069, 1260, 4164, 1779, 4010, 3617, 2916, 2834,
	2085, 2050, 2140, 2066, 3005, 1799, 2218, 1777, 1778, 2936,
	2832, 1919, 1503, 1528, 1796, 3886, 3675, 3650, 1802, 1803,
	1804, 1805, 1941, 2186, 3601, 1667, 2750, 2749, 1785, 2748,
	2747, 2746, 234, 1215, 1212, 1051, 1050, 1780, 235, 1049,
	1048, 1047, 1046, 3602, 4096, 3197, 1045, 1041, 1040, 1039,
	2578, 228, 1038, 3259, 3260, 1037, 1036, 1035, 1034, 1033,
	229, 1032, 3119, 2608, 1031, 1785, 1818, 3259, 3260, 1828,
	1030, 1029, 1779, 1028, 1027, 1026, 1807, 1809, 1025, 1024,
	236, 1006, 947, 946, 945, 944, 189, 943, 942, 1802,
	1803, 1804, 1805, 1824, 2052, 1825, 2052, 2052, 2052, 1785,
	941, 940, 1794, 1795, 2052, 2052, 939, 2052, 938, 937,
	936, 1516, 935, 1807, 1809, 934, 933, 932, 931, 930,
	1816, 929, 928, 3037, 927, 2354, 926, 3265, 3274, 235,
	925, 924, 923, 922, 921, 1800, 920, 1818, 919, 2579,
	1828, 918, 917, 916, 915, 914, 913, 1807, 1809, 2069,
	903, 902, 898, 1120, 897, 891, 890, 1635, 877, 875,
	874, 831, 1119, 830, 3599, 829, 828, 820, 819, 818,
	784, 775, 1800, 1794, 1795, 774, 1785, 189, 773, 1826,
	4498, 756, 258, 1325, 1122, 73, 257, 880, 879, 256,
	255, 1816, 254, 253, 1522, 252, 234, 1815, 251, 250,
	249, 248, 74, 1621, 247, 246, 1800, 245, 1830, 149,
	1260, 1122, 1122, 244, 243, 1333, 242, 241, 78, 240,
	239, 2580, 3265, 2577, 238, 237, 1096, 1065, 1383, 4055,
	3827, 3799, 1383, 3627, 3275, 4256, 3265, 3353, 1508, 1325,
	234, 3220, 234, 3203, 236, 1830, 3303, 234, 234, 3194,
	3102, 2069, 2986, 2779, 2755, 2740, 2114, 2594, 87, 1902,
	2592, 1806, 1944, 1122, 3019, 1122, 1901, 1122, 2071, 4700,
	3259, 3260, 2219, 1325, 2806, 2050, 2069, 1967, 1872, 1830,
	1870, 1511, 2066, 2795, 1801, 2399, 3304, 1902, 236, 1776,
	236, 1517, 1905, 235, 1901, 236, 236, 1369, 883, 1325,
	1366, 1367, 1246, 1487, 2288, 4680, 228, 1830, 4659, 4561,
	49, 1819, 107, 1482, 1353, 229, 1865, 93, 104, 1325,
	1900, 1801, 4483, 4477, 2705, 4475, 1325, 4309, 4348, 3275,
	1863, 4263, 1806, 1260, 1122, 4241, 1122, 235, 4107, 235,
	1325, 189, 1832, 3275, 235, 235, 1122, 1507, 1122, 1693,
	228, 4078, 228, 4077, 4071, 1801, 1830, 228, 228, 229,
	4070, 229, 4069, 1293, 1296, 4062, 229, 229, 4061, 4059,
	1573, 1576, 4054, 4051, 4050, 2582, 94, 3945, 3831, 1832,
	1306, 3830, 1819, 3276, 3829, 189, 1347, 189, 2287, 3809,
	1239, 3776, 189, 189, 1223, 1325, 3775, 3951, 1376, 1238,
	1469, 1474, 1830, 1492, 3259, 3260, 3774, 3696, 3691, 3348,
	3296, 3287, 3258, 1832, 1817, 1122, 1830, 3255, 1122, 3254,
	3252, 1777, 1778, 1791, 1792, 1798, 1820, 1797, 1793, 234,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 3265,
	4258, 3247, 3246, 4065, 3245, 3242, 234, 4064, 3239, 814,
	3219, 1780, 1477, 3202, 3195, 817, 3193, 178, 178, 3052,
	1342, 1506, 1562, 1240, 2741, 2565, 3259, 3260, 1505, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 1636, 236, 3276, 3259,
	3260, 1776, 2261, 1604, 1606, 1817, 1779, 1863, 1864, 2226,
	1862, 2576, 3276, 2224, 236, 1775, 4884, 1820, 1797, 1793,
	4824, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	3884, 3021, 4823, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 2788, 97, 3952, 4787, 1579, 235, 4738, 4736, 1248,
	3722, 1063, 3261, 3262, 3263, 3264, 3266, 3267, 4619, 228,
	4553, 3372, 4537, 235, 4534, 4533, 1122, 4532, 229, 4512,
	4497, 3301, 1122, 4496, 1709, 4471, 228, 4455, 234, 1602,
	4454, 1353, 2506, 1641, 1353, 229, 4440, 1754, 4437, 4436,
	4431, 4370, 234, 3265, 189, 186, 100, 4344, 4307, 103,
	1595, 1781, 1782, 1783, 1784, 1786, 1787, 4290, 4289, 4270,
	1785, 3036, 4269, 4227, 4202, 4095, 4076, 4011, 4005, 4002,
	73, 3872, 3871, 3855, 234, 234, 236, 3854, 3852, 3791,
	3779, 3686, 1850, 884, 3628, 3610, 3576, 74, 149, 1748,
	236, 3499, 1616, 3455, 3270, 3268, 3269, 3261, 3262, 3263,
	3264, 3266, 3267, 78, 1630, 3265, 2777, 3422, 1852, 3268,
	3269, 3261, 3262, 3263, 3264, 3266, 3267, 2512, 3265, 3952,
	234, 3374, 236, 236, 3224, 235, 2607, 1122, 1122, 1122,
	3223, 3218, 234, 1122, 3184, 2998, 1755, 1908, 228, 235,
	1244, 1907, 1244, 87, 234, 1906, 1903, 229, 1895, 153,
	3275, 1893, 228, 2786, 2785, 1658, 2752, 1383, 2745, 2711,
	4257, 229, 2590, 1849, 190, 1921, 1122, 1966, 236, 808,
	1694, 235, 235, 189, 1922, 2005, 808, 1917, 1916, 1325,
	236, 3020, 1915, 883, 228, 228, 1914, 189, 1913, 1912,
	1911, 1910, 236, 229, 229, 49, 1909, 107, 1890, 1889,
	1888, 1887, 93, 104, 1886, 1885, 1884, 1930, 1883, 1751,
	1882, 1881, 1880, 1879, 1759, 1758, 1043, 235, 1878, 189,
	878, 1877, 1876, 1830, 1865, 3275, 1042, 1851, 1063, 235,
	228, 1904, 1848, 1843, 1341, 1264, 1255, 1753, 4499, 229,
	1978, 235, 228, 1975, 4230, 1325, 4103, 1593, 4047, 3826,
	3802, 229, 1122, 3794, 228, 3206, 1325, 1772, 1773, 262,
	2743, 94, 4327, 229, 2105, 189, 2289, 4105, 3825, 1951,
	1927, 1928, 1598, 1122, 1864, 1777, 1778, 189, 3259, 3260,
	1383, 178, 1115, 1210, 3370, 1830, 1846, 1365, 3605, 189,
	2105, 4166, 1962, 4821, 2056, 3345, 2130, 2058, 1830, 3276,
	1363, 4813, 4428, 2063, 2914, 1780, 2943, 2065, 2105, 2103,
	4535, 4432, 2068, 4423, 1896, 1897, 3263, 3264, 3266, 3267,
	2593, 4422, 3869, 2591, 4261, 4204, 2078, 4203, 4165, 4098,
	4014, 4013, 4012, 3797, 3612, 3611, 3955, 1358, 1970, 1871,
	1779, 1902, 2077, 1973, 2941, 3673, 1358, 1944, 1901, 1984,
	1746, 1364, 1657, 2091, 1063, 3898, 2033, 1358, 1999, 4478,
	2895, 4476, 2112, 3244, 3243, 1353, 814, 1942, 3166, 2877,
	3458, 1022, 817, 814, 3276, 1952, 1949, 1361, 3424, 817,
	3491, 1971, 3559, 4750, 3558, 1874, 1710, 2286, 1979, 2054,
	4347, 1666, 4419, 4724, 1920, 2028, 4705, 4692, 3543, 1359,
	1885, 3076, 2183, 1242, 1885, 1242, 2200, 97, 3621, 1667,
	2201, 2310, 1325, 1325, 1961, 1960, 1023, 1959, 1957, 2041,
	1956, 1955, 1383, 1946, 2081, 1974, 3959, 3942, 2002, 3900,
	3895, 3877, 3647, 3396, 4311, 3308, 3724, 2080, 3212, 2573,
	1985, 2784, 4366, 1918, 4340, 3270, 3268, 3269, 3261, 3262,
	3263, 3264, 3266, 3267, 1898, 2140, 1222, 3550, 4151, 2942,
	186, 100, 2255, 1572, 103, 4149, 4701, 1783, 1784, 1786,
	1787, 1499, 1336, 1292, 4714, 2933, 4711, 3595, 3847, 3526,
	4528, 2168, 2978, 2173, 2930, 2041, 2178, 2928, 4245, 4626,
	234, 2922, 1645, 2874, 4509, 3427, 2041, 2076, 884, 3864,
	3059, 3033, 4769, 149, 2578, 870, 4768, 3667, 2262, 2074,
	3261, 3262, 3263, 3264, 3266, 3267, 1325, 1355, 1325, 1597,
	1325, 2083, 3269, 3261, 3262, 3263, 3264, 3266, 3267, 2211,
	2216, 3400, 4392, 4702, 4153, 3913, 1325, 1325, 236, 2108,
	2098, 2097, 2096, 1539, 1547, 2105, 2107, 1325, 2820, 4803,
	4879, 2921, 1359, 2873, 1707, 4541, 748, 1002, 4385, 1325,
	2367, 1325, 1325, 1325, 153, 1020, 4376, 2146, 2365, 1018,
	1708, 2092, 1016, 2838, 2838, 1014, 1501, 1011, 4194, 190,
	2414, 2205, 3648, 2203, 2204, 808, 4193, 235, 2836, 2836,
	1598, 2296, 3911, 2579, 3910, 3902, 3371, 3892, 1360, 2167,
	228, 2309, 2251, 3912, 3891, 3889, 3888, 1122, 3876, 229,
	871, 814, 3842, 3841, 3532, 3531, 3364, 817, 3217, 3216,
	2256, 4113, 3215, 1506, 3214, 3170, 2939, 1365, 2938, 2268,
	1505, 1548, 2935, 2924, 2912, 189, 2911, 2905, 1348, 2412,
	2904, 2903, 1122, 2882, 2881, 2842, 2765, 2487, 1752, 2291,
	2166, 3402, 2621, 4134, 2177, 1706, 1356, 2314, 2620, 748,
	1061, 2778, 4367, 2100, 4341, 1357, 2444, 3030, 4148, 2276,
	1355, 1585, 1643, 1584, 2217, 2580, 1122, 2577, 1122, 1583,
	2792, 1582, 2769, 4288, 4112, 1122, 2879, 4128, 2005, 2005,
	1383, 1364, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1063, 1122,
	1063, 1122, 1122, 1122, 1122, 2278, 2237, 2236, 2265, 3424,
	3489, 4129, 2235, 2388, 2201, 2297, 1365, 2416, 2398, 2286,
	1060, 1360, 2396, 2270, 4804, 1008, 1602, 1122, 1602, 2403,
	2274, 1122, 1122, 1595, 2498, 2273, 1359, 2273, 2306, 1122,
	2282, 2302, 2283, 1122, 3457, 1122, 1122, 1342, 2102, 2875,
	747, 2875, 814, 1383, 1744, 2413, 2827, 1556, 817, 1122,
	1122, 1122, 1122, 2496, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 2440, 2441, 2339, 2301, 2137, 2414, 2171, 1356,
	1364, 1689, 1543, 1638, 3082, 2899, 2101, 2318, 1357, 2502,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 2582,
	1278, 2757, 2502, 1122, 2329, 2554, 2555, 1597, 1358, 2121,
	2133, 2892, 2893, 1659, 2122, 1244, 2140, 1502, 2851, 2554,
	2570, 2573, 1383, 1239, 1787, 1239, 4401, 3267, 1561, 2411,
	1062, 1244, 1238, 4147, 1238, 2361, 2412, 2892, 2893, 2138,
	2139, 1999, 1999, 2427, 2319, 2616, 4167, 1122, 1383, 2865,
	2371, 2379, 3143, 747, 1355, 2892, 2893, 1757, 1932, 2391,
	749, 1655, 4836, 4150, 2662, 2662, 2676, 3125, 2554, 2134,
	3490, 2697, 2699, 2326, 782, 4768, 1719, 2703, 873, 872,
	2402, 2401, 1705, 1745, 2400, 1688, 2518, 2415, 2408, 1043,
	2864, 4698, 1043, 1043, 4521, 2275, 1240, 3850, 1240, 2431,
	2569, 1639, 2432, 2433, 2728, 2492, 2378, 2320, 1340, 1689,
	3921, 2002, 2002, 1667, 4124, 2576, 2932, 2410, 1667, 4125,
	4287, 2753, 1962, 2878, 4808, 2493, 1723, 2123, 3656, 3655,
	2494, 2854, 2323, 2510, 2499, 1360, 3158, 2582, 3116, 1936,
	2508, 1063, 2720, 2484, 2127, 3861, 2317, 3399, 2931, 4192,
	3474, 1063, 2148, 1325, 1325, 1063, 3890, 2929, 1951, 3713,
	2927, 1358, 911, 749, 1210, 3922, 1642, 2514, 997, 2390,
	1310, 4127, 1686, 4134, 2841, 2152, 3887, 3128, 3873, 2837,
	2387, 2567, 2413, 2327, 780, 2841, 2742, 4130, 1939, 2618,
	3834, 2768, 1056, 1356, 2619, 1383, 3821, 2622, 2772, 2623,
	2624, 1644, 1357, 1934, 178, 3475, 2719, 4128, 3920, 2815,
	1059, 4121, 3538, 1688, 3466, 4523, 2809, 2124, 2129, 1475,
	4809, 1937, 1486, 1310, 868, 2801, 867, 2658, 4119, 2005,
	2688, 2805, 2149, 2701, 2671, 1687, 4145, 4123, 2709, 2710,
	2791, 3530, 3181, 1063, 2366, 2816, 2725, 2726, 3473, 1904,
	1012, 2721, 2364, 2727, 1012, 2732, 2411, 1012, 2738, 2739,
	1013, 4129, 1012, 3859, 1935, 1949, 4699, 1383, 3157, 3467,
	4402, 3179, 2973, 997, 1568, 1353, 3487, 4817, 1242, 2934,
	2812, 1702, 4400, 1325, 998, 2780, 2902, 2817, 4398, 2184,
	1310, 1310, 2109, 2110, 1242, 2880, 3323, 1056, 4782, 2843,
	2125, 2397, 2160, 4122, 1122, 1122, 4790, 1122, 697, 2787,
	3127, 2482, 3465, 2582, 2485, 2811, 4126, 4789, 2495, 1251,
	2800, 2223, 2222, 2763, 2803, 1566, 2804, 2974, 2497, 808,
	4811, 1325, 2853, 2790, 692, 4397, 1896, 1897, 3874, 2153,
	2180, 3124, 2794, 2885, 2840, 2818, 2925, 2810, 2131, 2839,
	3150, 3151, 4839, 4757, 2960, 4135, 4136, 2161, 821, 3710,
	1542, 1249, 1325, 4399, 2900, 2481, 2808, 2179, 4697, 4029,
	2972, 3044, 1720, 2884, 1325, 1358, 1325, 1054, 1277, 997,
	1938, 3539, 4028, 3017, 2868, 2821, 3073, 2952, 2950, 998,
	3536, 1325, 2164, 4146, 2954, 2956, 2946, 2883, 781, 3405,
	2159, 2175, 3592, 1056, 1253, 2154, 2155, 3593, 3122, 3639,
	2901, 904, 1999, 3176, 2894, 2896, 2897, 2898, 3632, 2143,
	1009, 1545, 3083, 3084, 2846, 2970, 2971, 2856, 2859, 2150,
	2138, 2139, 892, 3090, 3091, 3092, 2389, 4597, 3177, 1122,
	3172, 3711, 3182, 2823, 3126, 4607, 3009, 783, 1936, 1055,
	2325, 779, 2981, 2501, 2184, 2907, 3481, 2983, 2140, 4332,
	2176, 2906, 2825, 4867, 4124, 2920, 3013, 2169, 3411, 4125,
	2051, 1252, 2151, 2915, 2144, 999, 2910, 2852, 1640, 2756,
	4522, 2187, 2002, 4666, 2909, 4667, 2194, 3592, 3100, 4529,
	4548, 3077, 1932, 3322, 3058, 998, 814, 1939, 178, 2826,
	1122, 1568, 817, 3002, 2979, 3502, 1122, 1122, 1506, 2196,
	2165, 1721, 2722, 3439, 1756, 2984, 3634, 2142, 1654, 1656,
	2824, 4127, 3046, 4810, 3048, 3443, 814, 2996, 4815, 2126,
	1937, 3633, 817, 3006, 1071, 3401, 1717, 4130, 3080, 3097,
	912, 746, 1668, 3085, 1500, 3086, 2838, 3105, 3007, 3130,
	1262, 3132, 4219, 1718, 2172, 3107, 2483, 3109, 4756, 3111,
	3039, 2857, 1122, 1122, 2195, 1339, 3049, 1891, 1122, 3368,
	3438, 2041, 3060, 1936, 4284, 2948, 2908, 3445, 3860, 2509,
	999, 1122, 1122, 3120, 3078, 2184, 2962, 1122, 1122, 3047,
	2322, 2156, 2131, 1122, 3103, 2582, 3104, 4025, 3028, 2188,
	2908, 4300, 1602, 1722, 2316, 822, 823, 2961, 2953, 2951,
	2955, 2957, 2947, 2949, 2963, 3537, 4779, 2172, 3106, 4649,
	1000, 3630, 1939, 2959, 4595, 4731, 3178, 2979, 3099, 2564,
	715, 4637, 4177, 1842, 4816, 4732, 3180, 1934, 1122, 1122,
	1122, 3444, 3173, 3108, 1122, 3110, 2724, 3112, 2678, 3222,
	4840, 3138, 2737, 1062, 1122, 1937, 2966, 3726, 905, 906,
	4827, 4229, 3149, 3935, 4019, 4596, 4126, 2157, 4825, 4234,
	4818, 1122, 3933, 1001, 3412, 4197, 3822, 4030, 693, 893,
	894, 3140, 1486, 3139, 1267, 3669, 999, 3141, 4235, 1938,
	4555, 4696, 1673, 3133, 3144, 2427, 3135, 3159, 1935, 4767,
	4026, 4765, 4642, 4465, 4574, 4135, 4136, 4439, 4196, 4195,
	3935, 4283, 3950, 3200, 3201, 3973, 3580, 1993, 3204, 3933,
	3196, 3765, 2243, 1929, 1265, 1000, 1258, 2162, 1239, 1486,
	1767, 684, 2430, 4074, 1766, 2141, 1766, 1238, 1250, 3640,
	3635, 3636, 3637, 3638, 1239, 2093, 3815, 1761, 825, 824,
	3937, 4845, 3480, 1238, 2172, 3358, 4457, 694, 3171, 4755,
	4365, 1122, 1122, 1122, 1122, 4448, 4508, 3974, 3906, 4458,
	4220, 1122, 1122, 1122, 3639, 3893, 1122, 3846, 1001, 2090,
	3418, 3581, 2170, 3632, 3572, 3936, 1122, 1244, 1383, 3414,
	3018, 3012, 1122, 3000, 1122, 3315, 3316, 3937, 2269, 1063,
	3816, 1240, 4459, 1244, 2263, 2257, 695, 2249, 696, 2229,
	826, 827, 2420, 4556, 1938, 3709, 2191, 1240, 3838, 1536,
	4868, 1383, 1269, 39, 3205, 2163, 3817, 2052, 3814, 1053,
	3780, 1000, 3936, 1244, 2967, 2715, 1383, 755, 1765, 2886,
	1765, 4612, 3211, 2958, 3331, 3670, 2841, 1766, 4577, 4285,
	3298, 907, 908, 2372, 2858, 2088, 2005, 2171, 2086, 3976,
	1383, 3338, 4250, 4031, 2997, 4461, 3317, 1280, 4417, 4415,
	2718, 2189, 895, 896, 4343, 3351, 1325, 1325, 4730, 3430,
	3426, 3634, 3793, 3425, 1001, 3164, 3142, 2307, 4460, 1577,
	3320, 3319, 1696, 1695, 1690, 2762, 3633, 2089, 2761, 1122,
	4232, 2760, 2759, 1578, 3327, 1767, 4462, 1767, 1591, 1589,
	910, 2717, 3766, 1122, 2190, 3941, 2716, 4516, 3352, 3004,
	3347, 3767, 3931, 1325, 2130, 1060, 4412, 4211, 2005, 2862,
	3325, 3406, 3407, 4075, 3853, 3622, 4354, 2267, 3546, 3332,
	4776, 3843, 4350, 4552, 4330, 4267, 1122, 1842, 4032, 2977,
	2421, 1765, 3428, 3934, 3381, 3432, 3366, 3081, 2130, 4844,
	2982, 3326, 1325, 2980, 2295, 2200, 3336, 3390, 1648, 4616,
	3369, 3386, 3339, 3340, 3388, 3389, 3356, 3344, 3503, 3392,
	3337, 3393, 3309, 3394, 1325, 4517, 1325, 4349, 3397, 3330,
	4338, 3383, 3384, 4623, 3324, 4609, 2254, 3293, 3294, 3295,
	3934, 3429, 3403, 4081, 3434, 1383, 2183, 3436, 3782, 4557,
	4780, 1353, 2887, 2888, 3839, 2183, 1325, 4266, 2589, 1740,
	1325, 4644, 3335, 3415, 3505, 3363, 3507, 3818, 3492, 3511,
	3360, 3361, 3362, 3517, 1674, 4781, 4339, 2383, 3413, 1999,
	3460, 4355, 3419, 4778, 1742, 1739, 4716, 1325, 1737, 3378,
	1242, 1714, 1712, 4544, 3342, 4536, 3343, 4617, 1684, 1682,
	1680, 1325, 1678, 1325, 4306, 4073, 1242, 1383, 3485, 3387,
	3940, 3290, 3685, 4518, 808, 1676, 3391, 3463, 1670, 3375,
	3376, 3645, 3377, 3398, 3359, 1325, 3644, 3500, 1664, 3379,
	1662, 1587, 4404, 3464, 3555, 3253, 1242, 1325, 3183, 3477,
	3404, 3479, 3844, 3001, 3640, 3635, 3636, 3637, 3638, 2002,
	3478, 1999, 2923, 2876, 1244, 2789, 2041, 2041, 3588, 2392,
	1969, 1965, 1743, 1626, 754, 3564, 3446, 2363, 2330, 3333,
	3334, 3513, 3073, 3291, 3665, 3519, 3664, 1761, 3571, 1325,
	1325, 3073, 2209, 3586, 3118, 3456, 3117, 1080, 1590, 1588,
	909, 3469, 3088, 4463, 2409, 2588, 3470, 1701, 2377, 4464,
	3471, 3462, 1325, 2041, 2334, 3472, 2248, 2121, 2228, 2034,
	1875, 1637, 2122, 3579, 3608, 3493, 1560, 4691, 3541, 4178,
	3544, 2002, 3501, 3476, 3897, 3896, 4179, 3504, 4162, 4608,
	3528, 3514, 3597, 4248, 3523, 3520, 3522, 4184, 4175, 3585,
	4117, 3972, 2041, 4753, 3963, 1383, 3909, 3894, 1383, 4243,
	3706, 3649, 3867, 4744, 3488, 3512, 3865, 2385, 3845, 3518,
	3575, 2384, 1010, 3570, 2041, 3529, 2041, 3533, 1741, 1738,
	1993, 1993, 1736, 1974, 3560, 1713, 1711, 3582, 2884, 3540,
	3548, 1122, 1683, 1681, 1679, 3031, 1677, 1122, 1122, 3589,
	3023, 1122, 1122, 1122, 3568, 1122, 2041, 3569, 3567, 1675,
	2041, 3016, 1669, 3642, 1122, 2005, 3008, 2994, 178, 178,
	3527, 814, 1663, 1122, 1661, 1586, 3620, 817, 1122, 3594,
	2975, 2807, 2802, 3596, 1383, 2123, 2227, 3624, 3603, 3663,
	2225, 2202, 2185, 1122, 3606, 3607, 1770, 2158, 2145, 2132,
	2073, 1383, 2127, 3662, 2070, 3618, 2067, 2362, 2331, 2064,
	2059, 2005, 2005, 1122, 1122, 2057, 1122, 1122, 1122, 3641,
	2053, 2044, 2208, 3652, 1977, 3653, 3162, 3654, 4769, 1063,
	2094, 3515, 4515, 3587, 1122, 3136, 2194, 3134, 1122, 3671,
	2005, 2005, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1219, 1122, 3698, 3699, 3659, 3738, 4234, 3739,
	3643, 1122, 1122, 2005, 2395, 2124, 2129, 1242, 1122, 1015,
	1017, 1019, 3658, 3668, 3688, 2968, 4654, 4235, 1220, 1122,
	4272, 4265, 4264, 4191, 4109, 3074, 1541, 2113, 2838, 2838,
	1244, 1244, 4450, 2863, 1122, 4443, 1771, 3984, 2140, 1301,
	1310, 1734, 1735, 2836, 2860, 2321, 2266, 2358, 2353, 1300,
	2393, 3163, 4653, 2328, 4154, 2440, 3729, 3660, 4186, 1660,
	3693, 3695, 4485, 4352, 1383, 2866, 3666, 4082, 4060, 3441,
	2867, 3811, 1777, 1778, 3705, 1777, 1778, 2889, 1999, 3516,
	1774, 1334, 3777, 1268, 2440, 3744, 4772, 3721, 2125, 1310,
	4763, 3728, 3798, 3712, 3714, 3715, 2394, 2867, 259, 3905,
	4725, 2993, 3736, 2360, 2930, 1780, 3737, 4615, 3960, 2250,
	2215, 1345, 2928, 1122, 2937, 2917, 2919, 3773, 3741, 3769,
	3743, 3904, 2871, 2869, 1999, 1999, 1310, 1310, 1221, 2918,
	1239, 1301, 3449, 1122, 1301, 2870, 2131, 1779, 4602, 1238,
	1779, 4568, 3716, 3778, 4562, 681, 1239, 4514, 2002, 178,
	4434, 3770, 4410, 1999, 1999, 1238, 4331, 3789, 3790, 3970,
	3962, 3949, 3808, 3574, 3038, 3735, 1122, 1122, 2702, 2079,
	1986, 4812, 4646, 4351, 3786, 3787, 1239, 4647, 3521, 1498,
	1497, 3784, 3367, 4843, 4564, 1238, 1999, 3447, 3836, 3259,
	3260, 4646, 3837, 1508, 2002, 2002, 4647, 4784, 1332, 1777,
	1778, 2830, 2831, 1240, 4052, 3800, 1647, 3801, 2828, 2829,
	1122, 2584, 1646, 3824, 2830, 2828, 2617, 1716, 1475, 1240,
	1715, 3969, 4435, 2002, 2002, 4386, 4188, 4183, 4182, 4048,
	3448, 1993, 3823, 3866, 3717, 3868, 3509, 1325, 3506, 1869,
	3878, 1868, 1325, 4829, 4791, 1486, 4606, 4605, 4604, 1240,
	4543, 4542, 4501, 4413, 3819, 3820, 2002, 4380, 4328, 4325,
	3882, 4323, 4222, 3883, 3885, 4208, 2005, 4152, 4104, 3832,
	3833, 4008, 3835, 3990, 3944, 3863, 3856, 1514, 3849, 1521,
	3899, 1527, 3578, 3577, 3901, 3907, 3435, 3385, 3123, 3115,
	3096, 3095, 3094, 1242, 1242, 3093, 3870, 1325, 3828, 3022,
	2995, 2861, 2798, 1122, 3875, 2793, 2782, 2781, 3908, 2770,
	2513, 1244, 1122, 2386, 3986, 3923, 3925, 2126, 2359, 2352,
	2351, 2350, 1325, 1325, 1325, 3044, 2349, 3993, 3977, 2884,
	2348, 2264, 2238, 2234, 2233, 2232, 2231, 2230, 2047, 1325,
	2046, 2045, 3939, 2043, 1976, 1733, 1732, 1671, 1615, 1555,
	1620, 1554, 3073, 1553, 1552, 1325, 3978, 3918, 1551, 1550,
	1629, 1383, 1634, 1549, 1544, 1540, 3997, 1538, 3957, 1537,
	1491, 1490, 1489, 3919, 3981, 2731, 1374, 1373, 3927, 1372,
	3419, 3916, 3956, 3980, 1371, 1370, 1383, 1486, 1338, 1122,
	1122, 3943, 1337, 3928, 4009, 1122, 1122, 2005, 1310, 1287,
	1122, 1122, 1286, 1122, 1285, 1284, 3961, 1283, 1122, 1282,
	1281, 1279, 3929, 1274, 1273, 3938, 3966, 1272, 1271, 1122,
	1270, 882, 8, 1202, 3964, 2084, 1692, 1021, 1007, 4520,
	4133, 4132, 4131, 2382, 3987, 1122, 92, 3979, 1130, 1546,
	844, 3917, 3992, 86, 2192, 3982, 3988, 3862, 1486, 1999,
	1486, 4033, 3998, 3999, 4015, 4719, 976, 1239, 4007, 4643,
	4003, 4000, 4006, 1530, 4547, 852, 1238, 4625, 4034, 4004,
	3958, 3437, 4017, 2944, 2333, 1672, 2335, 4046, 3346, 2744,
	4594, 4056, 2041, 3221, 266, 266, 266, 4492, 687, 688,
	4027, 703, 687, 703, 713, 4299, 1244, 753, 2587, 1873,
	3302, 772, 4022, 88, 1244, 1106, 778, 1152, 1383, 4218,
	1383, 4217, 4118, 266, 4016, 3848, 4042, 1244, 3063, 2002,
	4215, 4214, 1990, 1992, 1070, 1386, 4665, 2095, 1325, 1325,
	1240, 1112, 2111, 889, 2104, 2783, 2661, 1129, 1383, 266,
	1126, 1994, 1996, 1128, 1127, 1995, 1892, 1125, 1989, 3968,
	3042, 3604, 1596, 1594, 978, 2099, 2507, 2571, 3210, 3351,
	1866, 1086, 1108, 1244, 2568, 1244, 1263, 4110, 4111, 1097,
	1085, 3328, 4072, 3307, 1242, 3591, 3807, 2419, 862, 3256,
	1999, 2574, 1254, 2685, 2677, 2673, 3395, 1325, 3032, 1747,
	4090, 4155, 4313, 1844, 3043, 1368, 1090, 1383, 4143, 1325,
	2505, 1857, 1325, 3188, 2429, 4140, 3598, 4140, 3349, 4093,
	4084, 4085, 4086, 1383, 2776, 4089, 4650, 3725, 3121, 2242,
	1218, 4079, 1217, 4083, 1261, 4094, 1216, 178, 4631, 4628,
	4097, 4088, 4114, 2182, 4001, 4187, 3553, 4189, 2121, 2087,
	2822, 4156, 2517, 2122, 3561, 1102, 1485, 2376, 3313, 3623,
	2002, 1325, 1325, 4116, 1557, 777, 4359, 1114, 1829, 2965,
	2964, 4102, 4511, 1354, 1352, 1351, 1350, 687, 687, 4800,
	4866, 1325, 3858, 4212, 4108, 266, 3857, 233, 3156, 1768,
	1760, 4087, 4176, 1383, 230, 232, 231, 1958, 1325, 4223,
	3812, 3355, 4190, 4723, 3880, 4181, 3545, 23, 4209, 22,
	21, 112, 4161, 42, 20, 151, 4206, 129, 148, 147,
	121, 146, 145, 1244, 4170, 144, 143, 4173, 150, 4251,
	142, 4240, 141, 1325, 1325, 1325, 4200, 136, 4174, 140,
	4171, 139, 138, 137, 135, 4205, 1383, 133, 134, 128,
	132, 131, 130, 1239, 1239, 4144, 4268, 4252, 1122, 1122,
	1122, 4199, 1238, 1238, 127, 4140, 2123, 4198, 126, 1242,
	125, 4157, 4158, 4213, 4255, 4246, 1383, 1242, 124, 4207,
	4228, 1122, 123, 2127, 1122, 1122, 4237, 122, 120, 152,
	1242, 4260, 119, 118, 1122, 4160, 4236, 2005, 117, 116,
	4253, 115, 1122, 1122, 114, 113, 765, 767, 4169, 61,
	60, 4172, 111, 110, 4239, 19, 40, 1383, 14, 1325,
	65, 4291, 66, 18, 13, 35, 1240, 1240, 91, 102,
	101, 4275, 36, 99, 4274, 98, 1242, 2041, 1242, 4279,
	34, 4286, 1383, 17, 16, 15, 96, 95, 33, 2041,
	1122, 4277, 2041, 31, 4296, 11, 2124, 2129, 9, 37,
	1953, 12, 1122, 1319, 5, 183, 182, 185, 1993, 181,
	1122, 184, 90, 180, 2005, 179, 1486, 1486, 89, 4302,
	29, 10, 175, 1122, 4426, 3954, 1122, 81, 177, 176,
	174, 173, 172, 1855, 82, 79, 171, 1860, 4280, 85,
	1122, 4319, 4320, 4334, 170, 4271, 4322, 1383, 80, 84,
	83, 27, 6, 64, 1325, 7, 4308, 4362, 4281, 1494,
	3646, 2041, 105, 106, 1325, 1325, 38, 77, 76, 4335,
	75, 26, 63, 25, 169, 4333, 216, 215, 4342, 2125,
	1993, 214, 2424, 213, 212, 211, 210, 209, 204, 1486,
	203, 208, 206, 1532, 205, 4403, 207, 202, 4391, 225,
	219, 218, 224, 3555, 223, 222, 4371, 4372, 4425, 1383,
	221, 220, 1325, 4382, 2254, 4379, 4416, 4377, 217, 1569,
	1999, 227, 4381, 2119, 201, 200, 1242, 2131, 4369, 199,
	1244, 1244, 197, 193, 4388, 192, 4387, 196, 4389, 198,
	4390, 195, 194, 4444, 4433, 4405, 1610, 191, 4406, 226,
	1122, 1122, 4414, 72, 4409, 167, 168, 71, 166, 165,
	1623, 164, 163, 4468, 4469, 4453, 162, 1122, 2005, 4394,
	161, 4445, 4140, 4140, 1239, 4472, 4424, 160, 2117, 70,
	24, 2, 4408, 1238, 1, 4395, 0, 4447, 0, 0,
	2002, 4441, 4446, 0, 4255, 0, 0, 1999, 4452, 4466,
	4429, 0, 4451, 0, 0, 1122, 0, 0, 1122, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 1244, 0,
	0, 2118, 0, 0, 4481, 4482, 0, 2679, 0, 4480,
	0, 1244, 0, 1310, 0, 4507, 0, 0, 0, 0,
	0, 0, 0, 0, 4484, 0, 0, 1240, 0, 0,
	0, 0, 0, 4393, 0, 0, 0, 0, 0, 4383,
	4140, 0, 0, 0, 4531, 4506, 0, 2002, 4503, 0,
	0, 0, 0, 4140, 0, 0, 0, 4530, 1256, 0,
	0, 2130, 4524, 1122, 1122, 0, 4525, 4490, 0, 0,
	0, 0, 0, 1122, 2041, 4551, 0, 4449, 1244, 2355,
	0, 1244, 0, 0, 0, 1325, 0, 0, 2126, 0,
	0, 1276, 4538, 1381, 0, 1325, 1325, 1480, 0, 0,
	0, 0, 4540, 266, 0, 266, 266, 0, 1305, 266,
	1315, 4571, 1325, 4545, 4573, 4585, 0, 0, 1486, 0,
	4140, 1335, 4539, 4140, 0, 0, 1122, 1122, 4563, 4558,
	772, 1999, 4566, 4565, 4570, 0, 1122, 0, 0, 1239,
	0, 0, 0, 0, 4578, 4579, 4500, 1239, 1238, 4502,
	4583, 4584, 4559, 4560, 4581, 266, 1238, 266, 266, 1305,
	1239, 266, 266, 4618, 4582, 0, 1315, 4588, 4589, 1238,
	0, 4622, 0, 1242, 1242, 1122, 1122, 4429, 1122, 0,
	266, 0, 1510, 4599, 0, 0, 0, 4603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1993, 0, 0,
	4598, 2002, 0, 1534, 0, 0, 1239, 0, 1239, 4652,
	4648, 0, 1240, 0, 4620, 1238, 0, 1238, 0, 4645,
	1240, 4621, 1559, 4630, 4633, 1315, 4670, 0, 4639, 266,
	266, 0, 1305, 1240, 4674, 0, 1122, 1122, 1122, 4673,
	0, 0, 0, 1993, 1993, 0, 0, 0, 0, 4634,
	4668, 0, 4638, 772, 4655, 266, 266, 0, 0, 0,
	4669, 1242, 4661, 0, 0, 4635, 0, 1122, 0, 4703,
	0, 0, 1993, 1993, 1242, 4708, 0, 0, 889, 1240,
	0, 1240, 4690, 4687, 4688, 4689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4590, 0, 4591, 4733,
	0, 0, 0, 0, 0, 1993, 0, 4726, 4735, 4706,
	0, 0, 0, 0, 0, 0, 4737, 4747, 4749, 0,
	0, 4722, 0, 0, 1122, 0, 0, 0, 4748, 0,
	0, 0, 4734, 0, 0, 0, 0, 0, 4741, 4743,
	4754, 1242, 0, 0, 1242, 0, 4742, 0, 0, 0,
	0, 0, 4774, 4745, 4746, 266, 1239, 0, 4770, 4751,
	0, 4640, 0, 0, 4641, 1238, 0, 4766, 4762, 4764,
	4718, 0, 4721, 4760, 4761, 4773, 266, 1244, 4775, 1244,
	4777, 4796, 0, 2130, 0, 4652, 0, 0, 0, 4794,
	0, 0, 4806, 4793, 4788, 4807, 4783, 4551, 4805, 4792,
	0, 4630, 0, 0, 4633, 0, 4802, 0, 0, 0,
	4795, 0, 4797, 0, 0, 0, 4820, 0, 0, 4140,
	0, 4140, 0, 0, 0, 0, 0, 0, 0, 1240,
	0, 4819, 0, 0, 4822, 0, 0, 0, 4831, 4704,
	0, 0, 0, 0, 0, 0, 0, 4833, 4837, 0,
	0, 0, 4830, 1122, 1122, 0, 0, 4838, 0, 0,
	4835, 0, 1122, 0, 1122, 1122, 0, 0, 0, 4841,
	0, 0, 0, 0, 4851, 0, 4857, 4847, 0, 0,
	4856, 4862, 4855, 4861, 0, 4860, 0, 4859, 4858, 4854,
	0, 0, 3044, 0, 0, 1310, 0, 0, 4870, 4865,
	0, 4874, 4873, 4872, 0, 0, 4875, 4869, 4876, 0,
	4871, 0, 0, 4878, 3146, 4882, 4881, 0, 0, 0,
	0, 0, 0, 0, 4883, 1122, 4886, 0, 4888, 0,
	0, 0, 4889, 4885, 4891, 4892, 0, 0, 4848, 4849,
	4878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2511, 0, 1968, 0, 0, 0, 0, 4850, 0, 0,
	2254, 4801, 0, 0, 0, 0, 1855, 0, 1993, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2679, 2679, 0, 266, 4887,
	266, 4826, 0, 0, 266, 0, 2987, 4828, 0, 2990,
	0, 2992, 0, 0, 0, 0, 0, 1510, 1305, 266,
	2684, 266, 0, 1239, 1239, 0, 0, 266, 1510, 703,
	0, 0, 1238, 1238, 266, 1510, 0, 0, 0, 0,
	1242, 0, 1242, 0, 0, 0, 0, 0, 0, 2048,
	2284, 0, 0, 0, 0, 3035, 0, 0, 3035, 0,
	0, 266, 0, 0, 0, 0, 1319, 2298, 266, 0,
	0, 0, 0, 0, 0, 2115, 0, 2300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2308,
	0, 2311, 2312, 2313, 0, 0, 1240, 1240, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 3185,
	3186, 1239, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 3113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2679, 2679, 2679, 2679, 0,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 1239, 0, 0, 1239, 0, 0, 1240, 0, 0,
	1238, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 1240, 266, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2254, 0, 0, 0, 87, 0, 0, 3283,
	3284, 3285, 3286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 0, 0, 0, 266, 883, 0, 0, 266,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	107, 266, 1808, 0, 0, 93, 104, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 266,
	0, 0, 0, 687, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 772, 0, 0,
	0, 889, 0, 0, 1779, 0, 0, 2529, 2530, 2531,
	2548, 2549, 2550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 266, 2551, 1305, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 2332, 0,
	1833, 0, 0, 266, 266, 0, 266, 0, 266, 0,
	266, 0, 266, 0, 0, 0, 0, 0, 268, 2541,
	0, 0, 0, 0, 0, 0, 0, 0, 2537, 0,
	0, 0, 0, 0, 0, 0, 0, 2368, 0, 0,
	2369, 0, 2370, 0, 0, 2443, 0, 0, 1785, 1993,
	1239, 0, 1239, 0, 266, 266, 266, 266, 0, 1238,
	0, 1238, 0, 0, 0, 0, 0, 3259, 3260, 0,
	3277, 3278, 3279, 2814, 1319, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 772, 0, 2684, 0, 4039,
	2773, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 2542, 2543, 2544, 2545, 0, 0, 0,
	97, 0, 0, 2536, 3259, 3260, 0, 3277, 3278, 3279,
	0, 0, 0, 1240, 0, 1240, 1993, 1777, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2585, 0,
	0, 0, 3274, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 1800, 0, 1780, 0, 0,
	0, 0, 0, 186, 100, 0, 0, 103, 2684, 2684,
	0, 0, 0, 0, 0, 0, 0, 0, 2519, 0,
	0, 0, 0, 1833, 0, 0, 0, 2546, 2547, 3274,
	0, 0, 1779, 234, 0, 0, 0, 0, 0, 0,
	0, 884, 1799, 2969, 0, 0, 149, 0, 0, 1084,
	0, 1796, 0, 3450, 3451, 0, 3452, 3453, 3454, 0,
	2539, 0, 0, 0, 0, 0, 2679, 2679, 1830, 0,
	0, 0, 0, 2754, 0, 0, 3265, 0, 1486, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3494, 3495, 266, 3496, 3497, 3498, 153, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 266,
	1993, 687, 190, 3265, 0, 0, 1802, 1803, 1804, 1805,
	235, 0, 0, 266, 0, 0, 1785, 0, 0, 0,
	0, 3281, 0, 228, 1801, 0, 0, 0, 0, 266,
	1315, 3089, 229, 0, 0, 0, 2679, 2679, 2679, 2679,
	2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679,
	2679, 2679, 2679, 2679, 2679, 2679, 0, 2679, 189, 0,
	3681, 3682, 1310, 3275, 1807, 1809, 0, 0, 2684, 2684,
	2684, 2684, 0, 0, 0, 0, 0, 0, 266, 1315,
	0, 0, 1832, 703, 0, 0, 0, 0, 0, 2540,
	1794, 1795, 0, 2797, 0, 0, 0, 0, 0, 266,
	2833, 0, 266, 0, 0, 0, 266, 0, 266, 0,
	3275, 0, 0, 1305, 0, 266, 266, 0, 1315, 1315,
	2813, 0, 0, 1800, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754,
	3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764,
	2850, 3768, 0, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 266, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 3276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2526, 2527,
	2528, 2552, 2538, 2532, 266, 2534, 2535, 2533, 2520, 2521,
	2522, 2523, 2524, 2525, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3276,
	0, 0, 0, 0, 0, 0, 0, 266, 2985, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 266, 0, 266, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2850, 0, 687, 0, 0, 0,
	1832, 0, 0, 0, 0, 3056, 889, 0, 2850, 2850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3271, 3272, 3273, 0, 266, 0, 0, 3270, 3268,
	3269, 3261, 3262, 3263, 3264, 3266, 3267, 0, 0, 0,
	0, 0, 0, 0, 266, 1305, 266, 0, 0, 0,
	0, 0, 0, 1510, 73, 1510, 1315, 266, 0, 0,
	1305, 0, 1305, 0, 1305, 0, 0, 0, 3271, 3272,
	3273, 74, 0, 0, 0, 3270, 3268, 3269, 3261, 3262,
	3263, 3264, 3266, 3267, 0, 1797, 1793, 78, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 1777, 1778,
	0, 0, 0, 0, 0, 0, 266, 266, 266, 266,
	1305, 0, 0, 1305, 0, 266, 0, 0, 266, 0,
	0, 1808, 0, 0, 0, 0, 0, 87, 1780, 0,
	1077, 0, 1777, 1778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 1833, 1808, 0, 266, 0, 0,
	0, 0, 1780, 1779, 0, 0, 0, 883, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 1084,
	1084, 107, 1796, 0, 0, 0, 93, 104, 1833, 0,
	0, 0, 0, 0, 0, 0, 1467, 1779, 0, 0,
	1467, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2684,
	2684, 0, 0, 0, 0, 0, 4037, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	3684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 3965, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 2684,
	2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
	2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 0,
	2684, 1794, 1795, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 3524, 0, 0,
	0, 0, 0, 3314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 1794, 1795, 0, 0, 4018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 3565, 3341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3573, 1800, 0,
	0, 3354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3373, 0, 0, 0, 0,
	0, 266, 0, 0, 186, 100, 687, 1830, 103, 3614,
	3615, 687, 0, 0, 687, 0, 0, 687, 687, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 234, 0, 0, 73, 0, 0,
	0, 1830, 884, 0, 1510, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 2679, 0,
	0, 266, 236, 1801, 0, 266, 266, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	87, 0, 0, 0, 2850, 2850, 266, 1801, 3410, 0,
	0, 0, 0, 190, 2850, 0, 0, 3421, 0, 0,
	0, 235, 0, 0, 2679, 2850, 3421, 0, 2850, 3421,
	0, 1832, 3421, 0, 228, 0, 0, 0, 0, 0,
	883, 0, 0, 229, 0, 0, 0, 266, 266, 3410,
	0, 266, 49, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 0, 0, 0, 1832, 0, 0, 0, 189,
	0, 3410, 0, 266, 0, 0, 0, 0, 3484, 3484,
	0, 1305, 4305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3354, 0, 0, 0, 0, 2850, 0, 2850,
	0, 3510, 2850, 3410, 0, 1467, 2850, 3410, 0, 0,
	772, 0, 0, 0, 0, 0, 1797, 1793, 94, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 0, 4221, 0, 0, 0, 1305, 4345, 0,
	0, 0, 0, 0, 266, 0, 4238, 0, 1510, 0,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 266, 3549, 0, 159, 3551, 2850, 0, 4259,
	266, 0, 0, 73, 266, 46, 45, 1315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 266, 154, 0, 0, 0, 3027, 0, 0,
	1305, 2679, 266, 0, 0, 2850, 78, 687, 0, 0,
	0, 0, 0, 0, 2850, 0, 0, 67, 0, 0,
	0, 1084, 0, 0, 48, 0, 156, 0, 1467, 0,
	1480, 0, 0, 1381, 0, 266, 3027, 0, 0, 3027,
	0, 0, 0, 0, 47, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 3651, 50, 68, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 0, 0, 57, 0, 3657, 0,
	157, 1510, 0, 0, 1305, 266, 0, 266, 49, 0,
	107, 0, 0, 1305, 0, 93, 104, 0, 0, 3702,
	0, 0, 0, 0, 0, 4489, 0, 186, 100, 0,
	0, 103, 0, 0, 0, 0, 3718, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 234, 0, 0,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	149, 0, 0, 0, 94, 0, 0, 3914, 0, 0,
	1467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3723, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 3994, 3995, 3996, 0, 0, 228, 0, 3810,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 1319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 266, 266,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	97, 687, 687, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 1510, 1510, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 0, 0, 0, 59, 1510, 1510,
	0, 1510, 0, 0, 0, 0, 69, 0, 0, 0,
	87, 0, 58, 186, 100, 0, 0, 103, 0, 0,
	0, 54, 0, 0, 0, 158, 0, 0, 0, 0,
	1931, 2684, 0, 55, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 4549, 0, 0, 0, 0, 0,
	883, 62, 0, 0, 1777, 1778, 149, 0, 0, 0,
	0, 0, 49, 0, 107, 0, 0, 0, 4569, 93,
	104, 155, 0, 0, 0, 0, 772, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 2684, 1467, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 4099, 4100,
	1833, 3484, 0, 0, 0, 0, 0, 153, 0, 1779,
	1777, 1778, 0, 0, 266, 0, 0, 0, 94, 1799,
	0, 0, 190, 0, 0, 0, 0, 0, 1796, 0,
	235, 0, 0, 1808, 0, 0, 0, 0, 0, 3410,
	1780, 266, 0, 228, 0, 703, 703, 1315, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 266,
	0, 1467, 0, 0, 0, 1779, 0, 0, 189, 266,
	0, 3, 3679, 0, 266, 1799, 4656, 0, 0, 266,
	0, 0, 4658, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 2850, 266,
	0, 1069, 0, 1785, 0, 0, 0, 0, 3056, 3056,
	0, 1319, 0, 0, 889, 889, 2850, 0, 0, 0,
	3027, 3027, 0, 0, 889, 2850, 0, 0, 0, 0,
	1467, 0, 0, 0, 0, 0, 0, 0, 3678, 0,
	0, 0, 0, 0, 2684, 0, 0, 266, 0, 0,
	0, 1807, 1809, 0, 97, 0, 1467, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 4276, 0, 4278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 100, 0,
	1800, 103, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 4057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4092, 0, 234, 0, 0,
	0, 1813, 0, 1794, 1795, 884, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4106, 0, 0, 0, 0, 0, 4324,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 1830, 266, 236, 0, 0, 0, 0,
	1510, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 266, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 1315, 235, 0, 1806, 0, 0, 0,
	2850, 2850, 0, 3484, 2850, 0, 0, 228, 0, 1830,
	0, 4142, 0, 4142, 1510, 0, 229, 0, 0, 1801,
	0, 0, 0, 0, 2850, 0, 3421, 0, 0, 0,
	1510, 1510, 266, 3410, 4407, 1467, 0, 0, 0, 0,
	0, 0, 1605, 1777, 1778, 0, 3410, 0, 266, 3410,
	0, 266, 0, 3484, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 1808, 0, 2850, 0,
	2850, 266, 0, 1780, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 1813, 0, 1801, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 2850, 0, 1779, 0,
	0, 4225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1381, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 4297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4142, 1797, 1793, 1510, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 1813,
	0, 0, 4297, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 2443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 796, 0, 1813, 0, 2850, 0, 3421, 0,
	0, 4337, 2443, 0, 0, 1319, 1319, 0, 0, 266,
	0, 0, 1777, 1778, 0, 0, 0, 0, 0, 4360,
	0, 4360, 1319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1330, 1808, 0, 0, 0, 1800,
	0, 0, 1780, 772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3484, 0, 1305, 0, 0, 0,
	0, 1069, 1069, 0, 0, 0, 0, 0, 1833, 0,
	0, 3410, 0, 266, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 790, 0, 1799, 0, 0,
	0, 802, 0, 0, 0, 0, 1796, 0, 4337, 0,
	0, 0, 0, 0, 0, 795, 2850, 0, 0, 0,
	0, 0, 1830, 1512, 0, 1518, 0, 1524, 0, 0,
	0, 0, 0, 0, 4438, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 4142, 4142,
	3174, 0, 0, 794, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 266, 266, 0, 0,
	748, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 1613, 0, 1618, 0, 1801, 0,
	3723, 0, 0, 0, 0, 792, 1627, 0, 1632, 0,
	0, 0, 0, 2683, 0, 1510, 0, 0, 1510, 3484,
	4505, 0, 0, 0, 0, 0, 1813, 4337, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 4142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 3259, 3260, 4142,
	3277, 3278, 3279, 0, 801, 1794, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 0, 1703, 4038,
	0, 266, 0, 0, 0, 0, 1467, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4225, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 4142, 0, 266, 4142,
	0, 0, 3274, 0, 1467, 0, 0, 0, 787, 3421,
	0, 0, 0, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 0, 1467, 0,
	0, 0, 0, 0, 0, 1510, 0, 1510, 0, 791,
	0, 1830, 0, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 0, 1084, 0, 0,
	0, 4613, 0, 0, 747, 0, 1854, 0, 0, 0,
	0, 1084, 1867, 0, 0, 4360, 1808, 0, 266, 797,
	0, 0, 0, 1780, 1806, 789, 3265, 0, 0, 0,
	1510, 0, 0, 1510, 3259, 3260, 0, 3277, 3278, 3279,
	0, 0, 2850, 0, 0, 0, 0, 1801, 0, 1833,
	0, 0, 0, 0, 0, 0, 3690, 0, 1779, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 1799, 0,
	0, 0, 786, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3723, 3281, 0, 0, 0, 0, 0, 0, 0, 0,
	793, 0, 0, 1467, 0, 1832, 0, 0, 1510, 3274,
	0, 0, 0, 0, 749, 0, 0, 1925, 1925, 1925,
	0, 0, 0, 0, 0, 788, 0, 0, 0, 0,
	0, 3167, 0, 3275, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 799, 800,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 1467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 3265, 0, 0, 1830, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 2850, 0,
	0, 0, 0, 0, 0, 4142, 0, 4142, 0, 0,
	1510, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 1069, 0, 0, 0, 0, 3281, 1800,
	1510, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 1813, 3276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 0, 1467, 0, 0, 0,
	3275, 0, 0, 0, 0, 0, 3056, 0, 0, 1813,
	0, 0, 0, 1813, 0, 2850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 3056, 1830, 0, 0, 0, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1467, 1830, 1777, 1778, 0, 1813, 0, 1813,
	1813, 1813, 1813, 0, 0, 1806, 0, 0, 0, 1467,
	0, 2683, 2683, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 1813, 0, 1801, 0,
	0, 3271, 3272, 3273, 0, 0, 0, 0, 3270, 3268,
	3269, 3261, 3262, 3263, 3264, 3266, 3267, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3276,
	0, 1777, 1778, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 1813, 0, 0,
	1813, 0, 0, 1813, 0, 0, 1813, 0, 0, 0,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 1467, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 1813, 0, 0, 3280,
	0, 2683, 2683, 2683, 2683, 0, 0, 0, 1813, 0,
	1813, 0, 0, 0, 0, 1813, 0, 2356, 3271, 3272,
	3273, 1807, 1809, 0, 0, 3270, 3268, 3269, 3261, 3262,
	3263, 3264, 3266, 3267, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 2380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3259, 3260, 0, 3277, 3278, 3279, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 2418, 0, 2422, 0,
	0, 0, 3689, 0, 0, 2436, 0, 0, 1807, 1809,
	0, 0, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 0, 2486,
	0, 2488, 2489, 2490, 2491, 3274, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 2566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2596,
	2599, 2602, 2605, 0, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 0, 0, 0, 0, 3259, 3260, 0, 3277, 3278,
	3279, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	1830, 0, 2675, 0, 2687, 2689, 2694, 0, 0, 3265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3259, 3260, 0, 3277, 3278,
	3279, 0, 0, 0, 1467, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 1832, 0, 0,
	3274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3281, 0, 1801, 0, 0, 1813,
	1813, 0, 1813, 0, 0, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2654, 2655, 2656, 2657, 2650, 2651, 2652, 2653, 0,
	3274, 0, 0, 0, 0, 0, 3275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 3265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1467, 0, 1467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2630, 2631, 2632, 2633, 0, 0, 1830,
	0, 0, 0, 0, 0, 3282, 1467, 0, 0, 0,
	0, 0, 0, 0, 3265, 1813, 2642, 2643, 2644, 2645,
	2638, 2639, 2640, 2641, 2646, 2647, 2648, 2649, 0, 3281,
	0, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 0, 0, 0, 1813,
	1813, 3275, 2683, 2683, 0, 3276, 1813, 0, 0, 3281,
	0, 1467, 0, 0, 0, 0, 3280, 3280, 0, 0,
	1813, 1813, 2626, 2627, 2628, 2629, 2634, 2635, 2636, 2637,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 3275, 0, 0, 2988, 2989, 1813, 2991, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 1467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683,
	2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683,
	2683, 2683, 0, 2683, 3280, 3280, 3280, 3280, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3271, 3272, 3273, 0, 0, 1813,
	3276, 3270, 3268, 3269, 3261, 3262, 3263, 3264, 3266, 3267,
	0, 0, 0, 0, 1467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3276, 0, 0, 0, 0, 1467, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1467, 0, 1814, 1808, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 1834, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 1813, 0, 0, 1084, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 3271,
	3272, 3273, 0, 0, 1796, 1467, 3270, 3268, 3269, 3261,
	3262, 3263, 3264, 3266, 3267, 0, 0, 0, 0, 0,
	0, 0, 3168, 3169, 0, 0, 0, 0, 3175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3189, 3190, 3271,
	3272, 3273, 0, 2566, 0, 0, 3270, 3268, 3269, 3261,
	3262, 3263, 3264, 3266, 3267, 0, 0, 1467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 3199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 3225, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1813, 0,
	0, 1813, 3280, 3280, 1813, 0, 0, 0, 1813, 0,
	0, 2694, 2694, 2694, 0, 1813, 0, 0, 0, 0,
	1826, 1084, 1084, 0, 0, 0, 1925, 0, 1813, 0,
	0, 0, 0, 0, 3318, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1813, 1813, 1813, 1813, 1813, 0, 0, 1245, 0,
	0, 1813, 0, 1813, 0, 0, 3280, 3280, 3280, 3280,
	3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280,
	3280, 3280, 3280, 3280, 3280, 3280, 0, 0, 0, 3280,
	0, 0, 1813, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1245, 1813, 0, 0, 1245, 0, 0,
	0, 0, 0, 1813, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 1069,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 1819, 1069, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 3440, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	1813, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	1245, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 3234, 0, 0, 0, 3235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1234, 0, 0, 0, 0, 1813, 1813, 0, 0,
	0, 1813, 1813, 0, 0, 1813, 1813, 0, 0, 0,
	1813, 0, 0, 0, 1813, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2683, 0, 0, 261, 261, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2436, 0, 0, 0, 0, 0, 3676, 3677, 0,
	0, 3680, 0, 0, 0, 3683, 0, 0, 0, 0,
	0, 0, 0, 0, 3687, 0, 0, 0, 0, 0,
	0, 0, 0, 3694, 0, 0, 0, 0, 3318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 1245, 0, 0,
	0, 0, 0, 3730, 3731, 0, 3732, 3733, 3734, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3740, 0, 0, 0, 3742, 0,
	2006, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3771, 3772, 1813, 1813, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1813, 3280, 2683, 0, 3783,
	0, 0, 0, 1813, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 3792, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 3280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 1245, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 3851, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 3879, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	3280, 0, 0, 0, 0, 0, 1799, 1245, 1245, 0,
	0, 0, 0, 1118, 0, 1796, 0, 1245, 0, 0,
	0, 1813, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	265, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 815, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 1245, 3989, 1245, 815, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 1245, 0, 0, 0, 0, 0, 1818, 0,
	0, 1828, 1245, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 1245, 0, 1245, 1245, 1245, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4035,
	4036, 0, 1816, 0, 0, 4040, 4041, 1813, 0, 0,
	4044, 4045, 0, 0, 0, 0, 0, 1800, 4049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 4053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 1291, 0, 1291, 1291,
	1830, 0, 0, 2006, 2006, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1378, 0,
	0, 0, 0, 1806, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 1801, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 1814, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 1611, 1612,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	1833, 0, 0, 0, 0, 0, 1245, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 1245, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 2562, 0, 0, 0, 2563,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4292, 4293,
	4294, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 2436, 0, 0, 4303, 4304, 0, 0, 1245, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4312, 4315, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4361, 0, 2006, 1816, 0, 0, 0, 0,
	4368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 4375, 0, 0, 1069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4384, 0, 1245, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 716, 1826, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 265, 0,
	265, 265, 0, 0, 265, 0, 1245, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 720,
	0, 0, 1972, 0, 1484, 0, 1806, 0, 0, 1245,
	265, 1245, 265, 265, 0, 0, 265, 265, 0, 0,
	0, 739, 0, 0, 0, 0, 1245, 0, 0, 1801,
	0, 0, 0, 0, 0, 815, 0, 0, 0, 0,
	0, 721, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 722, 4510, 0, 0, 4513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 265, 723, 1832, 0, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	265, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1069, 1069, 0, 0, 0, 0, 0,
	0, 0, 0, 4567, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 0,
	735, 0, 4063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2436, 0, 0,
	265, 0, 0, 0, 0, 0, 4315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1069, 0, 0, 745,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2240, 0,
	0, 0, 2247, 0, 0, 0, 4686, 4686, 4686, 0,
	0, 0, 0, 0, 2260, 0, 0, 0, 0, 0,
	747, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	2272, 0, 2272, 743, 744, 741, 0, 4707, 2279, 0,
	0, 736, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2247,
	0, 0, 2304, 0, 0, 0, 730, 0, 737, 0,
	0, 0, 0, 0, 4686, 0, 0, 731, 0, 0,
	0, 0, 0, 2324, 0, 0, 0, 0, 0, 0,
	0, 732, 1245, 1245, 0, 0, 740, 2340, 0, 2342,
	0, 2344, 0, 2346, 0, 2347, 0, 0, 1245, 0,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 0, 1947, 0, 1241, 1245, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 1245, 0, 0, 265, 1947, 265, 2373, 2374, 2375,
	0, 0, 815, 0, 0, 0, 0, 0, 0, 815,
	0, 2006, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 1245, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 4686, 4842, 0, 0, 0, 0, 0,
	0, 0, 4846, 0, 0, 0, 716, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 1245, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 1245, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 724, 0, 0, 0, 2751, 0, 0, 0,
	1245, 0, 0, 265, 0, 0, 0, 815, 0, 748,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 1245, 0, 0, 0, 0,
	265, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 265, 1245, 0, 0,
	0, 0, 2799, 0, 0, 1291, 0, 0, 0, 1291,
	0, 1291, 265, 735, 265, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 2260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 815, 265,
	2006, 265, 0, 265, 0, 265, 0, 265, 0, 0,
	0, 0, 0, 746, 0, 727, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 2006, 0, 265,
	265, 265, 265, 747, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 833, 0, 0, 743, 744, 741, 0,
	0, 0, 0, 0, 736, 2006, 2006, 729, 0, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2247, 0,
	0, 0, 0, 0, 0, 0, 0, 2260, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 737, 0, 0, 0, 0, 0, 837, 0, 854,
	731, 0, 0, 0, 0, 1245, 1245, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 740,
	0, 0, 0, 0, 838, 0, 0, 0, 3087, 839,
	0, 0, 0, 749, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 734, 0, 0, 3098, 0, 3101,
	0, 863, 0, 0, 0, 0, 0, 840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3129,
	1484, 3131, 1484, 0, 0, 0, 841, 0, 3137, 842,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	1131, 865, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 265, 0,
	3165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 267, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	864, 0, 1245, 0, 0, 0, 0, 1245, 0, 0,
	859, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 265, 0, 0, 265, 0, 0,
	0, 265, 0, 265, 0, 0, 0, 0, 0, 0,
	265, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 845, 0, 0, 0, 0, 0, 1245, 1245, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 846, 0, 0, 0, 265, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 1245, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 855, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	747, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 832, 0, 856, 0, 0, 0, 265,
	0, 0, 0, 0, 847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 853,
	0, 0, 815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 848, 0, 0, 0,
	849, 868, 0, 867, 0, 0, 0, 850, 0, 0,
	265, 0, 815, 0, 0, 0, 0, 0, 0, 265,
	0, 851, 0, 0, 0, 0, 860, 0, 0, 0,
	0, 0, 869, 0, 866, 0, 0, 0, 0, 0,
	749, 1245, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 1245, 0, 1245, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 1245, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 265,
	0, 265, 0, 0, 1291, 0, 0, 0, 1484, 1484,
	0, 0, 265, 0, 0, 0, 0, 0, 1245, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3408,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 1245, 0, 0, 1245, 0, 0,
	0, 265, 265, 265, 265, 0, 0, 0, 1245, 0,
	265, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	3459, 3461, 0, 0, 2260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 1245, 1245, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	1808, 0, 0, 1245, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 1245, 1245,
	1245, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 3562, 0, 0, 0, 3566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 1245, 0, 0, 0, 3619, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 1818, 0, 0, 1828, 3661, 0,
	1484, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 267, 267, 0,
	0, 267, 1245, 1328, 0, 0, 0, 0, 0, 1245,
	1794, 1795, 0, 0, 0, 0, 3674, 0, 0, 1245,
	1245, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 1241, 267, 1328, 267,
	267, 0, 1328, 267, 267, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 1245, 0, 0, 1245, 0, 0,
	0, 0, 267, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 1245, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 1328,
	0, 267, 267, 2006, 0, 0, 265, 0, 0, 0,
	265, 265, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 1328, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 265, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 1107, 109, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 948, 0, 997, 0, 1245, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 265, 0, 0, 265, 0, 956, 0,
	0, 0, 0, 1947, 0, 1328, 0, 0, 0, 1819,
	0, 0, 0, 0, 971, 0, 954, 953, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 973, 0,
	1832, 0, 0, 1245, 955, 0, 1245, 0, 0, 958,
	1245, 0, 0, 0, 1005, 109, 0, 0, 267, 0,
	1245, 1245, 0, 968, 969, 0, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	998, 960, 0, 0, 0, 0, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 0, 0,
	0, 0, 1817, 0, 0, 265, 0, 0, 962, 265,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 995, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 265, 0, 0,
	1044, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 2260, 0, 0, 0, 0, 0,
	265, 952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 1228, 0,
	965, 966, 3953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2260, 0, 974,
	972, 0, 3971, 0, 0, 0, 0, 967, 0, 0,
	0, 983, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 265, 0, 0, 0, 0, 0, 0, 1002,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 999, 0, 0, 0, 0, 267, 0, 0, 0,
	4020, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 267, 267, 267, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 1004, 0, 0,
	0, 0, 1245, 267, 1245, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	957, 0, 0, 0, 990, 991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 993, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	988, 0, 0, 0, 0, 0, 0, 0, 1003, 984,
	0, 0, 977, 975, 0, 980, 0, 0, 0, 0,
	1328, 981, 0, 0, 950, 0, 1000, 0, 0, 0,
	0, 0, 0, 1241, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 951, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	992, 0, 982, 0, 0, 0, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 0, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	987, 0, 0, 0, 0, 4159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2260, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 1328, 1328, 267, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 2260, 0, 267, 0, 0,
	0, 267, 0, 0, 0, 4247, 0, 267, 0, 265,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 267, 0, 0, 0, 0, 265, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 1328, 0,
	1328, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 1328, 1328, 0, 807,
	0, 0, 0, 0, 265, 0, 0, 1328, 267, 265,
	0, 267, 0, 0, 265, 0, 0, 0, 0, 1328,
	0, 1328, 1328, 1328, 0, 807, 109, 0, 0, 0,
	0, 0, 267, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 267, 0, 267, 0,
	267, 0, 267, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4346, 0, 0, 0, 267, 267, 267, 267,
	0, 0, 0, 0, 0, 109, 0, 109, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 2260, 0, 0, 0,
	1064, 109, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	109, 0, 0, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 0, 1328, 0, 0, 0, 0, 0, 4479,
	1484, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 1947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 1044, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 265, 0, 0,
	267, 4572, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 267, 0, 0, 0, 267, 0,
	267, 0, 0, 0, 0, 0, 1947, 267, 267, 0,
	0, 0, 0, 1328, 1328, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 4624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 1945, 0, 1948, 0, 109, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 4663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 1328, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4727, 0, 0, 0, 0, 0, 267, 0, 267,
	0, 1328, 0, 0, 0, 0, 267, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 1328, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 267, 0,
	0, 0, 0, 1947, 1947, 0, 0, 0, 0, 267,
	0, 0, 1384, 0, 0, 0, 1384, 0, 0, 0,
	0, 265, 265, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 267, 267,
	267, 267, 0, 0, 0, 0, 0, 267, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 1326, 1947, 0, 0, 0, 0, 267,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 265, 1947, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 1064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 1385, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1044, 0, 1327, 1044, 1044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 1328, 0,
	1327, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2504, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	1064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 1853, 0, 0, 0, 0, 1327,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1328, 0, 0,
	1947, 1384, 1947, 267, 0, 0, 0, 267, 267, 0,
	0, 0, 0, 807, 0, 0, 0, 0, 0, 0,
	807, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1328, 0, 0, 1228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	267, 0, 1328, 267, 0, 0, 0, 0, 0, 1326,
	267, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	1326, 0, 0, 0, 1328, 267, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 1328, 0, 1328, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 1328, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 1326, 0, 1328,
	1328, 0, 0, 0, 0, 0, 1384, 267, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 1328, 0, 267, 1328, 267,
	0, 0, 0, 0, 109, 1814, 1808, 109, 0, 109,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 1327,
	1326, 0, 1326, 0, 1326, 267, 0, 0, 0, 1833,
	1327, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	1326, 1326, 0, 109, 0, 0, 109, 0, 1799, 0,
	0, 1326, 109, 0, 1385, 0, 0, 1796, 0, 0,
	0, 0, 0, 1326, 1328, 1326, 1326, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 1828, 0, 0, 1327, 1327, 0, 0,
	1807, 1809, 0, 0, 1384, 0, 1385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 1825,
	0, 0, 0, 0, 1328, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 2504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	1327, 0, 1327, 1826, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 1327, 1327, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 1384, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 1328, 267, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 1328, 1328, 1328, 0, 0, 0, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 1326, 1328,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 267,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1384,
	0, 0, 0, 0, 0, 0, 1328, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 0, 109, 109, 109, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 1328, 0,
	1328, 0, 0, 807, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 109,
	109, 0, 109, 109, 109, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 1328,
	267, 0, 1328, 267, 0, 0, 0, 1327, 1327, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 1328, 1328, 0, 0, 1228, 0, 0, 1064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 109, 109, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 267, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 0, 1328, 1328, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 1328,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	1327, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 1328, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 1328, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1326, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 0, 0,
	267, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 1328, 0, 1326, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	1326, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 1385, 0, 0, 1326, 0, 1326, 0, 0,
	0, 1384, 0, 0, 0, 0, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 1326,
	0, 0, 0, 0, 0, 1385, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 267, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 1326, 0, 0, 0, 0, 0,
	1327, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 0, 0, 0, 0, 1228, 1327, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	1327, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 1385,
	1827, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	1327, 0, 0, 0, 1327, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 1384, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 1327, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 1327, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 109, 0, 0, 0, 0, 0,
	1785, 0, 0, 1327, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 1385,
	0, 0, 1385, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 1826, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 1385, 0, 0, 0, 1815,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	1830, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1803, 1804,
	1805, 1326, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 1326, 1326, 1326, 0,
	0, 0, 0, 2504, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 1326, 0, 1818, 0, 0, 1828, 0,
	0, 0, 0, 0, 1832, 1807, 1809, 0, 0, 1326,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 0, 0, 0, 1826, 3692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 1327, 1384, 0, 1384, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 1326, 0, 0, 0, 0, 0, 0,
	1806, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1326, 0, 0, 0, 0, 1327, 1327, 1327, 0,
	0, 1384, 0, 1326, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 1384, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 109, 1385, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 1326, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	0, 0, 1326, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 3237, 1326, 1326, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	0, 1780, 1385, 0, 1385, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 1327, 0, 0, 0, 1833, 0, 0,
	0, 1384, 1385, 1326, 1777, 1778, 1779, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1384, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1385, 0, 1327, 0, 0, 1327, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 1384, 0, 0, 0, 0, 0, 0, 1326, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 1326, 1326,
	1785, 0, 0, 0, 0, 1327, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 1818, 0,
	0, 1828, 1327, 1384, 0, 0, 1326, 0, 1807, 1809,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 1327, 1327, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 1800, 0, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 1385, 0, 1327, 0, 0, 0, 0, 0, 1815,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 1385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 1326,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 1326,
	1326, 1385, 0, 0, 0, 0, 1801, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 1327, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1385, 1832, 0, 1327, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 3236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	1327, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	1387, 282, 283, 1388, 1389, 1390, 1327, 1391, 629, 1392,
	1393, 1394, 1395, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 1396,
	634, 294, 295, 296, 297, 298, 299, 1397, 1398, 0,
	300, 635, 636, 637, 1399, 301, 302, 638, 1400, 1329,
	1401, 303, 304, 305, 306, 307, 308, 309, 0, 1402,
	311, 312, 313, 310, 314, 1403, 315, 0, 316, 317,
	318, 319, 320, 321, 1404, 322, 323, 324, 1186, 325,
	326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 1412, 337,
	334, 335, 1413, 338, 336, 339, 1414, 340, 341, 342,
	1415, 1416, 343, 344, 345, 1417, 346, 347, 1418, 348,
	349, 350, 1419, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 1420,
	272, 1421, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 1422, 369, 370, 1423, 1424, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1425, 383, 647, 1426, 648, 384,
	1427, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 1428, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1429, 1188, 400,
	652, 653, 1430, 654, 1431, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1432, 414, 416, 415, 1433, 417,
	656, 1193, 418, 419, 1194, 1434, 420, 0, 0, 0,
	421, 422, 425, 1435, 1436, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1437, 274, 1197, 466, 467, 1438, 657, 468, 658,
	470, 471, 1439, 0, 472, 0, 1440, 1441, 474, 475,
	476, 1442, 1443, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1444, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 1445, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 1446, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 1447, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 1448, 555, 556, 554, 557, 558, 559, 1449, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 1450, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 1451, 587, 588, 0, 584, 575, 1452,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 1453,
	597, 670, 671, 672, 673, 1454, 606, 1455, 598, 599,
	600, 674, 601, 675, 1456, 602, 603, 604, 605, 0,
	607, 608, 1457, 1458, 609, 610, 611, 613, 614, 612,
	615, 1459, 616, 1460, 0, 617, 618, 619, 676, 677,
	678, 1461, 621, 620, 622, 679, 1462, 623, 1463, 1464,
	1465, 1466, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 2729, 0, 0, 0, 0, 0,
	0, 0, 2730, 275, 277, 276, 278, 279, 280, 281,
	1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392,
	1393, 1394, 1395, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 1396,
	634, 294, 295, 296, 297, 298, 299, 1397, 1398, 0,
	300, 635, 636, 637, 1399, 301, 302, 638, 1400, 1329,
	1401, 303, 304, 305, 306, 307, 308, 309, 0, 1402,
	311, 312, 313, 310, 314, 1403, 315, 0, 316, 317,
	318, 319, 320, 321, 1404, 322, 323, 324, 1186, 325,
	326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 1412, 337,
	334, 335, 1413, 338, 336, 339, 1414, 340, 341, 342,
	1415, 1416, 343, 344, 345, 1417, 346, 347, 1418, 348,
	349, 350, 1419, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 1420,
	272, 1421, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 1422, 369, 370, 1423, 1424, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1425, 383, 647, 1426, 648, 384,
	1427, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 1428, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1429, 1188, 400,
	652, 653, 1430, 654, 1431, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1432, 414, 416, 415, 1433, 417,
	656, 1193, 418, 419, 1194, 1434, 420, 0, 0, 0,
	421, 422, 425, 1435, 1436, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1437, 274, 1197, 466, 467, 1438, 657, 468, 658,
	470, 471, 1439, 0, 472, 0, 1440, 1441, 474, 475,
	476, 1442, 1443, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1444, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 1445, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 1446, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 1447, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 1448, 555, 556, 554, 557, 558, 559, 1449, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 1450, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 1451, 587, 588, 0, 584, 575, 1452,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 1453,
	597, 670, 671, 672, 673, 1454, 606, 1455, 598, 599,
	600, 674, 601, 675, 1456, 602, 603, 604, 605, 0,
	607, 608, 1457, 1458, 609, 610, 611, 613, 614, 612,
	615, 1459, 616, 1460, 0, 617, 618, 619, 676, 677,
	678, 1461, 621, 620, 622, 679, 1462, 623, 1463, 1464,
	1465, 1466, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 3701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3703, 275, 277, 276, 278, 279, 280, 281, 1387, 282,
	283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394,
	1395, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 1396, 634, 294,
	295, 296, 297, 298, 299, 1397, 1398, 0, 300, 635,
	636, 637, 1399, 301, 302, 638, 1400, 1329, 1401, 303,
	304, 305, 306, 307, 308, 309, 0, 1402, 311, 312,
	313, 310, 314, 1403, 315, 0, 316, 317, 318, 319,
	320, 321, 1404, 322, 323, 324, 1186, 325, 326, 327,
	1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 1412, 337, 334, 335,
	1413, 338, 336, 339, 1414, 340, 341, 342, 1415, 1416,
	343, 344, 345, 1417, 346, 347, 1418, 348, 349, 350,
	1419, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 1420, 272, 1421,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 1422, 369, 370, 1423, 1424, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 1425, 383, 647, 1426, 648, 384, 1427, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 1428, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 1429, 1188, 400, 652, 653,
	1430, 654, 1431, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1432, 414, 416, 415, 1433, 417, 656, 1193,
	418, 419, 1194, 1434, 420, 0, 0, 0, 421, 422,
	425, 1435, 1436, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1437,
	274, 1197, 466, 467, 1438, 657, 468, 658, 470, 471,
	1439, 0, 472, 0, 1440, 1441, 474, 475, 476, 1442,
	1443, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	1444, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 1445, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 1446, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 1447, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 1448,
	555, 556, 554, 557, 558, 559, 1449, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 1450, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 1451, 587, 588, 0, 584, 575, 1452, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 1453, 597, 670,
	671, 672, 673, 1454, 606, 1455, 598, 599, 600, 674,
	601, 675, 1456, 602, 603, 604, 605, 0, 607, 608,
	1457, 1458, 609, 610, 611, 613, 614, 612, 615, 1459,
	616, 1460, 0, 617, 618, 619, 676, 677, 678, 1461,
	621, 620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4091, 275, 277, 276, 278, 279, 280, 281,
	1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392,
	1393, 1394, 1395, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 1396,
	634, 294, 295, 296, 297, 298, 299, 1397, 1398, 0,
	300, 635, 636, 637, 1399, 301, 302, 638, 1400, 1329,
	1401, 303, 304, 305, 306, 307, 308, 309, 0, 1402,
	311, 312, 313, 310, 314, 1403, 315, 0, 316, 317,
	318, 319, 320, 321, 1404, 322, 323, 324, 1186, 325,
	326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 1412, 337,
	334, 335, 1413, 338, 336, 339, 1414, 340, 341, 342,
	1415, 1416, 343, 344, 345, 1417, 346, 347, 1418, 348,
	349, 350, 1419, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 1420,
	272, 1421, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 1422, 369, 370, 1423, 1424, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1425, 383, 647, 1426, 648, 384,
	1427, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 1428, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1429, 1188, 400,
	652, 653, 1430, 654, 1431, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1432, 414, 416, 415, 1433, 417,
	656, 1193, 418, 419, 1194, 1434, 420, 0, 0, 0,
	421, 422, 425, 1435, 1436, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1437, 274, 1197, 466, 467, 1438, 657, 468, 658,
	470, 471, 1439, 0, 472, 0, 1440, 1441, 474, 475,
	476, 1442, 1443, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1444, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 1445, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 1446, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 1447, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 1448, 555, 556, 554, 557, 558, 559, 1449, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 1450, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 1451, 587, 588, 0, 584, 575, 1452,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 1453,
	597, 670, 671, 672, 673, 1454, 606, 1455, 598, 599,
	600, 674, 601, 675, 1456, 602, 603, 604, 605, 0,
	607, 608, 1457, 1458, 609, 610, 611, 613, 614, 612,
	615, 1459, 616, 1460, 0, 617, 618, 619, 676, 677,
	678, 1461, 621, 620, 622, 679, 1462, 623, 1463, 1464,
	1465, 1466, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4298,
	275, 277, 276, 278, 279, 280, 281, 1387, 282, 283,
	1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1396, 634, 294, 295,
	296, 297, 298, 299, 1397, 1398, 0, 300, 635, 636,
	637, 1399, 301, 302, 638, 1400, 1329, 1401, 303, 304,
	305, 306, 307, 308, 309, 0, 1402, 311, 312, 313,
	310, 314, 1403, 315, 0, 316, 317, 318, 319, 320,
	321, 1404, 322, 323, 324, 1186, 325, 326, 327, 1405,
	1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1412, 337, 334, 335, 1413,
	338, 336, 339, 1414, 340, 341, 342, 1415, 1416, 343,
	344, 345, 1417, 346, 347, 1418, 348, 349, 350, 1419,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1420, 272, 1421, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1422, 369, 370, 1423, 1424, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1425, 383, 647, 1426, 648, 384, 1427, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	1428, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1429, 1188, 400, 652, 653, 1430,
	654, 1431, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1432, 414, 416, 415, 1433, 417, 656, 1193, 418,
	419, 1194, 1434, 420, 0, 0, 0, 421, 422, 425,
	1435, 1436, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1437, 274,
	1197, 466, 467, 1438, 657, 468, 658, 470, 471, 1439,
	0, 472, 0, 1440, 1441, 474, 475, 476, 1442, 1443,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1444,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1445, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1446, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1447, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1448, 555,
	556, 554, 557, 558, 559, 1449, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1450, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1451, 587, 588, 0, 584, 575, 1452, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1453, 597, 670, 671,
	672, 673, 1454, 606, 1455, 598, 599, 600, 674, 601,
	675, 1456, 602, 603, 604, 605, 0, 607, 608, 1457,
	1458, 609, 610, 611, 613, 614, 612, 615, 1459, 616,
	1460, 0, 617, 618, 619, 676, 677, 678, 1461, 621,
	620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4168, 275, 277, 276,
	278, 279, 280, 281, 1387, 282, 283, 1388, 1389, 1390,
	0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 1396, 634, 294, 295, 296, 297, 298,
	299, 1397, 1398, 0, 300, 635, 636, 637, 1399, 301,
	302, 638, 1400, 1329, 1401, 303, 304, 305, 306, 307,
	308, 309, 0, 1402, 311, 312, 313, 310, 314, 1403,
	315, 0, 316, 317, 318, 319, 320, 321, 1404, 322,
	323, 324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407,
	1409, 1410, 1411, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 1412, 337, 334, 335, 1413, 338, 336, 339,
	1414, 340, 341, 342, 1415, 1416, 343, 344, 345, 1417,
	346, 347, 1418, 348, 349, 350, 1419, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 1420, 272, 1421, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 1422, 369,
	370, 1423, 1424, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 1425, 383,
	647, 1426, 648, 384, 1427, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 1428, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 1429, 1188, 400, 652, 653, 1430, 654, 1431, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1432, 414,
	416, 415, 1433, 417, 656, 1193, 418, 419, 1194, 1434,
	420, 0, 0, 0, 421, 422, 425, 1435, 1436, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1437, 274, 1197, 466, 467,
	1438, 657, 468, 658, 470, 471, 1439, 0, 472, 0,
	1440, 1441, 474, 475, 476, 1442, 1443, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 1444, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 1445, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 1446, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	1447, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 1448, 555, 556, 554, 557,
	558, 559, 1449, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	1450, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 1451, 587, 588,
	0, 584, 575, 1452, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 1453, 597, 670, 671, 672, 673, 1454,
	606, 1455, 598, 599, 600, 674, 601, 675, 1456, 602,
	603, 604, 605, 0, 607, 608, 1457, 1458, 609, 610,
	611, 613, 614, 612, 615, 1459, 616, 1460, 0, 617,
	618, 619, 676, 677, 678, 1461, 621, 620, 622, 679,
	1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4021, 275, 277, 276, 278, 279, 280,
	281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629,
	1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1396, 634, 294, 295, 296, 297, 298, 299, 1397, 1398,
	0, 300, 635, 636, 637, 1399, 301, 302, 638, 1400,
	1329, 1401, 303, 304, 305, 306, 307, 308, 309, 0,
	1402, 311, 312, 313, 310, 314, 1403, 315, 0, 316,
	317, 318, 319, 320, 321, 1404, 322, 323, 324, 1186,
	325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1412,
	337, 334, 335, 1413, 338, 336, 339, 1414, 340, 341,
	342, 1415, 1416, 343, 344, 345, 1417, 346, 347, 1418,
	348, 349, 350, 1419, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1420, 272, 1421, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1422, 369, 370, 1423, 1424,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1425, 383, 647, 1426, 648,
	384, 1427, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 1428, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1429, 1188,
	400, 652, 653, 1430, 654, 1431, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1432, 414, 416, 415, 1433,
	417, 656, 1193, 418, 419, 1194, 1434, 420, 0, 0,
	0, 421, 422, 425, 1435, 1436, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1437, 274, 1197, 466, 467, 1438, 657, 468,
	658, 470, 471, 1439, 0, 472, 0, 1440, 1441, 474,
	475, 476, 1442, 1443, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1444, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1445,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1446, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1447, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1448, 555, 556, 554, 557, 558, 559, 1449,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1450, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1451, 587, 588, 0, 584, 575,
	1452, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1453, 597, 670, 671, 672, 673, 1454, 606, 1455, 598,
	599, 600, 674, 601, 675, 1456, 602, 603, 604, 605,
	0, 607, 608, 1457, 1458, 609, 610, 611, 613, 614,
	612, 615, 1459, 616, 1460, 0, 617, 618, 619, 676,
	677, 678, 1461, 621, 620, 622, 679, 1462, 623, 1463,
	1464, 1465, 1466, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3719, 275, 277, 276, 278, 279, 280, 281, 1387, 282,
	283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394,
	1395, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 1396, 634, 294,
	295, 296, 297, 298, 299, 1397, 1398, 0, 300, 635,
	636, 637, 1399, 301, 302, 638, 1400, 1329, 1401, 303,
	304, 305, 306, 307, 308, 309, 0, 1402, 311, 312,
	313, 310, 314, 1403, 315, 0, 316, 317, 318, 319,
	320, 321, 1404, 322, 323, 324, 1186, 325, 326, 327,
	1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 1412, 337, 334, 335,
	1413, 338, 336, 339, 1414, 340, 341, 342, 1415, 1416,
	343, 344, 345, 1417, 346, 347, 1418, 348, 349, 350,
	1419, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 1420, 272, 1421,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 1422, 369, 370, 1423, 1424, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 1425, 383, 647, 1426, 648, 384, 1427, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 1428, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 1429, 1188, 400, 652, 653,
	1430, 654, 1431, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1432, 414, 416, 415, 1433, 417, 656, 1193,
	418, 419, 1194, 1434, 420, 0, 0, 0, 421, 422,
	425, 1435, 1436, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1437,
	274, 1197, 466, 467, 1438, 657, 468, 658, 470, 471,
	1439, 0, 472, 0, 1440, 1441, 474, 475, 476, 1442,
	1443, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	1444, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 1445, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 1446, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 1447, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 1448,
	555, 556, 554, 557, 558, 559, 1449, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 1450, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 1451, 587, 588, 0, 584, 575, 1452, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 1453, 597, 670,
	671, 672, 673, 1454, 606, 1455, 598, 599, 600, 674,
	601, 675, 1456, 602, 603, 604, 605, 0, 607, 608,
	1457, 1458, 609, 610, 611, 613, 614, 612, 615, 1459,
	616, 1460, 0, 617, 618, 619, 676, 677, 678, 1461,
	621, 620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3547, 275, 277,
	276, 278, 279, 280, 281, 1387, 282, 283, 1388, 1389,
	1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1396, 634, 294, 295, 296, 297,
	298, 299, 1397, 1398, 0, 300, 635, 636, 637, 1399,
	301, 302, 638, 1400, 1329, 1401, 303, 304, 305, 306,
	307, 308, 309, 0, 1402, 311, 312, 313, 310, 314,
	1403, 315, 0, 316, 317, 318, 319, 320, 321, 1404,
	322, 323, 324, 1186, 325, 326, 327, 1405, 1406, 1408,
	1407, 1409, 1410, 1411, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1412, 337, 334, 335, 1413, 338, 336,
	339, 1414, 340, 341, 342, 1415, 1416, 343, 344, 345,
	1417, 346, 347, 1418, 348, 349, 350, 1419, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1420, 272, 1421, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1422,
	369, 370, 1423, 1424, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1425,
	383, 647, 1426, 648, 384, 1427, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 1428, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1429, 1188, 400, 652, 653, 1430, 654, 1431,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1432,
	414, 416, 415, 1433, 417, 656, 1193, 418, 419, 1194,
	1434, 420, 0, 0, 0, 421, 422, 425, 1435, 1436,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1437, 274, 1197, 466,
	467, 1438, 657, 468, 658, 470, 471, 1439, 0, 472,
	0, 1440, 1441, 474, 475, 476, 1442, 1443, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1444, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1445, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1446,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1447, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1448, 555, 556, 554,
	557, 558, 559, 1449, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1450, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1451, 587,
	588, 0, 584, 575, 1452, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1453, 597, 670, 671, 672, 673,
	1454, 606, 1455, 598, 599, 600, 674, 601, 675, 1456,
	602, 603, 604, 605, 0, 607, 608, 1457, 1458, 609,
	610, 611, 613, 614, 612, 615, 1459, 616, 1460, 0,
	617, 618, 619, 676, 677, 678, 1461, 621, 620, 622,
	679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2586, 275, 277, 276, 278, 279,
	280, 281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391,
	629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 1396, 634, 294, 295, 296, 297, 298, 299, 1397,
	1398, 0, 300, 635, 636, 637, 1399, 301, 302, 638,
	1400, 1329, 1401, 303, 304, 305, 306, 307, 308, 309,
	0, 1402, 311, 312, 313, 310, 314, 1403, 315, 0,
	316, 317, 318, 319, 320, 321, 1404, 322, 323, 324,
	1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410,
	1411, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	1412, 337, 334, 335, 1413, 338, 336, 339, 1414, 340,
	341, 342, 1415, 1416, 343, 344, 345, 1417, 346, 347,
	1418, 348, 349, 350, 1419, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 1420, 272, 1421, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 1422, 369, 370, 1423,
	1424, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 1425, 383, 647, 1426,
	648, 384, 1427, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 1428, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 1429,
	1188, 400, 652, 653, 1430, 654, 1431, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 1432, 414, 416, 415,
	1433, 417, 656, 1193, 418, 419, 1194, 1434, 420, 0,
	0, 0, 421, 422, 425, 1435, 1436, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1437, 274, 1197, 466, 467, 1438, 657,
	468, 658, 470, 471, 1439, 0, 472, 0, 1440, 1441,
	474, 475, 476, 1442, 1443, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 1444, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	1445, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 1446, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 1447, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 1448, 555, 556, 554, 557, 558, 559,
	1449, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 1450, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 1451, 587, 588, 0, 584,
	575, 1452, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 1453, 597, 670, 671, 672, 673, 1454, 606, 1455,
	598, 599, 600, 674, 601, 675, 1456, 602, 603, 604,
	605, 0, 607, 608, 1457, 1458, 609, 610, 611, 613,
	614, 612, 615, 1459, 616, 1460, 0, 617, 618, 619,
	676, 677, 678, 1461, 621, 620, 622, 679, 1462, 623,
	1463, 1464, 1465, 1466, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 1478, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2221, 275, 277, 276, 278, 279, 280, 281, 1387,
	282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393,
	1394, 1395, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 1396, 634,
	294, 295, 296, 297, 298, 299, 1397, 1398, 0, 300,
	635, 636, 637, 1399, 301, 302, 638, 1400, 1329, 1401,
	303, 304, 305, 306, 307, 308, 309, 0, 1402, 311,
	312, 313, 310, 314, 1403, 315, 0, 316, 317, 318,
	319, 320, 321, 1404, 322, 323, 324, 1186, 325, 326,
	327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 1412, 337, 334,
	335, 1413, 338, 336, 339, 1414, 340, 341, 342, 1415,
	1416, 343, 344, 345, 1417, 346, 347, 1418, 348, 349,
	350, 1419, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 1420, 272,
	1421, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 1422, 369, 370, 1423, 1424, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 1425, 383, 647, 1426, 648, 384, 1427,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 1428, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 1429, 1188, 400, 652,
	653, 1430, 654, 1431, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1432, 414, 416, 415, 1433, 417, 656,
	1193, 418, 419, 1194, 1434, 420, 0, 0, 0, 421,
	422, 425, 1435, 1436, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1437, 274, 1197, 466, 467, 1438, 657, 468, 658, 470,
	471, 1439, 0, 472, 0, 1440, 1441, 474, 475, 476,
	1442, 1443, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 1444, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 1445, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 1446, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 1447, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	1448, 555, 556, 554, 557, 558, 559, 1449, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 1450, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 1451, 587, 588, 0, 584, 575, 1452, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 1453, 597,
	670, 671, 672, 673, 1454, 606, 1455, 598, 599, 600,
	674, 601, 675, 1456, 602, 603, 604, 605, 0, 607,
	608, 1457, 1458, 609, 610, 611, 613, 614, 612, 615,
	1459, 616, 1460, 0, 617, 618, 619, 676, 677, 678,
	1461, 621, 620, 622, 679, 1462, 623, 1463, 1464, 1465,
	1466, 624, 625, 680, 626, 627, 628, 1379, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 1387, 282, 283, 1388, 1389, 1390, 0,
	1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 1396, 634, 294, 295, 296, 297, 298, 299,
	1397, 1398, 0, 300, 635, 636, 637, 1399, 301, 302,
	638, 1400, 1329, 1401, 303, 304, 305, 306, 307, 308,
	309, 0, 1402, 311, 312, 313, 310, 314, 1403, 315,
	0, 316, 317, 318, 319, 320, 321, 1404, 322, 323,
	324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409,
	1410, 1411, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 1412, 337, 334, 335, 1413, 338, 336, 339, 1414,
	340, 341, 342, 1415, 1416, 343, 344, 345, 1417, 346,
	347, 1418, 348, 349, 350, 1419, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 1420, 272, 1421, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 1422, 369, 370,
	1423, 1424, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 1425, 383, 647,
	1426, 648, 384, 1427, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 1428, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	1429, 1188, 400, 652, 653, 1430, 654, 1431, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1432, 414, 416,
	415, 1433, 417, 656, 1193, 418, 419, 1194, 1434, 420,
	0, 0, 0, 421, 422, 425, 1435, 1436, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1437, 274, 1197, 466, 467, 1438,
	657, 468, 658, 470, 471, 1439, 0, 472, 0, 1440,
	1441, 474, 475, 476, 1442, 1443, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 1444, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 1445, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 1446, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 1447,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 1448, 555, 556, 554, 557, 558,
	559, 1449, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 1450,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 1451, 587, 588, 0,
	584, 575, 1452, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 1453, 597, 670, 671, 672, 673, 1454, 606,
	1455, 598, 599, 600, 674, 601, 675, 1456, 602, 603,
	604, 605, 0, 607, 608, 1457, 1458, 609, 610, 611,
	613, 614, 612, 615, 1459, 616, 1460, 0, 617, 618,
	619, 676, 677, 678, 1461, 621, 620, 622, 679, 1462,
	623, 1463, 1464, 1465, 1466, 624, 625, 680, 626, 627,
	628, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 1387, 282, 283, 1388, 1389,
	1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1396, 634, 294, 295, 296, 297,
	298, 299, 1397, 1398, 0, 300, 635, 636, 637, 1399,
	301, 302, 638, 1400, 1329, 1401, 303, 304, 305, 306,
	307, 308, 309, 0, 1402, 311, 312, 313, 310, 314,
	1403, 315, 0, 316, 317, 318, 319, 320, 321, 1404,
	322, 323, 324, 1186, 325, 326, 327, 1405, 1406, 1408,
	1407, 1409, 1410, 1411, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1412, 337, 334, 335, 1413, 338, 336,
	339, 1414, 340, 341, 342, 1415, 1416, 343, 344, 345,
	1417, 346, 347, 1418, 348, 349, 350, 1419, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1420, 272, 1421, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1422,
	369, 370, 1423, 1424, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1425,
	383, 647, 1426, 648, 384, 1427, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 1428, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1429, 1188, 400, 652, 653, 1430, 654, 1431,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1432,
	414, 416, 415, 1433, 417, 656, 1193, 418, 419, 1194,
	1434, 420, 0, 0, 0, 421, 422, 425, 1435, 1436,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1437, 274, 1197, 466,
	467, 1438, 657, 468, 658, 470, 471, 1439, 0, 472,
	0, 1440, 1441, 474, 475, 476, 1442, 1443, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1444, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1445, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1446,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1447, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1448, 555, 556, 554,
	557, 558, 559, 1449, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1450, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1451, 587,
	588, 0, 584, 575, 1452, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1453, 597, 670, 671, 672, 673,
	1454, 606, 1455, 598, 599, 600, 674, 601, 675, 1456,
	602, 603, 604, 605, 0, 607, 608, 1457, 1458, 609,
	610, 611, 613, 614, 612, 615, 1459, 616, 1460, 0,
	617, 618, 619, 676, 677, 678, 1461, 621, 620, 622,
	679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680,
	626, 627, 628, 2561, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 2558,
	282, 283, 0, 0, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 2559,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	2557, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 2560, 0,
	0, 0, 0, 0, 0, 1105, 2556, 0, 1065, 1103,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 234, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 236, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 1603, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 228, 624, 625, 680, 626,
	627, 628, 1079, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	1858, 1856, 0, 0, 1103, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 234, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 236, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 1603, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 228, 624,
	625, 680, 626, 627, 628, 1079, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 1858, 3187, 0, 0, 1103, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 234, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 236,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 1603, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 228, 624, 625, 680, 626, 627, 628, 1079, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 1858, 1856, 0, 0,
	1103, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 2690, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 2695, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 2691, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	2692, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 2606, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 0, 0,
	0, 0, 0, 0, 0, 1105, 2604, 0, 2603, 1103,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 0, 0, 0, 0, 0, 0, 0,
	1105, 2601, 0, 2600, 1103, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 0, 0,
	0, 0, 0, 0, 0, 1105, 2598, 0, 2597, 1103,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 0, 0, 0, 0, 0, 0, 0,
	1105, 2595, 0, 1699, 1103, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 1698, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 1068,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 1083, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 4636, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 1083, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 2438,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 2437, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 1083,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 4378, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 1083, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 3983, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 1926, 0, 0, 0, 0, 0,
	0, 1105, 0, 0, 0, 1103, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 3697, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 1926, 0, 0, 0, 0,
	0, 0, 1105, 0, 0, 0, 1103, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 2695,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 0, 0, 0, 0,
	0, 0, 0, 1105, 1856, 0, 2700, 1103, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 2698, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 2686, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 2674, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	2672, 0, 2663, 2670, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 2666, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	2667, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 2668, 435, 2665, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 2669, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 2664, 628, 1079, 0, 2660, 0, 2663, 2670,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 2666, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 2667, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 2668, 435,
	2665, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 2669, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 2664, 628,
	1079, 0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 0, 0, 0,
	0, 0, 1864, 0, 1105, 0, 0, 0, 1103, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 2417, 282, 283, 0, 0, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 2381, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 2357,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 1704, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 1633, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 1628, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 1619, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 1614,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 1526, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1525, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 1520, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1519, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 1513, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 1331, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 4685, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 4684, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 4683,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 4685, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 4684, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 4317, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 4318, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 4316, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 0, 1121, 1093, 1094, 1095, 3154,
	3155, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	0, 1121, 1093, 1094, 1095, 3152, 3153, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 0, 0, 0, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 275, 277, 276, 278, 279, 280,
	281, 1105, 282, 283, 0, 1103, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 2425, 2426,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 0, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 2682, 0, 0,
	0, 0, 0, 0, 2680, 2681, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 0, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 3147,
	3148, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	2109, 2110, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 0, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	4685, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 0, 1148, 0, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 0, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 4684,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 1065,
	0, 1243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 0, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 1144, 0, 300, 635, 636, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1229,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 274, 1197, 466,
	467, 0, 1149, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 1235, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 1237, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 234, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 0, 584, 575, 236, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 1603, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 1243, 228, 624, 625, 680,
	626, 627, 628, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1145, 0, 1233,
	0, 1950, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 1144, 0, 300,
	635, 636, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1229, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 274, 1197, 466, 467, 0, 1149, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 1235, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 1237, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	234, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 0, 584, 575, 236, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 1603, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 3311, 0, 1243,
	228, 624, 625, 680, 626, 627, 628, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 0, 1233, 0, 1950, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 1144, 0, 300, 635, 636, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1229, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 274, 1197, 466, 467, 0,
	1149, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	1235, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	1237, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 1225, 0, 1243, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1145, 0, 1233, 0, 1231,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 1144, 0, 300, 635, 636,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1229, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 274,
	1197, 466, 467, 0, 1149, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 1235, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 1237, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 1243, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	0, 1233, 0, 1231, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 1144,
	0, 300, 635, 636, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1229, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 274, 1197, 466, 467, 0, 1149, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 1235, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 1237, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 1243, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 0, 1233, 0, 1231, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 1144, 0, 300, 635, 636, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 274, 1197, 466,
	467, 0, 1149, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 1243, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1145, 0, 0,
	0, 4141, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 1144, 0, 300,
	635, 636, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 274, 1197, 466, 467, 0, 1149, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 1237, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 269,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 2529,
	2530, 2531, 2548, 2549, 2550, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 2551,
	0, 629, 0, 0, 0, 1848, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 1833, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 2541, 0, 311, 312, 313, 310, 314, 0, 315,
	2537, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 2542, 2543, 2544, 2545, 365,
	366, 367, 644, 0, 0, 2536, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 2546,
	2547, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 2539, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 2540, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 1832,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 1065, 0, 1324,
	2526, 2527, 2528, 2552, 2538, 2532, 0, 2534, 2535, 2533,
	2520, 2521, 2522, 2523, 2524, 2525, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 234, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 236, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 1603, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 1600, 0, 1324, 228, 624, 625, 680, 626, 627,
	628, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 189,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 234, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 236, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 1603, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 228, 624,
	625, 680, 626, 627, 628, 1324, 1323, 229, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 189, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1324, 1323, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 1625, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1324,
	1323, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 3613, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 2299, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1324, 2213, 0, 0, 0, 0, 2214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 1625,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1329, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	2212, 416, 415, 0, 417, 656, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 0, 1197, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1324, 1323, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 1625, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 1065, 0, 269, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 1609, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 234, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	236, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 1603,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 1243, 228, 624, 625, 680, 626, 627, 628, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 0, 0, 0, 189, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 1144, 0, 300, 635, 636, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 274, 1197, 466,
	467, 0, 1149, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	269, 3057, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 1964, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 269, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	4852, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 3563, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 1597, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 269, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 3045, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 269, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 3722, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 901, 0,
	806, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 2290, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 813, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 899, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 811, 589, 590, 591, 592, 593, 812,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	806, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 2031, 282, 283, 0, 0, 0,
	0, 0, 629, 816, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 813, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	2030, 550, 551, 552, 553, 0, 2032, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 811, 589, 590, 591, 592, 593, 812,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 2029, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	806, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 1982, 282, 283, 0, 0, 0,
	0, 0, 629, 816, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 813, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	1981, 550, 551, 552, 553, 0, 1983, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 811, 589, 590, 591, 592, 593, 812,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 1980, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	804, 623, 806, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 816, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 813, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 811, 589, 590, 591, 592,
	593, 812, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 2004, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 0, 816, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 0, 2010,
	0, 292, 2000, 293, 2016, 0, 2023, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 2026, 2027, 0,
	0, 301, 302, 0, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	1168, 333, 2014, 2013, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 0, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 0, 0, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 2012, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 2021,
	2022, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 0, 0, 0, 384, 0, 385, 386, 387,
	388, 389, 0, 0, 0, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 2007, 2008, 0, 2003,
	0, 402, 403, 1190, 0, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 0, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 0, 468, 2015, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 0, 1198, 479, 1199, 0, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 1997, 493, 494, 495, 1998, 496, 497, 498, 0,
	499, 0, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 2011, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 0, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 2009,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 2025, 578, 579, 580, 581, 0, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 2017, 2018, 2019,
	2020, 0, 606, 0, 598, 599, 600, 0, 601, 0,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 0, 2001, 2024, 0, 621, 620,
	622, 0, 0, 623, 0, 0, 0, 806, 624, 625,
	0, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1991, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 813, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	811, 589, 590, 591, 592, 593, 812, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 806, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	816, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 813, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 2336, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 2337, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	811, 589, 590, 591, 592, 593, 812, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 2338, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 269, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	816, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 2075, 623, 1324,
	2042, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	816, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 2039, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 2040, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 2036,
	623, 1324, 2042, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1329, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 2039, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 0, 1197, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 2040, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 1324, 2042, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 2039, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 2040, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1324, 1323, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 3915, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1324, 1323, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 3525, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1653,
	0, 1324, 1323, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1329, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 1652, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 0, 1197, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 1651, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 1650, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1571, 0, 1324, 1323, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1570, 650, 651, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1531, 0, 1324,
	1323, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1496, 0, 1324, 1323, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1495, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1318, 0, 1324, 1323, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1329, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1317, 650, 651,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 0, 1197, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1324,
	1323, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1329, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1188, 400, 652, 653, 0, 654, 0, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 0, 0, 1197, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 1324, 2042, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1329, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 2082, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 0, 1197, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 1324, 1323, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1329, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 0,
	1197, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 1324, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 2851, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 2848, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	2855, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 3070, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 2854, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 3067,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 3069, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 3066, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 2853, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	3068, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 2851, 301, 302, 638,
	0, 0, 2845, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 2848, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 2855, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 2854,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 2844, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	2853, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 2852, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1730, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 1729, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 1728, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 1731, 542,
	549, 550, 551, 552, 553, 0, 1727, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 1725, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 1726, 620, 622, 679,
	1471, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1473, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 1235, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1468, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1470, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 1235, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1375, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1377, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 1235, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 712, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 711,
	280, 281, 701, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 704, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 705, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 706, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 700, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 701, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 704, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 705, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 706, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 701,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 704, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 705, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	706, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 701, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 704, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 3926, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 706, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 1235, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 3468, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	3015, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 3014, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 2305, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 2246, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 2253,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 2252, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 2239, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 2241, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 2206, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 1235,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1575, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1574, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	1488, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1481, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1483, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1308, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1307, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 1298, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1297, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1295, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1294, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	1290, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1289, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 682, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 260, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 704, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 705, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 706, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 2345, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 2343, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 2341, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 2259, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 2061, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 2055, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 888, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 887, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 886, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 3070, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 4216, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 766, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1345, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 1343, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 771, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 770, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 1346, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	768, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 766, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1345, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 1343, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 771, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 770, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 1346, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 768, 671, 672, 673, 0, 606, 0, 598,
	1344, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 691, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 690, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 689,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 269, 3057, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 269, 4226, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	4504, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 4115, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	3881, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 2735, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 269, 3057, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 3054,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 2315, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	2303, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 766, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 759, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 771, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 770, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 1608, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 768,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1581, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1580, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 1565, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1563, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1558, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	1535, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1533, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 1493, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 1476, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 1313, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1312, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 1304, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1303, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 1257,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 776, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	766, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 759, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 757, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 758, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 771,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 760, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 770, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 761, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 768, 671, 672,
	673, 0, 606, 0, 598, 763, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 751, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 752,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 714, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 708, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 686, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	3583, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 770, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	768, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	3508, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 3486, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	3483, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 3433, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	3431, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 3416, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	3025, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	752, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 2277, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 0, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1275, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 1208, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 0, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 0, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 0, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 0, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 1814, 1808, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 1800, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 1806, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 1801, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 1819, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 3233, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	1818, 0, 0, 1828, 0, 0, 0, 0, 3232, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 1814, 1808, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 1826, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 1815, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 0, 0, 1806, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 1801, 0,
	0, 0, 1833, 0, 1785, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 1819, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 1800, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 1818, 0, 1826, 1828, 0, 0, 0,
	0, 3231, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 1830, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 0, 1806, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 1833, 0, 1826, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 1815, 0, 0, 1819, 0, 0,
	0, 0, 1796, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 1801, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 1819, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 1818, 0, 0, 1828, 0,
	0, 0, 0, 2563, 0, 1807, 1809, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 0, 0, 0, 0,
	1780, 1817, 0, 0, 0, 0, 0, 0, 0, 1827,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 1833, 0, 1826, 0,
	4614, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 1815, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	1806, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 1801, 0, 0, 0, 1833, 0, 1785,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	1819, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 1800, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1818, 0,
	1826, 1828, 4610, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 1830,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 1806, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 1833,
	0, 1826, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 1815,
	0, 0, 1819, 0, 0, 0, 0, 1796, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 1801, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 1819, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	1818, 0, 0, 1828, 4526, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 1814, 1808, 0,
	0, 0, 0, 0, 0, 1780, 1817, 0, 0, 0,
	0, 0, 0, 0, 1827, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 1833, 0, 1826, 0, 4488, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 1815, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 0, 0, 1806, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 1801, 0,
	0, 0, 1833, 0, 1785, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 1819, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 1800, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 1818, 0, 1826, 1828, 4487, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 1830, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 0, 1806, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 1833, 0, 1826, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 1815, 0, 0, 1819, 0, 0,
	0, 0, 1796, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 1801, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 1819, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 1818, 0, 0, 1828, 4301,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 0, 0, 0, 0,
	1780, 1817, 0, 0, 0, 0, 0, 0, 0, 1827,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 1833, 0, 1826, 0,
	4137, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 1815, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	1806, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 1801, 0, 0, 0, 1833, 0, 1785,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	1819, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 1800, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1818, 0,
	1826, 1828, 4068, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 1830,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 1806, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 1833,
	0, 1826, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 1815,
	0, 0, 1819, 0, 0, 0, 0, 1796, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 1801, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 1819, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	1818, 0, 0, 1828, 4067, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 1814, 1808, 0,
	0, 0, 0, 0, 0, 1780, 1817, 0, 0, 0,
	0, 0, 0, 0, 1827, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 1833, 0, 1826, 0, 4066, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 1815, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 0, 0, 0, 1806, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 1801, 0,
	0, 0, 1833, 0, 1785, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 1819, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 1800, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 1818, 0, 1826, 1828, 3727, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	1824, 0, 1825, 0, 1830, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 0, 0, 1806, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 1833, 0, 1826, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 1815, 0, 0, 1819, 0, 0,
	0, 0, 1796, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 1801, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 1819, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 1818, 0, 0, 1828, 3229,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 0, 0, 0, 0,
	1780, 1817, 0, 0, 0, 0, 0, 0, 0, 1827,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 1833, 0, 1826, 0,
	3228, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 1815, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	1806, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 1801, 0, 0, 0, 1833, 0, 1785,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	1819, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 1800, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1818, 0,
	1826, 1828, 3227, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 1830,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 1806, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 1826, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 1815,
	0, 0, 1819, 1799, 0, 0, 0, 0, 0, 0,
	1830, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 4759, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 1819, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 3226, 1818, 0, 0, 1828, 0,
	0, 0, 0, 0, 1832, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 3191, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4758,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 0,
	1806, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 1777, 1778, 1779, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 1799, 0, 0, 0,
	1819, 0, 0, 0, 0, 1796, 1814, 1808, 0, 0,
	0, 0, 3162, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 0, 0,
	1785, 0, 3291, 0, 0, 0, 3290, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 3163, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1818, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 1800, 0, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	2708, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 0, 2707, 0, 1806, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 1801,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 1819, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 1800, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 1814, 1808, 1818, 0, 0, 1828, 0, 0,
	1780, 0, 0, 0, 1807, 1809, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 1824, 0, 1825, 0, 0, 1833, 0, 0, 0,
	1794, 1795, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 1816, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 1826, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1062, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 1830, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 1814, 1808, 1807, 1809, 1806,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 1801, 1794, 1795, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 1799, 1819,
	0, 0, 0, 0, 0, 0, 1800, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 3297, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	1818, 0, 1806, 1828, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 1819, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1808, 0, 0, 1800,
	3292, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3708, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 1814, 1808,
	1818, 0, 0, 1828, 0, 0, 1780, 0, 0, 0,
	1807, 1809, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 1824, 0, 1825,
	0, 0, 1833, 0, 0, 0, 1794, 1795, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 1816, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 1826, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 1830, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 1814, 1808, 1807, 1809, 1806, 3230, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 1801, 1794,
	1795, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 1799, 1819, 0, 0, 0, 0,
	0, 0, 1800, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 3257, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 1818, 0, 1806, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 1819, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 0, 0, 1800, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 1826,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
}

var sqlPact = [...]int{
	6704, -1000, -1000, -1000, -1000, 188, -1000, -1000, 187, 183,
	182, 180, 179, 177, 176, 170, 168, 167, 164, -1000,
	-1000, -1000, -1000, -1000, -1000, 163, -1000, -1000, 162, -1000,
	161, 158, 156, -1000, -1000, 155, -1000, 153, -1000, -1000,
	-1000, -1000, 152, 149, 145, 94132, 93580, 94677, 2307, 114996,
	101245, 2226, 83686, 114444, 83134, 113892, 2192, 11321, 113340, 2755,
	144, -1000, 112788, 141, 138, 134, -1000, 112236, -1000, 1874,
	-1000, 133, -1000, 7815, 69268, 132, 131, 130, 2276, 129,
	-1000, 128, 126, -1000, -1000, 124, -1000, 12381, 1463, -1000,
	123, 122, -1000, 716, 99044, 119, 118, 2350, 117, 115,
	67616, 114, 113, 2329, 2828, -1000, -1000, 2014, -1000, -1000,
	109, 108, 107, 106, 105, 104, 101, 99, 97, 96,
	95, 94, -1000, 93, 89, 87, 85, 84, -1000, 82,
	81, 80, -1000, 79, -1000, 78, 75, 73, 72, 71,
	69, 64, 63, 51, 50, 48, 47, 46, 45, 13500,
	-1000, -1000, 44, 1843, 1665, 1663, 1660, 1657, 1653, 944,
	42, 41, 38, 37, 36, 34, 33, 27, 24, 22,
	21, 20, 19, 18, 15, 12, 11, 10, 143, 9,
	5, 4, 3, 2, -1, -2, 2295, -1000, 1600, 785,
	32087, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 122626, 115541,
	-3, -61, -4, -1000, 3280, 952, 55939, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 266, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 495, 2161, 732, -1000, -1000, -1000, 111691,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2302, -68,
	-1000, 2082, -1000, -1000, -1000, -1000, -1000, 731, -1000, 2300,
	294, 2257, -1000, -1000, -1000, 3313, 2449, 3708, 3706, 3705,
	3702, 3701, 122081, 1801, 3699, 2527, 3698, 3697, 3695, 3693,
	3692, 3690, 3687, -1000, 93028, 1013, 92476, 91924, 3337, 111146,
	91372, 110594, 77073, 48051, 773, 3311, -1000, -1000, -1000, -1000,
	-1000, -1000, 115541, -1000, 1012, -1000, -1000, 3680, 3676, 2026,
	730, 100693, -1000, 1726, -1000, -1000, -1000, -1000, 902, 1204,
	33785, 33785, 261, -1000, -1000, -1000, -1000, -1000, -1000, 3673,
	3672, 3667, 3665, 3664, -1000, -1000, 82582, 25105, 82030, 81478,
	110042, 24541, 90820, 90268, 3660, 3659, 3658, 109490, 76509, 3442,
	3441, 1011, 2076, 1424, -1000, -1000, -1000, -1000, -1000, -1000,
	-27, 71473, 3475, 115541, -1000, 245, -1000, -1000, -1000, -1000,
	-1000, -1000, 47485, 669, 46919, 540, 46353, 359, -1000, -1000,
	-1000, -1000, 75945, -1000, 108938, 2446, 3657, 3655, 1113, 3653,
	3218, 1783, 3652, 1925, 1197, 3651, 3647, 3646, 3642, 3641,
	3639, 3637, 1380, 108386, 2914, 1467, 107834, 1795, 75381, 1003,
	89716, 94677, 2579, 107282, 1269, 1261, -1000, -1000, -1000, -1000,
	3009, 2827, 2826, 1335, -1000, -1000, -1000, -1000, 59279, 7018,
	6458, -1000, -1000, 11944, 106730, 62089, 94677, 94677, -1000, -1000,
	-1000, -1000, -1000, 45787, 358, 45221, 761, -1000, -1000, 59841,
	2857, -1000, -1000, -1000, -1000, 44655, 351, 44089, 715, 115541,
	-1000, 2909, 1901, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2084, 1580, 3494, 2667, 74817, 1979, 1368, 3275, 3008, 3006,
	1479, 2074, 2996, 3635, 2610, 2993, 2980, 2978, 2977, 2976,
	1637, 2564, 353, 2563, 31521, 2895, 1758, 43523, 1486, 1474,
	2970, 2969, 3505, 2063, 1994, 2044, 80926, 3634, 3633, 3243,
	2966, 2963, 2738, 2962, -1000, 2856, 1377, -1000, -1000, -1000,
	-1000, 1438, -1000, -1000, -1000, -1000, -1000, 85321, -1000, -1000,
	1359, -1000, -1000, 1359, -1000, -1000, -1000, -1000, -1000, 1225,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1600, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2189, -1000, 1975, -1000, -1000, 2485, 3188,
	3188, 3188, 3310, 460, 446, -1000, 143, -1000, -1000, 130288,
	-1000, -1000, 48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617,
	2197, -1000, 729, -1000, -1000, 784, -1000, 728, 659, 578,
	-1000, -1000, -1000, -1000, -1000, -1000, 723, -1000, -1000, -1000,
	-1000, -1000, -1000, 3475, -1000, 27992, -1000, -1000, -1000, 456,
	720, 48617, -1000, -1000, 3526, 3524, 835, -1000, 242, 915,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2908, 718, 717, -1000, 714, 709, 708, 707,
	706, -1000, -1000, -1000, 704, 702, 701, 700, 697, 696,
	695, 694, -1000, 2104, -1000, -1000, -1000, -1000, -1000, -1000,
	647, 644, 644, 644, -1000, 993, -1000, -1000, -1000, 286,
	642, 258, 641, 637, 633, -1000, 692, 687, 686, 685,
	684, 682, 678, 674, 673, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 982, -1000, -1000, -1000, -1000, -28, 115541, -1000,
	495, -28, -1000, -1000, 670, -1000, 36078, 36078, 36078, -1000,
	-1000, 2299, 48617, -1000, 2306, -1000, -16, -16, 869, 57601,
	-1000, 54831, 869, 307, 795, 63742, -1000, 2855, -1000, -1000,
	663, 241, -1000, -1000, -1000, -1000, 25667, 2854, 115541, 115541,
	94677, 94677, 94677, 3632, 3107, 48617, -1000, -1000, 68716, 115541,
	95222, -1000, -1000, 3422, 69818, 68166, 115541, 2907, 72577, 3631,
	-1000, -1000, -1000, -1000, -1000, 3088, 3629, 3628, 3626, -1000,
	115541, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 236, 3087,
	-1000, -1000, 98492, 236, 3082, -1000, 236, 3077, -1000, 97947,
	-1000, -1000, 2326, 3076, -1000, -1000, 243, 3073, -1000, -1000,
	-1000, 237, 3071, -1000, -1000, 232, -54, 3067, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	130288, -1000, -1000, -1000, 72025, -1000, 3242, -1000, -1000, 115541,
	-1000, 48617, -1000, 3421, 1512, 78187, 3358, -39, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2507, 2489, 1098, 2327, -1000,
	3120, 1627, 33785, 3208, -1000, -1000, -1000, -1000, 220, 25667,
	-1000, -1000, -1000, -1000, -1000, -1000, 3904, 3066, 1455, -1000,
	2317, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1980,
	3065, -1000, 2034, 3064, 1863, -1000, -1000, 2288, -1000, 3238,
	-1000, -1000, 1846, 3059, -15, -1000, -1000, 2377, -1000, -1000,
	-1000, -1000, 2070, -1000, 1275, 3058, -1000, 2664, 2664, 89164,
	3060, 61527, 59841, 71473, -33, -1000, -1000, -1000, -1000, -145,
	-1000, 23974, 130288, -1000, -1000, -1000, -1000, 1799, 130288, 900,
	-1000, -1000, 3057, -1000, 130288, 896, -1000, -1000, 3053, -1000,
	2906, -1000, -1000, 2400, -1000, -1000, 3625, -1000, -1000, 3624,
	-1000, 3623, 3622, 3621, -1000, 1644, 2072, 3620, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 88619, 2298, -1000, -1000,
	87515, 2904, -1000, 2398, 3356, -1000, 88067, 1002, -1000, 941,
	2396, -1000, 97402, 1004, 2395, -1000, 3619, 3334, 2627, 941,
	2389, -1000, -1000, -1000, -1000, -1000, 1017, -1000, 65402, -1000,
	65402, -1000, 1558, -1000, 121536, -16, 94677, 3475, -1000, -58,
	-1000, -1000, -1000, 952, -1000, 58725, -1000, 58725, 100141, 77635,
	918, 762, 67062, 130288, -1000, -1000, -1000, -1000, 130288, -1000,
	-1000, -1000, -155, 2663, -1000, 77635, 60965, 130288, -1000, -1000,
	-1000, -1000, 130288, -1000, -1000, -1000, 77635, 87515, -1000, 106178,
	86970, -1000, -1000, 1361, 2555, -1000, -1000, -1000, 77635, 1280,
	77635, 77635, 77635, -1000, 105626, -1000, -1000, 2064, 1509, 3246,
	2050, 94677, -1000, 1873, -1000, -1000, -1000, 3263, 3046, 115541,
	-1000, -1000, 2902, -1000, 70923, 96857, -1000, 96312, -1000, 95767,
	-1000, 94677, -1000, 94677, -1000, 3618, 3614, 3609, -1000, -1000,
	3608, -1000, 3607, 3253, -1000, 683, 42957, 130288, 3252, -1000,
	3606, 3347, 2895, 130288, -1000, 3045, 1656, 1648, 115541, -1000,
	-1000, 115541, -1000, 115541, -1000, -1000, -1000, 1492, -1000, -1000,
	2502, -1000, -1000, -1000, -1000, 94677, 94677, 94677, 94677, 1528,
	-1000, 42391, -1000, -1000, 2955, 3601, 1603, -1000, 1859, -1000,
	2853, 3266, -1000, 1345, 1781, -1000, -1000, 246, -1000, -1000,
	-39, -1000, 120991, -1000, 2485, -1000, 115541, -1000, 2487, 2875,
	2892, 1641, 2310, 2598, -1000, 41825, 2556, 52013, 2314, 143,
	-1000, -1000, 143, 143, 33219, -1000, -1000, 69818, 69818, 25667,
	1247, 48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617,
	48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617,
	48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617, 48617,
	48617, 48617, 48617, 48617, 48617, 48617, 48617, 2013, 48617, 1224,
	48617, 48617, 48617, 48617, 1716, -1000, -1000, 1882, 528, 2025,
	659, -1000, -1000, -1000, 3478, 3478, 3478, 556, 556, 556,
	18223, 18223, 613, 3598, 784, -1000, 48617, -1000, 52, 58155,
	48617, 26231, -1000, 446, 10550, 2511, -1000, 430, 26826, -1000,
	-1000, -1000, 27992, 578, 41230, 48617, 973, 130288, -1000, -1000,
	1471, 3493, 23407, 2900, 2733, 658, 818, 815, 30926, 30331,
	29736, 29141, 621, 48617, 48617, 48617, 48617, 48617, 48617, 48617,
	48617, -1000, -1000, 3498, -1000, 3493, -1000, -1000, -1000, -1000,
	3493, 1239, 1233, 3493, -1000, 3493, 3493, 8959, 8959, 40664,
	40098, 39532, 52579, 38966, 48617, 28575, 38400, 37834, -1000, 115541,
	-28, 3420, 48617, 285, -1000, 128786, -1000, 285, 285, 655,
	-65, 130288, 2546, 2546, 56493, 2181, 2212, 2212, 2212, -1000,
	869, 18842, 869, 104529, 2221, 869, 869, 219, 254, 429,
	54277, 2306, 104529, 757, 654, -6, -7, -8, -1000, -1000,
	-10, -11, -1000, -1000, 94677, 652, 26231, 25667, 218, 1919,
	-67, 2577, 2576, 2573, -1000, 2570, -1000, 1808, -72, 1223,
	94677, 115541, 1274, 3597, -90, -1000, 5144, -73, -1000, 1159,
	217, 3493, -1000, -1000, -1000, -1000, -1000, 3595, 3594, -1000,
	980, 650, 649, 487, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 647, 644, 644, 644, -1000, 286, 642, 258,
	641, 637, 633, -1000, -1000, -1000, -1000, -1000, 2849, 94677,
	115541, 1272, 3593, -145, 95222, -75, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115541, -1000, -1000, -1000, 3590, -1000,
	94677, -1000, -1000, 94677, 236, 3049, -1000, 94677, -1000, 94677,
	235, 3048, -1000, -1000, 115541, -1000, 94677, 94677, -1000, 115541,
	115541, 115541, 77635, 77635, 244, -1000, 94677, 864, -84, 1121,
	-39, -1000, -1000, -1000, 1359, -1000, 1967, -1000, -1000, -1000,
	-1000, -1000, -1000, 1383, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 835, -1000, -1000, -1000, -1000, -1000, -1000, 3490,
	3483, -29, -1000, -1000, 25667, -1000, -40, 1586, 1825, 1222,
	-1000, 80374, 2388, 3241, 3589, 2617, 3230, 1553, -1000, 1491,
	-1000, 3327, 85321, 3372, 3384, 1316, -1000, 2847, -1000, -1000,
	894, 1546, 1771, 1221, 1220, 85321, 2034, -1000, 69818, -1000,
	2641, 3307, 1372, 1390, 1372, 1372, 1346, -1000, 85321, 1762,
	1218, 1217, 1214, 2151, 1999, 1991, -1000, -1000, -1000, 1213,
	1211, 817, 1988, -1000, -41, 3364, 3378, 1314, -1000, 2846,
	1210, -1000, -1000, -1000, 3300, 94677, 25667, 1535, 1532, 1523,
	1755, 1209, -30, -1000, 3362, 1205, 1203, -1000, 977, 2211,
	3185, -1000, 77635, 977, 977, 1833, 3047, 2648, 1544, -1000,
	2662, 858, 2659, -1000, -1000, -1000, 858, -33, 71473, 115541,
	216, -1000, 52, 48617, 48617, 52, 48617, 52, 3345, 3034,
	-1000, -1000, -1000, -1000, -1000, 3588, 2022, 2524, -1000, -1000,
	631, 2384, 2837, 115541, 2597, -35, 94677, -1000, 70373, 3033,
	73129, 2034, 2382, -1000, -1000, 86418, -1000, 3028, 495, 2381,
	-1000, 677, 3587, 3017, -1000, 120446, -1000, 3242, 1256, 3012,
	1050, 557, 3416, -1000, 557, 65954, -1000, 115541, -1000, -16,
	1131, 79284, -85, -91, 424, -1000, 105081, 115541, 1049, 79829,
	115541, 3196, 932, 59841, -1000, 59841, -93, -155, 2656, 1423,
	918, 918, 858, -1000, 858, -1000, 94677, 2890, -1000, -1000,
	77635, 918, 918, 918, -1000, -1000, -1000, -1000, 3583, 3580,
	3579, 3578, -1000, -1000, 940, 94677, 115541, 94677, -1000, -1000,
	-1000, 1441, 214, -1000, 115541, -1000, 115541, 115541, 94677, -1000,
	940, 115541, 940, 115541, 940, 115541, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 52, -1000, -1000, 130288, -1000, 48617, -1000,
	-1000, 3577, 1604, -1000, 2884, -1000, 2882, -1000, 26, -1000,
	-1000, 1904, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3576,
	130288, -1000, 1867, -1000, -1000, -1000, -1000, 94677, 94677, 94677,
	94677, 115541, 3137, -1000, 115541, 3134, 94677, -1000, -1000, 85321,
	-1000, 2487, 2875, -1000, -1000, -1000, -1000, -1000, -1000, 1414,
	2262, -1000, 2550, -1000, 1511, -1000, -1000, -1000, 130288, 53145,
	-1000, -1000, 130288, 1836, -1000, 51447, 50881, -1000, -1000, 1723,
	94677, 2605, -1000, 2605, -117, -1000, 128413, 2549, 94677, -1000,
	-1000, -1000, -1000, -1000, 893, 970, 970, 1354, 1354, 1354,
	1354, 3354, 445, 5268, 8613, 479, 479, 8690, 8690, 8690,
	8690, 8690, 479, 7602, 556, 556, 7602, 7602, 7602, 7602,
	7602, 556, 556, 556, 479, 479, 479, 556, 18223, 15682,
	8222, 48617, 48617, 1202, 1869, 528, 7851, 48617, 5516, 5516,
	5516, 5516, -1000, 2024, -1000, -1000, -1000, -1000, 2832, 630,
	52579, 52579, -1000, -1000, -1000, -1000, 27409, 48617, -1000, -1000,
	-1000, -1000, 37239, -1000, -1000, 127710, -311, 421, -1000, 213,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 419, -104, 6, -1000, 48617, 48617, 48617,
	418, -1000, 207, 48617, 115541, -1000, 124424, 752, -100, -1000,
	-107, 1385, -1000, 48617, -1000, -1000, 1201, -1000, 1199, 1196,
	1195, -1000, 627, 415, -1000, 205, -1000, 2214, 626, 620,
	48617, -1000, -1000, -1000, -1000, -1000, 127599, -1000, -1000, 127337,
	-1000, -1000, 127075, -1000, -1000, 126964, -1000, -1000, -1000, 130038,
	124162, 123789, 123726, 9509, 18160, 17547, -110, 413, -112, 410,
	889, 888, 409, 407, 406, -118, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -121, 385,
	-1000, 2829, -104, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 384, -1000, 382, -1000, 129845, -104, 377, 9024, -1000,
	52579, 52579, 52579, 52579, -1000, 376, -1000, 128350, -1000, 129662,
	36673, 36673, 36673, 375, 129412, 48617, -104, -123, -1000, -132,
	-1000, -1000, 517, -133, 968, 36078, 55385, 25667, -1000, 968,
	968, 48617, -1000, 48617, 2560, -1000, -1000, -1000, -1000, 2559,
	1872, 2546, 56493, -1000, -1000, -1000, -1000, 104529, -1000, 3475,
	2725, -1000, 104529, -1000, -1000, 115541, 495, -1000, 104529, 104529,
	25667, 869, -1000, 869, 104529, 790, -1000, -1000, -1000, -1000,
	-1000, 374, 63197, 6, 201, 25667, 941, -1000, -1000, 2670,
	2670, 2670, 2670, -1000, -1000, 115541, 1193, -36, -92, 2655,
	-1000, 3447, -1000, 2118, -1000, 69818, -1000, 782, 1093, 25667,
	-1000, -1000, -1000, 617, -1000, 3493, 3493, -1000, 3493, 115541,
	2823, 212, 2653, -1000, 171, 73129, 73129, 3575, -1000, -1000,
	236, -1000, 94677, 236, 236, -1000, 94677, 94677, 2326, -1000,
	243, -1000, 237, -1000, -1000, -54, -1000, 964, 33785, -1000,
	1359, -1000, -1000, 1538, -1000, 2059, -1000, 1232, -1000, -1000,
	-1000, -1000, 33785, -1000, 1905, 115541, 115541, 94677, -1000, 115541,
	-1000, 2188, 73129, -1000, 2380, 119901, 2371, 69818, 115541, -1000,
	-1000, 603, 907, 2547, 2544, 1044, 115541, 115541, 2543, 119356,
	118811, -1000, 3574, 115541, 2094, 48617, 3299, 2167, 3063, 52,
	52, -1000, 52, 52, 52, -1000, 589, 1323, 94677, 94677,
	115541, 73129, 94677, 1775, -1000, -1000, -1000, -1000, -1000, 85866,
	-1000, -1000, 3497, 3496, -1000, 1372, -1000, -1000, -1000, 1372,
	2034, 1711, 115541, 73129, 94677, 73129, -1000, -1000, 2250, 118266,
	117721, 1752, 115541, 1425, -1000, 817, 2142, 52, 52, -1000,
	52, 52, 52, 587, 25667, 2011, -1000, 2893, 115541, 3523,
	117176, 3521, 115541, 115541, 115541, 73129, 3227, 115541, 115541, 73129,
	-1000, 116631, 3440, 2189, 2211, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 74253, 1032, 115541, 1275,
	-1000, -1000, 1717, 1192, 1191, 85321, 2108, 1688, 1871, 115541,
	59841, 929, 59841, 2632, -1000, -1000, 22840, -1000, 130288, 130288,
	-1000, 130288, -1000, 70373, 115541, -1000, 997, 115541, 79829, 913,
	3001, 64850, -145, 918, 77635, 94677, -35, 2597, 115541, -1000,
	-1000, 2034, 2990, 495, 2375, -1000, 77635, 3415, 2987, 582,
	3571, 3570, -1000, 94677, 2292, 2372, -1000, -1000, 116086, 2975,
	817, 115541, 968, 56493, 1983, -1000, 62643, 1021, 115541, 1898,
	125, -1000, -1000, -1000, 7, 115541, -1000, 791, -1000, -1000,
	1131, 1131, 918, -146, 581, -1000, 848, 847, 60403, 77635,
	-134, -1000, -1000, -1000, -1000, 2371, 94677, 115541, 1268, 2625,
	115541, -135, -1000, 197, 580, -1000, 2193, -1000, -155, -1000,
	932, 59841, 2820, 2815, -1000, -1000, 963, -1000, 1175, 918,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -21, 115541, -145, -145, -47, -36, -1000, 940, -1000,
	940, -1000, 940, -1000, 130288, -1000, -1000, 1595, 1594, 115541,
	-1000, -1000, 115541, -1000, 25667, 115541, 94677, 25667, 94677, 2874,
	2872, -1000, -1000, -1000, 115541, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1062, -1000, 1836, 2260, -1000, 578, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2482, -1000, -38,
	33219, 868, -1000, -1000, 94677, -22, 48617, 48617, 7219, 7153,
	48617, 52579, 52579, -1000, 48617, 6131, -1000, -1000, -1000, -1000,
	-1000, 2806, 577, 48617, 69818, 8879, 8263, -1000, 373, 17280,
	7602, -1000, 48617, -1000, 5333, -1000, 372, 35512, -1000, 129036,
	-55, -140, -1000, 19422, -104, -147, -1000, -1000, 772, -1000,
	2984, -1000, 48617, 129219, 2439, 2067, 1785, 1609, 3493, 3519,
	22273, -1000, 66508, 969, 2227, 126702, -1000, -1000, -1000, -1000,
	69818, 69818, 48617, 48617, -1000, 48617, 48617, 48617, -1000, -1000,
	-1000, 3493, 870, -1000, -1000, -1000, 870, -1000, -1000, 1372,
	-1000, 1372, -1000, 48617, -1000, -1000, 2805, 48617, -1000, 69818,
	69818, 52579, 52579, 52579, 52579, 52579, 52579, 52579, 52579, 52579,
	52579, 52579, 52579, 52579, 52579, 52579, 52579, 52579, 52579, 52579,
	52579, 2503, 52579, 3468, 3468, 3468, 1015, -1000, 2871, 2805,
	48617, 48617, 69818, 371, 361, 356, -1000, 48617, -104, -1000,
	-1000, 6035, 576, -1000, 2461, -1000, 2723, -1000, 48617, -1000,
	-129, -1000, 2306, -1000, -1000, 2723, 2723, -148, 130288, 56493,
	56493, -1000, 575, 48617, 2551, -1000, -1000, 750, -309, -1000,
	846, -1000, -1000, -1000, -1000, -1000, -1000, 495, -1000, -1000,
	-1000, 195, 104529, 104529, 747, -1000, -149, -1000, -1000, -156,
	-1000, 3414, 354, 25667, -1000, 968, 2613, -1000, -1000, -1000,
	-1000, -1000, -1000, -145, 115541, 115541, 1672, 2249, 3517, -1000,
	3495, 766, 746, 194, 3493, 349, 346, 343, -145, 115541,
	115541, 1666, 115541, -1000, -1000, -1000, -1000, 236, -1000, -1000,
	-1000, 235, -1000, -1000, -1000, -1000, 2619, -1000, -39, -1000,
	-1000, -1000, 48617, -1000, -1000, 3240, 1190, 1189, -1000, -1000,
	-1000, -1000, 2801, -1000, 2985, -1000, 2368, -1000, 1025, -1000,
	1866, -1000, 48617, 574, 2624, 573, 569, 3564, 2041, 3563,
	1048, 2983, 2326, 2979, 2326, -1000, -1000, -1000, 849, -1000,
	130288, 2167, -1000, 568, 567, -1000, -40, 1585, 1814, 1185,
	962, -1000, -1000, -1000, -1000, 48617, 48617, 103984, -1000, 472,
	3238, -23, -1000, -1000, -1000, 1652, 1183, 1182, -1000, -1000,
	-1000, -1000, 2034, 1632, 1181, 1174, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2366, -1000, -1000, 2974, 961, -1000, 2939,
	2938, 880, 115541, -1000, 960, -1000, -1000, -1000, -1000, 48617,
	-1000, -41, 1172, 3363, 2359, 94677, -1000, 2326, 2973, 1171,
	-1000, 1169, -1000, -1000, -1000, 3360, 3352, 1168, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 73691, -1000, -1000, 977,
	115541, 73129, 94677, 1671, -1000, -1000, 84231, 84776, 115541, 2648,
	-145, 858, -1000, 2494, 858, 929, 2804, -1000, 2593, 958,
	94677, 3562, 342, -162, -42, 69818, 3413, -1000, 2290, 615,
	94677, 867, -1000, 3475, -1000, -1000, -1000, 957, -1000, 3355,
	94677, 3412, 2971, 941, 52, 94677, 3506, -1000, -1000, 3411,
	94677, 2968, 2291, 2358, 2514, 817, 78739, 941, 2223, -52,
	-1000, 1898, 34917, 3236, -163, -1000, -1000, -1000, 968, 65954,
	56493, 48617, 3561, -164, -1000, -1000, -1000, -1000, -1000, 101797,
	101797, 77635, 77635, 77635, 918, 115541, 115541, 79829, -1000, -1000,
	565, 115541, 115541, 564, -1000, 115541, 115541, 3559, 77635, -43,
	563, -1000, 845, 844, 843, -1000, -1000, -1000, -1000, -1000,
	-1000, 932, -1000, -155, 59841, 52, -1000, 2236, 94677, -1000,
	21706, -1000, -1000, -1000, -1000, -1000, -1000, 940, -145, -1000,
	-1000, 2154, 2282, 2154, 1868, 1855, -1000, -1000, 2252, -1000,
	-1000, -1000, -1000, 2607, 3207, 25667, 3351, 5516, 48617, 48617,
	6097, 8086, 5456, 5516, 48617, 48617, 69818, 13076, -165, 48617,
	48617, -1000, 48617, 745, 130288, -1000, 3514, 48617, 339, 338,
	-1000, -1000, -1000, 3486, -1000, -1000, -1000, 130288, 48617, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 337, -1000, 193, -1000,
	-1000, -1000, 123171, -1000, 48617, 334, 3298, -1000, 333, 330,
	11013, 408, 126440, 126329, 126067, 327, -1000, -1000, 325, 319,
	130288, 2871, 130288, -1000, -1000, 819, 819, 1357, 1357, 1357,
	1357, 3468, 1028, 507, 616, 602, 602, 602, 953, 1015,
	1015, 602, 602, 602, 1015, 2799, 2515, 562, 9074, -1000,
	-1000, 130288, 130288, 318, -1000, -1000, -1000, -104, 316, 6035,
	-1000, 2715, 3297, 130288, -1000, 56493, 2715, 2715, -1000, -1000,
	1872, 115541, 130288, 56493, -1000, 2725, -1000, 20000, -1000, 25667,
	-1000, -1000, -1000, -1000, 3475, -1000, 63197, -1000, 561, -1000,
	8, -1000, 2613, -1000, 842, -1000, -1000, 77635, 77635, -145,
	-170, 115541, -1000, -1000, 743, 3556, 765, 25667, 303, -1000,
	-1000, -1000, -145, -145, 115541, -145, -1000, -1000, -1000, 3195,
	130288, 115541, 115541, 1277, 103439, 115541, 2967, -1000, 2055, -1000,
	1044, 125805, 57047, -1000, 57047, 115541, -1000, -1000, -1000, 1827,
	1429, 3555, 1099, -1000, 3265, 115541, -1000, 115541, -1000, -1000,
	-1000, 115541, 115541, 94677, 115541, -1000, 73129, 2948, -182, 130288,
	-45, -1000, 841, -1000, 1379, -1000, 21139, 115541, 73129, 94677,
	115541, 73129, 94677, 2965, 115541, 2191, -1000, -1000, 2933, -1000,
	2946, -184, 25667, -1000, 3513, 3512, 2964, 3272, -1000, 115541,
	3511, 115541, 94677, 3194, -1000, -1000, -1000, -1000, -1000, -1000,
	1625, 1163, 1155, 2285, -46, 2284, 2248, -47, 2108, 929,
	-48, 560, -1000, 840, -1000, -1000, 838, -1000, 929, -1000,
	77635, 59841, 3553, 495, -1000, 2615, -1000, 99589, 2304, 52,
	-1000, 3550, 102349, 559, -1000, 2233, -1000, 741, -1000, 2472,
	73129, 2034, 52, 94677, -1000, -1000, 495, 300, -49, -1000,
	2982, 1037, 25667, 94677, 2960, 2518, 817, 78739, -1000, 1256,
	2598, -1000, -51, -1000, 656, 52, 2223, -1000, -52, 130288,
	-1000, 837, -1000, -187, -1000, -1000, 296, -1000, 3193, 3192,
	-1000, 2713, 57047, 558, 555, 115541, 3191, -1000, -1000, -189,
	2558, 2558, 77635, 59841, 77635, -1000, 932, 858, -1000, 2401,
	-1000, -1000, -1000, -1000, -1000, 25667, 1543, -1000, 554, 553,
	-1000, -1000, -1000, -1000, 3207, 5516, 5516, 48617, 48617, 48617,
	5516, 13076, -190, -1000, 5516, 5516, -104, -1000, -1000, 129036,
	-1000, -1000, -1000, 130288, -1000, 20572, 2158, -1000, 125694, -1000,
	33219, -1000, -1000, 48617, 48617, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 52579, 2798, 544, 69818, -1000, -1000, 292,
	966, 48617, 50315, 2306, 966, 966, -1000, -192, -1000, -1000,
	-1000, 3475, 8, -1000, -1000, 3549, 25667, -1000, 77635, -1000,
	-1000, 3547, -183, 760, -1000, 3546, -1000, -1000, 110, -1000,
	-1000, -1000, 2643, 3408, -1000, 1974, -1000, 115541, -1000, 115541,
	-1000, 25667, 115541, 2742, 1200, -1000, 907, 2538, 543, 52579,
	94677, 886, 2694, 2649, -1000, 3433, 3293, 2726, -195, -1000,
	115541, 48617, 115541, -198, -200, 2346, -1000, -1000, 1198, 48617,
	-1000, -1000, -1000, 69818, 537, 2326, 2326, -203, -208, -1000,
	-1000, -1000, 48617, 1143, 115541, 34351, -1000, 3545, 3238, -1000,
	-1000, -1000, -1000, -1000, -1000, 115541, -1000, 115541, -1000, 48617,
	1135, -1000, -1000, -1000, 3510, 2326, 25667, 2326, -1000, 2326,
	3272, 1097, 115541, 73129, 94677, 1757, 1757, 2830, -1000, -1000,
	-1000, 2447, 2447, 77635, 59841, -1000, -54, 929, -1000, 3404,
	2612, 3541, -1000, -1000, -1000, -1000, 2533, -1000, -1000, 115541,
	2532, 923, -1000, -209, -1000, 834, 826, 79829, 913, 878,
	-1000, -56, 536, -1000, 824, -1000, -1000, -1000, -1000, 495,
	3402, -1000, 3507, 535, 534, 115541, 2283, 532, 25667, 3233,
	817, 78739, -1000, 2975, 1898, -1000, 2355, 115541, 3229, -1000,
	2598, 528, -1000, 918, 526, 523, 2595, 2595, -211, 57047,
	57047, -214, 521, 918, -1000, -216, -1000, -1000, -1000, -1000,
	-1000, -60, -1000, 857, 855, -1000, -1000, 94677, 94677, 48617,
	48617, -1000, 5516, 5516, 5516, -1000, 287, -1000, -1000, 2223,
	3292, -1000, -74, 125432, 125170, 5503, 52579, 69818, -217, -1000,
	-1000, 115541, 130288, -82, -1000, 130288, 519, 516, 282, -1000,
	-1000, -1000, 735, -1000, -1000, -1000, 115541, 3540, -1000, 115541,
	102894, 115541, -1000, -1000, 1705, -1000, -1000, -1000, 115541, 2357,
	-1000, -1000, -1000, 1043, 48617, 9074, 515, 48617, -1000, -1000,
	-1000, 3399, 3126, -1000, 2602, 2774, 1913, 57047, -1000, 3207,
	-1000, 125059, -1000, 1029, 2007, -1000, -1000, -1000, 130288, 3272,
	57047, -1000, -1000, 513, 511, 130288, 510, 823, 2789, -1000,
	-1000, -1000, -1000, -1000, 130288, 508, 3363, -1000, -1000, -1000,
	-1000, 2326, 94677, -1000, -1000, -1000, 1132, -1000, -1000, -1000,
	-1000, 3539, 3538, 2787, 84231, -1000, -219, -1000, -1000, 2010,
	52, 2149, 2642, -1000, 2304, 506, -1000, -1000, 2266, 2614,
	-1000, 102349, 33785, 33785, 274, 3396, 878, -1000, 3465, -1000,
	3171, 3171, 48617, 3393, 52, -1000, 3506, 57047, -1000, 94677,
	57047, 2280, 2088, 2495, 78739, -1000, 2514, -1000, -1000, -222,
	115541, 1898, -1000, -1000, 77635, 77635, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1029, -224, -225,
	-1000, 77635, -1000, -1000, 2401, -1000, 115541, -1000, 115541, -1000,
	-1000, -227, -230, -1000, 2150, 48617, 33219, -1000, -1000, 5503,
	-232, -1000, -83, -1000, 3390, 50315, 3536, 3535, 3534, -1000,
	-145, -1000, -145, -1000, 1960, -1000, -1000, -1000, 2956, 2706,
	124797, 2473, 115541, 124535, -1000, 3359, 2758, -1000, -1000, 2612,
	504, -1000, -1000, -1000, -1000, 868, 115541, 2612, 2704, 94677,
	1038, -233, 2154, 2154, 48617, 32653, 2190, 48617, -1000, -1000,
	3272, 115541, -1000, -1000, 115541, 2278, -1000, 2754, 3476, -1000,
	913, -1000, 2178, 115541, -1000, 3260, -1000, 3187, -1000, -1000,
	-1000, 2615, 52, -1000, -1000, -1000, -241, 130288, 52, -1000,
	273, -247, 1037, -248, 94677, 1998, -1000, 817, -1000, 2518,
	968, -1000, -1000, -249, -250, 1913, 1029, 2142, -255, -1000,
	-256, -257, -1000, -1000, 270, 49749, 49749, 49749, -104, -117,
	-1000, 115541, 496, -1000, -1000, -1000, -1000, -1000, 2929, 928,
	-1000, 2267, 1824, 234, 1070, -1000, -1000, -1000, 2142, 115541,
	-1000, -1000, -1000, 927, 495, -1000, 48617, 1029, -258, -1000,
	1020, -263, -1000, 1018, -266, -1000, 2780, -1000, -268, 2326,
	-265, 233, 1757, 924, 3344, -1000, -1000, -1000, 2266, 94677,
	-271, -1000, -1000, 2413, -1000, 2612, 923, -1000, -1000, -1000,
	1029, 494, 1913, 493, 1409, 817, -1000, -1000, 1372, 3233,
	2994, 918, 918, 2612, 1913, 914, -1000, 918, -1000, -1000,
	-1000, 2972, -1000, 53711, 2297, 1839, 127977, 2972, 2972, -1000,
	-1000, 115541, 3325, -1000, 2277, 2275, 1460, -1000, -1000, -1000,
	-1000, -1000, -1000, 2726, -273, 3321, 2473, 130288, 2612, -1000,
	2154, 2639, -1000, 2154, 2777, -1000, 2175, -1000, -1000, -1000,
	2728, -1000, 2769, -1000, 1776, 3457, 2486, 490, -1000, 115541,
	1802, 1791, 3532, 2149, 2266, 1913, 57047, 2612, 57047, 2127,
	-1000, 115541, -1000, 2088, 1309, -1000, -1000, 2142, 2612, 968,
	489, -1000, -1000, 1935, 3428, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 814, -1000, 3116, -1000, 1061, 2133, 2133,
	968, -1000, 806, 2267, -1000, -1000, 478, -1000, 466, -1000,
	2241, 115541, 2232, -1000, -1000, -1000, -1000, 115541, -1000, -1000,
	3531, -1000, 913, -1000, 2612, -274, 2142, -276, -1000, -1000,
	-1000, -145, 1998, -1000, 1525, 914, 2142, -1000, 1838, -1000,
	-1000, 2218, 49183, 48617, -1000, 3450, -1000, -1000, 2545, -1000,
	-1000, 48617, 2726, 48617, 48617, -1000, 233, 64296, -281, -1000,
	2266, 2142, 1029, 914, 1913, 1409, 65954, 968, 914, -1000,
	-1000, -1000, 130288, -1000, -1000, -1000, 130288, -1000, -282, -283,
	-1000, -146, 101797, 2319, 2486, 914, 1913, 968, 2612, 2127,
	-264, -1000, 968, 2142, 1127, -290, -1000, -1000, -1000, -1000,
	968, 2612, -1000, 2142, -1000, -1000, -1000, -1000, -1000, 462,
	-1000, -1000, 2142, 914, 48617, 914, 968, -293, 968, -1000,
	2142, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4324, 4321, 4320, 4319, 4317, 4310, 4306, 4302, 4301,
	4299, 4298, 4297, 141, 4296, 4295, 4293, 4289, 4287, 4282,
	4281, 4279, 4277, 4275, 4273, 4272, 4269, 4265, 4264, 4261,
	4258, 4251, 4250, 4245, 4244, 4242, 4241, 4240, 4239, 4237,
	4236, 4234, 4232, 4231, 4230, 4228, 4227, 4226, 4225, 4224,
	4223, 4221, 4217, 4216, 4214, 4213, 4212, 4211, 4210, 4208,
	4207, 4206, 4203, 4202, 4200, 4198, 53, 4195, 4193, 4192,
	4191, 4190, 4189, 4188, 4184, 4179, 4176, 4175, 4174, 4172,
	4171, 4170, 4169, 4168, 4167, 4165, 4164, 61, 4162, 277,
	4161, 4160, 4158, 4155, 4153, 4152, 4151, 4149, 4147, 4146,
	4145, 4144, 276, 4141, 131, 163, 4140, 4139, 3711, 4138,
	4135, 274, 4133, 4128, 4127, 4126, 287, 4125, 4124, 4123,
	4120, 4115, 4113, 4112, 4110, 4109, 4108, 4105, 117, 208,
	4104, 4103, 2743, 4102, 4100, 4098, 4096, 4095, 4093, 4092,
	4090, 4089, 4087, 258, 173, 4086, 273, 4085, 4084, 4081,
	4079, 4078, 4073, 4072, 4069, 4068, 4067, 4062, 4058, 4050,
	4048, 4044, 4032, 4031, 4030, 4029, 4028, 4027, 4024, 4023,
	4022, 4021, 4019, 4017, 4012, 4010, 4008, 4006, 4005, 4002,
	4001, 4000, 3999, 3998, 3997, 3995, 248, 172, 189, 3994,
	3993, 271, 270, 3991, 3990, 3989, 3987, 3986, 122, 6,
	41, 3984, 3983, 86, 83, 85, 102, 103, 99, 3981,
	107, 3980, 126, 67, 3979, 19, 2, 212, 249, 13491,
	239, 3976, 3975, 3974, 246, 198, 3970, 247, 3969, 3968,
	3967, 3966, 3962, 66, 48, 185, 177, 178, 176, 90,
	3960, 159, 100, 78, 58, 40, 17, 77, 211, 22,
	1, 217, 3959, 262, 11, 145, 12, 29, 3956, 3955,
	3954, 3953, 3728, 136, 3952, 269, 251, 169, 3950, 3949,
	3948, 786, 3947, 3946, 47, 3945, 221, 82, 128, 15,
	121, 3944, 154, 175, 36, 3939, 164, 63, 3938, 161,
	95, 87, 10643, 10171, 3937, 3936, 125, 69, 130, 1349,
	203, 197, 199, 200, 165, 168, 129, 216, 209, 181,
	263, 3935, 259, 3934, 3388, 80, 188, 156, 6140, 3932,
	3930, 3929, 88, 202, 106, 3926, 3924, 71, 18, 3,
	4, 9, 144, 25, 23, 10, 3923, 50, 116, 52,
	27, 3919, 26, 3918, 3916, 3914, 3912, 3910, 44, 162,
	3909, 3908, 284, 3907, 84, 56, 33, 3906, 179, 227,
	3904, 230, 135, 3898, 3896, 260, 206, 186, 3894, 74,
	236, 3893, 3891, 3890, 3886, 3885, 142, 8, 124, 3884,
	3883, 148, 3882, 51, 245, 201, 3879, 72, 3878, 3876,
	184, 104, 146, 286, 134, 228, 111, 235, 192, 243,
	3875, 3874, 3873, 226, 3872, 3871, 225, 167, 3869, 3868,
	250, 288, 91, 49, 73, 244, 81, 194, 158, 3867,
	205, 3866, 3865, 285, 182, 220, 7, 13, 97, 133,
	3863, 5, 242, 157, 229, 109, 3861, 7140, 2568, 2454,
	3860, 3859, 151, 120, 76, 113, 155, 268, 119, 3856,
	3854, 3067, 3852, 3851, 3850, 3848, 190, 3847, 3846, 3845,
	152, 153, 232, 3844, 98, 64, 54, 24, 127, 266,
	283, 108, 234, 171, 256, 3843, 3842, 3841, 196, 3840,
	110, 160, 170, 204, 254, 57, 3839, 114, 3838, 150,
	1372, 65, 149, 3837, 241, 3836, 3835, 3834, 3833, 3832,
	3831, 3830, 253, 238, 3827, 3826, 3825, 37, 195, 3824,
	267, 213, 180, 94, 89, 3822, 92, 3665, 3821, 183,
	240, 59, 265, 115, 264, 3817, 3400, 55, 3816, 0,
	14404, 9135, 12580, 14134, 3815, 5418, 3814, 3813, 3812, 222,
	147, 3811, 3810, 3808, 105, 3805, 79, 3802, 3801, 70,
	3799, 28, 20, 21, 34, 31, 722, 713, 3797, 3795,
	42, 139, 137, 3793, 275, 233, 3790, 3789, 3788, 3785,
	96, 3777, 43, 3773, 39, 3771, 3770, 46, 16, 45,
	3769, 3768, 219, 3766, 223, 257, 3765, 166, 3764, 68,
	140, 3763, 3761, 3760, 62, 60, 261, 93, 3757, 281,
	3755, 215, 3754, 3753, 30, 3749, 3746, 252, 118, 112,
	3745, 255, 143, 38, 207, 187, 224, 3737, 3734, 174,
	3733, 3730, 3729, 279, 3726, 3723, 35, 3722, 3721, 3720,
	14, 3719, 3718, 210, 3142, 3717, 3715, 32, 3713, 193,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 596, 596,
	614, 614, 23, 23, 44, 44, 24, 45, 17, 597,
	597, 597, 597, 36, 25, 46, 29, 29, 29, 29,
	29, 201, 201, 201, 201, 22, 22, 40, 40, 236,
	236, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 592, 592, 238,
	238, 237, 231, 231, 232, 232, 598, 598, 239, 239,
	239, 241, 241, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 491, 491, 491, 524, 524, 523, 523,
	523, 522, 522, 618, 618, 619, 619, 619, 619, 619,
	131, 131, 389, 389, 389, 55, 55, 55, 55, 55,
	587, 587, 203, 203, 203, 205, 205, 204, 204, 204,
	204, 204, 78, 78, 603, 603, 604, 604, 602, 605,
	605, 605, 202, 202, 202, 127, 127, 127, 127, 127,
	127, 128, 128, 129, 129, 206, 206, 206, 208, 208,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 212,
	16, 16, 16, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 107, 107, 526, 526, 527, 527, 197, 197,
	198, 198, 198, 198, 199, 199, 200, 200, 200, 69,
	69, 209, 209, 211, 211, 210, 210, 210, 210, 210,
	57, 57, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 59, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 67, 67, 67, 67, 67, 188,
	188, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 75, 75, 75, 75, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 621, 621, 622,
	622, 623, 623, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 84,
	84, 350, 350, 313, 313, 85, 85, 85, 86, 86,
	87, 87, 71, 71, 585, 585, 366, 366, 482, 482,
	72, 593, 593, 593, 595, 595, 594, 594, 89, 89,
	388, 388, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 99,
	99, 99, 99, 99, 100, 100, 100, 97, 97, 97,
	94, 94, 94, 93, 93, 93, 98, 98, 98, 584,
	302, 302, 96, 96, 96, 95, 95, 95, 367, 367,
	101, 101, 101, 101, 314, 102, 102, 102, 102, 102,
	102, 102, 102, 105, 105, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 484, 484,
	103, 103, 103, 449, 449, 108, 108, 108, 404, 404,
	109, 109, 109, 109, 109, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 130, 130, 130, 130, 130, 130,
	130, 130, 589, 589, 359, 359, 265, 265, 265, 265,
	120, 120, 120, 120, 121, 121, 121, 122, 122, 193,
	193, 137, 137, 137, 137, 137, 136, 136, 136, 136,
	136, 136, 61, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 66, 66, 66, 139, 139,
	615, 615, 141, 138, 138, 138, 140, 140, 140, 140,
	142, 144, 144, 144, 144, 143, 143, 143, 143, 143,
	145, 145, 516, 516, 375, 375, 514, 514, 536, 536,
	515, 515, 320, 320, 320, 320, 320, 321, 321, 321,
	525, 525, 525, 525, 525, 525, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 194,
	194, 195, 196, 196, 196, 196, 196, 171, 171, 171,
	187, 187, 187, 187, 187, 187, 187, 174, 174, 174,
	158, 158, 147, 147, 147, 147, 147, 147, 147, 152,
	152, 152, 152, 152, 152, 152, 152, 148, 148, 160,
	160, 160, 160, 160, 153, 153, 154, 154, 155, 155,
	155, 155, 181, 181, 157, 157, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 149, 149, 149, 149, 162,
	162, 162, 162, 411, 411, 411, 186, 186, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 184, 184, 184, 184, 184, 184,
	606, 606, 607, 607, 178, 178, 178, 178, 178, 178,
	463, 463, 172, 172, 172, 172, 177, 177, 177, 177,
	180, 180, 180, 180, 394, 394, 169, 169, 169, 170,
	170, 170, 175, 175, 176, 351, 351, 173, 173, 179,
	179, 179, 179, 150, 150, 150, 150, 150, 150, 150,
	151, 151, 151, 151, 182, 182, 168, 168, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 625,
	625, 164, 164, 164, 163, 163, 163, 163, 166, 166,
	167, 167, 167, 167, 167, 167, 165, 156, 185, 586,
	586, 582, 582, 582, 582, 582, 582, 582, 582, 583,
	583, 583, 583, 588, 588, 113, 113, 113, 113, 113,
	123, 123, 123, 123, 123, 114, 114, 114, 114, 114,
	116, 116, 115, 115, 115, 115, 79, 79, 79, 79,
	79, 15, 15, 15, 80, 80, 256, 256, 215, 215,
	215, 339, 339, 216, 216, 328, 328, 328, 328, 213,
	213, 214, 214, 81, 81, 626, 626, 626, 599, 599,
	599, 600, 600, 600, 600, 600, 600, 322, 322, 323,
	323, 429, 429, 429, 429, 429, 326, 326, 326, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 329, 329,
	240, 240, 240, 337, 338, 338, 330, 330, 336, 335,
	335, 334, 334, 333, 333, 331, 332, 332, 332, 341,
	341, 340, 343, 343, 342, 428, 545, 545, 547, 547,
	547, 547, 547, 547, 547, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 412,
	412, 627, 627, 628, 629, 543, 543, 543, 544, 539,
	539, 540, 540, 540, 540, 540, 324, 324, 325, 325,
	325, 325, 541, 542, 357, 357, 467, 546, 546, 548,
	548, 550, 630, 630, 630, 630, 630, 630, 631, 631,
	631, 427, 427, 426, 426, 348, 348, 551, 551, 551,
	551, 552, 552, 552, 552, 552, 555, 554, 553, 553,
	553, 553, 553, 83, 83, 83, 391, 391, 390, 390,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 190, 190, 268, 268, 77,
	77, 77, 12, 12, 12, 12, 12, 12, 12, 283,
	283, 13, 13, 13, 601, 601, 601, 82, 82, 82,
	82, 82, 82, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 591, 591, 590, 590, 269, 269, 633,
	633, 88, 88, 88, 88, 88, 88, 88, 88, 485,
	485, 486, 486, 76, 76, 76, 76, 76, 413, 413,
	410, 410, 409, 409, 356, 356, 465, 465, 465, 466,
	273, 273, 274, 274, 233, 233, 233, 31, 30, 21,
	21, 26, 26, 27, 27, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 28, 28, 48, 48, 48, 48,
	49, 49, 49, 49, 52, 52, 53, 53, 47, 47,
	47, 47, 50, 50, 43, 43, 54, 54, 54, 54,
	54, 608, 610, 610, 609, 609, 613, 613, 613, 613,
	613, 613, 611, 611, 612, 612, 616, 616, 617, 617,
	119, 119, 124, 124, 124, 124, 124, 125, 125, 125,
	125, 126, 126, 126, 126, 135, 135, 189, 189, 189,
	189, 189, 189, 189, 56, 56, 56, 56, 68, 68,
	68, 68, 133, 635, 635, 635, 134, 134, 134, 634,
	634, 266, 266, 423, 423, 424, 424, 636, 636, 425,
	425, 425, 425, 425, 259, 258, 260, 260, 261, 261,
	74, 74, 74, 249, 249, 248, 250, 250, 251, 251,
	246, 246, 528, 528, 253, 253, 253, 254, 254, 242,
	242, 243, 243, 244, 244, 245, 245, 257, 257, 637,
	637, 111, 111, 111, 192, 192, 312, 312, 312, 420,
	420, 420, 349, 349, 280, 280, 422, 422, 422, 422,
	387, 387, 387, 191, 191, 364, 364, 377, 377, 378,
	378, 479, 479, 379, 117, 117, 118, 118, 132, 132,
	219, 219, 217, 217, 217, 217, 217, 217, 217, 217,
	224, 224, 225, 225, 226, 226, 227, 228, 228, 228,
	228, 368, 368, 229, 229, 229, 218, 218, 218, 220,
	220, 220, 220, 220, 220, 220, 223, 223, 223, 223,
	230, 230, 230, 222, 222, 562, 562, 562, 564, 564,
	566, 566, 565, 565, 561, 561, 563, 563, 632, 632,
	393, 393, 393, 346, 347, 344, 344, 345, 345, 354,
	354, 352, 353, 353, 355, 355, 464, 464, 464, 234,
	234, 234, 384, 384, 384, 384, 385, 385, 416, 416,
	414, 414, 414, 414, 415, 415, 417, 417, 417, 418,
	418, 419, 419, 381, 381, 382, 382, 383, 383, 383,
	383, 445, 445, 221, 221, 221, 361, 361, 361, 362,
	362, 435, 435, 435, 435, 435, 435, 435, 436, 436,
	434, 434, 434, 434, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 469, 470, 470, 363, 363, 471, 421,
	421, 580, 580, 580, 581, 581, 462, 462, 472, 472,
	472, 472, 472, 472, 460, 460, 461, 461, 480, 481,
	481, 397, 397, 397, 397, 395, 395, 398, 398, 398,
	398, 398, 396, 396, 473, 473, 473, 473, 386, 386,
	474, 474, 474, 474, 475, 476, 476, 477, 477, 430,
	431, 431, 487, 487, 487, 487, 489, 360, 360, 360,
	360, 360, 538, 537, 537, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 504, 504, 504, 504,
	504, 504, 504, 490, 490, 490, 490, 490, 494, 494,
	494, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 495, 495, 500, 500, 501, 501, 501, 496,
	497, 502, 502, 502, 502, 638, 638, 506, 506, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 492, 492,
	492, 499, 499, 499, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 405, 405, 407,
	407, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 439, 439, 439, 439, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 556, 556, 556, 556, 556, 556, 556, 556, 441,
	441, 559, 559, 560, 560, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 567, 567, 568, 568, 570, 570,
	571, 571, 572, 573, 573, 573, 574, 575, 575, 569,
	569, 576, 576, 576, 576, 577, 577, 578, 578, 578,
	578, 578, 579, 579, 579, 579, 579, 451, 451, 452,
	452, 458, 458, 458, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 319,
	319, 318, 270, 270, 270, 270, 270, 270, 373, 373,
	371, 371, 371, 374, 374, 372, 372, 370, 370, 369,
	369, 448, 448, 446, 446, 450, 450, 399, 399, 505,
	505, 505, 505, 505, 505, 505, 505, 400, 400, 400,
	408, 401, 401, 402, 402, 402, 402, 402, 442, 443,
	403, 403, 403, 444, 444, 453, 457, 457, 456, 455,
	455, 454, 454, 432, 432, 433, 433, 380, 380, 639,
	639, 376, 376, 478, 478, 478, 478, 316, 316, 365,
	365, 315, 315, 307, 307, 308, 308, 308, 308, 358,
	358, 459, 459, 507, 507, 508, 508, 509, 509, 510,
	510, 511, 512, 513, 447, 447, 291, 290, 277, 278,
	289, 288, 287, 276, 279, 284, 285, 286, 281, 282,
	298, 297, 296, 247, 252, 303, 304, 304, 306, 306,
	305, 305, 293, 294, 295, 483, 275, 309, 309, 310,
	310, 310, 311, 311, 311, 311, 271, 271, 272, 272,
	299, 299, 300, 301, 301, 292, 292, 292, 262, 262,
	262, 263, 263, 264, 264, 521, 521, 518, 518, 518,
	519, 519, 519, 520, 520, 520, 520, 517, 517, 517,
	517, 517, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 530, 530,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 532, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	535, 535,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 2, 1, 1,
	3, 1, 3, 2, 2, 3, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 6, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 1, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 1, 3, 3, 1, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 4, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 5, 5, 5, 2, 2, 2, 2,
	0, 1, 1, 3, 4, 11, 12, 9, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 597, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-189, -194, -195, -196, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -190, -191, -192, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 427, 439, 398, 142, 418, 403,
	-140, -141, 457, -56, -68, -134, -133, 73, 129, 412,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -620, 102, -563, -92,
	-95, -126, -624, 161, 220, -114, -115, 366, -121, -122,
	420, -124, -125, 423, 162, -63, -62, 156, -217, -219,
	-138, -139, -193, -147, -148, -149, -150, -151, -152, -153,
	-155, -181, -156, -157, -158, -159, -160, -161, -165, -184,
	-162, -163, -164, -167, -166, -168, -173, -169, -170, -171,
	-172, -174, -175, -177, -178, -179, -180, -182, -183, 462,
	-176, -185, -154, 523, 49, 477, 82, 146, 431, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -54,
	-74, -76, -79, -80, -81, -88, -82, -83, -562, -93,
	-94, -97, -99, -100, -96, -98, 419, -220, -218, 594,
	538, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -39, -44, -45, -41, -42, -40, -43, -46,
	-47, -48, -49, -50, -51, -52, -53, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -17, -29, 559, 568,
	-223, -221, -222, -230, 449, 546, 497, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, -314,
	2, -293, -299, -300, -301, -292, -262, -532, -535, 4,
	-529, -533, 168, 230, 330, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 109, 117, 118,
	119, 120, 121, 123, 128, 129, 132, 127, 131, 133,
	135, 136, 137, 140, 141, 142, 144, 145, 147, 148,
	149, 151, 152, 154, 155, 156, 159, 157, 505, 158,
	160, 161, 162, 163, 166, 174, 175, 176, 181, 183,
	184, 188, 189, 190, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 203, 207, 209, 210, 211, 212, 213,
	219, 220, 222, 223, 224, 225, 226, 231, 232, 233,
	237, 234, 243, 244, 248, 249, 250, 252, 256, 257,
	258, 259, 260, 261, 263, 265, 264, 267, 270, 271,
	274, 278, 279, 283, 284, 280, 285, 286, 288, 289,
	292, 290, 293, 294, 291, 295, 297, 298, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 296, 311,
	309, 313, 314, 315, 328, 324, 325, 319, 320, 316,
	321, 317, 318, 322, 323, 327, 332, 333, 336, 217,
	338, 339, 342, 360, 346, 347, 348, 351, 352, 355,
	358, 359, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 371, 372, 374, 375, 376, 378, 379, 380, 382,
	384, 385, 387, 388, 390, 391, 392, 393, 394, 395,
	396, 398, 400, 399, 401, 403, 405, 406, 407, 412,
	418, 414, 415, 416, 417, 419, 420, 421, 422, 423,
	425, 426, 427, 429, 430, 431, 432, 433, 435, 437,
	438, 442, 443, 459, 460, 479, 439, 440, 441, 444,
	445, 446, 447, 448, 452, 450, 451, 453, 454, 455,
	457, 458, 461, 462, 464, 465, 466, 467, 468, 469,
	470, 473, 475, 476, 477, 496, 478, 480, 484, 485,
	486, 487, 481, 482, 495, 489, 490, 492, 493, 498,
	499, 500, 501, 502, 503, 504, 506, 508, 516, 517,
	518, 520, 523, 524, 525, 526, 514, 528, 529, 532,
	533, 534, 537, 535, 536, 538, 540, 543, 544, 545,
	551, 550, 552, 555, 560, 561, 563, 564, 565, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 191, 192, 204, 206, 214,
	215, 216, 238, 239, 241, 246, 268, 335, 337, 353,
	357, 373, 377, 381, 383, 397, 434, 471, 483, 488,
	509, 510, 511, 512, 519, 521, 546, 547, 548, 553,
	562, -314, 2, -293, 344, -286, 2, -262, -262, 384,
	28, 2, 28, 372, 451, 500, 502, 2, -589, -359,
	2, 28, -265, -262, 102, 202, 449, -286, 2, -589,
	-359, 25, 2, -262, 2, 358, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -623, 360, 391, 437, 453,
	495, 506, 520, 2, 550, 289, 450, 497, 230, 120,
	525, 444, -601, 442, 443, 358, 389, 429, 205, 539,
	-266, 2, 439, -262, 289, 2, 597, 94, 279, 74,
	434, 454, -143, 517, -144, -145, 2, -142, 509, -516,
	444, 311, -262, 597, 597, 597, 28, -275, -262, 497,
	230, 444, 120, 493, 597, 2, 497, 363, 550, 450,
	120, 394, 230, 525, 188, 140, 27, 444, -601, 573,
	574, 289, 126, -587, 2, -582, 4, -533, -529, -308,
	-307, 497, 503, 120, -301, -292, 587, -300, 597, 597,
	597, 2, 249, 250, 393, 392, 454, 455, 597, 597,
	597, 597, 442, 2, 163, 22, 27, 66, 93, 98,
	126, 185, 188, 349, -621, 360, 391, 453, 495, 499,
	506, 520, -600, 478, 68, 417, 444, -599, -601, 289,
	525, 140, -409, 120, 279, 200, 533, 502, 500, 531,
	132, 237, 536, 535, 597, 597, -105, 2, 594, 32,
	31, -104, -108, 142, 457, -212, 497, 242, 2, -262,
	597, 597, 2, 249, 250, 442, 443, 597, 597, 186,
	-582, 2, 597, 597, 2, 249, 250, 442, 443, 242,
	2, 68, 446, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 2, -187,
	454, 478, 211, 47, 46, 74, 28, 390, 79, 364,
	121, 126, 148, 526, 203, 230, 231, 257, 93, 94,
	-411, 44, 250, 68, 249, 443, -606, 442, -463, 498,
	445, 451, 492, 261, 439, 517, 102, 540, 430, 565,
	394, 395, 490, 407, 280, 157, 187, 4, 120, 311,
	456, 509, 279, 438, 367, 84, 597, -632, 2, 497,
	-634, 2, 517, 517, 2, -634, 2, -634, 2, -634,
	2, -635, 517, 562, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, -218, -220, -219, 597, 597, 597, 597, 597,
	597, 597, -187, 454, 2, 74, 28, -352, -354, 530,
	240, 150, 350, -217, -219, 2, -562, -514, 2, -437,
	-536, -439, 585, 586, 578, 494, 67, -318, 329, 566,
	-451, 126, 531, 344, -535, -440, -453, 153, 360, 434,
	-374, 8, 9, 5, 6, 7, -271, -441, -447, 522,
	167, 334, -311, 598, 10, 594, -559, -219, -452, 37,
	206, 65, -518, -310, -272, -490, 241, -309, -292, -556,
	-557, 4, -529, -530, -519, -493, -501, -497, -498, -504,
	-262, -532, 77, 111, 112, 110, 115, 114, 282, 281,
	116, 113, 456, 539, 66, 36, 214, 215, 246, 335,
	216, 75, -558, 141, -531, 238, 239, 471, 51, 397,
	177, 125, 124, 337, 56, 54, 547, -502, 122, 509,
	510, 511, 512, 191, 192, 58, 164, 165, 357, 381,
	488, 519, 521, 204, 268, 43, 106, 187, 236, 218,
	245, 247, 251, 269, 272, 312, 326, 331, 354, 356,
	428, 463, -638, 548, 483, 69, 70, -564, 399, -565,
	-286, -564, 597, 597, 599, 597, -344, -346, -347, 2,
	28, 138, 594, 2, -468, 2, -469, -473, -219, 262,
	-472, 594, -470, 592, -293, 345, -560, 435, -556, -557,
	-271, -292, -310, 4, -529, -531, 596, -348, 594, 120,
	497, 78, 230, 163, -404, 594, -262, 28, 344, 513,
	599, -345, 388, -449, 594, 344, 186, 347, 60, 293,
	2, 2, 2, 2, 2, 214, -262, 497, 119, 2,
	260, 2, 2, 2, 2, 2, 2, 2, -367, 214,
	2, -293, 550, -367, 214, 2, -367, 214, 2, -410,
	2, 87, -276, 214, 2, -262, -302, 214, 2, -297,
	-299, -306, 214, 2, -304, -262, -527, 214, 2, -526,
	-521, 10, -520, 5, 4, -529, -533, -530, -532, 77,
	-437, 2, -132, 2, 60, -262, 550, 2, 2, 459,
	2, 594, -143, 71, 517, 43, 454, -424, 2, -425,
	-258, -259, -260, -480, -261, 248, 387, 396, 569, 130,
	329, 565, -615, 186, 577, 513, -514, -514, -375, 596,
	2, 2, 2, 2, 2, 2, -473, 214, -293, 2,
	-290, -517, 4, -529, -533, -530, -534, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 202, 205, 208, 221, 235,
	240, 242, 262, 266, 273, 281, 282, 329, 334, 340,
	344, 345, 349, 350, 370, 386, 402, 424, 449, 456,
	474, 491, 497, 507, 513, 515, 522, 530, 531, 539,
	541, 549, 554, 556, 557, 558, 559, -535, 2, -473,
	214, 2, -296, 214, -473, -299, 2, -276, 2, -289,
	-517, 2, -315, 214, -293, -295, -299, -297, 2, 2,
	2, 2, -304, 2, -526, 214, 2, 28, 28, 550,
	388, 242, 513, 599, -365, -307, -308, -513, 8, -358,
	-262, 596, -437, 2, -132, -116, 2, 182, -437, 214,
	2, -132, 214, 2, -437, 214, 2, -132, 214, 2,
	-603, 2, -526, 214, -262, 2, 293, 2, 2, 520,
	2, 98, 497, 119, 2, 416, -622, 437, 524, 2,
	2, 2, 2, 2, 2, 2, 497, -281, 2, -262,
	182, 481, -304, 214, -305, 2, 450, -633, 399, -526,
	214, 2, 550, -297, 214, 2, -297, 230, 244, -276,
	214, 2, 502, 500, 502, 500, 186, 2, 242, 2,
	242, 2, -474, 2, -475, -469, -476, 592, 345, -484,
	2, -483, -520, 546, -105, 594, -105, 594, 454, 594,
	-526, -293, -293, -437, 2, -132, -116, 2, -437, 2,
	-132, 2, -129, -526, -128, 594, 186, -437, 2, -132,
	-116, 2, -437, 2, -132, 2, -212, 182, 2, 120,
	497, -187, 2, 182, 541, 2, 8, 2, 221, -526,
	445, 395, 174, 2, 459, 2, 460, 74, -411, 565,
	74, 186, 2, 186, 2, -394, 2, 559, 388, 186,
	2, 2, -586, 2, 344, 186, 2, 186, 2, 186,
	2, 186, 2, 186, 2, -186, 455, 518, 496, 392,
	250, 2, -132, 556, -116, 250, 249, -437, 556, 2,
	-607, 182, 443, -437, 2, 516, 259, 158, 186, -394,
	2, 186, 2, 186, 2, 5, 2, 393, 479, 2,
	248, 387, 479, 2, -293, 497, 550, 450, 120, 28,
	2, 442, 2, 2, 88, 89, 186, 2, 186, 2,
	201, 186, 2, 186, 497, 565, 2, -386, -473, -423,
	-424, -423, 513, -352, -354, -187, 459, 2, -224, -384,
	-226, 182, -414, -415, -227, 273, 169, 340, -228, -393,
	28, 138, -393, -393, 60, 595, 595, 11, 12, 76,
	41, 585, 586, 587, 588, 180, 589, 590, 583, 584,
	582, 575, 576, 580, 254, 255, 95, 579, 577, 86,
	287, 436, 170, 171, 172, 173, 413, 228, 34, 229,
	14, 15, 16, -318, 33, 349, 272, 566, 218, 463,
	578, 17, 18, 19, 245, 247, 331, 50, 221, -270,
	360, -317, 494, 67, -437, -437, -437, -437, -437, -437,
	-437, -437, 356, 594, -380, -432, 592, -219, 594, 594,
	594, 594, -513, -219, -437, -451, 595, -372, 594, -219,
	-451, -446, 594, 434, 592, 594, -454, -437, 5, 5,
	5, 594, 596, -567, 560, 182, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 383, -495, 594, -494, 594, -494, -494, 551, -492,
	594, 568, 561, 594, -492, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 551, 599,
	-564, -348, 594, -376, -478, -437, 587, -376, -376, 344,
	-369, -437, 106, -397, 251, 312, 187, 269, 428, 236,
	-434, 598, -434, -462, 568, -219, -470, -292, -219, -472,
	594, -468, -462, -106, -513, -89, -102, -111, -132, -146,
	-191, -192, 587, -293, 594, 186, 594, 596, -517, 186,
	-358, -276, -293, -309, -310, -315, 2, 137, -369, -582,
	525, 444, 28, 450, -358, -265, 38, -448, -487, -488,
	-538, 598, -537, -490, -500, -496, -499, 373, 377, -519,
	54, 547, -502, 241, 4, -529, -531, 238, 239, 471,
	51, 397, 177, 125, 124, 337, 56, 509, 510, 511,
	512, 191, 192, 58, 548, 483, 69, 70, -582, 525,
	444, 28, 450, -358, 182, -524, 2, -523, -522, 116,
	456, -520, 5, 2, 153, 2, 2, 2, -262, -239,
	599, 64, 421, 153, -367, 214, -239, 153, -239, 153,
	-316, 214, -315, -239, 153, -239, 599, 153, -239, 599,
	153, 596, 599, 153, -524, 2, -410, -516, -369, 38,
	-424, 2, 126, -522, -636, 599, 271, -321, 286, 328,
	210, 345, 563, 338, 130, -525, 5, 4, -447, -459,
	126, 279, 241, -507, -509, 8, -508, 9, -510, 585,
	586, -515, -514, 109, 596, -517, -236, 414, 457, 359,
	-235, 24, 29, 142, 232, 315, 544, 159, -334, 233,
	-331, 363, 153, 475, 534, -596, -597, 441, 504, 505,
	90, 338, 457, 359, 414, 153, -390, -392, 38, 118,
	315, 358, 61, 225, 291, 292, 477, 553, 153, 457,
	359, 414, 359, 457, 24, 142, -253, -248, -597, 99,
	414, 489, 386, -597, -238, 475, 534, -596, -597, 441,
	414, -237, -336, -331, 363, 153, 598, 24, 142, 414,
	457, 359, -618, -619, 29, 414, 359, -590, -283, -561,
	221, 559, 153, -283, -283, -473, 214, -611, 182, 2,
	-604, -128, 263, 5, 10, -526, -128, -365, 599, 599,
	-517, 587, 443, 442, 153, 153, 153, 153, 182, 329,
	2, 2, 2, 2, 2, 188, -599, -623, 2, 2,
	-293, 214, -350, 344, -585, -366, 497, -293, 182, 329,
	43, -296, 214, 2, -299, 550, -590, 329, -298, 214,
	-293, 38, 594, 329, 2, -410, 2, 230, -561, 329,
	-474, -312, -293, -469, -312, 457, -286, 38, -434, -293,
	595, 599, -484, -484, -526, -200, 559, 186, 102, 594,
	594, -212, -481, 599, -480, 221, -527, -129, -526, 417,
	-526, -585, -276, 2, -293, 2, 497, 252, -526, -200,
	221, -526, -526, -526, -516, 28, 460, 2, -186, 455,
	518, 89, 460, 2, -293, 497, 120, 230, 80, -611,
	2, 182, -262, -588, 182, -583, 429, 444, 525, -582,
	-293, 120, -293, 120, -293, 120, -293, -293, 2, 2,
	2, 2, 2, 85, 2, -132, -437, 2, 85, 2,
	46, -607, 182, 2, 516, 2, 516, 2, -262, -262,
	-262, 478, 271, -293, -293, -293, -294, -299, 498, 443,
	-437, 2, -625, 2, 186, 182, 2, 497, 230, 497,
	230, 120, 186, 74, 120, 28, 497, 440, -239, 599,
	-266, -224, -384, -516, -385, -384, -225, -224, -227, 182,
	396, 535, 315, 461, 256, -415, -414, 28, -437, -419,
	176, 314, -437, -417, -439, 585, 586, -508, -510, -368,
	338, -218, -218, -218, -355, -464, -437, 386, 230, -489,
	-487, -487, -291, -517, 509, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, 272, 218, 463, 50, 221, -437, 513, -437, -437,
	-437, -437, 309, 329, 334, 522, 167, 532, 138, 338,
	-639, 491, 40, -444, -219, -373, 594, -458, 35, 474,
	28, -451, 594, 2, -432, -437, -433, -319, -317, -262,
	585, 586, 587, 588, 589, 590, 575, 576, 577, 14,
	15, 16, 580, 584, 582, 583, 180, 95, 579, 287,
	436, 86, 170, 171, 172, 173, 254, 255, 17, 18,
	19, 34, 578, -370, -369, -369, 595, 549, 28, 138,
	587, 2, 595, 599, 38, 595, -437, -370, -450, -446,
	-369, -457, -456, 556, -405, -406, 564, 296, 123, 212,
	294, -407, 448, -511, 8, -517, 587, -568, 175, 205,
	594, 595, 2, 595, 2, 595, -437, 2, 595, -437,
	2, 595, -437, 2, 595, -437, 2, 595, 2, -437,
	-437, -437, -437, -437, -437, -437, -369, 8, -511, -511,
	509, 509, -511, -511, -511, -503, 373, 374, 375, 376,
	274, 275, 276, 277, 377, 378, 379, 380, 301, 302,
	303, 304, 297, 298, 299, 300, 305, 306, 307, 308,
	196, 197, 198, 199, 192, 193, 194, 195, -503, -399,
	2, -505, -369, 4, 564, 296, 123, 212, 294, 448,
	5, -399, 2, -400, 2, -437, -369, -401, -438, -439,
	585, 586, 578, -318, -451, -402, 2, -437, -370, -437,
	57, 266, 515, -403, -437, 186, -369, -369, 2, -369,
	2, -565, 38, -369, -361, 599, 186, 38, 4, -361,
	-361, 594, 595, 599, -398, 209, 290, 285, 244, -398,
	-468, -397, 251, -395, 354, -395, -395, -462, -277, 592,
	600, -517, -462, -461, -460, 38, -286, 351, -462, -462,
	596, 595, -461, 593, -580, 594, 597, 597, 597, 597,
	597, -293, 594, -369, -517, 596, 480, 2, 595, 245,
	245, 245, 245, 435, 595, 513, -584, -302, -306, 498,
	2, 559, -104, 346, 595, 599, -360, 37, 592, 596,
	-511, 2, 2, -506, 551, 594, 594, -406, 594, 186,
	-584, -306, 498, 2, -359, 599, 513, -262, 2, -293,
	-367, -239, 153, -367, -367, -239, 599, 153, -276, -297,
	-302, -304, -306, -262, -526, -527, -239, -298, -615, 595,
	517, -425, -320, 396, 473, 415, 452, 493, 8, 9,
	8, 9, 599, -517, 599, -616, 93, 513, 78, 444,
	-255, 280, 513, -428, 214, 78, -539, -279, 93, -540,
	-262, 72, 531, 386, 185, 151, -616, 93, 386, -616,
	93, 2, 232, 93, 457, 478, 28, 60, -473, 41,
	41, 28, -614, 327, 267, 555, 186, 565, 497, 230,
	444, 513, 513, -473, -392, -487, 118, 291, 292, 60,
	-512, -507, 585, 586, -512, 60, -512, -512, -512, 559,
	-296, -473, 444, 513, 513, 513, -251, -248, 369, 405,
	405, 513, 513, -637, 577, 405, 599, 41, 41, 28,
	-614, 327, 267, 186, 513, -315, -277, 545, 42, 545,
	42, 545, 513, 42, 444, 513, 599, 42, 513, 513,
	-13, 457, 572, 419, -591, -267, 105, 321, 284, 322,
	97, 318, 96, 317, 103, 319, 104, 320, 552, 332,
	63, 316, 295, 323, -268, -269, 365, 543, 120, -526,
	-13, -13, 457, 359, 414, 153, -612, 221, 28, -601,
	221, -481, 221, -481, -307, -262, 596, -132, -437, -437,
	-132, -437, -132, 46, 153, 2, -633, 260, 594, -324,
	329, 186, -358, -482, 242, 599, -366, -582, 153, -523,
	-391, -390, 329, -298, 214, 2, 153, -348, 329, 147,
	594, 394, 2, 153, -278, 214, -263, -262, -410, -242,
	501, 153, -388, 541, -420, -132, 594, 126, 38, -420,
	-377, -378, -479, -379, -279, 594, -286, -434, -105, -483,
	595, 595, 595, -199, 348, -198, -262, 5, -212, 541,
	-323, -429, -428, -543, -544, -539, 272, 230, 531, 244,
	168, -349, -280, -279, 119, -206, 559, -128, -129, 595,
	-481, 221, 481, -200, -200, -481, -481, -293, 182, -526,
	-200, -200, -200, 2, 2, 2, 2, -394, -293, -276,
	-315, -293, 596, -358, -358, -306, -302, -394, -276, -394,
	-276, -394, -276, -132, -437, 2, 454, 182, 182, 596,
	-394, -351, 424, 2, 394, 120, 497, 363, 230, -293,
	-315, -293, -315, -276, 120, -276, 121, -293, -473, -385,
	-225, 345, 256, 461, -417, -418, -439, 434, 435, -418,
	434, 435, 8, 9, 8, 9, -229, 465, 333, -367,
	599, -233, 39, 134, 256, -293, 565, 149, -437, -437,
	513, -639, 491, -444, 149, -437, 309, 334, 522, 167,
	532, 138, 338, 186, 594, -438, -438, 595, -371, -437,
	-437, 593, 602, 595, 596, 595, -354, 599, -352, -437,
	-369, -369, 595, 596, -369, -358, 593, 593, 599, 595,
	-455, -456, 143, -437, 513, 513, 513, 513, 594, 595,
	596, -573, 355, 594, 594, -437, 595, 595, 595, 595,
	38, 599, 599, 599, 595, 599, 599, 599, 595, 595,
	595, 599, 595, 565, 565, 595, 595, 595, 595, 599,
	595, 599, 595, 186, 595, 595, -408, 370, 595, 11,
	12, 585, 586, 587, 588, 180, 589, 590, 583, 584,
	582, 575, 576, 577, 86, 287, 436, 14, 15, 16,
	-318, 245, 221, -438, -438, -438, -438, 595, -442, -443,
	186, 182, 38, -403, -403, -403, 595, 186, -369, 595,
	595, 594, -566, 289, 329, 595, -431, -430, 557, -478,
	-362, 2, -468, -288, -517, -431, -431, -369, -437, 251,
	251, -396, 541, 344, -398, -468, -461, -513, -436, -435,
	184, 39, 134, 324, 325, 217, -461, -286, -348, -461,
	-461, -517, -462, -462, -460, 595, -581, -513, 595, -363,
	-471, -560, -354, 596, -517, -209, -561, -188, 5, 334,
	-188, -188, -188, -358, 513, 513, 221, 25, 371, -487,
	592, 593, 8, -517, 594, -511, -511, -511, -358, 186,
	186, 221, 186, -523, -523, 2, -239, -367, -239, -239,
	-315, -316, -239, -239, -239, -389, 559, -514, -424, 529,
	83, 396, 509, -514, -235, 414, -279, -279, -293, -303,
	-262, 200, 406, -523, 329, -428, 214, -241, 329, -487,
	-287, -262, 594, -412, 561, 256, 256, 541, -279, -287,
	256, 214, -279, 214, -287, 2, -287, -592, 396, 339,
	-437, 60, -332, 278, 394, 330, -236, 414, 457, 359,
	-132, -132, -132, -132, -132, 594, -615, 541, 137, -293,
	-315, -293, -303, -523, -298, 457, 359, 414, 326, -309,
	-512, -512, -390, 457, 359, 414, -303, -523, -296, -523,
	422, 126, -247, 214, -262, -247, 214, 444, -276, 405,
	565, 45, -637, -237, -132, -132, -132, -132, -132, 594,
	-277, -238, 414, 5, 214, -279, 5, -279, 214, 5,
	-262, -279, -303, -523, -619, 24, 142, -279, -303, -523,
	-144, 28, -187, -267, -526, 334, 537, -276, -590, -283,
	444, 513, 513, -473, -608, -609, 202, 427, 444, 430,
	-358, -128, -203, 559, -128, -197, 226, 587, -587, -262,
	550, -262, -322, -325, -323, -279, -215, -216, 561, 559,
	153, -313, -293, 592, -200, -526, -293, -482, -304, -305,
	153, -348, 329, -526, 38, 153, 594, 2, 2, -297,
	344, 329, -278, 214, -243, 144, -637, -276, -431, -362,
	-387, -422, 424, 344, -349, 546, -286, -387, -364, 599,
	186, 577, 596, -349, -477, 587, -105, -105, -200, 599,
	594, 577, 577, 594, -526, -526, 595, 599, -241, -293,
	-278, 230, 230, -285, -263, 595, 599, 596, 594, -208,
	348, -207, 145, 258, 243, 467, 468, 469, 470, 136,
	466, -481, -206, -129, 186, 186, -64, 559, 497, -200,
	598, -262, -394, -394, -394, 454, 454, -262, -358, -289,
	-276, -293, -290, -315, 182, 182, -276, 535, -418, 345,
	283, -464, -234, 567, -293, 598, -437, -437, 149, 149,
	-437, -438, -438, -437, 149, 186, 594, -437, -448, 33,
	33, 595, 599, -433, -437, -317, 595, 549, -354, -354,
	595, 587, -517, 598, 595, -446, 146, -437, 507, 296,
	212, 294, -407, 294, -407, -407, -511, 5, -517, 587,
	-574, -282, 594, -262, 557, -353, 350, 595, -489, -487,
	-437, -437, -437, -437, -437, -511, -492, -492, -507, -507,
	-437, -442, -437, -489, -487, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, 138, 329, 338, -438, -443,
	-442, -437, -437, -487, 595, 595, 595, -369, -104, 594,
	289, -381, 205, -437, -481, 599, -381, -381, 595, -468,
	-468, 594, -437, 251, 593, 599, 601, 577, -348, 596,
	-460, -461, 593, 595, 599, 595, 599, -421, 38, 595,
	-517, -431, -211, -210, 135, 53, 107, 133, 334, -358,
	-358, 444, 347, 5, 8, 592, 593, 596, -511, 595,
	595, 595, -358, -358, 444, -358, -239, -239, 119, 315,
	-437, 513, 513, 60, 221, 153, 329, 543, -545, -540,
	151, -437, 594, 230, 594, 594, 2, -231, -232, 142,
	457, 24, -617, 2, 541, 153, -239, 153, -239, 563,
	-332, 594, 594, 513, 444, -255, 513, 559, -369, -437,
	-201, 126, -516, -597, 598, -597, 598, 444, 513, 513,
	444, 513, 513, 329, 153, 559, 166, 166, 565, -247,
	559, -369, 513, -491, 48, 26, 329, -297, -239, 153,
	513, 513, 525, 457, -526, 334, -13, -303, -523, -298,
	457, 359, 414, -589, -359, -589, 202, -306, -612, -481,
	-205, 348, -204, 145, 426, 136, 258, 223, -481, -203,
	186, 242, 559, -298, 2, 595, 595, 599, -546, 38,
	342, 342, 594, -293, -85, 559, -480, -513, -593, 559,
	43, -296, 38, 153, -590, -132, -298, -485, -486, 5,
	38, -293, 153, 344, 329, -244, 265, -637, -521, -561,
	-354, -387, -376, 330, 91, 595, -431, -378, -362, -437,
	2, 595, -198, -199, -526, -526, -526, -200, -212, -212,
	-429, -326, 594, -278, -263, 594, -212, -280, 2, -527,
	599, 594, 577, 577, 577, -206, -481, -128, -132, 348,
	-293, 587, -394, -338, -337, 363, 338, -338, 434, 434,
	345, 176, 261, -233, -277, -437, -437, 149, 33, 33,
	-437, -437, -448, 595, -437, -437, -369, 593, 5, -437,
	595, 595, 8, -437, 595, 596, -575, -262, -437, 595,
	60, 595, 595, 599, 599, 595, 595, 595, 595, 595,
	595, 595, -443, 186, 138, 338, 594, 595, 595, -104,
	-445, 208, 60, -468, -445, -445, -396, -358, -468, -435,
	-277, 592, -517, -513, -471, 594, 596, -210, 577, -526,
	-526, 559, -306, 593, 2, 592, -517, 595, -306, 119,
	-279, -279, 497, 434, -247, 386, -428, 153, -547, 93,
	-549, 76, 168, 102, 329, 334, 531, 386, 72, 126,
	402, -627, -628, -629, 38, 570, 571, 595, -356, -465,
	-560, 594, -262, -356, -358, 329, 486, 126, 329, 126,
	554, 119, 2, 525, 79, -279, -287, -358, -358, -293,
	-303, -523, 160, 595, 599, 577, 2, 587, 587, -303,
	-523, -298, -303, -523, -296, 153, -247, 361, 166, 160,
	595, -277, 5, 5, 153, -274, 76, -279, 5, -279,
	-297, 119, 444, 513, 513, 344, 344, 347, -608, -609,
	-203, 599, 594, 577, 577, -203, -527, -128, 2, -348,
	-339, 232, -279, -544, -541, -542, 386, -548, -550, 168,
	386, -132, 2, -214, -213, -262, 5, 594, -324, 348,
	593, -595, 348, -594, 117, 136, -523, -391, -132, -298,
	-348, 595, 599, 147, -413, 541, -277, -293, 153, -245,
	264, -637, -521, -242, -416, -414, 139, 594, 344, -132,
	-354, 577, 595, 595, 119, 119, 224, 152, -356, 594,
	594, -358, 119, 595, -207, -208, -526, -128, -526, -206,
	-481, -65, -66, 230, 93, 368, -290, 497, 230, 594,
	594, -233, -437, -437, -437, 595, -354, -517, 587, -569,
	363, 595, -464, -437, -437, -438, 186, 594, -448, 595,
	-570, 558, -437, -382, -383, -437, 432, 108, 206, -570,
	-570, 595, -513, 2, -526, 2, 513, 592, 2, 186,
	221, 38, 405, -428, -287, -291, -284, -262, 168, 214,
	334, 554, -412, 256, 594, -438, -293, 594, 2, 213,
	213, 30, 60, -630, 130, 235, 595, 599, -466, -273,
	-262, -437, -466, 595, 595, 334, 334, 554, -437, -487,
	594, -239, -239, 595, 595, -437, 513, -516, 100, -514,
	2, -597, -247, -276, -437, 513, 5, -239, -291, -239,
	-239, -274, 525, -303, -523, -298, -613, 498, 451, 526,
	445, 189, 433, -613, 182, -204, -205, -526, -128, -203,
	38, -329, 234, 2, -546, 256, -284, 256, -626, 559,
	595, 599, 577, 577, -322, -215, -86, -87, 514, -480,
	599, 594, 577, -348, 38, 5, 594, 594, -262, 344,
	594, -277, -257, 92, -637, -521, -243, -387, 330, -358,
	93, -416, -444, -200, 594, 594, -327, 81, 94, 127,
	213, 190, 231, 478, 484, 28, -327, 595, -356, -356,
	595, 594, -200, 595, 599, 28, 594, 28, 594, -293,
	-315, -369, -369, 595, -354, 60, 599, 595, 595, -438,
	-448, 595, -571, -572, -282, 599, 594, 594, 458, 593,
	-358, 2, -358, -247, 386, -262, -549, -284, 329, 541,
	-437, -264, 594, -437, 38, 126, 235, 131, 219, -427,
	-631, 101, 487, 222, -465, -233, 595, -426, 541, 402,
	-274, -356, 594, 594, 594, 577, 186, 594, -491, -239,
	-297, 513, 2, 2, 186, -589, 595, -602, 400, -132,
	-333, -334, 221, 594, -328, 344, 119, 315, -213, -514,
	-514, 595, 38, -87, 9, -594, -595, -437, 38, -132,
	-485, -356, -293, -356, 344, -249, -248, 273, -521, -244,
	595, -287, -387, -527, -527, -426, 595, 595, -527, -66,
	-358, -358, 595, 595, -576, 394, 435, 207, -369, -355,
	595, 599, 38, -383, 2, 2, 2, 405, 153, 209,
	595, -551, 288, -262, 595, 38, 131, 219, -329, 594,
	-234, -466, -329, 209, -293, -598, 541, 595, -341, -340,
	-337, -343, -342, -337, -369, -514, 100, 361, -369, -274,
	-358, -358, 344, -605, 187, -604, 5, 10, -215, 361,
	-357, -467, -279, 82, 119, -339, -132, 595, -132, 595,
	595, -413, 595, -293, -246, -528, 405, 407, -637, -245,
	-431, 595, 595, -427, -426, -335, -331, 595, 595, 595,
	595, -577, -578, 50, 528, 109, -437, -577, -577, -572,
	-574, 168, 559, -552, -555, -554, 344, 464, 187, 362,
	595, 486, 553, -335, -358, 559, -348, -437, -426, 595,
	599, 546, 595, 599, 546, 595, 186, 595, -239, -610,
	559, -239, -613, -202, 559, 46, -328, -293, 595, 599,
	385, 132, 142, -329, -626, -426, 594, -427, 594, -254,
	-253, -637, -507, -257, 139, -200, -200, -329, -427, -216,
	559, -200, -579, 151, -578, 382, 181, 434, 382, 181,
	-579, -579, -284, 55, -554, 344, -555, 344, 535, 132,
	-630, 595, 55, -551, -329, -340, 221, -342, 186, 361,
	202, 186, 442, -604, 30, -256, -255, 594, -467, 435,
	435, 2, -333, -328, -427, -356, -329, -356, -250, -251,
	-252, -358, -249, 330, 535, -335, -329, -431, 109, 205,
	508, 315, 33, 577, -553, 315, 421, 64, 457, -553,
	-431, 577, -552, 594, 594, 347, -358, 348, -358, 2,
	-215, -329, 595, -335, 595, -246, 457, -216, -335, 434,
	352, -578, -437, 23, 334, 126, -437, -630, -369, -369,
	-239, -199, 594, 595, -328, -335, -426, -216, -427, -254,
	-377, -431, -216, 595, 595, -199, -240, 64, 421, -256,
	-216, -427, -431, -329, -250, -431, -431, -330, -331, 513,
	595, -431, -329, -335, 594, -335, -216, -369, -216, -431,
	595, -431, -330,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 545, 546, 548, 549, 550, 552,
	553, 555, 557, 559, 560, 561, 563, 564, 566, 567,
	568, 569, 570, 572, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	641, 643, 0, 1387, 1389, 1391, 1393, 0, 791, 0,
	36, 37, 39, 0, -2, 330, 332, 334, 0, 361,
	363, 364, 366, 368, 369, 370, 372, -2, 0, 478,
	479, 481, 483, -2, 0, 995, 997, 0, 630, 632,
	0, 1000, 1002, 0, 0, 652, 653, 0, 1498, -2,
	646, 648, 650, 716, 718, 720, 722, 724, 726, 728,
	730, 732, 734, 735, 737, 739, 741, 743, 745, 746,
	748, 750, 752, 753, 755, 756, 758, 760, 762, 764,
	766, 768, 770, 772, 774, 776, 778, 780, 782, -2,
	785, 786, 787, -2, -2, 0, -2, -2, -2, 1405,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	422, 424, 426, 428, 430, 433, 435, 437, 1556, 485,
	487, 489, 491, 493, 495, 497, 0, -2, 1570, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 107, 108, 109, 110, 111, 112, 113, 114,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 105, 73, 0, 0,
	1529, 1531, 1533, 1535, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 547,
	551, 554, 556, 558, 562, 565, 571, 573, 575, 530,
	531, 534, 2262, 2280, 2281, 2282, 2285, 2286, 2287, 2288,
	2289, 2290, 2738, 2820, 2821, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 532, 533, 1176, 0, 599, 597, 2247, 600, 2537,
	602, 604, 472, 473, 474, 475, 476, 477, 0, 623,
	613, 1568, 624, 626, 627, 628, 629, 594, 592, 0,
	623, 2316, 621, 1385, 1386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 401, 1234, 1235, 1236,
	1370, 1371, 2583, 1412, 0, 231, 642, -2, -2, -2,
	2703, -2, 674, -2, 685, 688, 689, 681, 2707, 0,
	2586, -2, 692, 1388, 1390, 1392, 789, 790, 2266, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 241, -2, -2, -2, -2,
	0, 0, 2631, 2368, 2215, 2282, 2218, 2213, 331, 333,
	335, 336, 0, 0, 0, 0, 0, 0, 362, 365,
	367, 371, -2, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1056, 1048, 1049, 1292,
	0, 0, 0, -2, 480, 482, 535, 536, 0, 1557,
	1557, 543, 544, -2, 0, 0, 0, 0, 301, 289,
	996, 998, 999, 0, 0, 0, 0, 631, 633, 0,
	0, 270, 1001, 1003, 1004, 0, 0, 0, 0, 0,
	303, 0, 0, 647, 649, 651, 717, 719, 721, 723,
	725, 727, 729, 731, 733, 736, 738, 740, 742, 744,
	747, 749, 751, 754, 757, 759, 761, 763, 765, 767,
	769, 771, 773, 775, 777, 779, 781, 783, 784, 797,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 892, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 976, 0, 0, 800, 802, 803,
	804, 0, 865, 890, 891, 900, 788, 0, 1216, 1558,
	1414, 1395, 1409, 1414, 1397, 1398, 1399, 1400, 1401, 1406,
	1408, 1402, 1403, 1404, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 423, 425, 427, 429, 431, 434,
	436, 438, -2, 1527, 1528, 486, 488, 490, 492, 494,
	496, 498, 634, 0, 636, 0, 801, -2, 0, 1562,
	1562, 1562, 0, 0, 1528, 1526, 0, 639, 640, 696,
	697, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 1919, 0, 698, -2, 1952, 1954, 2678, 2510, 2703,
	2088, 1956, 1957, 1958, 1959, 1960, 0, 1962, 1963, 1964,
	1965, 1966, 1967, 0, 1969, 0, 1974, 1975, 1976, 0,
	2685, 2192, 2276, -2, 0, 0, 2691, 2272, 0, 2055,
	1992, -2, -2, 2299, 2278, 1763, 1764, 1765, 1766, 1767,
	-2, -2, 2721, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 0, 2666, 2686, 2687, 2692, 2694,
	2688, 2675, 2017, 2381, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1790, 1799, -2,
	-2, -2, -2, -2, -2, -2, 2679, 2680, 2697, 2700,
	2706, 2711, 2712, 2684, 2693, 2720, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 1791, -2, -2, -2, -2, 1545, 2550, 1548,
	1176, 1546, 1530, 1532, 0, 1534, 0, 0, 0, 1539,
	1565, 1563, 0, 1614, 1543, 1544, 1633, 1633, 1657, 0,
	1638, 0, 1657, 1557, 1684, 0, 1644, 2575, 1993, 1994,
	0, 2282, 2277, -2, -2, 2718, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 0, 601, 603, 0, 0,
	0, 622, 1567, 0, 0, 0, 0, 0, 0, 0,
	404, 405, 406, 407, 408, 2686, 0, 0, 0, 413,
	0, 415, 416, 417, 418, 419, 420, 421, 200, 2686,
	503, 528, 0, 200, 2686, 506, 200, 2686, 509, 0,
	512, 1290, 200, 2686, 515, 2243, 200, 2686, 518, 520,
	2251, 200, 2686, 524, 2258, 2256, 525, 2686, 527, 306,
	304, 305, 2295, 2296, 2303, 2304, 2305, 2306, 2719, 2721,
	1381, 1382, 1383, 1384, 0, 1411, 1291, 644, 645, 0,
	669, 0, 673, 2674, -2, 0, 2595, -2, 677, 1415,
	1419, 1420, 1421, 1422, 1423, 0, 0, 0, 0, 1428,
	0, 0, 0, 0, 670, 671, 684, 690, 693, 0,
	792, 793, 794, 795, 796, 72, 0, 2686, 1684, 74,
	0, 2237, 2307, 2308, 2309, 2310, 2311, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 78, 0,
	2686, 83, 0, 2686, 0, -2, 95, 0, 106, 0,
	2240, 115, 0, 2686, 0, 2212, -2, 0, 212, 290,
	291, 292, 0, 1023, -2, 2686, 1228, 1230, 1230, 0,
	-2, 0, 0, 0, 986, 2209, 2214, 987, 2233, 988,
	2219, 0, 337, 338, 339, 340, 341, 0, 342, 2686,
	344, 345, 0, 347, 348, 2686, 350, 351, 0, 353,
	0, 253, 254, 2686, 375, 377, 0, 379, 380, 0,
	382, 0, 0, 0, 386, -2, 402, 0, 399, 389,
	390, 392, 393, 394, 395, 396, 0, 442, 440, 2248,
	0, 0, -2, 2686, 0, 1020, 0, 0, 1270, -2,
	2686, 1221, 0, 1277, 2686, 1273, 0, -2, 0, 1555,
	2686, 1432, 1052, 1053, 1054, 1055, 1696, 469, 0, 1463,
	0, 1465, 0, 1484, 1690, 1633, 0, 0, 1695, 0,
	-2, 588, 2265, -2, 538, 0, 539, 0, -2, 0,
	318, 0, 0, 1005, 1006, 1007, 1008, 1009, 1012, 1013,
	1014, 1015, 1670, 271, 273, 0, 0, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 0, 0, 654, 0,
	0, 798, 799, 0, 0, 809, 810, 811, 0, 318,
	2587, 2546, 2402, 818, 0, 821, 824, -2, 0, 0,
	0, 0, 828, 0, 833, 834, 835, 0, -2, 0,
	841, 843, 994, 845, 0, 0, 847, 0, 851, 0,
	854, 0, 856, 0, 858, -2, -2, -2, 866, 867,
	-2, 872, -2, 0, 876, -2, 0, 879, 0, 882,
	-2, 0, 892, 888, 889, 0, 0, 0, 0, 908,
	909, 0, 918, 0, 921, 922, 923, 0, 927, 928,
	0, 930, 931, 932, 933, 0, 2658, 2592, 2368, 0,
	939, -2, 945, 947, 0, -2, 0, 963, 0, 967,
	0, 0, 975, 0, 0, 805, 806, 200, 1688, 1394,
	-2, 1396, 0, -2, 0, 635, 0, 638, 1587, 1513,
	1510, 0, 1584, 1585, 1514, 0, 0, 0, 1521, 0,
	1560, 1561, 0, 0, 0, 1500, 1501, 0, 0, 0,
	0, 2094, 2095, 2096, 2097, 2110, 2098, 2099, 2109, 2107,
	2108, 2100, 2101, 2106, 2120, 2121, 2111, 2112, 2102, 2115,
	2113, 2114, 2116, 2117, 2118, 2119, 0, 0, 2125, 0,
	2103, 2104, 2105, 2133, 0, 0, 2134, 0, 2136, 0,
	2126, 2122, 2123, 2124, 0, 1898, 1900, 2200, 0, 0,
	0, 2132, 2127, 2128, 1836, 1837, 1838, 1839, 1840, 1873,
	1877, 1878, 0, 0, 1953, 2197, 2196, 1955, 0, 0,
	2148, 0, 1968, -2, 0, 2089, 2143, 0, 0, 1977,
	1978, 1979, 0, 0, 2148, 0, 0, 2191, 1989, 1990,
	1828, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1776, 0, 1778, 0, 1779, 1780, 1787, 1800,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 2172, -2, 0, 0, 0, 0, 1792, 0,
	1547, 0, 0, 1618, 2201, 2205, 2206, 1618, 1618, 0,
	0, 2149, 1681, 1681, 0, 0, 1676, 1676, 1676, 1674,
	1657, 0, 1657, 1667, 0, 1657, 1657, 0, -2, 1638,
	0, 0, 1667, 0, 1651, 576, 578, 580, 582, 583,
	584, 586, 1685, 1686, 0, 0, 0, 0, 2283, 0,
	0, 0, 0, 0, 2268, 0, 358, 0, 0, 0,
	2641, 2586, 0, -2, 606, 625, 1557, 0, 2151, 1711,
	1715, 0, 1717, 1718, 1719, 1720, 1721, 0, 0, 1712,
	-2, 1788, 1790, 1811, 2300, 2301, 2302, 1771, 1772, 1773,
	1774, 1775, 1783, 1770, 1770, 1770, 1781, 1810, 1802, 1810,
	1806, 1756, 1757, 1758, 1793, 1794, 1795, 1796, 0, 2641,
	2586, 0, -2, 615, 0, 0, 1495, 216, 218, 219,
	220, 221, 222, 403, 0, 410, 411, 412, 0, 499,
	0, 198, 199, 0, 200, 2686, 504, 0, 507, 0,
	200, 2686, 2207, 513, 0, 516, 0, 0, 522, 0,
	0, 0, 0, 0, 200, 1497, 0, 0, 0, 0,
	-2, 679, 686, 687, 0, 1417, 0, 1424, 707, 708,
	709, 1426, 1427, 0, 1429, 682, 710, 711, 712, 713,
	714, 715, 0, 2221, 2222, 2223, 2224, 2227, 2228, 0,
	0, 680, 700, 683, 0, 694, 116, 1367, 0, 0,
	159, 0, 1367, 1367, 0, 0, 0, 0, 185, 0,
	1091, 0, 0, 0, 0, 131, 144, 155, 128, 129,
	0, 0, 0, 0, 0, 0, 84, 1198, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 103, 143, 0,
	0, 1460, 0, 138, 118, 0, 0, 131, 145, 157,
	0, 189, 191, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 223, 0, 0, 0, 1222, 0, 0,
	0, 1554, 0, 0, 0, 0, 2686, 1365, 0, 1350,
	0, 1670, 2451, -2, -2, 271, 1670, 985, 0, 0,
	2283, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 381, 383, 384, 385, 0, 1269, 0, 391, 432,
	1147, 2686, 0, 0, 459, 454, 0, 456, 0, 0,
	0, 1197, 2686, 1195, 2252, 0, 1219, 0, 1176, 2686,
	2250, 0, 0, 0, 1278, 2292, 1287, 1291, 1450, 0,
	471, 0, 1466, 1468, 0, 0, 1691, 0, 1693, 1633,
	1557, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 277, 0, 1669, 0, 0, 1670, 271, 2561,
	318, 318, 1670, 656, 1670, 658, 0, 0, 812, 813,
	0, 318, 318, 318, 819, 820, 822, 823, -2, -2,
	-2, -2, 825, 826, 915, 0, 0, 0, 914, 836,
	837, 0, 840, 844, 0, 979, 2570, 2586, 2641, 992,
	915, 2368, 915, 2368, 915, 2368, 855, 857, 860, 903,
	911, 871, 878, 0, 873, 877, 880, 883, 0, 885,
	893, -2, 0, 895, 0, 897, 0, 899, 915, 916,
	919, 926, 929, 934, 935, 936, 937, 2263, 938, -2,
	942, 943, 0, 954, 959, 960, 956, 0, 0, 0,
	0, 0, 0, 970, 971, 0, 0, 978, 1215, 0,
	1407, 1587, 1513, 637, 1504, 1586, 1505, 1512, 1515, 0,
	0, 1517, 0, 1519, 0, 1582, 1583, 1590, 1591, 0,
	1601, 1602, 1594, 0, -2, 0, 0, 1597, 1598, 1523,
	0, 1540, 1541, 1542, 1571, 1574, 1306, 0, 2820, 1832,
	1706, 1833, 1834, 2236, 0, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, -2, -2, -2, -2, -2,
	-2, -2, -2, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, -2, -2, -2, 1874, 1875, 1876,
	-2, 2135, 2137, 0, 2200, 0, -2, 0, -2, -2,
	-2, -2, 1895, 0, 1897, 1902, 1904, 1906, 0, 0,
	0, 0, 2199, 1916, 2183, 2184, 0, 0, 2091, 2092,
	2093, 1901, 0, 1920, 2198, 2195, 0, 0, 2129, 0,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 0, 2147, 1570, 1981, 0, 0, 0,
	0, 1988, 1973, 2145, 0, 2144, 0, 0, 0, 2155,
	0, 2190, 2186, 0, 2234, 1827, 1814, 1815, 1816, 1817,
	1818, 1819, 1829, 0, 2231, 2269, 2275, 2065, 0, 0,
	0, 2018, 2019, 2020, 2021, 2022, 0, 2024, 2025, 0,
	2027, 2028, 0, 2030, 2031, 0, 2033, 2034, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 0, 0,
	2037, 0, 2158, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2039, 0, 2041, 2149, 2169, 0, 0, 1921,
	0, 0, 0, 0, 2089, 0, 2044, 2149, 2177, 0,
	0, 0, 0, 0, 2149, 0, 2182, 0, 2051, 0,
	2053, 1549, 0, 0, 1701, 0, 0, 0, 2204, 1701,
	1701, 0, 1613, 0, 0, 1677, 1678, 1679, 1680, 0,
	0, 1681, 0, 1671, 1675, 1672, 1673, 1667, 1630, 0,
	0, 2238, 1667, 1636, 1666, 0, 1176, 1656, 1667, 1667,
	0, -2, 1640, 1657, 0, 0, 577, 579, 581, 585,
	587, 0, 0, 1570, -2, 0, -2, 320, 1175, 0,
	0, 0, 0, 596, 598, 0, 0, 519, 0, 0,
	612, 0, 590, 0, 593, 0, 1702, 1705, 0, 0,
	1716, 1722, 1723, 0, -2, 0, 0, 1812, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 414, 529,
	200, 501, 0, 200, 200, 510, 0, 0, 200, 521,
	200, 2259, 200, 2257, 307, 526, 1496, 234, 0, 672,
	0, 1416, 1425, 0, 704, 0, 706, 0, 2225, 2229,
	2226, 2230, 0, 695, 0, 0, 0, 0, 1366, 0,
	1313, 0, 0, 163, 2686, 0, 202, 0, 0, 1140,
	2244, 0, 1130, 0, 0, 2388, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 1200, 1202, 1209, 1211, 0,
	1205, 2232, 0, 0, 1206, 0, 1208, 1210, 1212, 0,
	0, 0, 0, 0, 0, 0, 97, 104, 0, 0,
	0, 0, 0, 0, 1459, 1460, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 2211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 0, 0, 1265, 1263, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 0, 0, 0, -2,
	1226, 1227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 309, 2210, 2220, 0, 1010, 1011, 343,
	346, 349, 352, 240, 0, 387, 0, 0, 1058, 1033,
	0, 0, 441, 318, 0, 0, 455, 459, 2261, 1018,
	1193, 1196, 0, 1176, 2686, 1242, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 2686, 2239, 2291, 2292, 1452,
	1460, 0, 1701, 0, 1482, 1469, 0, 0, 0, 1482,
	1486, 1487, 1489, 1490, 0, 0, 1692, 1698, 537, 589,
	1557, 1557, 318, 316, 2513, 314, 311, 313, 0, 0,
	0, 1059, 1061, 1062, 1063, 202, 0, 2292, 1130, 2440,
	2292, 0, 1472, 1474, 0, 265, 0, 274, 1670, 272,
	277, 0, 0, 0, 453, 655, 660, 807, 0, 318,
	815, 816, 817, 862, 905, 913, 958, 827, 829, 830,
	831, 0, 0, 993, 989, 990, 991, 846, 915, 849,
	915, 852, 915, 875, 881, 887, 894, 0, 0, 0,
	907, 924, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 964, 965, 966, 968, 973, 972, 977, 1689, 1508,
	1509, 1511, 0, 1520, 0, 0, 1596, -2, -2, 1595,
	1599, 1600, -2, -2, -2, -2, 1516, 0, 1525, 1522,
	0, 1581, 1304, 1305, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1917, 0, -2, 1896, 1899, 1903, 1905,
	1907, 0, 0, 0, 0, 0, 0, 2138, 0, 2140,
	1918, 2193, 2196, 2131, 0, 2087, 0, 0, 1569, 1570,
	1570, 0, 1987, 0, 2146, 0, 2153, 2154, 0, 1980,
	0, 2187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 2023, 2026, 2029, 2032,
	0, 0, 0, 0, 2012, 0, 0, 0, 2016, 1782,
	1768, 0, 1810, 1808, 1809, 1803, 1810, 1807, 1760, 0,
	1759, 0, 2036, 0, 2038, 2040, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 1925, 1926, 1946, 2043, 2175, 2176,
	0, 0, 0, 0, 0, 0, 2049, 0, 2181, 2050,
	2052, 1557, 0, 1550, 0, 1615, 1604, 1700, 0, 2202,
	1670, 1617, 1619, 2203, 2241, 1604, 1604, 0, 2150, 0,
	0, 1661, 0, 0, 0, 1663, 1634, 0, 0, 1628,
	0, 1623, 1624, 1625, 1626, 1627, 1635, 1176, 1665, 1637,
	1641, 2269, 0, 1667, 0, 1652, 0, 1654, 1687, 0,
	1646, 1649, 0, 0, 2284, 1701, 0, 354, 359, 360,
	355, 356, 357, 605, 0, 0, 0, 0, 0, 2152,
	0, 1707, 0, 1713, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 217, 1494, 409, 500, 200, 505, 508,
	2208, 200, 514, 517, 523, 230, 0, 668, -2, 702,
	703, 705, 0, 701, 160, 1367, 0, 0, 1309, 1311,
	2255, 1315, 1321, 1324, 0, 165, 2686, 176, 0, 1107,
	0, 2242, 0, 0, 0, 0, 0, 0, 1369, 0,
	0, 2686, 200, 2686, 200, 179, 181, 184, 0, 188,
	186, 0, 1095, 0, 0, 1098, 117, 1367, 0, 0,
	120, 124, 132, 133, 136, 0, 0, 0, 142, 0,
	0, 0, 1326, 1330, 1338, 0, 0, 0, 1203, 1204,
	1207, 1213, 85, 0, 0, 0, 1334, 1336, 1342, 96,
	1438, 1439, 98, 2686, 2253, 100, 2686, 0, 1308, 0,
	0, 0, 0, 190, 122, 126, 134, 135, 137, 0,
	1344, 119, 0, 215, 0, 0, 205, 200, 2686, 0,
	207, 0, 208, 209, 224, 0, 0, 0, 1021, 1022,
	1231, 1232, 1233, 1264, 1217, 1218, 0, 1229, 1223, 0,
	0, 0, 0, 0, 1346, 1347, 0, 0, 0, 1365,
	1362, 1670, 236, 0, 1670, 244, 0, 2216, 0, 374,
	0, 0, 0, 0, 1057, 1158, 0, 1028, 0, 0,
	0, 447, 443, 0, 452, 458, 457, 463, -2, 0,
	0, 0, 0, -2, 0, 0, 1280, 1274, 1275, 0,
	0, 0, 0, 2686, 1454, 1460, 0, 1555, 1570, 470,
	1461, 1482, 0, 0, 0, 1471, 1467, 1464, 1701, 0,
	0, 0, 0, 0, 1694, 1697, 540, 541, 293, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 1064, 1068,
	0, 2292, 2292, 0, 2246, 0, 0, 0, 0, 275,
	0, 278, 0, 0, 0, 283, 284, 285, 286, 287,
	288, 277, 267, 1670, 0, 0, 657, 0, 0, 814,
	0, 839, 848, 850, 853, 896, 898, 915, 925, 948,
	949, 1085, 0, 1085, 0, 0, 969, 1518, 0, 1593,
	1524, 1575, 1576, 0, 1306, 0, 1835, 1880, 0, 0,
	-2, 0, 0, 1884, 0, 0, 0, -2, 0, 0,
	0, 2139, 2141, 0, 2195, 2130, 1982, 0, 0, 0,
	1986, 1970, 1971, 0, 2090, 2156, 2185, 2189, 0, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 0, 2235, 2270, 2274,
	2063, 2064, 2068, 2249, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1805, 0, 0,
	2157, 2168, 2170, 1922, 1923, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, -2, -2, -2, 1940, 1941,
	1942, -2, -2, -2, 1947, 0, 0, 0, 2171, 2173,
	2174, 2178, 2179, 0, 2046, 2047, 2048, 2180, 0, 1557,
	1551, 1612, 0, 1699, 1616, 0, 1612, 1612, 1564, 1659,
	0, 0, 1683, 0, 1631, 0, 1632, 0, 1664, 0,
	1639, 1642, 1643, 1653, 0, 1645, 0, 1648, 0, 1982,
	-2, 319, 321, 323, 0, 326, 327, 0, 0, 608,
	609, 0, 607, 591, 0, 0, 1709, 0, 0, 1785,
	1789, 1813, 617, 618, 0, 616, 502, 511, 232, 0,
	1668, 0, 0, 0, 0, 0, 0, 201, 1105, 1139,
	0, 0, 0, 1129, 0, 0, 1145, 167, 168, 0,
	0, 0, 0, 177, 0, 0, 174, 0, 183, 187,
	1092, 0, 0, 0, 0, 1314, 0, 0, 0, 139,
	140, 141, 0, 146, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1444, 1445, 0, 1435,
	0, 0, 0, 203, 0, 0, 0, 1303, 226, 0,
	0, 0, 0, 0, 1267, 1268, 1225, 1327, 1331, 1339,
	0, 0, 0, 0, 623, 0, 628, 1364, 0, 244,
	242, 0, 245, 0, 248, 249, 0, 251, 244, 238,
	0, 0, 0, 1176, 388, 1031, 1146, 0, 1148, 0,
	1029, 0, 0, 1147, 439, 0, 446, 0, 460, 0,
	0, 1197, 0, 0, 1220, 1240, 1176, 0, 1279, 1281,
	0, 1289, 0, 0, 0, 1456, 1460, 0, 1449, 1450,
	1589, 1462, 1480, -2, 0, 0, 1570, 1488, 1485, 1491,
	1492, 0, 315, 0, 310, 312, 0, 296, 0, 0,
	1060, 1065, 0, 0, 0, 0, 0, 1473, 1475, 0,
	0, 0, 0, 0, 0, 266, 277, 1670, 302, 0,
	808, 832, 906, 950, 1084, 0, 0, 952, 0, 0,
	1592, 1579, 1580, 1577, 1306, 1882, 1886, 0, 0, 0,
	1888, -2, 0, 1910, -2, -2, 2142, 2194, 1961, 1570,
	1983, 1985, 1972, 2188, 1830, 0, 2070, 2067, 0, 2054,
	0, 2007, 2008, 0, 0, 2011, 2013, 2014, 2015, 1769,
	1762, 1761, 2167, 0, 0, 0, 0, 2045, 1552, 0,
	2059, 0, 0, 1620, 2059, 2059, 1660, 0, 1662, 1629,
	1621, 0, 2270, 1655, 1647, 0, 0, 324, 0, 328,
	329, 0, 0, 1703, 1708, 0, 1714, 1784, 0, 233,
	161, 162, 1318, 1322, 1319, 0, 164, 0, 1106, 0,
	1109, 0, 0, 0, 0, 1116, 1130, 0, 0, 0,
	0, 0, 1132, 0, 1131, 0, 0, 1162, 0, 1294,
	1301, 0, -2, 0, 0, 0, 170, 193, 0, 0,
	194, 1368, 172, 0, 0, 200, 200, 0, 0, 1310,
	1312, 1325, 0, 0, 0, 0, 149, 0, 0, 1328,
	1332, 1340, 1335, 1337, 1343, 0, 101, 0, 1446, 0,
	0, 1345, 213, 214, 0, 200, 0, 200, 206, 200,
	1303, 0, 0, 0, 0, 0, 0, 0, 1348, 1349,
	235, 0, 0, 0, 0, 237, 308, 244, 376, 0,
	1079, 0, 1158, 1150, 1151, 1152, 0, 1157, 1159, 0,
	0, 1045, 1030, 0, 1041, 0, 0, 1058, 1033, 0,
	444, 461, 0, 464, 0, 467, 1019, 1194, 1237, 1176,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 1458,
	1460, 0, 1451, 1452, 1482, 1588, 0, 0, 0, 1470,
	1589, 0, 317, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 279, 0, 280, 281, 282, 268,
	269, 659, 661, 0, 0, 667, 1083, 0, 0, 0,
	0, 1578, 1890, -2, -2, 1911, 0, 2271, 2273, 1570,
	0, 2056, 1572, 0, 0, -2, 0, 0, 0, 1553,
	1536, 0, 1611, 1603, 1605, 1607, 2573, 2363, 2685, 1537,
	1538, 1682, 0, 1650, 325, 610, 0, 0, 1710, 0,
	0, 0, 1320, 166, 0, 1110, 1111, 2245, 1113, 0,
	1115, 1117, 1118, 1119, 0, 1122, 2294, 0, 1126, 1127,
	1128, 0, 0, 1141, 1163, 0, 1172, 0, 1296, 1306,
	1300, 0, 1298, 1174, 0, 169, 171, 195, 192, 1303,
	0, 173, 182, 0, 0, 121, 0, 0, 2357, 152,
	150, 148, 99, 1307, 123, 0, 215, 225, 1302, 227,
	210, 200, 0, 1329, 1333, 1341, 0, 1356, 1357, 1358,
	1359, 0, 0, 0, 0, 246, 0, 247, 250, 0,
	0, 1094, 0, 1032, 1149, 0, 1160, 1161, 1035, 0,
	1034, 0, 0, 0, 0, 0, 445, 448, 0, 451,
	0, 0, 0, 0, 0, 1282, 1280, 0, 1288, 0,
	0, 0, 1434, 0, 0, 1453, 1454, 468, 1476, 0,
	0, 1482, 1493, 295, 0, 0, 1066, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1067, 1174, 0, 0,
	1138, 0, 300, 276, 0, 663, 0, 665, 0, 951,
	953, 0, 0, 1984, 2074, 0, 0, 2009, 2010, -2,
	0, 1950, 2058, 2060, 0, 0, 0, 0, 0, 1622,
	611, 1704, 619, 1316, 0, 1323, 1108, 1112, 0, 0,
	0, 1180, 0, 0, 1133, 0, 0, 1166, 1167, 1079,
	0, 1168, 1169, 1170, 1295, 1581, 1301, 1079, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 204, 228,
	1303, 0, 1360, 1361, 0, 0, 243, 261, 0, 1238,
	1033, 1093, 0, 0, 1043, 0, 1046, 0, 1042, 1039,
	1040, 1031, 0, 449, 450, 465, 0, 466, 0, 1241,
	0, 0, 1289, 0, 0, 1441, 1433, 1460, 1455, 1456,
	1701, 1479, 1483, 0, 0, 1172, 1174, 1090, 0, 662,
	0, 0, 961, 962, 0, 0, 0, 0, 2069, 1573,
	1951, 0, 0, 1606, 1608, 1609, 1610, 1317, 0, 0,
	1121, 1185, 0, 0, 0, 1134, 1164, 1165, 1090, 0,
	1299, 1297, 1143, 0, 1176, 175, 0, 1174, 0, 1099,
	0, 0, 1102, 0, 0, 153, 2357, 151, 0, 200,
	1353, 200, 0, 264, 0, 258, 256, 257, 1035, 0,
	0, 1154, 1156, 0, 1047, 1079, 1045, 462, 1239, 1272,
	1174, 0, 1172, 0, 1448, 1460, 1442, 1443, 0, 1458,
	0, 318, 318, 1079, 1172, 1033, 1089, 318, 664, 666,
	2066, 2086, 2075, -2, 2644, 2364, 0, 2086, 2086, 2061,
	2062, 0, 0, 1123, 1181, 1182, 0, 1177, 1178, 1179,
	2293, 1124, 1125, 1162, 0, 0, 1180, 196, 1079, 1096,
	0, 0, 1097, 0, 0, 156, 0, 158, 229, 1351,
	0, 1354, 0, 252, 0, 0, 1027, 0, 1153, 0,
	0, 0, 0, 1094, 1035, 1172, 0, 1079, 0, 1437,
	1447, 0, 1457, 1434, 0, 297, 298, 1090, 1079, 1701,
	0, 299, 2071, 0, 0, 2077, 2078, 2079, 2080, 2081,
	2072, 2073, 1114, 0, 1183, 0, 1184, 0, 0, 0,
	1701, 1171, 0, 1185, 180, 1100, 0, 1103, 0, 154,
	0, 0, 0, 259, 260, 1024, 1026, 0, 1155, 1036,
	0, 1038, 1033, 1044, 1079, 0, 1090, 0, 1430, 1436,
	1440, 2254, 1441, 1477, 0, 1033, 1090, 1137, 0, 2083,
	2084, 0, 0, 0, 1186, 0, 1189, 1190, 0, 1187,
	1142, 0, 1162, 0, 0, 1352, 200, 0, 0, 1037,
	1035, 1090, 1174, 1033, 1172, 1448, 0, 1701, 1033, 2082,
	2085, 2076, 1120, 1188, 1191, 1192, 1173, 1144, 0, 0,
	1355, 262, 0, 1082, 1027, 1033, 1172, 1701, 1079, 1437,
	1701, 1135, 1701, 1087, 0, 0, 1078, 1080, 1081, 1025,
	1701, 1079, 1285, 1090, 1431, 1478, 1136, 1101, 1086, 0,
	263, 1283, 1090, 1033, 0, 1033, 1701, 0, 1701, 1286,
	1087, 1284, 1104,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 583, 3, 589, 584, 3,
	594, 595, 587, 585, 599, 586, 596, 588, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 602, 3,
	575, 577, 576, 580, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 592, 3, 593, 590, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 600, 582, 601, 578,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 579, 57918, 581, 57919, 591,
	57920, 597, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1466
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1493
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1641
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1678
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1762
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1794
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1818
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1827
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1848
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1879
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1880
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1905
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1929
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1936
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1944
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1983
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1993
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2003
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2023
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2029
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2060
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2146
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2189
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2192
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2198
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = true
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = false
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = nil
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2423
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2427
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2430
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2465
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2477
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2600
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2608
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2635
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = nil
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2886
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "alter function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3028
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3037
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3043
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3048
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3053
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3058
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3063
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3067
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3086
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3094
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = nil
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3170
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3184
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3220
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3350
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3366
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3370
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "CREATE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3408
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "create access method")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplemented(sqllex, "create cast")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "create publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "create rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "create server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3434
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3437
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3438
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3441
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3442
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplemented(sqllex, "drop server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3589
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3624
		{

			sqlVAL.union.val = nil
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DELETE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3711
		{
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3737
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			return helpWith(sqllex, "DROP")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3933
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3942
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4003
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4027
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4035
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "DELETE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "INSERT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DELETE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4116
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4149
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4239
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4254
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "GRANT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4317
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4329
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "RESET")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "USE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4403
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4405
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplemented(sqllex, "set from current")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4650
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = tree.Low
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = tree.Normal
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = tree.High
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4830
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4839
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.str = "client_encoding"
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.str = "timezone"
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4899
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4914
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4962
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4971
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5106
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5192
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = true
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = true
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = false
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5345
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = true
		}
	case 901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = true
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = false
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5458
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5462
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5473
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5523
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5533
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5538
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5556
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5560
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5562
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5606
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5614
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5635
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5640
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5645
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5649
		{
		}
	case 961:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5658
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5681
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5762
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5769
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5776
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5952
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5961
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6022
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6193
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6209
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6238
		{

			sqlVAL.union.val = nil
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6244
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.str = ""
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = nil
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6277
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6281
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6321
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6336
		{
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6419
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6433
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6436
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6437
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6443
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.str = ""
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6607
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6707
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6740
		{

			sqlVAL.union.val = true
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = false
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6757
		{
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6857
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6885
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6895
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6975
		{
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6979
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6980
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7052
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7136
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7145
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7153
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7169
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7179
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7181
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7183
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7185
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7188
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7193
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7231
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.str = ""
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = true
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7299
		{

			sqlVAL.union.val = true
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = false
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7314
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7328
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7340
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7352
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7362
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7372
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = nil
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7482
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7508
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7510
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7512
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7514
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7516
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7518
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7556
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7574
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7593
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7610
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7627
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = false
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = false
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = true
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = false
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7685
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7691
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.str = ""
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.str = ""
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7764
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7770
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7995
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8001
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8013
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8019
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8033
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8039
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8098
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = true
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = false
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = tree.Types
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8158
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8162
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8187
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8191
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8202
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8258
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8287
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8302
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8323
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8346
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8357
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8374
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8378
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8421
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.str = ""
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{

		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8574
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.str = ""
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.str = ""
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.str = ""
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.str = ""
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8629
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8642
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8643
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8703
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8779
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8783
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8853
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8874
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8889
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9033
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9069
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9191
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = true
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = false
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9245
		{
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = nil
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9258
		{
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9259
		{
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = true
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = false
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = false
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = true
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9289
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9293
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9355
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9360
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9545
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9547
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9584
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9622
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9641
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9681
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9691
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9726
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9737
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9767
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9800
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = nil
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = true
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = false
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.str = tree.AstFull
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.str = tree.AstRight
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.str = tree.AstInner
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9920
		{
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.str = tree.AstHash
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.str = ""
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9994
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10012
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10018
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10024
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10034
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = true
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = false
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = true
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = false
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10083
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10096
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10104
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10105
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10123
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10133
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10153
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10202
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10214
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = types.Geography
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10264
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10272
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10306
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = nil
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = types.Int2
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = types.Int
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = types.Float4
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = types.Float
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10357
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = types.Bool
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = types.Float
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10398
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10404
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10426
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = types.String
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = true
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = false
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = types.Date
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10483
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10497
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10506
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10514
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10531
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = true
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = false
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = false
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = types.Interval
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10555
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = nil
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10684
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10744
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11080
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11210
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11319
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11345
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11369
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11399
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11410
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11411
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11426
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11435
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11501
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11626
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11640
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11649
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11658
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11672
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11682
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11697
		{
			return unimplemented(sqllex, "treat")
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.str = ""
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11859
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11940
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11969
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12045
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12386
		{
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12458
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12539
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12555
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12592
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12609
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12828
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12841
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12848
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.str = ""
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
