// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:719
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const STREAM = lex.STREAM
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"STREAM",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12748

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1463,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	255, 372,
	-2, 0,
	-1, 73,
	237, 223,
	501, 223,
	-2, 0,
	-1, 84,
	225, 1211,
	239, 1211,
	255, 368,
	381, 368,
	391, 981,
	427, 368,
	439, 981,
	485, 981,
	512, 368,
	538, 981,
	-2, 0,
	-1, 90,
	131, 1463,
	232, 1463,
	523, 1463,
	524, 1463,
	-2, 0,
	-1, 106,
	148, 1434,
	167, 1434,
	180, 1434,
	235, 1434,
	268, 1434,
	333, 1434,
	343, 1434,
	518, 1434,
	-2, 1405,
	-1, 145,
	156, 843,
	254, 843,
	384, 810,
	444, 810,
	484, 810,
	504, 843,
	506, 810,
	-2, 0,
	-1, 147,
	4, 1465,
	21, 1465,
	22, 1465,
	23, 1465,
	24, 1465,
	25, 1465,
	26, 1465,
	27, 1465,
	28, 1465,
	30, 1465,
	31, 1465,
	37, 1465,
	42, 1465,
	43, 1465,
	45, 1465,
	46, 1465,
	47, 1465,
	48, 1465,
	49, 1465,
	50, 1465,
	51, 1465,
	52, 1465,
	54, 1465,
	55, 1465,
	56, 1465,
	57, 1465,
	59, 1465,
	60, 1465,
	61, 1465,
	62, 1465,
	63, 1465,
	64, 1465,
	65, 1465,
	69, 1465,
	70, 1465,
	71, 1465,
	72, 1465,
	74, 1465,
	75, 1465,
	76, 1465,
	80, 1465,
	81, 1465,
	82, 1465,
	83, 1465,
	84, 1465,
	85, 1465,
	86, 1465,
	89, 1465,
	90, 1465,
	91, 1465,
	92, 1465,
	93, 1465,
	95, 1465,
	97, 1465,
	98, 1465,
	99, 1465,
	100, 1465,
	101, 1465,
	102, 1465,
	104, 1465,
	105, 1465,
	106, 1465,
	108, 1465,
	109, 1465,
	117, 1465,
	118, 1465,
	119, 1465,
	120, 1465,
	122, 1465,
	123, 1465,
	124, 1465,
	126, 1465,
	127, 1465,
	128, 1465,
	130, 1465,
	131, 1465,
	133, 1465,
	134, 1465,
	135, 1465,
	138, 1465,
	139, 1465,
	140, 1465,
	142, 1465,
	143, 1465,
	145, 1465,
	146, 1465,
	147, 1465,
	149, 1465,
	150, 1465,
	151, 1465,
	152, 1465,
	153, 1465,
	154, 1465,
	155, 1465,
	156, 1465,
	157, 1465,
	158, 1465,
	159, 1465,
	160, 1465,
	161, 1465,
	162, 1465,
	163, 1465,
	164, 1465,
	166, 1465,
	172, 1465,
	173, 1465,
	174, 1465,
	175, 1465,
	179, 1465,
	181, 1465,
	185, 1465,
	186, 1465,
	187, 1465,
	188, 1465,
	189, 1465,
	190, 1465,
	191, 1465,
	192, 1465,
	193, 1465,
	194, 1465,
	195, 1465,
	196, 1465,
	197, 1465,
	199, 1465,
	200, 1465,
	202, 1465,
	203, 1465,
	205, 1465,
	206, 1465,
	207, 1465,
	208, 1465,
	209, 1465,
	210, 1465,
	211, 1465,
	212, 1465,
	213, 1465,
	215, 1465,
	216, 1465,
	218, 1465,
	219, 1465,
	220, 1465,
	221, 1465,
	225, 1465,
	226, 1465,
	227, 1465,
	228, 1465,
	229, 1465,
	232, 1465,
	233, 1465,
	234, 1465,
	236, 1465,
	238, 1465,
	239, 1465,
	241, 1465,
	243, 1465,
	244, 1465,
	245, 1465,
	247, 1465,
	251, 1465,
	252, 1465,
	253, 1465,
	254, 1465,
	255, 1465,
	256, 1465,
	258, 1465,
	259, 1465,
	260, 1465,
	262, 1465,
	263, 1465,
	265, 1465,
	266, 1465,
	269, 1465,
	273, 1465,
	274, 1465,
	275, 1465,
	278, 1465,
	279, 1465,
	280, 1465,
	281, 1465,
	283, 1465,
	284, 1465,
	285, 1465,
	286, 1465,
	287, 1465,
	288, 1465,
	289, 1465,
	290, 1465,
	291, 1465,
	292, 1465,
	293, 1465,
	294, 1465,
	295, 1465,
	296, 1465,
	297, 1465,
	298, 1465,
	299, 1465,
	300, 1465,
	301, 1465,
	302, 1465,
	303, 1465,
	304, 1465,
	306, 1465,
	308, 1465,
	309, 1465,
	310, 1465,
	311, 1465,
	312, 1465,
	313, 1465,
	314, 1465,
	315, 1465,
	316, 1465,
	317, 1465,
	318, 1465,
	319, 1465,
	321, 1465,
	323, 1465,
	325, 1465,
	326, 1465,
	328, 1465,
	329, 1465,
	330, 1465,
	331, 1465,
	332, 1465,
	335, 1465,
	338, 1465,
	339, 1465,
	340, 1465,
	341, 1465,
	344, 1465,
	345, 1465,
	346, 1465,
	348, 1465,
	350, 1465,
	351, 1465,
	352, 1465,
	353, 1465,
	354, 1465,
	355, 1465,
	356, 1465,
	357, 1465,
	358, 1465,
	359, 1465,
	360, 1465,
	361, 1465,
	363, 1465,
	364, 1465,
	365, 1465,
	366, 1465,
	367, 1465,
	368, 1465,
	369, 1465,
	370, 1465,
	371, 1465,
	372, 1465,
	373, 1465,
	374, 1465,
	375, 1465,
	376, 1465,
	377, 1465,
	379, 1465,
	380, 1465,
	382, 1465,
	383, 1465,
	384, 1465,
	385, 1465,
	386, 1465,
	387, 1465,
	388, 1465,
	389, 1465,
	390, 1465,
	391, 1465,
	392, 1465,
	393, 1465,
	395, 1465,
	397, 1465,
	398, 1465,
	399, 1465,
	404, 1465,
	406, 1465,
	407, 1465,
	408, 1465,
	409, 1465,
	410, 1465,
	411, 1465,
	412, 1465,
	413, 1465,
	414, 1465,
	416, 1465,
	417, 1465,
	418, 1465,
	420, 1465,
	421, 1465,
	422, 1465,
	423, 1465,
	424, 1465,
	425, 1465,
	427, 1465,
	428, 1465,
	429, 1465,
	430, 1465,
	431, 1465,
	432, 1465,
	433, 1465,
	434, 1465,
	435, 1465,
	436, 1465,
	437, 1465,
	439, 1465,
	440, 1465,
	441, 1465,
	442, 1465,
	443, 1465,
	444, 1465,
	446, 1465,
	447, 1465,
	448, 1465,
	449, 1465,
	450, 1465,
	451, 1465,
	453, 1465,
	454, 1465,
	455, 1465,
	456, 1465,
	457, 1465,
	458, 1465,
	459, 1465,
	461, 1465,
	463, 1465,
	464, 1465,
	465, 1465,
	466, 1465,
	467, 1465,
	468, 1465,
	469, 1465,
	470, 1465,
	471, 1465,
	472, 1465,
	473, 1465,
	474, 1465,
	475, 1465,
	476, 1465,
	477, 1465,
	478, 1465,
	480, 1465,
	481, 1465,
	483, 1465,
	484, 1465,
	486, 1465,
	487, 1465,
	488, 1465,
	489, 1465,
	490, 1465,
	491, 1465,
	492, 1465,
	493, 1465,
	494, 1465,
	496, 1465,
	497, 1465,
	498, 1465,
	499, 1465,
	500, 1465,
	502, 1465,
	504, 1465,
	505, 1465,
	506, 1465,
	507, 1465,
	508, 1465,
	509, 1465,
	511, 1465,
	512, 1465,
	513, 1465,
	514, 1465,
	516, 1465,
	517, 1465,
	520, 1465,
	521, 1465,
	522, 1465,
	523, 1465,
	524, 1465,
	525, 1465,
	526, 1465,
	528, 1465,
	531, 1465,
	532, 1465,
	533, 1465,
	534, 1465,
	535, 1465,
	536, 1465,
	538, 1465,
	539, 1465,
	540, 1465,
	541, 1465,
	547, 1465,
	548, 1465,
	549, 1465,
	550, 1465,
	551, 1465,
	552, 1465,
	-2, 0,
	-1, 148,
	1, 1320,
	129, 1320,
	243, 1320,
	322, 1320,
	379, 1320,
	388, 1320,
	556, 1320,
	580, 1320,
	-2, 0,
	-1, 150,
	1, 1320,
	580, 1320,
	-2, 0,
	-1, 151,
	1, 1320,
	580, 1320,
	-2, 0,
	-1, 152,
	1, 1320,
	501, 1320,
	580, 1320,
	-2, 0,
	-1, 181,
	148, 1433,
	167, 1433,
	180, 1433,
	235, 1433,
	268, 1433,
	333, 1433,
	343, 1433,
	518, 1433,
	-2, 1408,
	-1, 227,
	4, 1472,
	5, 1472,
	6, 1472,
	7, 1472,
	8, 1472,
	9, 1472,
	10, 1472,
	21, 1472,
	22, 1472,
	23, 1472,
	24, 1472,
	25, 1472,
	26, 1472,
	27, 1472,
	28, 1472,
	30, 1472,
	31, 1472,
	37, 1472,
	38, 1472,
	42, 1472,
	43, 1472,
	44, 1472,
	45, 1472,
	46, 1472,
	47, 1472,
	48, 1472,
	49, 1472,
	50, 1472,
	51, 1472,
	52, 1472,
	54, 1472,
	55, 1472,
	56, 1472,
	57, 1472,
	59, 1472,
	60, 1472,
	61, 1472,
	62, 1472,
	63, 1472,
	64, 1472,
	65, 1472,
	66, 1472,
	67, 1472,
	68, 1472,
	69, 1472,
	70, 1472,
	71, 1472,
	72, 1472,
	74, 1472,
	75, 1472,
	76, 1472,
	78, 1472,
	80, 1472,
	81, 1472,
	82, 1472,
	83, 1472,
	84, 1472,
	85, 1472,
	86, 1472,
	89, 1472,
	90, 1472,
	91, 1472,
	92, 1472,
	93, 1472,
	95, 1472,
	97, 1472,
	98, 1472,
	99, 1472,
	100, 1472,
	101, 1472,
	102, 1472,
	104, 1472,
	105, 1472,
	106, 1472,
	107, 1472,
	108, 1472,
	109, 1472,
	110, 1472,
	111, 1472,
	112, 1472,
	113, 1472,
	114, 1472,
	115, 1472,
	116, 1472,
	117, 1472,
	118, 1472,
	119, 1472,
	120, 1472,
	121, 1472,
	122, 1472,
	123, 1472,
	124, 1472,
	125, 1472,
	126, 1472,
	127, 1472,
	128, 1472,
	130, 1472,
	131, 1472,
	133, 1472,
	134, 1472,
	135, 1472,
	138, 1472,
	139, 1472,
	140, 1472,
	142, 1472,
	143, 1472,
	145, 1472,
	146, 1472,
	147, 1472,
	149, 1472,
	150, 1472,
	151, 1472,
	152, 1472,
	153, 1472,
	154, 1472,
	155, 1472,
	156, 1472,
	157, 1472,
	158, 1472,
	159, 1472,
	160, 1472,
	161, 1472,
	162, 1472,
	163, 1472,
	164, 1472,
	165, 1472,
	166, 1472,
	172, 1472,
	173, 1472,
	174, 1472,
	175, 1472,
	179, 1472,
	181, 1472,
	184, 1472,
	185, 1472,
	186, 1472,
	187, 1472,
	188, 1472,
	189, 1472,
	190, 1472,
	191, 1472,
	192, 1472,
	193, 1472,
	194, 1472,
	195, 1472,
	196, 1472,
	197, 1472,
	199, 1472,
	200, 1472,
	202, 1472,
	203, 1472,
	205, 1472,
	206, 1472,
	207, 1472,
	208, 1472,
	209, 1472,
	210, 1472,
	211, 1472,
	212, 1472,
	213, 1472,
	214, 1472,
	215, 1472,
	216, 1472,
	218, 1472,
	219, 1472,
	220, 1472,
	221, 1472,
	225, 1472,
	226, 1472,
	227, 1472,
	228, 1472,
	229, 1472,
	231, 1472,
	232, 1472,
	233, 1472,
	234, 1472,
	236, 1472,
	238, 1472,
	239, 1472,
	240, 1472,
	241, 1472,
	242, 1472,
	243, 1472,
	244, 1472,
	245, 1472,
	246, 1472,
	247, 1472,
	251, 1472,
	252, 1472,
	253, 1472,
	254, 1472,
	255, 1472,
	256, 1472,
	258, 1472,
	259, 1472,
	260, 1472,
	262, 1472,
	263, 1472,
	264, 1472,
	265, 1472,
	266, 1472,
	267, 1472,
	269, 1472,
	273, 1472,
	274, 1472,
	275, 1472,
	276, 1472,
	277, 1472,
	278, 1472,
	279, 1472,
	280, 1472,
	281, 1472,
	283, 1472,
	284, 1472,
	285, 1472,
	286, 1472,
	287, 1472,
	288, 1472,
	289, 1472,
	290, 1472,
	291, 1472,
	292, 1472,
	293, 1472,
	294, 1472,
	295, 1472,
	296, 1472,
	297, 1472,
	298, 1472,
	299, 1472,
	300, 1472,
	301, 1472,
	302, 1472,
	303, 1472,
	304, 1472,
	306, 1472,
	307, 1472,
	308, 1472,
	309, 1472,
	310, 1472,
	311, 1472,
	312, 1472,
	313, 1472,
	314, 1472,
	315, 1472,
	316, 1472,
	317, 1472,
	318, 1472,
	319, 1472,
	320, 1472,
	321, 1472,
	322, 1472,
	323, 1472,
	324, 1472,
	325, 1472,
	326, 1472,
	327, 1472,
	328, 1472,
	329, 1472,
	330, 1472,
	331, 1472,
	332, 1472,
	335, 1472,
	339, 1472,
	340, 1472,
	341, 1472,
	344, 1472,
	345, 1472,
	346, 1472,
	347, 1472,
	348, 1472,
	349, 1472,
	350, 1472,
	351, 1472,
	352, 1472,
	353, 1472,
	354, 1472,
	355, 1472,
	356, 1472,
	357, 1472,
	358, 1472,
	359, 1472,
	360, 1472,
	361, 1472,
	363, 1472,
	364, 1472,
	365, 1472,
	366, 1472,
	367, 1472,
	368, 1472,
	369, 1472,
	370, 1472,
	371, 1472,
	372, 1472,
	373, 1472,
	374, 1472,
	375, 1472,
	376, 1472,
	377, 1472,
	379, 1472,
	380, 1472,
	382, 1472,
	383, 1472,
	384, 1472,
	385, 1472,
	386, 1472,
	387, 1472,
	388, 1472,
	389, 1472,
	390, 1472,
	391, 1472,
	392, 1472,
	393, 1472,
	395, 1472,
	397, 1472,
	398, 1472,
	399, 1472,
	404, 1472,
	406, 1472,
	407, 1472,
	408, 1472,
	409, 1472,
	410, 1472,
	411, 1472,
	412, 1472,
	413, 1472,
	414, 1472,
	416, 1472,
	417, 1472,
	418, 1472,
	419, 1472,
	420, 1472,
	421, 1472,
	422, 1472,
	423, 1472,
	424, 1472,
	425, 1472,
	427, 1472,
	428, 1472,
	429, 1472,
	430, 1472,
	431, 1472,
	432, 1472,
	433, 1472,
	434, 1472,
	435, 1472,
	436, 1472,
	437, 1472,
	439, 1472,
	440, 1472,
	441, 1472,
	442, 1472,
	443, 1472,
	444, 1472,
	445, 1472,
	446, 1472,
	447, 1472,
	448, 1472,
	449, 1472,
	450, 1472,
	451, 1472,
	452, 1472,
	453, 1472,
	454, 1472,
	455, 1472,
	456, 1472,
	457, 1472,
	458, 1472,
	459, 1472,
	461, 1472,
	463, 1472,
	464, 1472,
	465, 1472,
	466, 1472,
	467, 1472,
	468, 1472,
	469, 1472,
	470, 1472,
	471, 1472,
	472, 1472,
	473, 1472,
	474, 1472,
	475, 1472,
	476, 1472,
	477, 1472,
	478, 1472,
	480, 1472,
	481, 1472,
	482, 1472,
	483, 1472,
	484, 1472,
	486, 1472,
	487, 1472,
	488, 1472,
	489, 1472,
	490, 1472,
	491, 1472,
	492, 1472,
	493, 1472,
	494, 1472,
	496, 1472,
	497, 1472,
	498, 1472,
	499, 1472,
	500, 1472,
	502, 1472,
	504, 1472,
	505, 1472,
	506, 1472,
	507, 1472,
	508, 1472,
	509, 1472,
	510, 1472,
	511, 1472,
	512, 1472,
	513, 1472,
	514, 1472,
	516, 1472,
	517, 1472,
	519, 1472,
	520, 1472,
	521, 1472,
	522, 1472,
	523, 1472,
	524, 1472,
	525, 1472,
	526, 1472,
	527, 1472,
	528, 1472,
	531, 1472,
	532, 1472,
	533, 1472,
	534, 1472,
	535, 1472,
	536, 1472,
	538, 1472,
	539, 1472,
	540, 1472,
	541, 1472,
	547, 1472,
	548, 1472,
	549, 1472,
	550, 1472,
	551, 1472,
	552, 1472,
	553, 1472,
	561, 1472,
	568, 1472,
	569, 1472,
	570, 1472,
	577, 1472,
	581, 1472,
	-2, 0,
	-1, 718,
	4, 1209,
	21, 1209,
	22, 1209,
	23, 1209,
	24, 1209,
	25, 1209,
	26, 1209,
	27, 1209,
	28, 1209,
	30, 1209,
	31, 1209,
	37, 1209,
	42, 1209,
	43, 1209,
	45, 1209,
	46, 1209,
	47, 1209,
	48, 1209,
	49, 1209,
	50, 1209,
	51, 1209,
	52, 1209,
	54, 1209,
	55, 1209,
	56, 1209,
	57, 1209,
	59, 1209,
	60, 1209,
	61, 1209,
	62, 1209,
	63, 1209,
	64, 1209,
	65, 1209,
	69, 1209,
	70, 1209,
	71, 1209,
	72, 1209,
	74, 1209,
	75, 1209,
	76, 1209,
	80, 1209,
	81, 1209,
	82, 1209,
	83, 1209,
	84, 1209,
	85, 1209,
	86, 1209,
	89, 1209,
	90, 1209,
	91, 1209,
	92, 1209,
	93, 1209,
	95, 1209,
	97, 1209,
	98, 1209,
	99, 1209,
	100, 1209,
	101, 1209,
	102, 1209,
	104, 1209,
	105, 1209,
	106, 1209,
	108, 1209,
	109, 1209,
	117, 1209,
	118, 1209,
	119, 1209,
	120, 1209,
	122, 1209,
	123, 1209,
	124, 1209,
	126, 1209,
	127, 1209,
	128, 1209,
	130, 1209,
	131, 1209,
	133, 1209,
	134, 1209,
	135, 1209,
	138, 1209,
	139, 1209,
	140, 1209,
	142, 1209,
	143, 1209,
	145, 1209,
	146, 1209,
	147, 1209,
	149, 1209,
	150, 1209,
	151, 1209,
	152, 1209,
	153, 1209,
	154, 1209,
	155, 1209,
	156, 1209,
	157, 1209,
	158, 1209,
	159, 1209,
	160, 1209,
	161, 1209,
	162, 1209,
	163, 1209,
	164, 1209,
	166, 1209,
	172, 1209,
	173, 1209,
	174, 1209,
	175, 1209,
	179, 1209,
	181, 1209,
	185, 1209,
	186, 1209,
	187, 1209,
	188, 1209,
	189, 1209,
	190, 1209,
	191, 1209,
	192, 1209,
	193, 1209,
	194, 1209,
	195, 1209,
	196, 1209,
	197, 1209,
	199, 1209,
	200, 1209,
	202, 1209,
	203, 1209,
	205, 1209,
	206, 1209,
	207, 1209,
	208, 1209,
	209, 1209,
	210, 1209,
	211, 1209,
	212, 1209,
	213, 1209,
	215, 1209,
	216, 1209,
	218, 1209,
	219, 1209,
	220, 1209,
	221, 1209,
	225, 1209,
	226, 1209,
	227, 1209,
	228, 1209,
	229, 1209,
	232, 1209,
	233, 1209,
	234, 1209,
	236, 1209,
	238, 1209,
	239, 1209,
	241, 1209,
	243, 1209,
	244, 1209,
	245, 1209,
	247, 1209,
	251, 1209,
	252, 1209,
	253, 1209,
	254, 1209,
	255, 1209,
	256, 1209,
	258, 1209,
	259, 1209,
	260, 1209,
	262, 1209,
	263, 1209,
	265, 1209,
	266, 1209,
	269, 1209,
	273, 1209,
	274, 1209,
	275, 1209,
	278, 1209,
	279, 1209,
	280, 1209,
	281, 1209,
	283, 1209,
	284, 1209,
	285, 1209,
	286, 1209,
	287, 1209,
	288, 1209,
	289, 1209,
	290, 1209,
	291, 1209,
	292, 1209,
	293, 1209,
	294, 1209,
	295, 1209,
	296, 1209,
	297, 1209,
	298, 1209,
	299, 1209,
	300, 1209,
	301, 1209,
	302, 1209,
	303, 1209,
	304, 1209,
	306, 1209,
	308, 1209,
	309, 1209,
	310, 1209,
	311, 1209,
	312, 1209,
	313, 1209,
	314, 1209,
	315, 1209,
	316, 1209,
	317, 1209,
	318, 1209,
	319, 1209,
	321, 1209,
	323, 1209,
	325, 1209,
	326, 1209,
	328, 1209,
	329, 1209,
	330, 1209,
	331, 1209,
	332, 1209,
	335, 1209,
	339, 1209,
	340, 1209,
	341, 1209,
	344, 1209,
	345, 1209,
	346, 1209,
	348, 1209,
	350, 1209,
	351, 1209,
	352, 1209,
	353, 1209,
	354, 1209,
	355, 1209,
	356, 1209,
	357, 1209,
	358, 1209,
	359, 1209,
	360, 1209,
	361, 1209,
	363, 1209,
	364, 1209,
	365, 1209,
	366, 1209,
	367, 1209,
	368, 1209,
	369, 1209,
	370, 1209,
	371, 1209,
	372, 1209,
	373, 1209,
	374, 1209,
	375, 1209,
	376, 1209,
	377, 1209,
	379, 1209,
	380, 1209,
	382, 1209,
	383, 1209,
	384, 1209,
	385, 1209,
	386, 1209,
	387, 1209,
	388, 1209,
	389, 1209,
	390, 1209,
	391, 1209,
	392, 1209,
	393, 1209,
	395, 1209,
	397, 1209,
	398, 1209,
	399, 1209,
	404, 1209,
	406, 1209,
	407, 1209,
	408, 1209,
	409, 1209,
	410, 1209,
	411, 1209,
	412, 1209,
	413, 1209,
	414, 1209,
	416, 1209,
	417, 1209,
	418, 1209,
	420, 1209,
	421, 1209,
	422, 1209,
	423, 1209,
	424, 1209,
	425, 1209,
	427, 1209,
	428, 1209,
	429, 1209,
	430, 1209,
	431, 1209,
	432, 1209,
	433, 1209,
	434, 1209,
	435, 1209,
	436, 1209,
	437, 1209,
	439, 1209,
	440, 1209,
	441, 1209,
	442, 1209,
	443, 1209,
	444, 1209,
	446, 1209,
	447, 1209,
	448, 1209,
	449, 1209,
	450, 1209,
	451, 1209,
	453, 1209,
	454, 1209,
	455, 1209,
	456, 1209,
	457, 1209,
	458, 1209,
	459, 1209,
	461, 1209,
	463, 1209,
	464, 1209,
	465, 1209,
	466, 1209,
	467, 1209,
	468, 1209,
	469, 1209,
	470, 1209,
	471, 1209,
	472, 1209,
	473, 1209,
	474, 1209,
	475, 1209,
	476, 1209,
	477, 1209,
	478, 1209,
	480, 1209,
	481, 1209,
	483, 1209,
	484, 1209,
	486, 1209,
	487, 1209,
	488, 1209,
	489, 1209,
	490, 1209,
	491, 1209,
	492, 1209,
	493, 1209,
	494, 1209,
	496, 1209,
	497, 1209,
	498, 1209,
	499, 1209,
	500, 1209,
	502, 1209,
	504, 1209,
	505, 1209,
	506, 1209,
	507, 1209,
	508, 1209,
	509, 1209,
	511, 1209,
	512, 1209,
	513, 1209,
	514, 1209,
	516, 1209,
	517, 1209,
	520, 1209,
	521, 1209,
	522, 1209,
	523, 1209,
	524, 1209,
	525, 1209,
	526, 1209,
	528, 1209,
	531, 1209,
	532, 1209,
	533, 1209,
	534, 1209,
	535, 1209,
	536, 1209,
	538, 1209,
	539, 1209,
	540, 1209,
	541, 1209,
	547, 1209,
	548, 1209,
	549, 1209,
	550, 1209,
	551, 1209,
	552, 1209,
	-2, 0,
	-1, 737,
	183, 2230,
	501, 2230,
	560, 2230,
	579, 2230,
	-2, 0,
	-1, 738,
	183, 2331,
	501, 2331,
	560, 2331,
	579, 2331,
	-2, 0,
	-1, 739,
	183, 2217,
	501, 2217,
	560, 2217,
	579, 2217,
	-2, 0,
	-1, 741,
	183, 2461,
	501, 2461,
	560, 2461,
	579, 2461,
	-2, 0,
	-1, 743,
	183, 2501,
	501, 2501,
	560, 2501,
	579, 2501,
	-2, 0,
	-1, 750,
	183, 2358,
	501, 2358,
	560, 2358,
	579, 2358,
	-2, 646,
	-1, 779,
	579, 2165,
	582, 2165,
	-2, 912,
	-1, 780,
	579, 2167,
	582, 2167,
	-2, 913,
	-1, 781,
	579, 2166,
	582, 2166,
	-2, 914,
	-1, 782,
	582, 2092,
	-2, 915,
	-1, 805,
	180, 237,
	-2, 0,
	-1, 828,
	44, 2139,
	-2, 0,
	-1, 829,
	538, 1187,
	-2, 982,
	-1, 845,
	4, 1601,
	21, 1601,
	22, 1601,
	23, 1601,
	24, 1601,
	25, 1601,
	26, 1601,
	27, 1601,
	28, 1601,
	30, 1601,
	31, 1601,
	37, 1601,
	42, 1601,
	43, 1601,
	45, 1601,
	46, 1601,
	47, 1601,
	48, 1601,
	49, 1601,
	50, 1601,
	51, 1601,
	52, 1601,
	54, 1601,
	55, 1601,
	56, 1601,
	57, 1601,
	59, 1601,
	60, 1601,
	61, 1601,
	62, 1601,
	63, 1601,
	64, 1601,
	65, 1601,
	69, 1601,
	70, 1601,
	71, 1601,
	72, 1601,
	74, 1601,
	75, 1601,
	76, 1601,
	80, 1601,
	81, 1601,
	82, 1601,
	83, 1601,
	84, 1601,
	85, 1601,
	86, 1601,
	89, 1601,
	90, 1601,
	91, 1601,
	92, 1601,
	93, 1601,
	95, 1601,
	97, 1601,
	98, 1601,
	99, 1601,
	100, 1601,
	101, 1601,
	102, 1601,
	104, 1601,
	105, 1601,
	106, 1601,
	108, 1601,
	109, 1601,
	117, 1601,
	118, 1601,
	119, 1601,
	120, 1601,
	122, 1601,
	123, 1601,
	124, 1601,
	126, 1601,
	127, 1601,
	128, 1601,
	130, 1601,
	131, 1601,
	133, 1601,
	134, 1601,
	135, 1601,
	138, 1601,
	139, 1601,
	140, 1601,
	142, 1601,
	143, 1601,
	145, 1601,
	146, 1601,
	147, 1601,
	149, 1601,
	150, 1601,
	151, 1601,
	152, 1601,
	153, 1601,
	154, 1601,
	155, 1601,
	156, 1601,
	157, 1601,
	158, 1601,
	159, 1601,
	160, 1601,
	161, 1601,
	162, 1601,
	163, 1601,
	164, 1601,
	166, 1601,
	172, 1601,
	173, 1601,
	174, 1601,
	175, 1601,
	179, 1601,
	181, 1601,
	185, 1601,
	186, 1601,
	187, 1601,
	188, 1601,
	189, 1601,
	190, 1601,
	191, 1601,
	192, 1601,
	193, 1601,
	194, 1601,
	195, 1601,
	196, 1601,
	197, 1601,
	199, 1601,
	200, 1601,
	202, 1601,
	203, 1601,
	205, 1601,
	206, 1601,
	207, 1601,
	208, 1601,
	209, 1601,
	210, 1601,
	211, 1601,
	212, 1601,
	213, 1601,
	215, 1601,
	216, 1601,
	218, 1601,
	219, 1601,
	220, 1601,
	221, 1601,
	225, 1601,
	226, 1601,
	227, 1601,
	228, 1601,
	229, 1601,
	232, 1601,
	233, 1601,
	234, 1601,
	236, 1601,
	238, 1601,
	239, 1601,
	241, 1601,
	243, 1601,
	244, 1601,
	245, 1601,
	247, 1601,
	251, 1601,
	252, 1601,
	253, 1601,
	254, 1601,
	255, 1601,
	256, 1601,
	258, 1601,
	259, 1601,
	260, 1601,
	262, 1601,
	263, 1601,
	265, 1601,
	266, 1601,
	269, 1601,
	273, 1601,
	274, 1601,
	275, 1601,
	278, 1601,
	279, 1601,
	280, 1601,
	281, 1601,
	283, 1601,
	284, 1601,
	285, 1601,
	286, 1601,
	287, 1601,
	288, 1601,
	289, 1601,
	290, 1601,
	291, 1601,
	292, 1601,
	293, 1601,
	294, 1601,
	295, 1601,
	296, 1601,
	297, 1601,
	298, 1601,
	299, 1601,
	300, 1601,
	301, 1601,
	302, 1601,
	303, 1601,
	304, 1601,
	306, 1601,
	308, 1601,
	309, 1601,
	310, 1601,
	311, 1601,
	312, 1601,
	313, 1601,
	314, 1601,
	315, 1601,
	316, 1601,
	317, 1601,
	318, 1601,
	319, 1601,
	321, 1601,
	323, 1601,
	325, 1601,
	326, 1601,
	328, 1601,
	329, 1601,
	330, 1601,
	331, 1601,
	332, 1601,
	335, 1601,
	339, 1601,
	340, 1601,
	341, 1601,
	344, 1601,
	345, 1601,
	346, 1601,
	348, 1601,
	350, 1601,
	351, 1601,
	352, 1601,
	353, 1601,
	354, 1601,
	355, 1601,
	356, 1601,
	357, 1601,
	358, 1601,
	359, 1601,
	360, 1601,
	361, 1601,
	363, 1601,
	364, 1601,
	365, 1601,
	366, 1601,
	367, 1601,
	368, 1601,
	369, 1601,
	370, 1601,
	371, 1601,
	372, 1601,
	373, 1601,
	374, 1601,
	375, 1601,
	376, 1601,
	377, 1601,
	379, 1601,
	380, 1601,
	382, 1601,
	383, 1601,
	384, 1601,
	385, 1601,
	386, 1601,
	387, 1601,
	388, 1601,
	389, 1601,
	390, 1601,
	391, 1601,
	392, 1601,
	393, 1601,
	395, 1601,
	397, 1601,
	398, 1601,
	399, 1601,
	404, 1601,
	406, 1601,
	407, 1601,
	408, 1601,
	409, 1601,
	410, 1601,
	411, 1601,
	412, 1601,
	413, 1601,
	414, 1601,
	416, 1601,
	417, 1601,
	418, 1601,
	420, 1601,
	421, 1601,
	422, 1601,
	423, 1601,
	424, 1601,
	425, 1601,
	427, 1601,
	428, 1601,
	429, 1601,
	430, 1601,
	431, 1601,
	432, 1601,
	433, 1601,
	434, 1601,
	435, 1601,
	436, 1601,
	437, 1601,
	439, 1601,
	440, 1601,
	441, 1601,
	442, 1601,
	443, 1601,
	444, 1601,
	446, 1601,
	447, 1601,
	448, 1601,
	449, 1601,
	450, 1601,
	451, 1601,
	453, 1601,
	454, 1601,
	455, 1601,
	456, 1601,
	457, 1601,
	458, 1601,
	459, 1601,
	461, 1601,
	463, 1601,
	464, 1601,
	465, 1601,
	466, 1601,
	467, 1601,
	468, 1601,
	469, 1601,
	470, 1601,
	471, 1601,
	472, 1601,
	473, 1601,
	474, 1601,
	475, 1601,
	476, 1601,
	477, 1601,
	478, 1601,
	480, 1601,
	481, 1601,
	483, 1601,
	484, 1601,
	486, 1601,
	487, 1601,
	488, 1601,
	489, 1601,
	490, 1601,
	491, 1601,
	492, 1601,
	493, 1601,
	494, 1601,
	496, 1601,
	497, 1601,
	498, 1601,
	499, 1601,
	500, 1601,
	502, 1601,
	504, 1601,
	505, 1601,
	506, 1601,
	507, 1601,
	508, 1601,
	509, 1601,
	511, 1601,
	512, 1601,
	513, 1601,
	514, 1601,
	516, 1601,
	517, 1601,
	520, 1601,
	521, 1601,
	522, 1601,
	523, 1601,
	524, 1601,
	525, 1601,
	526, 1601,
	528, 1601,
	531, 1601,
	532, 1601,
	533, 1601,
	534, 1601,
	535, 1601,
	536, 1601,
	538, 1601,
	539, 1601,
	540, 1601,
	541, 1601,
	547, 1601,
	548, 1601,
	549, 1601,
	550, 1601,
	551, 1601,
	552, 1601,
	-2, 0,
	-1, 853,
	255, 372,
	-2, 0,
	-1, 923,
	384, 811,
	444, 811,
	484, 811,
	506, 811,
	-2, 0,
	-1, 924,
	384, 810,
	444, 810,
	484, 810,
	506, 810,
	-2, 750,
	-1, 928,
	1, 857,
	576, 857,
	578, 857,
	580, 857,
	-2, 0,
	-1, 929,
	1, 785,
	576, 785,
	578, 785,
	580, 785,
	-2, 0,
	-1, 930,
	1, 789,
	576, 789,
	578, 789,
	580, 789,
	-2, 0,
	-1, 931,
	1, 911,
	180, 911,
	576, 911,
	578, 911,
	580, 911,
	-2, 0,
	-1, 939,
	1, 816,
	576, 816,
	578, 816,
	580, 816,
	-2, 0,
	-1, 945,
	1, 857,
	576, 857,
	578, 857,
	580, 857,
	-2, 0,
	-1, 946,
	1, 859,
	576, 859,
	578, 859,
	580, 859,
	-2, 0,
	-1, 947,
	1, 862,
	576, 862,
	578, 862,
	580, 862,
	-2, 0,
	-1, 953,
	1, 879,
	576, 879,
	578, 879,
	580, 879,
	-2, 0,
	-1, 954,
	1, 881,
	576, 881,
	578, 881,
	580, 881,
	-2, 0,
	-1, 959,
	1, 906,
	576, 906,
	578, 906,
	580, 906,
	-2, 0,
	-1, 1005,
	167, 1476,
	180, 1476,
	268, 1476,
	333, 1476,
	-2, 1412,
	-1, 1020,
	167, 1475,
	180, 1475,
	268, 1475,
	333, 1475,
	-2, 1409,
	-1, 1046,
	579, 2164,
	-2, 654,
	-1, 1074,
	5, 2156,
	577, 2154,
	-2, 2145,
	-1, 1082,
	5, 2177,
	577, 2174,
	-2, 2165,
	-1, 1083,
	5, 2178,
	577, 2175,
	-2, 2166,
	-1, 1091,
	579, 2162,
	-2, 2144,
	-1, 1092,
	577, 2583,
	-2, 2163,
	-1, 1115,
	577, 2582,
	-2, 2179,
	-1, 1116,
	5, 1676,
	-2, 2553,
	-1, 1117,
	5, 1677,
	-2, 2554,
	-1, 1118,
	5, 1678,
	-2, 2568,
	-1, 1119,
	5, 1679,
	-2, 2532,
	-1, 1120,
	5, 1680,
	-2, 2566,
	-1, 1121,
	5, 1688,
	-2, 2545,
	-1, 1122,
	5, 1675,
	-2, 2541,
	-1, 1123,
	5, 1675,
	-2, 2540,
	-1, 1124,
	5, 1675,
	-2, 2559,
	-1, 1125,
	5, 1686,
	-2, 2534,
	-1, 1126,
	5, 1691,
	-2, 2533,
	-1, 1127,
	5, 1693,
	-2, 2578,
	-1, 1130,
	5, 1715,
	-2, 2571,
	-1, 1131,
	5, 1707,
	-2, 2572,
	-1, 1132,
	5, 1715,
	-2, 2573,
	-1, 1133,
	5, 1711,
	-2, 2574,
	-1, 1134,
	5, 1661,
	-2, 2546,
	-1, 1135,
	5, 1662,
	-2, 2547,
	-1, 1136,
	5, 1663,
	-2, 2535,
	-1, 1164,
	5, 1698,
	-2, 2579,
	-1, 1165,
	5, 1699,
	-2, 2569,
	-1, 1166,
	5, 1700,
	539, 1700,
	-2, 2536,
	-1, 1167,
	5, 1701,
	539, 1701,
	-2, 2537,
	-1, 1204,
	577, 2174,
	-2, 2165,
	-1, 1205,
	577, 2175,
	-2, 2166,
	-1, 1304,
	183, 2501,
	501, 2501,
	560, 2501,
	579, 2501,
	-2, 0,
	-1, 1307,
	1, 632,
	580, 632,
	-2, 1328,
	-1, 1435,
	352, 2140,
	406, 2140,
	446, 2140,
	570, 2140,
	-2, 2130,
	-1, 1446,
	581, 2140,
	-2, 2141,
	-1, 1451,
	1, 1184,
	576, 1184,
	578, 1184,
	580, 1184,
	-2, 1461,
	-1, 1499,
	391, 981,
	538, 981,
	-2, 367,
	-1, 1515,
	44, 2138,
	-2, 947,
	-1, 1522,
	1, 1184,
	576, 1184,
	578, 1184,
	580, 1184,
	-2, 1461,
	-1, 1530,
	4, 1209,
	21, 1209,
	22, 1209,
	23, 1209,
	24, 1209,
	25, 1209,
	26, 1209,
	27, 1209,
	28, 1209,
	30, 1209,
	31, 1209,
	37, 1209,
	42, 1209,
	43, 1209,
	45, 1209,
	46, 1209,
	47, 1209,
	48, 1209,
	49, 1209,
	50, 1209,
	51, 1209,
	52, 1209,
	54, 1209,
	55, 1209,
	56, 1209,
	57, 1209,
	59, 1209,
	60, 1209,
	61, 1209,
	62, 1209,
	63, 1209,
	64, 1209,
	65, 1209,
	69, 1209,
	70, 1209,
	71, 1209,
	72, 1209,
	74, 1209,
	75, 1209,
	76, 1209,
	80, 1209,
	81, 1209,
	82, 1209,
	83, 1209,
	84, 1209,
	85, 1209,
	86, 1209,
	89, 1209,
	90, 1209,
	91, 1209,
	92, 1209,
	93, 1209,
	95, 1209,
	97, 1209,
	98, 1209,
	99, 1209,
	100, 1209,
	101, 1209,
	102, 1209,
	104, 1209,
	105, 1209,
	106, 1209,
	108, 1209,
	109, 1209,
	117, 1209,
	118, 1209,
	119, 1209,
	120, 1209,
	122, 1209,
	123, 1209,
	124, 1209,
	126, 1209,
	127, 1209,
	128, 1209,
	130, 1209,
	131, 1209,
	133, 1209,
	134, 1209,
	135, 1209,
	138, 1209,
	139, 1209,
	140, 1209,
	142, 1209,
	143, 1209,
	145, 1209,
	146, 1209,
	147, 1209,
	149, 1209,
	150, 1209,
	151, 1209,
	152, 1209,
	153, 1209,
	154, 1209,
	155, 1209,
	156, 1209,
	157, 1209,
	158, 1209,
	159, 1209,
	160, 1209,
	161, 1209,
	162, 1209,
	163, 1209,
	164, 1209,
	172, 1209,
	173, 1209,
	174, 1209,
	175, 1209,
	179, 1209,
	181, 1209,
	185, 1209,
	186, 1209,
	187, 1209,
	188, 1209,
	189, 1209,
	190, 1209,
	191, 1209,
	192, 1209,
	193, 1209,
	194, 1209,
	195, 1209,
	196, 1209,
	197, 1209,
	199, 1209,
	200, 1209,
	202, 1209,
	203, 1209,
	205, 1209,
	206, 1209,
	207, 1209,
	208, 1209,
	209, 1209,
	210, 1209,
	211, 1209,
	212, 1209,
	213, 1209,
	215, 1209,
	216, 1209,
	218, 1209,
	219, 1209,
	220, 1209,
	221, 1209,
	226, 1209,
	227, 1209,
	228, 1209,
	229, 1209,
	232, 1209,
	233, 1209,
	234, 1209,
	236, 1209,
	238, 1209,
	239, 1209,
	241, 1209,
	243, 1209,
	244, 1209,
	245, 1209,
	247, 1209,
	251, 1209,
	252, 1209,
	253, 1209,
	254, 1209,
	255, 1209,
	256, 1209,
	258, 1209,
	259, 1209,
	260, 1209,
	262, 1209,
	263, 1209,
	265, 1209,
	266, 1209,
	269, 1209,
	273, 1209,
	274, 1209,
	275, 1209,
	278, 1209,
	279, 1209,
	280, 1209,
	281, 1209,
	283, 1209,
	284, 1209,
	285, 1209,
	286, 1209,
	287, 1209,
	288, 1209,
	289, 1209,
	290, 1209,
	291, 1209,
	292, 1209,
	293, 1209,
	294, 1209,
	295, 1209,
	296, 1209,
	297, 1209,
	298, 1209,
	299, 1209,
	300, 1209,
	301, 1209,
	302, 1209,
	303, 1209,
	304, 1209,
	306, 1209,
	308, 1209,
	309, 1209,
	310, 1209,
	311, 1209,
	312, 1209,
	313, 1209,
	314, 1209,
	315, 1209,
	316, 1209,
	317, 1209,
	318, 1209,
	319, 1209,
	321, 1209,
	325, 1209,
	326, 1209,
	328, 1209,
	329, 1209,
	330, 1209,
	331, 1209,
	332, 1209,
	335, 1209,
	337, 1209,
	339, 1209,
	340, 1209,
	341, 1209,
	344, 1209,
	345, 1209,
	346, 1209,
	348, 1209,
	350, 1209,
	351, 1209,
	352, 1209,
	353, 1209,
	354, 1209,
	355, 1209,
	356, 1209,
	357, 1209,
	358, 1209,
	359, 1209,
	360, 1209,
	361, 1209,
	363, 1209,
	364, 1209,
	365, 1209,
	366, 1209,
	367, 1209,
	368, 1209,
	369, 1209,
	370, 1209,
	371, 1209,
	372, 1209,
	373, 1209,
	374, 1209,
	375, 1209,
	376, 1209,
	377, 1209,
	379, 1209,
	380, 1209,
	382, 1209,
	383, 1209,
	384, 1209,
	385, 1209,
	386, 1209,
	387, 1209,
	388, 1209,
	389, 1209,
	390, 1209,
	391, 1209,
	392, 1209,
	393, 1209,
	395, 1209,
	397, 1209,
	398, 1209,
	399, 1209,
	404, 1209,
	406, 1209,
	407, 1209,
	408, 1209,
	409, 1209,
	410, 1209,
	411, 1209,
	412, 1209,
	413, 1209,
	414, 1209,
	416, 1209,
	417, 1209,
	418, 1209,
	420, 1209,
	421, 1209,
	422, 1209,
	423, 1209,
	424, 1209,
	425, 1209,
	427, 1209,
	428, 1209,
	429, 1209,
	430, 1209,
	431, 1209,
	432, 1209,
	433, 1209,
	434, 1209,
	435, 1209,
	436, 1209,
	437, 1209,
	439, 1209,
	440, 1209,
	441, 1209,
	442, 1209,
	443, 1209,
	444, 1209,
	446, 1209,
	447, 1209,
	448, 1209,
	449, 1209,
	450, 1209,
	451, 1209,
	453, 1209,
	454, 1209,
	455, 1209,
	456, 1209,
	457, 1209,
	458, 1209,
	459, 1209,
	461, 1209,
	463, 1209,
	464, 1209,
	465, 1209,
	466, 1209,
	467, 1209,
	468, 1209,
	469, 1209,
	470, 1209,
	471, 1209,
	472, 1209,
	473, 1209,
	474, 1209,
	475, 1209,
	476, 1209,
	477, 1209,
	478, 1209,
	480, 1209,
	481, 1209,
	483, 1209,
	484, 1209,
	486, 1209,
	487, 1209,
	488, 1209,
	489, 1209,
	490, 1209,
	491, 1209,
	492, 1209,
	493, 1209,
	494, 1209,
	496, 1209,
	497, 1209,
	498, 1209,
	499, 1209,
	500, 1209,
	502, 1209,
	504, 1209,
	505, 1209,
	506, 1209,
	507, 1209,
	508, 1209,
	509, 1209,
	511, 1209,
	512, 1209,
	513, 1209,
	514, 1209,
	516, 1209,
	517, 1209,
	520, 1209,
	521, 1209,
	522, 1209,
	523, 1209,
	524, 1209,
	525, 1209,
	526, 1209,
	528, 1209,
	531, 1209,
	532, 1209,
	533, 1209,
	534, 1209,
	535, 1209,
	536, 1209,
	538, 1209,
	539, 1209,
	540, 1209,
	541, 1209,
	547, 1209,
	548, 1209,
	549, 1209,
	550, 1209,
	551, 1209,
	552, 1209,
	-2, 0,
	-1, 1553,
	1, 505,
	576, 505,
	578, 505,
	580, 505,
	-2, 1432,
	-1, 1556,
	4, 2577,
	11, 2577,
	12, 2577,
	14, 2577,
	15, 2577,
	16, 2577,
	17, 2577,
	18, 2577,
	19, 2577,
	21, 2577,
	22, 2577,
	23, 2577,
	24, 2577,
	25, 2577,
	26, 2577,
	27, 2577,
	28, 2577,
	30, 2577,
	31, 2577,
	34, 2577,
	35, 2577,
	37, 2577,
	39, 2577,
	42, 2577,
	43, 2577,
	45, 2577,
	46, 2577,
	47, 2577,
	48, 2577,
	49, 2577,
	50, 2577,
	51, 2577,
	52, 2577,
	54, 2577,
	55, 2577,
	56, 2577,
	57, 2577,
	59, 2577,
	60, 2577,
	61, 2577,
	62, 2577,
	63, 2577,
	64, 2577,
	65, 2577,
	69, 2577,
	70, 2577,
	71, 2577,
	72, 2577,
	74, 2577,
	75, 2577,
	76, 2577,
	77, 2577,
	80, 2577,
	81, 2577,
	82, 2577,
	83, 2577,
	84, 2577,
	85, 2577,
	86, 2577,
	87, 2577,
	89, 2577,
	90, 2577,
	91, 2577,
	92, 2577,
	93, 2577,
	95, 2577,
	96, 2577,
	97, 2577,
	98, 2577,
	99, 2577,
	100, 2577,
	101, 2577,
	102, 2577,
	104, 2577,
	105, 2577,
	106, 2577,
	107, 2577,
	108, 2577,
	109, 2577,
	117, 2577,
	118, 2577,
	119, 2577,
	120, 2577,
	122, 2577,
	123, 2577,
	124, 2577,
	126, 2577,
	127, 2577,
	128, 2577,
	130, 2577,
	131, 2577,
	133, 2577,
	134, 2577,
	135, 2577,
	138, 2577,
	139, 2577,
	140, 2577,
	142, 2577,
	143, 2577,
	145, 2577,
	146, 2577,
	147, 2577,
	149, 2577,
	150, 2577,
	151, 2577,
	152, 2577,
	153, 2577,
	154, 2577,
	155, 2577,
	156, 2577,
	157, 2577,
	158, 2577,
	159, 2577,
	160, 2577,
	161, 2577,
	162, 2577,
	163, 2577,
	164, 2577,
	168, 2577,
	169, 2577,
	170, 2577,
	171, 2577,
	172, 2577,
	173, 2577,
	174, 2577,
	175, 2577,
	178, 2577,
	179, 2577,
	181, 2577,
	184, 2577,
	185, 2577,
	186, 2577,
	187, 2577,
	188, 2577,
	189, 2577,
	190, 2577,
	191, 2577,
	192, 2577,
	193, 2577,
	194, 2577,
	195, 2577,
	196, 2577,
	197, 2577,
	199, 2577,
	200, 2577,
	202, 2577,
	203, 2577,
	205, 2577,
	206, 2577,
	207, 2577,
	208, 2577,
	209, 2577,
	210, 2577,
	211, 2577,
	212, 2577,
	213, 2577,
	214, 2577,
	215, 2577,
	216, 2577,
	217, 2577,
	218, 2577,
	219, 2577,
	220, 2577,
	221, 2577,
	223, 2577,
	224, 2577,
	226, 2577,
	227, 2577,
	228, 2577,
	229, 2577,
	231, 2577,
	232, 2577,
	233, 2577,
	234, 2577,
	236, 2577,
	238, 2577,
	239, 2577,
	240, 2577,
	241, 2577,
	242, 2577,
	243, 2577,
	244, 2577,
	245, 2577,
	246, 2577,
	247, 2577,
	249, 2577,
	250, 2577,
	251, 2577,
	252, 2577,
	253, 2577,
	254, 2577,
	255, 2577,
	256, 2577,
	258, 2577,
	259, 2577,
	260, 2577,
	262, 2577,
	263, 2577,
	264, 2577,
	265, 2577,
	266, 2577,
	267, 2577,
	269, 2577,
	273, 2577,
	274, 2577,
	275, 2577,
	278, 2577,
	279, 2577,
	280, 2577,
	281, 2577,
	282, 2577,
	283, 2577,
	284, 2577,
	285, 2577,
	286, 2577,
	287, 2577,
	288, 2577,
	289, 2577,
	290, 2577,
	291, 2577,
	292, 2577,
	293, 2577,
	294, 2577,
	295, 2577,
	296, 2577,
	297, 2577,
	298, 2577,
	299, 2577,
	300, 2577,
	301, 2577,
	302, 2577,
	303, 2577,
	304, 2577,
	306, 2577,
	307, 2577,
	308, 2577,
	309, 2577,
	310, 2577,
	311, 2577,
	312, 2577,
	313, 2577,
	314, 2577,
	315, 2577,
	316, 2577,
	317, 2577,
	318, 2577,
	319, 2577,
	321, 2577,
	324, 2577,
	325, 2577,
	326, 2577,
	328, 2577,
	329, 2577,
	330, 2577,
	331, 2577,
	332, 2577,
	335, 2577,
	339, 2577,
	340, 2577,
	341, 2577,
	342, 2577,
	344, 2577,
	345, 2577,
	346, 2577,
	348, 2577,
	350, 2577,
	351, 2577,
	352, 2577,
	353, 2577,
	354, 2577,
	355, 2577,
	356, 2577,
	357, 2577,
	358, 2577,
	359, 2577,
	360, 2577,
	361, 2577,
	363, 2577,
	364, 2577,
	365, 2577,
	366, 2577,
	367, 2577,
	368, 2577,
	369, 2577,
	370, 2577,
	371, 2577,
	372, 2577,
	373, 2577,
	374, 2577,
	375, 2577,
	376, 2577,
	377, 2577,
	379, 2577,
	380, 2577,
	382, 2577,
	383, 2577,
	384, 2577,
	385, 2577,
	386, 2577,
	387, 2577,
	388, 2577,
	389, 2577,
	390, 2577,
	391, 2577,
	392, 2577,
	393, 2577,
	395, 2577,
	397, 2577,
	398, 2577,
	399, 2577,
	404, 2577,
	405, 2577,
	406, 2577,
	407, 2577,
	408, 2577,
	409, 2577,
	410, 2577,
	411, 2577,
	412, 2577,
	413, 2577,
	414, 2577,
	416, 2577,
	417, 2577,
	418, 2577,
	419, 2577,
	420, 2577,
	421, 2577,
	422, 2577,
	423, 2577,
	424, 2577,
	425, 2577,
	426, 2577,
	427, 2577,
	428, 2577,
	429, 2577,
	430, 2577,
	431, 2577,
	432, 2577,
	433, 2577,
	434, 2577,
	435, 2577,
	436, 2577,
	437, 2577,
	439, 2577,
	440, 2577,
	441, 2577,
	442, 2577,
	443, 2577,
	444, 2577,
	446, 2577,
	447, 2577,
	448, 2577,
	449, 2577,
	450, 2577,
	451, 2577,
	452, 2577,
	453, 2577,
	454, 2577,
	455, 2577,
	456, 2577,
	457, 2577,
	458, 2577,
	459, 2577,
	461, 2577,
	463, 2577,
	464, 2577,
	465, 2577,
	466, 2577,
	467, 2577,
	468, 2577,
	469, 2577,
	470, 2577,
	471, 2577,
	472, 2577,
	473, 2577,
	474, 2577,
	475, 2577,
	476, 2577,
	477, 2577,
	478, 2577,
	480, 2577,
	481, 2577,
	483, 2577,
	484, 2577,
	486, 2577,
	487, 2577,
	488, 2577,
	489, 2577,
	490, 2577,
	491, 2577,
	492, 2577,
	493, 2577,
	494, 2577,
	496, 2577,
	497, 2577,
	498, 2577,
	499, 2577,
	500, 2577,
	502, 2577,
	504, 2577,
	505, 2577,
	506, 2577,
	507, 2577,
	508, 2577,
	509, 2577,
	511, 2577,
	512, 2577,
	513, 2577,
	514, 2577,
	516, 2577,
	517, 2577,
	520, 2577,
	521, 2577,
	522, 2577,
	523, 2577,
	524, 2577,
	525, 2577,
	526, 2577,
	528, 2577,
	531, 2577,
	532, 2577,
	533, 2577,
	534, 2577,
	535, 2577,
	536, 2577,
	538, 2577,
	539, 2577,
	540, 2577,
	541, 2577,
	547, 2577,
	548, 2577,
	549, 2577,
	550, 2577,
	551, 2577,
	552, 2577,
	553, 2577,
	555, 2577,
	558, 2577,
	559, 2577,
	560, 2577,
	561, 2577,
	562, 2577,
	563, 2577,
	565, 2577,
	566, 2577,
	567, 2577,
	568, 2577,
	569, 2577,
	570, 2577,
	571, 2577,
	572, 2577,
	573, 2577,
	575, 2577,
	578, 2577,
	579, 2577,
	581, 2577,
	582, 2577,
	-2, 0,
	-1, 1561,
	183, 2461,
	501, 2461,
	560, 2461,
	579, 2461,
	-2, 0,
	-1, 1610,
	384, 811,
	444, 811,
	484, 811,
	506, 811,
	-2, 0,
	-1, 1637,
	1, 806,
	576, 806,
	578, 806,
	580, 806,
	-2, 0,
	-1, 1638,
	1, 844,
	576, 844,
	578, 844,
	580, 844,
	-2, 0,
	-1, 1639,
	1, 852,
	576, 852,
	578, 852,
	580, 852,
	-2, 0,
	-1, 1642,
	1, 815,
	576, 815,
	578, 815,
	580, 815,
	-2, 0,
	-1, 1644,
	1, 819,
	576, 819,
	578, 819,
	580, 819,
	-2, 0,
	-1, 1650,
	1, 826,
	576, 826,
	578, 826,
	580, 826,
	-2, 0,
	-1, 1678,
	1, 2523,
	576, 2523,
	578, 2523,
	579, 2523,
	580, 2523,
	-2, 877,
	-1, 1679,
	1, 2458,
	576, 2458,
	578, 2458,
	579, 2458,
	580, 2458,
	-2, 878,
	-1, 1697,
	1, 1323,
	580, 1323,
	-2, 1328,
	-1, 1700,
	167, 1475,
	180, 1475,
	268, 1475,
	333, 1475,
	-2, 1413,
	-1, 1794,
	148, 1434,
	167, 1434,
	180, 1434,
	235, 1434,
	268, 1434,
	333, 1434,
	343, 1434,
	518, 1434,
	-2, 1876,
	-1, 1854,
	578, 2026,
	-2, 0,
	-1, 1889,
	148, 1434,
	167, 1434,
	180, 1434,
	235, 1434,
	268, 1434,
	333, 1434,
	343, 1434,
	518, 1434,
	-2, 1562,
	-1, 1938,
	577, 1703,
	-2, 1691,
	-1, 2016,
	1, 634,
	580, 634,
	-2, 1328,
	-1, 2141,
	217, 238,
	-2, 2173,
	-1, 2142,
	217, 239,
	-2, 283,
	-1, 2245,
	1, 808,
	576, 808,
	578, 808,
	580, 808,
	-2, 0,
	-1, 2246,
	1, 846,
	576, 846,
	578, 846,
	580, 846,
	-2, 0,
	-1, 2247,
	1, 854,
	576, 854,
	578, 854,
	580, 854,
	-2, 0,
	-1, 2281,
	1, 828,
	576, 828,
	578, 828,
	580, 828,
	-2, 0,
	-1, 2333,
	424, 1502,
	425, 1502,
	-2, 1736,
	-1, 2364,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1756,
	-1, 2365,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1757,
	-1, 2366,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1758,
	-1, 2367,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1759,
	-1, 2368,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1760,
	-1, 2369,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1761,
	-1, 2370,
	96, 0,
	249, 0,
	250, 0,
	562, 0,
	563, 0,
	-2, 1762,
	-1, 2371,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1763,
	-1, 2383,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1775,
	-1, 2384,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1776,
	-1, 2385,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1777,
	-1, 2388,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1782,
	-1, 2394,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1786,
	-1, 2396,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1794,
	-1, 2397,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1795,
	-1, 2398,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1796,
	-1, 2399,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1797,
	-1, 2535,
	5, 2177,
	183, 2037,
	577, 2174,
	-2, 2165,
	-1, 2536,
	183, 2038,
	-2, 2528,
	-1, 2537,
	183, 2039,
	-2, 2357,
	-1, 2538,
	183, 2040,
	-2, 2246,
	-1, 2539,
	183, 2041,
	-2, 2298,
	-1, 2540,
	183, 2042,
	-2, 2342,
	-1, 2541,
	183, 2043,
	-2, 2456,
	-1, 2542,
	183, 2044,
	-2, 1859,
	-1, 2612,
	1, 1563,
	2, 1563,
	107, 1563,
	148, 1563,
	167, 1563,
	180, 1563,
	184, 1563,
	201, 1563,
	204, 1563,
	231, 1563,
	235, 1563,
	246, 1563,
	264, 1563,
	268, 1563,
	307, 1563,
	333, 1563,
	337, 1563,
	343, 1563,
	415, 1563,
	419, 1563,
	518, 1563,
	529, 1563,
	544, 1563,
	545, 1563,
	546, 1563,
	556, 1563,
	576, 1563,
	578, 1563,
	580, 1563,
	582, 1563,
	-2, 1562,
	-1, 2625,
	577, 2146,
	-2, 2160,
	-1, 2627,
	54, 1461,
	133, 1461,
	-2, 299,
	-1, 2652,
	577, 1702,
	-2, 1692,
	-1, 2827,
	1, 1184,
	576, 1184,
	578, 1184,
	580, 1184,
	-2, 1461,
	-1, 2994,
	338, 1505,
	-2, 2567,
	-1, 2995,
	338, 1506,
	-2, 2442,
	-1, 2999,
	424, 2103,
	425, 2103,
	-2, 1857,
	-1, 3000,
	424, 2107,
	425, 2107,
	-2, 1858,
	-1, 3001,
	424, 2104,
	425, 2104,
	-2, 1857,
	-1, 3002,
	424, 2108,
	425, 2108,
	-2, 1858,
	-1, 3015,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1784,
	-1, 3016,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1788,
	-1, 3022,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1790,
	-1, 3262,
	1, 631,
	576, 631,
	578, 631,
	580, 631,
	-2, 1328,
	-1, 3413,
	44, 2138,
	-2, 948,
	-1, 3418,
	1, 1184,
	576, 1184,
	578, 1184,
	580, 1184,
	-2, 1461,
	-1, 3523,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1792,
	-1, 3530,
	240, 0,
	242, 0,
	324, 0,
	-2, 1811,
	-1, 3597,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1840,
	-1, 3598,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1841,
	-1, 3599,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1842,
	-1, 3603,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1846,
	-1, 3604,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1847,
	-1, 3605,
	14, 0,
	15, 0,
	16, 0,
	558, 0,
	559, 0,
	560, 0,
	-2, 1848,
	-1, 3651,
	577, 2147,
	-2, 2161,
	-1, 3812,
	579, 2685,
	-2, 1387,
	-1, 3870,
	240, 0,
	242, 0,
	324, 0,
	-2, 1812,
	-1, 3873,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1815,
	-1, 3874,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1817,
	-1, 3969,
	579, 2162,
	-2, 1219,
	-1, 4104,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1816,
	-1, 4105,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	214, 0,
	217, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 1818,
	-1, 4116,
	240, 0,
	-2, 1849,
	-1, 4284,
	240, 0,
	-2, 1850,
	-1, 4469,
	51, 0,
	214, 0,
	267, 0,
	452, 0,
	553, 0,
	561, 0,
	-2, 2531,
}

const sqlPrivate = 57344

const sqlLast = 121708

var sqlAct = [...]int{
	263, 4490, 3403, 4650, 4565, 4324, 3173, 4522, 4489, 2904,
	2891, 4591, 4342, 4468, 4209, 4316, 4450, 4479, 4346, 4438,
	4364, 4162, 3402, 3853, 1463, 2064, 4480, 4422, 2138, 4402,
	2212, 4481, 4419, 4216, 4237, 3562, 4148, 4288, 4027, 4061,
	2778, 4534, 4056, 4467, 3515, 4008, 4167, 4125, 2343, 4093,
	1280, 3804, 1074, 1276, 3435, 3796, 3288, 4041, 2759, 4225,
	1208, 3743, 3966, 3008, 2411, 4251, 3950, 1709, 2567, 1269,
	2221, 3429, 2790, 4066, 781, 3398, 1925, 3779, 3388, 3763,
	3291, 2351, 2344, 3474, 4121, 3765, 2913, 1340, 1577, 2880,
	748, 1895, 2861, 1030, 3476, 2072, 1998, 2926, 781, 2915,
	3654, 3156, 2851, 3196, 3216, 3852, 2875, 2912, 2877, 3188,
	1432, 2906, 2923, 2717, 2892, 3965, 1021, 3346, 1926, 3177,
	2132, 3622, 4566, 2133, 1029, 172, 3310, 2083, 3179, 2348,
	2719, 3909, 4289, 2219, 1864, 1618, 2605, 3155, 1840, 855,
	2453, 2424, 1802, 1439, 1188, 2922, 1517, 776, 39, 4,
	2804, 1274, 2127, 3285, 2056, 2862, 2116, 2185, 2992, 1323,
	1085, 1081, 2109, 257, 2607, 2052, 2585, 1697, 1078, 1248,
	2564, 1996, 1865, 2444, 2042, 2408, 1080, 2332, 256, 2313,
	2315, 3400, 1271, 1057, 1262, 1083, 1973, 2885, 2637, 1197,
	1554, 1575, 2173, 1042, 1520, 2701, 782, 2758, 2916, 1884,
	679, 783, 1874, 1309, 2636, 2447, 1191, 1835, 2575, 2594,
	1170, 2497, 2531, 1787, 665, 172, 181, 1711, 687, 2604,
	3223, 2425, 730, 778, 1710, 182, 105, 1881, 2314, 1650,
	1205, 2198, 1545, 1259, 1637, 1458, 2316, 787, 1552, 1187,
	848, 742, 2172, 4523, 2071, 4365, 2337, 1059, 1974, 682,
	44, 1971, 790, 43, 1168, 690, 41, 32, 30, 28,
	3043, 787, 1716, 917, 1193, 705, 1469, 3273, 3039, 1696,
	937, 3175, 72, 829, 1025, 3636, 790, 3637, 1987, 4663,
	4653, 4638, 1203, 2584, 3454, 2584, 1643, 4637, 1987, 73,
	1987, 2584, 2455, 1987, 1987, 4627, 1987, 1584, 4609, 2147,
	1462, 1318, 4166, 4607, 4553, 77, 4511, 4166, 2147, 3444,
	4512, 4504, 4502, 4499, 4496, 2584, 2584, 4500, 4497, 4465,
	4464, 870, 4463, 2147, 2147, 4458, 2008, 2220, 1318, 2008,
	4457, 1724, 1725, 4448, 2008, 4446, 4417, 4166, 4389, 4166,
	4166, 1025, 2643, 4382, 4381, 84, 4376, 2584, 2584, 4375,
	4166, 3445, 4369, 4166, 3626, 1755, 2147, 4338, 1185, 4286,
	4268, 4019, 1727, 2643, 3839, 4265, 4262, 4218, 3231, 2147,
	4166, 4219, 3128, 3129, 4182, 3146, 3147, 3148, 2147, 4181,
	4173, 4172, 853, 2147, 2147, 4166, 1171, 1171, 4165, 1006,
	4132, 1200, 4166, 3246, 2147, 4106, 104, 1726, 1005, 2643,
	4085, 90, 101, 4074, 2008, 4003, 1199, 3454, 3988, 2584,
	1026, 3872, 2584, 1201, 3820, 2643, 3814, 3454, 3471, 3777,
	3471, 1570, 3646, 3778, 3644, 3629, 3647, 3546, 3645, 2584,
	3542, 2147, 1985, 3470, 2584, 3461, 3245, 3471, 3172, 3462,
	2662, 3167, 2584, 1020, 1015, 2584, 3166, 2639, 3143, 2005,
	2584, 90, 3119, 3093, 3052, 3085, 3120, 3094, 91, 3086,
	3053, 3083, 3054, 2930, 1471, 2584, 2584, 2008, 2902, 2901,
	2685, 2147, 2208, 2208, 2584, 1471, 2642, 1172, 2634, 3007,
	2643, 2628, 2584, 2147, 2583, 2147, 2577, 2207, 2584, 1219,
	1174, 2208, 1175, 2584, 4390, 1226, 4290, 4281, 1732, 4269,
	227, 1724, 1725, 2008, 3626, 2576, 4054, 1767, 1768, 1769,
	4019, 3989, 3839, 2584, 3462, 2781, 2076, 2700, 2021, 1986,
	2002, 2661, 2005, 2857, 2146, 1755, 2798, 2698, 1860, 1457,
	2450, 3728, 1727, 3518, 3494, 1882, 2121, 2621, 1620, 3134,
	2620, 1773, 3446, 1754, 1756, 2619, 2618, 229, 2617, 1176,
	227, 1173, 1724, 1725, 1014, 1757, 1758, 1759, 1767, 1768,
	1769, 3447, 2480, 1013, 1012, 1011, 1010, 1726, 3128, 3129,
	1220, 2969, 1462, 1009, 1008, 1760, 1755, 1746, 2466, 1004,
	3042, 2641, 1003, 1727, 1002, 1001, 1743, 1000, 999, 1724,
	1725, 998, 1773, 997, 996, 995, 228, 229, 994, 1471,
	993, 94, 1747, 1724, 1725, 992, 991, 990, 221, 989,
	988, 3128, 3129, 1755, 915, 914, 2451, 222, 1726, 913,
	1727, 912, 911, 910, 909, 908, 1988, 1755, 1746, 907,
	906, 905, 904, 903, 1727, 902, 1988, 1743, 1988, 183,
	901, 1988, 1988, 3144, 1988, 900, 228, 899, 898, 897,
	896, 895, 894, 180, 97, 1726, 100, 893, 1749, 1750,
	1751, 1752, 892, 891, 890, 889, 888, 887, 1732, 1726,
	886, 885, 884, 883, 873, 872, 868, 867, 861, 1746,
	227, 860, 847, 846, 804, 803, 802, 801, 854, 183,
	793, 792, 3925, 145, 791, 763, 754, 2452, 753, 2449,
	752, 736, 251, 250, 1764, 249, 248, 1774, 247, 1749,
	1750, 1751, 1752, 1754, 1756, 246, 245, 3128, 3129, 1732,
	244, 243, 227, 1285, 1083, 242, 241, 229, 240, 239,
	227, 238, 237, 227, 236, 3134, 235, 234, 233, 1741,
	1742, 232, 231, 145, 230, 3884, 1748, 1083, 3664, 3640,
	3444, 1083, 4068, 147, 3472, 1764, 1732, 1762, 1774, 3219,
	1749, 1750, 1751, 1752, 1754, 1756, 3065, 1343, 184, 229,
	1732, 1343, 1747, 3048, 2952, 1285, 228, 229, 3134, 3170,
	229, 1770, 2870, 1771, 2838, 2647, 2626, 3145, 221, 1885,
	1741, 1742, 1220, 2611, 2050, 2672, 1083, 222, 1083, 2007,
	1083, 1754, 1756, 3128, 3129, 1986, 1285, 2005, 1762, 1908,
	2002, 2661, 1723, 2308, 1313, 1754, 1756, 3171, 228, 183,
	2215, 4486, 2464, 1747, 1813, 1843, 228, 1645, 1465, 228,
	221, 1285, 1842, 1329, 1207, 2005, 1804, 4466, 221, 222,
	1322, 221, 1447, 4445, 1327, 2454, 1843, 222, 4353, 4293,
	222, 1285, 1470, 1842, 1846, 4272, 1285, 227, 4278, 4270,
	1747, 183, 1483, 4160, 1083, 1772, 1083, 4120, 1442, 183,
	1285, 4075, 183, 1292, 1747, 1841, 1083, 1461, 1083, 3143,
	4053, 2154, 3144, 1761, 3134, 2576, 1253, 1256, 1728, 1729,
	1730, 1731, 1733, 1734, 1220, 1753, 3932, 3907, 3782, 2888,
	2214, 3906, 1526, 1529, 229, 3900, 3899, 3898, 3891, 1266,
	1336, 1307, 1429, 1434, 3890, 3888, 1748, 3883, 3880, 3140,
	3141, 3142, 3879, 1285, 3776, 1449, 3139, 3137, 3138, 3130,
	3131, 3132, 3133, 3135, 3136, 1588, 3668, 3667, 3128, 3129,
	3666, 1083, 1765, 3650, 1083, 1468, 1753, 1475, 787, 1481,
	3617, 3616, 4070, 228, 1437, 3615, 3538, 3128, 3129, 2448,
	3146, 3147, 3148, 790, 3534, 221, 3214, 1748, 3163, 3154,
	3134, 3127, 3124, 3123, 222, 3121, 172, 172, 3092, 1806,
	1515, 1460, 3091, 1302, 3090, 2656, 1459, 1805, 3144, 1803,
	1477, 3087, 3084, 1765, 3064, 3047, 183, 1753, 3040, 2903,
	2612, 1557, 1559, 1811, 1748, 2437, 3726, 1723, 1184, 2188,
	2152, 1722, 4657, 1568, 4601, 1573, 4600, 4567, 1748, 1589,
	1532, 1804, 3783, 2872, 4521, 1582, 3145, 1587, 4519, 1209,
	1471, 3564, 4409, 3143, 3128, 3129, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1763, 4345, 1313, 4334, 4331, 1313, 4330,
	4329, 1766, 1744, 1740, 4310, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 4292, 4291, 1574, 1083, 4266, 4250,
	1482, 4249, 3168, 1083, 3144, 2414, 4235, 1026, 4232, 4231,
	4178, 1659, 4156, 4118, 4101, 1548, 4100, 4082, 1644, 1724,
	1725, 1293, 4081, 4044, 1763, 4020, 3924, 3905, 3840, 1738,
	1739, 1745, 1766, 1744, 1740, 3134, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 3834, 1695, 3831, 4294, 3894,
	1727, 3714, 1701, 3893, 3134, 3130, 3131, 3132, 3133, 3135,
	3136, 1569, 3145, 3713, 3237, 1028, 3699, 4047, 2479, 3698,
	3783, 1546, 3211, 1583, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 3696, 3928, 2465, 1726, 1793, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 3137, 3138, 3130, 3131,
	3132, 3133, 3135, 3136, 2420, 3632, 3620, 3876, 1083, 1083,
	1083, 3529, 1594, 1791, 1083, 3473, 3149, 3455, 3421, 3359,
	3321, 1205, 4069, 1205, 3290, 1611, 3239, 3069, 1476, 3068,
	3063, 3134, 3031, 2850, 1849, 1848, 1646, 1847, 1343, 3144,
	1844, 1836, 227, 1834, 2871, 2654, 1083, 2653, 3145, 781,
	2623, 2616, 2582, 2462, 1907, 1943, 781, 1863, 3144, 1285,
	1858, 1857, 1862, 1856, 1911, 1855, 1854, 1853, 1852, 1724,
	1725, 1851, 1850, 1203, 1922, 1203, 1006, 1698, 1831, 1830,
	1706, 1969, 1871, 1829, 1828, 1005, 1732, 2786, 1705, 229,
	1796, 1827, 1826, 1825, 1801, 1915, 1700, 2743, 1824, 1823,
	1727, 1845, 1822, 3138, 3130, 3131, 3132, 3133, 3135, 3136,
	1702, 1821, 1820, 3663, 1918, 1819, 1719, 1720, 227, 1818,
	1817, 1806, 1792, 1026, 2216, 1285, 1790, 255, 227, 1785,
	1301, 1224, 1083, 1215, 3643, 1726, 1285, 1826, 228, 3635,
	1916, 1724, 1725, 1868, 1869, 3051, 2614, 4136, 1551, 172,
	221, 1892, 3930, 3662, 1083, 2645, 3128, 3129, 1805, 222,
	1343, 1837, 1838, 3235, 1171, 229, 1788, 2143, 2066, 3450,
	1903, 1326, 1727, 1899, 2041, 229, 2041, 1324, 4598, 4590,
	3991, 2887, 1200, 3145, 1200, 2041, 2779, 3139, 3137, 3138,
	3130, 3131, 3132, 3133, 3135, 3136, 4332, 1199, 4221, 1199,
	2014, 227, 3145, 4220, 1201, 1313, 1201, 1726, 4073, 4022,
	2039, 1914, 787, 4021, 228, 1937, 4226, 3990, 3927, 787,
	2013, 3843, 3842, 1893, 228, 1912, 221, 790, 2463, 1890,
	1325, 3841, 3638, 4273, 790, 222, 221, 4271, 2763, 3128,
	3129, 3457, 3146, 3147, 3148, 222, 1883, 2048, 229, 1026,
	1318, 1843, 1990, 3456, 1861, 3786, 227, 183, 1842, 1885,
	3128, 3129, 3868, 227, 3516, 1318, 1826, 183, 4159, 3738,
	1318, 3089, 1919, 227, 2118, 1902, 1693, 3353, 1901, 1966,
	3088, 1900, 1898, 1897, 1896, 1887, 1285, 1285, 3013, 2745,
	1321, 2027, 2017, 3711, 1610, 986, 1343, 228, 3292, 3324,
	1923, 1815, 2016, 229, 3405, 1619, 3404, 1551, 1732, 221,
	229, 2237, 4462, 2213, 4217, 3143, 3466, 1660, 222, 4507,
	229, 4492, 3139, 3137, 3138, 3130, 3131, 3132, 3133, 3135,
	3136, 4478, 227, 3389, 3140, 3141, 3142, 2927, 1620, 987,
	183, 3139, 3137, 3138, 3130, 3131, 3132, 3133, 3135, 3136,
	2134, 3740, 228, 3735, 3719, 3491, 4122, 227, 3260, 228,
	2012, 3175, 2445, 2103, 221, 2108, 3566, 3057, 2113, 228,
	4487, 221, 2652, 222, 2139, 2144, 2010, 2189, 1859, 229,
	222, 221, 1839, 3396, 2019, 1550, 2182, 1525, 1454, 1285,
	222, 1285, 1296, 1285, 1252, 183, 2795, 4501, 2044, 2034,
	4498, 227, 183, 4152, 229, 1812, 3134, 3440, 3691, 1285,
	1285, 4325, 183, 1183, 4057, 4416, 4307, 3295, 2082, 1319,
	1285, 3706, 2792, 3132, 3133, 3135, 3136, 3134, 228, 2136,
	2910, 2884, 1285, 4551, 1285, 1285, 1285, 3381, 4488, 4550,
	221, 4581, 3264, 2076, 3510, 842, 4199, 3753, 229, 222,
	3978, 787, 1501, 228, 1493, 2686, 4652, 781, 4192, 984,
	2178, 4184, 2223, 2236, 3266, 221, 790, 1598, 3149, 982,
	2704, 183, 980, 2183, 222, 978, 1728, 1729, 1730, 1731,
	1733, 1734, 4143, 975, 1460, 2702, 2195, 1308, 4017, 1459,
	1455, 4016, 1128, 967, 2287, 1326, 183, 228, 1658, 3749,
	2033, 2032, 2285, 2028, 2041, 2043, 3748, 3742, 3734, 221,
	3144, 2101, 3733, 2102, 3752, 3731, 1992, 2112, 222, 1994,
	3730, 3718, 3678, 2145, 2704, 1999, 3492, 3677, 2241, 2001,
	3385, 3144, 3236, 1315, 2004, 2218, 3384, 1502, 3230, 2702,
	183, 3062, 2203, 1083, 1550, 1083, 843, 3061, 3060, 1657,
	3059, 3017, 1083, 2802, 1325, 1943, 1943, 1343, 1076, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 2192, 1083, 2165, 1083, 1083, 1083,
	1083, 2224, 2197, 2164, 2801, 2201, 2205, 2229, 2325, 1548,
	1024, 2200, 1320, 2200, 1319, 1026, 2797, 1026, 4153, 1083,
	787, 2036, 1083, 1083, 2312, 2788, 2777, 2209, 3351, 2210,
	1083, 1734, 2721, 1302, 1083, 790, 1083, 1083, 2776, 3292,
	2213, 4582, 2773, 2772, 1343, 1596, 2493, 1656, 2771, 2750,
	1083, 1083, 1083, 1083, 3145, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 2228, 2749, 1326, 2323, 4099, 2712, 1316,
	1319, 2635, 2395, 2349, 2350, 3145, 2245, 1699, 1317, 2492,
	2263, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	2426, 2427, 2646, 3323, 1083, 2353, 1538, 1023, 1537, 2881,
	1730, 1731, 1733, 1734, 2426, 2442, 1205, 1497, 3694, 1536,
	2306, 1535, 2281, 1343, 2767, 1937, 1937, 2233, 3136, 2336,
	972, 2301, 1205, 1510, 1325, 2321, 1238, 2163, 1315, 1641,
	2488, 1641, 2038, 2693, 2760, 2761, 2760, 2761, 1083, 1343,
	2106, 2724, 2933, 4585, 2410, 2760, 2761, 2627, 3992, 2534,
	2534, 2548, 2309, 2426, 1456, 2317, 2568, 2570, 1203, 1591,
	2311, 2747, 2574, 1006, 2324, 2298, 1006, 1006, 2310, 2445,
	2037, 1612, 2340, 2410, 1203, 2341, 2342, 2735, 2441, 2291,
	2450, 2253, 2073, 3352, 1315, 2599, 3140, 3141, 3142, 2246,
	1673, 1638, 1669, 3139, 3137, 3138, 3130, 3131, 3132, 3133,
	3135, 3136, 3974, 2319, 3005, 1025, 2624, 1320, 2419, 3128,
	3129, 2323, 3146, 3147, 3148, 2069, 2990, 3130, 3131, 3132,
	3133, 3135, 3136, 1796, 3962, 4550, 1692, 2300, 2250, 1640,
	2422, 1640, 3867, 1704, 2591, 4586, 2418, 845, 844, 1285,
	1285, 2550, 3702, 2416, 2074, 2075, 1318, 1026, 1270, 1620,
	1892, 2247, 1608, 1639, 2794, 1171, 1026, 2439, 3958, 4611,
	1026, 1620, 3937, 1320, 1316, 2322, 2451, 1200, 2244, 2734,
	2321, 2590, 1300, 1317, 2070, 3263, 1592, 2555, 2202, 172,
	2084, 1343, 1199, 1200, 4484, 3143, 2793, 2254, 1521, 1201,
	1279, 2530, 3715, 2681, 2543, 2707, 1435, 1655, 1199, 1446,
	1270, 2572, 2675, 2088, 2640, 1201, 2559, 2580, 2581, 2592,
	3959, 2598, 2791, 2603, 3500, 1943, 2609, 2610, 2596, 2597,
	1316, 1313, 1903, 3936, 677, 3499, 1845, 4098, 1890, 1317,
	2709, 2966, 3004, 3555, 2638, 3552, 1519, 2723, 2320, 2454,
	4015, 4318, 1451, 2613, 4588, 3732, 2703, 2452, 1026, 2449,
	3962, 672, 1343, 3729, 3383, 3349, 2796, 2307, 2085, 2490,
	1270, 1270, 976, 2406, 2491, 2770, 1285, 2494, 2748, 2495,
	2496, 1652, 976, 1486, 2713, 976, 3134, 2655, 977, 881,
	1022, 2659, 1083, 1083, 3958, 1083, 976, 2677, 3951, 2666,
	1837, 1838, 2404, 2669, 1597, 2670, 2286, 4562, 1522, 3972,
	2683, 2660, 2658, 2684, 2284, 3949, 4570, 2706, 1285, 962,
	2322, 4569, 3760, 4386, 3953, 2674, 3553, 3028, 2708, 2678,
	2633, 2746, 2676, 1563, 4614, 2297, 2854, 1282, 4539, 2689,
	840, 1670, 839, 2753, 1019, 2768, 3959, 1576, 3149, 1285,
	2752, 1318, 3340, 2738, 2711, 3941, 3026, 2789, 2691, 3858,
	2742, 1285, 2648, 1285, 2687, 4485, 2751, 4320, 1212, 2151,
	2150, 2089, 2997, 2998, 2045, 2046, 3761, 2057, 1285, 2769,
	3857, 3437, 1499, 2058, 1496, 1937, 2868, 3952, 2722, 3438,
	3144, 2454, 2692, 2320, 2726, 2729, 2716, 2299, 2934, 2935,
	1602, 2785, 4641, 1237, 3275, 2454, 3341, 1318, 1210, 2941,
	2942, 2943, 2690, 2833, 1987, 2710, 3759, 3954, 2835, 1083,
	4594, 3688, 3955, 2953, 2131, 2954, 4398, 2762, 2764, 2765,
	2766, 2119, 3687, 2076, 963, 4326, 3278, 2090, 2091, 2839,
	4587, 2400, 2842, 4452, 2844, 4453, 3339, 4396, 4140, 2928,
	787, 3942, 761, 1877, 2392, 2780, 2895, 2252, 3703, 2401,
	3973, 2086, 2775, 4483, 2402, 790, 1034, 3437, 2407, 1083,
	2774, 2924, 172, 3957, 2454, 1083, 1083, 1671, 2130, 2057,
	2864, 3362, 4340, 1460, 1521, 2058, 1667, 2886, 2836, 3960,
	2886, 2950, 3019, 2059, 2909, 3023, 726, 2899, 2931, 2848,
	1880, 3307, 2087, 2936, 2860, 2937, 4384, 2858, 3332, 2897,
	2063, 2707, 2972, 973, 1213, 2593, 3265, 2107, 3024, 2448,
	1222, 2409, 3029, 3484, 1017, 1832, 962, 2947, 3233, 2890,
	1083, 1083, 3477, 1878, 3145, 2977, 1083, 2979, 2911, 2900,
	2957, 4036, 2959, 3954, 2961, 4385, 2709, 4561, 3955, 1083,
	1083, 1019, 1593, 2119, 2929, 1083, 1083, 3306, 759, 2829,
	2067, 1083, 3333, 2667, 2970, 1672, 2963, 1668, 2879, 2671,
	1083, 1083, 1083, 1595, 2898, 962, 1083, 874, 2949, 2417,
	2060, 2065, 3854, 2682, 2955, 2249, 1083, 2707, 4538, 1703,
	2958, 2956, 2960, 2985, 2962, 2059, 673, 1018, 3020, 3957,
	1019, 3050, 3331, 1083, 2704, 2096, 3276, 862, 1607, 1609,
	4111, 3311, 2063, 2830, 3956, 3960, 2092, 2390, 2975, 2727,
	2393, 964, 2709, 4319, 4514, 2243, 2980, 3479, 1299, 2982,
	2986, 2996, 2987, 4515, 2708, 2079, 3768, 1873, 4095, 3045,
	3046, 963, 3478, 2336, 3049, 3766, 2991, 2403, 4436, 3006,
	4427, 1446, 3963, 2828, 4000, 882, 695, 2405, 2436, 2097,
	2711, 3313, 2555, 2061, 3067, 4592, 3140, 3141, 3142, 3716,
	2389, 1784, 674, 3139, 3137, 3138, 3130, 3131, 3132, 3133,
	3135, 3136, 2060, 2065, 3041, 4615, 2595, 2608, 1879, 2080,
	963, 3484, 2093, 1083, 1083, 1083, 3659, 1446, 2119, 2095,
	3477, 3025, 1083, 1083, 1083, 3317, 1025, 1083, 3018, 2067,
	2708, 3027, 3568, 4602, 1877, 4046, 1227, 1083, 1205, 1343,
	675, 2710, 676, 1083, 3312, 1083, 3848, 3182, 3183, 2078,
	3475, 3781, 3859, 3512, 1205, 2988, 2711, 3768, 4347, 4482,
	3956, 2122, 2555, 2555, 4549, 2705, 3766, 2129, 2115, 2974,
	4642, 4547, 1343, 4037, 4363, 3769, 4234, 3056, 3802, 3315,
	965, 1880, 1988, 3425, 1205, 2061, 760, 1343, 4593, 4094,
	1203, 1625, 2114, 2171, 1211, 3165, 1875, 1870, 3963, 2971,
	1225, 1026, 1218, 4537, 1943, 664, 1203, 1714, 1343, 3855,
	2339, 3184, 2077, 2029, 1878, 3479, 3224, 2710, 4620, 3316,
	3229, 4595, 1285, 1285, 3606, 2110, 4175, 4174, 3204, 4243,
	3478, 2067, 966, 4306, 762, 1713, 1203, 3803, 758, 875,
	876, 2026, 3243, 3746, 2329, 1083, 3903, 3690, 964, 3286,
	3198, 3426, 3194, 3417, 2074, 2075, 3282, 1876, 1713, 1083,
	2869, 2863, 2066, 3764, 3480, 3481, 3482, 3483, 3213, 863,
	864, 1708, 3551, 1285, 2852, 2391, 3769, 2128, 1943, 2196,
	2190, 3269, 3192, 2184, 2111, 2176, 4348, 3190, 2157, 1490,
	4513, 1229, 3160, 3161, 3162, 735, 1083, 964, 2973, 1200,
	2066, 3218, 3621, 4403, 3513, 2062, 2555, 2555, 2555, 3176,
	1285, 3222, 3210, 3977, 1199, 1200, 2024, 1313, 3674, 3191,
	3976, 1201, 3234, 2728, 1713, 4096, 4366, 4141, 3943, 3254,
	1199, 3203, 1285, 3280, 1285, 3279, 1712, 1201, 3261, 3767,
	2292, 2022, 3199, 2118, 3297, 1200, 2754, 3302, 4062, 1343,
	3304, 2118, 3267, 2849, 3805, 3860, 2025, 1240, 1285, 1712,
	1199, 1642, 3283, 1285, 1937, 4215, 4213, 1201, 4155, 1879,
	1915, 3298, 3208, 3217, 3209, 3270, 3271, 2181, 3193, 2330,
	3294, 3354, 3293, 3202, 3011, 1016, 1285, 965, 1784, 3205,
	3206, 3197, 794, 1285, 2989, 1285, 3287, 2234, 3251, 1343,
	3296, 1714, 3634, 3300, 3326, 3255, 781, 2062, 3247, 3248,
	3607, 3226, 3227, 3228, 3262, 3268, 3187, 1285, 3186, 3608,
	4619, 3360, 2632, 3201, 1714, 1712, 877, 878, 1285, 1544,
	2631, 2630, 3480, 3481, 3482, 3483, 965, 3861, 1937, 966,
	3767, 3904, 2629, 3344, 1530, 1205, 3410, 1940, 3318, 3319,
	3433, 1542, 3320, 3348, 3773, 2856, 865, 866, 1531, 3281,
	2211, 1023, 4163, 4313, 3314, 3322, 3365, 4210, 3330, 3368,
	1285, 1285, 4028, 3373, 3375, 2732, 1279, 2225, 4349, 3189,
	880, 3387, 3431, 3390, 3338, 3416, 3335, 2227, 966, 2125,
	3697, 3356, 3357, 1285, 3453, 3358, 3329, 1203, 3355, 2235,
	3467, 2238, 2239, 2240, 3424, 3442, 3240, 3241, 3382, 3242,
	3675, 3371, 3361, 1931, 3378, 2755, 2756, 3975, 3343, 2194,
	3345, 3336, 3350, 3392, 3401, 3337, 1626, 4079, 4558, 3200,
	4344, 3493, 1343, 4138, 2932, 1343, 3386, 2834, 3225, 2832,
	2222, 1601, 4413, 2123, 3370, 3363, 3427, 4400, 4406, 3377,
	2752, 4150, 3910, 3394, 3623, 2461, 1688, 4431, 4560, 4314,
	2283, 2924, 1690, 4164, 3434, 2586, 3414, 4503, 1083, 787,
	2924, 3413, 1687, 3158, 1083, 1083, 3328, 734, 1083, 1083,
	1083, 4333, 1083, 2124, 790, 3465, 172, 172, 1685, 3486,
	3469, 1083, 1943, 3439, 2296, 4151, 4078, 2295, 3342, 2589,
	1083, 1664, 3448, 1083, 4117, 3902, 1200, 3772, 1555, 1343,
	1662, 3451, 3452, 1636, 3441, 3157, 3528, 1634, 1083, 3489,
	1632, 1199, 3505, 3485, 3369, 1630, 1343, 3432, 1201, 3376,
	3463, 1628, 3506, 4407, 795, 796, 1943, 1943, 1083, 1083,
	2588, 1083, 1083, 1083, 4315, 2587, 1873, 1622, 3488, 3244,
	3514, 3122, 3030, 2853, 3496, 1617, 3497, 2787, 3498, 3250,
	1615, 1540, 3252, 3253, 1543, 2744, 2657, 3256, 3531, 3257,
	2302, 3258, 1910, 1906, 1026, 3502, 1691, 1579, 3508, 3507,
	1708, 2968, 2967, 1083, 3487, 2939, 1541, 1083, 2318, 1943,
	1943, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	3511, 1083, 1651, 3580, 2258, 879, 2099, 3503, 1083, 1083,
	1943, 3540, 3541, 1877, 2156, 1083, 3509, 1970, 1816, 1590,
	1514, 4477, 2460, 4001, 4002, 3737, 1083, 3736, 2282, 3581,
	3987, 3536, 4399, 1689, 4060, 4007, 3947, 1205, 1205, 3801,
	3364, 1083, 1937, 1686, 2349, 3571, 3547, 3792, 3751, 974,
	3563, 3554, 3556, 3557, 3709, 3570, 4055, 3707, 3689, 1684,
	1880, 3420, 2555, 2555, 798, 797, 3415, 3406, 1270, 2882,
	1343, 2874, 1663, 2076, 2867, 1875, 3578, 2859, 3652, 2846,
	3579, 1661, 2104, 3618, 1635, 2831, 1937, 1937, 1633, 1203,
	1203, 1631, 2673, 1878, 4535, 2668, 1629, 2349, 3586, 3548,
	4527, 2155, 1627, 2153, 2135, 3657, 3658, 3610, 3585, 2120,
	2057, 2094, 2081, 3583, 3639, 1270, 2058, 1083, 1621, 3669,
	3670, 3671, 2100, 799, 800, 2068, 1616, 2009, 3614, 2006,
	2003, 1614, 1539, 1180, 2000, 1995, 1876, 1993, 1989, 1937,
	1937, 1083, 1980, 172, 3611, 3430, 1917, 3009, 3656, 1717,
	1270, 1270, 4551, 2030, 3627, 3628, 2983, 3372, 2981, 2305,
	1181, 3625, 4441, 2129, 4084, 3630, 3631, 4077, 3619, 4076,
	1937, 4014, 1083, 1083, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 3933, 2555, 3641, 2680, 1279, 1200, 1200,
	979, 981, 983, 2925, 2049, 2303, 3558, 1091, 1495, 4245,
	1083, 2733, 4238, 1199, 1199, 3813, 2704, 2076, 2704, 2248,
	1201, 1201, 2278, 1682, 1683, 2193, 2059, 3655, 1261, 3577,
	2602, 2702, 1285, 2730, 2277, 1285, 4440, 1940, 1940, 3010,
	3720, 1260, 1435, 2063, 722, 3683, 2255, 3979, 1879, 2304,
	4009, 1613, 1943, 259, 259, 259, 1718, 667, 668, 2736,
	683, 667, 683, 693, 3724, 4280, 733, 1182, 1446, 3693,
	751, 3725, 3727, 2128, 3911, 757, 1977, 3889, 3741, 3642,
	3679, 259, 1285, 1724, 1725, 3747, 3712, 3309, 1083, 3717,
	2737, 2737, 2757, 1721, 1294, 1228, 1205, 1083, 4554, 859,
	3815, 4545, 4508, 1931, 1931, 259, 678, 1285, 1285, 1285,
	2845, 1261, 2280, 2060, 2065, 3822, 2752, 774, 252, 3789,
	3771, 3806, 3739, 2827, 1285, 1724, 1725, 1261, 3787, 830,
	3745, 2177, 3807, 1305, 2098, 2792, 2800, 2799, 2782, 1285,
	3826, 3810, 1977, 2739, 4391, 1343, 2784, 4357, 1203, 1726,
	2741, 3788, 3744, 1977, 4354, 4312, 1727, 764, 4299, 2783,
	2107, 689, 4229, 2740, 4208, 661, 4260, 4144, 4142, 1343,
	3287, 3762, 1083, 1083, 3770, 4139, 3790, 3838, 1083, 1083,
	1943, 3799, 3665, 1083, 1083, 3791, 1083, 3780, 2105, 3793,
	1083, 1726, 3649, 3758, 4161, 3419, 2061, 2889, 2573, 2015,
	3809, 1083, 1446, 1924, 3774, 4589, 3808, 3945, 2895, 3816,
	1270, 3944, 1937, 3686, 3277, 3817, 3821, 1083, 3794, 4252,
	3829, 3757, 3811, 3832, 3232, 2940, 3833, 3846, 3795, 667,
	667, 3862, 4253, 3844, 3836, 2924, 4618, 259, 2055, 4433,
	4433, 3863, 2067, 1163, 4434, 4434, 1446, 4356, 1446, 1600,
	3827, 3828, 3128, 3129, 3875, 1599, 3871, 1200, 1462, 2106,
	3835, 3881, 3856, 4254, 2456, 4564, 1724, 1725, 2696, 2697,
	3661, 3845, 1199, 2696, 769, 2694, 2695, 1205, 2694, 1201,
	2489, 1666, 3798, 4230, 1665, 1205, 4193, 3851, 3847, 1343,
	4010, 1343, 2053, 4006, 4005, 3877, 3660, 3559, 1205, 3366,
	1810, 3756, 1809, 4604, 4571, 4395, 4394, 3916, 4393, 4295,
	4211, 4188, 4137, 4134, 4039, 1343, 3929, 3837, 3819, 3775,
	3705, 3700, 3423, 4256, 3422, 3303, 3249, 3118, 3117, 1203,
	3116, 3115, 2054, 3114, 3672, 3901, 3113, 1203, 3673, 3112,
	1937, 3111, 3110, 3109, 3108, 3107, 4255, 1205, 3106, 1205,
	1203, 3105, 3104, 3103, 3102, 3101, 728, 3100, 3099, 3098,
	3097, 3919, 3096, 4257, 3095, 2965, 2946, 2945, 2944, 1285,
	2873, 2847, 2731, 2664, 3971, 2650, 2649, 2421, 2279, 1343,
	771, 1285, 2276, 3708, 1285, 3710, 2275, 3922, 3982, 3983,
	3918, 3915, 2274, 1343, 2273, 172, 2272, 1940, 2191, 1203,
	2166, 1203, 3923, 2162, 3926, 3912, 1555, 2161, 1555, 3913,
	3914, 2160, 2159, 3917, 2158, 1983, 3981, 1982, 2062, 1981,
	3908, 1979, 1681, 1285, 1285, 1680, 3946, 1623, 1509, 1508,
	1507, 1506, 1505, 1504, 1503, 1498, 1494, 1492, 1200, 775,
	1285, 3934, 3935, 1491, 1334, 1333, 1200, 1332, 3939, 1331,
	1330, 1298, 1343, 1199, 1297, 1247, 3750, 1285, 1246, 1200,
	1201, 1199, 1245, 1931, 3970, 4004, 1244, 1243, 1201, 1242,
	1241, 3980, 4013, 1239, 1199, 1234, 4024, 1233, 1232, 1231,
	1230, 1201, 1205, 2020, 985, 4026, 971, 3217, 4317, 3961,
	2294, 4018, 1285, 1285, 1285, 3999, 4063, 1675, 89, 4023,
	1500, 817, 83, 2126, 3704, 1343, 4052, 4064, 1200, 4083,
	1200, 766, 4025, 4011, 942, 4012, 4430, 1083, 1083, 1083,
	1484, 4339, 825, 1199, 4058, 1199, 4415, 4067, 4030, 3305,
	1201, 2803, 1201, 4049, 1203, 1343, 3967, 4045, 3967, 3996,
	1083, 770, 4029, 1083, 1083, 2257, 1624, 2259, 4065, 3212,
	2615, 4383, 3885, 1083, 3066, 3986, 1943, 4287, 4110, 2459,
	1814, 1083, 1083, 3169, 85, 1067, 1113, 3995, 4035, 4034,
	3998, 3948, 3692, 2914, 4087, 727, 1343, 4102, 1285, 4038,
	4032, 4089, 4072, 4031, 4086, 1928, 1930, 1033, 773, 1346,
	4050, 4451, 4097, 4091, 768, 2031, 1073, 4080, 2047, 2040,
	4051, 2651, 1343, 4258, 2533, 1090, 1087, 1932, 4259, 1934,
	1083, 1089, 1088, 4071, 1933, 1833, 1086, 1927, 3797, 1083,
	1446, 1446, 4113, 2855, 2893, 3449, 4048, 1083, 1549, 1943,
	1547, 944, 4119, 2035, 3985, 2415, 2443, 3055, 1083, 1807,
	765, 1083, 1048, 1200, 1069, 4107, 2440, 3994, 4130, 4131,
	3997, 1223, 1058, 1083, 1047, 3195, 4146, 3174, 1199, 3436,
	1343, 3648, 4133, 2328, 834, 1201, 4171, 1285, 772, 3125,
	2446, 3967, 1285, 1285, 1214, 2556, 2549, 1216, 2545, 3259,
	2883, 1694, 729, 4147, 4145, 4124, 1786, 4154, 2894, 1328,
	1051, 2333, 2413, 767, 1798, 1446, 3035, 2338, 3443, 3215,
	2644, 4437, 3567, 2170, 1179, 1178, 1221, 1177, 4421, 4198,
	1236, 1343, 4418, 2117, 1285, 3830, 1937, 3399, 4223, 2023,
	2181, 2688, 259, 4214, 259, 259, 1776, 1265, 259, 1275,
	4185, 3407, 1205, 1205, 4187, 1063, 1445, 3180, 3468, 4189,
	1295, 4195, 1511, 756, 4244, 4168, 2555, 4177, 1075, 751,
	4204, 1083, 1083, 4239, 4207, 4203, 4248, 4212, 1775, 2824,
	2823, 4206, 4228, 4309, 4240, 1314, 4267, 4227, 1083, 1943,
	4222, 4242, 1312, 259, 1311, 259, 259, 1265, 1310, 259,
	259, 1275, 4578, 4236, 1203, 1203, 4640, 4241, 4247, 1937,
	4067, 3701, 259, 226, 1464, 4261, 4246, 1341, 3003, 1715,
	1707, 1440, 223, 2555, 225, 224, 4040, 1083, 3401, 3653,
	1083, 3221, 4506, 3379, 3722, 1488, 3391, 1205, 23, 4276,
	4277, 22, 1270, 21, 109, 4202, 42, 20, 125, 1205,
	2551, 144, 143, 117, 1513, 4190, 1275, 4305, 142, 141,
	259, 259, 140, 1265, 3411, 4285, 4275, 4263, 4264, 139,
	146, 138, 137, 4201, 132, 3418, 136, 135, 134, 133,
	131, 2066, 751, 4304, 259, 259, 129, 130, 124, 1203,
	128, 1083, 1083, 4327, 127, 126, 123, 4279, 122, 4321,
	121, 1203, 4322, 1205, 120, 4343, 1205, 859, 119, 118,
	1285, 116, 115, 1200, 1200, 114, 113, 3459, 3460, 112,
	1285, 1285, 111, 110, 747, 4335, 4296, 744, 1199, 1199,
	61, 4301, 60, 108, 107, 1201, 1201, 1285, 4374, 4337,
	19, 3967, 3967, 1446, 40, 14, 65, 4350, 66, 1937,
	18, 1083, 1083, 4200, 4355, 1203, 13, 4359, 1203, 35,
	4367, 1083, 88, 4368, 4328, 4227, 4379, 99, 4380, 98,
	36, 4371, 4370, 4372, 4373, 96, 1940, 95, 34, 17,
	259, 2555, 16, 15, 4351, 4352, 93, 92, 33, 4378,
	4377, 31, 11, 9, 8, 37, 1894, 12, 1200, 259,
	4388, 4408, 1083, 1083, 5, 1083, 177, 176, 4392, 4412,
	1200, 179, 175, 1199, 178, 87, 174, 173, 4360, 4387,
	1201, 4362, 86, 4420, 4423, 1199, 3967, 4341, 29, 10,
	169, 4224, 1201, 3785, 80, 4435, 171, 4410, 3967, 4432,
	4411, 170, 1931, 168, 167, 1977, 4456, 166, 4358, 4461,
	1940, 4460, 81, 4429, 78, 1083, 1083, 1083, 165, 82,
	4459, 164, 4442, 79, 1200, 163, 27, 1200, 6, 64,
	4424, 7, 4092, 4428, 4447, 3490, 1555, 4454, 4455, 1199,
	102, 103, 1199, 4179, 4180, 38, 1201, 1083, 76, 1201,
	3032, 3033, 3967, 4495, 75, 3967, 4425, 4476, 4475, 4473,
	4474, 74, 26, 63, 4491, 25, 210, 209, 208, 207,
	206, 4194, 205, 204, 4196, 4197, 1931, 203, 198, 197,
	202, 200, 4518, 199, 4509, 201, 196, 4516, 213, 4439,
	212, 218, 217, 216, 4520, 215, 214, 211, 4532, 220,
	1083, 195, 194, 193, 4530, 4493, 4531, 4517, 191, 187,
	186, 190, 192, 4536, 189, 188, 185, 219, 4528, 4529,
	4526, 161, 4524, 162, 4533, 71, 160, 159, 158, 157,
	156, 155, 154, 4443, 70, 24, 4444, 2, 4548, 1,
	4556, 4552, 4546, 4525, 4544, 4542, 4543, 0, 2066, 0,
	1205, 4420, 1205, 4555, 4423, 0, 0, 667, 4559, 4572,
	4557, 0, 4568, 0, 4574, 4576, 4573, 4563, 0, 4583,
	0, 0, 4343, 0, 0, 0, 4584, 4580, 259, 4579,
	259, 0, 0, 0, 259, 0, 0, 0, 0, 4597,
	0, 0, 0, 4596, 3151, 3152, 3153, 1464, 1265, 259,
	0, 259, 1203, 4599, 1203, 0, 259, 1464, 683, 0,
	0, 0, 0, 259, 1464, 4608, 4612, 0, 1909, 4606,
	1083, 1083, 4603, 4613, 0, 4605, 0, 4610, 1984, 1083,
	0, 1083, 1083, 4616, 0, 0, 0, 0, 0, 0,
	259, 4631, 4625, 4630, 0, 4629, 4636, 259, 4633, 4635,
	0, 4622, 4634, 0, 4628, 4632, 4439, 0, 0, 0,
	0, 4336, 4644, 4643, 0, 4575, 4639, 4577, 4646, 4651,
	0, 4648, 0, 4649, 0, 0, 4645, 4647, 0, 0,
	0, 4654, 0, 0, 0, 2993, 4656, 751, 1083, 4659,
	4655, 4661, 0, 1270, 4658, 4651, 4662, 4665, 4664, 4623,
	4624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1200, 0, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 0, 1199, 0, 1199, 0,
	0, 0, 0, 1201, 0, 1201, 0, 2819, 0, 3967,
	2051, 3967, 0, 2181, 0, 0, 0, 0, 0, 3754,
	0, 0, 0, 0, 0, 2895, 4660, 0, 0, 0,
	0, 0, 0, 0, 0, 2551, 2551, 0, 1940, 1940,
	2811, 2809, 0, 0, 0, 0, 0, 2813, 2815, 2805,
	0, 0, 0, 0, 1724, 1725, 0, 0, 0, 0,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 1940, 1940, 0, 3823, 3824, 3825, 0, 0, 0,
	0, 0, 0, 0, 1931, 1931, 0, 0, 0, 0,
	0, 1279, 259, 0, 0, 259, 0, 0, 0, 0,
	1726, 0, 1940, 0, 0, 849, 0, 0, 0, 0,
	1724, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2148, 0, 0, 0,
	0, 0, 0, 72, 1755, 852, 851, 1931, 1931, 1977,
	1977, 1727, 4505, 0, 0, 0, 0, 0, 259, 0,
	73, 0, 259, 0, 0, 0, 0, 259, 0, 2551,
	2551, 2551, 0, 259, 0, 0, 77, 0, 1931, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 259,
	0, 259, 0, 0, 0, 667, 0, 259, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 751,
	0, 1732, 2807, 859, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 2821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 259, 0,
	1265, 259, 0, 0, 2820, 2812, 2810, 2814, 2816, 2806,
	2808, 2822, 0, 853, 0, 751, 1754, 1756, 2818, 1977,
	0, 1977, 259, 0, 0, 0, 0, 104, 0, 2256,
	0, 0, 90, 101, 259, 259, 0, 259, 0, 259,
	0, 259, 0, 259, 0, 1977, 0, 1732, 0, 0,
	1977, 2825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2288, 0, 0, 2289,
	0, 2290, 0, 0, 0, 1747, 0, 0, 0, 0,
	3524, 3525, 2181, 259, 0, 0, 0, 0, 0, 91,
	0, 0, 1754, 1756, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 751, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 2352, 0, 0,
	1279, 0, 0, 0, 0, 2526, 2527, 2528, 2529, 2522,
	2523, 2524, 2525, 0, 1872, 0, 0, 0, 0, 0,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594,
	3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604,
	3605, 0, 3609, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 2826, 0, 0, 0, 0, 4088,
	0, 4090, 94, 2817, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 2457, 0, 2502, 2503, 2504, 2505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 1725, 0, 667, 2514,
	2515, 2516, 2517, 2510, 2511, 2512, 2513, 2518, 2519, 2520,
	2521, 0, 0, 259, 180, 97, 0, 100, 0, 1755,
	0, 0, 667, 0, 0, 1748, 1727, 0, 0, 259,
	0, 667, 0, 0, 0, 0, 0, 0, 1931, 0,
	0, 227, 0, 259, 0, 4135, 0, 0, 0, 854,
	0, 0, 1046, 0, 145, 0, 0, 0, 259, 1275,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 2625,
	0, 1746, 2498, 2499, 2500, 2501, 2506, 2507, 2508, 2509,
	1743, 0, 0, 0, 0, 0, 0, 0, 229, 1032,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 1275, 0, 683, 0,
	0, 0, 3128, 3129, 147, 3146, 3147, 3148, 2663, 0,
	0, 0, 0, 0, 259, 2551, 2551, 259, 0, 184,
	0, 259, 0, 259, 0, 3533, 0, 228, 1265, 4205,
	259, 259, 0, 1275, 1275, 2679, 0, 0, 0, 221,
	259, 0, 1749, 1750, 1751, 1752, 0, 0, 222, 0,
	0, 0, 1732, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 0, 0, 0, 0, 1446, 0, 0,
	850, 0, 0, 0, 0, 0, 0, 0, 3143, 0,
	0, 0, 0, 0, 0, 2720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 1754, 1756, 0,
	0, 2699, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 1741, 1742, 0, 0, 2551, 2551, 2551,
	2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551,
	2551, 2551, 2551, 2551, 2551, 2551, 0, 2551, 259, 0,
	0, 0, 0, 0, 0, 0, 1747, 3128, 3129, 0,
	3146, 3147, 3148, 0, 0, 0, 0, 1270, 0, 3134,
	0, 0, 0, 0, 259, 2837, 0, 0, 0, 0,
	3532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1464,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2720, 3149, 667, 3143, 0, 0, 0, 0, 1940, 0,
	0, 2907, 859, 0, 2720, 2720, 0, 0, 0, 0,
	0, 0, 1977, 0, 0, 0, 0, 1279, 1279, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3144, 1279, 0, 0, 0, 0, 1753,
	259, 1265, 259, 0, 0, 0, 1464, 0, 1464, 1275,
	259, 0, 0, 1265, 0, 1265, 0, 1265, 0, 0,
	1748, 0, 0, 0, 1931, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3134, 259, 259, 259, 259, 1265,
	0, 0, 1265, 0, 259, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 3149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 72, 0, 46, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 3145, 0, 0,
	0, 0, 73, 0, 0, 148, 0, 0, 3144, 0,
	0, 0, 0, 0, 0, 0, 1744, 1740, 77, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 67,
	0, 1940, 0, 0, 0, 0, 48, 0, 150, 0,
	0, 0, 0, 0, 1464, 0, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 47, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 68, 1046, 0, 0, 0, 1046, 0,
	51, 0, 0, 0, 0, 57, 0, 1931, 1290, 151,
	0, 0, 0, 0, 1427, 0, 0, 49, 1427, 104,
	0, 0, 0, 0, 90, 101, 0, 0, 0, 0,
	0, 1032, 0, 0, 0, 1032, 0, 0, 0, 3140,
	3141, 3142, 0, 0, 0, 0, 3139, 3137, 3138, 3130,
	3131, 3132, 3133, 3135, 3136, 0, 0, 0, 0, 0,
	0, 0, 3145, 52, 0, 0, 0, 3128, 3129, 0,
	3146, 3147, 3148, 0, 4116, 0, 1977, 0, 0, 0,
	1466, 91, 1472, 0, 1478, 0, 0, 0, 1977, 0,
	0, 1977, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 667, 0, 0, 3181,
	0, 667, 0, 0, 667, 0, 0, 667, 667, 0,
	0, 4157, 0, 667, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 3143, 0, 0, 0, 1977, 1566, 0,
	1571, 0, 3207, 1464, 0, 0, 0, 0, 0, 0,
	1580, 0, 1585, 0, 0, 0, 0, 3220, 0, 0,
	0, 0, 0, 0, 0, 1464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 3238, 0,
	259, 259, 1206, 0, 3140, 3141, 3142, 0, 0, 0,
	0, 3139, 3137, 3138, 3130, 3131, 3132, 3133, 3135, 3136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2720,
	2720, 259, 0, 3274, 94, 1647, 0, 0, 1653, 0,
	0, 0, 0, 2720, 3134, 0, 3289, 0, 0, 0,
	0, 53, 0, 0, 2720, 3289, 0, 2720, 3289, 0,
	0, 3289, 0, 0, 0, 56, 0, 0, 0, 0,
	59, 0, 0, 0, 259, 259, 3274, 0, 259, 69,
	0, 0, 0, 3150, 0, 58, 180, 97, 0, 100,
	0, 0, 0, 54, 0, 0, 0, 152, 3274, 4284,
	259, 0, 3347, 3347, 55, 1265, 3149, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	2720, 62, 3367, 2720, 3274, 0, 145, 2720, 2720, 3274,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 3144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	229, 1795, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 259, 3395, 0, 0, 3397, 2720, 0,
	0, 259, 0, 0, 1977, 259, 147, 1275, 0, 3220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2551,
	0, 184, 259, 72, 0, 0, 0, 2878, 0, 228,
	1265, 0, 259, 0, 0, 2720, 0, 667, 0, 0,
	73, 221, 0, 0, 2720, 0, 0, 0, 0, 0,
	222, 0, 0, 72, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 2878, 0, 0, 2878,
	73, 0, 183, 0, 0, 3, 2551, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 77, 0, 0, 0,
	0, 0, 1866, 1866, 1866, 0, 84, 0, 0, 0,
	3495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3145, 0, 0, 0, 0, 3501, 0, 0,
	1265, 259, 0, 259, 0, 0, 84, 0, 0, 1265,
	0, 0, 0, 853, 0, 0, 0, 0, 1724, 1725,
	0, 0, 1440, 0, 0, 1341, 0, 104, 0, 0,
	0, 0, 90, 101, 0, 0, 0, 0, 0, 259,
	0, 0, 1755, 853, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 90, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 1726, 0, 0, 1427, 0, 91,
	0, 0, 0, 0, 1746, 3565, 0, 0, 0, 3544,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2551, 0, 3560, 0, 1032, 91,
	0, 0, 0, 0, 3140, 3141, 3142, 0, 0, 0,
	0, 3139, 3137, 3138, 3130, 3131, 3132, 3133, 3135, 3136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 259, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 0, 0, 0, 0,
	1754, 1756, 94, 0, 0, 0, 667, 667, 0, 1206,
	0, 0, 0, 1206, 0, 0, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 1741, 1742, 1464, 1464,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	3651, 0, 1464, 1464, 1464, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 180, 97, 0, 100, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 3347, 0, 0, 0, 0,
	0, 227, 0, 0, 180, 97, 0, 100, 0, 854,
	0, 0, 0, 1206, 145, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 1206, 0, 0, 0, 0, 0, 0, 854,
	0, 751, 0, 0, 145, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3347, 0, 147, 0, 0, 0, 229, 0,
	0, 0, 0, 259, 0, 1206, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 3274, 1753, 259, 147, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 259, 0, 0, 0, 222, 184,
	0, 0, 0, 1748, 259, 0, 0, 228, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 259, 221,
	183, 0, 0, 259, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2720, 259, 0, 0, 0, 0, 0, 0,
	1560, 0, 2907, 2907, 1427, 0, 0, 0, 859, 859,
	2720, 0, 0, 0, 2878, 2878, 0, 0, 859, 2720,
	0, 0, 0, 0, 0, 0, 0, 2327, 0, 2331,
	0, 0, 0, 0, 0, 0, 2345, 0, 0, 0,
	259, 0, 0, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 0, 2394,
	0, 2396, 2397, 2398, 2399, 0, 0, 0, 0, 1744,
	1740, 1427, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 2423, 0, 0, 0, 0, 0, 0,
	0, 0, 3886, 0, 1795, 0, 0, 0, 2438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2468, 2471, 2474, 2477, 0, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 0, 0, 2547, 0, 2558,
	2560, 2565, 0, 0, 259, 0, 0, 0, 0, 0,
	1464, 0, 259, 1206, 0, 1206, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3921, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 1206, 0, 0, 0, 2720, 2720, 0, 3347, 0,
	0, 0, 0, 0, 0, 3931, 0, 2720, 0, 0,
	0, 0, 0, 0, 3969, 0, 3969, 1464, 0, 0,
	0, 0, 0, 0, 0, 2720, 0, 3289, 0, 0,
	0, 1464, 1464, 259, 3274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3274, 0, 259,
	3274, 0, 259, 0, 0, 72, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2720, 1206, 2720,
	259, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 1206, 0, 0, 0, 2720, 0, 1427, 0,
	0, 4042, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3969,
	0, 0, 1464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 853, 0, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 90, 101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 1206,
	0, 0, 0, 0, 0, 4108, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 2840, 2841, 0, 2843,
	0, 91, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2720, 4108, 3289, 0, 0,
	4149, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 4169, 0, 4169, 0, 0,
	0, 0, 2352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1265, 0,
	0, 1206, 0, 1206, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 3274, 0, 259, 0, 0, 0, 0,
	0, 1206, 1206, 0, 0, 0, 0, 0, 0, 0,
	2352, 0, 1206, 0, 4149, 0, 0, 0, 0, 0,
	0, 0, 2720, 2964, 1206, 0, 1206, 1206, 1206, 0,
	0, 0, 0, 0, 0, 4233, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 1464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3969,
	3969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 259, 0, 1777,
	1778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 97, 0, 100,
	3565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3347, 4298, 0, 0,
	4300, 3347, 4303, 227, 0, 0, 0, 0, 4149, 0,
	0, 854, 0, 0, 3015, 3016, 145, 0, 0, 0,
	3022, 0, 0, 0, 3969, 0, 0, 1944, 1944, 1206,
	0, 0, 0, 0, 0, 0, 3969, 0, 0, 3036,
	3037, 0, 0, 0, 0, 2438, 0, 0, 0, 0,
	229, 0, 0, 0, 3044, 0, 0, 259, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	3058, 0, 0, 0, 0, 0, 147, 4042, 0, 0,
	0, 1760, 1755, 0, 0, 0, 0, 3070, 0, 1727,
	3969, 184, 259, 3969, 0, 0, 0, 0, 1773, 228,
	0, 0, 0, 3289, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 1206, 0, 0, 0,
	222, 0, 0, 0, 1726, 0, 0, 0, 0, 1464,
	0, 1464, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 1558, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4397, 0, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 4404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 0,
	0, 4169, 0, 0, 259, 1206, 2565, 2565, 2565, 0,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 1427,
	0, 1866, 0, 2720, 0, 0, 0, 1079, 0, 3185,
	0, 1206, 0, 0, 1427, 1749, 1750, 1751, 1752, 0,
	0, 259, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3565, 0,
	0, 0, 0, 258, 258, 258, 0, 0, 0, 0,
	0, 1764, 0, 0, 1774, 0, 0, 1464, 0, 0,
	1754, 1756, 1046, 0, 0, 0, 1724, 1725, 0, 0,
	0, 788, 0, 0, 0, 0, 1046, 1770, 0, 1771,
	0, 0, 0, 0, 259, 0, 1741, 1742, 0, 0,
	1755, 0, 0, 0, 0, 788, 0, 1727, 0, 1032,
	0, 1206, 1206, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 1032, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 4149, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 1746, 1206, 0, 0, 0, 0, 0, 0,
	3308, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	2720, 1772, 0, 0, 0, 0, 1427, 3969, 0, 3969,
	0, 0, 1464, 0, 0, 0, 0, 1944, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 254, 254, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 1464, 1427, 0, 0, 0,
	0, 0, 0, 1749, 1750, 1751, 1752, 1202, 1206, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	2907, 0, 0, 0, 0, 0, 0, 0, 0, 2720,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 2907, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 0, 0, 1741, 1742, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1427,
	0, 0, 1427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 0, 3079, 0, 0, 0, 3080,
	0, 0, 2345, 0, 0, 0, 1427, 0, 3519, 3520,
	0, 0, 3523, 0, 0, 0, 3526, 0, 0, 0,
	0, 0, 0, 1427, 0, 3530, 0, 0, 0, 0,
	0, 0, 0, 0, 3537, 0, 0, 3185, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3549, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3572, 3573, 0, 3574, 3575, 3576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3582, 0, 0,
	0, 3584, 1755, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3612, 3613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	3624, 0, 0, 0, 1746, 0, 0, 1427, 0, 0,
	0, 0, 0, 1743, 0, 3633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 1206, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 3676, 0, 0, 0, 1732, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 3695, 0, 0, 0, 0,
	0, 0, 258, 0, 258, 258, 1206, 0, 258, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 1944, 3721, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 1206, 1206, 1741, 1742, 0, 0,
	0, 0, 0, 258, 0, 258, 258, 0, 0, 258,
	258, 0, 696, 0, 0, 0, 0, 0, 697, 0,
	0, 0, 788, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 699, 0,
	258, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 700,
	0, 0, 1866, 0, 258, 258, 1251, 0, 1251, 1251,
	0, 3818, 0, 0, 1206, 0, 1206, 0, 0, 719,
	0, 0, 1427, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 701, 0,
	1206, 0, 0, 0, 0, 1206, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 702, 1753, 1444, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 1206, 0, 1206, 0, 0,
	0, 1206, 703, 1748, 0, 704, 3864, 3865, 0, 0,
	0, 0, 3869, 3870, 0, 0, 0, 3873, 3874, 1206,
	258, 728, 0, 0, 3878, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 3882, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 718, 0, 1206, 0, 0,
	0, 3887, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1564, 1565,
	0, 0, 1206, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 1427, 713,
	0, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 696,
	0, 0, 1427, 0, 0, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 1206, 0, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 699, 0, 0, 0, 0,
	0, 725, 0, 706, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 700, 0, 0, 0,
	1427, 0, 0, 0, 1944, 0, 0, 0, 0, 0,
	0, 726, 0, 707, 0, 0, 719, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1944,
	727, 0, 0, 0, 0, 0, 0, 708, 702, 1427,
	0, 723, 724, 721, 0, 0, 0, 0, 1888, 716,
	1202, 0, 709, 0, 258, 0, 0, 0, 0, 703,
	0, 0, 704, 0, 0, 0, 0, 0, 0, 258,
	1888, 258, 0, 0, 0, 0, 788, 0, 728, 0,
	0, 1944, 1944, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 710, 0, 717, 0, 0, 0, 0,
	0, 0, 718, 0, 711, 0, 0, 0, 0, 0,
	258, 0, 1944, 0, 0, 0, 0, 258, 712, 0,
	0, 0, 1427, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 1206,
	1206, 4103, 4104, 4105, 0, 0, 0, 0, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 1427, 2345, 0, 0, 4114, 4115, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4123, 4126, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 0, 1904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1913, 0, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4170, 0, 0, 0, 1427, 0, 0,
	0, 4176, 0, 0, 1251, 0, 0, 0, 726, 0,
	707, 1444, 4183, 0, 0, 1032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 1427, 0,
	0, 0, 0, 0, 708, 0, 0, 0, 723, 724,
	721, 0, 258, 0, 0, 788, 716, 0, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 0, 0, 0, 0, 0,
	710, 0, 717, 0, 0, 0, 0, 0, 258, 0,
	0, 711, 258, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 258, 1206, 712, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 1206, 258,
	0, 258, 0, 0, 729, 0, 0, 258, 0, 1206,
	1206, 1206, 0, 0, 0, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 4308, 0, 0, 4311, 0, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 1206, 258, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 1046, 1046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 788, 258, 0, 258, 0, 258,
	0, 258, 0, 258, 0, 1032, 1032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2168, 0, 0, 0, 2175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2187, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2199, 0, 2199, 0, 0, 0, 0,
	0, 2206, 0, 0, 0, 0, 2345, 0, 0, 0,
	0, 0, 0, 0, 0, 4126, 0, 0, 0, 0,
	1046, 0, 0, 0, 0, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 1206, 1724, 1725,
	0, 1206, 2175, 1206, 0, 2231, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 1032, 0, 0,
	1092, 0, 1755, 0, 0, 0, 2251, 1206, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2264,
	0, 2266, 0, 2268, 0, 2270, 0, 2271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1206,
	0, 1206, 0, 0, 1726, 0, 260, 260, 260, 4472,
	4472, 4472, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 1206, 0, 1743, 0, 0, 0, 2293, 0, 0,
	0, 1206, 0, 1206, 260, 0, 1206, 0, 0, 0,
	0, 4494, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3521, 1206, 1206, 0, 0, 0,
	0, 0, 0, 1202, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 4472, 1749, 1750, 1751, 1752, 1202,
	0, 0, 0, 0, 1206, 1732, 0, 0, 0, 1206,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 1206, 1206, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 1741, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1206, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 258, 0, 0,
	0, 258, 0, 258, 0, 0, 0, 0, 1944, 1747,
	258, 258, 0, 0, 4472, 4617, 0, 0, 0, 0,
	258, 0, 0, 4621, 0, 0, 0, 0, 1206, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 2622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 1206, 1206, 0, 0, 258, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 2665, 0,
	0, 1251, 0, 0, 0, 1251, 0, 1251, 0, 0,
	0, 0, 0, 1748, 788, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 2187, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 1206, 1206, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769,
	258, 0, 258, 0, 0, 0, 0, 0, 0, 1206,
	258, 0, 1444, 0, 1760, 1755, 0, 0, 0, 0,
	0, 1206, 1727, 0, 0, 0, 0, 0, 0, 1744,
	1740, 1773, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 0, 258, 258, 258, 258, 0,
	0, 0, 0, 0, 258, 0, 258, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 2175, 1746, 0, 0,
	0, 0, 0, 0, 2187, 1206, 1743, 0, 1206, 0,
	0, 0, 1206, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 1206, 1206, 0, 258, 0, 0, 1724, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 2938, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2948, 0, 2951, 0, 1749, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 2976,
	1444, 2978, 1444, 0, 1764, 0, 0, 1774, 2984, 0,
	0, 0, 0, 1754, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 260, 260, 0,
	1770, 260, 1771, 1288, 0, 0, 0, 0, 0, 1741,
	1742, 1251, 0, 0, 3021, 0, 0, 0, 0, 3012,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 1747, 0, 0, 1732, 260, 1288, 260, 260,
	0, 1288, 260, 260, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 1288, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 1202, 0, 0, 0, 0,
	0, 1288, 0, 260, 260, 0, 1741, 1742, 0, 0,
	0, 1202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 1288, 260, 260, 0,
	0, 0, 1206, 0, 1206, 0, 0, 0, 0, 1747,
	1288, 1888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	258, 258, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 258, 258, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 1888, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 1738, 1739,
	1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 0, 0, 0, 2434, 0,
	1251, 0, 2435, 0, 1444, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1068, 106, 0, 788, 0, 3272, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 0, 3325, 3327,
	1724, 1725, 2187, 1757, 1758, 1759, 1767, 1768, 1769, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 1760, 1755, 258, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 1724, 1725, 0, 1726, 0, 1288, 0,
	0, 0, 260, 260, 260, 0, 1746, 0, 0, 260,
	0, 258, 0, 258, 0, 1743, 260, 1755, 0, 1288,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3408, 0, 0, 0, 3412,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 258,
	260, 0, 0, 1007, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 1288, 0, 1749, 1750, 1751,
	1752, 0, 0, 0, 0, 0, 1288, 1732, 0, 3464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 3014,
	0, 0, 0, 1764, 0, 0, 1774, 0, 0, 0,
	0, 0, 1754, 1756, 0, 0, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 3504, 0, 1444, 0, 1770,
	1732, 1771, 0, 0, 0, 0, 0, 0, 1741, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 3517, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 1202, 0, 0, 0, 0,
	0, 1741, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 260, 1288, 1288, 260, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 1761, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 260, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 260, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 1748, 0, 0, 0, 1288,
	0, 1288, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	1288, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 260, 0, 0, 260, 0, 0, 1753, 0, 0,
	0, 0, 1288, 0, 1288, 1288, 1288, 0, 0, 0,
	0, 0, 0, 258, 0, 260, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 260, 0,
	260, 0, 260, 258, 260, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 258, 0, 0, 260, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 1738, 1739, 1745,
	1766, 1744, 1740, 1202, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 3892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2187, 0, 1288, 106, 0, 3800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 1202, 1288, 3849, 0, 0, 106, 0, 106,
	0, 106, 0, 0, 0, 1888, 0, 0, 0, 0,
	0, 0, 0, 780, 0, 806, 260, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 808, 0, 780, 0, 0,
	0, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1027, 106, 106, 1888, 0, 1888, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 106, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 106, 260, 106,
	810, 0, 827, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 258, 0, 0, 0, 0, 260, 0, 0,
	260, 0, 0, 0, 260, 0, 260, 811, 0, 0,
	258, 0, 812, 260, 260, 0, 0, 0, 0, 1288,
	1288, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 0, 0, 0, 813, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1888,
	0, 0, 260, 0, 0, 814, 0, 0, 815, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 837,
	0, 0, 0, 0, 728, 0, 0, 3984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1007, 260, 1288, 2187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 836, 1288, 0,
	0, 0, 0, 260, 2187, 0, 0, 831, 0, 0,
	0, 0, 0, 0, 4059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 260, 818, 0, 0, 0,
	0, 0, 0, 260, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 0, 1889, 0, 106, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	260, 260, 0, 0, 0, 0, 0, 260, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 1888,
	1888, 0, 0, 0, 805, 0, 828, 0, 0, 1084,
	260, 0, 0, 0, 0, 820, 258, 258, 260, 0,
	0, 0, 4158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 0, 0,
	822, 840, 0, 839, 0, 0, 0, 823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2187,
	0, 824, 0, 0, 1888, 0, 832, 0, 0, 0,
	0, 0, 841, 0, 838, 0, 1888, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1888, 0, 258, 1888, 0, 0, 0, 0, 0, 0,
	4274, 1444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	1344, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 258, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4361, 1288, 0, 0,
	0, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 1027,
	0, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 0, 1288, 1288, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 260, 260, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 258, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 4414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 260, 0,
	1288, 260, 1286, 0, 0, 4449, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 1888, 0, 1888,
	0, 0, 1288, 260, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 1288, 0, 0, 0, 1007, 0, 0,
	1007, 1007, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 4510, 0,
	0, 0, 260, 1288, 0, 1288, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 1288, 260, 0,
	0, 0, 0, 0, 0, 2412, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 1288, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 0, 0,
	0, 0, 1288, 0, 260, 1288, 260, 0, 0, 0,
	0, 0, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 780, 1288,
	0, 0, 0, 0, 0, 780, 0, 0, 1286, 0,
	0, 0, 1287, 0, 0, 0, 1288, 0, 0, 0,
	0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1755, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 1345, 0, 0, 0,
	1345, 1773, 0, 0, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1286, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 1287, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 1344,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	1287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1287, 0, 0, 0, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 106, 0, 0, 106, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 1774, 0, 0,
	0, 0, 0, 1754, 1756, 1286, 1286, 0, 0, 106,
	0, 0, 106, 0, 0, 1344, 0, 0, 106, 0,
	1770, 0, 1771, 0, 0, 0, 0, 0, 0, 1741,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 1772, 1288, 260, 0, 1286, 0,
	1286, 0, 1286, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 260, 1286, 1286,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 1286,
	0, 260, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 1286, 1288, 1286, 1286, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 780, 1288, 1288, 1288,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2412, 0, 1748, 0, 0, 1288,
	0, 0, 0, 260, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 1738, 1739,
	1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 1287, 0, 0, 0, 0, 1288,
	0, 1288, 3535, 1344, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 1288, 0, 0, 1189, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 1189, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 260, 0, 0, 1288,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	1746, 1288, 260, 0, 1288, 260, 0, 0, 1344, 1743,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 0, 260, 0, 1287, 1287, 0, 0, 0,
	0, 0, 1288, 260, 0, 1345, 0, 1288, 0, 0,
	0, 1749, 1750, 1751, 1752, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 106, 0, 0, 106, 0, 0, 0, 1286, 1286,
	0, 0, 1288, 1288, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 1764, 0, 0,
	1774, 0, 0, 0, 0, 0, 1754, 1756, 0, 0,
	0, 0, 0, 106, 106, 0, 0, 106, 0, 0,
	1344, 0, 0, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 0, 0, 0, 1287, 0,
	1287, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 1287, 1287,
	0, 0, 0, 0, 0, 1747, 1288, 0, 1288, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 1287, 1287, 1287, 0, 0, 0, 0,
	0, 1344, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1189, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 1288, 260, 0,
	0, 0, 1288, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	1286, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 1288, 0, 1345, 1286, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 1765, 0, 0, 0, 260,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	260, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	1288, 0, 0, 1749, 1750, 1751, 1752, 0, 1345, 0,
	1288, 1288, 0, 1732, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1189, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 1774, 0, 0, 0, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 0, 0, 0, 0, 0, 1287, 1287,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1287, 0, 1344, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1287, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 1286,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 1763, 0,
	0, 0, 1286, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0,
	0, 0, 0, 0, 0, 1286, 0, 3082, 0, 0,
	0, 0, 1286, 0, 1286, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 1725, 1286, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 0, 1286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1755, 0,
	0, 106, 0, 0, 0, 1727, 0, 1189, 0, 0,
	0, 0, 0, 0, 1773, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 1286, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 1760, 1755, 1344, 0, 0, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1750, 1751, 1752, 1726, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 106, 0, 0, 0, 0, 1764, 0, 0,
	1774, 0, 0, 0, 0, 1344, 1754, 1756, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 1771, 0, 0, 1345, 0,
	0, 0, 1741, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 1750, 1751, 1752,
	1762, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1345, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 1774, 0, 1345, 0, 0,
	0, 1754, 1756, 0, 0, 0, 0, 1772, 0, 0,
	0, 1287, 1287, 0, 0, 0, 0, 0, 1770, 0,
	1771, 0, 0, 0, 0, 1761, 0, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	1747, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1287, 0, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2412, 1287, 0, 0, 0, 0,
	0, 0, 1287, 1753, 1287, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 1286, 0, 0, 1286, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 1287,
	1287, 0, 0, 0, 0, 3081, 0, 0, 0, 0,
	0, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 1286, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 1345, 0, 0, 0, 1286, 0,
	106, 1763, 0, 0, 1344, 0, 1738, 1739, 1745, 1766,
	1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 0, 0, 0, 0, 0, 1344, 0,
	3078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 1755, 0, 1345, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 106, 0, 1743, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 1345,
	1286, 0, 0, 1286, 0, 1764, 0, 0, 1774, 0,
	0, 0, 1344, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 1771, 0, 0, 0, 0, 0, 0,
	1741, 1742, 1286, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1762, 1286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 1747, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 1286, 1286, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 1287, 0, 0, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 1753, 1286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 1344, 0, 0, 1724, 1725, 0, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 1287, 1287, 1287, 0,
	0, 0, 0, 1765, 0, 0, 0, 1760, 1755, 0,
	0, 0, 0, 1287, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 1287, 0,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 1286, 0, 0, 0,
	1726, 1286, 1286, 0, 0, 0, 0, 0, 1345, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 3077, 0, 0, 0, 0, 0, 0,
	0, 1749, 1750, 1751, 1752, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	1345, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	1774, 0, 0, 0, 0, 0, 1754, 1756, 0, 0,
	0, 0, 0, 0, 1345, 0, 0, 0, 916, 0,
	962, 0, 0, 1770, 0, 1771, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 938, 0, 922, 921, 1747, 0, 0, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 1286,
	1287, 0, 0, 1287, 0, 0, 0, 0, 0, 1286,
	1286, 923, 1345, 0, 0, 0, 926, 0, 0, 0,
	0, 970, 0, 0, 0, 0, 1286, 1772, 0, 0,
	935, 936, 0, 0, 0, 0, 0, 0, 0, 952,
	0, 0, 1287, 1287, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 963, 928, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 1287, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1287, 1287, 1287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 931, 0, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 1765, 0, 0, 0, 0,
	0, 932, 933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 939, 0, 0, 0, 0, 0, 0, 934, 0,
	0, 0, 949, 0, 0, 1345, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 1345,
	0, 0, 0, 0, 0, 3076, 1287, 0, 0, 0,
	0, 1287, 1287, 927, 0, 0, 969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 925, 0,
	0, 0, 956, 957, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 1287, 0, 959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 0, 0,
	0, 0, 0, 0, 968, 950, 0, 943, 941, 0,
	946, 0, 0, 0, 0, 0, 947, 0, 0, 918,
	0, 965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 919, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 958, 0, 948, 0, 0, 0,
	0, 0, 945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 0, 0, 0, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	1287, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	1347, 276, 277, 1348, 1349, 1350, 1287, 1351, 609, 1352,
	1353, 1354, 1355, 278, 279, 1146, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 1356,
	614, 288, 289, 290, 291, 292, 293, 1357, 1358, 0,
	294, 615, 616, 617, 1359, 295, 296, 618, 1360, 1289,
	1361, 297, 298, 299, 300, 301, 302, 303, 0, 1362,
	305, 306, 307, 304, 308, 1363, 309, 0, 310, 311,
	312, 313, 314, 315, 1364, 316, 317, 318, 1147, 319,
	320, 1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322,
	323, 324, 0, 325, 619, 620, 1372, 329, 326, 327,
	1373, 330, 328, 1374, 331, 332, 333, 1375, 1376, 334,
	335, 336, 1377, 337, 338, 1378, 339, 340, 341, 1379,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 1380, 265, 1381, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 1382, 360, 1383, 1384, 1148, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 1385,
	372, 627, 1386, 628, 373, 1387, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 1150, 379, 380, 1388, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 1389, 1149, 388, 632, 633, 1390, 634, 1391, 390,
	391, 1151, 635, 1152, 392, 393, 394, 1153, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 1392, 402,
	404, 403, 1393, 405, 636, 1154, 406, 407, 1155, 1394,
	408, 0, 0, 0, 409, 410, 413, 1395, 1396, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 1156, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 1157, 442, 1397, 267, 1158, 452, 453, 1398, 637,
	454, 638, 456, 457, 1399, 0, 458, 0, 1400, 1401,
	460, 461, 462, 1402, 1403, 463, 464, 639, 1159, 465,
	1160, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 1404, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 1405,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 1406, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 1407, 514, 515, 516,
	1161, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 1408,
	537, 538, 536, 539, 540, 541, 1409, 542, 543, 526,
	527, 544, 545, 1162, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 1410, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	1411, 568, 569, 0, 565, 556, 1412, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 1413, 578, 650, 651,
	652, 653, 1414, 587, 1415, 579, 580, 581, 654, 582,
	655, 1416, 583, 584, 585, 586, 0, 588, 589, 1417,
	1418, 590, 591, 592, 594, 595, 593, 596, 1419, 597,
	1420, 0, 598, 599, 600, 656, 657, 658, 1421, 602,
	601, 603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605,
	660, 606, 607, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1342, 0,
	0, 0, 0, 0, 0, 0, 2600, 0, 0, 0,
	0, 0, 0, 0, 2601, 268, 270, 269, 271, 272,
	273, 274, 275, 1347, 276, 277, 1348, 1349, 1350, 0,
	1351, 609, 1352, 1353, 1354, 1355, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 1356, 614, 288, 289, 290, 291, 292, 293,
	1357, 1358, 0, 294, 615, 616, 617, 1359, 295, 296,
	618, 1360, 1289, 1361, 297, 298, 299, 300, 301, 302,
	303, 0, 1362, 305, 306, 307, 304, 308, 1363, 309,
	0, 310, 311, 312, 313, 314, 315, 1364, 316, 317,
	318, 1147, 319, 320, 1365, 1366, 1368, 1367, 1369, 1370,
	1371, 321, 322, 323, 324, 0, 325, 619, 620, 1372,
	329, 326, 327, 1373, 330, 328, 1374, 331, 332, 333,
	1375, 1376, 334, 335, 336, 1377, 337, 338, 1378, 339,
	340, 341, 1379, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 1380,
	265, 1381, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 1382, 360, 1383, 1384, 1148, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 1385, 372, 627, 1386, 628, 373, 1387, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 1150, 379,
	380, 1388, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 1389, 1149, 388, 632, 633, 1390,
	634, 1391, 390, 391, 1151, 635, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 1392, 402, 404, 403, 1393, 405, 636, 1154, 406,
	407, 1155, 1394, 408, 0, 0, 0, 409, 410, 413,
	1395, 1396, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1397, 267, 1158, 452,
	453, 1398, 637, 454, 638, 456, 457, 1399, 0, 458,
	0, 1400, 1401, 460, 461, 462, 1402, 1403, 463, 464,
	639, 1159, 465, 1160, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 1404, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 1405, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 1406, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 1407,
	514, 515, 516, 1161, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 1408, 537, 538, 536, 539, 540, 541, 1409,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 1410, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 1411, 568, 569, 0, 565, 556, 1412,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 1413,
	578, 650, 651, 652, 653, 1414, 587, 1415, 579, 580,
	581, 654, 582, 655, 1416, 583, 584, 585, 586, 0,
	588, 589, 1417, 1418, 590, 591, 592, 594, 595, 593,
	596, 1419, 597, 1420, 0, 598, 599, 600, 656, 657,
	658, 1421, 602, 601, 603, 659, 1422, 1423, 1424, 1425,
	1426, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 3543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3545, 268, 270, 269, 271,
	272, 273, 274, 275, 1347, 276, 277, 1348, 1349, 1350,
	0, 1351, 609, 1352, 1353, 1354, 1355, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 1356, 614, 288, 289, 290, 291, 292,
	293, 1357, 1358, 0, 294, 615, 616, 617, 1359, 295,
	296, 618, 1360, 1289, 1361, 297, 298, 299, 300, 301,
	302, 303, 0, 1362, 305, 306, 307, 304, 308, 1363,
	309, 0, 310, 311, 312, 313, 314, 315, 1364, 316,
	317, 318, 1147, 319, 320, 1365, 1366, 1368, 1367, 1369,
	1370, 1371, 321, 322, 323, 324, 0, 325, 619, 620,
	1372, 329, 326, 327, 1373, 330, 328, 1374, 331, 332,
	333, 1375, 1376, 334, 335, 336, 1377, 337, 338, 1378,
	339, 340, 341, 1379, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	1380, 265, 1381, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 1382, 360, 1383, 1384, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 1385, 372, 627, 1386, 628, 373, 1387,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 1150,
	379, 380, 1388, 381, 382, 383, 384, 0, 0, 0,
	266, 385, 386, 387, 389, 1389, 1149, 388, 632, 633,
	1390, 634, 1391, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 1392, 402, 404, 403, 1393, 405, 636, 1154,
	406, 407, 1155, 1394, 408, 0, 0, 0, 409, 410,
	413, 1395, 1396, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 1397, 267, 1158,
	452, 453, 1398, 637, 454, 638, 456, 457, 1399, 0,
	458, 0, 1400, 1401, 460, 461, 462, 1402, 1403, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 1404, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 1405, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 1406,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	1407, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 1408, 537, 538, 536, 539, 540, 541,
	1409, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 1410, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 1411, 568, 569, 0, 565, 556,
	1412, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	1413, 578, 650, 651, 652, 653, 1414, 587, 1415, 579,
	580, 581, 654, 582, 655, 1416, 583, 584, 585, 586,
	0, 588, 589, 1417, 1418, 590, 591, 592, 594, 595,
	593, 596, 1419, 597, 1420, 0, 598, 599, 600, 656,
	657, 658, 1421, 602, 601, 603, 659, 1422, 1423, 1424,
	1425, 1426, 604, 605, 660, 606, 607, 608, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3920, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4109, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3993, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3850, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3561, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3393, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2458, 268, 270, 269, 271, 272, 273, 274, 275, 1347,
	276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352, 1353,
	1354, 1355, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 1356, 614,
	288, 289, 290, 291, 292, 293, 1357, 1358, 0, 294,
	615, 616, 617, 1359, 295, 296, 618, 1360, 1289, 1361,
	297, 298, 299, 300, 301, 302, 303, 0, 1362, 305,
	306, 307, 304, 308, 1363, 309, 0, 310, 311, 312,
	313, 314, 315, 1364, 316, 317, 318, 1147, 319, 320,
	1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322, 323,
	324, 0, 325, 619, 620, 1372, 329, 326, 327, 1373,
	330, 328, 1374, 331, 332, 333, 1375, 1376, 334, 335,
	336, 1377, 337, 338, 1378, 339, 340, 341, 1379, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 1380, 265, 1381, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	1382, 360, 1383, 1384, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 1385, 372,
	627, 1386, 628, 373, 1387, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 1150, 379, 380, 1388, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	1389, 1149, 388, 632, 633, 1390, 634, 1391, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1392, 402, 404,
	403, 1393, 405, 636, 1154, 406, 407, 1155, 1394, 408,
	0, 0, 0, 409, 410, 413, 1395, 1396, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1397, 267, 1158, 452, 453, 1398, 637, 454,
	638, 456, 457, 1399, 0, 458, 0, 1400, 1401, 460,
	461, 462, 1402, 1403, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 1404, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 1405, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 1406, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 1407, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 1408, 537,
	538, 536, 539, 540, 541, 1409, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 1410, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 1411,
	568, 569, 0, 565, 556, 1412, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 1413, 578, 650, 651, 652,
	653, 1414, 587, 1415, 579, 580, 581, 654, 582, 655,
	1416, 583, 584, 585, 586, 0, 588, 589, 1417, 1418,
	590, 591, 592, 594, 595, 593, 596, 1419, 597, 1420,
	0, 598, 599, 600, 656, 657, 658, 1421, 602, 601,
	603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605, 660,
	606, 607, 608, 1438, 0, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2149, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	1347, 276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352,
	1353, 1354, 1355, 278, 279, 1146, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 1356,
	614, 288, 289, 290, 291, 292, 293, 1357, 1358, 0,
	294, 615, 616, 617, 1359, 295, 296, 618, 1360, 1289,
	1361, 297, 298, 299, 300, 301, 302, 303, 0, 1362,
	305, 306, 307, 304, 308, 1363, 309, 0, 310, 311,
	312, 313, 314, 315, 1364, 316, 317, 318, 1147, 319,
	320, 1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322,
	323, 324, 0, 325, 619, 620, 1372, 329, 326, 327,
	1373, 330, 328, 1374, 331, 332, 333, 1375, 1376, 334,
	335, 336, 1377, 337, 338, 1378, 339, 340, 341, 1379,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 1380, 265, 1381, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 1382, 360, 1383, 1384, 1148, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 1385,
	372, 627, 1386, 628, 373, 1387, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 1150, 379, 380, 1388, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 1389, 1149, 388, 632, 633, 1390, 634, 1391, 390,
	391, 1151, 635, 1152, 392, 393, 394, 1153, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 1392, 402,
	404, 403, 1393, 405, 636, 1154, 406, 407, 1155, 1394,
	408, 0, 0, 0, 409, 410, 413, 1395, 1396, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 1156, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 1157, 442, 1397, 267, 1158, 452, 453, 1398, 637,
	454, 638, 456, 457, 1399, 0, 458, 0, 1400, 1401,
	460, 461, 462, 1402, 1403, 463, 464, 639, 1159, 465,
	1160, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 1404, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 1405,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 1406, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 1407, 514, 515, 516,
	1161, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 1408,
	537, 538, 536, 539, 540, 541, 1409, 542, 543, 526,
	527, 544, 545, 1162, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 1410, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	1411, 568, 569, 0, 565, 556, 1412, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 1413, 578, 650, 651,
	652, 653, 1414, 587, 1415, 579, 580, 581, 654, 582,
	655, 1416, 583, 584, 585, 586, 0, 588, 589, 1417,
	1418, 590, 591, 592, 594, 595, 593, 596, 1419, 597,
	1420, 0, 598, 599, 600, 656, 657, 658, 1421, 602,
	601, 603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605,
	660, 606, 607, 608, 1339, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 1347, 276, 277, 1348, 1349, 1350, 0, 1351, 609,
	1352, 1353, 1354, 1355, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	1356, 614, 288, 289, 290, 291, 292, 293, 1357, 1358,
	0, 294, 615, 616, 617, 1359, 295, 296, 618, 1360,
	1289, 1361, 297, 298, 299, 300, 301, 302, 303, 0,
	1362, 305, 306, 307, 304, 308, 1363, 309, 0, 310,
	311, 312, 313, 314, 315, 1364, 316, 317, 318, 1147,
	319, 320, 1365, 1366, 1368, 1367, 1369, 1370, 1371, 321,
	322, 323, 324, 0, 325, 619, 620, 1372, 329, 326,
	327, 1373, 330, 328, 1374, 331, 332, 333, 1375, 1376,
	334, 335, 336, 1377, 337, 338, 1378, 339, 340, 341,
	1379, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 1380, 265, 1381,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 1382, 360, 1383, 1384, 1148, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	1385, 372, 627, 1386, 628, 373, 1387, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 1150, 379, 380, 1388,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 1389, 1149, 388, 632, 633, 1390, 634, 1391,
	390, 391, 1151, 635, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 1392,
	402, 404, 403, 1393, 405, 636, 1154, 406, 407, 1155,
	1394, 408, 0, 0, 0, 409, 410, 413, 1395, 1396,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1397, 267, 1158, 452, 453, 1398,
	637, 454, 638, 456, 457, 1399, 0, 458, 0, 1400,
	1401, 460, 461, 462, 1402, 1403, 463, 464, 639, 1159,
	465, 1160, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 1404, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	1405, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 1406, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 1407, 514, 515,
	516, 1161, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	1408, 537, 538, 536, 539, 540, 541, 1409, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 1410, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 1411, 568, 569, 0, 565, 556, 1412, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 1413, 578, 650,
	651, 652, 653, 1414, 587, 1415, 579, 580, 581, 654,
	582, 655, 1416, 583, 584, 585, 586, 0, 588, 589,
	1417, 1418, 590, 591, 592, 594, 595, 593, 596, 1419,
	597, 1420, 0, 598, 599, 600, 656, 657, 658, 1421,
	602, 601, 603, 659, 1422, 1423, 1424, 1425, 1426, 604,
	605, 660, 606, 607, 608, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	1347, 276, 277, 1348, 1349, 1350, 0, 1351, 609, 1352,
	1353, 1354, 1355, 278, 279, 1146, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 1356,
	614, 288, 289, 290, 291, 292, 293, 1357, 1358, 0,
	294, 615, 616, 617, 1359, 295, 296, 618, 1360, 1289,
	1361, 297, 298, 299, 300, 301, 302, 303, 0, 1362,
	305, 306, 307, 304, 308, 1363, 309, 0, 310, 311,
	312, 313, 314, 315, 1364, 316, 317, 318, 1147, 319,
	320, 1365, 1366, 1368, 1367, 1369, 1370, 1371, 321, 322,
	323, 324, 0, 325, 619, 620, 1372, 329, 326, 327,
	1373, 330, 328, 1374, 331, 332, 333, 1375, 1376, 334,
	335, 336, 1377, 337, 338, 1378, 339, 340, 341, 1379,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 1380, 265, 1381, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 1382, 360, 1383, 1384, 1148, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 1385,
	372, 627, 1386, 628, 373, 1387, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 1150, 379, 380, 1388, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 1389, 1149, 388, 632, 633, 1390, 634, 1391, 390,
	391, 1151, 635, 1152, 392, 393, 394, 1153, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 1392, 402,
	404, 403, 1393, 405, 636, 1154, 406, 407, 1155, 1394,
	408, 0, 0, 0, 409, 410, 413, 1395, 1396, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 1156, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 1157, 442, 1397, 267, 1158, 452, 453, 1398, 637,
	454, 638, 456, 457, 1399, 0, 458, 0, 1400, 1401,
	460, 461, 462, 1402, 1403, 463, 464, 639, 1159, 465,
	1160, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 1404, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 1405,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 1406, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 1407, 514, 515, 516,
	1161, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 1408,
	537, 538, 536, 539, 540, 541, 1409, 542, 543, 526,
	527, 544, 545, 1162, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 1410, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	1411, 568, 569, 0, 565, 556, 1412, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 1413, 578, 650, 651,
	652, 653, 1414, 587, 1415, 579, 580, 581, 654, 582,
	655, 1416, 583, 584, 585, 586, 0, 588, 589, 1417,
	1418, 590, 591, 592, 594, 595, 593, 596, 1419, 597,
	1420, 0, 598, 599, 600, 656, 657, 658, 1421, 602,
	601, 603, 659, 1422, 1423, 1424, 1425, 1426, 604, 605,
	660, 606, 607, 608, 2433, 0, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 2430, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 2431, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 2429,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 2432, 0, 0, 0, 0, 0, 0, 1066,
	2428, 0, 1028, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 227, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 229, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 1556, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 221, 604, 605, 660,
	606, 607, 608, 1041, 0, 222, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1799, 1797, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 227, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 229, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	1556, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 221, 604, 605, 660, 606, 607, 608, 1041,
	0, 222, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 1799, 3034, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	227, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 229, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 1556, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 221, 604,
	605, 660, 606, 607, 608, 1041, 0, 222, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1799,
	1797, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 2561, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 2566, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 2562,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 2563, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 2478, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 2476, 0, 2475, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 2473, 0, 2472, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	2470, 0, 2469, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 2467, 0,
	1649, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 1648, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 1031, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 1045, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 1066, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 4426, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 1045,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 2347, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 2346, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 1066, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 1045, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1066, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 4186, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 1045, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 3812,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1867, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 0, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 3539, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1066, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1867, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	0, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 2566, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 1066, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 1797, 0, 2571, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	0, 0, 2569, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	2557, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 2546, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 2544, 1064, 2535, 2542,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 2538, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 2539, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 2540, 423, 2537, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 2541, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 2536, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 2532, 1064, 2535, 2542, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 2538, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	2539, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 2540, 423, 2537, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 2541,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 2536, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 1805, 0, 1066, 0, 0, 0, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 2326, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 1654, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 1586, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	0, 0, 1581, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	1572, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 1567, 1064,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 1480, 1064, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1479, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 1474, 1064, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1473, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 0, 0, 0, 0, 0, 0, 0, 1066,
	0, 0, 1467, 1064, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	1291, 1064, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1082, 1054,
	1055, 1056, 1052, 1053, 1065, 1066, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1066, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 4471,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 4470, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 1035, 1036,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 4469, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 1039, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 4471, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 1043, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 1040, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 1038, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 4470, 589, 0, 1044, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1041,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 1035, 1036, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 1066, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	1039, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	4128, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 1043, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 4129, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 1040, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 4127, 1050, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 1038, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 1044, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 1041, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1082, 1054, 1055, 1056, 3001, 3002, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 1158, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 588, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1041, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 0, 0, 0, 0, 0, 1035, 1036, 1082, 1054,
	1055, 1056, 2999, 3000, 1065, 1066, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1106, 1070, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 1119, 0, 286, 1126,
	287, 1125, 0, 1136, 288, 289, 290, 291, 292, 293,
	1072, 1105, 1039, 294, 1166, 1167, 617, 0, 295, 296,
	1112, 0, 1093, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 1096, 1094, 1095, 1102, 1098, 1097,
	1101, 321, 322, 323, 324, 1129, 325, 1123, 1122, 1043,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 1114, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 1049, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 1137, 1138, 355, 1061,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 1121,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 1134, 1135, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 1144, 0, 1071, 373, 0, 374,
	375, 376, 377, 378, 1107, 1108, 1111, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 1149, 388, 1116, 1117, 0,
	1077, 0, 390, 391, 1151, 1109, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 1145, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	1100, 1099, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 1040, 267, 1158, 452,
	453, 1062, 1110, 454, 1124, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 1139, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 1140, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 1120, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 1050, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1103,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 1118, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 1165, 559, 560, 561, 562, 563,
	1141, 566, 567, 0, 568, 569, 1038, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 1130, 1131, 1132, 1133, 0, 587, 0, 579, 580,
	581, 1142, 582, 1143, 1060, 583, 584, 585, 586, 0,
	588, 589, 0, 1044, 590, 591, 592, 594, 595, 593,
	596, 1104, 597, 0, 0, 598, 599, 600, 656, 1127,
	1164, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1041, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 1035, 1036, 1082, 1054, 1055, 1056, 1052, 1053,
	1065, 1066, 0, 0, 0, 1064, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1106, 1070, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 1119, 0, 286, 1126, 287, 1125, 0, 1136,
	288, 289, 290, 291, 292, 293, 1072, 1105, 1039, 294,
	1166, 1167, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 1129, 325, 1123, 1122, 1043, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 1114,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 1049, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 1061, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 1121, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 1134, 1135, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 1071, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 1116, 1117, 0, 1077, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 1040, 267, 1158, 452, 453, 1062, 1110, 454,
	1124, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 1120,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 1050, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 1118,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	1165, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 1038, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 1130, 1131, 1132,
	1133, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	1060, 583, 584, 585, 586, 0, 588, 589, 0, 1044,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 1127, 1164, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1041, 0, 0, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 2334, 2335,
	1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 1070, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 1119, 0,
	286, 1126, 287, 1125, 0, 1136, 288, 289, 290, 291,
	292, 293, 1072, 1105, 0, 294, 1166, 1167, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 1129, 325, 1123,
	1122, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 1114, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 1049, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 1061, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 1121, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 1134, 1135, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 1071, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 1116,
	1117, 0, 1077, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 267,
	1158, 452, 453, 1062, 1110, 454, 1124, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 1120, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	1050, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 1118, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 1165, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 1130, 1131, 1132, 1133, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 1060, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 1127, 1164, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 2554, 0, 0,
	0, 0, 0, 0, 2552, 2553, 1082, 1054, 1055, 1056,
	1052, 1053, 1065, 1066, 0, 0, 0, 1064, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1106,
	1070, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 1119, 0, 286, 1126, 287, 1125,
	0, 1136, 288, 289, 290, 291, 292, 293, 1072, 1105,
	0, 294, 1166, 1167, 617, 0, 295, 296, 1112, 0,
	1093, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321,
	322, 323, 324, 1129, 325, 1123, 1122, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 1114, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 1049, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 1137, 1138, 355, 1061, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 1121, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 1134,
	1135, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 1144, 0, 1071, 373, 0, 374, 375, 376,
	377, 378, 1107, 1108, 1111, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 266, 385, 386,
	387, 389, 0, 1149, 388, 1116, 1117, 0, 1077, 0,
	390, 391, 1151, 1109, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 1145, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 1100, 1099,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 0, 267, 1158, 452, 453, 1062,
	1110, 454, 1124, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 1139, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 1140, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 1120, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 2994, 2995, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 1103, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 1118, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 1165, 559, 560, 561, 562, 563, 1141, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 1130,
	1131, 1132, 1133, 0, 587, 0, 579, 580, 581, 1142,
	582, 1143, 1060, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 1104,
	597, 0, 0, 598, 599, 600, 656, 1127, 1164, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 2046, 1082, 1054, 1055, 1056, 1052, 1053, 1065, 1066,
	0, 0, 0, 1064, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1106, 1070, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 0,
	1119, 0, 286, 1126, 287, 1125, 0, 1136, 288, 289,
	290, 291, 292, 293, 1072, 1105, 1039, 294, 1166, 1167,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 4471, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 1129,
	325, 1123, 1122, 1043, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 1114, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 1049,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 1061, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 1121, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 1134, 1135, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	1071, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 1116, 1117, 0, 1077, 0, 390, 391, 0, 1109,
	0, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	1040, 267, 0, 452, 453, 1062, 1110, 454, 1124, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 1120, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 1050, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 1118, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 1165, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	1038, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 1130, 1131, 1132, 1133, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 1060, 583,
	584, 585, 586, 0, 4470, 589, 0, 1044, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 1127, 1164, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 1204, 0, 0, 1035, 1036, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 0, 1064,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 1105, 0, 294, 615,
	616, 617, 0, 295, 296, 1112, 0, 1093, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 1096,
	1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 1137, 1138, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 1144,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 1107,
	1108, 1111, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	1149, 388, 632, 633, 0, 634, 0, 390, 391, 1151,
	1109, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 1190, 402, 404, 403,
	0, 405, 1145, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 1100, 1099, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 267, 1158, 452, 453, 0, 1110, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 1196, 460, 461,
	462, 0, 0, 463, 464, 639, 1159, 465, 1160, 1139,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 1140, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 1198, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 227, 537, 538,
	536, 539, 540, 541, 1103, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 1141, 566, 567, 0, 568,
	569, 0, 565, 556, 229, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 1142, 582, 1143, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 1104, 597, 0, 0,
	598, 599, 600, 1556, 657, 658, 0, 602, 601, 603,
	659, 0, 1204, 0, 0, 221, 604, 605, 660, 606,
	607, 608, 0, 0, 222, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 1194, 1106, 1891, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 1105, 0, 294, 615, 616,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 632, 633, 0, 634, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 1190, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	0, 267, 1158, 452, 453, 0, 1110, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 1196, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 1198, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 227, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	0, 565, 556, 229, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 1556, 657, 658, 0, 602, 601, 603, 659,
	0, 3178, 0, 1204, 221, 604, 605, 660, 606, 607,
	608, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 1194, 0, 1891, 1106, 0, 0, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 1105, 0, 294, 615,
	616, 617, 0, 295, 296, 1112, 0, 1093, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 1096,
	1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 1137, 1138, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 1144,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 1107,
	1108, 1111, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	1149, 388, 632, 633, 0, 634, 0, 390, 391, 1151,
	1109, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 1190, 402, 404, 403,
	0, 405, 1145, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 1100, 1099, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 267, 1158, 452, 453, 0, 1110, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 1196, 460, 461,
	462, 0, 0, 463, 464, 639, 1159, 465, 1160, 1139,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 1140, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 1198, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 1103, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 1141, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 1142, 582, 1143, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 1104, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 0, 1186, 0, 1204, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 1194, 0, 1192, 1106, 0, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 1105, 0, 294,
	615, 616, 617, 0, 295, 296, 1112, 0, 1093, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 1137, 1138, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	1144, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	1107, 1108, 1111, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 1149, 388, 632, 633, 0, 634, 0, 390, 391,
	1151, 1109, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 1190, 402, 404,
	403, 0, 405, 1145, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 1100, 1099, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 0, 267, 1158, 452, 453, 0, 1110, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 1196, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	1139, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 1140, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 1198, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 1103, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 1141, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 1142, 582, 1143,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 1104, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 0, 602, 601,
	603, 659, 0, 1204, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 1194, 1106, 1192, 0, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 1105, 0, 294, 615,
	616, 617, 0, 295, 296, 1112, 0, 1093, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 1096,
	1094, 1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 1137, 1138, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 1144,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 1107,
	1108, 1111, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	1149, 388, 632, 633, 0, 634, 0, 390, 391, 1151,
	1109, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 1190, 402, 404, 403,
	0, 405, 1145, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 1100, 1099, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 267, 1158, 452, 453, 0, 1110, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 1196, 460, 461,
	462, 0, 0, 463, 464, 639, 1159, 465, 1160, 1139,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 1140, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 1198, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 1103, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 1141, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 1142, 582, 1143, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 1104, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 0, 1204, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 1194, 1106, 1192, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 1105, 0, 294, 615, 616,
	617, 0, 295, 296, 1112, 0, 1093, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 1096, 1094,
	1095, 1102, 1098, 1097, 1101, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	1137, 1138, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 1144, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1107, 1108,
	1111, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 1149,
	388, 632, 633, 0, 634, 0, 390, 391, 1151, 1109,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 1145, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 1100, 1099, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	0, 267, 1158, 452, 453, 0, 1110, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 1139, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 1140, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 1103, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 1141, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 1142, 582, 1143, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 1104, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1204, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1106, 0, 3968, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 1105, 0, 294, 615, 616, 617, 0,
	295, 296, 1112, 0, 1093, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 1096, 1094, 1095, 1102,
	1098, 1097, 1101, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 1137, 1138,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 1144, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1107, 1108, 1111, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 1109, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 1145,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 1100, 1099, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 267,
	1158, 452, 453, 0, 1110, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 1139, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 1140,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 1198, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 1103, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 1141, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 1142, 582, 1143, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 1104, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 0, 1028,
	0, 1284, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 1790, 609, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 1289, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 635, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	0, 1158, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 227, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 229, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 1556, 657, 658, 0, 602, 601, 603, 659, 0,
	1553, 0, 1284, 221, 604, 605, 660, 606, 607, 608,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 183, 609, 0, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 1289, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 1149,
	388, 632, 633, 0, 634, 0, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	0, 0, 1158, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 227, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 229, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 1556, 657, 658, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 221, 604, 605, 660, 606, 607,
	608, 0, 0, 222, 0, 0, 0, 0, 0, 1284,
	1283, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 1289, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1147, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 1150,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 1149, 388, 632, 633,
	0, 634, 0, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 1154,
	406, 407, 1155, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 0, 0, 1158,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 1284, 1283, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	1289, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 1149, 388, 632, 633, 0, 634, 0,
	390, 391, 1151, 635, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 0, 0, 1158, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 0,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 1283, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3458,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 1289, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	1149, 388, 632, 633, 0, 634, 0, 390, 391, 1151,
	635, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 0, 1158, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 1159, 465, 1160, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 2226, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 2141, 0, 0, 0, 0, 2142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1578, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 1289, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 635, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 2140, 404, 403, 0, 405, 636,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 0,
	1158, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 1284, 1283, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 1146, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 1289, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1147, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 1148, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 1150, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 1149, 388, 632, 633, 0, 634,
	0, 390, 391, 1151, 635, 1152, 392, 393, 394, 1153,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 1154, 406, 407,
	1155, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	1156, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 1157, 442, 0, 0, 1158, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	1159, 465, 1160, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 1161, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 1162, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 1204, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1106, 0,
	1562, 0, 0, 278, 279, 1146, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 1105, 0,
	294, 615, 616, 617, 0, 295, 296, 1112, 0, 1093,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1147, 319,
	320, 1096, 1094, 1095, 1102, 1098, 1097, 1101, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 1137, 1138, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 1148, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 1144, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 1107, 1108, 1111, 455, 1150, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 0, 1149, 388, 632, 633, 0, 634, 0, 390,
	391, 1151, 1109, 1152, 392, 393, 394, 1153, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 1145, 1154, 406, 407, 1155, 0,
	408, 0, 0, 0, 409, 410, 413, 1100, 1099, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 1156, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 1157, 442, 0, 267, 1158, 452, 453, 0, 1110,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 1159, 465,
	1160, 1139, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 1140, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	1161, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 1103, 542, 543, 526,
	527, 544, 545, 1162, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 1141, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 1142, 582,
	1143, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 1104, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 0, 602,
	601, 603, 659, 1028, 0, 262, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 0, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 227,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 229, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 1556, 657, 658, 0, 602,
	601, 603, 659, 262, 0, 0, 0, 221, 604, 605,
	660, 606, 607, 608, 0, 0, 222, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 183, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 267, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 262, 2908, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 1905, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 262, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 4626, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	0, 442, 0, 267, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 0, 602, 601,
	603, 659, 0, 262, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 3409, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 267, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 0, 262, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 1550, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 2896, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 0, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 3564, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 0, 871, 0, 779,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 2217, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 786, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 869, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	266, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 267, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	784, 570, 571, 572, 573, 574, 785, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 0, 777, 0,
	779, 0, 604, 605, 660, 606, 607, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 789, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 786, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 784, 570, 571, 572, 573, 574, 785, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 1942, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	0, 1948, 0, 286, 1938, 287, 1954, 0, 1961, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 1964,
	1965, 0, 0, 295, 296, 0, 0, 1289, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	1129, 325, 1952, 1951, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 1114, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 1950, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 1959, 1960, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 0, 374, 375, 376, 377, 378, 0,
	0, 0, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	1149, 388, 1945, 1946, 0, 1941, 0, 390, 391, 1151,
	0, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 0, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 0, 1158, 452, 453, 0, 0, 454, 1953,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 0, 1159, 465, 1160, 0,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 1935, 478, 479, 480, 1936, 481,
	482, 483, 0, 484, 0, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 1949, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 0, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 1947, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 1963,
	559, 560, 561, 562, 563, 0, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 1955, 1956, 1957, 1958,
	0, 587, 0, 579, 580, 581, 0, 582, 0, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 0, 1939, 1962, 0, 602, 601, 603,
	779, 0, 0, 0, 0, 0, 604, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	1929, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 786, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 784, 570, 571, 572, 573, 574, 785, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 779, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 789, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 786, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 2260, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 2261, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 784,
	570, 571, 572, 573, 574, 785, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 2262, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 0, 2011, 0, 1284,
	1978, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 789, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 1289, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1147, 319, 320, 0, 0, 0, 0, 0,
	0, 1975, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 1150,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 1149, 388, 632, 633,
	0, 634, 0, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 1154,
	406, 407, 1155, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 0, 0, 1158,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	1976, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 1972, 0, 1284,
	1978, 0, 604, 605, 660, 606, 607, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 1289, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1147, 319, 320, 0, 0, 0, 0, 0,
	0, 1975, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 1150,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 1149, 388, 632, 633,
	0, 634, 0, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 1154,
	406, 407, 1155, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 0, 0, 1158,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	1976, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 779, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 786, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 267, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 1968, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 784, 570, 571, 572, 573, 574, 785,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 1967, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	779, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 789, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 786, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 1921,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 784, 570, 571, 572, 573, 574, 785, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 1920,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1284, 1978,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 789, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 1146, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 1289, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1147, 319, 320, 0, 0, 0, 0, 0, 0,
	1975, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 1148, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 1150, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 1149, 388, 632, 633, 0,
	634, 0, 390, 391, 1151, 635, 1152, 392, 393, 394,
	1153, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 1154, 406,
	407, 1155, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 1156, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 1157, 442, 0, 0, 1158, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 1159, 465, 1160, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 1161, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 1976,
	542, 543, 526, 527, 544, 545, 1162, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 1284, 1283, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 1146, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 1289, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1147, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 1148, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 1150, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 1149, 388, 632, 633, 0, 634,
	0, 390, 391, 1151, 635, 1152, 392, 393, 394, 1153,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 1154, 406, 407,
	1155, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	1156, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 1157, 442, 0, 0, 1158, 452, 453,
	3755, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	1159, 465, 1160, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 1161, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 1162, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 1284, 1283, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 1146, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	1289, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1147,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 265, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 1148, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 1150, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 1149, 388, 632, 633, 0, 634, 0,
	390, 391, 1151, 635, 1152, 392, 393, 394, 1153, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 1154, 406, 407, 1155,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 1156,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 1157, 442, 0, 0, 1158, 452, 453, 3380,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 1159,
	465, 1160, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 1161, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 1162, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	266, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 267, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 0, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 1606, 0,
	1284, 1283, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 789, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	1146, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 1289, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1147, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 1605, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	1148, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	1150, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 1149, 388, 632,
	633, 0, 634, 0, 390, 391, 1151, 635, 1152, 392,
	393, 394, 1153, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	1154, 406, 407, 1155, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 1156, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 1157, 442, 0, 0,
	1158, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 1159, 465, 1160, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 1604, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 1161, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	1603, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 1162, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 1524,
	0, 1284, 1283, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 1289, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 1523, 630, 631,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 635, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	0, 1158, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	1485, 0, 1284, 1283, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 1289, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 1149,
	388, 632, 633, 0, 634, 0, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	0, 0, 1158, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 1453, 0, 1284, 1283, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 1289, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 1452,
	630, 631, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	1149, 388, 632, 633, 0, 634, 0, 390, 391, 1151,
	635, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 0, 1158, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 1159, 465, 1160, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 1278, 0, 1284, 1283, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 1146, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 1289, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1147, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 1148, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	1277, 630, 631, 455, 1150, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 389,
	0, 1149, 388, 632, 633, 0, 634, 0, 390, 391,
	1151, 635, 1152, 392, 393, 394, 1153, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 1154, 406, 407, 1155, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 1156, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	1157, 442, 0, 0, 1158, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 1159, 465, 1160,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 1161,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 1162, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1284, 1283, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 1146, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 1289, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1147, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 1148, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 1150, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	1149, 388, 632, 633, 0, 634, 0, 390, 391, 1151,
	635, 1152, 392, 393, 394, 1153, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 1154, 406, 407, 1155, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 1156, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 1157,
	442, 0, 0, 1158, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 1159, 465, 1160, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 1161, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 1162, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 1284, 1978, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 1146, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 1289, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 1147, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 2018, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 1148, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 1150, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 1149, 388,
	632, 633, 0, 634, 0, 390, 391, 1151, 635, 1152,
	392, 393, 394, 1153, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 1154, 406, 407, 1155, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 1156, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 1157, 442, 0,
	0, 1158, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 1159, 465, 1160, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 1161, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 1162,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 1284,
	1283, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 1146,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 1289, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1147, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 265, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 1148,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 1150,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 1149, 388, 632, 633,
	0, 634, 0, 390, 391, 1151, 635, 1152, 392, 393,
	394, 1153, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 1154,
	406, 407, 1155, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 1156, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 1157, 442, 0, 0, 1158,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 1159, 465, 1160, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 1161, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 1162, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 1284, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 1146, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 1289, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1147, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 1148, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 1150, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 1149,
	388, 632, 633, 0, 634, 0, 390, 391, 1151, 635,
	1152, 392, 393, 394, 1153, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 1154, 406, 407, 1155, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 1156, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 1157, 442,
	0, 0, 1158, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 1159, 465, 1160, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 1161, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	1162, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 2721, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 2718, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	2725, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 2921, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 2724, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 2918, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	2920, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 2917, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 2723,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	2919, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 2721, 295, 296,
	618, 0, 0, 2715, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 2718, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 2725, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 2724, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 2714, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 2723, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 2722, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1676, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 1679, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 1677,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 1678, 601, 603, 659, 1431, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1433, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 1196, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1428, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1430, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 1196, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 1335, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1337, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 1196, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 692, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 691,
	273, 274, 275, 681, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 684, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 685, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 686, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 680, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 681, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 684, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 685, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 686, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	267, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 1196, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 262, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	3334, 442, 0, 267, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 0, 602, 601,
	603, 659, 2866, 0, 262, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	2865, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	0, 442, 0, 267, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 0, 602, 601,
	603, 659, 2232, 0, 262, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	0, 442, 0, 267, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 262, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 266, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 267, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 2174, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 2180, 0, 262, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 2179, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 266, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 267, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 2167, 0, 262, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 2169, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 266, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 267, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	262, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 2137, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 1196, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1528, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1527, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1448, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1441, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1443, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1268, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1267, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1258, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1257, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1255, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1254, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 1250, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 1249, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 662, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 0, 602, 601, 603, 659, 253, 0,
	262, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 265, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 266, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 267,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 265, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 266, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 267, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 3681, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 629, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 3682, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	3684, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 3685, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 3680, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 684, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 685, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 686, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 2269, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 265, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 266, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 267, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	2267, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 265, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 266, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 267, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 2265, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	265, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 266,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 267, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 265, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 2186, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 266, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	267, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 262, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 265, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	1997, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 266, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	0, 442, 0, 267, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 262, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 265,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 1991, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 266, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 267, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	0, 602, 601, 603, 659, 858, 0, 262, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 0,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 629, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	857, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 0, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 856, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	262, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 2921, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 629, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 4033, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 3938,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 3940, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 749, 0, 262, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 1305, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 1303, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 750, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 746, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 1306, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 745, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 749, 0, 262, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 1305, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 1303, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 750, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 746, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 1306, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 745, 651, 652, 653,
	0, 587, 0, 579, 1304, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 671, 0, 262, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 670, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 629,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 669, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 0, 602, 601, 603,
	659, 262, 2908, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 262,
	4043, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 4302, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 0, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 4297,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 3723,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 2606, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 0, 602, 601, 603, 659, 262,
	2908, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 629, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 2905, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 2242, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	2230, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	749, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 739, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 750, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 746, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 1561, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 745, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1534, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1533, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1518, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1516, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1512, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1489, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1487, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1450, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1436, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1273, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1272, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 0, 602, 601, 603, 659,
	1264, 0, 262, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 1263, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 529, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	1217, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 0, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 542, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 755, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 749, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 739,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 737,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 738, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	750, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 740, 521,
	0, 522, 523, 529, 530, 524, 525, 746, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 741, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 745, 651, 652, 653, 0, 587, 0, 579, 743,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 731, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 732, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 694, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 688, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 0, 602, 601, 603, 659, 666, 0, 262, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 629, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 498, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 262, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 0, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 373, 0, 374, 375, 376, 377, 378,
	3428, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	0, 442, 0, 0, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 521, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 262, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 610, 611, 0, 286, 612, 287,
	613, 0, 614, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 615, 616, 617, 0, 295, 296, 618,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 0, 325, 619, 620, 0, 329,
	326, 327, 0, 330, 328, 0, 331, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 0, 339, 340,
	341, 0, 342, 343, 621, 344, 345, 346, 348, 350,
	347, 351, 352, 353, 354, 622, 623, 355, 0, 0,
	0, 0, 0, 0, 0, 356, 357, 358, 624, 0,
	0, 0, 359, 0, 360, 0, 0, 0, 361, 362,
	625, 626, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 627, 0, 628, 373, 0, 374, 375,
	376, 377, 378, 3374, 630, 631, 455, 0, 379, 380,
	0, 381, 382, 383, 384, 0, 0, 0, 0, 385,
	386, 387, 389, 0, 0, 388, 632, 633, 0, 634,
	0, 390, 391, 0, 635, 0, 392, 393, 394, 0,
	395, 0, 0, 0, 396, 397, 398, 399, 400, 401,
	0, 402, 404, 403, 0, 405, 636, 0, 406, 407,
	0, 0, 408, 0, 0, 0, 409, 410, 413, 0,
	0, 411, 412, 414, 415, 0, 416, 417, 419, 422,
	418, 420, 421, 423, 436, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 0, 437,
	0, 439, 440, 441, 446, 448, 449, 444, 445, 447,
	450, 451, 443, 0, 442, 0, 0, 0, 452, 453,
	0, 637, 454, 638, 456, 457, 0, 0, 458, 0,
	0, 0, 460, 461, 462, 0, 0, 463, 464, 639,
	0, 465, 0, 640, 466, 467, 459, 468, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 477, 641, 478,
	479, 480, 642, 481, 482, 483, 643, 484, 644, 485,
	486, 0, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 495, 645, 496, 498, 497, 499, 0, 500, 0,
	501, 502, 503, 0, 0, 0, 0, 504, 0, 506,
	507, 508, 509, 505, 510, 511, 512, 513, 0, 514,
	515, 516, 0, 517, 518, 519, 520, 646, 521, 0,
	522, 523, 529, 530, 524, 525, 531, 532, 533, 534,
	535, 0, 537, 538, 536, 539, 540, 541, 0, 542,
	543, 526, 527, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 647, 0, 552, 0, 553, 554, 555, 557,
	528, 558, 564, 648, 559, 560, 561, 562, 563, 649,
	566, 567, 0, 568, 569, 0, 565, 556, 0, 570,
	571, 572, 573, 574, 575, 576, 349, 577, 0, 578,
	650, 651, 652, 653, 0, 587, 0, 579, 580, 581,
	654, 582, 655, 0, 583, 584, 585, 586, 0, 588,
	589, 0, 0, 590, 591, 592, 594, 595, 593, 596,
	0, 597, 0, 0, 598, 599, 600, 656, 657, 658,
	262, 602, 601, 603, 659, 0, 0, 0, 0, 0,
	604, 605, 660, 606, 607, 608, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 610, 611, 0,
	286, 612, 287, 613, 0, 614, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 615, 616, 617, 0,
	295, 296, 618, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 324, 0, 325, 619,
	620, 0, 329, 326, 327, 0, 330, 328, 0, 331,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	0, 339, 340, 341, 0, 342, 343, 621, 344, 345,
	346, 348, 350, 347, 351, 352, 353, 354, 622, 623,
	355, 0, 0, 0, 0, 0, 0, 0, 356, 357,
	358, 624, 0, 0, 0, 359, 0, 360, 0, 0,
	0, 361, 362, 625, 626, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 627, 0, 628, 373,
	0, 374, 375, 376, 377, 378, 3301, 630, 631, 455,
	0, 379, 380, 0, 381, 382, 383, 384, 0, 0,
	0, 0, 385, 386, 387, 389, 0, 0, 388, 632,
	633, 0, 634, 0, 390, 391, 0, 635, 0, 392,
	393, 394, 0, 395, 0, 0, 0, 396, 397, 398,
	399, 400, 401, 0, 402, 404, 403, 0, 405, 636,
	0, 406, 407, 0, 0, 408, 0, 0, 0, 409,
	410, 413, 0, 0, 411, 412, 414, 415, 0, 416,
	417, 419, 422, 418, 420, 421, 423, 436, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	438, 0, 437, 0, 439, 440, 441, 446, 448, 449,
	444, 445, 447, 450, 451, 443, 0, 442, 0, 0,
	0, 452, 453, 0, 637, 454, 638, 456, 457, 0,
	0, 458, 0, 0, 0, 460, 461, 462, 0, 0,
	463, 464, 639, 0, 465, 0, 640, 466, 467, 459,
	468, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	477, 641, 478, 479, 480, 642, 481, 482, 483, 643,
	484, 644, 485, 486, 0, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 495, 645, 496, 498, 497, 499,
	0, 500, 0, 501, 502, 503, 0, 0, 0, 0,
	504, 0, 506, 507, 508, 509, 505, 510, 511, 512,
	513, 0, 514, 515, 516, 0, 517, 518, 519, 520,
	646, 521, 0, 522, 523, 529, 530, 524, 525, 531,
	532, 533, 534, 535, 0, 537, 538, 536, 539, 540,
	541, 0, 542, 543, 526, 527, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 647, 0, 552, 0, 553,
	554, 555, 557, 528, 558, 564, 648, 559, 560, 561,
	562, 563, 649, 566, 567, 0, 568, 569, 0, 565,
	556, 0, 570, 571, 572, 573, 574, 575, 576, 349,
	577, 0, 578, 650, 651, 652, 653, 0, 587, 0,
	579, 580, 581, 654, 582, 655, 0, 583, 584, 585,
	586, 0, 588, 589, 0, 0, 590, 591, 592, 594,
	595, 593, 596, 0, 597, 0, 0, 598, 599, 600,
	656, 657, 658, 262, 602, 601, 603, 659, 0, 0,
	0, 0, 0, 604, 605, 660, 606, 607, 608, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	610, 611, 0, 286, 612, 287, 613, 0, 614, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 615,
	616, 617, 0, 295, 296, 618, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 324,
	0, 325, 619, 620, 0, 329, 326, 327, 0, 330,
	328, 0, 331, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 0, 339, 340, 341, 0, 342, 343,
	621, 344, 345, 346, 348, 350, 347, 351, 352, 353,
	354, 622, 623, 355, 0, 0, 0, 0, 0, 0,
	0, 356, 357, 358, 624, 0, 0, 0, 359, 0,
	360, 0, 0, 0, 361, 362, 625, 626, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 627,
	0, 628, 373, 0, 374, 375, 376, 377, 378, 3299,
	630, 631, 455, 0, 379, 380, 0, 381, 382, 383,
	384, 0, 0, 0, 0, 385, 386, 387, 389, 0,
	0, 388, 632, 633, 0, 634, 0, 390, 391, 0,
	635, 0, 392, 393, 394, 0, 395, 0, 0, 0,
	396, 397, 398, 399, 400, 401, 0, 402, 404, 403,
	0, 405, 636, 0, 406, 407, 0, 0, 408, 0,
	0, 0, 409, 410, 413, 0, 0, 411, 412, 414,
	415, 0, 416, 417, 419, 422, 418, 420, 421, 423,
	436, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 0, 437, 0, 439, 440, 441,
	446, 448, 449, 444, 445, 447, 450, 451, 443, 0,
	442, 0, 0, 0, 452, 453, 0, 637, 454, 638,
	456, 457, 0, 0, 458, 0, 0, 0, 460, 461,
	462, 0, 0, 463, 464, 639, 0, 465, 0, 640,
	466, 467, 459, 468, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 477, 641, 478, 479, 480, 642, 481,
	482, 483, 643, 484, 644, 485, 486, 0, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 495, 645, 496,
	498, 497, 499, 0, 500, 0, 501, 502, 503, 0,
	0, 0, 0, 504, 0, 506, 507, 508, 509, 505,
	510, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	518, 519, 520, 646, 521, 0, 522, 523, 529, 530,
	524, 525, 531, 532, 533, 534, 535, 0, 537, 538,
	536, 539, 540, 541, 0, 542, 543, 526, 527, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 647, 0,
	552, 0, 553, 554, 555, 557, 528, 558, 564, 648,
	559, 560, 561, 562, 563, 649, 566, 567, 0, 568,
	569, 0, 565, 556, 0, 570, 571, 572, 573, 574,
	575, 576, 349, 577, 0, 578, 650, 651, 652, 653,
	0, 587, 0, 579, 580, 581, 654, 582, 655, 0,
	583, 584, 585, 586, 0, 588, 589, 0, 0, 590,
	591, 592, 594, 595, 593, 596, 0, 597, 0, 0,
	598, 599, 600, 656, 657, 658, 262, 602, 601, 603,
	659, 0, 0, 0, 0, 0, 604, 605, 660, 606,
	607, 608, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 610, 611, 0, 286, 612, 287, 613,
	0, 614, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 615, 616, 617, 0, 295, 296, 618, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 0, 325, 619, 620, 0, 329, 326,
	327, 0, 330, 328, 0, 331, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 0, 339, 340, 341,
	0, 342, 343, 621, 344, 345, 346, 348, 350, 347,
	351, 352, 353, 354, 622, 623, 355, 0, 0, 0,
	0, 0, 0, 0, 356, 357, 358, 624, 0, 0,
	0, 359, 0, 360, 0, 0, 0, 361, 362, 625,
	626, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 627, 0, 628, 373, 0, 374, 375, 376,
	377, 378, 3284, 630, 631, 455, 0, 379, 380, 0,
	381, 382, 383, 384, 0, 0, 0, 0, 385, 386,
	387, 389, 0, 0, 388, 632, 633, 0, 634, 0,
	390, 391, 0, 635, 0, 392, 393, 394, 0, 395,
	0, 0, 0, 396, 397, 398, 399, 400, 401, 0,
	402, 404, 403, 0, 405, 636, 0, 406, 407, 0,
	0, 408, 0, 0, 0, 409, 410, 413, 0, 0,
	411, 412, 414, 415, 0, 416, 417, 419, 422, 418,
	420, 421, 423, 436, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 438, 0, 437, 0,
	439, 440, 441, 446, 448, 449, 444, 445, 447, 450,
	451, 443, 0, 442, 0, 0, 0, 452, 453, 0,
	637, 454, 638, 456, 457, 0, 0, 458, 0, 0,
	0, 460, 461, 462, 0, 0, 463, 464, 639, 0,
	465, 0, 640, 466, 467, 459, 468, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 477, 641, 478, 479,
	480, 642, 481, 482, 483, 643, 484, 644, 485, 486,
	0, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	495, 645, 496, 498, 497, 499, 0, 500, 0, 501,
	502, 503, 0, 0, 0, 0, 504, 0, 506, 507,
	508, 509, 505, 510, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 518, 519, 520, 646, 521, 0, 522,
	523, 529, 530, 524, 525, 531, 532, 533, 534, 535,
	0, 537, 538, 536, 539, 540, 541, 0, 542, 543,
	526, 527, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 647, 0, 552, 0, 553, 554, 555, 557, 528,
	558, 564, 648, 559, 560, 561, 562, 563, 649, 566,
	567, 0, 568, 569, 0, 565, 556, 0, 570, 571,
	572, 573, 574, 575, 576, 349, 577, 0, 578, 650,
	651, 652, 653, 0, 587, 0, 579, 580, 581, 654,
	582, 655, 0, 583, 584, 585, 586, 0, 588, 589,
	0, 0, 590, 591, 592, 594, 595, 593, 596, 0,
	597, 0, 0, 598, 599, 600, 656, 657, 658, 262,
	602, 601, 603, 659, 0, 0, 0, 0, 0, 604,
	605, 660, 606, 607, 608, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 610, 611, 0, 286,
	612, 287, 613, 0, 614, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 615, 616, 617, 0, 295,
	296, 618, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 324, 0, 325, 619, 620,
	0, 329, 326, 327, 0, 330, 328, 0, 331, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 0,
	339, 340, 341, 0, 342, 343, 621, 344, 345, 346,
	348, 350, 347, 351, 352, 353, 354, 622, 623, 355,
	0, 0, 0, 0, 0, 0, 0, 356, 357, 358,
	624, 0, 0, 0, 359, 0, 360, 0, 0, 0,
	361, 362, 625, 626, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 627, 0, 628, 373, 0,
	374, 375, 376, 377, 378, 2876, 630, 631, 455, 0,
	379, 380, 0, 381, 382, 383, 384, 0, 0, 0,
	0, 385, 386, 387, 389, 0, 0, 388, 632, 633,
	0, 634, 0, 390, 391, 0, 635, 0, 392, 393,
	394, 0, 395, 0, 0, 0, 396, 397, 398, 399,
	400, 401, 0, 402, 404, 403, 0, 405, 636, 0,
	406, 407, 0, 0, 408, 0, 0, 0, 409, 410,
	413, 0, 0, 411, 412, 414, 415, 0, 416, 417,
	419, 422, 418, 420, 421, 423, 436, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	0, 437, 0, 439, 440, 441, 446, 448, 449, 444,
	445, 447, 450, 451, 443, 0, 442, 0, 0, 0,
	452, 453, 0, 637, 454, 638, 456, 457, 0, 0,
	458, 0, 0, 0, 460, 461, 462, 0, 0, 463,
	464, 639, 0, 465, 0, 640, 466, 467, 459, 468,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 477,
	641, 478, 479, 480, 642, 481, 482, 483, 643, 484,
	644, 485, 486, 0, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 495, 645, 496, 498, 497, 499, 0,
	500, 0, 501, 502, 503, 0, 0, 0, 0, 504,
	0, 506, 507, 508, 509, 505, 510, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 518, 519, 520, 646,
	521, 0, 522, 523, 529, 530, 524, 525, 531, 532,
	533, 534, 535, 0, 537, 538, 536, 539, 540, 541,
	0, 542, 543, 526, 527, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 647, 0, 552, 0, 553, 554,
	555, 557, 528, 558, 564, 648, 559, 560, 561, 562,
	563, 649, 566, 567, 0, 568, 569, 0, 565, 556,
	0, 570, 571, 572, 573, 574, 575, 576, 349, 577,
	0, 578, 650, 651, 652, 653, 0, 587, 0, 579,
	580, 581, 654, 582, 655, 0, 583, 584, 585, 586,
	0, 588, 589, 0, 0, 590, 591, 592, 594, 595,
	593, 596, 0, 597, 0, 0, 598, 599, 600, 656,
	657, 658, 262, 602, 601, 603, 659, 0, 0, 0,
	0, 0, 604, 605, 660, 606, 607, 608, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 610,
	611, 0, 286, 612, 287, 613, 0, 614, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 615, 616,
	617, 0, 295, 296, 618, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 324, 0,
	325, 619, 620, 0, 329, 326, 327, 0, 330, 328,
	0, 331, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 0, 342, 343, 621,
	344, 345, 346, 348, 350, 347, 351, 352, 353, 354,
	622, 623, 355, 0, 0, 0, 0, 0, 0, 0,
	356, 357, 358, 624, 0, 0, 0, 359, 0, 360,
	0, 0, 0, 361, 362, 625, 626, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 627, 0,
	628, 373, 0, 374, 375, 376, 377, 378, 629, 630,
	631, 455, 0, 379, 380, 0, 381, 382, 383, 384,
	0, 0, 0, 0, 385, 386, 387, 389, 0, 0,
	388, 632, 633, 0, 634, 0, 390, 391, 0, 635,
	0, 392, 393, 394, 0, 395, 0, 0, 0, 396,
	397, 398, 399, 400, 401, 0, 402, 404, 403, 0,
	405, 636, 0, 406, 407, 0, 0, 408, 0, 0,
	0, 409, 410, 413, 0, 0, 411, 412, 414, 415,
	0, 416, 417, 419, 422, 418, 420, 421, 423, 436,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 438, 0, 437, 0, 439, 440, 441, 446,
	448, 449, 444, 445, 447, 450, 451, 443, 0, 442,
	0, 0, 0, 452, 453, 0, 637, 454, 638, 456,
	457, 0, 0, 458, 0, 0, 0, 460, 461, 462,
	0, 0, 463, 464, 639, 0, 465, 0, 640, 466,
	467, 459, 468, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 477, 641, 478, 479, 480, 642, 481, 482,
	483, 643, 484, 644, 485, 486, 0, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 495, 645, 496, 498,
	497, 499, 0, 500, 0, 501, 502, 503, 0, 0,
	0, 0, 504, 0, 506, 507, 508, 509, 505, 510,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 518,
	519, 520, 646, 521, 0, 522, 523, 732, 530, 524,
	525, 531, 532, 533, 534, 535, 0, 537, 538, 536,
	539, 540, 541, 0, 542, 543, 526, 527, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 647, 0, 552,
	0, 553, 554, 555, 557, 528, 558, 564, 648, 559,
	560, 561, 562, 563, 649, 566, 567, 0, 568, 569,
	0, 565, 556, 0, 570, 571, 572, 573, 574, 575,
	576, 349, 577, 0, 578, 650, 651, 652, 653, 0,
	587, 0, 579, 580, 581, 654, 582, 655, 0, 583,
	584, 585, 586, 0, 588, 589, 0, 0, 590, 591,
	592, 594, 595, 593, 596, 0, 597, 0, 0, 598,
	599, 600, 656, 657, 658, 262, 602, 601, 603, 659,
	0, 0, 0, 0, 0, 604, 605, 660, 606, 607,
	608, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 609, 0,
	2204, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 610, 611, 0, 286, 612, 287, 613, 0,
	614, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 615, 616, 617, 0, 295, 296, 618, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 324, 0, 325, 619, 620, 0, 329, 326, 327,
	0, 330, 328, 0, 331, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 0, 339, 340, 341, 0,
	342, 343, 621, 344, 345, 346, 348, 350, 347, 351,
	352, 353, 354, 622, 623, 355, 0, 0, 0, 0,
	0, 0, 0, 356, 357, 358, 624, 0, 0, 0,
	359, 0, 360, 0, 0, 0, 361, 362, 625, 626,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 627, 0, 628, 373, 0, 374, 375, 376, 377,
	378, 629, 630, 631, 455, 0, 379, 380, 0, 381,
	382, 383, 384, 0, 0, 0, 0, 385, 386, 387,
	389, 0, 0, 388, 632, 633, 0, 634, 0, 390,
	391, 0, 635, 0, 392, 393, 394, 0, 395, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 0, 402,
	404, 403, 0, 405, 636, 0, 406, 407, 0, 0,
	408, 0, 0, 0, 409, 410, 413, 0, 0, 411,
	412, 414, 415, 0, 416, 417, 419, 422, 418, 420,
	421, 423, 436, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 0, 437, 0, 439,
	440, 441, 446, 448, 449, 444, 445, 447, 450, 451,
	443, 0, 442, 0, 0, 0, 452, 453, 0, 637,
	454, 638, 456, 457, 0, 0, 458, 0, 0, 0,
	460, 461, 462, 0, 0, 463, 464, 639, 0, 465,
	0, 640, 466, 467, 459, 468, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 477, 641, 478, 479, 480,
	642, 481, 482, 483, 643, 484, 644, 485, 486, 0,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 495,
	645, 496, 498, 497, 499, 0, 500, 0, 501, 502,
	503, 0, 0, 0, 0, 504, 0, 506, 507, 508,
	509, 505, 510, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 518, 519, 520, 646, 521, 0, 522, 523,
	529, 530, 524, 525, 531, 532, 533, 534, 535, 0,
	537, 538, 536, 539, 540, 541, 0, 0, 543, 526,
	527, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	647, 0, 552, 0, 553, 554, 555, 557, 528, 558,
	564, 648, 559, 560, 561, 562, 563, 649, 566, 567,
	0, 568, 569, 0, 565, 556, 0, 570, 571, 572,
	573, 574, 575, 576, 349, 577, 0, 578, 650, 651,
	652, 653, 0, 587, 0, 579, 580, 581, 654, 582,
	655, 0, 583, 584, 585, 586, 0, 588, 589, 0,
	0, 590, 591, 592, 594, 595, 593, 596, 0, 597,
	0, 0, 598, 599, 600, 656, 657, 658, 262, 602,
	601, 603, 659, 0, 0, 0, 0, 0, 604, 605,
	660, 606, 607, 608, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 610, 611, 0, 286, 612,
	287, 613, 0, 614, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 615, 616, 617, 0, 295, 296,
	618, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 324, 0, 325, 619, 620, 0,
	329, 326, 327, 0, 330, 328, 0, 331, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 0, 339,
	340, 341, 0, 342, 343, 621, 344, 345, 346, 348,
	350, 347, 351, 352, 353, 354, 622, 623, 355, 0,
	0, 0, 0, 0, 0, 0, 356, 357, 358, 624,
	0, 0, 0, 359, 0, 360, 0, 0, 0, 361,
	362, 625, 626, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 627, 0, 628, 373, 0, 374,
	375, 376, 377, 378, 1235, 630, 631, 455, 0, 379,
	380, 0, 381, 382, 383, 384, 0, 0, 0, 0,
	385, 386, 387, 389, 0, 0, 388, 632, 633, 0,
	634, 0, 390, 391, 0, 635, 0, 392, 393, 394,
	0, 395, 0, 0, 0, 396, 397, 398, 399, 400,
	401, 0, 402, 404, 403, 0, 405, 636, 0, 406,
	407, 0, 0, 408, 0, 0, 0, 409, 410, 413,
	0, 0, 411, 412, 414, 415, 0, 416, 417, 419,
	422, 418, 420, 421, 423, 436, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 438, 0,
	437, 0, 439, 440, 441, 446, 448, 449, 444, 445,
	447, 450, 451, 443, 0, 442, 0, 0, 0, 452,
	453, 0, 637, 454, 638, 456, 457, 0, 0, 458,
	0, 0, 0, 460, 461, 462, 0, 0, 463, 464,
	639, 0, 465, 0, 640, 466, 467, 459, 468, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 477, 641,
	478, 479, 480, 642, 481, 482, 483, 643, 484, 644,
	485, 486, 0, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 495, 645, 496, 498, 497, 499, 0, 500,
	0, 501, 502, 503, 0, 0, 0, 0, 504, 0,
	506, 507, 508, 509, 505, 510, 511, 512, 513, 0,
	514, 515, 516, 0, 517, 518, 519, 520, 646, 521,
	0, 522, 523, 529, 530, 524, 525, 531, 532, 533,
	534, 535, 0, 537, 538, 536, 539, 540, 541, 0,
	542, 543, 526, 527, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 647, 0, 552, 0, 553, 554, 555,
	557, 528, 558, 564, 648, 559, 560, 561, 562, 563,
	649, 566, 567, 0, 568, 569, 0, 565, 556, 0,
	570, 571, 572, 573, 574, 575, 576, 349, 577, 0,
	578, 650, 651, 652, 653, 0, 587, 0, 579, 580,
	581, 654, 582, 655, 0, 583, 584, 585, 586, 0,
	588, 589, 0, 0, 590, 591, 592, 594, 595, 593,
	596, 0, 597, 0, 0, 598, 599, 600, 656, 657,
	658, 262, 602, 601, 603, 659, 0, 0, 0, 0,
	0, 604, 605, 660, 606, 607, 608, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 610, 611,
	0, 286, 612, 287, 613, 0, 614, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 615, 616, 617,
	0, 295, 296, 618, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 324, 0, 325,
	619, 620, 0, 329, 326, 327, 0, 330, 328, 0,
	331, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 0, 339, 340, 341, 0, 342, 343, 621, 344,
	345, 346, 348, 350, 347, 351, 352, 353, 354, 622,
	623, 355, 0, 0, 0, 0, 0, 0, 0, 356,
	357, 358, 624, 0, 0, 0, 359, 0, 360, 0,
	0, 0, 361, 362, 625, 626, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 627, 0, 628,
	373, 0, 374, 375, 376, 377, 378, 629, 630, 631,
	455, 0, 379, 380, 0, 381, 382, 383, 384, 0,
	0, 0, 0, 385, 386, 387, 389, 0, 0, 388,
	632, 633, 0, 634, 0, 390, 391, 0, 635, 0,
	392, 393, 394, 0, 395, 0, 0, 0, 396, 397,
	398, 399, 400, 401, 0, 402, 404, 403, 0, 405,
	636, 0, 406, 407, 0, 0, 408, 0, 0, 0,
	409, 410, 413, 0, 0, 411, 412, 414, 415, 0,
	416, 417, 419, 422, 418, 420, 421, 423, 436, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 0, 437, 0, 439, 440, 441, 446, 448,
	449, 444, 445, 447, 450, 451, 443, 0, 442, 0,
	0, 0, 452, 453, 0, 637, 454, 638, 456, 457,
	0, 0, 458, 0, 0, 0, 460, 461, 462, 0,
	0, 463, 464, 639, 0, 465, 0, 640, 466, 467,
	459, 468, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 477, 641, 478, 479, 480, 642, 481, 482, 483,
	643, 484, 644, 485, 486, 0, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 495, 645, 496, 1169, 497,
	499, 0, 500, 0, 501, 502, 503, 0, 0, 0,
	0, 504, 0, 506, 507, 508, 509, 505, 510, 511,
	512, 513, 0, 514, 515, 516, 0, 517, 518, 519,
	520, 646, 521, 0, 522, 523, 529, 530, 524, 525,
	531, 532, 533, 534, 535, 0, 537, 538, 536, 539,
	540, 541, 0, 542, 543, 526, 527, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 647, 0, 552, 0,
	553, 554, 555, 557, 528, 558, 564, 648, 559, 560,
	561, 562, 563, 649, 566, 567, 0, 568, 569, 0,
	565, 556, 0, 570, 571, 572, 573, 574, 575, 576,
	349, 577, 0, 578, 650, 651, 652, 653, 0, 587,
	0, 579, 580, 581, 654, 582, 655, 0, 583, 584,
	585, 586, 0, 588, 589, 0, 0, 590, 591, 592,
	594, 595, 593, 596, 0, 597, 0, 0, 598, 599,
	600, 656, 657, 658, 262, 602, 601, 603, 659, 0,
	0, 0, 0, 0, 604, 605, 660, 606, 607, 608,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 610, 611, 0, 286, 612, 287, 613, 0, 614,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	615, 616, 617, 0, 295, 296, 618, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	324, 0, 325, 619, 620, 0, 329, 326, 327, 0,
	330, 328, 0, 331, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 0, 342,
	343, 621, 344, 345, 346, 348, 350, 347, 351, 352,
	353, 354, 622, 623, 355, 0, 0, 0, 0, 0,
	0, 0, 356, 357, 358, 624, 0, 0, 0, 359,
	0, 360, 0, 0, 0, 361, 362, 625, 626, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	627, 0, 628, 0, 0, 374, 375, 376, 377, 378,
	629, 630, 631, 455, 0, 379, 380, 0, 381, 382,
	383, 384, 0, 0, 0, 0, 385, 386, 387, 389,
	0, 0, 388, 632, 633, 0, 634, 0, 390, 391,
	0, 635, 0, 392, 393, 394, 0, 395, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 0, 402, 404,
	403, 0, 405, 636, 0, 406, 407, 0, 0, 408,
	0, 0, 0, 409, 410, 413, 0, 0, 411, 412,
	414, 415, 0, 416, 417, 419, 422, 418, 420, 421,
	423, 436, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 438, 0, 437, 0, 439, 440,
	441, 446, 448, 449, 444, 445, 447, 450, 451, 443,
	0, 442, 0, 0, 0, 452, 453, 0, 637, 454,
	638, 456, 457, 0, 0, 458, 0, 0, 0, 460,
	461, 462, 0, 0, 463, 464, 639, 0, 465, 0,
	640, 466, 467, 459, 468, 469, 0, 471, 472, 473,
	474, 475, 0, 476, 477, 641, 478, 479, 480, 642,
	481, 482, 483, 643, 484, 644, 485, 486, 0, 487,
	488, 0, 489, 490, 491, 492, 0, 494, 495, 645,
	496, 498, 497, 499, 0, 500, 0, 501, 502, 503,
	0, 0, 0, 0, 504, 0, 506, 507, 508, 509,
	505, 510, 511, 512, 513, 0, 514, 515, 516, 0,
	517, 518, 519, 520, 646, 0, 0, 522, 523, 529,
	530, 524, 525, 531, 532, 533, 534, 535, 0, 537,
	538, 536, 539, 540, 541, 0, 542, 543, 526, 527,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 647,
	0, 552, 0, 553, 554, 555, 557, 528, 558, 564,
	648, 559, 560, 561, 562, 563, 649, 566, 567, 0,
	568, 569, 0, 565, 556, 0, 570, 571, 572, 573,
	574, 575, 576, 349, 577, 0, 578, 650, 651, 652,
	653, 0, 587, 0, 579, 580, 581, 654, 582, 655,
	0, 583, 584, 585, 586, 0, 588, 589, 0, 0,
	590, 591, 592, 594, 595, 593, 596, 0, 597, 0,
	0, 598, 599, 600, 656, 657, 658, 0, 602, 601,
	603, 659, 0, 0, 0, 0, 0, 604, 605, 660,
	606, 607, 608, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 1724, 1725, 1773, 1757, 1758, 1759, 1767, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1755, 0, 0, 0, 1726,
	1724, 1725, 1727, 1757, 1758, 1759, 1767, 1768, 1769, 1746,
	0, 1773, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 1760, 1755, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 1726, 1724, 1725,
	1773, 1757, 1758, 1759, 1767, 1768, 1769, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 1760, 1755, 0, 0, 0, 1726, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 1746, 0, 1773, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 0, 0, 0, 1764, 0, 1732, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 1750, 1751,
	1752, 0, 1770, 0, 1771, 0, 0, 1732, 0, 0,
	0, 1741, 1742, 0, 1764, 0, 0, 1774, 0, 0,
	0, 0, 0, 1754, 1756, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	1770, 0, 1771, 1764, 1747, 1732, 1774, 0, 0, 1741,
	1742, 0, 1754, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 1770,
	0, 1771, 0, 0, 0, 0, 0, 0, 1741, 1742,
	0, 1764, 1747, 0, 1774, 0, 1772, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 1770, 0, 1771,
	0, 1747, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 1761,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 1765,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 2435, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 1738, 1739,
	1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 0, 0, 0, 4405, 0,
	0, 0, 1763, 0, 0, 0, 0, 1738, 1739, 1745,
	1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 0, 0, 0, 0, 4401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 1724, 1725, 4323, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 1724, 1725, 1727, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 1755, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 1726,
	1724, 1725, 1773, 1757, 1758, 1759, 1767, 1768, 1769, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 1760, 1755, 0, 0, 0, 1726, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 1746, 0,
	1773, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 1750, 1751,
	1752, 0, 1770, 0, 1771, 1764, 0, 1732, 1774, 0,
	0, 1741, 1742, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 1770, 0, 1771, 0, 0, 0, 0, 0, 0,
	1741, 1742, 0, 1764, 1747, 0, 1774, 0, 0, 0,
	0, 0, 1754, 1756, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 1771, 0, 1747, 0, 0, 0, 0, 1741, 1742,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 1748, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 1760, 1755, 1765, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 1748, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 0,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0,
	4283, 0, 0, 0, 1763, 0, 0, 0, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0, 4282,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 1763, 0, 0, 1732, 0, 1738, 1739, 1745,
	1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 0, 0, 1724, 1725, 4112, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 1774, 0, 0, 0, 1760, 1755,
	1754, 1756, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 1747,
	1743, 0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 1772, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 1749, 1750, 1751, 1752, 0, 0, 0, 1746,
	0, 0, 1732, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 1774, 1753, 0, 0, 0, 0, 1754, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 1770, 0, 1771, 0, 0, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 0, 0, 1765,
	1732, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1770, 0, 1771, 0, 0, 0, 0, 0,
	0, 1741, 1742, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 1747, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 0, 0, 3964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 1753, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 1765, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0,
	0, 0, 3897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 0,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 1764, 0, 0, 1774,
	3896, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 1771, 0, 0, 0, 0, 0,
	0, 1741, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 1755, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	1724, 1725, 1773, 1757, 1758, 1759, 1767, 1768, 1769, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 1760, 1755, 0, 0, 0, 1726, 0,
	0, 1727, 0, 0, 1761, 0, 0, 0, 1746, 0,
	1773, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 1749,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 0, 1732,
	0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1755, 0, 1749, 1750, 1751,
	1752, 0, 1727, 0, 0, 1764, 0, 1732, 1774, 0,
	0, 1773, 0, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 1771, 0, 0, 0, 1726, 0, 0,
	1741, 1742, 0, 1764, 0, 0, 1774, 1746, 0, 0,
	0, 0, 1754, 1756, 0, 0, 1743, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 1771, 0, 1747, 0, 0, 0, 0, 1741, 1742,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 0,
	1738, 1739, 1745, 1766, 1744, 1740, 1762, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0,
	3895, 1747, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 1761, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 1764, 0, 0, 1774, 0, 0,
	0, 0, 0, 1754, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	1770, 0, 1771, 0, 0, 0, 0, 0, 0, 1741,
	1742, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 1747, 1765, 0, 0, 1724, 1725, 0, 1757,
	1758, 1759, 1767, 1768, 1769, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1755, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 1765, 0, 0, 1772, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 1753, 0, 0, 0, 3569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 1748, 1738, 1739, 1745,
	1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 1749, 1750, 1751, 1752, 3074, 0, 0,
	0, 0, 1765, 1732, 0, 1724, 1725, 0, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 1755,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 1764,
	0, 0, 1774, 0, 0, 1773, 0, 0, 1754, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 1771, 0, 0,
	0, 1726, 0, 0, 1741, 1742, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 1747, 1738, 1739,
	1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 0, 0, 0, 3073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1750, 1751, 1752, 0, 1761, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 1764, 0,
	0, 1774, 0, 0, 0, 0, 0, 1754, 1756, 0,
	0, 1760, 1755, 0, 0, 0, 0, 0, 0, 1727,
	1753, 0, 0, 0, 1770, 0, 1771, 0, 1773, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 1726, 1724, 1725, 0, 1757, 1758,
	1759, 1767, 1768, 1769, 1746, 0, 1747, 1765, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 1760, 1755,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0,
	1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 1753,
	0, 1764, 0, 3072, 1774, 0, 0, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 1749, 1750, 1751, 1752, 0, 1770, 0, 1771,
	0, 0, 1732, 4541, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 1724, 1725, 1762, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 0, 0, 0, 0, 0, 1764, 1747,
	0, 1774, 0, 0, 0, 1760, 1755, 1754, 1756, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 1770, 0, 1771, 0, 0, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 1746, 1761,
	0, 0, 0, 0, 0, 0, 1747, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 0,
	0, 0, 3071, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1750, 1751, 1752, 1748, 0, 0, 0, 0, 0, 1732,
	0, 3158, 0, 0, 3157, 0, 0, 0, 4540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 1774, 1753,
	0, 0, 0, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 1770, 0, 1771, 0, 0, 0, 0, 0, 0,
	1741, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 3038, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 1760, 1755, 0, 0, 0, 0, 3009, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 1748, 1773, 0,
	0, 0, 2579, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0,
	0, 0, 0, 1765, 1726, 0, 0, 0, 0, 0,
	0, 0, 1760, 1755, 1746, 0, 0, 2578, 0, 0,
	1727, 0, 0, 1743, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 3010,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 1763, 1732, 0, 0, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 1774, 0, 1749, 1750, 1751, 1752,
	1754, 1756, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 1762, 1774, 0, 0, 0, 0,
	0, 1754, 1756, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	1771, 0, 0, 0, 0, 0, 0, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 1725, 1748, 1757, 1758, 1759, 1767, 1768, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1755, 0, 0, 0, 1765,
	0, 0, 1727, 1753, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	1765, 0, 0, 0, 0, 0, 1743, 1724, 1725, 0,
	1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 1755, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 0, 1726, 0, 0, 0, 0, 1749, 1750,
	1751, 1752, 0, 1746, 0, 0, 0, 0, 1732, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 1738, 1739, 1745, 1766,
	1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 0, 1764, 0, 0, 1774, 0, 0,
	0, 0, 0, 1754, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 0, 1771, 0, 0, 0, 0, 0, 0, 1741,
	1742, 0, 0, 0, 1749, 1750, 1751, 1752, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 1774, 0, 0, 0, 0, 0, 1754,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 1770, 0, 1771, 0,
	0, 0, 0, 0, 0, 1741, 1742, 0, 0, 0,
	0, 0, 1761, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767, 1768,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 1755, 0, 0, 0,
	0, 0, 0, 1727, 0, 1753, 0, 0, 0, 0,
	1772, 0, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 1765, 0, 0, 0, 0, 1743, 1724, 1725,
	0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 1755, 0, 0, 0, 3159, 0, 0, 1727,
	0, 1753, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 1749,
	1750, 1751, 1752, 0, 1746, 0, 0, 0, 1765, 1732,
	0, 0, 0, 1743, 3164, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 1738, 1739,
	1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729,
	1730, 1731, 1733, 1734, 0, 1764, 0, 0, 1774, 0,
	0, 3550, 0, 0, 1754, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 1771, 0, 0, 0, 0, 0, 0,
	1741, 1742, 0, 0, 0, 1749, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 0, 0, 1747, 1738, 1739, 1745, 1766, 1744, 1740,
	0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734,
	0, 1764, 0, 0, 1774, 0, 0, 0, 0, 0,
	1754, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 1770, 0, 1771,
	0, 0, 0, 0, 0, 0, 1741, 1742, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759, 1767,
	1768, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1755, 0, 0,
	0, 0, 0, 0, 1727, 0, 1753, 0, 0, 0,
	0, 1772, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 1765, 0, 0, 0, 0, 1743, 1724,
	1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 1755, 0, 0, 0, 3075, 0, 0,
	1727, 0, 1753, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	1749, 1750, 1751, 1752, 0, 1746, 0, 0, 0, 1765,
	1732, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 1738,
	1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736, 1728,
	1729, 1730, 1731, 1733, 1734, 0, 1764, 0, 0, 1774,
	0, 0, 0, 0, 0, 1754, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 1771, 0, 0, 0, 0, 0,
	0, 1741, 1742, 0, 0, 0, 1749, 1750, 1751, 1752,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 1747, 1738, 1739, 1745, 1766, 1744,
	1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731, 1733,
	1734, 0, 1764, 0, 0, 1774, 0, 0, 0, 0,
	0, 1754, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 1770, 0,
	1771, 0, 0, 0, 0, 0, 0, 1741, 1742, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 3126, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 1724, 1725, 0, 1757, 1758, 1759,
	1767, 1768, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1755, 0,
	0, 0, 0, 0, 0, 1727, 0, 1753, 0, 0,
	0, 0, 1772, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 1765, 0, 0, 0, 0, 1743,
	1724, 1725, 0, 1757, 1758, 1759, 1767, 1768, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 1755, 0, 0, 0, 0, 0,
	0, 1727, 0, 1753, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 1749, 1750, 1751, 1752, 0, 1746, 0, 0, 0,
	1765, 1732, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 0,
	1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735, 1736,
	1728, 1729, 1730, 1731, 1733, 1734, 0, 1764, 0, 0,
	1774, 0, 0, 0, 0, 0, 1754, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 1771, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 0, 0, 1749, 1750, 1751,
	1752, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 1747, 1738, 1739, 1745, 1766,
	1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730, 1731,
	1733, 1734, 0, 1764, 0, 0, 1774, 0, 0, 0,
	0, 0, 1754, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 1770,
	0, 1771, 0, 0, 0, 0, 0, 0, 1741, 1742,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 1724, 1725, 0, 1757, 1758,
	1759, 1767, 1768, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 1727, 0, 1753, 0,
	0, 0, 0, 1772, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 1765, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 1750, 1751, 1752, 0, 0, 0, 0,
	0, 1765, 1732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737, 1735,
	1736, 1728, 1729, 1730, 1731, 1733, 1734, 0, 1764, 0,
	0, 1774, 0, 0, 0, 0, 0, 1754, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 1771, 0, 0, 0,
	0, 0, 0, 1741, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 1747, 1738, 1739, 1745,
	1766, 1744, 1740, 0, 1737, 1735, 1736, 1728, 1729, 1730,
	1731, 1733, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 1738, 1739, 1745, 1766, 1744, 1740, 0, 1737,
	1735, 1736, 1728, 1729, 1730, 1731, 1733, 1734,
}

var sqlPact = [...]int{
	5705, -1000, -1000, -1000, -1000, 164, -1000, -1000, 162, 161,
	158, 157, 156, 154, 152, 151, 149, 148, 146, -1000,
	-1000, -1000, -1000, -1000, -1000, 145, -1000, -1000, 141, -1000,
	140, 136, 135, -1000, -1000, 128, -1000, 126, -1000, -1000,
	-1000, -1000, 125, 123, 122, 87426, 86886, 87959, 2308, 108894,
	95449, 2092, 78274, 108354, 77734, 107814, 2165, 8460, 107274, 2733,
	121, -1000, 106734, 120, 118, 116, -1000, 106194, -1000, 2193,
	-1000, 115, 3505, 63126, 114, 111, 110, 2830, 107, -1000,
	106, 105, 104, -1000, 11363, 1484, -1000, 103, 102, -1000,
	4823, 92763, 101, 98, 2465, 97, 96, 62585, 95, 94,
	2435, 2918, -1000, -1000, 2080, -1000, -1000, 93, 92, 91,
	90, 87, 86, 85, 84, 83, 82, 77, -1000, 72,
	71, 70, 69, 68, -1000, 67, 65, 60, -1000, 55,
	-1000, 53, 52, 51, 50, 49, 45, 44, 43, 42,
	41, 39, 35, 34, -1000, 15466, -1000, 1888, 1651, 1643,
	1640, 1637, 1627, 960, 30, 29, 27, 26, 25, 20,
	18, 15, 14, -1000, 13, 11, 8, 7, 5, 4,
	2, -1, 112, -6, -7, -14, -15, -16, -17, -26,
	2382, -1000, 1632, 1133, 28956, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 114757, 109427, -29, -90, -31, -1000, 3281, 1006, 51730,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 255, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 452, 2149, 726, -1000, -1000, -1000, 105661,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2305, -12,
	-1000, 2000, -1000, -1000, -1000, -1000, -1000, 724, -1000, 2303,
	312, 2236, -1000, -1000, -1000, 3384, 2443, 3828, 3827, 3826,
	3825, 3823, 114224, 1778, 3821, 2542, 3818, 3817, 3815, 3814,
	3810, 3806, 3803, -1000, 86346, 1026, 85806, 85266, 3389, 105128,
	84726, 104588, 71810, 43888, 1089, 3383, -1000, -1000, -1000, -1000,
	-1000, -1000, 109427, -1000, 1024, -1000, -1000, 3802, 3799, 2040,
	723, 94909, -1000, 1655, -1000, 908, 30654, -1000, 1164, -1000,
	30654, 254, -1000, -1000, -1000, -1000, -1000, -1000, 3798, 3797,
	3795, 3793, 3792, -1000, -1000, 77194, 22112, 76654, 76114, 104048,
	21561, 84186, 83646, 103508, 71259, 1020, 1423, -1000, -1000, -1000,
	-1000, -1000, -1000, -53, 69055, 3600, 109427, -1000, 249, -1000,
	-1000, -1000, -1000, -1000, -1000, 43310, 850, 42732, 988, 42154,
	860, -1000, -1000, -1000, -1000, 70708, -1000, 102968, 2441, 3791,
	3785, 1116, 3784, 3259, 1759, 3783, 1834, 1195, 3782, 3781,
	3780, 3779, 3778, 3777, 3776, 1408, 102428, 2990, 101888, 1667,
	70157, 1019, 83106, 87959, 2659, 101348, 1391, 1378, -1000, -1000,
	-1000, -1000, 3099, 2889, 2867, 1139, -1000, -1000, -1000, -1000,
	54428, 7065, 6233, 8727, 100808, 57213, 87959, 87959, -1000, -1000,
	-1000, -1000, -1000, 41576, 419, 40998, 1064, -1000, -1000, 54985,
	2934, -1000, -1000, -1000, -1000, 40420, 295, 39842, 933, 109427,
	-1000, 2989, 1927, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2431, 1635,
	3597, 2764, 69606, 2020, 1389, 3326, 3098, 3093, 1473, 3085,
	3775, 2629, 3069, 3063, 3058, 3055, 3051, 1517, 2556, 284,
	28378, 2972, 1709, 39264, 1563, 1485, 3048, 3039, 3629, 1961,
	1960, 1958, 75574, 3773, 3770, 3284, 3026, 3010, 2799, 3000,
	-1000, 2933, -1000, -1000, -1000, -1000, 1444, -1000, -1000, -1000,
	-1000, 78807, -1000, -1000, 1711, -1000, -1000, 1711, -1000, -1000,
	-1000, -1000, -1000, 1346, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1632, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2175, -1000, 2001, -1000,
	-1000, 2531, 3270, 3270, 3270, 3382, 433, 429, -1000, 112,
	-1000, -1000, 120773, -1000, -1000, 44454, 44454, 44454, 44454, 44454,
	44454, 44454, 2182, -1000, 722, -1000, -1000, 761, -1000, 719,
	606, -1000, -1000, -1000, -1000, -1000, -1000, 715, -1000, -1000,
	-1000, -1000, -1000, -1000, 3600, -1000, 24922, -1000, -1000, -1000,
	412, 714, 44454, -1000, -1000, 3647, 3645, 998, -1000, 245,
	924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2988, 713, 712, -1000, 708, 705, 704,
	695, 692, -1000, -1000, -1000, 691, 686, 685, 684, 677,
	676, 672, 671, -1000, 2010, -1000, -1000, -1000, -1000, -1000,
	-1000, 636, 634, 634, 634, -1000, 1013, -1000, -1000, -1000,
	298, 633, 277, 630, 628, 627, -1000, 665, 664, 661,
	660, 659, 658, 656, 654, 653, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1009, -1000, -1000, -1000, -1000, -54, 109427,
	-1000, 452, -54, -1000, -1000, 650, -1000, 32930, 32930, 32930,
	-1000, -1000, 2300, 44454, -1000, 2979, -1000, -46, -46, 874,
	53346, -1000, 50648, 874, 292, 770, 58829, -1000, 2930, -1000,
	-1000, 647, 230, -1000, -1000, -1000, -1000, 22661, 2929, 109427,
	109427, 87959, 87959, 87959, 3161, 44454, -1000, -1000, 66886, 109427,
	89025, -1000, -1000, 3514, 63659, 66348, 109427, 2987, 65815, 3769,
	-1000, -1000, -1000, -1000, -1000, 3141, 3767, 3765, 3763, -1000,
	109427, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 223, 3137,
	-1000, -1000, 92223, 223, 3136, -1000, 223, 3134, -1000, 91690,
	-1000, -1000, 2209, 3133, -1000, -1000, 228, 3129, -1000, -1000,
	-1000, 225, 3128, -1000, -1000, 220, -79, 3126, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	120773, -1000, -1000, -1000, 65275, -1000, 3290, -1000, -1000, 109427,
	-1000, 44454, -1000, 3510, 1460, 72897, 3439, -64, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2515, 2475, 1123, 2322, -1000,
	3174, 1666, -1000, 30654, 3245, -1000, -1000, -1000, 215, 22661,
	-1000, -1000, -1000, -1000, -1000, -1000, 3236, 3124, 1522, -1000,
	2321, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2143,
	3111, -1000, 2011, 3110, 2113, -1000, -1000, 3132, -1000, 3276,
	-1000, -1000, 2202, 3108, -45, -1000, -1000, 2577, -1000, 1932,
	-1000, 974, 3103, -1000, 82566, 56656, 54985, 69055, -58, -1000,
	-1000, -1000, -1000, -111, -1000, 21010, 120773, -1000, -1000, -1000,
	-1000, 1798, 120773, 859, -1000, -1000, 3102, -1000, 120773, 730,
	-1000, -1000, 3100, -1000, 2984, -1000, -1000, 2406, -1000, -1000,
	3762, -1000, -1000, 3760, -1000, 3759, 3755, 3751, -1000, 1712,
	1975, 3748, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	82033, 2296, -1000, -1000, 80953, -1000, 2403, 3437, -1000, 81493,
	1018, -1000, 974, 2401, -1000, 91157, 970, 2398, -1000, 3746,
	3373, 2734, 974, 2397, -1000, -1000, -1000, -1000, -1000, 980,
	-1000, 60439, -1000, 60439, -1000, 1602, -1000, 113691, -46, 87959,
	3600, -1000, -91, -1000, -1000, -1000, 1006, -1000, 53887, -1000,
	53887, 94369, 72359, 937, 717, 62044, 120773, -1000, -1000, -1000,
	-1000, 120773, -1000, -1000, -1000, -255, 2763, -1000, 72359, 56099,
	120773, -1000, -1000, -1000, -1000, 120773, -1000, -1000, -1000, 72359,
	80953, -1000, 100268, 80420, -1000, -1000, 1402, 2590, -1000, -1000,
	-1000, 72359, 1264, 72359, 72359, 72359, -1000, 99728, -1000, -1000,
	2036, 1515, 3279, 1996, 87959, -1000, 1832, -1000, -1000, -1000,
	3315, 109427, -1000, -1000, 2974, -1000, 64734, 90624, -1000, 90091,
	-1000, 89558, -1000, 87959, -1000, 87959, -1000, 3744, 3742, 3740,
	-1000, -1000, 3734, -1000, 3730, 3298, -1000, 120773, 3286, -1000,
	3726, 3415, 2972, 120773, -1000, 2998, 1670, 1662, 109427, -1000,
	-1000, 109427, -1000, 109427, -1000, -1000, -1000, 1483, -1000, -1000,
	2514, -1000, -1000, -1000, -1000, 87959, -1000, -1000, -1000, -1000,
	-1000, -1000, 2854, -1000, 1710, -1000, 1772, -1000, 2927, 3280,
	-1000, 1395, -1000, -1000, 231, -1000, -1000, -64, -1000, 113158,
	-1000, 2531, -1000, 109427, -1000, 2508, 2940, 2948, 1585, 2314,
	2597, -1000, 38686, 2510, 47850, 2319, 112, -1000, -1000, 112,
	112, 30088, -1000, -1000, 63659, 63659, 22661, 1368, 44454, 44454,
	44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454,
	44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454,
	44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454, 44454,
	44454, 44454, 44454, 2263, 44454, 1341, 44454, 44454, 44454, 44454,
	1997, -1000, -1000, 1902, 498, 1977, -1000, 3605, 3605, 3605,
	1078, 1078, 121134, 121134, 597, 3725, 761, -1000, 44454, -1000,
	62, 44454, 23212, -1000, 429, 9940, 2479, -1000, 427, 23790,
	-1000, -1000, -1000, 24922, 606, 38108, 44454, 989, 120773, -1000,
	-1000, 1828, 3606, 20460, 2999, 2794, 646, 820, 576, 27800,
	27222, 26644, 26066, 560, 44454, 44454, 44454, 44454, 44454, 44454,
	44454, 44454, -1000, -1000, 3622, -1000, 3606, -1000, -1000, -1000,
	-1000, 3606, 1352, 1319, 3606, -1000, 3606, 3606, 4927, 4927,
	37542, 36964, 36386, 48416, 35808, 44454, 25488, 35230, 34652, -1000,
	109427, -54, 3509, 44454, 303, -1000, 119328, -1000, 303, 303,
	645, -94, 120773, 2800, 2800, 52269, 2129, 2199, 2199, 2199,
	-1000, 874, 16031, 874, 98657, 2203, 874, 874, 214, 234,
	422, 50109, 2979, 98657, 740, 644, -32, -34, -35, -1000,
	-1000, -40, -43, -1000, -1000, 87959, 643, 23212, 22661, 207,
	1449, -97, 2642, 2631, 2630, -1000, 2622, 1765, -100, 1340,
	87959, 109427, -99, -1000, 242, -102, -1000, 1287, 206, 3606,
	-1000, -1000, -1000, -1000, -1000, 3724, 3723, -1000, 1003, 640,
	638, 408, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	636, 634, 634, 634, -1000, 298, 633, 277, 630, 628,
	627, -1000, -1000, -1000, -1000, -1000, 2923, 87959, 109427, -111,
	89025, -61, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	109427, -1000, -1000, -1000, 3721, -1000, 87959, -1000, -1000, 87959,
	223, 3094, -1000, 87959, -1000, 87959, 213, 3091, -1000, -1000,
	109427, -1000, 87959, 87959, -1000, 109427, 109427, 109427, 72359, 72359,
	229, -1000, 87959, 840, -108, 1120, -64, -1000, -1000, -1000,
	1711, -1000, 1811, -1000, -1000, -1000, -1000, -1000, -1000, 1422,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 998, -1000,
	-1000, -1000, -1000, -1000, -1000, 3617, 3610, -55, -1000, -1000,
	22661, -1000, -65, 1615, 2172, 1337, -1000, 75034, 2385, 3289,
	3720, 2688, 3267, 1593, -1000, 1481, -1000, 3380, 78807, 3451,
	3471, 1005, -1000, 2922, -1000, -1000, 907, 1706, 1705, 1333,
	1318, 78807, 2011, -1000, 63659, -1000, 2669, 3381, 1336, 1347,
	1336, 1336, 1338, -1000, 78807, 1702, 1317, 1312, 1311, 1933,
	1925, -1000, -1000, -1000, 1307, 1295, 796, 1918, -1000, -67,
	3446, 3467, 995, -1000, 2914, 1294, -1000, -1000, -1000, 3379,
	87959, 22661, 1549, 1523, 1693, 1285, -56, -1000, 3444, 3443,
	1273, 1222, -1000, 4643, -1000, 72359, 2067, 3084, 2762, 864,
	2760, -1000, -1000, -1000, 864, -58, 69055, 109427, 205, -1000,
	62, 44454, 44454, 62, 44454, 62, 3413, 3078, -1000, -1000,
	-1000, -1000, -1000, 3719, 1953, 2538, -1000, -1000, 626, 2392,
	2910, 109427, 2658, -59, 87959, -1000, 3076, 67424, 2011, 2379,
	-1000, -1000, 79880, -1000, 3073, 452, 2378, -1000, 637, 3718,
	3070, -1000, 112625, -1000, 3290, 1380, 3068, 1072, 774, 3508,
	-1000, 774, 60978, -1000, 109427, -1000, -46, 6203, 73968, -109,
	-110, 421, -1000, 99195, 109427, 1071, 74501, 109427, 3235, 961,
	54985, -1000, 54985, -115, -255, 2757, 1437, 937, 937, 864,
	-1000, 864, -1000, 87959, 2945, -1000, -1000, 72359, 937, 937,
	937, -1000, -1000, -1000, -1000, 3716, 3715, 3714, -1000, -1000,
	-1000, 962, 87959, 109427, 87959, -1000, 195, -1000, 109427, -1000,
	109427, 109427, 87959, -1000, 962, 109427, 962, 109427, 962, 109427,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 62, 44454, -1000,
	-1000, 3713, 1658, -1000, 2942, -1000, 2941, -1000, -8, -1000,
	-1000, -1000, -1000, -1000, 2253, -1000, -1000, 87959, 87959, 87959,
	87959, 109427, 3189, -1000, 109427, 3186, 87959, -1000, 78807, -1000,
	2508, 2940, -1000, -1000, -1000, -1000, -1000, -1000, 1730, 2257,
	-1000, 2583, -1000, 1536, -1000, -1000, -1000, 120773, 48982, -1000,
	-1000, 120773, 1808, -1000, 47284, 46718, -1000, -1000, 1648, 87959,
	2666, -1000, 2666, -103, -1000, 119277, 2573, 87959, -1000, -1000,
	-1000, -1000, -1000, 906, 1300, 1300, 1228, 1228, 1228, 1228,
	3464, 4743, 320, 578, 490, 490, 592, 592, 592, 592,
	592, 490, 4819, 1078, 1078, 4819, 4819, 4819, 4819, 4819,
	1078, 1078, 1078, 490, 490, 490, 121134, 120859, 10652, 44454,
	44454, 1220, 1873, 498, 10047, 44454, 5204, 5204, 5204, 5204,
	-1000, 2051, -1000, -1000, -1000, -1000, 2909, 625, 48416, 48416,
	-1000, -1000, -1000, -1000, 24356, 44454, -1000, -1000, -1000, -1000,
	34074, -1000, -1000, 118647, -317, 420, -89, -2, -1000, 44454,
	44454, 44454, 417, -1000, 194, 44454, 109427, -1000, 115832, 739,
	-122, -1000, -116, 1396, -1000, 44454, -1000, -1000, 1219, -1000,
	1217, 1216, 1210, -1000, 623, 416, -1000, 187, -1000, 2176,
	622, 620, 44454, -1000, -1000, -1000, -1000, -1000, 118454, -1000,
	-1000, 118285, -1000, -1000, 118010, -1000, -1000, 117879, -1000, -1000,
	-1000, 120498, 15233, 14811, 14228, 7547, 14133, 13535, -117, 414,
	-123, 413, 898, 889, 406, 404, 400, -125, -1000, 3712,
	3710, 3708, -1000, 3707, 3706, 3705, -1000, 3703, 3702, 3701,
	-1000, 3700, 3699, 3696, -1000, 3693, 3692, 3691, -1000, 3690,
	3689, 3687, -1000, 3684, 3681, 3679, -1000, 3678, 3676, 3675,
	-126, 397, -1000, 2908, -89, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 395, -1000, 394, -1000, 120412, -89, 393,
	5896, -1000, 48416, 48416, 48416, -1000, 391, -1000, 118901, -1000,
	120137, 33508, 33508, 33508, 390, 120051, 44454, -89, -132, -1000,
	-137, -1000, -1000, 495, -140, 987, 32930, 51189, 22661, -1000,
	987, 987, 44454, -1000, 44454, 2612, -1000, -1000, -1000, -1000,
	2610, 2390, 2800, 52269, -1000, -1000, -1000, -1000, 98657, -1000,
	3600, 2650, -1000, 98657, -1000, -1000, 109427, 452, -1000, 98657,
	98657, 22661, 874, -1000, 874, 98657, 564, -1000, -1000, -1000,
	-1000, -1000, 388, 57751, -2, 180, 22661, 974, -1000, 2651,
	2651, 2651, 2651, -1000, -1000, 109427, 1207, -62, -133, 3549,
	-1000, 2025, -1000, 63659, -1000, 758, 1126, 22661, -1000, -1000,
	-1000, 619, -1000, 3606, 3606, -1000, 3606, 109427, 2906, 253,
	210, 67424, 67424, 3674, -1000, -1000, 223, -1000, 87959, 223,
	223, -1000, 87959, 87959, 2209, -1000, 228, -1000, 225, -1000,
	-1000, -79, -1000, 982, 30654, -1000, 1711, -1000, -1000, 1528,
	-1000, 1988, -1000, 1137, -1000, -1000, -1000, -1000, 30654, -1000,
	2315, 109427, 109427, 87959, -1000, 109427, -1000, 2068, 3538, 1898,
	2509, 2507, 67424, -1000, 2374, 112092, 2367, 63659, 109427, -1000,
	-1000, 617, 920, 2571, 2569, 1058, 109427, 109427, 2560, 111559,
	111026, -1000, 3673, 109427, 2029, 44454, 3376, 2198, 2213, 62,
	62, -1000, -1000, 62, 613, 1334, 87959, 87959, 109427, 67424,
	87959, 2016, -1000, -1000, -1000, -1000, -1000, 79340, -1000, -1000,
	3620, 3615, -1000, 1336, -1000, -1000, -1000, 1336, 2011, 1860,
	109427, 67424, 87959, 67424, 109427, 109427, 1692, 109427, 1401, -1000,
	796, 2057, 62, 62, -1000, -1000, 62, 612, 22661, 1935,
	-1000, 2980, 109427, 3644, 109427, 109427, 109427, 67424, 3283, 110493,
	109427, 109427, 67424, 4643, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 68522, 1082, 974, 1691, 1205,
	1199, 78807, 54985, 957, 54985, 2742, -1000, -1000, 19910, -1000,
	120773, 120773, -1000, 120773, -1000, 64196, 109427, -1000, 1015, 109427,
	74501, 928, 3066, 59900, -111, 937, 72359, 87959, -59, 109427,
	-1000, -1000, 2011, 3065, 452, 2371, -1000, 72359, 3506, 3060,
	611, 3672, 3670, -1000, 87959, 2286, 2369, -1000, -1000, 109960,
	3153, 796, 109427, 987, 52269, 1912, -1000, 58291, 1043, 109427,
	1826, 168, -1000, -1000, -1000, -18, 109427, -1000, 769, -1000,
	-1000, 6203, 6203, 937, -165, 610, -1000, 863, 851, 55542,
	72359, -143, -1000, -1000, -1000, -1000, 2367, 87959, 109427, 1261,
	2715, 109427, -145, -1000, 175, 608, -1000, 2249, -1000, -255,
	-1000, 961, 54985, 2905, 2876, -1000, -1000, 979, -1000, 1211,
	937, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -47, 109427, -111, -111, -60, -62, -1000, 962, -1000,
	962, -1000, 962, -1000, 120773, -1000, -1000, 1652, 1641, 109427,
	-1000, 22661, 109427, 87959, 22661, 87959, 2939, 2938, -1000, -1000,
	-1000, 109427, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1091,
	-1000, 1808, 2255, -1000, 606, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2466, -1000, -63, 30088, 880, -1000,
	-1000, 87959, -48, 44454, 44454, 9427, 8217, 44454, 48416, 48416,
	-1000, 44454, 7765, -1000, -1000, -1000, -1000, -1000, 2873, 604,
	44454, 63659, 5476, 5321, -1000, 386, 12520, 4819, -1000, 44454,
	-1000, 378, 32364, -1000, 119690, -69, -148, -1000, 16594, -89,
	-151, -1000, -1000, 753, -1000, 3105, -1000, 44454, 119776, 2421,
	1897, 1814, 1672, 3606, 3642, 19360, -1000, 61511, 992, 2229,
	117841, -1000, -1000, -1000, -1000, 63659, 63659, 44454, 44454, -1000,
	44454, 44454, 44454, -1000, -1000, -1000, 3606, 873, -1000, -1000,
	-1000, 873, -1000, -1000, 1336, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1336, -1000, 44454, -1000, -1000, 2872, 44454, -1000, 63659, 63659,
	48416, 48416, 48416, 48416, 48416, 48416, 48416, 48416, 48416, 48416,
	48416, 48416, 48416, 48416, 48416, 48416, 48416, 48416, 48416, 2528,
	48416, 3591, 3591, 3591, -1000, 2833, 2872, 44454, 44454, 63659,
	377, 373, 372, -1000, 44454, -89, -1000, -1000, 6203, 599,
	-1000, 2458, -1000, 2793, -1000, 44454, -1000, -228, -1000, 2979,
	-1000, -1000, 2793, 2793, -153, 120773, 52269, 52269, -1000, 598,
	44454, 2596, -1000, -1000, 733, -307, -1000, 842, -1000, -1000,
	-1000, -1000, -1000, 452, -1000, -1000, -1000, 170, 98657, 98657,
	728, -1000, -154, -1000, -1000, -156, -1000, 3503, 365, 22661,
	-1000, 987, 3244, -1000, -1000, -1000, -1000, -1000, -1000, -111,
	109427, 109427, 2216, 3641, -1000, 3612, 748, 707, 169, 3606,
	362, 359, 358, -111, 109427, 109427, 109427, -1000, -1000, -1000,
	-1000, 223, -1000, -1000, -1000, 213, -1000, -1000, -1000, -1000,
	2640, -1000, -64, -1000, -1000, -1000, 44454, -1000, -1000, 3287,
	1196, 1191, -1000, -1000, -1000, -1000, 3369, 88492, 3537, 1894,
	1883, -1000, 3057, -1000, 2365, -1000, 1047, -1000, 1729, -1000,
	44454, 575, 2705, 562, 559, 3669, 1872, 3668, 1062, 3056,
	2209, 3053, 2209, -1000, -1000, -1000, 913, -1000, 120773, 2198,
	-1000, 556, 544, -1000, -65, 1561, 2096, 1190, 978, -1000,
	-1000, 44454, 44454, 98124, -1000, 425, 3276, -50, -1000, -1000,
	-1000, 1690, 1189, 1184, -1000, -1000, -1000, -1000, 2011, 1682,
	1181, 1177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 977,
	-1000, 3013, 3011, 887, 109427, -1000, 975, -1000, -1000, 44454,
	-1000, -67, 1176, 3453, 2361, 87959, 1175, -1000, 1168, -1000,
	-1000, -1000, 3442, 2209, 3047, 1171, -1000, -1000, -1000, -1000,
	-1000, 67973, -1000, 109427, 67424, 87959, 1830, 864, -1000, 2362,
	864, 957, 2864, -1000, 2657, -1000, 87959, 3667, 346, -159,
	-68, 63659, 3498, -1000, 2256, 563, 87959, 879, -1000, 3600,
	-1000, -1000, -1000, -1000, 3425, 87959, 3496, 3046, 974, 62,
	87959, 3627, -1000, -1000, 3492, 87959, 3038, 2281, 2355, 2534,
	796, 73435, 974, 2223, -78, -1000, 1826, 31786, 3273, -162,
	-1000, -1000, -1000, 987, 60978, 52269, 44454, 3666, -164, -1000,
	-1000, -1000, -1000, -1000, 95987, 95987, 72359, 72359, 72359, 937,
	109427, 109427, 74501, -1000, -1000, 540, 109427, 109427, 538, -1000,
	109427, 109427, 3665, 72359, -70, 521, -1000, 841, 832, 831,
	-1000, -1000, -1000, -1000, -1000, 961, -1000, -255, 54985, 62,
	-1000, 2245, 87959, -1000, 18810, -1000, -1000, -1000, -1000, -1000,
	-1000, 962, -1000, -1000, 2086, 2318, 2086, 1816, 1795, -1000,
	-1000, 2254, -1000, -1000, -1000, -1000, 2621, 3257, 22661, 3422,
	5204, 44454, 44454, 6337, 1968, 1398, 5204, 44454, 44454, 63659,
	13103, -167, 44454, 44454, -1000, 44454, 601, 120773, 3640, 44454,
	344, 340, -1000, -1000, -1000, 3603, -1000, -1000, -1000, 120773,
	44454, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 339, -1000,
	166, -1000, -1000, -1000, 115290, -1000, 44454, 337, 3366, -1000,
	336, 330, 10589, 541, 117582, 117222, 117134, 329, -1000, -1000,
	328, 327, 120773, 2833, 120773, -1000, -1000, 1023, 1023, 1315,
	1315, 1315, 1315, 3591, 706, 1419, 600, 792, 792, 792,
	927, 557, 557, 792, 792, 792, 2862, 2550, 520, 946,
	-1000, -1000, 120773, 120773, 323, -1000, -1000, -1000, -89, 319,
	6203, -1000, 2788, 3363, 120773, -1000, 52269, 2788, 2788, -1000,
	-1000, 2390, 109427, 120773, 52269, -1000, 2650, -1000, 17155, -1000,
	22661, -1000, -1000, -1000, -1000, 3600, -1000, 57751, -1000, 519,
	-1000, 113, -1000, 3244, -1000, 828, -1000, -111, -111, -1000,
	-1000, 577, 3664, 747, 22661, 318, -1000, -1000, -1000, -111,
	-111, -111, -1000, -1000, -1000, 3225, 120773, 109427, 109427, 1608,
	93829, 1791, -1000, -1000, 1914, 2502, -1000, 3535, 3531, 109427,
	3035, -1000, 2081, -1000, 1058, 116947, 52808, -1000, 52808, 109427,
	-1000, -1000, 1847, 2635, 1107, -1000, 3317, 109427, -1000, 109427,
	-1000, -1000, -1000, 109427, 109427, 87959, 109427, -1000, 67424, 3022,
	-170, 120773, -71, -1000, 827, -1000, 1348, -1000, 18260, 109427,
	67424, 87959, 109427, 67424, 87959, 2160, -1000, -1000, 3009, -1000,
	3016, -173, 22661, -1000, 3639, 3638, 3034, 3323, 3635, 109427,
	-1000, 109427, 87959, 3203, -1000, -1000, -1000, -1000, -1000, 1677,
	1160, 1157, 957, -72, 518, -1000, 823, -1000, -1000, 819,
	957, -1000, 72359, 54985, 452, -1000, 2685, -1000, 93296, 2235,
	62, -1000, 3662, 96525, 516, -1000, 2234, -1000, 561, 67424,
	2011, 62, 87959, -1000, -1000, 452, 302, -76, -1000, 3061,
	1055, 22661, 87959, 3033, 2529, 796, 73435, -1000, 1380, 2597,
	-1000, -77, -1000, 615, 62, 2223, -1000, -78, 120773, -1000,
	818, -1000, -175, -1000, -1000, 293, -1000, 3201, 3199, -1000,
	2817, 52808, 515, 510, 109427, 3196, -1000, -1000, -178, 2417,
	2417, 72359, 54985, 72359, -1000, 961, -1000, -1000, 2404, -1000,
	-1000, -1000, -1000, -1000, 22661, 1612, -1000, 509, 507, -1000,
	-1000, -1000, -1000, 3257, 5204, 5204, 44454, 44454, 44454, 5204,
	13103, -183, -1000, 5204, 5204, -89, -1000, -1000, 119690, -1000,
	-1000, -1000, 120773, -1000, 17710, 2114, -1000, 116569, -1000, 30088,
	-1000, -1000, 44454, 44454, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 48416, 2861, 506, 63659, -1000, -1000, 289, 981,
	44454, 46152, 2979, 981, 981, -1000, -188, -1000, -1000, -1000,
	3600, 113, -1000, -1000, 3661, 22661, -1000, 72359, 742, -1000,
	3660, -1000, -1000, -1000, -1000, -1000, 2756, 3486, -1000, -1000,
	1911, 2501, -1000, 3479, 1151, 3478, -1000, 109427, -1000, 109427,
	-1000, 22661, 109427, 2825, 1246, -1000, 920, 2557, 505, 48416,
	87959, 861, -1000, 3513, 2773, -190, -1000, 109427, 44454, 109427,
	-197, -198, 2340, -1000, -1000, 2339, 44454, -1000, 63659, 503,
	2209, 2209, -199, -204, -1000, -1000, -1000, 44454, 1130, 109427,
	31220, -1000, 3659, 3276, -1000, -1000, -1000, -1000, -1000, -1000,
	109427, -1000, 44454, 1127, -1000, -1000, -1000, 3631, 2209, 22661,
	-1000, 2209, 2209, 3323, 1103, 109427, 67424, 87959, -1000, 2463,
	2463, 72359, 54985, -1000, -79, 957, 3475, 2678, 3658, -1000,
	-1000, -1000, -1000, 2555, -1000, -1000, 109427, 2554, 938, -1000,
	-211, -1000, 813, 808, 74501, 928, 884, -1000, -1000, -1000,
	-1000, 452, 3473, -1000, 3628, 502, 501, 109427, 2279, 499,
	22661, 3269, 796, 73435, -1000, 3153, 1826, -1000, 2346, 109427,
	3265, -1000, 2597, 498, -1000, 937, 494, 492, 3487, 3487,
	-212, 52808, 52808, -213, 491, 937, -1000, -218, -1000, -1000,
	-1000, -1000, -83, -1000, 830, 826, -1000, -1000, 87959, 87959,
	44454, 44454, -1000, 5204, 5204, 5204, -1000, 280, -1000, -1000,
	2223, 3354, -1000, -85, 116531, 116502, 361, 48416, 63659, -219,
	-1000, -1000, 109427, 120773, -86, -1000, 120773, 488, 487, 402,
	-1000, -1000, -1000, 542, -1000, -1000, 3657, -1000, 97591, 109427,
	-1000, 3469, 109427, 97058, 109427, -1000, 1955, -1000, -1000, -1000,
	109427, 2351, -1000, -1000, -1000, 1057, 44454, 946, 477, 44454,
	-1000, 3466, -1000, 2673, 2869, 2009, 52808, -1000, 3257, -1000,
	115937, -1000, 1052, 1901, -1000, -1000, 120773, 3323, 52808, -1000,
	-1000, 473, 472, 120773, 470, 806, 2838, -1000, -1000, -1000,
	-1000, 120773, 469, 3453, -1000, -1000, -1000, -1000, 2209, 87959,
	-1000, -1000, -1000, -1000, -221, -1000, -1000, 1950, 62, 2064,
	2753, -1000, 2235, 467, -1000, -1000, 2261, 2608, -1000, 96525,
	30654, 30654, 270, 3465, 884, -1000, 3588, -1000, 3458, 62,
	-1000, 3627, 52808, -1000, 87959, 52808, 2277, 1999, 2498, 73435,
	-1000, 2534, -1000, -1000, -226, 109427, 1826, -1000, -1000, 72359,
	72359, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1052, -229, -232, -1000, 72359, -1000, -1000, 2404,
	-1000, 109427, -1000, 109427, -1000, -1000, -234, -235, -1000, 1980,
	44454, 30088, -1000, -1000, 361, -240, -1000, -88, -1000, 3455,
	46152, 3656, 3654, 3653, -1000, -1000, -1000, 1910, -1000, 109427,
	-1000, -1000, 1889, -1000, -1000, -1000, 3031, 2782, 115899, 2460,
	109427, 115870, -1000, 2858, -1000, -1000, 2678, 455, -1000, -1000,
	-1000, -1000, 880, 109427, 2678, 2777, 87959, 1056, -242, 2086,
	2086, 44454, 29522, 2156, 44454, -1000, -1000, 3323, -1000, 2813,
	3585, -1000, 928, -1000, 2154, 109427, -1000, 3303, -1000, 3194,
	-1000, -1000, -1000, 2685, 62, -1000, -1000, 62, -1000, 265,
	-243, 1055, -245, 87959, 1906, -1000, 796, -1000, 2529, 987,
	-1000, -1000, -248, -253, 2009, 1052, 936, -256, -1000, -258,
	-259, -1000, -1000, 259, 45586, 45586, 45586, -89, -103, -1000,
	109427, 454, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3005,
	955, -1000, 2262, 1870, 243, 1067, -1000, -1000, 2057, 109427,
	-1000, -1000, -1000, 945, 452, -1000, 44454, 1052, -264, -1000,
	1036, -265, -1000, 1033, -266, -1000, 2824, -1000, -267, 2209,
	943, 3405, -1000, -1000, -1000, 2261, 87959, -272, -1000, -1000,
	2353, -1000, 2678, 938, -1000, -1000, 1052, 451, 2009, 447,
	1433, 796, -1000, -1000, 1336, 3269, 3113, 937, 937, 2678,
	2009, 987, 445, 937, -1000, -1000, -1000, 3095, -1000, 49548,
	2269, 1774, 118714, 3095, 3095, -1000, -1000, 109427, 3395, -1000,
	2274, 2267, 1472, -1000, -1000, -1000, -1000, -1000, -1000, 2773,
	-1000, -274, 3392, 2460, 120773, 2678, -1000, 2086, 2751, -1000,
	2086, 2815, -1000, 2053, -1000, -1000, -1000, 1736, 3584, 1790,
	440, -1000, 109427, 1756, 1751, 3652, 2064, 2261, 2009, 52808,
	2678, 52808, -1000, -1000, 109427, -1000, 1999, 1288, -1000, -1000,
	2057, 2678, -1000, -1000, -1000, 1804, 3521, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 789, -1000, 3171, -1000, 1086,
	2215, 2215, 987, -1000, 788, 2262, -1000, -1000, 439, -1000,
	437, -1000, 2232, -1000, -1000, -1000, -1000, 109427, -1000, -1000,
	3651, -1000, 928, -1000, 2678, -275, 2057, -280, -1000, -111,
	1906, -1000, 1583, 936, 2057, 1770, -1000, -1000, 2200, 45020,
	44454, -1000, 3563, -1000, -1000, 2533, -1000, -1000, 44454, 2773,
	44454, 44454, 59367, -283, -1000, 2261, 2057, 1052, 936, 2009,
	1433, 60978, 987, 936, -1000, -1000, -1000, 120773, -1000, -1000,
	-1000, 120773, -1000, -291, -297, -165, 95987, 2197, 1790, 936,
	2009, 987, 2678, -1000, -273, -1000, 987, 2057, 1125, -298,
	-1000, -1000, -1000, -1000, 987, 2678, -1000, 2057, -1000, -1000,
	-1000, -1000, 435, -1000, -1000, 2057, 936, 44454, 936, 987,
	-299, 987, -1000, 2057, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4509, 4507, 4505, 4504, 4502, 4501, 4500, 4499, 4498,
	4497, 4496, 4495, 4493, 4491, 4487, 4486, 4485, 4484, 4482,
	4481, 4480, 4479, 4478, 4473, 4472, 4471, 4469, 4467, 4466,
	4465, 4463, 4462, 4461, 4460, 4458, 4456, 4455, 4453, 4451,
	4450, 4449, 4448, 4447, 4443, 4442, 4440, 4439, 4438, 4437,
	4436, 4435, 4433, 4432, 4431, 4424, 4418, 4415, 4411, 4410,
	4405, 4402, 49, 4401, 4399, 4398, 4396, 4395, 4393, 4391,
	4389, 4388, 4384, 4382, 4377, 4374, 4373, 4371, 4366, 4364,
	4363, 4361, 59, 4360, 259, 4359, 4358, 4352, 4347, 4346,
	4345, 4344, 4342, 4341, 4337, 4336, 4334, 258, 4327, 149,
	4326, 4325, 4324, 4323, 4322, 257, 4321, 4318, 4317, 4316,
	266, 4313, 4312, 4309, 4308, 4307, 4305, 4300, 4299, 4297,
	4292, 4289, 88, 191, 4286, 4280, 148, 4278, 4276, 4275,
	4274, 4270, 4264, 4263, 4262, 4260, 4257, 241, 4254, 256,
	4253, 4252, 4249, 4246, 4245, 4242, 4241, 4239, 4238, 4234,
	4230, 4228, 4226, 4225, 4224, 4220, 4218, 4217, 4216, 4210,
	4209, 4208, 4207, 4206, 4204, 4202, 4201, 4200, 4199, 4192,
	4189, 4188, 4183, 4182, 4181, 4178, 234, 263, 220, 4177,
	4176, 253, 250, 4174, 4173, 4171, 4168, 4166, 111, 9,
	30, 4164, 4162, 78, 85, 79, 97, 94, 83, 4161,
	100, 4159, 139, 57, 4156, 22, 2, 226, 225, 10550,
	216, 4155, 4154, 4152, 236, 180, 4150, 217, 4149, 4148,
	4143, 4141, 63, 44, 154, 165, 156, 162, 432, 4136,
	153, 89, 71, 51, 39, 16, 117, 245, 20, 4132,
	243, 7, 122, 4, 34, 4128, 4124, 4122, 4115, 3357,
	108, 4113, 249, 222, 150, 4110, 4109, 4108, 183, 4098,
	4095, 45, 4093, 184, 72, 106, 113, 112, 4092, 132,
	36, 4088, 164, 56, 4087, 143, 87, 81, 7707, 7851,
	4086, 110, 69, 157, 1297, 178, 163, 188, 267, 151,
	146, 182, 201, 196, 168, 52, 4085, 231, 4081, 3468,
	96, 171, 4076, 4071, 4069, 75, 181, 102, 4067, 4065,
	65, 18, 14, 3, 1, 126, 12, 25, 8, 4063,
	23, 105, 38, 32, 4062, 27, 4058, 4057, 4056, 4055,
	4054, 60, 145, 4053, 260, 4052, 116, 48, 115, 4051,
	24, 200, 4050, 208, 119, 4049, 4048, 235, 192, 169,
	4047, 68, 221, 4046, 4044, 4042, 4040, 4039, 134, 10,
	114, 4038, 4036, 121, 4035, 47, 228, 179, 4031, 54,
	4030, 4029, 155, 92, 127, 262, 135, 209, 109, 202,
	166, 212, 4028, 4026, 4025, 170, 4024, 4020, 205, 140,
	4019, 4014, 233, 270, 80, 42, 67, 224, 73, 177,
	158, 4013, 187, 4011, 4009, 269, 167, 203, 5, 15,
	86, 107, 4007, 6, 213, 141, 227, 103, 4005, 5124,
	2011, 2326, 4004, 4002, 137, 101, 64, 131, 142, 247,
	76, 4001, 3996, 193, 3994, 3992, 3989, 3987, 173, 3986,
	3985, 3983, 136, 219, 199, 3981, 82, 62, 46, 19,
	128, 239, 264, 104, 206, 144, 232, 3980, 3978, 3975,
	172, 3974, 70, 133, 3973, 190, 238, 55, 3968, 118,
	3967, 129, 1728, 61, 138, 3966, 207, 3965, 3964, 3962,
	3961, 3959, 3957, 3956, 1662, 211, 3955, 3954, 3951, 58,
	174, 3949, 246, 292, 197, 91, 93, 3948, 90, 3380,
	3946, 160, 2197, 50, 248, 186, 251, 3945, 1337, 53,
	3941, 0, 11799, 5802, 9460, 11289, 3939, 5087, 3937, 3936,
	3935, 198, 130, 3933, 3930, 3923, 99, 3922, 77, 3921,
	3919, 66, 3918, 29, 17, 11, 31, 26, 176, 161,
	3916, 3915, 189, 123, 124, 3914, 254, 210, 3913, 3910,
	3909, 3908, 84, 3907, 37, 3904, 35, 3902, 3901, 43,
	13, 41, 3900, 3899, 223, 3897, 204, 242, 3896, 147,
	3895, 3456, 120, 3881, 3879, 244, 95, 3876, 273, 3872,
	3394, 3871, 3870, 28, 3866, 3864, 229, 159, 195, 3854,
	3853, 152, 3852, 3851, 3850, 265, 3848, 3847, 3840, 33,
	3839, 21, 3838, 3836, 194, 3199, 3834, 3833, 40, 3593,
	175,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 7, 8, 8, 8, 8,
	8, 48, 48, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 35, 30, 31, 32, 33, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 16, 16,
	36, 36, 17, 17, 38, 38, 18, 18, 39, 39,
	575, 575, 21, 41, 22, 42, 15, 576, 576, 576,
	576, 34, 23, 43, 27, 27, 27, 27, 27, 191,
	191, 191, 191, 20, 20, 37, 37, 225, 225, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 574, 574, 227, 227, 226, 221, 221,
	577, 577, 228, 228, 228, 230, 230, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 473, 473, 473, 506,
	506, 505, 505, 505, 504, 504, 590, 590, 591, 591,
	591, 591, 591, 125, 125, 371, 371, 371, 51, 51,
	51, 51, 51, 569, 569, 193, 193, 193, 195, 195,
	194, 194, 194, 194, 73, 73, 582, 582, 583, 583,
	581, 584, 584, 584, 192, 192, 192, 121, 121, 121,
	121, 121, 121, 122, 122, 123, 123, 196, 196, 196,
	198, 198, 197, 197, 197, 197, 197, 197, 197, 197,
	202, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	101, 101, 508, 508, 509, 509, 187, 187, 188, 188,
	188, 188, 189, 189, 190, 190, 190, 65, 199, 199,
	201, 201, 200, 200, 53, 53, 53, 53, 53, 53,
	53, 54, 54, 54, 54, 54, 55, 55, 55, 55,
	55, 55, 56, 56, 56, 56, 56, 56, 63, 63,
	63, 63, 178, 178, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 70, 70, 70, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 593, 593, 594,
	594, 595, 595, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	79, 79, 333, 333, 298, 298, 80, 80, 80, 81,
	81, 82, 82, 67, 67, 567, 567, 348, 348, 464,
	464, 84, 84, 370, 370, 85, 85, 85, 85, 85,
	85, 86, 86, 86, 86, 86, 86, 86, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 94, 94, 94, 94, 94, 95, 95, 95,
	92, 92, 92, 89, 89, 89, 88, 88, 88, 93,
	93, 93, 566, 287, 287, 91, 91, 91, 90, 90,
	90, 349, 349, 96, 96, 96, 96, 299, 97, 97,
	97, 97, 97, 97, 97, 97, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 466,
	466, 98, 98, 98, 431, 431, 102, 102, 102, 386,
	386, 103, 103, 103, 103, 103, 104, 104, 104, 104,
	104, 104, 124, 124, 124, 124, 124, 124, 571, 571,
	341, 341, 252, 252, 252, 252, 114, 114, 114, 114,
	115, 115, 115, 116, 116, 183, 183, 131, 131, 131,
	131, 131, 130, 130, 130, 130, 130, 130, 57, 57,
	57, 58, 58, 59, 59, 60, 60, 61, 61, 62,
	62, 62, 62, 62, 133, 133, 587, 587, 135, 132,
	132, 132, 134, 134, 134, 134, 136, 137, 137, 137,
	137, 137, 137, 137, 137, 138, 138, 498, 498, 357,
	357, 496, 496, 518, 518, 497, 497, 303, 303, 303,
	303, 303, 304, 304, 304, 507, 507, 507, 507, 507,
	507, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 184, 184,
	185, 186, 186, 186, 186, 186, 162, 162, 162, 177,
	177, 177, 177, 177, 177, 177, 165, 165, 165, 149,
	149, 140, 140, 140, 140, 140, 140, 140, 144, 144,
	144, 144, 144, 144, 144, 144, 141, 141, 151, 151,
	151, 151, 151, 145, 145, 146, 146, 146, 146, 172,
	172, 148, 148, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 142, 142, 142, 142, 153, 153, 153, 153,
	393, 393, 393, 176, 176, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 175, 175, 175, 175,
	175, 175, 585, 585, 586, 586, 169, 169, 169, 169,
	169, 169, 445, 445, 163, 163, 163, 163, 168, 168,
	168, 168, 171, 171, 171, 171, 376, 376, 160, 160,
	160, 161, 161, 161, 166, 166, 167, 164, 164, 170,
	170, 170, 170, 143, 143, 143, 597, 597, 597, 173,
	173, 159, 159, 174, 174, 174, 174, 174, 174, 174,
	174, 598, 598, 155, 155, 155, 154, 154, 154, 154,
	157, 157, 158, 158, 158, 158, 158, 158, 156, 147,
	568, 568, 564, 564, 564, 564, 564, 564, 564, 564,
	565, 565, 565, 565, 570, 570, 107, 107, 107, 107,
	107, 117, 117, 117, 117, 117, 108, 108, 108, 108,
	108, 110, 110, 109, 109, 109, 109, 74, 74, 74,
	74, 74, 14, 14, 14, 75, 75, 243, 243, 205,
	205, 205, 322, 322, 206, 206, 311, 311, 311, 311,
	203, 203, 204, 204, 76, 76, 599, 599, 599, 578,
	578, 578, 579, 579, 579, 579, 579, 579, 305, 305,
	306, 306, 411, 411, 411, 411, 411, 309, 309, 309,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 312,
	312, 229, 229, 229, 320, 321, 321, 313, 313, 319,
	318, 318, 317, 317, 316, 316, 314, 315, 315, 315,
	324, 324, 323, 326, 326, 325, 410, 527, 527, 529,
	529, 529, 529, 529, 529, 529, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 394, 394,
	600, 600, 525, 525, 525, 526, 521, 521, 522, 522,
	522, 522, 522, 307, 307, 308, 308, 308, 308, 523,
	524, 339, 339, 449, 528, 528, 530, 530, 532, 601,
	601, 601, 601, 601, 601, 602, 602, 602, 409, 409,
	408, 408, 331, 331, 533, 533, 533, 533, 534, 534,
	534, 534, 534, 537, 536, 535, 535, 535, 535, 535,
	78, 78, 78, 373, 373, 372, 372, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 180, 180, 255, 255, 72, 72, 72, 12,
	12, 12, 580, 580, 580, 77, 77, 77, 77, 77,
	77, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 573, 573, 572, 572, 256, 256, 604, 604, 83,
	83, 83, 83, 83, 83, 83, 83, 467, 467, 468,
	468, 71, 71, 71, 71, 71, 395, 395, 392, 392,
	391, 391, 338, 338, 447, 447, 447, 448, 260, 260,
	261, 261, 222, 222, 222, 29, 28, 19, 19, 24,
	24, 25, 25, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 26, 26, 45, 45, 45, 45,
	46, 46, 46, 46, 49, 49, 50, 50, 44, 44,
	44, 44, 47, 47, 40, 40, 588, 588, 589, 589,
	113, 113, 118, 118, 118, 118, 118, 119, 119, 119,
	119, 120, 120, 120, 120, 129, 129, 179, 179, 179,
	179, 179, 179, 179, 52, 52, 52, 52, 64, 64,
	64, 64, 127, 606, 606, 606, 128, 128, 128, 605,
	605, 253, 253, 405, 405, 406, 406, 607, 607, 407,
	407, 407, 407, 407, 246, 245, 247, 247, 248, 248,
	69, 69, 69, 238, 238, 237, 235, 235, 510, 510,
	240, 240, 240, 241, 241, 231, 231, 232, 232, 233,
	233, 234, 234, 244, 244, 608, 608, 105, 105, 105,
	182, 182, 297, 297, 297, 402, 402, 402, 332, 332,
	267, 267, 404, 404, 404, 404, 369, 369, 369, 181,
	181, 346, 346, 359, 359, 360, 360, 461, 461, 361,
	111, 111, 112, 112, 126, 126, 209, 209, 207, 207,
	207, 207, 207, 207, 207, 207, 214, 214, 215, 215,
	216, 216, 217, 218, 218, 218, 218, 350, 350, 219,
	219, 219, 208, 208, 208, 210, 210, 210, 210, 210,
	210, 210, 213, 213, 213, 213, 220, 220, 220, 212,
	212, 544, 544, 544, 546, 546, 548, 548, 547, 547,
	543, 543, 545, 545, 603, 603, 375, 375, 375, 329,
	330, 327, 327, 328, 328, 336, 336, 334, 335, 335,
	337, 337, 446, 446, 446, 223, 223, 223, 366, 366,
	366, 366, 367, 367, 398, 398, 396, 396, 396, 396,
	397, 397, 399, 399, 399, 400, 400, 401, 401, 363,
	363, 364, 364, 365, 365, 365, 365, 427, 427, 211,
	211, 211, 343, 343, 343, 344, 344, 417, 417, 417,
	417, 417, 417, 418, 418, 416, 416, 416, 416, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 451, 452,
	452, 345, 345, 453, 403, 403, 562, 562, 562, 563,
	563, 444, 444, 454, 454, 454, 454, 454, 454, 442,
	442, 443, 443, 462, 463, 463, 379, 379, 379, 379,
	377, 377, 380, 380, 380, 380, 380, 378, 378, 455,
	455, 455, 455, 368, 368, 456, 456, 456, 456, 457,
	458, 458, 459, 459, 412, 413, 413, 469, 469, 469,
	469, 471, 342, 342, 342, 342, 342, 520, 519, 519,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 486, 486, 486, 486, 486, 486, 486, 472, 472,
	472, 472, 472, 476, 476, 476, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 477, 477, 482,
	482, 483, 483, 483, 478, 479, 484, 484, 484, 484,
	609, 609, 488, 488, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 474, 474, 474, 481, 481, 481, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 387, 387, 389, 389, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 421, 421, 421, 421, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 538, 538, 538, 538, 538, 538, 538, 538,
	423, 423, 541, 541, 542, 542, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 549, 549, 550, 550, 552,
	552, 553, 553, 554, 555, 555, 555, 556, 557, 557,
	551, 551, 558, 558, 558, 558, 559, 559, 560, 560,
	560, 560, 560, 561, 561, 561, 561, 561, 433, 433,
	434, 434, 440, 440, 440, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 257, 257, 257, 257, 257, 355, 355, 353, 353,
	353, 356, 356, 354, 354, 352, 352, 351, 351, 430,
	430, 428, 428, 432, 432, 381, 381, 487, 487, 487,
	487, 487, 487, 487, 487, 382, 382, 382, 390, 383,
	383, 384, 384, 384, 384, 384, 424, 425, 385, 385,
	385, 426, 426, 435, 439, 439, 438, 437, 437, 436,
	436, 414, 414, 415, 415, 362, 362, 610, 610, 358,
	358, 460, 460, 460, 460, 301, 301, 347, 347, 300,
	300, 292, 292, 293, 293, 293, 293, 340, 340, 441,
	441, 489, 489, 490, 490, 491, 491, 492, 492, 493,
	494, 495, 429, 429, 277, 276, 264, 265, 275, 274,
	273, 263, 266, 270, 271, 272, 268, 269, 283, 282,
	281, 236, 239, 288, 289, 289, 291, 291, 290, 290,
	279, 280, 465, 262, 294, 294, 295, 295, 295, 296,
	296, 296, 296, 258, 258, 259, 259, 284, 284, 285,
	286, 286, 278, 278, 278, 249, 249, 249, 250, 250,
	251, 251, 503, 503, 500, 500, 500, 501, 501, 501,
	502, 502, 502, 502, 499, 499, 499, 499, 499, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 512, 512, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 514, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 517, 517,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 6, 6, 6, 4, 4, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	3, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 12, 3, 1, 0, 1, 1,
	2, 3, 3, 0, 4, 6, 0, 5, 7, 6,
	8, 7, 2, 1, 3, 1, 3, 2, 5, 0,
	1, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 2, 0,
	1, 2, 3, 1, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 6, 6,
	6, 6, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 6, 3, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	7, 2, 6, 4, 7, 7, 7, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 4, 3, 3,
	5, 3, 4, 3, 5, 3, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 3, 2, 5,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 13, 16, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 5, 5, 5, 2, 2, 0,
	1, 3, 11, 12, 8, 5, 3, 1, 5, 10,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 6, 4,
	4, 5, 5, 7, 3, 3, 4, 4, 6, 3,
	6, 7, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	12, 15, 3, 1, 0, 4, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 580, -99, -96, -65, -63, -102, -103,
	-85, -104, -98, -124, -129, -111, -112, -113, -125, -131,
	-179, -184, -185, -186, -3, -51, -53, -66, -84, -86,
	-97, -106, -105, -107, -114, -121, -117, -101, -57, -126,
	-130, -139, -180, -181, -182, 33, 32, 101, 81, 152,
	127, 135, 198, 376, 418, 429, 390, 140, 410, 395,
	-134, -135, 446, -52, -64, -128, -127, 74, 128, 404,
	-4, -12, 30, 47, -54, -55, -56, 63, -72, -68,
	-79, -73, -70, -592, 103, -545, -87, -90, -120, -596,
	159, 216, -108, -109, 359, -115, -116, 412, -118, -119,
	414, 160, -59, -58, 154, -207, -209, -132, -133, -183,
	-140, -141, -142, -143, -144, -145, -146, -172, -147, -148,
	-149, -150, -151, -152, -156, -175, -153, -154, -155, -158,
	-157, -159, -164, -160, -161, -162, -163, -165, -166, -168,
	-169, -170, -171, -173, -174, 451, -167, 511, 50, 465,
	83, 144, 422, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -67, -69, -71, -74, -75, -76, -83,
	-77, -78, -544, -88, -89, -92, -94, -95, -91, -93,
	411, -210, -208, 577, 526, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -26, -36, -41, -42, -38,
	-39, -37, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -28, -34, -35, -29, -30, -31, -32, -33, -15,
	-27, 546, 555, -213, -211, -212, -220, 438, 534, 485,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, -299, 2, -279, -284, -285, -286, -278, -249,
	-514, -517, 4, -511, -515, 166, 225, 323, 21, 23,
	22, 24, 25, 26, 27, 28, 30, 31, 42, 43,
	45, 46, 47, 48, 49, 50, 54, 56, 60, 61,
	62, 63, 64, 65, 69, 74, 75, 80, 81, 82,
	83, 84, 85, 86, 92, 89, 90, 91, 93, 95,
	97, 98, 99, 100, 101, 102, 104, 105, 106, 108,
	109, 117, 118, 119, 120, 122, 127, 128, 131, 126,
	130, 133, 134, 135, 138, 139, 140, 142, 143, 145,
	146, 147, 149, 150, 152, 153, 154, 157, 155, 493,
	156, 158, 159, 160, 161, 164, 172, 173, 174, 179,
	181, 185, 186, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 199, 203, 205, 206, 207, 208, 209, 215,
	216, 218, 219, 220, 221, 226, 227, 228, 232, 229,
	238, 239, 243, 244, 245, 247, 251, 252, 253, 254,
	255, 256, 258, 260, 259, 262, 265, 266, 269, 273,
	274, 278, 279, 275, 280, 281, 283, 284, 287, 285,
	288, 289, 286, 290, 292, 293, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 303, 291, 306, 304, 308,
	309, 310, 321, 319, 314, 315, 311, 316, 312, 313,
	317, 318, 325, 326, 329, 213, 331, 332, 335, 353,
	339, 340, 341, 344, 345, 348, 351, 352, 354, 355,
	356, 357, 358, 359, 360, 361, 363, 364, 366, 367,
	368, 370, 371, 372, 374, 376, 377, 379, 380, 382,
	383, 384, 385, 386, 387, 388, 390, 392, 391, 393,
	395, 397, 398, 399, 404, 410, 406, 407, 408, 409,
	411, 412, 413, 414, 416, 417, 418, 420, 421, 422,
	423, 425, 427, 428, 431, 432, 448, 449, 467, 429,
	430, 433, 434, 435, 436, 437, 441, 439, 440, 442,
	443, 444, 446, 447, 450, 451, 453, 454, 455, 456,
	457, 458, 461, 463, 464, 465, 484, 466, 468, 471,
	472, 473, 474, 475, 469, 483, 477, 478, 480, 481,
	486, 487, 488, 489, 490, 491, 492, 494, 496, 504,
	505, 506, 508, 511, 512, 513, 514, 502, 516, 517,
	520, 521, 522, 525, 523, 524, 526, 528, 531, 532,
	533, 539, 538, 540, 547, 548, 550, 551, 552, 37,
	51, 52, 55, 57, 59, 70, 71, 72, 76, 123,
	124, 151, 162, 163, 175, 187, 188, 200, 202, 210,
	211, 212, 233, 234, 236, 241, 263, 328, 330, 346,
	350, 365, 369, 373, 375, 389, 424, 459, 470, 476,
	497, 498, 499, 500, 507, 509, 534, 535, 536, 541,
	549, -299, 2, -279, 337, -272, 2, -249, -249, 376,
	29, 2, 29, 364, 440, 488, 490, 2, -571, -341,
	2, 29, -252, -249, 103, 198, 438, -272, 2, -571,
	-341, 25, 2, -249, 2, 351, 22, 28, 67, 78,
	99, 138, 161, 182, 185, -595, 353, 383, 427, 442,
	483, 494, 508, 2, 538, 284, 439, 485, 225, 119,
	513, 433, -580, 431, 432, 351, 381, 420, 201, 527,
	-253, 2, 429, -249, 284, 2, 580, 95, 274, 75,
	424, 443, -137, 505, -136, 497, 433, -138, -498, 2,
	306, -249, 580, 580, 580, 29, -262, -249, 485, 225,
	433, 119, 481, 580, 2, 485, 356, 538, 439, 119,
	386, 225, 513, 433, -580, 284, -569, 2, -564, 4,
	-515, -511, -293, -292, 485, 491, 119, -286, -278, 570,
	-285, 580, 580, 580, 2, 244, 245, 385, 384, 443,
	444, 580, 580, 580, 580, 431, 2, 161, 22, 28,
	67, 94, 99, 125, 182, 185, 342, -593, 353, 383,
	442, 483, 487, 494, 508, -579, 466, 69, 433, -578,
	-580, 284, 513, 138, -391, 119, 274, 196, 521, 490,
	488, 519, 131, 232, 524, 523, 580, 580, -99, 2,
	577, 33, 32, 140, 446, -202, 485, 237, 2, -249,
	580, 580, 2, 244, 245, 431, 432, 580, 580, 183,
	-564, 2, 580, 580, 2, 244, 245, 431, 432, 237,
	2, 69, 435, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 2, -177, 443, 466,
	207, 48, 47, 75, 29, 382, 80, 357, 120, 146,
	514, 199, 225, 226, 252, 94, 95, -393, 45, 245,
	244, 432, -585, 431, -445, 486, 434, 440, 480, 256,
	429, 505, 103, 528, 421, 552, 386, 387, 478, 399,
	275, 155, 4, 119, 306, 445, 497, 274, 428, 360,
	85, -603, 2, 485, -605, 2, 505, 505, 2, -605,
	2, -605, 2, -605, 2, -606, 505, 549, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, -208, -210, -209, 580, 580,
	580, 580, 580, 580, 580, -177, 443, 2, 75, 29,
	-334, -336, 518, 235, 148, 343, -207, -209, 2, -544,
	-496, 2, -419, -518, -421, 568, 569, 561, 482, 68,
	322, 553, -433, 125, 519, 337, -517, -422, -435, 151,
	424, -356, 8, 9, 5, 6, 7, -258, -423, -429,
	510, 165, 327, -296, 581, 10, 577, -541, -209, -434,
	38, 202, 66, -500, -295, -259, -472, 236, -294, -278,
	-538, -539, 4, -511, -512, -501, -475, -483, -479, -480,
	-486, -249, -514, 78, 111, 112, 110, 115, 114, 277,
	276, 116, 113, 445, 527, 67, 37, 210, 211, 241,
	328, 212, 76, -540, 139, -513, 233, 234, 459, 52,
	389, 175, 124, 123, 330, 57, 55, 535, -484, 121,
	497, 498, 499, 500, 187, 188, 59, 162, 163, 350,
	373, 476, 507, 509, 200, 263, 44, 107, 184, 231,
	214, 240, 242, 246, 264, 267, 307, 320, 324, 347,
	349, 419, 452, -609, 536, 470, 70, 71, -546, 391,
	-547, -272, -546, 580, 580, 582, 580, -327, -329, -330,
	2, 29, 136, 577, 2, -450, 2, -451, -455, -209,
	257, -454, 577, -452, 575, -279, 338, -542, 425, -538,
	-539, -258, -278, -295, 4, -511, -513, 579, -331, 577,
	119, 485, 79, 225, -386, 577, -249, 29, 337, 501,
	582, -328, 380, -431, 577, 337, 183, 340, 61, 288,
	2, 2, 2, 2, 2, 210, -249, 485, 118, 2,
	255, 2, 2, 2, 2, 2, 2, 2, -349, 210,
	2, -279, 538, -349, 210, 2, -349, 210, 2, -392,
	2, 88, -263, 210, 2, -249, -287, 210, 2, -282,
	-284, -291, 210, 2, -289, -249, -509, 210, 2, -508,
	-503, 10, -502, 5, 4, -511, -515, -512, -514, 78,
	-419, 2, -126, 2, 61, -249, 538, 2, 2, 448,
	2, 577, -137, 72, 505, 44, 443, -406, 2, -407,
	-245, -246, -247, -462, -248, 243, 379, 388, 556, 129,
	322, 552, -496, -587, 183, 560, 501, -496, -357, 579,
	2, 2, 2, 2, 2, 2, -455, 210, -279, 2,
	-276, -499, 4, -511, -515, -512, -516, 29, 32, 33,
	34, 36, 38, 39, 40, 41, 58, 66, 67, 73,
	77, 79, 88, 94, 103, 110, 111, 113, 112, 114,
	115, 116, 125, 129, 132, 136, 137, 141, 144, 148,
	165, 167, 180, 182, 183, 198, 201, 204, 217, 230,
	235, 237, 257, 261, 268, 276, 277, 322, 327, 333,
	337, 338, 342, 343, 362, 378, 394, 415, 438, 445,
	462, 479, 485, 495, 501, 503, 510, 518, 519, 527,
	529, 537, 542, 543, 544, 545, 546, -517, 2, -455,
	210, 2, -281, 210, -455, -284, 2, -263, 2, -275,
	-499, 2, -300, 210, -279, -280, -284, -282, 2, -289,
	2, -508, 210, 2, 538, 237, 501, 582, -347, -292,
	-293, -495, 8, -340, -249, 579, -419, 2, -126, -110,
	2, 180, -419, 210, 2, -126, 210, 2, -419, 210,
	2, -126, 210, 2, -582, 2, -508, 210, -249, 2,
	288, 2, 2, 508, 2, 99, 485, 118, 2, 408,
	-594, 427, 512, 2, 2, 2, 2, 2, 2, 2,
	485, -268, 2, -249, 180, -289, 210, -290, 2, 439,
	-604, 391, -508, 210, 2, 538, -282, 210, 2, -282,
	225, 239, -263, 210, 2, 490, 488, 490, 488, 183,
	2, 237, 2, 237, 2, -456, 2, -457, -451, -458,
	575, 338, -466, 2, -465, -502, 534, -99, 577, -99,
	577, 443, 577, -508, -279, -279, -419, 2, -126, -110,
	2, -419, 2, -126, 2, -123, -508, -122, 577, 183,
	-419, 2, -126, -110, 2, -419, 2, -126, 2, -202,
	180, 2, 119, 485, -177, 2, 180, 529, 2, 8,
	2, 217, -508, 434, 387, 172, 2, 448, 2, 449,
	75, -393, 552, 75, 183, 2, 183, 2, -376, 2,
	546, 183, 2, 2, -568, 2, 337, 183, 2, 183,
	2, 183, 2, 183, 2, 183, 2, -176, 444, 506,
	484, 384, 245, 2, -126, 543, -110, -419, 543, 2,
	-586, 180, 432, -419, 2, 504, 254, 156, 183, -376,
	2, 183, 2, 183, 2, 5, 2, 385, 467, 2,
	243, 379, 467, 2, -279, -597, 2, 485, 538, 439,
	2, 2, 89, 90, 183, 2, 183, 2, 197, 183,
	2, 183, 552, 2, -368, -455, -405, -406, -405, 501,
	-334, -336, -177, 448, 2, -214, -366, -216, 180, -396,
	-397, -217, 268, 167, 333, -218, -375, 29, 136, -375,
	-375, 61, 578, 578, 11, 12, 77, 42, 568, 569,
	570, 571, 178, 572, 573, 566, 567, 565, 558, 559,
	563, 249, 250, 96, 562, 560, 87, 282, 426, 168,
	169, 170, 171, 405, 223, 35, 224, 14, 15, 16,
	34, 342, 267, 553, 214, 452, 561, 17, 18, 19,
	240, 242, 324, 51, 217, -257, -302, -419, -419, -419,
	-419, -419, -419, -419, 349, 577, -362, -414, 575, -209,
	577, 577, 577, -495, -209, -419, -433, 578, -354, 577,
	-209, -433, -428, 577, 424, 575, 577, -436, -419, 5,
	5, 5, 577, 579, -549, 547, 180, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 375, -477, 577, -476, 577, -476, -476, 539,
	-474, 577, 555, 548, 577, -474, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 539,
	582, -546, -331, 577, -358, -460, -419, 570, -358, -358,
	337, -351, -419, 107, -379, 246, 307, 184, 264, 419,
	231, -416, 581, -416, -444, 555, -209, -452, -278, -209,
	-454, 577, -450, -444, -100, -495, -84, -97, -105, -126,
	-139, -181, -182, 570, -279, 577, 183, 577, 579, -499,
	183, -340, -263, -279, -294, -295, -300, 135, -351, -564,
	513, 433, -340, -252, 39, -430, -469, -470, -520, 581,
	-519, -472, -482, -478, -481, 365, 369, -501, 55, 535,
	-484, 236, 4, -511, -513, 233, 234, 459, 52, 389,
	175, 124, 123, 330, 57, 497, 498, 499, 500, 187,
	188, 59, 536, 470, 70, 71, -564, 513, 433, -340,
	180, -506, 2, -505, -504, 116, 445, -502, 5, 2,
	151, 2, 2, 2, -249, -228, 582, 65, 413, 151,
	-349, 210, -228, 151, -228, 151, -301, 210, -300, -228,
	151, -228, 582, 151, -228, 582, 151, 579, 582, 151,
	-506, 2, -392, -498, -351, 39, -406, 2, 125, -504,
	-607, 582, 266, -304, 281, 321, 206, 338, 550, 331,
	129, -507, 5, 4, -429, -441, 125, 274, 236, -489,
	-491, 8, -490, 9, -492, 568, 569, -497, -496, 109,
	579, -499, -225, 406, 446, 352, -224, 24, 30, 140,
	227, 310, 532, 157, -317, 228, -314, 356, 151, 463,
	522, -575, -576, 430, 492, 493, 91, 331, 446, 352,
	406, 151, -372, -374, 39, 117, 310, 351, 62, 220,
	286, 287, 465, 541, 151, 446, 352, 406, 352, 24,
	140, -240, -237, -576, 100, 406, 477, 378, -576, -227,
	463, 522, -575, -576, 430, 406, -226, -319, -314, 356,
	151, 581, 24, 406, 446, 352, -590, -591, 140, 30,
	406, 352, -572, -543, 546, 151, -455, 210, -583, -122,
	258, 5, 10, -508, -122, -347, 582, 582, -499, 570,
	432, 431, 151, 151, 151, 151, 180, 322, 2, 2,
	2, 2, 2, 185, -578, -595, 2, 2, -279, 210,
	-333, 337, -567, -348, 485, -279, 322, 44, -281, 210,
	2, -284, 538, -572, 322, -283, 210, -279, 39, 577,
	322, 2, -392, 2, 225, -543, 322, -456, -297, -279,
	-451, -297, 446, -272, 39, -416, -279, 578, 582, -466,
	-466, -508, -190, 546, 183, 103, 577, 577, -202, -463,
	582, -462, 217, -509, -123, -508, 409, -508, -567, -263,
	2, -279, 2, 485, 247, -508, -190, 217, -508, -508,
	-508, -498, 29, 449, 2, -176, 444, 506, 90, 449,
	2, -279, 485, 119, 225, 81, -249, -570, 180, -565,
	420, 433, 513, -564, -279, 119, -279, 119, -279, 119,
	-279, -279, 2, 2, 2, 2, 2, 86, 86, 2,
	47, -586, 180, 2, 504, 2, 504, 2, -249, -249,
	-249, 466, 266, -279, -598, 183, 180, 485, 225, 485,
	225, 119, 183, 75, 119, 29, 485, -228, 582, -253,
	-214, -366, -498, -367, -366, -215, -214, -217, 180, 388,
	523, 310, 450, 251, -397, -396, 29, -419, -401, 174,
	309, -419, -399, -421, 568, 569, -490, -492, -350, 331,
	-208, -208, -208, -337, -446, -419, 378, 225, -471, -469,
	-469, -277, -499, 497, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, 267,
	214, 452, 51, 217, -419, 501, -419, -419, -419, -419,
	304, 322, 327, 510, 165, 520, 136, 331, -610, 479,
	41, -426, -209, -355, 577, -440, 36, 462, 29, -433,
	577, 2, -414, -419, -415, -352, -351, -351, 578, 537,
	29, 136, 570, 2, 578, 582, 39, 578, -419, -352,
	-432, -428, -351, -439, -438, 543, -387, -388, 551, 291,
	122, 208, 289, -389, 437, -493, 8, -499, 570, -550,
	173, 201, 577, 578, 2, 578, 2, 578, -419, 2,
	578, -419, 2, 578, -419, 2, 578, -419, 2, 578,
	2, -419, -419, -419, -419, -419, -419, -419, -351, 8,
	-493, -493, 497, 497, -493, -493, -493, -485, 365, 366,
	367, 368, 269, 270, 271, 272, 369, 370, 371, 372,
	296, 297, 298, 299, 292, 293, 294, 295, 300, 301,
	302, 303, 192, 193, 194, 195, 188, 189, 190, 191,
	-485, -381, 2, -487, -351, 4, 551, 291, 122, 208,
	289, 437, 5, -381, 2, -382, 2, -419, -351, -383,
	-420, -421, 568, 569, 561, -433, -384, 2, -419, -352,
	-419, 58, 261, 503, -385, -419, 183, -351, -351, 2,
	-351, 2, -547, 39, -351, -343, 582, 183, 39, 4,
	-343, -343, 577, 578, 582, -380, 205, 285, 280, 239,
	-380, -450, -379, 246, -377, 347, -377, -377, -444, -264,
	575, 583, -499, -444, -443, -442, 39, -272, 344, -444,
	-444, 579, 578, -443, 576, -562, 577, 580, 580, 580,
	580, 580, -279, 577, -351, -499, 579, 468, 578, 240,
	240, 240, 240, 425, 578, 501, -566, -287, -291, 546,
	-99, 339, 578, 582, -342, 38, 575, 579, -493, 2,
	2, -488, 539, 577, 577, -388, 577, 183, -566, -291,
	-341, 582, 501, -249, 2, -279, -349, -228, 151, -349,
	-349, -228, 582, 151, -263, -282, -287, -289, -291, -249,
	-508, -509, -228, -283, -587, 578, 505, -407, -303, 388,
	461, 407, 441, 481, 8, 9, 8, 9, 582, -499,
	582, -588, 94, 501, 79, 433, -242, 275, 398, 310,
	485, 424, 501, -410, 210, 79, -521, -266, 94, -522,
	-249, 73, 519, 378, 182, 149, -588, 94, 378, -588,
	94, 2, 227, 94, 446, 466, 29, 61, -455, 42,
	42, 29, -126, 262, 183, 552, 485, 225, 433, 501,
	501, -455, -374, -469, 117, 286, 287, 61, -494, -489,
	568, 569, -494, 61, -494, -494, -494, 546, -281, -455,
	433, 501, 501, 501, 397, 397, 501, 501, -608, 560,
	397, 582, 42, 42, 29, -126, 262, 183, 501, -300,
	-264, 533, 43, 533, 501, 43, 433, 501, 582, 43,
	43, 501, 501, -573, -254, 106, 316, 279, 317, 98,
	313, 97, 312, 104, 314, 105, 315, 540, 325, 64,
	311, 290, 318, -255, -256, 358, 531, -508, 446, 352,
	406, 151, 217, -463, 217, -463, -292, -249, 579, -126,
	-419, -419, -126, -419, -126, 47, 151, 2, -604, 255,
	577, -307, 322, 183, -340, -464, 237, 582, -348, 151,
	-505, -373, -372, 322, -283, 210, 2, 151, -331, 322,
	145, 577, 386, 2, 151, -265, 210, -250, -249, -392,
	-231, 489, 151, -370, 529, -402, -126, 577, 125, 39,
	-402, -359, -360, -461, -361, -266, 577, -272, -416, -99,
	-465, 578, 578, 578, -189, 341, -188, -249, 5, -202,
	529, -306, -411, -410, -525, -526, -521, 267, 225, 519,
	239, 166, -332, -267, -266, 118, -196, 546, -122, -123,
	578, -463, 217, 475, -190, -190, -463, -463, -279, 180,
	-508, -190, -190, -190, 2, 2, 2, -376, -279, -263,
	-300, -279, 579, -340, -340, -291, -287, -376, -263, -376,
	-263, -376, -263, -126, -419, 2, 443, 180, 180, 579,
	-376, 386, 119, 485, 356, 225, -279, -300, -279, -300,
	-263, 119, -263, 120, -279, -455, -367, -215, 338, 251,
	450, -399, -400, -421, 424, 425, -400, 424, 425, 8,
	9, 8, 9, -219, 454, 326, -349, 582, -222, 40,
	132, 251, -279, 552, 147, -419, -419, 501, -610, 479,
	-426, 147, -419, 304, 327, 510, 165, 520, 136, 331,
	183, 577, -420, -420, 578, -353, -419, -419, 576, 585,
	578, -336, 582, -334, -419, -351, -351, 578, 579, -351,
	-340, 576, 576, 582, 578, -437, -438, 141, -419, 501,
	501, 501, 501, 577, 578, 579, -555, 348, 577, 577,
	-419, 578, 578, 578, 578, 39, 582, 582, 582, 578,
	582, 582, 582, 578, 578, 578, 582, 578, 552, 552,
	578, 578, 578, 578, 582, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 578,
	582, 578, 183, 578, 578, -390, 362, 578, 11, 12,
	568, 569, 570, 571, 178, 572, 573, 566, 567, 565,
	558, 559, 560, 87, 282, 426, 14, 15, 16, 240,
	217, -420, -420, -420, 578, -424, -425, 183, 180, 39,
	-385, -385, -385, 578, 183, -351, 578, 578, 577, -548,
	284, 322, 578, -413, -412, 544, -460, -344, 2, -450,
	-274, -499, -413, -413, -351, -419, 246, 246, -378, 529,
	337, -380, -450, -443, -495, -418, -417, 181, 40, 132,
	319, 213, -443, -272, -331, -443, -443, -499, -444, -444,
	-442, 578, -563, -495, 578, -345, -453, -542, -336, 579,
	-499, -199, -543, -178, 5, 327, -178, -178, -178, -340,
	501, 501, 25, 363, -469, 575, 576, 8, -499, 577,
	-493, -493, -493, -340, 183, 183, 183, -505, -505, 2,
	-228, -349, -228, -228, -300, -301, -228, -228, -228, -371,
	546, -496, -406, 517, 84, 388, 497, -496, -224, 406,
	-266, -266, -279, -288, -249, 196, 398, 26, 398, 266,
	266, -505, 322, -410, 210, -230, 322, -469, -273, -249,
	577, -394, 548, 251, 251, 529, -266, -273, 251, 210,
	-266, 210, -273, 2, -273, -574, 388, 332, -419, 61,
	-315, 273, 386, 323, -225, 406, 446, 352, -126, -126,
	-126, 577, -587, 529, 135, -279, -300, -279, -288, -505,
	-283, 446, 352, 406, 320, -294, -494, -494, -372, 446,
	352, 406, -288, -505, -281, -505, -236, -249, -236, 433,
	-263, 397, 552, 46, -608, -226, -126, -126, -126, 577,
	-264, -227, 406, 5, 210, -266, 5, -249, -266, -288,
	-505, -591, 24, -266, 210, -266, -288, -505, -254, -508,
	327, 525, -572, 433, 501, 501, -455, -122, -193, 546,
	-122, -187, 221, 570, -569, -249, 538, -249, -305, -308,
	-306, -266, -205, -206, 548, 546, 151, -298, -279, 575,
	-190, -508, -279, -289, -290, 151, -331, 322, -508, 39,
	151, 577, 2, 2, -282, 337, 322, -265, 210, -232,
	142, -608, -263, -413, -344, -369, -404, 415, 337, -332,
	534, -272, -369, -346, 582, 183, 560, 579, -332, -459,
	570, -99, -99, -190, 582, 577, 560, 560, 577, -508,
	-508, 578, 582, -230, -279, -265, 225, 225, -271, -250,
	578, 582, 579, 577, -198, 341, -197, 143, 253, 238,
	455, 456, 457, 458, 134, -463, -196, -123, 183, 183,
	-60, 546, 485, -190, 581, -249, -376, -376, -376, 443,
	443, -249, -275, -263, -279, -276, -300, 180, 180, -263,
	523, -400, 338, 278, -446, -223, 554, -279, 581, -419,
	-419, 147, 147, -419, -420, -420, -419, 147, 183, 577,
	-419, -430, 34, 34, 578, 582, -415, -419, 578, 537,
	-336, -336, 578, 570, -499, 581, 578, -428, 144, -419,
	495, 291, 208, 289, -389, 289, -389, -389, -493, 5,
	-499, 570, -556, -269, 577, -249, 544, -335, 343, 578,
	-471, -469, -419, -419, -419, -419, -419, -493, -474, -474,
	-489, -489, -419, -424, -419, -471, -469, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, 136, 322, 331, -420,
	-425, -424, -419, -419, -469, 578, 578, 578, -351, -99,
	577, 284, -363, 201, -419, -463, 582, -363, -363, 578,
	-450, -450, 577, -419, 246, 576, 582, 584, 560, -331,
	579, -442, -443, 576, 578, 582, 578, 582, -403, 39,
	578, -499, -413, -201, -200, 133, 54, -340, -340, 340,
	5, 8, 575, 576, 579, -493, 578, 578, 578, -340,
	-340, -340, -228, -228, 118, 310, -419, 501, 501, 61,
	501, 42, 320, -236, 378, 424, 26, 398, 398, 151,
	322, 531, -527, -522, 149, -419, 577, 225, 577, 577,
	2, -221, 140, 446, -589, 2, 529, 151, -228, 151,
	-228, 550, -315, 577, 577, 501, 433, -242, 501, 546,
	-351, -419, -191, 125, -498, -576, 581, -576, 581, 433,
	501, 501, 433, 501, 501, 546, 164, 164, 552, -236,
	546, -351, 501, -473, 49, 27, 322, -282, 501, 501,
	-228, 151, 513, 446, -508, 327, -288, -505, -283, 446,
	352, 406, -463, -195, 341, -194, 143, 417, 134, 253,
	-463, -193, 183, 237, -283, 2, 578, 578, 582, -528,
	39, 335, 335, 577, -279, -80, 546, -462, -495, 44,
	-281, 39, 151, -572, -126, -283, -467, -468, 5, 39,
	-279, 151, 337, 322, -233, 260, -608, -503, -543, -336,
	-369, -358, 323, 92, 578, -413, -360, -344, -419, 2,
	578, -188, -189, -508, -508, -508, -190, -202, -202, -411,
	-309, 577, -265, -250, 577, -202, -267, 2, -509, 582,
	577, 560, 560, 560, -196, -463, -122, -126, 341, -279,
	570, -376, -321, -320, 356, 331, -321, 424, 424, 338,
	174, 256, -222, -264, -419, -419, 147, 34, 34, -419,
	-419, -430, 578, -419, -419, -351, 576, 5, -419, 578,
	578, 8, -419, 578, 579, -557, -249, -419, 578, 61,
	578, 578, 582, 582, 578, 578, 578, 578, 578, 578,
	578, -425, 183, 136, 331, 577, 578, 578, -99, -427,
	204, 61, -450, -427, -427, -378, -340, -450, -417, -264,
	575, -499, -495, -453, 577, 579, -200, 560, 576, 2,
	575, -499, 578, 118, -266, -266, 485, 424, 320, -236,
	378, 424, 397, 266, 26, 26, -410, 151, -529, 94,
	-531, 77, 166, 103, 322, 327, 519, 378, 73, 125,
	394, -600, 39, 557, 578, -338, -447, -542, 577, -249,
	-338, -340, 322, 473, 125, 322, 125, 118, 513, 80,
	-266, -273, -340, -340, -279, -288, -505, 158, 578, 582,
	560, 2, 570, 570, -288, -505, -283, -288, -505, -281,
	354, 164, 158, 578, -264, 5, 5, 151, -261, 77,
	5, -266, -266, -282, 118, 433, 501, 501, -193, 582,
	577, 560, 560, -193, -509, -122, -331, -322, 227, -266,
	-526, -523, -524, 378, -530, -532, 166, 378, -126, 2,
	-204, -203, -249, 5, 577, -307, 341, 576, -505, -373,
	-126, -283, -331, 578, 582, 145, -395, 529, -264, -279,
	151, -234, 259, -608, -503, -231, -398, -396, 137, 577,
	337, -126, -336, 560, 578, 578, 118, 118, 219, 150,
	-338, 577, 577, -340, 118, 578, -197, -198, -508, -122,
	-508, -196, -61, -62, 225, 94, 361, -276, 485, 225,
	577, 577, -222, -419, -419, -419, 578, -336, -499, 570,
	-551, 356, 578, -446, -419, -419, -420, 183, 577, -430,
	578, -552, 545, -419, -364, -365, -419, 423, 108, 202,
	-552, -552, 578, -495, 2, -508, 575, 2, 217, 39,
	397, 266, 39, 501, 39, -410, -273, -277, -270, -249,
	166, 210, 327, 542, -394, 251, 577, -420, -279, 577,
	2, 31, -601, 129, 230, 578, 582, -448, -260, -249,
	-419, -448, 578, 578, 327, 327, -419, -469, 577, -228,
	-228, 578, 578, -419, 501, -498, 101, -496, 2, -576,
	-263, -419, 501, 5, -228, -277, -228, -228, -261, 513,
	-288, -505, -283, -194, -195, -508, -122, -193, 39, -312,
	229, 2, -528, 251, -270, 251, -599, 546, 578, 582,
	560, 560, -305, -205, -81, -82, 502, -462, -331, 39,
	5, 577, 577, -249, 337, 577, -264, -244, 93, -608,
	-503, -232, -369, 323, -340, 94, -398, -426, -190, 577,
	577, -310, 82, 95, 126, 209, 186, 226, 466, 471,
	29, -310, 578, -338, -338, 578, 577, -190, 578, 582,
	29, 577, 29, 577, -279, -300, -351, -351, 578, -336,
	61, 582, 578, 578, -420, -430, 578, -553, -554, -269,
	582, 577, 577, 447, 576, 2, -236, 378, -249, 39,
	-249, -236, 378, -249, -531, -270, 322, 529, -419, -251,
	577, -419, 39, 230, 130, 215, -409, -602, 102, 474,
	218, -447, -222, 578, -408, 529, 394, -261, -338, 577,
	577, 577, 560, 183, 577, -473, -228, -282, 578, -581,
	392, -126, -316, -317, 217, 577, -311, 337, 118, 310,
	-203, -496, -496, 578, 39, -82, 9, 39, -126, -467,
	-338, -279, -338, 337, -238, -237, 268, -503, -233, 578,
	-273, -369, -509, -509, -408, 578, 578, -509, -62, -340,
	-340, 578, 578, -558, 386, 425, 203, -351, -337, 578,
	582, 39, -365, 2, 2, 2, 397, -249, 397, 151,
	205, 578, -533, 283, -249, 578, 130, 215, -312, 577,
	-223, -448, -312, 205, -279, -577, 529, 578, -324, -323,
	-320, -326, -325, -320, -351, -496, 101, 354, -351, -261,
	-584, 184, -583, 5, 10, -205, 354, -339, -449, -266,
	83, 118, -322, -126, -126, 578, 578, -395, 578, -279,
	-235, -510, 397, 399, -608, -234, -413, 578, 578, -409,
	-408, -206, 546, 578, 578, 578, 578, -559, -560, 51,
	516, 109, -419, -559, -559, -554, -556, 166, 546, -534,
	-537, -536, 337, 453, 184, 355, 578, 473, 541, -318,
	-314, -340, 546, -331, -419, -408, 578, 582, 534, 578,
	582, 534, 578, 183, 578, -228, -192, 546, 47, -311,
	-279, 578, 582, 377, 131, 140, -312, -599, -408, 577,
	-409, 577, -241, -240, -608, -489, -244, 137, -190, -190,
	-312, -409, -413, -190, -561, 149, -560, 374, 179, 424,
	374, 179, -561, -561, -270, 56, -536, 337, -537, 337,
	523, 131, -601, 578, 56, -533, -312, -323, 217, -325,
	183, 354, 431, -583, 31, -243, -242, 577, -449, 425,
	425, 2, -316, -311, -409, -338, -312, -338, -239, -340,
	-238, 323, 523, -318, -312, 109, 201, 496, 310, 34,
	560, -535, 310, 413, 65, 446, -535, -413, 560, -534,
	577, 577, 341, -340, 2, -205, -312, 578, -318, 578,
	-235, 446, -206, -318, 424, 345, -560, -419, 23, 327,
	125, -419, -601, -351, -351, -189, 577, 578, -311, -318,
	-408, -206, -409, -241, -359, -413, -206, 578, 578, -189,
	-229, 65, 413, -243, -206, -409, -413, -312, -413, -413,
	-313, -314, 501, 578, -413, -312, -318, 577, -318, -206,
	-351, -206, -413, 578, -413, -313,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 506, 507, 509, 510, 511, 513,
	514, 516, 518, 520, 521, 522, 524, 525, 527, 528,
	529, 530, 531, 533, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	597, 599, 0, 1297, 1299, 1301, 1303, 0, 740, 0,
	36, 37, 0, -2, 304, 306, 308, 0, 334, 336,
	337, 339, 341, 343, -2, 0, 441, 442, 444, 446,
	-2, 0, 926, 928, 0, 586, 588, 0, 931, 933,
	0, 0, 608, 609, 0, 1404, -2, 602, 604, 606,
	671, 673, 675, 677, 679, 681, 683, 685, 687, 688,
	690, 692, 694, 696, 698, 699, 701, 703, 705, 706,
	708, 709, 711, 713, 715, 717, 719, 721, 723, 725,
	727, 729, 731, 733, 735, -2, 737, -2, -2, 0,
	-2, -2, -2, 1315, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 392, 393, 395, 397, 399, 401, 404,
	406, 408, 1462, 448, 450, 452, 454, 456, 458, 460,
	0, -2, 1476, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 99, 100, 101, 102,
	103, 104, 105, 106, 72, 73, 74, 76, 77, 78,
	79, 83, 84, 85, 86, 87, 88, 89, 90, 97,
	70, 0, 0, 1435, 1437, 1439, 1441, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 508, 512, 515, 517, 519, 523, 526, 532,
	534, 536, 493, 494, 497, 2140, 2157, 2158, 2159, 2162,
	2163, 2164, 2165, 2166, 2167, 2602, 2684, 2685, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 495, 496, 1103, 0, 560, 558, 2125, 561, 2406,
	563, 565, 435, 436, 437, 438, 439, 440, 0, 579,
	571, 1474, 580, 582, 583, 584, 585, 555, 553, 0,
	579, 2193, 577, 1295, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 371, 1152, 1153, 1154,
	1280, 1281, 2450, 1322, 0, 214, 598, -2, -2, -2,
	2567, -2, 630, -2, 637, 2571, 2452, 642, 0, 644,
	-2, 647, 1298, 1300, 1302, 738, 739, 2143, 0, 0,
	0, 0, 0, 38, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 224, -2,
	-2, -2, -2, 0, 0, 2496, 2244, 2093, 2159, 2096,
	2091, 305, 307, 309, 310, 0, 0, 0, 0, 0,
	0, 335, 338, 340, 342, -2, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 987, 979,
	980, 1210, 0, 0, 0, -2, 443, 445, 498, 499,
	0, 1463, 1463, -2, 0, 0, 0, 0, 279, 270,
	927, 929, 930, 0, 0, 0, 0, 587, 589, 0,
	0, 252, 932, 934, 935, 0, 0, 0, 0, 0,
	281, 0, 0, 603, 605, 607, 672, 674, 676, 678,
	680, 682, 684, 686, 689, 691, 693, 695, 697, 700,
	702, 704, 707, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, 734, 736, 746, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 834, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	908, 0, 749, 751, 752, 753, 0, 812, 832, 833,
	842, 0, 1143, 1464, 1324, 1305, 1319, 1324, 1307, 1308,
	1309, 1310, 1311, 1316, 1318, 1312, 1313, 1314, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 394, 396, 398,
	400, 402, 405, 407, 409, -2, 1433, 1434, 449, 451,
	453, 455, 457, 459, 461, 590, 0, 592, 0, 750,
	-2, 0, 1468, 1468, 1468, 0, 0, 1434, 1432, 0,
	595, 596, 651, 652, 1736, 0, 0, 0, 0, 0,
	0, 0, 1990, 1822, 0, 653, -2, 1853, 1855, 2542,
	2567, 1989, 1857, 1858, 1859, 1860, 1861, 0, 1863, 1864,
	1865, 1866, 1867, 1868, 0, 1870, 0, 1875, 1876, 1877,
	0, 2549, 2070, 2153, -2, 0, 0, 2555, 2149, 0,
	1956, 1893, -2, -2, 2176, 2155, 1668, 1669, 1670, 1671,
	1672, -2, -2, 2585, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 0, 2530, 2550, 2551, 2556,
	2558, 2552, 2539, 1918, 2256, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1695, 1704,
	-2, -2, -2, -2, -2, -2, -2, 2543, 2544, 2561,
	2564, 2570, 2575, 2576, 2548, 2557, 2584, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 1696, -2, -2, -2, -2, 1451, 2419,
	1454, 1103, 1452, 1436, 1438, 0, 1440, 0, 0, 0,
	1445, 1471, 1469, 0, 1520, 1449, 1450, 1538, 1538, 1562,
	0, 1543, 0, 1562, 1463, 1589, 0, 1549, 2442, 1894,
	1895, 0, 2159, 2154, -2, -2, 2582, 0, 0, 0,
	0, 0, 0, 0, 556, 0, 562, 564, 0, 0,
	0, 578, 1473, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 377, 378, 2550, 0, 0, 0, 383,
	0, 385, 386, 387, 388, 389, 390, 391, 184, 2550,
	466, 491, 0, 184, 2550, 469, 184, 2550, 472, 0,
	475, 1208, 184, 2550, 478, 2121, 184, 2550, 481, 483,
	2129, 184, 2550, 487, 2136, 2134, 488, 2550, 490, 284,
	282, 283, 2172, 2173, 2180, 2181, 2182, 2183, 2583, 2585,
	1291, 1292, 1293, 1294, 0, 1321, 1209, 600, 601, 0,
	625, 0, 629, 2538, -2, 0, 2461, -2, 633, 1325,
	1329, 1330, 1331, 1332, 1333, 0, 0, 0, 0, 1338,
	0, 0, 639, 0, 0, 626, 627, 645, 648, 0,
	741, 742, 743, 744, 745, 69, 0, 2550, 1589, 71,
	0, 2115, 2184, 2185, 2186, 2187, 2188, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 75, 0,
	2550, 80, 0, 2550, 0, -2, 91, 0, 98, 0,
	2118, 107, 0, 2550, 0, 2090, -2, 0, 195, 0,
	954, -2, 2550, 1151, 0, 0, 0, 0, 917, 2087,
	2092, 918, 2111, 919, 2097, 0, 311, 312, 313, 314,
	315, 0, 316, 2550, 318, 319, 0, 321, 322, 2550,
	324, 325, 0, 327, 0, 235, 236, 2550, 346, 347,
	0, 349, 350, 0, 352, 0, 0, 0, 356, -2,
	372, 0, 369, 359, 360, 362, 363, 364, 365, 366,
	0, 413, 411, 2126, 0, -2, 2550, 0, 951, 0,
	0, 1188, -2, 2550, 1148, 0, 1195, 2550, 1191, 0,
	-2, 0, 1461, 2550, 1342, 983, 984, 985, 986, 1601,
	432, 0, 1369, 0, 1371, 0, 1390, 1595, 1538, 0,
	0, 1600, 0, -2, 549, 2142, -2, 501, 0, 502,
	0, -2, 0, 296, 0, 0, 936, 937, 938, 939,
	940, 943, 944, 945, 946, 1575, 253, 255, 0, 0,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 0,
	0, 610, 0, 0, 747, 748, 0, 0, 758, 759,
	760, 0, 296, 2453, 2415, 2277, 767, 0, 770, 773,
	-2, 0, 0, 0, 0, 777, 0, 782, 783, 784,
	0, 0, 788, 790, 925, 792, 0, 0, 794, 0,
	798, 0, 801, 0, 803, 0, 805, -2, -2, -2,
	813, 814, -2, 818, -2, 0, 821, 823, 0, 825,
	-2, 0, 834, 830, 831, 0, 0, 0, 0, 850,
	851, 0, 860, 0, 863, 864, 865, 0, 867, 868,
	0, 870, 871, 872, 873, 0, 875, 876, -2, -2,
	880, 882, 0, 889, 0, 895, 0, 899, 0, 0,
	907, 0, 754, 755, 184, 1593, 1304, -2, 1306, 0,
	-2, 0, 591, 0, 594, 1493, 1419, 1416, 0, 1490,
	1491, 1420, 0, 0, 0, 1427, 0, 1466, 1467, 0,
	0, 0, 1406, 1407, 0, 0, 0, 0, 1995, 1996,
	1997, 1998, 1999, 2000, 2003, 2004, 2001, 2002, 2005, 2006,
	0, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 2009, 2010,
	0, 0, 2012, 0, 2014, 0, 0, 0, 0, 0,
	0, 1801, 1803, 2078, 0, 0, 2011, 1741, 1742, 1743,
	1744, 1745, 1780, 1781, 0, 0, 1854, 2075, 2074, 1856,
	0, 2026, 0, 1869, -2, 0, 1990, 2021, 0, 0,
	1878, 1879, 1880, 0, 0, 2026, 0, 0, 2069, 1890,
	1891, 1733, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 1681, 0, 1683, 0, 1684, 1685, 1692,
	1705, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 2050, -2, 0, 0, 0, 0, 1697,
	0, 1453, 0, 0, 1524, 2079, 2083, 2084, 1524, 1524,
	0, 0, 2027, 1586, 1586, 0, 0, 1581, 1581, 1581,
	1579, 1562, 0, 1562, 1572, 0, 1562, 1562, 0, -2,
	1543, 0, 0, 1572, 0, 1556, 537, 539, 541, 543,
	544, 545, 547, 1590, 1591, 0, 0, 0, 0, 2160,
	0, 0, 0, 0, 0, 2145, 0, 0, 0, 0,
	2506, 2452, 567, 581, 1463, 0, 2029, 1616, 1620, 0,
	1622, 1623, 1624, 1625, 1626, 0, 0, 1617, -2, 1693,
	1695, 1716, 2177, 2178, 2179, 1676, 1677, 1678, 1679, 1680,
	1688, 1675, 1675, 1675, 1686, 1715, 1707, 1715, 1711, 1661,
	1662, 1663, 1698, 1699, 1700, 1701, 0, 2506, 2452, 573,
	0, 0, 1401, 199, 201, 202, 203, 204, 205, 373,
	0, 380, 381, 382, 0, 462, 0, 182, 183, 0,
	184, 2550, 467, 0, 470, 0, 184, 2550, 2085, 476,
	0, 479, 0, 0, 485, 0, 0, 0, 0, 0,
	184, 1403, 0, 0, 0, 0, -2, 635, 640, 641,
	0, 1327, 0, 1334, 662, 663, 664, 1336, 1337, 0,
	1339, 638, 665, 666, 667, 668, 669, 670, 0, 2099,
	2100, 2101, 2102, 2105, 2106, 0, 0, 636, 655, 643,
	0, 649, 108, 1277, 0, 0, 147, 0, 1277, 1277,
	0, 0, 0, 0, 171, 0, 1022, 0, 0, 0,
	0, 0, 132, 143, 120, 121, 0, 0, 0, 0,
	0, 0, 81, 1125, 0, 1128, 0, 0, 0, 0,
	0, 0, 0, 1141, 0, 0, 0, 0, 0, 0,
	0, 95, 96, 131, 0, 0, 1366, 0, 126, 110,
	0, 0, 0, 133, 145, 0, 175, 177, 1019, 0,
	0, 0, 0, 0, 0, 0, 194, 206, 0, 0,
	0, 0, 1149, 0, 1460, 0, 0, 2550, 0, 1575,
	2323, -2, -2, 253, 1575, 916, 0, 0, 2160, 2095,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 351,
	353, 354, 355, 0, 1187, 0, 361, 403, 1074, 2550,
	0, 0, 430, 425, 0, 427, 0, 0, 1124, 2550,
	1122, 2130, 0, 1146, 0, 1103, 2550, 2128, 0, 0,
	0, 1196, 2169, 1205, 1209, 1356, 0, 434, 0, 1372,
	1374, 0, 0, 1596, 0, 1598, 1538, 1463, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 259,
	0, 1574, 0, 0, 1575, 253, 2430, 296, 296, 1575,
	612, 1575, 614, 0, 0, 761, 762, 0, 296, 296,
	296, 768, 769, 771, 772, -2, -2, -2, 890, 774,
	775, 857, 0, 0, 0, 856, 787, 791, 0, 910,
	2438, 2452, 2506, 923, 857, 2244, 857, 2244, 857, 2244,
	802, 804, 807, 845, 853, 817, 822, 0, 0, 827,
	835, -2, 0, 837, 0, 839, 0, 841, 857, 858,
	861, 866, 869, 874, 0, 891, 892, 0, 0, 0,
	0, 0, 0, 902, 903, 0, 0, 1142, 0, 1317,
	1493, 1419, 593, 1410, 1492, 1411, 1418, 1421, 0, 0,
	1423, 0, 1425, 0, 1488, 1489, 1496, 1497, 0, 1507,
	1508, 1500, 0, -2, 0, 0, 1503, 1504, 1429, 0,
	1446, 1447, 1448, 1477, 1480, 1224, 0, 2684, 1737, 1611,
	1738, 1739, 2114, 0, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, -2, -2, -2, -2, -2, -2,
	-2, -2, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, -2, -2, -2, 1778, 1779, -2, 2013,
	2015, 0, 2078, 0, -2, 0, -2, -2, -2, -2,
	1798, 0, 1800, 1805, 1807, 1809, 0, 0, 0, 0,
	2077, 1819, 2061, 2062, 0, 0, 1992, 1993, 1994, 1804,
	0, 1823, 2076, 2073, 0, 0, 2025, 1476, 1882, 0,
	0, 0, 0, 1889, 1874, 2023, 0, 2022, 0, 0,
	0, 2033, 0, 2068, 2064, 0, 2112, 1732, 1719, 1720,
	1721, 1722, 1723, 1724, 1734, 0, 2109, 2146, 2152, 1966,
	0, 0, 0, 1919, 1920, 1921, 1922, 1923, 0, 1925,
	1926, 0, 1928, 1929, 0, 1931, 1932, 0, 1934, 1935,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 1633, 0, 0, 0, 1637, 0, 0, 0,
	1641, 0, 0, 0, 1645, 0, 0, 0, 1649, 0,
	0, 0, 1653, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 1938, 0, 2036, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1940, 0, 1942, 2027, 2047, 0,
	0, 1824, 0, 0, 0, 1990, 0, 1945, 2027, 2055,
	0, 0, 0, 0, 0, 2027, 0, 2060, 0, 1952,
	0, 1954, 1455, 0, 0, 1606, 0, 0, 0, 2082,
	1606, 1606, 0, 1519, 0, 0, 1582, 1583, 1584, 1585,
	0, 0, 1586, 0, 1576, 1580, 1577, 1578, 1572, 1535,
	0, 0, 2116, 1572, 1541, 1571, 0, 1103, 1561, 1572,
	1572, 0, -2, 1545, 1562, 0, 0, 538, 540, 542,
	546, 548, 0, 0, 1476, -2, 0, -2, 1102, 0,
	0, 0, 0, 557, 559, 0, 0, 482, 0, 0,
	551, 0, 554, 0, 1607, 1610, 0, 0, 1621, 1627,
	1628, 0, -2, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 492, 184, 464, 0, 184,
	184, 473, 0, 0, 184, 484, 184, 2137, 184, 2135,
	285, 489, 1402, 217, 0, 628, 0, 1326, 1335, 0,
	659, 0, 661, 0, 2103, 2107, 2104, 2108, 0, 650,
	0, 0, 0, 0, 1276, 0, 1231, 0, 0, 0,
	0, 0, 0, 151, 2550, 0, 186, 0, 0, 1067,
	2122, 0, 1059, 0, 0, 2263, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1126, 1127, 1129, 1136, 1138, 0, 1132, 2110,
	0, 0, 1133, 0, 1135, 1137, 1139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1365,
	1366, 0, 0, 0, 119, 123, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 1181, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 0, 0, -2, 0, 0,
	0, 0, 0, 227, 0, 287, 2088, 2098, 0, 941,
	942, 317, 320, 323, 326, 223, 0, 357, 0, 0,
	989, 964, 0, 0, 412, 296, 0, 0, 426, 2139,
	949, 1120, 1123, 0, 1103, 2550, 1160, 0, 0, 0,
	0, 0, 0, 1194, 0, 0, 2550, 2117, 2168, 2169,
	1358, 1366, 0, 1606, 0, 1388, 1375, 0, 0, 0,
	1388, 1392, 1393, 1395, 1396, 0, 0, 1597, 1603, 500,
	550, 1463, 1463, 296, 294, 2383, 292, 289, 291, 0,
	0, 0, 990, 992, 993, 994, 186, 0, 2169, 1059,
	2312, 2169, 0, 1378, 1380, 0, 247, 0, 256, 1575,
	254, 259, 0, 0, 0, 424, 611, 616, 756, 0,
	296, 764, 765, 766, 809, 847, 855, 776, 778, 779,
	780, 0, 0, 924, 920, 921, 922, 793, 857, 796,
	857, 799, 857, 820, 824, 829, 836, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 0, 896, 897,
	898, 900, 905, 904, 909, 1594, 1414, 1415, 1417, 0,
	1426, 0, 0, 1502, -2, -2, 1501, 1505, 1506, -2,
	-2, -2, -2, 1422, 0, 1431, 1428, 0, 1487, 1222,
	1223, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1820, 0, -2, 1799, 1802, 1806, 1808, 1810, 0, 0,
	0, 0, 0, 0, 2016, 0, 2018, 1821, 2071, 2074,
	1988, 0, 0, 1475, 1476, 1476, 0, 1888, 0, 2024,
	0, 2031, 2032, 0, 1881, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 1924, 1927, 1930, 1933, 0, 0, 0, 0, 1913,
	0, 0, 0, 1917, 1687, 1673, 0, 1715, 1713, 1714,
	1708, 1715, 1712, 1665, 0, 1630, 1631, 1632, 1634, 1635,
	1636, 1638, 1639, 1640, 1642, 1643, 1644, 1646, 1647, 1648,
	1650, 1651, 1652, 1654, 1655, 1656, 1658, 1659, 1660, 1664,
	0, 1937, 0, 1939, 1941, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1828, 1829, 1944, 2053, 2054, 0, 0, 0,
	0, 0, 0, 1950, 0, 2059, 1951, 1953, 1463, 0,
	1456, 0, 1521, 1510, 1605, 0, 2080, 1575, 1523, 1525,
	2081, 2119, 1510, 1510, 0, 2028, 0, 0, 1566, 0,
	0, 0, 1568, 1539, 0, 0, 1533, 0, 1529, 1530,
	1531, 1532, 1540, 1103, 1570, 1542, 1546, 2146, 0, 1572,
	0, 1557, 0, 1559, 1592, 0, 1551, 1554, 0, 0,
	2161, 1606, 0, 328, 332, 333, 329, 330, 331, 566,
	0, 0, 0, 0, 2030, 0, 1612, 0, 1618, 0,
	0, 0, 0, 572, 0, 0, 0, 200, 1400, 379,
	463, 184, 468, 471, 2086, 184, 477, 480, 486, 213,
	0, 624, -2, 657, 658, 660, 0, 656, 148, 1277,
	0, 0, 1227, 1229, 2133, 1233, 0, 0, 0, 0,
	0, 1254, 0, 153, 2550, 162, 0, 1038, 0, 2120,
	0, 0, 0, 0, 0, 0, 1279, 0, 0, 2550,
	184, 2550, 184, 165, 167, 170, 0, 174, 172, 0,
	1026, 0, 0, 1029, 109, 1277, 0, 0, 112, 116,
	124, 0, 0, 0, 130, 0, 0, 0, 1256, 1260,
	1268, 0, 0, 0, 1130, 1131, 1134, 1140, 82, 0,
	0, 0, 1264, 1266, 1272, 92, 93, 2131, 94, 0,
	1226, 0, 0, 0, 0, 176, 114, 118, 125, 0,
	1274, 111, 0, 198, 0, 0, 0, 190, 0, 191,
	192, 207, 0, 184, 2550, 0, 952, 953, 1182, 1144,
	1145, 0, 1150, 0, 0, 0, 0, 1575, 219, 0,
	1575, 227, 0, 2094, 0, 345, 0, 0, 0, 0,
	988, 1085, 0, 959, 0, 0, 0, 418, 414, 0,
	423, 429, 428, -2, 0, 0, 0, 0, -2, 0,
	0, 1198, 1192, 1193, 0, 0, 0, 0, 2550, 1360,
	1366, 0, 1461, 1476, 433, 1367, 1388, 0, 0, 0,
	1377, 1373, 1370, 1606, 0, 0, 0, 0, 0, 1599,
	1602, 503, 504, 271, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 995, 999, 0, 2169, 2169, 0, 2124,
	0, 0, 0, 0, 257, 0, 260, 0, 0, 0,
	265, 266, 267, 268, 269, 259, 249, 1575, 0, 0,
	613, 0, 0, 763, 0, 786, 795, 797, 800, 838,
	840, 857, 883, 884, 1016, 0, 1016, 0, 0, 901,
	1424, 0, 1499, 1430, 1481, 1482, 0, 1224, 0, 1740,
	1783, 0, 0, -2, 0, 0, 1787, 0, 0, 0,
	-2, 0, 0, 0, 2017, 2019, 0, 2073, 1883, 0,
	0, 0, 1887, 1871, 1872, 0, 1991, 2034, 2063, 2067,
	0, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 0, 2113,
	2147, 2151, 1964, 1965, 1969, 2127, 0, 0, 0, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 1706, 1710,
	0, 0, 2035, 2046, 2048, 1825, 1826, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, -2, -2, -2,
	1843, 1844, 1845, -2, -2, -2, 0, 0, 0, 2049,
	2051, 2052, 2056, 2057, 0, 1947, 1948, 1949, 2058, 0,
	1463, 1457, 1518, 0, 1604, 1522, 0, 1518, 1518, 1470,
	1564, 0, 0, 1588, 0, 1536, 0, 1537, 0, 1569,
	0, 1544, 1547, 1548, 1558, 0, 1550, 0, 1553, 0,
	1883, -2, 297, 298, 300, 0, 303, 569, 570, 568,
	552, 0, 0, 1614, 0, 0, 1690, 1694, 1718, 575,
	576, 574, 465, 474, 215, 0, 1573, 0, 0, 0,
	0, 2199, 1244, 1245, 0, 2567, 1249, 0, 0, 0,
	0, 185, 1036, 1066, 0, 0, 0, 1058, 0, 0,
	1072, 155, 0, 0, 0, 163, 0, 0, 160, 0,
	169, 173, 1023, 0, 0, 0, 0, 1232, 0, 0,
	0, 127, 128, 129, 0, 134, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 1351, 0, 1345,
	0, 0, 0, 187, 0, 0, 0, 1221, 0, 0,
	209, 0, 0, 0, 1185, 1186, 1257, 1261, 1269, 0,
	0, 0, 227, 225, 0, 228, 0, 231, 232, 0,
	227, 221, 0, 0, 1103, 358, 962, 1073, 0, 1075,
	0, 960, 0, 0, 1074, 410, 0, 417, 0, 0,
	1124, 0, 0, 1147, 1158, 1103, 0, 1197, 1199, 0,
	1207, 0, 0, 0, 1362, 1366, 0, 1355, 1356, 1495,
	1368, 1386, -2, 0, 0, 1476, 1394, 1391, 1397, 1398,
	0, 293, 0, 288, 290, 0, 274, 0, 0, 991,
	996, 0, 0, 0, 0, 0, 1379, 1381, 0, 0,
	0, 0, 0, 0, 248, 259, 251, 280, 0, 757,
	781, 848, 885, 1015, 0, 0, 887, 0, 0, 1498,
	1485, 1486, 1483, 1224, 1785, 1789, 0, 0, 0, 1791,
	-2, 0, 1813, -2, -2, 2020, 2072, 1862, 1476, 1884,
	1886, 1873, 2066, 1735, 0, 1971, 1968, 0, 1955, 0,
	1908, 1909, 0, 0, 1912, 1914, 1915, 1916, 1674, 1667,
	1666, 2045, 0, 0, 0, 0, 1946, 1458, 0, 1960,
	0, 0, 1526, 1960, 1960, 1565, 0, 1567, 1534, 1527,
	0, 2147, 1560, 1552, 0, 0, 301, 0, 1608, 1613,
	0, 1619, 1689, 216, 149, 150, 1236, 1237, 1239, 1240,
	0, 0, 1246, 1247, 0, 1252, 152, 0, 1037, 0,
	1040, 0, 0, 0, 0, 1047, 1059, 0, 0, 0,
	0, 0, 1060, 0, 1089, 0, 1212, 1219, 0, -2,
	0, 0, 0, 157, 179, 0, 0, 1278, 0, 0,
	184, 184, 0, 0, 1228, 1230, 1255, 0, 0, 0,
	0, 137, 0, 0, 1258, 1262, 1270, 1265, 1267, 1273,
	0, 1352, 0, 0, 1275, 196, 197, 0, 184, 0,
	189, 184, 184, 1221, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 220, 286, 227, 0, 1010, 0, 1085,
	1077, 1078, 1079, 0, 1084, 1086, 0, 0, 976, 961,
	0, 972, 0, 0, 989, 964, 0, 415, 950, 1121,
	1155, 1103, 0, 1189, 0, 0, 0, 0, 0, 0,
	0, 1364, 1366, 0, 1357, 1358, 1388, 1494, 0, 0,
	0, 1376, 1495, 0, 295, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 261, 0, 262, 263,
	264, 250, 615, 617, 0, 0, 623, 1014, 0, 0,
	0, 0, 1484, 1793, -2, -2, 1814, 0, 2148, 2150,
	1476, 0, 1957, 1478, 0, 0, -2, 0, 0, 0,
	1459, 1442, 0, 1517, 1509, 1511, 1513, 2441, 2240, 2549,
	1443, 1444, 1587, 0, 1555, 302, 0, 1615, 0, 0,
	1241, 1242, 0, 0, 0, 154, 0, 1041, 1042, 2123,
	1044, 0, 1046, 1048, 1049, 1050, 0, 1053, 2171, 0,
	1057, 0, 1068, 1090, 0, 1099, 0, 1214, 1224, 1218,
	0, 1216, 1101, 0, 156, 158, 178, 1221, 0, 159,
	168, 0, 0, 113, 0, 0, 2235, 140, 138, 136,
	1225, 115, 0, 198, 208, 1220, 193, 210, 184, 0,
	1259, 1263, 1271, 229, 0, 230, 233, 0, 0, 1025,
	0, 963, 1076, 0, 1087, 1088, 966, 0, 965, 0,
	0, 0, 0, 0, 416, 419, 0, 422, 0, 0,
	1200, 1198, 0, 1206, 0, 0, 0, 1344, 0, 0,
	1359, 1360, 431, 1382, 0, 0, 1388, 1399, 273, 0,
	0, 997, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 998, 1101, 0, 0, 1065, 0, 278, 258, 0,
	619, 0, 621, 0, 886, 888, 0, 0, 1885, 1975,
	0, 0, 1910, 1911, -2, 0, 1851, 1959, 1961, 0,
	0, 0, 0, 0, 1528, 1609, 1234, 0, 1238, 0,
	1248, 1250, 0, 1253, 1039, 1043, 0, 0, 0, 1107,
	0, 0, 1061, 0, 1093, 1094, 1010, 0, 1095, 1096,
	1097, 1213, 1487, 1219, 1010, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 188, 211, 1221, 226, 243,
	0, 1156, 964, 1024, 0, 0, 974, 0, 977, 0,
	973, 970, 971, 962, 0, 420, 421, 0, 1159, 0,
	0, 1207, 0, 0, 1347, 1343, 1366, 1361, 1362, 1606,
	1385, 1389, 0, 0, 1099, 1101, 964, 0, 618, 0,
	0, 893, 894, 0, 0, 0, 0, 1970, 1479, 1852,
	0, 0, 1512, 1514, 1515, 1516, 1235, 1243, 1251, 0,
	0, 1052, 1112, 0, 0, 0, 1091, 1092, 1021, 0,
	1217, 1215, 1070, 0, 1103, 161, 0, 1101, 0, 1030,
	0, 0, 1033, 0, 0, 141, 2235, 139, 0, 184,
	246, 0, 240, 238, 239, 966, 0, 0, 1081, 1083,
	0, 978, 1010, 976, 1157, 1190, 1101, 0, 1099, 0,
	1354, 1366, 1348, 1349, 0, 1364, 0, 296, 296, 1010,
	1099, 1606, 0, 296, 620, 622, 1967, 1987, 1976, -2,
	2509, 2241, 0, 1987, 1987, 1962, 1963, 0, 0, 1054,
	1108, 1109, 0, 1104, 1105, 1106, 2170, 1055, 1056, 1089,
	1020, 0, 0, 1107, 180, 1010, 1027, 0, 0, 1028,
	0, 0, 144, 0, 146, 212, 234, 0, 0, 958,
	0, 1080, 0, 0, 0, 0, 1025, 966, 1099, 0,
	1010, 0, 1340, 1353, 0, 1363, 1344, 0, 275, 276,
	1021, 1010, 1064, 277, 1972, 0, 0, 1978, 1979, 1980,
	1981, 1982, 1973, 1974, 1045, 0, 1110, 0, 1111, 0,
	0, 0, 1606, 1098, 0, 1112, 166, 1031, 0, 1034,
	0, 142, 0, 241, 242, 955, 957, 0, 1082, 967,
	0, 969, 964, 975, 1010, 0, 1021, 0, 1346, 2132,
	1347, 1383, 0, 964, 1021, 0, 1984, 1985, 0, 0,
	0, 1113, 0, 1116, 1117, 0, 1114, 1069, 0, 1089,
	0, 0, 0, 0, 968, 966, 1021, 1101, 964, 1099,
	1354, 0, 1606, 964, 1983, 1986, 1977, 1051, 1115, 1118,
	1119, 1100, 1071, 0, 0, 244, 0, 1013, 958, 964,
	1099, 1606, 1010, 1341, 1606, 1062, 1606, 1018, 0, 0,
	1009, 1011, 1012, 956, 1606, 1010, 1203, 1021, 1384, 1063,
	1032, 1017, 0, 245, 1201, 1021, 964, 0, 964, 1606,
	0, 1606, 1204, 1018, 1202, 1035,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 566, 3, 572, 567, 3,
	577, 578, 570, 568, 582, 569, 579, 571, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 585, 3,
	558, 560, 559, 563, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 575, 3, 576, 573, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 583, 565, 584, 561,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 562, 57901, 564, 57902, 574, 57903, 580, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1294
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1321
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1401
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1427
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1737
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1766
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1776
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1785
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1796
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1956
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1962
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2014
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2168
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2172
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2175
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2210
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2215
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2222
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2230
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2261
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = nil
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = nil
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2622
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2666
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2746
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2755
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2761
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2766
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2771
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2776
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2781
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2785
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2804
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2812
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = nil
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2888
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3040
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3052
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3071
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3076
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3088
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3090
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3092
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3094
		{
			return helpWith(sqllex, "CREATE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "create access method")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplemented(sqllex, "create cast")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplemented(sqllex, "create operator")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplemented(sqllex, "create publication")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3123
		{
			return unimplemented(sqllex, "create rule")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3124
		{
			return unimplemented(sqllex, "create server")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3132
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3135
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3136
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3139
		{
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3140
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3150
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3151
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3154
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return unimplemented(sqllex, "drop server")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3160
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3168
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3172
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3173
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3174
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3242
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3281
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3316
		{

			sqlVAL.union.val = nil
		}
	case 431:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			return helpWith(sqllex, "DELETE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3344
		{
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3370
		{
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "DROP")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3570
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3636
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3668
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "DELETE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "INSERT")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "DELETE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "INSERT")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3745
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3778
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "GRANT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3922
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "RESET")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "RESET")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "USE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3996
		{
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "USE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4180
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4220
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			return unimplemented(sqllex, "set from current")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = tree.Low
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = tree.Normal
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.High
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4416
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4420
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4430
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.str = "client_encoding"
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.str = "timezone"
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4485
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4548
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4557
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4694
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = true
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = true
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = false
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4902
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = false
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4972
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = true
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = false
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5019
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5045
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5050
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5066
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5109
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5117
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5149
		{
		}
	case 893:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5158
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5181
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5262
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5402
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5454
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5503
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5504
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5515
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{
			return helpWith(sqllex, "RESUME")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5647
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5686
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5702
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5731
		{

			sqlVAL.union.val = nil
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5737
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.str = ""
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = nil
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5770
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5774
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 974:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5800
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5814
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5829
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5831
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5912
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5923
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5930
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5936
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5957
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.str = ""
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6200
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = true
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = false
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6235
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6236
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6336
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6374
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6389
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6454
		{
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6457
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6458
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6459
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6615
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6624
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6632
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6643
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6648
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6661
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6673
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6686
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6711
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{

			sqlVAL.union.val = true
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = false
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6751
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6765
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6777
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6789
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6799
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = nil
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6919
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6920
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6947
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6949
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6951
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6953
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6955
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6993
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7011
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7030
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7047
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7064
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = false
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = true
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = false
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = true
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = false
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7128
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.str = ""
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.str = ""
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7201
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7207
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7509
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7515
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7527
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7533
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7547
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7553
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7570
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7571
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7574
		{
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7575
		{
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7586
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7604
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7634
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7642
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7663
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7671
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7682
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7686
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7687
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7688
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7712
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7730
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7741
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7761
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7762
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7803
		{
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7805
		{
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7809
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.str = ""
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7922
		{

		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7937
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.str = ""
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.str = ""
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.str = ""
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.str = ""
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7992
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8006
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8053
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8066
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8115
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8142
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8146
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8237
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8252
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8396
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8432
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8433
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8554
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = true
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = false
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8608
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = nil
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8622
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = true
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = false
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = false
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = true
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8652
		{
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8718
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8723
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8752
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8785
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8840
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8844
		{
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8879
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8880
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8913
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8950
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9002
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9041
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9051
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9086
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9097
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9127
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9160
		{
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = nil
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = true
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = false
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.str = tree.AstFull
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.str = tree.AstRight
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.str = tree.AstInner
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9280
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.str = tree.AstHash
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.str = ""
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9394
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = true
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = false
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = true
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9456
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9464
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9483
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9493
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9513
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9574
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9580
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9581
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9583
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9585
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9587
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9589
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9591
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9593
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9595
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9597
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9599
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9600
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9603
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9604
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9605
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9607
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = types.Geography
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9624
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9632
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9666
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = nil
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = types.Int2
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = types.Int
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = types.Float4
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = types.Float
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9725
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = types.Bool
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = types.Float
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9758
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9764
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9786
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = types.String
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = true
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = false
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = types.Date
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9835
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9843
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9857
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9874
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9891
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = true
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = false
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = false
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = types.Interval
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9915
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10014
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = nil
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10044
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10104
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10422
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10444
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10643
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10693
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10723
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10734
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10735
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10759
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10825
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10950
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11021
		{
			return unimplemented(sqllex, "treat")
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.str = ""
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11183
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11196
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11293
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = tree.Any
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = tree.Some
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = tree.All
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = tree.Div
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = tree.LT
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = tree.GT
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = tree.LE
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = tree.GE
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = tree.NE
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = tree.Like
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11655
		{
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11735
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11824
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11853
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11873
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12086
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12099
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12106
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.str = ""
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
